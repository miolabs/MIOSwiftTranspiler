{
  "<<": {
    "precedence": "BitwiseShiftPrecedence",
    "word": "bitwiseLeftShift"
  },
  ">>": {
    "precedence": "BitwiseShiftPrecedence",
    "word": "bitwiseRightShift"
  },
  "*": {
    "precedence": "MultiplicationPrecedence",
    "word": "multiply"
  },
  "/": {
    "precedence": "MultiplicationPrecedence",
    "word": "divide"
  },
  "%": {
    "precedence": "MultiplicationPrecedence",
    "word": "remainder"
  },
  "&*": {
    "precedence": "MultiplicationPrecedence",
    "word": "multiplyIgnoringOverflow"
  },
  "&": {
    "precedence": "MultiplicationPrecedence",
    "word": "bitwiseAND",
    "codeReplacementPrefix": {
      "ts": "{get: () => #A1, set: $val => #SA1}"
    }
  },
  "+": {
    "precedence": "AdditionPrecedence",
    "word": "add"
  },
  "-": {
    "precedence": "AdditionPrecedence",
    "word": "subtract"
  },
  "&+": {
    "precedence": "AdditionPrecedence",
    "word": "addWithOverflow"
  },
  "&-": {
    "precedence": "AdditionPrecedence",
    "word": "subtractWithOverflow"
  },
  "|": {
    "precedence": "AdditionPrecedence",
    "word": "bitwiseOR"
  },
  "^": {
    "precedence": "AdditionPrecedence",
    "word": "bitwiseXOR"
  },
  "..<": {
    "precedence": "RangeFormationPrecedence",
    "word": "halfOpenRange"
  },
  "...": {
    "precedence": "RangeFormationPrecedence",
    "word": "closedRange"
  },
  "is": {
    "precedence": "CastingPrecedence",
    "word": "typeCheck"
  },
  "as": {
    "precedence": "CastingPrecedence",
    "word": "typeCast"
  },
  "as?": {
    "precedence": "CastingPrecedence",
    "word": "typeCastOptional"
  },
  "as!": {
    "precedence": "CastingPrecedence",
    "word": "typeCastUnwrapping"
  },
  "??": {
    "precedence": "NilCoalescingPrecedence",
    "word": "nilCoalescing",
    "codeReplacementInfix": {
      "ts": "((_.$nilCoalescing = #A0) != null ? _.$nilCoalescing : #A1)",
      "java": "(#A0 != null ? #A0 : #A1)"
    }
  },
  "<": {
    "precedence": "ComparisonPrecedence",
    "word": "lessThan",
    "result": "Bool"
  },
  "<=": {
    "precedence": "ComparisonPrecedence",
    "word": "lessThanOrEqual",
    "result": "Bool"
  },
  ">": {
    "precedence": "ComparisonPrecedence",
    "word": "greaterThan",
    "result": "Bool"
  },
  ">=": {
    "precedence": "ComparisonPrecedence",
    "word": "greaterThanOrEqual",
    "result": "Bool"
  },
  "==": {
    "precedence": "ComparisonPrecedence",
    "word": "equal",
    "result": "Bool"
  },
  "!=": {
    "precedence": "ComparisonPrecedence",
    "word": "notEqual",
    "result": "Bool"
  },
  "===": {
    "precedence": "ComparisonPrecedence",
    "word": "identical",
    "result": "Bool"
  },
  "!==": {
    "precedence": "ComparisonPrecedence",
    "word": "notIdentical",
    "result": "Bool"
  },
  "~=": {
    "precedence": "ComparisonPrecedence",
    "word": "patternMatch"
  },
  "&&": {
    "precedence": "LogicalConjunctionPrecedence",
    "word": "logicalAND",
    "result": "Bool"
  },
  "||": {
    "precedence": "LogicalDisjunctionPrecedence",
    "word": "logicalOR",
    "result": "Bool"
  },
  "?:": {
    "precedence": "TernaryPrecedence",
    "word": "ternaryConditional"
  },
  "=": {
    "precedence": "AssignmentPrecedence",
    "word": "assign",
    "result": "Void"
  },
  "*=": {
    "precedence": "AssignmentPrecedence",
    "word": "multiplyAndAssign",
    "result": "Void"
  },
  "/=": {
    "precedence": "AssignmentPrecedence",
    "word": "divideAndAssign",
    "result": "Void"
  },
  "%=": {
    "precedence": "AssignmentPrecedence",
    "word": "remainderAndAssign",
    "result": "Void"
  },
  "+=": {
    "precedence": "AssignmentPrecedence",
    "word": "addAndAssign",
    "result": "Void"
  },
  "-=": {
    "precedence": "AssignmentPrecedence",
    "word": "subtractAndAssign",
    "result": "Void"
  },
  "<<=": {
    "precedence": "AssignmentPrecedence",
    "word": "leftBitShiftAndAssign",
    "result": "Void"
  },
  ">>=": {
    "precedence": "AssignmentPrecedence",
    "word": "rightBitShiftAndAssign",
    "result": "Void"
  },
  "&=": {
    "precedence": "AssignmentPrecedence",
    "word": "bitwiseANDAndAssign",
    "result": "Void"
  },
  "|=": {
    "precedence": "AssignmentPrecedence",
    "word": "bitwiseORAndAssign",
    "result": "Void"
  },
  "^=": {
    "precedence": "AssignmentPrecedence",
    "word": "bitwiseXORAndAssign",
    "result": "Void"
  },
  "++": {
    "word": "increment"
  },
  "--": {
    "word": "decrement"
  },
  "!": {
    "word": "logicalNOT",
    "result": "Bool"
  },
  "~": {
    "word": "bitwiseNOT"
  }
}
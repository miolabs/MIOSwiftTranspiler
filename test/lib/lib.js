var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var SwiftIterator = /** @class */ (function () {
    function SwiftIterator(_currentToNext) {
        this._current = 0;
        this._currentToNext = _currentToNext;
    }
    SwiftIterator.prototype.next = function () { return this._currentToNext(this._current++); };
    return SwiftIterator;
}());
var _DefaultEnumImplementation = /** @class */ (function () {
    function _DefaultEnumImplementation() {
    }
    _DefaultEnumImplementation.infix_61_61 = function ($info, a, b) { return (a && a.rawValue) == (b && b.rawValue); };
    _DefaultEnumImplementation.infix_33_61 = function ($info, a, b) { return !this.infix_61_61($info, a, b); };
    return _DefaultEnumImplementation;
}());
//{Self:SNA2, T: {Self:SNA1, T: String}}
function _clarifyGenerics(Class) {
    var _a;
    if (!Class.Self)
        return Class;
    var result = Class.Self;
    for (var genericKey in Class) {
        if (genericKey === 'Self')
            continue;
        //let genericType = _clarifyGenerics(Class[genericKey])
        var genericType = Class[genericKey];
        for (var key in result) {
            var prop = Object.getOwnPropertyDescriptor(result, key);
            prop = (prop || {}).value;
            if (!(prop instanceof Object) || prop.$genericType !== genericKey)
                continue;
            var resultType = genericType;
            if (prop.$subchain) {
                var subchain = prop.$subchain.split('.');
                for (var _i = 0, subchain_1 = subchain; _i < subchain_1.length; _i++) {
                    var elem = subchain_1[_i];
                    resultType = resultType[elem];
                }
            }
            result = __assign({}, result, (_a = {}, _a[key] = resultType, _a));
        }
    }
    result = __assign({}, result, { Self: result });
    return result;
}
function _cloneStruct(obj) {
    if (!(obj instanceof Object) || obj instanceof String || obj instanceof Number || obj instanceof Bool || !obj.constructor.$struct)
        return obj;
    var cloned = new obj.constructor();
    if (obj.cloneStructFill) {
        cloned.cloneStructFill(null, obj);
    }
    else {
        for (var prop in obj) {
            if (!obj.hasOwnProperty(prop))
                continue;
            cloned[prop] = _cloneStruct(obj[prop]);
        }
    }
    return cloned;
}
function _create(Class, signature, $info) {
    var params = [];
    for (var _i = 3; _i < arguments.length; _i++) {
        params[_i - 3] = arguments[_i];
    }
    var obj;
    if (!$info)
        $info = {};
    if (!$info.Self)
        $info.Self = Class;
    $info.$setThis = function ($val) { return obj = $val; };
    params.unshift($info);
    if (Class.$mixin) {
        if (!Class.prototype[signature])
            throw "unsupported signature " + signature + " for " + Class.name;
        obj = Class.prototype[signature].apply(new Class(), params);
        if (obj == null)
            throw "unsupported signature or null argument passed " + signature + " for " + Class.name;
        obj['$info' + Class.$infoAddress] = $info;
        if (obj.init$vars)
            obj.init$vars();
    }
    else {
        obj = new Class();
        obj['$info' + Class.$infoAddress] = $info;
        if (obj.init$vars)
            obj.init$vars();
        if (!obj[signature])
            throw "unsupported signature " + signature + " for " + Class.name;
        obj[signature].apply(obj, params);
    }
    obj.$initialized = true;
    //WRAP_OPTIONALS
    //if(obj.$failed) return Optional.none
    //if(Class[signature + '$failable']) obj = _injectIntoOptional(obj)
    //!WRAP_OPTIONALS
    if (obj.$failed)
        return null;
    if (Class[signature + '$failable'])
        obj = obj;
    return obj;
}
function _findStringSwitchCaseCasesString($info, cases, string) { return cases.indexOf(string); }
function _injectIntoOptional(val) {
    return val == null ? Optional.none : Optional.some({}, val);
}
var PROTOCOL_DEFAULT_IMPLEMENTATION_PRIORITY = {
    "ClosedRange.makeIterator": "Collection$implementation",
    "Range.makeIterator": "Collection$implementation"
};
function _mixin(dest, source, shouldOverride) {
    var properties = Object.getOwnPropertyNames(source.prototype);
    for (var _i = 0, properties_1 = properties; _i < properties_1.length; _i++) {
        var name_1 = properties_1[_i];
        if (name_1 == 'constructor')
            continue;
        /*
        if(name === '' && dest.prototype.constructor.name === '') {
            console.log(name in dest.prototype, source.prototype.constructor.name)
            console.log(source.prototype[name])
        }
        */
        var proceed = !(name_1 in dest.prototype);
        if (!proceed) {
            var prioritisedClass = PROTOCOL_DEFAULT_IMPLEMENTATION_PRIORITY[dest.prototype.constructor.name + '.' + name_1];
            if (prioritisedClass)
                proceed = source.prototype.constructor.name === prioritisedClass;
            else
                proceed = shouldOverride;
        }
        if (proceed) {
            Object.defineProperty(dest.prototype, name_1, Object.getOwnPropertyDescriptor(source.prototype, name_1));
        }
    }
    _mixinStatic(dest, source, shouldOverride);
}
function _mixinStatic(dest, source, shouldOverride) {
    var staticProperties = Object.getOwnPropertyNames(source);
    var commonProperties = Object.getOwnPropertyNames(function () { });
    for (var _i = 0, staticProperties_1 = staticProperties; _i < staticProperties_1.length; _i++) {
        var name_2 = staticProperties_1[_i];
        if (commonProperties.includes(name_2))
            continue;
        if (shouldOverride || !(name_2 in dest)) {
            Object.defineProperty(dest, name_2, Object.getOwnPropertyDescriptor(source, name_2));
        }
    }
}
//WRAP_OPTIONAL
//function _optionalTry(expr) { try { return expr() } catch(e) { return Optional.none } }
//!WRAP_OPTIONAL
function _optionalTry(expr) { try {
    return expr();
}
catch (e) {
    return null;
} }
//legacy for _.tmp = ...
var _ = {};
/*Swift.(file).min(_:T,_:T)*/
/*Swift.(file).min(_:T,_:T)*/
function min($info, x, y) {
    return ((_.arg0 = y).constructor.infix_60({}, _.arg0, x) ? y : x);
}
/*Swift.(file).min(_:T,_:T)*/
/*Swift.(file).min(_:T,_:T)*/
function min($info, x, y) {
    return ((_.arg0 = y).constructor.infix_60({}, _.arg0, x) ? y : x);
}
/*Swift.(file).max(_:T,_:T)*/
/*Swift.(file).max(_:T,_:T)*/
function max($info, x, y) {
    return ((_.arg0 = y).constructor.infix_62_61({}, _.arg0, x) ? y : x);
}
/*Swift.(file).max(_:T,_:T)*/
/*Swift.(file).max(_:T,_:T)*/
function max($info, x, y) {
    return ((_.arg0 = y).constructor.infix_62_61({}, _.arg0, x) ? y : x);
}
/*Swift.(file).assert(_:() -> Bool,_:() -> String,file:StaticString,line:UInt)*/
/*Swift.(file).assert(_:() -> Bool,_:() -> String,file:StaticString,line:UInt)*/
function assertFileLine($info, condition, message, file, line) {
    if ((Bool.prefix_33({}, condition({})))) {
    }
}
/*Swift.(file).precondition(_:() -> Bool,_:() -> String,file:StaticString,line:UInt)*/
/*Swift.(file).precondition(_:() -> Bool,_:() -> String,file:StaticString,line:UInt)*/
function preconditionFileLine($info, condition, message, file, line) {
    if ((Bool.prefix_33({}, condition({})))) {
        assertionFailureFileLine({}, function () { return message({}); }, '?3', '?3');
    }
}
/*Swift.(file).assertionFailure(_:() -> String,file:StaticString,line:UInt)*/
/*Swift.(file).assertionFailure(_:() -> String,file:StaticString,line:UInt)*/
function assertionFailureFileLine($info, message, file, line) {
    throw message({});
}
/*Swift.(file).preconditionFailure(_:() -> String,file:StaticString,line:UInt)*/
/*Swift.(file).preconditionFailure(_:() -> String,file:StaticString,line:UInt)*/
function preconditionFailureFileLine($info, message, file, line) {
    throw 'unsupported method Swift.(file).preconditionFailure(_:() -> String,file:StaticString,line:UInt) in ' + this.constructor.name;
}
/*Swift.(file).fatalError(_:() -> String,file:StaticString,line:UInt)*/
/*Swift.(file).fatalError(_:() -> String,file:StaticString,line:UInt)*/
function fatalErrorFileLine($info, message, file, line) {
    throw 'unsupported method Swift.(file).fatalError(_:() -> String,file:StaticString,line:UInt) in ' + this.constructor.name;
}
/*Swift.(file).unsafeBitCast(_:T,to:U.Type)*/
/*Swift.(file).unsafeBitCast(_:T,to:U.Type)*/
function unsafeBitCastTo($info, x, type) {
    throw 'unsupported method Swift.(file).unsafeBitCast(_:T,to:U.Type) in ' + this.constructor.name;
}
/*Swift.(file).==infix(_:(A, B, C, D, E, F),_:(A, B, C, D, E, F))*/
/*Swift.(file).==infix(_:(A, B, C, D, E, F),_:(A, B, C, D, E, F))*/
function infix_61_61($info, lhs, rhs) {
    return lhs == rhs;
}
/*Swift.(file).!=infix(_:(A, B, C, D, E, F),_:(A, B, C, D, E, F))*/
/*Swift.(file).!=infix(_:(A, B, C, D, E, F),_:(A, B, C, D, E, F))*/
function infix_33_61($info, lhs, rhs) {
    return lhs != rhs;
}
/*Swift.(file).==infix(_:(A, B, C, D, E, F),_:(A, B, C, D, E, F))*/
/*Swift.(file).==infix(_:(A, B, C, D, E, F),_:(A, B, C, D, E, F))*/
function infix_61_61($info, lhs, rhs) {
    return lhs == rhs;
}
/*Swift.(file).!=infix(_:(A, B, C, D, E, F),_:(A, B, C, D, E, F))*/
/*Swift.(file).!=infix(_:(A, B, C, D, E, F),_:(A, B, C, D, E, F))*/
function infix_33_61($info, lhs, rhs) {
    return lhs != rhs;
}
/*Swift.(file).==infix(_:(A, B, C, D, E, F),_:(A, B, C, D, E, F))*/
/*Swift.(file).==infix(_:(A, B, C, D, E, F),_:(A, B, C, D, E, F))*/
function infix_61_61($info, lhs, rhs) {
    return lhs == rhs;
}
/*Swift.(file).!=infix(_:(A, B, C, D, E, F),_:(A, B, C, D, E, F))*/
/*Swift.(file).!=infix(_:(A, B, C, D, E, F),_:(A, B, C, D, E, F))*/
function infix_33_61($info, lhs, rhs) {
    return lhs != rhs;
}
/*Swift.(file).unsafeDowncast(_:AnyObject,to:T.Type)*/
/*Swift.(file).unsafeDowncast(_:AnyObject,to:T.Type)*/
function unsafeDowncastTo($info, x, type) {
    throw 'unsupported method Swift.(file).unsafeDowncast(_:AnyObject,to:T.Type) in ' + this.constructor.name;
}
/*Swift.(file).getSwiftClassInstanceExtents(_:AnyClass)*/
/*Swift.(file).getSwiftClassInstanceExtents(_:AnyClass)*/
function getSwiftClassInstanceExtents($info, theClass) {
    throw 'unsupported method Swift.(file).getSwiftClassInstanceExtents(_:AnyClass) in ' + this.constructor.name;
}
/*Swift.(file).getObjCClassInstanceExtents(_:AnyClass)*/
/*Swift.(file).getObjCClassInstanceExtents(_:AnyClass)*/
function getObjCClassInstanceExtents($info, theClass) {
    throw 'unsupported method Swift.(file).getObjCClassInstanceExtents(_:AnyClass) in ' + this.constructor.name;
}
/*Swift.(file).type(of:T)*/
/*Swift.(file).type(of:T)*/
function typeOf($info, value) {
    throw 'unsupported method Swift.(file).type(of:T) in ' + this.constructor.name;
}
/*Swift.(file).withoutActuallyEscaping(_:ClosureType,do:(ClosureType) throws -> ResultType)*/
/*Swift.(file).withoutActuallyEscaping(_:ClosureType,do:(ClosureType) throws -> ResultType)*/
function withoutActuallyEscapingDo($info, closure, body) {
    throw 'unsupported method Swift.(file).withoutActuallyEscaping(_:ClosureType,do:(ClosureType) throws -> ResultType) in ' + this.constructor.name;
}
/*Swift.(file).==infix(_:(A, B, C, D, E, F),_:(A, B, C, D, E, F))*/
/*Swift.(file).==infix(_:(A, B, C, D, E, F),_:(A, B, C, D, E, F))*/
function infix_61_61($info, lhs, rhs) {
    return lhs == rhs;
}
/*Swift.(file).!=infix(_:(A, B, C, D, E, F),_:(A, B, C, D, E, F))*/
/*Swift.(file).!=infix(_:(A, B, C, D, E, F),_:(A, B, C, D, E, F))*/
function infix_33_61($info, lhs, rhs) {
    return lhs != rhs;
}
/*Swift.(file).!=infix(_:(A, B, C, D, E, F),_:(A, B, C, D, E, F))*/
/*Swift.(file).!=infix(_:(A, B, C, D, E, F),_:(A, B, C, D, E, F))*/
function infix_33_61($info, lhs, rhs) {
    return lhs != rhs;
}
/*Swift.(file).+=infix(_:_ContiguousArrayBuffer<Element>,_:C)*/
/*Swift.(file).+=infix(_:_ContiguousArrayBuffer<Element>,_:C)*/
function infix_43_61($info, lhs$inout, rhs) {
    var lhs = lhs$inout.get();
    var $result = (function () {
        var oldCount = lhs.count;
        var newCount = Int.infix_43({}, oldCount, numericCast({ T: Int, U: Int }, rhs.count));
        var buf;
        if ((_fastPath({}, Int.infix_60_61({}, newCount, lhs.capacity)))) {
            buf = _create(UnsafeMutableBufferPointer, 'initStartOptionalCountInt', {}, /*pointer_to_pointer*/ UnsafeMutablePointer.infix_43({}, lhs.firstElementAddress, oldCount), numericCast({ T: Int, U: Int }, rhs.count));
            lhs.count = newCount;
        }
        else {
            var newLHS = _create(_ContiguousArrayBuffer, 'init_uninitializedCountIntMinimumCapacityInt', {}, newCount, _growArrayCapacity({}, lhs.capacity));
            newLHS.firstElementAddress.moveInitializeFromCount({}, lhs.firstElementAddress, oldCount);
            lhs.count = 0;
            var $tuple_1 = { 0: newLHS, 1: lhs };
            lhs = $tuple_1[0];
            newLHS = $tuple_1[1];
            buf = _create(UnsafeMutableBufferPointer, 'initStartOptionalCountInt', {}, /*pointer_to_pointer*/ UnsafeMutablePointer.infix_43({}, lhs.firstElementAddress, oldCount), numericCast({ T: Int, U: Int }, rhs.count));
        }
        ;
        var $tuple = buf.initializeFrom({}, rhs), remainders = $tuple && $tuple[0], writtenUpTo = $tuple && $tuple[1];
        preconditionFileLine({}, function () { return Optional.wrappedEqualsOptionalNilComparisonType({}, remainders.next({ $setThis: function ($val) { return remainders = $val; } }), null); }, function () { return "rhs underreported its count"; }, '?3', '?3');
        preconditionFileLine({}, function () { return Int.infix_61_61({}, writtenUpTo, buf.endIndex); }, function () { return "rhs overreported its count"; }, '?3', '?3');
    })();
    lhs$inout.set(lhs);
    return $result;
}
/*Swift.(file).dump(_:T,to:TargetStream,name:String?,indent:Int,maxDepth:Int,maxItems:Int)*/
/*Swift.(file).dump(_:T,to:TargetStream,name:String?,indent:Int,maxDepth:Int,maxItems:Int)*/
function dumpToNameIndentMaxDepthMaxItems($info, value, target$inout, _name, indent, maxDepth, maxItems) {
    var target = target$inout.get();
    var $result = (function () {
        var maxItemCounter = maxItems;
        var visitedItems = _create(Dictionary, 'init', {});
        target._lock({ $setThis: function ($val) { return target = $val; } });
        var $defer = function () {
            target._unlock({ $setThis: function ($val) { return target = $val; } });
        };
        var $result = (function () {
            try {
                ;
                _dump_unlockedToNameIndentMaxDepthMaxItemCounterVisitedItems({}, value, { get: function () { return target; }, set: function ($val) { return target = $val; } }, _name, indent, maxDepth, { get: function () { return maxItemCounter; }, set: function ($val) { return maxItemCounter = $val; } }, { get: function () { return visitedItems; }, set: function ($val) { return visitedItems = $val; } });
                return value;
            }
            catch ($error) {
                $defer({});
                throw $error;
            }
        })();
        $defer({});
        return $result;
    })();
    target$inout.set(target);
    return $result;
}
/*Swift.(file).dump(_:T,name:String?,indent:Int,maxDepth:Int,maxItems:Int)*/
/*Swift.(file).dump(_:T,name:String?,indent:Int,maxDepth:Int,maxItems:Int)*/
function dumpNameIndentMaxDepthMaxItems($info, value, _name, indent, maxDepth, maxItems) {
    var stdoutStream = _create(_Stdout, 'init', {});
    return dumpToNameIndentMaxDepthMaxItems({}, value, { get: function () { return stdoutStream; }, set: function ($val) { return stdoutStream = $val; } }, _name, indent, maxDepth, maxItems);
}
/*Swift.(file).===infix(_:AnyObject?,_:AnyObject?)*/
/*Swift.(file).===infix(_:AnyObject?,_:AnyObject?)*/
function infix_61_61_61($info, lhs, rhs) {
    var $match = { 0: lhs, 1: rhs };
    if ((($match[0] != null && $match[1] != null))) {
        var l = $match[0];
        var r = $match[1];
        return ObjectIdentifier.infix_61_61({}, _create(ObjectIdentifier, 'initAnyObject', {}, l), _create(ObjectIdentifier, 'initAnyObject', {}, r));
    }
    else if ((($match[0] == null && $match[1] == null))) {
        return true;
    }
    else if (((true))) {
        return false;
    }
}
/*Swift.(file).!==infix(_:AnyObject?,_:AnyObject?)*/
/*Swift.(file).!==infix(_:AnyObject?,_:AnyObject?)*/
function infix_33_61_61($info, lhs, rhs) {
    return Bool.prefix_33({}, infix_61_61_61({}, lhs, rhs));
}
/*Swift.(file).%infix(_:T,_:T)*/
/*Swift.(file).%infix(_:T,_:T)*/
function infix_37($info, lhs, rhs) {
    return lhs % rhs;
}
/*Swift.(file).%=infix(_:T,_:T)*/
/*Swift.(file).%=infix(_:T,_:T)*/
function infix_37_61($info, lhs$inout, rhs) {
    lhs$inout.set(lhs$inout.get() % rhs);
}
/*Swift.(file).Hashable_isEqual_indirect(_:UnsafePointer<T>,_:UnsafePointer<T>)*/
/*Swift.(file).Hashable_isEqual_indirect(_:UnsafePointer<T>,_:UnsafePointer<T>)*/
function Hashable_isEqual_indirect($info, lhs, rhs) {
    return (_.arg0 = lhs.pointee).constructor.infix_61_61({}, _.arg0, rhs.pointee);
}
/*Swift.(file).Hashable_hashValue_indirect(_:UnsafePointer<T>)*/
/*Swift.(file).Hashable_hashValue_indirect(_:UnsafePointer<T>)*/
function Hashable_hashValue_indirect($info, value) {
    return value.pointee.hashValue;
}
/*Swift.(file).readLine(strippingNewline:Bool)*/
/*Swift.(file).readLine(strippingNewline:Bool)*/
function readLineStrippingNewline($info, strippingNewline) {
    throw 'unsupported method Swift.(file).readLine(strippingNewline:Bool) in ' + this.constructor.name;
}
/*Swift.(file).abs(_:T)*/
/*Swift.(file).abs(_:T)*/
function abs($info, x) {
    return (x.constructor.infix_60({}, x, _create(x.constructor, 'initIntegerLiteral', {}, 0)) ? x.constructor.prefix_45({}, x) : x);
}
/*Swift.(file).numericCast(_:T)*/
/*Swift.(file).numericCast(_:T)*/
function numericCast($info, x) {
    return _create($info.U, 'initT', {}, x);
}
/*Swift.(file).withExtendedLifetime(_:T,_:(T) throws -> Result)*/
/*Swift.(file).withExtendedLifetime(_:T,_:(T) throws -> Result)*/
function withExtendedLifetime($info, x, body) {
    var $defer = function () {
        _fixLifetime({}, x);
    };
    var $result = (function () {
        try {
            ;
            return body({}, x);
        }
        catch ($error) {
            $defer({});
            throw $error;
        }
    })();
    $defer({});
    return $result;
}
/*Swift.(file).withExtendedLifetime(_:T,_:(T) throws -> Result)*/
/*Swift.(file).withExtendedLifetime(_:T,_:(T) throws -> Result)*/
function withExtendedLifetime($info, x, body) {
    var $defer = function () {
        _fixLifetime({}, x);
    };
    var $result = (function () {
        try {
            ;
            return body({}, x);
        }
        catch ($error) {
            $defer({});
            throw $error;
        }
    })();
    $defer({});
    return $result;
}
/*Swift.(file).withUnsafeMutablePointer(to:T,_:(UnsafeMutablePointer<T>) throws -> Result)*/
/*Swift.(file).withUnsafeMutablePointer(to:T,_:(UnsafeMutablePointer<T>) throws -> Result)*/
function withUnsafeMutablePointerTo($info, value$inout, body) {
    throw 'unsupported method Swift.(file).withUnsafeMutablePointer(to:T,_:(UnsafeMutablePointer<T>) throws -> Result) in ' + this.constructor.name;
}
/*Swift.(file).withUnsafePointer(to:T,_:(UnsafePointer<T>) throws -> Result)*/
/*Swift.(file).withUnsafePointer(to:T,_:(UnsafePointer<T>) throws -> Result)*/
function withUnsafePointerTo($info, value$inout, body) {
    throw 'unsupported method Swift.(file).withUnsafePointer(to:T,_:(UnsafePointer<T>) throws -> Result) in ' + this.constructor.name;
}
/*Swift.(file).withUnsafePointer(to:T,_:(UnsafePointer<T>) throws -> Result)*/
/*Swift.(file).withUnsafePointer(to:T,_:(UnsafePointer<T>) throws -> Result)*/
function withUnsafePointerTo($info, value$inout, body) {
    throw 'unsupported method Swift.(file).withUnsafePointer(to:T,_:(UnsafePointer<T>) throws -> Result) in ' + this.constructor.name;
}
/*Swift.(file).tryReallocateUniquelyReferenced(buffer:Buffer,newMinimumCapacity:Int)*/
/*Swift.(file).tryReallocateUniquelyReferenced(buffer:Buffer,newMinimumCapacity:Int)*/
function tryReallocateUniquelyReferencedBufferNewMinimumCapacity($info, buffer$inout, newMinimumCapacity) {
    var buffer = buffer$inout.get();
    var $result = (function () {
        preconditionFileLine({}, function () { return _isBitwiseTakable({}, ((function () { throw '!unclarifiedGeneric:Header'; })())); }, function () { return String(); } /*!default_value*/, '?3', '?3');
        preconditionFileLine({}, function () { return _isBitwiseTakable({}, ((function () { throw '!unclarifiedGeneric:Element'; })())); }, function () { return String(); } /*!default_value*/, '?3', '?3');
        preconditionFileLine({}, function () { return isKnownUniquelyReferenced({}, { get: function () { return buffer; }, set: function ($val) { return buffer = $val; } }); }, function () { return String(); } /*!default_value*/, '?3', '?3');
        var newSizeInBytes = Int.infix_43({}, MemoryLayout.stride, Int.infix_42({}, newMinimumCapacity, MemoryLayout.stride));
        return withUnsafeMutablePointerTo({}, { get: function () { return buffer; }, set: function ($val) { return buffer = $val; } }, (function ($info, $0) { return $0.withMemoryReboundToCapacity({}, UnsafeMutableRawPointer, 1, (function ($info, $0) {
            var $ifLet0, reallocdObject_1;
            if ((($ifLet0 = _reallocObject({}, $0.pointee, newSizeInBytes)) || true) && $ifLet0 != null && ((reallocdObject_1 = $ifLet0) || true)) {
                $0.pointee = _cloneStruct(reallocdObject_1);
                return true;
            }
            else {
                return false;
            }
            ;
        })); }));
    })();
    buffer$inout.set(buffer);
    return $result;
}
/*Swift.(file).isKnownUniquelyReferenced(_:T?)*/
/*Swift.(file).isKnownUniquelyReferenced(_:T?)*/
function isKnownUniquelyReferenced($info, object$inout) {
    var object = object$inout.get();
    var $result = (function () {
        return _isUnique({}, { get: function () { return object; }, set: function ($val) { return object = $val; } });
    })();
    object$inout.set(object);
    return $result;
}
/*Swift.(file).isKnownUniquelyReferenced(_:T?)*/
/*Swift.(file).isKnownUniquelyReferenced(_:T?)*/
function isKnownUniquelyReferenced($info, object$inout) {
    var object = object$inout.get();
    var $result = (function () {
        return _isUnique({}, { get: function () { return object; }, set: function ($val) { return object = $val; } });
    })();
    object$inout.set(object);
    return $result;
}
/*Swift.(file).swap(_:T,_:T)*/
/*Swift.(file).swap(_:T,_:T)*/
function swap($info, a$inout, b$inout) {
    var a = a$inout.get();
    var b = b$inout.get();
    var $result = (function () {
        var $tuple = { 0: b, 1: a };
        a = $tuple[0];
        b = $tuple[1];
    })();
    a$inout.set(a);
    b$inout.set(b);
    return $result;
}
/*Swift.(file).KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:Any.Type)*/
/*Swift.(file).KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:Any.Type)*/
function KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS($info, keyType) {
    throw 'unsupported method Swift.(file).KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:Any.Type) in ' + this.constructor.name;
}
/*Swift.(file).ELEMENT_TYPE_OF_SET_VIOLATES_HASHABLE_REQUIREMENTS(_:Any.Type)*/
/*Swift.(file).ELEMENT_TYPE_OF_SET_VIOLATES_HASHABLE_REQUIREMENTS(_:Any.Type)*/
function ELEMENT_TYPE_OF_SET_VIOLATES_HASHABLE_REQUIREMENTS($info, elementType) {
    throw 'unsupported method Swift.(file).ELEMENT_TYPE_OF_SET_VIOLATES_HASHABLE_REQUIREMENTS(_:Any.Type) in ' + this.constructor.name;
}
/*Swift.(file).??infix(_:T?,_:() throws -> T)*/
/*Swift.(file).??infix(_:T?,_:() throws -> T)*/
function infix_63_63($info, optional, defaultValue) {
    var $match = optional;
    if ((($match != null))) {
        var value = $match;
        return value;
    }
    else if ((($match == null))) {
        return defaultValue({});
    }
}
/*Swift.(file).??infix(_:T?,_:() throws -> T)*/
/*Swift.(file).??infix(_:T?,_:() throws -> T)*/
function infix_63_63($info, optional, defaultValue) {
    var $match = optional;
    if ((($match != null))) {
        var value = $match;
        return value;
    }
    else if ((($match == null))) {
        return defaultValue({});
    }
}
/*Swift.(file).~=infix(_:T,_:T)*/
/*Swift.(file).~=infix(_:T,_:T)*/
function infix_126_61($info, a, b) {
    return (_.arg0 = a).constructor.infix_61_61({}, _.arg0, b);
}
/*Swift.(file).print(_:[Any],separator:String,terminator:String)*/
/*Swift.(file).print(_:[Any],separator:String,terminator:String)*/
function printSeparatorTerminator($info, items, separator, terminator) {
    console.log.apply(null, items);
}
/*Swift.(file).debugPrint(_:[Any],separator:String,terminator:String)*/
/*Swift.(file).debugPrint(_:[Any],separator:String,terminator:String)*/
function debugPrintSeparatorTerminator($info, items, separator, terminator) {
    var $ifLet0, hook_1;
    if ((($ifLet0 = _playgroundPrintHook) || true) && $ifLet0 != null && ((hook_1 = $ifLet0) || true)) {
        var output_1 = _create(_TeeStream, 'initLeftRight', {}, "", _create(_Stdout, 'init', {}));
        _debugPrintSeparatorTerminatorTo({}, items, separator, terminator, { get: function () { return output_1; }, set: function ($val) { return output_1 = $val; } });
        hook_1({}, output_1.left);
    }
    else {
        var output_2 = _create(_Stdout, 'init', {});
        _debugPrintSeparatorTerminatorTo({}, items, separator, terminator, { get: function () { return output_2; }, set: function ($val) { return output_2 = $val; } });
    }
}
/*Swift.(file).print(_:[Any],separator:String,terminator:String,to:Target)*/
/*Swift.(file).print(_:[Any],separator:String,terminator:String,to:Target)*/
function printSeparatorTerminatorTo($info, items, separator, terminator, output$inout) {
    var output = output$inout.get();
    var $result = (function () {
        _printSeparatorTerminatorTo({}, items, separator, terminator, { get: function () { return output; }, set: function ($val) { return output = $val; } });
    })();
    output$inout.set(output);
    return $result;
}
/*Swift.(file).debugPrint(_:[Any],separator:String,terminator:String,to:Target)*/
/*Swift.(file).debugPrint(_:[Any],separator:String,terminator:String,to:Target)*/
function debugPrintSeparatorTerminatorTo($info, items, separator, terminator, output$inout) {
    var output = output$inout.get();
    var $result = (function () {
        _debugPrintSeparatorTerminatorTo({}, items, separator, terminator, { get: function () { return output; }, set: function ($val) { return output = $val; } });
    })();
    output$inout.set(output);
    return $result;
}
/*Swift.(file).getChild(of:T,type:Any.Type,index:Int)*/
/*Swift.(file).getChild(of:T,type:Any.Type,index:Int)*/
function getChildOfTypeIndex($info, value, type, index) {
    var nameC = null;
    var freeFunc = null;
    var value = _cloneStruct(_getChildOfTypeIndexOutNameOutFreeFunc({}, value, type, index, /**/ { get: function () { return nameC; }, set: function ($val) { return nameC = $val; } }, /**/ { get: function () { return freeFunc; }, set: function ($val) { return freeFunc = $val; } }));
    var _name = nameC.flatMap({}, (function ($info, $0) { return _create(String, 'initValidatingUTF8UnsafePointer', {}, $0); }));
    (((_.tmp0 = freeFunc) != null) ? (_.tmp0({}, nameC)) : null);
    return { 0: _name, 1: value };
}
/*Swift.(file).repeatElement(_:T,count:Int)*/
/*Swift.(file).repeatElement(_:T,count:Int)*/
function repeatElementCount($info, _element, n) {
    return _create(Repeated, 'init_repeatingCountInt', {}, _element, n);
}
/*Swift.(file).stride(from:T,to:T,by:T.Stride)*/
/*Swift.(file).stride(from:T,to:T,by:T.Stride)*/
function strideFromToBy($info, start, end, stride) {
    return _create(StrideTo, 'init_startEndStride', {}, start, end, stride);
}
/*Swift.(file).stride(from:T,through:T,by:T.Stride)*/
/*Swift.(file).stride(from:T,through:T,by:T.Stride)*/
function strideFromThroughBy($info, start, end, stride) {
    return _create(StrideThrough, 'init_startEndStride', {}, start, end, stride);
}
/*Swift.(file).unimplemented_utf8_32bit(_:String,file:StaticString,line:UInt)*/
/*Swift.(file).unimplemented_utf8_32bit(_:String,file:StaticString,line:UInt)*/
function unimplemented_utf8_32bitFileLine($info, message, file, line) {
    fatalErrorFileLine({}, function () { return "32-bit: Unimplemented for UTF-8 support"; }, file, line);
}
/*Swift.(file).determineCodeUnitCapacity(_:Int)*/
/*Swift.(file).determineCodeUnitCapacity(_:Int)*/
function determineCodeUnitCapacity($info, desiredCapacity) {
    throw 'unsupported method Swift.(file).determineCodeUnitCapacity(_:Int) in ' + this.constructor.name;
}
/*Swift.(file).validateUTF8(_:UnsafeBufferPointer<UInt8>)*/
/*Swift.(file).validateUTF8(_:UnsafeBufferPointer<UInt8>)*/
function validateUTF8($info, buf) {
    throw 'unsupported method Swift.(file).validateUTF8(_:UnsafeBufferPointer<UInt8>) in ' + this.constructor.name;
}
/*Swift.(file).repairUTF8(_:UnsafeBufferPointer<UInt8>,firstKnownBrokenRange:Range<Int>)*/
/*Swift.(file).repairUTF8(_:UnsafeBufferPointer<UInt8>,firstKnownBrokenRange:Range<Int>)*/
function repairUTF8FirstKnownBrokenRange($info, input, firstKnownBrokenRange) {
    var result = _create(_StringGuts, 'init', {});
    var replacementCharacterCount = Unicode.Scalar._replacementCharacter.withUTF8CodeUnits({}, (function ($info, $0) { return $0.count; }));
    var brokenRange = _cloneStruct(firstKnownBrokenRange);
    var remainingInput = _cloneStruct(input);
    do {
        var goodChunk = _cloneStruct(remainingInput.subscript$get({}, Int.prefix_46_46_60({}, brokenRange.startIndex)));
        result.appendInPlaceIsASCII({ $setThis: function ($val) { return result = $val; } }, _create(UnsafeBufferPointer, 'initRebasingSlice', {}, goodChunk), false);
        Unicode.Scalar._replacementCharacter.withUTF8CodeUnits({}, (function ($info, $0) { return result.appendInPlaceIsASCII({ $setThis: function ($val) { return result = $val; } }, $0, false); }));
        remainingInput = _create(UnsafeBufferPointer, 'initRebasingSlice', {}, remainingInput.subscript$get({}, Int.postfix_46_46_46({}, brokenRange.endIndex)));
        var $match = validateUTF8({}, remainingInput);
        if ((($match.rawValue == UTF8ValidationResult.success().rawValue))) {
            result.appendInPlaceIsASCII({ $setThis: function ($val) { return result = $val; } }, remainingInput, false);
            return _create(String, 'init_StringGuts', {}, result);
        }
        else if ((($match.rawValue == UTF8ValidationResult.error().rawValue))) {
            var newBrokenRange = $match[0];
            brokenRange = _cloneStruct(newBrokenRange);
        }
        ;
    } while (Int.infix_62({}, remainingInput.count, 0));
    return _create(String, 'init_StringGuts', {}, result);
}
/*Swift.(file).withUnsafeMutableBytes(of:T,_:(UnsafeMutableRawBufferPointer) throws -> Result)*/
/*Swift.(file).withUnsafeMutableBytes(of:T,_:(UnsafeMutableRawBufferPointer) throws -> Result)*/
function withUnsafeMutableBytesOf($info, value$inout, body) {
    throw 'unsupported method Swift.(file).withUnsafeMutableBytes(of:T,_:(UnsafeMutableRawBufferPointer) throws -> Result) in ' + this.constructor.name;
}
/*Swift.(file).withUnsafeBytes(of:T,_:(UnsafeRawBufferPointer) throws -> Result)*/
/*Swift.(file).withUnsafeBytes(of:T,_:(UnsafeRawBufferPointer) throws -> Result)*/
function withUnsafeBytesOf($info, value, body) {
    throw 'unsupported method Swift.(file).withUnsafeBytes(of:T,_:(UnsafeRawBufferPointer) throws -> Result) in ' + this.constructor.name;
}
/*Swift.(file).withUnsafeBytes(of:T,_:(UnsafeRawBufferPointer) throws -> Result)*/
/*Swift.(file).withUnsafeBytes(of:T,_:(UnsafeRawBufferPointer) throws -> Result)*/
function withUnsafeBytesOf($info, value, body) {
    throw 'unsupported method Swift.(file).withUnsafeBytes(of:T,_:(UnsafeRawBufferPointer) throws -> Result) in ' + this.constructor.name;
}
/*Swift.(file).transcode(_:Input,from:InputEncoding.Type,to:OutputEncoding.Type,stoppingOnError:Bool,into:(OutputEncoding.CodeUnit) -> Void)*/
/*Swift.(file).transcode(_:Input,from:InputEncoding.Type,to:OutputEncoding.Type,stoppingOnError:Bool,into:(OutputEncoding.CodeUnit) -> Void)*/
function transcodeFromToStoppingOnErrorInto($info, input, inputEncoding, outputEncoding, stopOnError, processCodeUnit) {
    throw 'unsupported method Swift.(file).transcode(_:Input,from:InputEncoding.Type,to:OutputEncoding.Type,stoppingOnError:Bool,into:(OutputEncoding.CodeUnit) -> Void) in ' + this.constructor.name;
}
/*Swift.(file).transcode(_:InputEncoding.Type,_:OutputEncoding.Type,_:Input,_:(OutputEncoding.CodeUnit) -> Void,stopOnError:Bool)*/
/*Swift.(file).transcode(_:InputEncoding.Type,_:OutputEncoding.Type,_:Input,_:(OutputEncoding.CodeUnit) -> Void,stopOnError:Bool)*/
function transcodeStopOnError($info, inputEncoding, outputEncoding, input, output, stopOnError) {
    throw 'unsupported method Swift.(file).transcode(_:InputEncoding.Type,_:OutputEncoding.Type,_:Input,_:(OutputEncoding.CodeUnit) -> Void,stopOnError:Bool) in ' + this.constructor.name;
}
/*Swift.(file).==infix(_:(A, B, C, D, E, F),_:(A, B, C, D, E, F))*/
/*Swift.(file).==infix(_:(A, B, C, D, E, F),_:(A, B, C, D, E, F))*/
function infix_61_61($info, lhs, rhs) {
    return lhs == rhs;
}
/*Swift.(file).!=infix(_:(A, B, C, D, E, F),_:(A, B, C, D, E, F))*/
/*Swift.(file).!=infix(_:(A, B, C, D, E, F),_:(A, B, C, D, E, F))*/
function infix_33_61($info, lhs, rhs) {
    return lhs != rhs;
}
/*Swift.(file).<infix(_:(A, B, C, D, E, F),_:(A, B, C, D, E, F))*/
/*Swift.(file).<infix(_:(A, B, C, D, E, F),_:(A, B, C, D, E, F))*/
function infix_60($info, lhs, rhs) {
    return lhs < rhs;
}
/*Swift.(file).<=infix(_:(A, B, C, D, E, F),_:(A, B, C, D, E, F))*/
/*Swift.(file).<=infix(_:(A, B, C, D, E, F),_:(A, B, C, D, E, F))*/
function infix_60_61($info, lhs, rhs) {
    return lhs <= rhs;
}
/*Swift.(file).>infix(_:(A, B, C, D, E, F),_:(A, B, C, D, E, F))*/
/*Swift.(file).>infix(_:(A, B, C, D, E, F),_:(A, B, C, D, E, F))*/
function infix_62($info, lhs, rhs) {
    return lhs > rhs;
}
/*Swift.(file).>=infix(_:(A, B, C, D, E, F),_:(A, B, C, D, E, F))*/
/*Swift.(file).>=infix(_:(A, B, C, D, E, F),_:(A, B, C, D, E, F))*/
function infix_62_61($info, lhs, rhs) {
    return lhs >= rhs;
}
/*Swift.(file).==infix(_:(A, B, C, D, E, F),_:(A, B, C, D, E, F))*/
/*Swift.(file).==infix(_:(A, B, C, D, E, F),_:(A, B, C, D, E, F))*/
function infix_61_61($info, lhs, rhs) {
    return lhs == rhs;
}
/*Swift.(file).!=infix(_:(A, B, C, D, E, F),_:(A, B, C, D, E, F))*/
/*Swift.(file).!=infix(_:(A, B, C, D, E, F),_:(A, B, C, D, E, F))*/
function infix_33_61($info, lhs, rhs) {
    return lhs != rhs;
}
/*Swift.(file).<infix(_:(A, B, C, D, E, F),_:(A, B, C, D, E, F))*/
/*Swift.(file).<infix(_:(A, B, C, D, E, F),_:(A, B, C, D, E, F))*/
function infix_60($info, lhs, rhs) {
    return lhs < rhs;
}
/*Swift.(file).<=infix(_:(A, B, C, D, E, F),_:(A, B, C, D, E, F))*/
/*Swift.(file).<=infix(_:(A, B, C, D, E, F),_:(A, B, C, D, E, F))*/
function infix_60_61($info, lhs, rhs) {
    return lhs <= rhs;
}
/*Swift.(file).>infix(_:(A, B, C, D, E, F),_:(A, B, C, D, E, F))*/
/*Swift.(file).>infix(_:(A, B, C, D, E, F),_:(A, B, C, D, E, F))*/
function infix_62($info, lhs, rhs) {
    return lhs > rhs;
}
/*Swift.(file).>=infix(_:(A, B, C, D, E, F),_:(A, B, C, D, E, F))*/
/*Swift.(file).>=infix(_:(A, B, C, D, E, F),_:(A, B, C, D, E, F))*/
function infix_62_61($info, lhs, rhs) {
    return lhs >= rhs;
}
/*Swift.(file).==infix(_:(A, B, C, D, E, F),_:(A, B, C, D, E, F))*/
/*Swift.(file).==infix(_:(A, B, C, D, E, F),_:(A, B, C, D, E, F))*/
function infix_61_61($info, lhs, rhs) {
    return lhs == rhs;
}
/*Swift.(file).!=infix(_:(A, B, C, D, E, F),_:(A, B, C, D, E, F))*/
/*Swift.(file).!=infix(_:(A, B, C, D, E, F),_:(A, B, C, D, E, F))*/
function infix_33_61($info, lhs, rhs) {
    return lhs != rhs;
}
/*Swift.(file).<infix(_:(A, B, C, D, E, F),_:(A, B, C, D, E, F))*/
/*Swift.(file).<infix(_:(A, B, C, D, E, F),_:(A, B, C, D, E, F))*/
function infix_60($info, lhs, rhs) {
    return lhs < rhs;
}
/*Swift.(file).<=infix(_:(A, B, C, D, E, F),_:(A, B, C, D, E, F))*/
/*Swift.(file).<=infix(_:(A, B, C, D, E, F),_:(A, B, C, D, E, F))*/
function infix_60_61($info, lhs, rhs) {
    return lhs <= rhs;
}
/*Swift.(file).>infix(_:(A, B, C, D, E, F),_:(A, B, C, D, E, F))*/
/*Swift.(file).>infix(_:(A, B, C, D, E, F),_:(A, B, C, D, E, F))*/
function infix_62($info, lhs, rhs) {
    return lhs > rhs;
}
/*Swift.(file).>=infix(_:(A, B, C, D, E, F),_:(A, B, C, D, E, F))*/
/*Swift.(file).>=infix(_:(A, B, C, D, E, F),_:(A, B, C, D, E, F))*/
function infix_62_61($info, lhs, rhs) {
    return lhs >= rhs;
}
/*Swift.(file).==infix(_:(A, B, C, D, E, F),_:(A, B, C, D, E, F))*/
/*Swift.(file).==infix(_:(A, B, C, D, E, F),_:(A, B, C, D, E, F))*/
function infix_61_61($info, lhs, rhs) {
    return lhs == rhs;
}
/*Swift.(file).!=infix(_:(A, B, C, D, E, F),_:(A, B, C, D, E, F))*/
/*Swift.(file).!=infix(_:(A, B, C, D, E, F),_:(A, B, C, D, E, F))*/
function infix_33_61($info, lhs, rhs) {
    return lhs != rhs;
}
/*Swift.(file).<infix(_:(A, B, C, D, E, F),_:(A, B, C, D, E, F))*/
/*Swift.(file).<infix(_:(A, B, C, D, E, F),_:(A, B, C, D, E, F))*/
function infix_60($info, lhs, rhs) {
    return lhs < rhs;
}
/*Swift.(file).<=infix(_:(A, B, C, D, E, F),_:(A, B, C, D, E, F))*/
/*Swift.(file).<=infix(_:(A, B, C, D, E, F),_:(A, B, C, D, E, F))*/
function infix_60_61($info, lhs, rhs) {
    return lhs <= rhs;
}
/*Swift.(file).>infix(_:(A, B, C, D, E, F),_:(A, B, C, D, E, F))*/
/*Swift.(file).>infix(_:(A, B, C, D, E, F),_:(A, B, C, D, E, F))*/
function infix_62($info, lhs, rhs) {
    return lhs > rhs;
}
/*Swift.(file).>=infix(_:(A, B, C, D, E, F),_:(A, B, C, D, E, F))*/
/*Swift.(file).>=infix(_:(A, B, C, D, E, F),_:(A, B, C, D, E, F))*/
function infix_62_61($info, lhs, rhs) {
    return lhs >= rhs;
}
/*Swift.(file).==infix(_:(A, B, C, D, E, F),_:(A, B, C, D, E, F))*/
/*Swift.(file).==infix(_:(A, B, C, D, E, F),_:(A, B, C, D, E, F))*/
function infix_61_61($info, lhs, rhs) {
    return lhs == rhs;
}
/*Swift.(file).!=infix(_:(A, B, C, D, E, F),_:(A, B, C, D, E, F))*/
/*Swift.(file).!=infix(_:(A, B, C, D, E, F),_:(A, B, C, D, E, F))*/
function infix_33_61($info, lhs, rhs) {
    return lhs != rhs;
}
/*Swift.(file).<infix(_:(A, B, C, D, E, F),_:(A, B, C, D, E, F))*/
/*Swift.(file).<infix(_:(A, B, C, D, E, F),_:(A, B, C, D, E, F))*/
function infix_60($info, lhs, rhs) {
    return lhs < rhs;
}
/*Swift.(file).<=infix(_:(A, B, C, D, E, F),_:(A, B, C, D, E, F))*/
/*Swift.(file).<=infix(_:(A, B, C, D, E, F),_:(A, B, C, D, E, F))*/
function infix_60_61($info, lhs, rhs) {
    return lhs <= rhs;
}
/*Swift.(file).>infix(_:(A, B, C, D, E, F),_:(A, B, C, D, E, F))*/
/*Swift.(file).>infix(_:(A, B, C, D, E, F),_:(A, B, C, D, E, F))*/
function infix_62($info, lhs, rhs) {
    return lhs > rhs;
}
/*Swift.(file).>=infix(_:(A, B, C, D, E, F),_:(A, B, C, D, E, F))*/
/*Swift.(file).>=infix(_:(A, B, C, D, E, F),_:(A, B, C, D, E, F))*/
function infix_62_61($info, lhs, rhs) {
    return lhs >= rhs;
}
/*Swift.(file).==infix(_:(A, B, C, D, E, F),_:(A, B, C, D, E, F))*/
/*Swift.(file).==infix(_:(A, B, C, D, E, F),_:(A, B, C, D, E, F))*/
function infix_61_61($info, lhs, rhs) {
    return lhs == rhs;
}
/*Swift.(file).!=infix(_:(A, B, C, D, E, F),_:(A, B, C, D, E, F))*/
/*Swift.(file).!=infix(_:(A, B, C, D, E, F),_:(A, B, C, D, E, F))*/
function infix_33_61($info, lhs, rhs) {
    return lhs != rhs;
}
/*Swift.(file).<infix(_:(A, B, C, D, E, F),_:(A, B, C, D, E, F))*/
/*Swift.(file).<infix(_:(A, B, C, D, E, F),_:(A, B, C, D, E, F))*/
function infix_60($info, lhs, rhs) {
    return lhs < rhs;
}
/*Swift.(file).<=infix(_:(A, B, C, D, E, F),_:(A, B, C, D, E, F))*/
/*Swift.(file).<=infix(_:(A, B, C, D, E, F),_:(A, B, C, D, E, F))*/
function infix_60_61($info, lhs, rhs) {
    return lhs <= rhs;
}
/*Swift.(file).>infix(_:(A, B, C, D, E, F),_:(A, B, C, D, E, F))*/
/*Swift.(file).>infix(_:(A, B, C, D, E, F),_:(A, B, C, D, E, F))*/
function infix_62($info, lhs, rhs) {
    return lhs > rhs;
}
/*Swift.(file).>=infix(_:(A, B, C, D, E, F),_:(A, B, C, D, E, F))*/
/*Swift.(file).>=infix(_:(A, B, C, D, E, F),_:(A, B, C, D, E, F))*/
function infix_62_61($info, lhs, rhs) {
    return lhs >= rhs;
}
/*Swift.(file).sequence(first:T,next:(T) -> T?)*/
/*Swift.(file).sequence(first:T,next:(T) -> T?)*/
function sequenceFirstNext($info, first, next) {
    throw 'unsupported method Swift.(file).sequence(first:T,next:(T) -> T?) in ' + this.constructor.name;
}
/*Swift.(file).sequence(state:State,next:(inout State) -> T?)*/
/*Swift.(file).sequence(state:State,next:(inout State) -> T?)*/
function sequenceStateNext($info, state, next) {
    throw 'unsupported method Swift.(file).sequence(state:State,next:(inout State) -> T?) in ' + this.constructor.name;
}
/*Swift.(file).withVaList(_:[CVarArg],_:(CVaListPointer) -> R)*/
/*Swift.(file).withVaList(_:[CVarArg],_:(CVaListPointer) -> R)*/
function withVaList($info, args, body) {
    throw 'unsupported method Swift.(file).withVaList(_:[CVarArg],_:(CVaListPointer) -> R) in ' + this.constructor.name;
}
/*Swift.(file).getVaList(_:[CVarArg])*/
/*Swift.(file).getVaList(_:[CVarArg])*/
function getVaList($info, args) {
    throw 'unsupported method Swift.(file).getVaList(_:[CVarArg]) in ' + this.constructor.name;
}
/*Swift.(file).zip(_:Sequence1,_:Sequence2)*/
/*Swift.(file).zip(_:Sequence1,_:Sequence2)*/
function zip($info, sequence1, sequence2) {
    throw 'unsupported method Swift.(file).zip(_:Sequence1,_:Sequence2) in ' + this.constructor.name;
}
var _ArrayBody = /** @class */ (function () {
    function _ArrayBody() {
    }
    /*Swift.(file)._ArrayBody.init(count:Int,capacity:Int,elementTypeIsBridgedVerbatim:Bool)*/
    /*Swift.(file)._ArrayBody.init(count:Int,capacity:Int,elementTypeIsBridgedVerbatim:Bool)*/
    _ArrayBody.prototype.initCountIntCapacityIntElementTypeIsBridgedVerbatimBool = function ($info, count, capacity, elementTypeIsBridgedVerbatim) {
        throw 'unsupported method Swift.(file)._ArrayBody.init(count:Int,capacity:Int,elementTypeIsBridgedVerbatim:Bool) in ' + this.constructor.name;
    };
    /*Swift.(file)._ArrayBody.init()*/
    /*Swift.(file)._ArrayBody.init()*/
    _ArrayBody.prototype.init = function ($info) {
        throw 'unsupported method Swift.(file)._ArrayBody.init() in ' + this.constructor.name;
    };
    /*Swift.(file)._ArrayBody.count*/
    _ArrayBody.prototype.count$get = function () {
        throw 'unsupported variable Swift.(file)._ArrayBody.count in ' + this.constructor.name;
    };
    Object.defineProperty(_ArrayBody.prototype, "count", {
        get: function () { return this.count$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file)._ArrayBody.capacity*/
    _ArrayBody.prototype.capacity$get = function () {
        throw 'unsupported variable Swift.(file)._ArrayBody.capacity in ' + this.constructor.name;
    };
    Object.defineProperty(_ArrayBody.prototype, "capacity", {
        get: function () { return this.capacity$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file)._ArrayBody.elementTypeIsBridgedVerbatim*/
    _ArrayBody.prototype.elementTypeIsBridgedVerbatim$get = function () {
        throw 'unsupported variable Swift.(file)._ArrayBody.elementTypeIsBridgedVerbatim in ' + this.constructor.name;
    };
    Object.defineProperty(_ArrayBody.prototype, "elementTypeIsBridgedVerbatim", {
        get: function () { return this.elementTypeIsBridgedVerbatim$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    _ArrayBody.prototype.init$vars = function () {
    };
    _ArrayBody.$struct = true;
    _ArrayBody.$infoAddress = '';
    return _ArrayBody;
}());
var _DependenceToken = /** @class */ (function () {
    function _DependenceToken() {
    }
    /*Swift.(file)._DependenceToken.init()*/
    /*Swift.(file)._DependenceToken.init()*/
    _DependenceToken.prototype.init = function ($info) {
        throw 'unsupported method Swift.(file)._DependenceToken.init() in ' + this.constructor.name;
    };
    _DependenceToken.prototype.init$vars = function () {
    };
    _DependenceToken.$struct = true;
    _DependenceToken.$infoAddress = '';
    return _DependenceToken;
}());
var _stdlib_AtomicInt = /** @class */ (function () {
    function _stdlib_AtomicInt() {
    }
    /*Swift.(file)._stdlib_AtomicInt.init(_:Int)*/
    /*Swift.(file)._stdlib_AtomicInt.init(_:Int)*/
    _stdlib_AtomicInt.prototype.initInt = function ($info, value) {
        throw 'unsupported method Swift.(file)._stdlib_AtomicInt.init(_:Int) in ' + this.constructor.name;
    };
    /*Swift.(file)._stdlib_AtomicInt.store(_:Int)*/
    /*Swift.(file)._stdlib_AtomicInt.store(_:Int)*/
    _stdlib_AtomicInt.prototype.store = function ($info, desired) {
        throw 'unsupported method Swift.(file)._stdlib_AtomicInt.store(_:Int) in ' + this.constructor.name;
    };
    /*Swift.(file)._stdlib_AtomicInt.load()*/
    /*Swift.(file)._stdlib_AtomicInt.load()*/
    _stdlib_AtomicInt.prototype.load = function ($info) {
        throw 'unsupported method Swift.(file)._stdlib_AtomicInt.load() in ' + this.constructor.name;
    };
    /*Swift.(file)._stdlib_AtomicInt.fetchAndAdd(_:Int)*/
    /*Swift.(file)._stdlib_AtomicInt.fetchAndAdd(_:Int)*/
    _stdlib_AtomicInt.prototype.fetchAndAdd = function ($info, operand) {
        throw 'unsupported method Swift.(file)._stdlib_AtomicInt.fetchAndAdd(_:Int) in ' + this.constructor.name;
    };
    /*Swift.(file)._stdlib_AtomicInt.addAndFetch(_:Int)*/
    /*Swift.(file)._stdlib_AtomicInt.addAndFetch(_:Int)*/
    _stdlib_AtomicInt.prototype.addAndFetch = function ($info, operand) {
        throw 'unsupported method Swift.(file)._stdlib_AtomicInt.addAndFetch(_:Int) in ' + this.constructor.name;
    };
    /*Swift.(file)._stdlib_AtomicInt.fetchAndAnd(_:Int)*/
    /*Swift.(file)._stdlib_AtomicInt.fetchAndAnd(_:Int)*/
    _stdlib_AtomicInt.prototype.fetchAndAnd = function ($info, operand) {
        throw 'unsupported method Swift.(file)._stdlib_AtomicInt.fetchAndAnd(_:Int) in ' + this.constructor.name;
    };
    /*Swift.(file)._stdlib_AtomicInt.andAndFetch(_:Int)*/
    /*Swift.(file)._stdlib_AtomicInt.andAndFetch(_:Int)*/
    _stdlib_AtomicInt.prototype.andAndFetch = function ($info, operand) {
        throw 'unsupported method Swift.(file)._stdlib_AtomicInt.andAndFetch(_:Int) in ' + this.constructor.name;
    };
    /*Swift.(file)._stdlib_AtomicInt.fetchAndOr(_:Int)*/
    /*Swift.(file)._stdlib_AtomicInt.fetchAndOr(_:Int)*/
    _stdlib_AtomicInt.prototype.fetchAndOr = function ($info, operand) {
        throw 'unsupported method Swift.(file)._stdlib_AtomicInt.fetchAndOr(_:Int) in ' + this.constructor.name;
    };
    /*Swift.(file)._stdlib_AtomicInt.orAndFetch(_:Int)*/
    /*Swift.(file)._stdlib_AtomicInt.orAndFetch(_:Int)*/
    _stdlib_AtomicInt.prototype.orAndFetch = function ($info, operand) {
        throw 'unsupported method Swift.(file)._stdlib_AtomicInt.orAndFetch(_:Int) in ' + this.constructor.name;
    };
    /*Swift.(file)._stdlib_AtomicInt.fetchAndXor(_:Int)*/
    /*Swift.(file)._stdlib_AtomicInt.fetchAndXor(_:Int)*/
    _stdlib_AtomicInt.prototype.fetchAndXor = function ($info, operand) {
        throw 'unsupported method Swift.(file)._stdlib_AtomicInt.fetchAndXor(_:Int) in ' + this.constructor.name;
    };
    /*Swift.(file)._stdlib_AtomicInt.xorAndFetch(_:Int)*/
    /*Swift.(file)._stdlib_AtomicInt.xorAndFetch(_:Int)*/
    _stdlib_AtomicInt.prototype.xorAndFetch = function ($info, operand) {
        throw 'unsupported method Swift.(file)._stdlib_AtomicInt.xorAndFetch(_:Int) in ' + this.constructor.name;
    };
    /*Swift.(file)._stdlib_AtomicInt.compareExchange(expected:Int,desired:Int)*/
    /*Swift.(file)._stdlib_AtomicInt.compareExchange(expected:Int,desired:Int)*/
    _stdlib_AtomicInt.prototype.compareExchangeExpectedDesired = function ($info, expected$inout, desired) {
        throw 'unsupported method Swift.(file)._stdlib_AtomicInt.compareExchange(expected:Int,desired:Int) in ' + this.constructor.name;
    };
    _stdlib_AtomicInt.prototype.init$vars = function () {
    };
    _stdlib_AtomicInt.$infoAddress = '';
    return _stdlib_AtomicInt;
}());
var _ObjectiveCBridgeable$implementation = /** @class */ (function () {
    function _ObjectiveCBridgeable$implementation() {
    }
    return _ObjectiveCBridgeable$implementation;
}());
var _BridgeableMetatype = /** @class */ (function () {
    function _BridgeableMetatype() {
    }
    /*Swift.(file)._BridgeableMetatype.value*/
    _BridgeableMetatype.prototype.value$get = function () {
        throw 'unsupported variable Swift.(file)._BridgeableMetatype.value in ' + this.constructor.name;
    };
    Object.defineProperty(_BridgeableMetatype.prototype, "value", {
        get: function () { return this.value$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file)._BridgeableMetatype.init(value:AnyObject.Type)*/
    /*Swift.(file)._BridgeableMetatype.init(value:AnyObject.Type)*/
    _BridgeableMetatype.prototype.initValueAnyObject = function ($info, value) {
        throw 'unsupported method Swift.(file)._BridgeableMetatype.init(value:AnyObject.Type) in ' + this.constructor.name;
    };
    _BridgeableMetatype.prototype.init$vars = function () {
    };
    _BridgeableMetatype.$struct = true;
    _BridgeableMetatype.$infoAddress = '';
    return _BridgeableMetatype;
}());
if (typeof _ObjectiveCBridgeable$implementation != 'undefined')
    _mixin(_BridgeableMetatype, _ObjectiveCBridgeable$implementation, false);
var _CocoaFastEnumerationStackBuf = /** @class */ (function () {
    function _CocoaFastEnumerationStackBuf() {
    }
    /*Swift.(file)._CocoaFastEnumerationStackBuf.count*/
    _CocoaFastEnumerationStackBuf.prototype.count$get = function () {
        throw 'unsupported variable Swift.(file)._CocoaFastEnumerationStackBuf.count in ' + this.constructor.name;
    };
    Object.defineProperty(_CocoaFastEnumerationStackBuf.prototype, "count", {
        get: function () { return this.count$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file)._CocoaFastEnumerationStackBuf.init()*/
    /*Swift.(file)._CocoaFastEnumerationStackBuf.init()*/
    _CocoaFastEnumerationStackBuf.prototype.init = function ($info) {
        throw 'unsupported method Swift.(file)._CocoaFastEnumerationStackBuf.init() in ' + this.constructor.name;
    };
    _CocoaFastEnumerationStackBuf.prototype.init$vars = function () {
    };
    _CocoaFastEnumerationStackBuf.$struct = true;
    _CocoaFastEnumerationStackBuf.$infoAddress = '';
    return _CocoaFastEnumerationStackBuf;
}());
var _BridgeStorage = /** @class */ (function () {
    function _BridgeStorage() {
    }
    /*Swift.(file)._BridgeStorage.rawValue*/
    _BridgeStorage.prototype.rawValue$get = function () {
        throw 'unsupported variable Swift.(file)._BridgeStorage.rawValue in ' + this.constructor.name;
    };
    Object.defineProperty(_BridgeStorage.prototype, "rawValue", {
        get: function () { return this.rawValue$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file)._BridgeStorage.init(native:_BridgeStorage<NativeClass>.Native,isFlagged:Bool)*/
    /*Swift.(file)._BridgeStorage.init(native:_BridgeStorage<NativeClass>.Native,isFlagged:Bool)*/
    _BridgeStorage.prototype.initNative_BridgeStorageNativeIsFlaggedBool = function ($info, _native, flag) {
        throw 'unsupported method Swift.(file)._BridgeStorage.init(native:_BridgeStorage<NativeClass>.Native,isFlagged:Bool) in ' + this.constructor.name;
    };
    /*Swift.(file)._BridgeStorage.init(objC:_BridgeStorage<NativeClass>.ObjC)*/
    /*Swift.(file)._BridgeStorage.init(objC:_BridgeStorage<NativeClass>.ObjC)*/
    _BridgeStorage.prototype.initObjC_BridgeStorageObjC = function ($info, objC) {
        throw 'unsupported method Swift.(file)._BridgeStorage.init(objC:_BridgeStorage<NativeClass>.ObjC) in ' + this.constructor.name;
    };
    /*Swift.(file)._BridgeStorage.init(native:_BridgeStorage<NativeClass>.Native)*/
    /*Swift.(file)._BridgeStorage.init(native:_BridgeStorage<NativeClass>.Native)*/
    _BridgeStorage.prototype.initNative_BridgeStorageNative = function ($info, _native) {
        throw 'unsupported method Swift.(file)._BridgeStorage.init(native:_BridgeStorage<NativeClass>.Native) in ' + this.constructor.name;
    };
    /*Swift.(file)._BridgeStorage.init(taggedPayload:UInt)*/
    /*Swift.(file)._BridgeStorage.init(taggedPayload:UInt)*/
    _BridgeStorage.prototype.initTaggedPayloadUInt = function ($info, taggedPayload) {
        throw 'unsupported method Swift.(file)._BridgeStorage.init(taggedPayload:UInt) in ' + this.constructor.name;
    };
    /*Swift.(file)._BridgeStorage.isUniquelyReferencedNative()*/
    /*Swift.(file)._BridgeStorage.isUniquelyReferencedNative()*/
    _BridgeStorage.prototype.isUniquelyReferencedNative = function ($info) {
        throw 'unsupported method Swift.(file)._BridgeStorage.isUniquelyReferencedNative() in ' + this.constructor.name;
    };
    /*Swift.(file)._BridgeStorage.isNative*/
    _BridgeStorage.prototype.isNative$get = function () {
        throw 'unsupported variable Swift.(file)._BridgeStorage.isNative in ' + this.constructor.name;
    };
    Object.defineProperty(_BridgeStorage.prototype, "isNative", {
        get: function () { return this.isNative$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file)._BridgeStorage.flagMask*/
    _BridgeStorage.flagMask$get = function () {
        throw 'unsupported variable Swift.(file)._BridgeStorage.flagMask in ' + this.constructor.name;
    };
    Object.defineProperty(_BridgeStorage, "flagMask", {
        get: function () { return this.flagMask$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file)._BridgeStorage.isUnflaggedNative*/
    _BridgeStorage.prototype.isUnflaggedNative$get = function () {
        throw 'unsupported variable Swift.(file)._BridgeStorage.isUnflaggedNative in ' + this.constructor.name;
    };
    Object.defineProperty(_BridgeStorage.prototype, "isUnflaggedNative", {
        get: function () { return this.isUnflaggedNative$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file)._BridgeStorage.isObjC*/
    _BridgeStorage.prototype.isObjC$get = function () {
        throw 'unsupported variable Swift.(file)._BridgeStorage.isObjC in ' + this.constructor.name;
    };
    Object.defineProperty(_BridgeStorage.prototype, "isObjC", {
        get: function () { return this.isObjC$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file)._BridgeStorage.nativeInstance*/
    _BridgeStorage.prototype.nativeInstance$get = function () {
        throw 'unsupported variable Swift.(file)._BridgeStorage.nativeInstance in ' + this.constructor.name;
    };
    Object.defineProperty(_BridgeStorage.prototype, "nativeInstance", {
        get: function () { return this.nativeInstance$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file)._BridgeStorage.unflaggedNativeInstance*/
    _BridgeStorage.prototype.unflaggedNativeInstance$get = function () {
        throw 'unsupported variable Swift.(file)._BridgeStorage.unflaggedNativeInstance in ' + this.constructor.name;
    };
    Object.defineProperty(_BridgeStorage.prototype, "unflaggedNativeInstance", {
        get: function () { return this.unflaggedNativeInstance$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file)._BridgeStorage.isUniquelyReferencedUnflaggedNative()*/
    /*Swift.(file)._BridgeStorage.isUniquelyReferencedUnflaggedNative()*/
    _BridgeStorage.prototype.isUniquelyReferencedUnflaggedNative = function ($info) {
        throw 'unsupported method Swift.(file)._BridgeStorage.isUniquelyReferencedUnflaggedNative() in ' + this.constructor.name;
    };
    /*Swift.(file)._BridgeStorage.objCInstance*/
    _BridgeStorage.prototype.objCInstance$get = function () {
        throw 'unsupported variable Swift.(file)._BridgeStorage.objCInstance in ' + this.constructor.name;
    };
    Object.defineProperty(_BridgeStorage.prototype, "objCInstance", {
        get: function () { return this.objCInstance$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    _BridgeStorage.prototype.init$vars = function () {
    };
    _BridgeStorage.$struct = true;
    _BridgeStorage.$infoAddress = '';
    return _BridgeStorage;
}());
var _BridgingBufferHeader = /** @class */ (function () {
    function _BridgingBufferHeader() {
    }
    /*Swift.(file)._BridgingBufferHeader.init(_:Int)*/
    /*Swift.(file)._BridgingBufferHeader.init(_:Int)*/
    _BridgingBufferHeader.prototype.initInt = function ($info, count) {
        throw 'unsupported method Swift.(file)._BridgingBufferHeader.init(_:Int) in ' + this.constructor.name;
    };
    /*Swift.(file)._BridgingBufferHeader.count*/
    _BridgingBufferHeader.prototype.count$get = function () {
        throw 'unsupported variable Swift.(file)._BridgingBufferHeader.count in ' + this.constructor.name;
    };
    Object.defineProperty(_BridgingBufferHeader.prototype, "count", {
        get: function () { return this.count$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    _BridgingBufferHeader.prototype.init$vars = function () {
    };
    _BridgingBufferHeader.$struct = true;
    _BridgingBufferHeader.$infoAddress = '';
    return _BridgingBufferHeader;
}());
var Encodable$implementation = /** @class */ (function () {
    function Encodable$implementation() {
    }
    return Encodable$implementation;
}());
var Decodable$implementation = /** @class */ (function () {
    function Decodable$implementation() {
    }
    return Decodable$implementation;
}());
var Encoder$implementation = /** @class */ (function () {
    function Encoder$implementation() {
    }
    return Encoder$implementation;
}());
var Decoder$implementation = /** @class */ (function () {
    function Decoder$implementation() {
    }
    return Decoder$implementation;
}());
var KeyedEncodingContainerProtocol$implementation = /** @class */ (function () {
    function KeyedEncodingContainerProtocol$implementation() {
    }
    /*Swift.(file).KeyedEncodingContainerProtocol.encodeConditional(_:T,forKey:Self.Key)*/
    /*Swift.(file).KeyedEncodingContainerProtocol.encodeConditional(_:T,forKey:Self.Key)*/
    KeyedEncodingContainerProtocol$implementation.prototype.encodeConditionalForKey = function ($info, object, key) {
        throw 'unsupported method Swift.(file).KeyedEncodingContainerProtocol.encodeConditional(_:T,forKey:Self.Key) in ' + this.constructor.name;
    };
    /*Swift.(file).KeyedEncodingContainerProtocol.encodeIfPresent(_:Bool?,forKey:Self.Key)*/
    /*Swift.(file).KeyedEncodingContainerProtocol.encodeIfPresent(_:Bool?,forKey:Self.Key)*/
    KeyedEncodingContainerProtocol$implementation.prototype.encodeIfPresentForKey = function ($info, value, key) {
        throw 'unsupported method Swift.(file).KeyedEncodingContainerProtocol.encodeIfPresent(_:Bool?,forKey:Self.Key) in ' + this.constructor.name;
    };
    /*Swift.(file).KeyedEncodingContainerProtocol.encodeIfPresent(_:String?,forKey:Self.Key)*/
    /*Swift.(file).KeyedEncodingContainerProtocol.encodeIfPresent(_:String?,forKey:Self.Key)*/
    KeyedEncodingContainerProtocol$implementation.prototype.encodeIfPresentForKey = function ($info, value, key) {
        throw 'unsupported method Swift.(file).KeyedEncodingContainerProtocol.encodeIfPresent(_:String?,forKey:Self.Key) in ' + this.constructor.name;
    };
    /*Swift.(file).KeyedEncodingContainerProtocol.encodeIfPresent(_:Double?,forKey:Self.Key)*/
    /*Swift.(file).KeyedEncodingContainerProtocol.encodeIfPresent(_:Double?,forKey:Self.Key)*/
    KeyedEncodingContainerProtocol$implementation.prototype.encodeIfPresentForKey = function ($info, value, key) {
        throw 'unsupported method Swift.(file).KeyedEncodingContainerProtocol.encodeIfPresent(_:Double?,forKey:Self.Key) in ' + this.constructor.name;
    };
    /*Swift.(file).KeyedEncodingContainerProtocol.encodeIfPresent(_:Float?,forKey:Self.Key)*/
    /*Swift.(file).KeyedEncodingContainerProtocol.encodeIfPresent(_:Float?,forKey:Self.Key)*/
    KeyedEncodingContainerProtocol$implementation.prototype.encodeIfPresentForKey = function ($info, value, key) {
        throw 'unsupported method Swift.(file).KeyedEncodingContainerProtocol.encodeIfPresent(_:Float?,forKey:Self.Key) in ' + this.constructor.name;
    };
    /*Swift.(file).KeyedEncodingContainerProtocol.encodeIfPresent(_:Int?,forKey:Self.Key)*/
    /*Swift.(file).KeyedEncodingContainerProtocol.encodeIfPresent(_:Int?,forKey:Self.Key)*/
    KeyedEncodingContainerProtocol$implementation.prototype.encodeIfPresentForKey = function ($info, value, key) {
        throw 'unsupported method Swift.(file).KeyedEncodingContainerProtocol.encodeIfPresent(_:Int?,forKey:Self.Key) in ' + this.constructor.name;
    };
    /*Swift.(file).KeyedEncodingContainerProtocol.encodeIfPresent(_:Int8?,forKey:Self.Key)*/
    /*Swift.(file).KeyedEncodingContainerProtocol.encodeIfPresent(_:Int8?,forKey:Self.Key)*/
    KeyedEncodingContainerProtocol$implementation.prototype.encodeIfPresentForKey = function ($info, value, key) {
        throw 'unsupported method Swift.(file).KeyedEncodingContainerProtocol.encodeIfPresent(_:Int8?,forKey:Self.Key) in ' + this.constructor.name;
    };
    /*Swift.(file).KeyedEncodingContainerProtocol.encodeIfPresent(_:Int16?,forKey:Self.Key)*/
    /*Swift.(file).KeyedEncodingContainerProtocol.encodeIfPresent(_:Int16?,forKey:Self.Key)*/
    KeyedEncodingContainerProtocol$implementation.prototype.encodeIfPresentForKey = function ($info, value, key) {
        throw 'unsupported method Swift.(file).KeyedEncodingContainerProtocol.encodeIfPresent(_:Int16?,forKey:Self.Key) in ' + this.constructor.name;
    };
    /*Swift.(file).KeyedEncodingContainerProtocol.encodeIfPresent(_:Int32?,forKey:Self.Key)*/
    /*Swift.(file).KeyedEncodingContainerProtocol.encodeIfPresent(_:Int32?,forKey:Self.Key)*/
    KeyedEncodingContainerProtocol$implementation.prototype.encodeIfPresentForKey = function ($info, value, key) {
        throw 'unsupported method Swift.(file).KeyedEncodingContainerProtocol.encodeIfPresent(_:Int32?,forKey:Self.Key) in ' + this.constructor.name;
    };
    /*Swift.(file).KeyedEncodingContainerProtocol.encodeIfPresent(_:Int64?,forKey:Self.Key)*/
    /*Swift.(file).KeyedEncodingContainerProtocol.encodeIfPresent(_:Int64?,forKey:Self.Key)*/
    KeyedEncodingContainerProtocol$implementation.prototype.encodeIfPresentForKey = function ($info, value, key) {
        throw 'unsupported method Swift.(file).KeyedEncodingContainerProtocol.encodeIfPresent(_:Int64?,forKey:Self.Key) in ' + this.constructor.name;
    };
    /*Swift.(file).KeyedEncodingContainerProtocol.encodeIfPresent(_:UInt?,forKey:Self.Key)*/
    /*Swift.(file).KeyedEncodingContainerProtocol.encodeIfPresent(_:UInt?,forKey:Self.Key)*/
    KeyedEncodingContainerProtocol$implementation.prototype.encodeIfPresentForKey = function ($info, value, key) {
        throw 'unsupported method Swift.(file).KeyedEncodingContainerProtocol.encodeIfPresent(_:UInt?,forKey:Self.Key) in ' + this.constructor.name;
    };
    /*Swift.(file).KeyedEncodingContainerProtocol.encodeIfPresent(_:UInt8?,forKey:Self.Key)*/
    /*Swift.(file).KeyedEncodingContainerProtocol.encodeIfPresent(_:UInt8?,forKey:Self.Key)*/
    KeyedEncodingContainerProtocol$implementation.prototype.encodeIfPresentForKey = function ($info, value, key) {
        throw 'unsupported method Swift.(file).KeyedEncodingContainerProtocol.encodeIfPresent(_:UInt8?,forKey:Self.Key) in ' + this.constructor.name;
    };
    /*Swift.(file).KeyedEncodingContainerProtocol.encodeIfPresent(_:UInt16?,forKey:Self.Key)*/
    /*Swift.(file).KeyedEncodingContainerProtocol.encodeIfPresent(_:UInt16?,forKey:Self.Key)*/
    KeyedEncodingContainerProtocol$implementation.prototype.encodeIfPresentForKey = function ($info, value, key) {
        throw 'unsupported method Swift.(file).KeyedEncodingContainerProtocol.encodeIfPresent(_:UInt16?,forKey:Self.Key) in ' + this.constructor.name;
    };
    /*Swift.(file).KeyedEncodingContainerProtocol.encodeIfPresent(_:UInt32?,forKey:Self.Key)*/
    /*Swift.(file).KeyedEncodingContainerProtocol.encodeIfPresent(_:UInt32?,forKey:Self.Key)*/
    KeyedEncodingContainerProtocol$implementation.prototype.encodeIfPresentForKey = function ($info, value, key) {
        throw 'unsupported method Swift.(file).KeyedEncodingContainerProtocol.encodeIfPresent(_:UInt32?,forKey:Self.Key) in ' + this.constructor.name;
    };
    /*Swift.(file).KeyedEncodingContainerProtocol.encodeIfPresent(_:UInt64?,forKey:Self.Key)*/
    /*Swift.(file).KeyedEncodingContainerProtocol.encodeIfPresent(_:UInt64?,forKey:Self.Key)*/
    KeyedEncodingContainerProtocol$implementation.prototype.encodeIfPresentForKey = function ($info, value, key) {
        throw 'unsupported method Swift.(file).KeyedEncodingContainerProtocol.encodeIfPresent(_:UInt64?,forKey:Self.Key) in ' + this.constructor.name;
    };
    /*Swift.(file).KeyedEncodingContainerProtocol.encodeIfPresent(_:T?,forKey:Self.Key)*/
    /*Swift.(file).KeyedEncodingContainerProtocol.encodeIfPresent(_:T?,forKey:Self.Key)*/
    KeyedEncodingContainerProtocol$implementation.prototype.encodeIfPresentForKey = function ($info, value, key) {
        throw 'unsupported method Swift.(file).KeyedEncodingContainerProtocol.encodeIfPresent(_:T?,forKey:Self.Key) in ' + this.constructor.name;
    };
    return KeyedEncodingContainerProtocol$implementation;
}());
var KeyedEncodingContainer = /** @class */ (function () {
    function KeyedEncodingContainer() {
    }
    /*Swift.(file).KeyedEncodingContainer.init(_:Container)*/
    /*Swift.(file).KeyedEncodingContainer.init(_:Container)*/
    KeyedEncodingContainer.prototype.init = function ($info, container) {
        throw 'unsupported method Swift.(file).KeyedEncodingContainer.init(_:Container) in ' + this.constructor.name;
    };
    /*Swift.(file).KeyedEncodingContainer.codingPath*/
    KeyedEncodingContainer.prototype.codingPath$get = function () {
        throw 'unsupported variable Swift.(file).KeyedEncodingContainer.codingPath in ' + this.constructor.name;
    };
    Object.defineProperty(KeyedEncodingContainer.prototype, "codingPath", {
        get: function () { return this.codingPath$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).KeyedEncodingContainer.encodeNil(forKey:KeyedEncodingContainer<K>.Key)*/
    /*Swift.(file).KeyedEncodingContainerProtocol.encodeNil(forKey:Self.Key)*/
    KeyedEncodingContainer.prototype.encodeNilForKey = function ($info, key) {
        throw 'unsupported method Swift.(file).KeyedEncodingContainer.encodeNil(forKey:KeyedEncodingContainer<K>.Key) in ' + this.constructor.name;
    };
    /*Swift.(file).KeyedEncodingContainer.encode(_:Bool,forKey:KeyedEncodingContainer<K>.Key)*/
    /*Swift.(file).KeyedEncodingContainerProtocol.encode(_:Bool,forKey:Self.Key)*/
    KeyedEncodingContainer.prototype.encodeForKey = function ($info, value, key) {
        throw 'unsupported method Swift.(file).KeyedEncodingContainer.encode(_:Bool,forKey:KeyedEncodingContainer<K>.Key) in ' + this.constructor.name;
    };
    /*Swift.(file).KeyedEncodingContainer.encode(_:String,forKey:KeyedEncodingContainer<K>.Key)*/
    /*Swift.(file).KeyedEncodingContainerProtocol.encode(_:String,forKey:Self.Key)*/
    KeyedEncodingContainer.prototype.encodeForKey = function ($info, value, key) {
        throw 'unsupported method Swift.(file).KeyedEncodingContainer.encode(_:String,forKey:KeyedEncodingContainer<K>.Key) in ' + this.constructor.name;
    };
    /*Swift.(file).KeyedEncodingContainer.encode(_:Double,forKey:KeyedEncodingContainer<K>.Key)*/
    /*Swift.(file).KeyedEncodingContainerProtocol.encode(_:Double,forKey:Self.Key)*/
    KeyedEncodingContainer.prototype.encodeForKey = function ($info, value, key) {
        throw 'unsupported method Swift.(file).KeyedEncodingContainer.encode(_:Double,forKey:KeyedEncodingContainer<K>.Key) in ' + this.constructor.name;
    };
    /*Swift.(file).KeyedEncodingContainer.encode(_:Float,forKey:KeyedEncodingContainer<K>.Key)*/
    /*Swift.(file).KeyedEncodingContainerProtocol.encode(_:Float,forKey:Self.Key)*/
    KeyedEncodingContainer.prototype.encodeForKey = function ($info, value, key) {
        throw 'unsupported method Swift.(file).KeyedEncodingContainer.encode(_:Float,forKey:KeyedEncodingContainer<K>.Key) in ' + this.constructor.name;
    };
    /*Swift.(file).KeyedEncodingContainer.encode(_:Int,forKey:KeyedEncodingContainer<K>.Key)*/
    /*Swift.(file).KeyedEncodingContainerProtocol.encode(_:Int,forKey:Self.Key)*/
    KeyedEncodingContainer.prototype.encodeForKey = function ($info, value, key) {
        throw 'unsupported method Swift.(file).KeyedEncodingContainer.encode(_:Int,forKey:KeyedEncodingContainer<K>.Key) in ' + this.constructor.name;
    };
    /*Swift.(file).KeyedEncodingContainer.encode(_:Int8,forKey:KeyedEncodingContainer<K>.Key)*/
    /*Swift.(file).KeyedEncodingContainerProtocol.encode(_:Int8,forKey:Self.Key)*/
    KeyedEncodingContainer.prototype.encodeForKey = function ($info, value, key) {
        throw 'unsupported method Swift.(file).KeyedEncodingContainer.encode(_:Int8,forKey:KeyedEncodingContainer<K>.Key) in ' + this.constructor.name;
    };
    /*Swift.(file).KeyedEncodingContainer.encode(_:Int16,forKey:KeyedEncodingContainer<K>.Key)*/
    /*Swift.(file).KeyedEncodingContainerProtocol.encode(_:Int16,forKey:Self.Key)*/
    KeyedEncodingContainer.prototype.encodeForKey = function ($info, value, key) {
        throw 'unsupported method Swift.(file).KeyedEncodingContainer.encode(_:Int16,forKey:KeyedEncodingContainer<K>.Key) in ' + this.constructor.name;
    };
    /*Swift.(file).KeyedEncodingContainer.encode(_:Int32,forKey:KeyedEncodingContainer<K>.Key)*/
    /*Swift.(file).KeyedEncodingContainerProtocol.encode(_:Int32,forKey:Self.Key)*/
    KeyedEncodingContainer.prototype.encodeForKey = function ($info, value, key) {
        throw 'unsupported method Swift.(file).KeyedEncodingContainer.encode(_:Int32,forKey:KeyedEncodingContainer<K>.Key) in ' + this.constructor.name;
    };
    /*Swift.(file).KeyedEncodingContainer.encode(_:Int64,forKey:KeyedEncodingContainer<K>.Key)*/
    /*Swift.(file).KeyedEncodingContainerProtocol.encode(_:Int64,forKey:Self.Key)*/
    KeyedEncodingContainer.prototype.encodeForKey = function ($info, value, key) {
        throw 'unsupported method Swift.(file).KeyedEncodingContainer.encode(_:Int64,forKey:KeyedEncodingContainer<K>.Key) in ' + this.constructor.name;
    };
    /*Swift.(file).KeyedEncodingContainer.encode(_:UInt,forKey:KeyedEncodingContainer<K>.Key)*/
    /*Swift.(file).KeyedEncodingContainerProtocol.encode(_:UInt,forKey:Self.Key)*/
    KeyedEncodingContainer.prototype.encodeForKey = function ($info, value, key) {
        throw 'unsupported method Swift.(file).KeyedEncodingContainer.encode(_:UInt,forKey:KeyedEncodingContainer<K>.Key) in ' + this.constructor.name;
    };
    /*Swift.(file).KeyedEncodingContainer.encode(_:UInt8,forKey:KeyedEncodingContainer<K>.Key)*/
    /*Swift.(file).KeyedEncodingContainerProtocol.encode(_:UInt8,forKey:Self.Key)*/
    KeyedEncodingContainer.prototype.encodeForKey = function ($info, value, key) {
        throw 'unsupported method Swift.(file).KeyedEncodingContainer.encode(_:UInt8,forKey:KeyedEncodingContainer<K>.Key) in ' + this.constructor.name;
    };
    /*Swift.(file).KeyedEncodingContainer.encode(_:UInt16,forKey:KeyedEncodingContainer<K>.Key)*/
    /*Swift.(file).KeyedEncodingContainerProtocol.encode(_:UInt16,forKey:Self.Key)*/
    KeyedEncodingContainer.prototype.encodeForKey = function ($info, value, key) {
        throw 'unsupported method Swift.(file).KeyedEncodingContainer.encode(_:UInt16,forKey:KeyedEncodingContainer<K>.Key) in ' + this.constructor.name;
    };
    /*Swift.(file).KeyedEncodingContainer.encode(_:UInt32,forKey:KeyedEncodingContainer<K>.Key)*/
    /*Swift.(file).KeyedEncodingContainerProtocol.encode(_:UInt32,forKey:Self.Key)*/
    KeyedEncodingContainer.prototype.encodeForKey = function ($info, value, key) {
        throw 'unsupported method Swift.(file).KeyedEncodingContainer.encode(_:UInt32,forKey:KeyedEncodingContainer<K>.Key) in ' + this.constructor.name;
    };
    /*Swift.(file).KeyedEncodingContainer.encode(_:UInt64,forKey:KeyedEncodingContainer<K>.Key)*/
    /*Swift.(file).KeyedEncodingContainerProtocol.encode(_:UInt64,forKey:Self.Key)*/
    KeyedEncodingContainer.prototype.encodeForKey = function ($info, value, key) {
        throw 'unsupported method Swift.(file).KeyedEncodingContainer.encode(_:UInt64,forKey:KeyedEncodingContainer<K>.Key) in ' + this.constructor.name;
    };
    /*Swift.(file).KeyedEncodingContainer.encode(_:T,forKey:KeyedEncodingContainer<K>.Key)*/
    /*Swift.(file).KeyedEncodingContainerProtocol.encode(_:T,forKey:Self.Key)*/
    KeyedEncodingContainer.prototype.encodeForKey = function ($info, value, key) {
        throw 'unsupported method Swift.(file).KeyedEncodingContainer.encode(_:T,forKey:KeyedEncodingContainer<K>.Key) in ' + this.constructor.name;
    };
    /*Swift.(file).KeyedEncodingContainer.encodeConditional(_:T,forKey:KeyedEncodingContainer<K>.Key)*/
    /*Swift.(file).KeyedEncodingContainerProtocol.encodeConditional(_:T,forKey:Self.Key)*/
    KeyedEncodingContainer.prototype.encodeConditionalForKey = function ($info, object, key) {
        throw 'unsupported method Swift.(file).KeyedEncodingContainer.encodeConditional(_:T,forKey:KeyedEncodingContainer<K>.Key) in ' + this.constructor.name;
    };
    /*Swift.(file).KeyedEncodingContainer.encodeIfPresent(_:Bool?,forKey:KeyedEncodingContainer<K>.Key)*/
    /*Swift.(file).KeyedEncodingContainerProtocol.encodeIfPresent(_:Bool?,forKey:Self.Key)*/
    KeyedEncodingContainer.prototype.encodeIfPresentForKey = function ($info, value, key) {
        throw 'unsupported method Swift.(file).KeyedEncodingContainer.encodeIfPresent(_:Bool?,forKey:KeyedEncodingContainer<K>.Key) in ' + this.constructor.name;
    };
    /*Swift.(file).KeyedEncodingContainer.encodeIfPresent(_:String?,forKey:KeyedEncodingContainer<K>.Key)*/
    /*Swift.(file).KeyedEncodingContainerProtocol.encodeIfPresent(_:String?,forKey:Self.Key)*/
    KeyedEncodingContainer.prototype.encodeIfPresentForKey = function ($info, value, key) {
        throw 'unsupported method Swift.(file).KeyedEncodingContainer.encodeIfPresent(_:String?,forKey:KeyedEncodingContainer<K>.Key) in ' + this.constructor.name;
    };
    /*Swift.(file).KeyedEncodingContainer.encodeIfPresent(_:Double?,forKey:KeyedEncodingContainer<K>.Key)*/
    /*Swift.(file).KeyedEncodingContainerProtocol.encodeIfPresent(_:Double?,forKey:Self.Key)*/
    KeyedEncodingContainer.prototype.encodeIfPresentForKey = function ($info, value, key) {
        throw 'unsupported method Swift.(file).KeyedEncodingContainer.encodeIfPresent(_:Double?,forKey:KeyedEncodingContainer<K>.Key) in ' + this.constructor.name;
    };
    /*Swift.(file).KeyedEncodingContainer.encodeIfPresent(_:Float?,forKey:KeyedEncodingContainer<K>.Key)*/
    /*Swift.(file).KeyedEncodingContainerProtocol.encodeIfPresent(_:Float?,forKey:Self.Key)*/
    KeyedEncodingContainer.prototype.encodeIfPresentForKey = function ($info, value, key) {
        throw 'unsupported method Swift.(file).KeyedEncodingContainer.encodeIfPresent(_:Float?,forKey:KeyedEncodingContainer<K>.Key) in ' + this.constructor.name;
    };
    /*Swift.(file).KeyedEncodingContainer.encodeIfPresent(_:Int?,forKey:KeyedEncodingContainer<K>.Key)*/
    /*Swift.(file).KeyedEncodingContainerProtocol.encodeIfPresent(_:Int?,forKey:Self.Key)*/
    KeyedEncodingContainer.prototype.encodeIfPresentForKey = function ($info, value, key) {
        throw 'unsupported method Swift.(file).KeyedEncodingContainer.encodeIfPresent(_:Int?,forKey:KeyedEncodingContainer<K>.Key) in ' + this.constructor.name;
    };
    /*Swift.(file).KeyedEncodingContainer.encodeIfPresent(_:Int8?,forKey:KeyedEncodingContainer<K>.Key)*/
    /*Swift.(file).KeyedEncodingContainerProtocol.encodeIfPresent(_:Int8?,forKey:Self.Key)*/
    KeyedEncodingContainer.prototype.encodeIfPresentForKey = function ($info, value, key) {
        throw 'unsupported method Swift.(file).KeyedEncodingContainer.encodeIfPresent(_:Int8?,forKey:KeyedEncodingContainer<K>.Key) in ' + this.constructor.name;
    };
    /*Swift.(file).KeyedEncodingContainer.encodeIfPresent(_:Int16?,forKey:KeyedEncodingContainer<K>.Key)*/
    /*Swift.(file).KeyedEncodingContainerProtocol.encodeIfPresent(_:Int16?,forKey:Self.Key)*/
    KeyedEncodingContainer.prototype.encodeIfPresentForKey = function ($info, value, key) {
        throw 'unsupported method Swift.(file).KeyedEncodingContainer.encodeIfPresent(_:Int16?,forKey:KeyedEncodingContainer<K>.Key) in ' + this.constructor.name;
    };
    /*Swift.(file).KeyedEncodingContainer.encodeIfPresent(_:Int32?,forKey:KeyedEncodingContainer<K>.Key)*/
    /*Swift.(file).KeyedEncodingContainerProtocol.encodeIfPresent(_:Int32?,forKey:Self.Key)*/
    KeyedEncodingContainer.prototype.encodeIfPresentForKey = function ($info, value, key) {
        throw 'unsupported method Swift.(file).KeyedEncodingContainer.encodeIfPresent(_:Int32?,forKey:KeyedEncodingContainer<K>.Key) in ' + this.constructor.name;
    };
    /*Swift.(file).KeyedEncodingContainer.encodeIfPresent(_:Int64?,forKey:KeyedEncodingContainer<K>.Key)*/
    /*Swift.(file).KeyedEncodingContainerProtocol.encodeIfPresent(_:Int64?,forKey:Self.Key)*/
    KeyedEncodingContainer.prototype.encodeIfPresentForKey = function ($info, value, key) {
        throw 'unsupported method Swift.(file).KeyedEncodingContainer.encodeIfPresent(_:Int64?,forKey:KeyedEncodingContainer<K>.Key) in ' + this.constructor.name;
    };
    /*Swift.(file).KeyedEncodingContainer.encodeIfPresent(_:UInt?,forKey:KeyedEncodingContainer<K>.Key)*/
    /*Swift.(file).KeyedEncodingContainerProtocol.encodeIfPresent(_:UInt?,forKey:Self.Key)*/
    KeyedEncodingContainer.prototype.encodeIfPresentForKey = function ($info, value, key) {
        throw 'unsupported method Swift.(file).KeyedEncodingContainer.encodeIfPresent(_:UInt?,forKey:KeyedEncodingContainer<K>.Key) in ' + this.constructor.name;
    };
    /*Swift.(file).KeyedEncodingContainer.encodeIfPresent(_:UInt8?,forKey:KeyedEncodingContainer<K>.Key)*/
    /*Swift.(file).KeyedEncodingContainerProtocol.encodeIfPresent(_:UInt8?,forKey:Self.Key)*/
    KeyedEncodingContainer.prototype.encodeIfPresentForKey = function ($info, value, key) {
        throw 'unsupported method Swift.(file).KeyedEncodingContainer.encodeIfPresent(_:UInt8?,forKey:KeyedEncodingContainer<K>.Key) in ' + this.constructor.name;
    };
    /*Swift.(file).KeyedEncodingContainer.encodeIfPresent(_:UInt16?,forKey:KeyedEncodingContainer<K>.Key)*/
    /*Swift.(file).KeyedEncodingContainerProtocol.encodeIfPresent(_:UInt16?,forKey:Self.Key)*/
    KeyedEncodingContainer.prototype.encodeIfPresentForKey = function ($info, value, key) {
        throw 'unsupported method Swift.(file).KeyedEncodingContainer.encodeIfPresent(_:UInt16?,forKey:KeyedEncodingContainer<K>.Key) in ' + this.constructor.name;
    };
    /*Swift.(file).KeyedEncodingContainer.encodeIfPresent(_:UInt32?,forKey:KeyedEncodingContainer<K>.Key)*/
    /*Swift.(file).KeyedEncodingContainerProtocol.encodeIfPresent(_:UInt32?,forKey:Self.Key)*/
    KeyedEncodingContainer.prototype.encodeIfPresentForKey = function ($info, value, key) {
        throw 'unsupported method Swift.(file).KeyedEncodingContainer.encodeIfPresent(_:UInt32?,forKey:KeyedEncodingContainer<K>.Key) in ' + this.constructor.name;
    };
    /*Swift.(file).KeyedEncodingContainer.encodeIfPresent(_:UInt64?,forKey:KeyedEncodingContainer<K>.Key)*/
    /*Swift.(file).KeyedEncodingContainerProtocol.encodeIfPresent(_:UInt64?,forKey:Self.Key)*/
    KeyedEncodingContainer.prototype.encodeIfPresentForKey = function ($info, value, key) {
        throw 'unsupported method Swift.(file).KeyedEncodingContainer.encodeIfPresent(_:UInt64?,forKey:KeyedEncodingContainer<K>.Key) in ' + this.constructor.name;
    };
    /*Swift.(file).KeyedEncodingContainer.encodeIfPresent(_:T?,forKey:KeyedEncodingContainer<K>.Key)*/
    /*Swift.(file).KeyedEncodingContainerProtocol.encodeIfPresent(_:T?,forKey:Self.Key)*/
    KeyedEncodingContainer.prototype.encodeIfPresentForKey = function ($info, value, key) {
        throw 'unsupported method Swift.(file).KeyedEncodingContainer.encodeIfPresent(_:T?,forKey:KeyedEncodingContainer<K>.Key) in ' + this.constructor.name;
    };
    /*Swift.(file).KeyedEncodingContainer.nestedContainer(keyedBy:NestedKey.Type,forKey:KeyedEncodingContainer<K>.Key)*/
    /*Swift.(file).KeyedEncodingContainerProtocol.nestedContainer(keyedBy:NestedKey.Type,forKey:Self.Key)*/
    KeyedEncodingContainer.prototype.nestedContainerKeyedByForKey = function ($info, keyType, key) {
        throw 'unsupported method Swift.(file).KeyedEncodingContainer.nestedContainer(keyedBy:NestedKey.Type,forKey:KeyedEncodingContainer<K>.Key) in ' + this.constructor.name;
    };
    /*Swift.(file).KeyedEncodingContainer.nestedUnkeyedContainer(forKey:KeyedEncodingContainer<K>.Key)*/
    /*Swift.(file).KeyedEncodingContainerProtocol.nestedUnkeyedContainer(forKey:Self.Key)*/
    KeyedEncodingContainer.prototype.nestedUnkeyedContainerForKey = function ($info, key) {
        throw 'unsupported method Swift.(file).KeyedEncodingContainer.nestedUnkeyedContainer(forKey:KeyedEncodingContainer<K>.Key) in ' + this.constructor.name;
    };
    /*Swift.(file).KeyedEncodingContainer.superEncoder()*/
    /*Swift.(file).KeyedEncodingContainerProtocol.superEncoder()*/
    KeyedEncodingContainer.prototype.superEncoder = function ($info) {
        throw 'unsupported method Swift.(file).KeyedEncodingContainer.superEncoder() in ' + this.constructor.name;
    };
    /*Swift.(file).KeyedEncodingContainer.superEncoder(forKey:KeyedEncodingContainer<K>.Key)*/
    /*Swift.(file).KeyedEncodingContainerProtocol.superEncoder(forKey:Self.Key)*/
    KeyedEncodingContainer.prototype.superEncoderForKey = function ($info, key) {
        throw 'unsupported method Swift.(file).KeyedEncodingContainer.superEncoder(forKey:KeyedEncodingContainer<K>.Key) in ' + this.constructor.name;
    };
    KeyedEncodingContainer.prototype.init$vars = function () {
    };
    KeyedEncodingContainer.$struct = true;
    KeyedEncodingContainer.$infoAddress = '';
    return KeyedEncodingContainer;
}());
if (typeof KeyedEncodingContainerProtocol$implementation != 'undefined')
    _mixin(KeyedEncodingContainer, KeyedEncodingContainerProtocol$implementation, false);
var KeyedDecodingContainerProtocol$implementation = /** @class */ (function () {
    function KeyedDecodingContainerProtocol$implementation() {
    }
    /*Swift.(file).KeyedDecodingContainerProtocol.decodeIfPresent(_:Bool.Type,forKey:Self.Key)*/
    /*Swift.(file).KeyedDecodingContainerProtocol.decodeIfPresent(_:Bool.Type,forKey:Self.Key)*/
    KeyedDecodingContainerProtocol$implementation.prototype.decodeIfPresentForKey = function ($info, type, key) {
        throw 'unsupported method Swift.(file).KeyedDecodingContainerProtocol.decodeIfPresent(_:Bool.Type,forKey:Self.Key) in ' + this.constructor.name;
    };
    /*Swift.(file).KeyedDecodingContainerProtocol.decodeIfPresent(_:String.Type,forKey:Self.Key)*/
    /*Swift.(file).KeyedDecodingContainerProtocol.decodeIfPresent(_:String.Type,forKey:Self.Key)*/
    KeyedDecodingContainerProtocol$implementation.prototype.decodeIfPresentForKey = function ($info, type, key) {
        throw 'unsupported method Swift.(file).KeyedDecodingContainerProtocol.decodeIfPresent(_:String.Type,forKey:Self.Key) in ' + this.constructor.name;
    };
    /*Swift.(file).KeyedDecodingContainerProtocol.decodeIfPresent(_:Double.Type,forKey:Self.Key)*/
    /*Swift.(file).KeyedDecodingContainerProtocol.decodeIfPresent(_:Double.Type,forKey:Self.Key)*/
    KeyedDecodingContainerProtocol$implementation.prototype.decodeIfPresentForKey = function ($info, type, key) {
        throw 'unsupported method Swift.(file).KeyedDecodingContainerProtocol.decodeIfPresent(_:Double.Type,forKey:Self.Key) in ' + this.constructor.name;
    };
    /*Swift.(file).KeyedDecodingContainerProtocol.decodeIfPresent(_:Float.Type,forKey:Self.Key)*/
    /*Swift.(file).KeyedDecodingContainerProtocol.decodeIfPresent(_:Float.Type,forKey:Self.Key)*/
    KeyedDecodingContainerProtocol$implementation.prototype.decodeIfPresentForKey = function ($info, type, key) {
        throw 'unsupported method Swift.(file).KeyedDecodingContainerProtocol.decodeIfPresent(_:Float.Type,forKey:Self.Key) in ' + this.constructor.name;
    };
    /*Swift.(file).KeyedDecodingContainerProtocol.decodeIfPresent(_:Int.Type,forKey:Self.Key)*/
    /*Swift.(file).KeyedDecodingContainerProtocol.decodeIfPresent(_:Int.Type,forKey:Self.Key)*/
    KeyedDecodingContainerProtocol$implementation.prototype.decodeIfPresentForKey = function ($info, type, key) {
        throw 'unsupported method Swift.(file).KeyedDecodingContainerProtocol.decodeIfPresent(_:Int.Type,forKey:Self.Key) in ' + this.constructor.name;
    };
    /*Swift.(file).KeyedDecodingContainerProtocol.decodeIfPresent(_:Int8.Type,forKey:Self.Key)*/
    /*Swift.(file).KeyedDecodingContainerProtocol.decodeIfPresent(_:Int8.Type,forKey:Self.Key)*/
    KeyedDecodingContainerProtocol$implementation.prototype.decodeIfPresentForKey = function ($info, type, key) {
        throw 'unsupported method Swift.(file).KeyedDecodingContainerProtocol.decodeIfPresent(_:Int8.Type,forKey:Self.Key) in ' + this.constructor.name;
    };
    /*Swift.(file).KeyedDecodingContainerProtocol.decodeIfPresent(_:Int16.Type,forKey:Self.Key)*/
    /*Swift.(file).KeyedDecodingContainerProtocol.decodeIfPresent(_:Int16.Type,forKey:Self.Key)*/
    KeyedDecodingContainerProtocol$implementation.prototype.decodeIfPresentForKey = function ($info, type, key) {
        throw 'unsupported method Swift.(file).KeyedDecodingContainerProtocol.decodeIfPresent(_:Int16.Type,forKey:Self.Key) in ' + this.constructor.name;
    };
    /*Swift.(file).KeyedDecodingContainerProtocol.decodeIfPresent(_:Int32.Type,forKey:Self.Key)*/
    /*Swift.(file).KeyedDecodingContainerProtocol.decodeIfPresent(_:Int32.Type,forKey:Self.Key)*/
    KeyedDecodingContainerProtocol$implementation.prototype.decodeIfPresentForKey = function ($info, type, key) {
        throw 'unsupported method Swift.(file).KeyedDecodingContainerProtocol.decodeIfPresent(_:Int32.Type,forKey:Self.Key) in ' + this.constructor.name;
    };
    /*Swift.(file).KeyedDecodingContainerProtocol.decodeIfPresent(_:Int64.Type,forKey:Self.Key)*/
    /*Swift.(file).KeyedDecodingContainerProtocol.decodeIfPresent(_:Int64.Type,forKey:Self.Key)*/
    KeyedDecodingContainerProtocol$implementation.prototype.decodeIfPresentForKey = function ($info, type, key) {
        throw 'unsupported method Swift.(file).KeyedDecodingContainerProtocol.decodeIfPresent(_:Int64.Type,forKey:Self.Key) in ' + this.constructor.name;
    };
    /*Swift.(file).KeyedDecodingContainerProtocol.decodeIfPresent(_:UInt.Type,forKey:Self.Key)*/
    /*Swift.(file).KeyedDecodingContainerProtocol.decodeIfPresent(_:UInt.Type,forKey:Self.Key)*/
    KeyedDecodingContainerProtocol$implementation.prototype.decodeIfPresentForKey = function ($info, type, key) {
        throw 'unsupported method Swift.(file).KeyedDecodingContainerProtocol.decodeIfPresent(_:UInt.Type,forKey:Self.Key) in ' + this.constructor.name;
    };
    /*Swift.(file).KeyedDecodingContainerProtocol.decodeIfPresent(_:UInt8.Type,forKey:Self.Key)*/
    /*Swift.(file).KeyedDecodingContainerProtocol.decodeIfPresent(_:UInt8.Type,forKey:Self.Key)*/
    KeyedDecodingContainerProtocol$implementation.prototype.decodeIfPresentForKey = function ($info, type, key) {
        throw 'unsupported method Swift.(file).KeyedDecodingContainerProtocol.decodeIfPresent(_:UInt8.Type,forKey:Self.Key) in ' + this.constructor.name;
    };
    /*Swift.(file).KeyedDecodingContainerProtocol.decodeIfPresent(_:UInt16.Type,forKey:Self.Key)*/
    /*Swift.(file).KeyedDecodingContainerProtocol.decodeIfPresent(_:UInt16.Type,forKey:Self.Key)*/
    KeyedDecodingContainerProtocol$implementation.prototype.decodeIfPresentForKey = function ($info, type, key) {
        throw 'unsupported method Swift.(file).KeyedDecodingContainerProtocol.decodeIfPresent(_:UInt16.Type,forKey:Self.Key) in ' + this.constructor.name;
    };
    /*Swift.(file).KeyedDecodingContainerProtocol.decodeIfPresent(_:UInt32.Type,forKey:Self.Key)*/
    /*Swift.(file).KeyedDecodingContainerProtocol.decodeIfPresent(_:UInt32.Type,forKey:Self.Key)*/
    KeyedDecodingContainerProtocol$implementation.prototype.decodeIfPresentForKey = function ($info, type, key) {
        throw 'unsupported method Swift.(file).KeyedDecodingContainerProtocol.decodeIfPresent(_:UInt32.Type,forKey:Self.Key) in ' + this.constructor.name;
    };
    /*Swift.(file).KeyedDecodingContainerProtocol.decodeIfPresent(_:UInt64.Type,forKey:Self.Key)*/
    /*Swift.(file).KeyedDecodingContainerProtocol.decodeIfPresent(_:UInt64.Type,forKey:Self.Key)*/
    KeyedDecodingContainerProtocol$implementation.prototype.decodeIfPresentForKey = function ($info, type, key) {
        throw 'unsupported method Swift.(file).KeyedDecodingContainerProtocol.decodeIfPresent(_:UInt64.Type,forKey:Self.Key) in ' + this.constructor.name;
    };
    /*Swift.(file).KeyedDecodingContainerProtocol.decodeIfPresent(_:T.Type,forKey:Self.Key)*/
    /*Swift.(file).KeyedDecodingContainerProtocol.decodeIfPresent(_:T.Type,forKey:Self.Key)*/
    KeyedDecodingContainerProtocol$implementation.prototype.decodeIfPresentForKey = function ($info, type, key) {
        throw 'unsupported method Swift.(file).KeyedDecodingContainerProtocol.decodeIfPresent(_:T.Type,forKey:Self.Key) in ' + this.constructor.name;
    };
    return KeyedDecodingContainerProtocol$implementation;
}());
var KeyedDecodingContainer = /** @class */ (function () {
    function KeyedDecodingContainer() {
    }
    /*Swift.(file).KeyedDecodingContainer.init(_:Container)*/
    /*Swift.(file).KeyedDecodingContainer.init(_:Container)*/
    KeyedDecodingContainer.prototype.init = function ($info, container) {
        throw 'unsupported method Swift.(file).KeyedDecodingContainer.init(_:Container) in ' + this.constructor.name;
    };
    /*Swift.(file).KeyedDecodingContainer.codingPath*/
    KeyedDecodingContainer.prototype.codingPath$get = function () {
        throw 'unsupported variable Swift.(file).KeyedDecodingContainer.codingPath in ' + this.constructor.name;
    };
    Object.defineProperty(KeyedDecodingContainer.prototype, "codingPath", {
        get: function () { return this.codingPath$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).KeyedDecodingContainer.allKeys*/
    KeyedDecodingContainer.prototype.allKeys$get = function () {
        throw 'unsupported variable Swift.(file).KeyedDecodingContainer.allKeys in ' + this.constructor.name;
    };
    Object.defineProperty(KeyedDecodingContainer.prototype, "allKeys", {
        get: function () { return this.allKeys$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).KeyedDecodingContainer.contains(_:KeyedDecodingContainer<K>.Key)*/
    /*Swift.(file).KeyedDecodingContainerProtocol.contains(_:Self.Key)*/
    KeyedDecodingContainer.prototype.contains = function ($info, key) {
        throw 'unsupported method Swift.(file).KeyedDecodingContainer.contains(_:KeyedDecodingContainer<K>.Key) in ' + this.constructor.name;
    };
    /*Swift.(file).KeyedDecodingContainer.decodeNil(forKey:KeyedDecodingContainer<K>.Key)*/
    /*Swift.(file).KeyedDecodingContainerProtocol.decodeNil(forKey:Self.Key)*/
    KeyedDecodingContainer.prototype.decodeNilForKey = function ($info, key) {
        throw 'unsupported method Swift.(file).KeyedDecodingContainer.decodeNil(forKey:KeyedDecodingContainer<K>.Key) in ' + this.constructor.name;
    };
    /*Swift.(file).KeyedDecodingContainer.decode(_:Bool.Type,forKey:KeyedDecodingContainer<K>.Key)*/
    /*Swift.(file).KeyedDecodingContainerProtocol.decode(_:Bool.Type,forKey:Self.Key)*/
    KeyedDecodingContainer.prototype.decodeForKey = function ($info, type, key) {
        throw 'unsupported method Swift.(file).KeyedDecodingContainer.decode(_:Bool.Type,forKey:KeyedDecodingContainer<K>.Key) in ' + this.constructor.name;
    };
    /*Swift.(file).KeyedDecodingContainer.decode(_:String.Type,forKey:KeyedDecodingContainer<K>.Key)*/
    /*Swift.(file).KeyedDecodingContainerProtocol.decode(_:String.Type,forKey:Self.Key)*/
    KeyedDecodingContainer.prototype.decodeForKey = function ($info, type, key) {
        throw 'unsupported method Swift.(file).KeyedDecodingContainer.decode(_:String.Type,forKey:KeyedDecodingContainer<K>.Key) in ' + this.constructor.name;
    };
    /*Swift.(file).KeyedDecodingContainer.decode(_:Double.Type,forKey:KeyedDecodingContainer<K>.Key)*/
    /*Swift.(file).KeyedDecodingContainerProtocol.decode(_:Double.Type,forKey:Self.Key)*/
    KeyedDecodingContainer.prototype.decodeForKey = function ($info, type, key) {
        throw 'unsupported method Swift.(file).KeyedDecodingContainer.decode(_:Double.Type,forKey:KeyedDecodingContainer<K>.Key) in ' + this.constructor.name;
    };
    /*Swift.(file).KeyedDecodingContainer.decode(_:Float.Type,forKey:KeyedDecodingContainer<K>.Key)*/
    /*Swift.(file).KeyedDecodingContainerProtocol.decode(_:Float.Type,forKey:Self.Key)*/
    KeyedDecodingContainer.prototype.decodeForKey = function ($info, type, key) {
        throw 'unsupported method Swift.(file).KeyedDecodingContainer.decode(_:Float.Type,forKey:KeyedDecodingContainer<K>.Key) in ' + this.constructor.name;
    };
    /*Swift.(file).KeyedDecodingContainer.decode(_:Int.Type,forKey:KeyedDecodingContainer<K>.Key)*/
    /*Swift.(file).KeyedDecodingContainerProtocol.decode(_:Int.Type,forKey:Self.Key)*/
    KeyedDecodingContainer.prototype.decodeForKey = function ($info, type, key) {
        throw 'unsupported method Swift.(file).KeyedDecodingContainer.decode(_:Int.Type,forKey:KeyedDecodingContainer<K>.Key) in ' + this.constructor.name;
    };
    /*Swift.(file).KeyedDecodingContainer.decode(_:Int8.Type,forKey:KeyedDecodingContainer<K>.Key)*/
    /*Swift.(file).KeyedDecodingContainerProtocol.decode(_:Int8.Type,forKey:Self.Key)*/
    KeyedDecodingContainer.prototype.decodeForKey = function ($info, type, key) {
        throw 'unsupported method Swift.(file).KeyedDecodingContainer.decode(_:Int8.Type,forKey:KeyedDecodingContainer<K>.Key) in ' + this.constructor.name;
    };
    /*Swift.(file).KeyedDecodingContainer.decode(_:Int16.Type,forKey:KeyedDecodingContainer<K>.Key)*/
    /*Swift.(file).KeyedDecodingContainerProtocol.decode(_:Int16.Type,forKey:Self.Key)*/
    KeyedDecodingContainer.prototype.decodeForKey = function ($info, type, key) {
        throw 'unsupported method Swift.(file).KeyedDecodingContainer.decode(_:Int16.Type,forKey:KeyedDecodingContainer<K>.Key) in ' + this.constructor.name;
    };
    /*Swift.(file).KeyedDecodingContainer.decode(_:Int32.Type,forKey:KeyedDecodingContainer<K>.Key)*/
    /*Swift.(file).KeyedDecodingContainerProtocol.decode(_:Int32.Type,forKey:Self.Key)*/
    KeyedDecodingContainer.prototype.decodeForKey = function ($info, type, key) {
        throw 'unsupported method Swift.(file).KeyedDecodingContainer.decode(_:Int32.Type,forKey:KeyedDecodingContainer<K>.Key) in ' + this.constructor.name;
    };
    /*Swift.(file).KeyedDecodingContainer.decode(_:Int64.Type,forKey:KeyedDecodingContainer<K>.Key)*/
    /*Swift.(file).KeyedDecodingContainerProtocol.decode(_:Int64.Type,forKey:Self.Key)*/
    KeyedDecodingContainer.prototype.decodeForKey = function ($info, type, key) {
        throw 'unsupported method Swift.(file).KeyedDecodingContainer.decode(_:Int64.Type,forKey:KeyedDecodingContainer<K>.Key) in ' + this.constructor.name;
    };
    /*Swift.(file).KeyedDecodingContainer.decode(_:UInt.Type,forKey:KeyedDecodingContainer<K>.Key)*/
    /*Swift.(file).KeyedDecodingContainerProtocol.decode(_:UInt.Type,forKey:Self.Key)*/
    KeyedDecodingContainer.prototype.decodeForKey = function ($info, type, key) {
        throw 'unsupported method Swift.(file).KeyedDecodingContainer.decode(_:UInt.Type,forKey:KeyedDecodingContainer<K>.Key) in ' + this.constructor.name;
    };
    /*Swift.(file).KeyedDecodingContainer.decode(_:UInt8.Type,forKey:KeyedDecodingContainer<K>.Key)*/
    /*Swift.(file).KeyedDecodingContainerProtocol.decode(_:UInt8.Type,forKey:Self.Key)*/
    KeyedDecodingContainer.prototype.decodeForKey = function ($info, type, key) {
        throw 'unsupported method Swift.(file).KeyedDecodingContainer.decode(_:UInt8.Type,forKey:KeyedDecodingContainer<K>.Key) in ' + this.constructor.name;
    };
    /*Swift.(file).KeyedDecodingContainer.decode(_:UInt16.Type,forKey:KeyedDecodingContainer<K>.Key)*/
    /*Swift.(file).KeyedDecodingContainerProtocol.decode(_:UInt16.Type,forKey:Self.Key)*/
    KeyedDecodingContainer.prototype.decodeForKey = function ($info, type, key) {
        throw 'unsupported method Swift.(file).KeyedDecodingContainer.decode(_:UInt16.Type,forKey:KeyedDecodingContainer<K>.Key) in ' + this.constructor.name;
    };
    /*Swift.(file).KeyedDecodingContainer.decode(_:UInt32.Type,forKey:KeyedDecodingContainer<K>.Key)*/
    /*Swift.(file).KeyedDecodingContainerProtocol.decode(_:UInt32.Type,forKey:Self.Key)*/
    KeyedDecodingContainer.prototype.decodeForKey = function ($info, type, key) {
        throw 'unsupported method Swift.(file).KeyedDecodingContainer.decode(_:UInt32.Type,forKey:KeyedDecodingContainer<K>.Key) in ' + this.constructor.name;
    };
    /*Swift.(file).KeyedDecodingContainer.decode(_:UInt64.Type,forKey:KeyedDecodingContainer<K>.Key)*/
    /*Swift.(file).KeyedDecodingContainerProtocol.decode(_:UInt64.Type,forKey:Self.Key)*/
    KeyedDecodingContainer.prototype.decodeForKey = function ($info, type, key) {
        throw 'unsupported method Swift.(file).KeyedDecodingContainer.decode(_:UInt64.Type,forKey:KeyedDecodingContainer<K>.Key) in ' + this.constructor.name;
    };
    /*Swift.(file).KeyedDecodingContainer.decode(_:T.Type,forKey:KeyedDecodingContainer<K>.Key)*/
    /*Swift.(file).KeyedDecodingContainerProtocol.decode(_:T.Type,forKey:Self.Key)*/
    KeyedDecodingContainer.prototype.decodeForKey = function ($info, type, key) {
        throw 'unsupported method Swift.(file).KeyedDecodingContainer.decode(_:T.Type,forKey:KeyedDecodingContainer<K>.Key) in ' + this.constructor.name;
    };
    /*Swift.(file).KeyedDecodingContainer.decodeIfPresent(_:Bool.Type,forKey:KeyedDecodingContainer<K>.Key)*/
    /*Swift.(file).KeyedDecodingContainerProtocol.decodeIfPresent(_:Bool.Type,forKey:Self.Key)*/
    KeyedDecodingContainer.prototype.decodeIfPresentForKey = function ($info, type, key) {
        throw 'unsupported method Swift.(file).KeyedDecodingContainer.decodeIfPresent(_:Bool.Type,forKey:KeyedDecodingContainer<K>.Key) in ' + this.constructor.name;
    };
    /*Swift.(file).KeyedDecodingContainer.decodeIfPresent(_:String.Type,forKey:KeyedDecodingContainer<K>.Key)*/
    /*Swift.(file).KeyedDecodingContainerProtocol.decodeIfPresent(_:String.Type,forKey:Self.Key)*/
    KeyedDecodingContainer.prototype.decodeIfPresentForKey = function ($info, type, key) {
        throw 'unsupported method Swift.(file).KeyedDecodingContainer.decodeIfPresent(_:String.Type,forKey:KeyedDecodingContainer<K>.Key) in ' + this.constructor.name;
    };
    /*Swift.(file).KeyedDecodingContainer.decodeIfPresent(_:Double.Type,forKey:KeyedDecodingContainer<K>.Key)*/
    /*Swift.(file).KeyedDecodingContainerProtocol.decodeIfPresent(_:Double.Type,forKey:Self.Key)*/
    KeyedDecodingContainer.prototype.decodeIfPresentForKey = function ($info, type, key) {
        throw 'unsupported method Swift.(file).KeyedDecodingContainer.decodeIfPresent(_:Double.Type,forKey:KeyedDecodingContainer<K>.Key) in ' + this.constructor.name;
    };
    /*Swift.(file).KeyedDecodingContainer.decodeIfPresent(_:Float.Type,forKey:KeyedDecodingContainer<K>.Key)*/
    /*Swift.(file).KeyedDecodingContainerProtocol.decodeIfPresent(_:Float.Type,forKey:Self.Key)*/
    KeyedDecodingContainer.prototype.decodeIfPresentForKey = function ($info, type, key) {
        throw 'unsupported method Swift.(file).KeyedDecodingContainer.decodeIfPresent(_:Float.Type,forKey:KeyedDecodingContainer<K>.Key) in ' + this.constructor.name;
    };
    /*Swift.(file).KeyedDecodingContainer.decodeIfPresent(_:Int.Type,forKey:KeyedDecodingContainer<K>.Key)*/
    /*Swift.(file).KeyedDecodingContainerProtocol.decodeIfPresent(_:Int.Type,forKey:Self.Key)*/
    KeyedDecodingContainer.prototype.decodeIfPresentForKey = function ($info, type, key) {
        throw 'unsupported method Swift.(file).KeyedDecodingContainer.decodeIfPresent(_:Int.Type,forKey:KeyedDecodingContainer<K>.Key) in ' + this.constructor.name;
    };
    /*Swift.(file).KeyedDecodingContainer.decodeIfPresent(_:Int8.Type,forKey:KeyedDecodingContainer<K>.Key)*/
    /*Swift.(file).KeyedDecodingContainerProtocol.decodeIfPresent(_:Int8.Type,forKey:Self.Key)*/
    KeyedDecodingContainer.prototype.decodeIfPresentForKey = function ($info, type, key) {
        throw 'unsupported method Swift.(file).KeyedDecodingContainer.decodeIfPresent(_:Int8.Type,forKey:KeyedDecodingContainer<K>.Key) in ' + this.constructor.name;
    };
    /*Swift.(file).KeyedDecodingContainer.decodeIfPresent(_:Int16.Type,forKey:KeyedDecodingContainer<K>.Key)*/
    /*Swift.(file).KeyedDecodingContainerProtocol.decodeIfPresent(_:Int16.Type,forKey:Self.Key)*/
    KeyedDecodingContainer.prototype.decodeIfPresentForKey = function ($info, type, key) {
        throw 'unsupported method Swift.(file).KeyedDecodingContainer.decodeIfPresent(_:Int16.Type,forKey:KeyedDecodingContainer<K>.Key) in ' + this.constructor.name;
    };
    /*Swift.(file).KeyedDecodingContainer.decodeIfPresent(_:Int32.Type,forKey:KeyedDecodingContainer<K>.Key)*/
    /*Swift.(file).KeyedDecodingContainerProtocol.decodeIfPresent(_:Int32.Type,forKey:Self.Key)*/
    KeyedDecodingContainer.prototype.decodeIfPresentForKey = function ($info, type, key) {
        throw 'unsupported method Swift.(file).KeyedDecodingContainer.decodeIfPresent(_:Int32.Type,forKey:KeyedDecodingContainer<K>.Key) in ' + this.constructor.name;
    };
    /*Swift.(file).KeyedDecodingContainer.decodeIfPresent(_:Int64.Type,forKey:KeyedDecodingContainer<K>.Key)*/
    /*Swift.(file).KeyedDecodingContainerProtocol.decodeIfPresent(_:Int64.Type,forKey:Self.Key)*/
    KeyedDecodingContainer.prototype.decodeIfPresentForKey = function ($info, type, key) {
        throw 'unsupported method Swift.(file).KeyedDecodingContainer.decodeIfPresent(_:Int64.Type,forKey:KeyedDecodingContainer<K>.Key) in ' + this.constructor.name;
    };
    /*Swift.(file).KeyedDecodingContainer.decodeIfPresent(_:UInt.Type,forKey:KeyedDecodingContainer<K>.Key)*/
    /*Swift.(file).KeyedDecodingContainerProtocol.decodeIfPresent(_:UInt.Type,forKey:Self.Key)*/
    KeyedDecodingContainer.prototype.decodeIfPresentForKey = function ($info, type, key) {
        throw 'unsupported method Swift.(file).KeyedDecodingContainer.decodeIfPresent(_:UInt.Type,forKey:KeyedDecodingContainer<K>.Key) in ' + this.constructor.name;
    };
    /*Swift.(file).KeyedDecodingContainer.decodeIfPresent(_:UInt8.Type,forKey:KeyedDecodingContainer<K>.Key)*/
    /*Swift.(file).KeyedDecodingContainerProtocol.decodeIfPresent(_:UInt8.Type,forKey:Self.Key)*/
    KeyedDecodingContainer.prototype.decodeIfPresentForKey = function ($info, type, key) {
        throw 'unsupported method Swift.(file).KeyedDecodingContainer.decodeIfPresent(_:UInt8.Type,forKey:KeyedDecodingContainer<K>.Key) in ' + this.constructor.name;
    };
    /*Swift.(file).KeyedDecodingContainer.decodeIfPresent(_:UInt16.Type,forKey:KeyedDecodingContainer<K>.Key)*/
    /*Swift.(file).KeyedDecodingContainerProtocol.decodeIfPresent(_:UInt16.Type,forKey:Self.Key)*/
    KeyedDecodingContainer.prototype.decodeIfPresentForKey = function ($info, type, key) {
        throw 'unsupported method Swift.(file).KeyedDecodingContainer.decodeIfPresent(_:UInt16.Type,forKey:KeyedDecodingContainer<K>.Key) in ' + this.constructor.name;
    };
    /*Swift.(file).KeyedDecodingContainer.decodeIfPresent(_:UInt32.Type,forKey:KeyedDecodingContainer<K>.Key)*/
    /*Swift.(file).KeyedDecodingContainerProtocol.decodeIfPresent(_:UInt32.Type,forKey:Self.Key)*/
    KeyedDecodingContainer.prototype.decodeIfPresentForKey = function ($info, type, key) {
        throw 'unsupported method Swift.(file).KeyedDecodingContainer.decodeIfPresent(_:UInt32.Type,forKey:KeyedDecodingContainer<K>.Key) in ' + this.constructor.name;
    };
    /*Swift.(file).KeyedDecodingContainer.decodeIfPresent(_:UInt64.Type,forKey:KeyedDecodingContainer<K>.Key)*/
    /*Swift.(file).KeyedDecodingContainerProtocol.decodeIfPresent(_:UInt64.Type,forKey:Self.Key)*/
    KeyedDecodingContainer.prototype.decodeIfPresentForKey = function ($info, type, key) {
        throw 'unsupported method Swift.(file).KeyedDecodingContainer.decodeIfPresent(_:UInt64.Type,forKey:KeyedDecodingContainer<K>.Key) in ' + this.constructor.name;
    };
    /*Swift.(file).KeyedDecodingContainer.decodeIfPresent(_:T.Type,forKey:KeyedDecodingContainer<K>.Key)*/
    /*Swift.(file).KeyedDecodingContainerProtocol.decodeIfPresent(_:T.Type,forKey:Self.Key)*/
    KeyedDecodingContainer.prototype.decodeIfPresentForKey = function ($info, type, key) {
        throw 'unsupported method Swift.(file).KeyedDecodingContainer.decodeIfPresent(_:T.Type,forKey:KeyedDecodingContainer<K>.Key) in ' + this.constructor.name;
    };
    /*Swift.(file).KeyedDecodingContainer.nestedContainer(keyedBy:NestedKey.Type,forKey:KeyedDecodingContainer<K>.Key)*/
    /*Swift.(file).KeyedDecodingContainerProtocol.nestedContainer(keyedBy:NestedKey.Type,forKey:Self.Key)*/
    KeyedDecodingContainer.prototype.nestedContainerKeyedByForKey = function ($info, type, key) {
        throw 'unsupported method Swift.(file).KeyedDecodingContainer.nestedContainer(keyedBy:NestedKey.Type,forKey:KeyedDecodingContainer<K>.Key) in ' + this.constructor.name;
    };
    /*Swift.(file).KeyedDecodingContainer.nestedUnkeyedContainer(forKey:KeyedDecodingContainer<K>.Key)*/
    /*Swift.(file).KeyedDecodingContainerProtocol.nestedUnkeyedContainer(forKey:Self.Key)*/
    KeyedDecodingContainer.prototype.nestedUnkeyedContainerForKey = function ($info, key) {
        throw 'unsupported method Swift.(file).KeyedDecodingContainer.nestedUnkeyedContainer(forKey:KeyedDecodingContainer<K>.Key) in ' + this.constructor.name;
    };
    /*Swift.(file).KeyedDecodingContainer.superDecoder()*/
    /*Swift.(file).KeyedDecodingContainerProtocol.superDecoder()*/
    KeyedDecodingContainer.prototype.superDecoder = function ($info) {
        throw 'unsupported method Swift.(file).KeyedDecodingContainer.superDecoder() in ' + this.constructor.name;
    };
    /*Swift.(file).KeyedDecodingContainer.superDecoder(forKey:KeyedDecodingContainer<K>.Key)*/
    /*Swift.(file).KeyedDecodingContainerProtocol.superDecoder(forKey:Self.Key)*/
    KeyedDecodingContainer.prototype.superDecoderForKey = function ($info, key) {
        throw 'unsupported method Swift.(file).KeyedDecodingContainer.superDecoder(forKey:KeyedDecodingContainer<K>.Key) in ' + this.constructor.name;
    };
    KeyedDecodingContainer.prototype.init$vars = function () {
    };
    KeyedDecodingContainer.$struct = true;
    KeyedDecodingContainer.$infoAddress = '';
    return KeyedDecodingContainer;
}());
if (typeof KeyedDecodingContainerProtocol$implementation != 'undefined')
    _mixin(KeyedDecodingContainer, KeyedDecodingContainerProtocol$implementation, false);
var UnkeyedEncodingContainer$implementation = /** @class */ (function () {
    function UnkeyedEncodingContainer$implementation() {
    }
    /*Swift.(file).UnkeyedEncodingContainer.encodeConditional(_:T)*/
    /*Swift.(file).UnkeyedEncodingContainer.encodeConditional(_:T)*/
    UnkeyedEncodingContainer$implementation.prototype.encodeConditional = function ($info, object) {
        throw 'unsupported method Swift.(file).UnkeyedEncodingContainer.encodeConditional(_:T) in ' + this.constructor.name;
    };
    /*Swift.(file).UnkeyedEncodingContainer.encode(contentsOf:T)*/
    /*Swift.(file).UnkeyedEncodingContainer.encode(contentsOf:T)*/
    UnkeyedEncodingContainer$implementation.prototype.encodeContentsOf = function ($info, sequence) {
        throw 'unsupported method Swift.(file).UnkeyedEncodingContainer.encode(contentsOf:T) in ' + this.constructor.name;
    };
    /*Swift.(file).UnkeyedEncodingContainer.encode(contentsOf:T)*/
    /*Swift.(file).UnkeyedEncodingContainer.encode(contentsOf:T)*/
    UnkeyedEncodingContainer$implementation.prototype.encodeContentsOf = function ($info, sequence) {
        throw 'unsupported method Swift.(file).UnkeyedEncodingContainer.encode(contentsOf:T) in ' + this.constructor.name;
    };
    /*Swift.(file).UnkeyedEncodingContainer.encode(contentsOf:T)*/
    /*Swift.(file).UnkeyedEncodingContainer.encode(contentsOf:T)*/
    UnkeyedEncodingContainer$implementation.prototype.encodeContentsOf = function ($info, sequence) {
        throw 'unsupported method Swift.(file).UnkeyedEncodingContainer.encode(contentsOf:T) in ' + this.constructor.name;
    };
    /*Swift.(file).UnkeyedEncodingContainer.encode(contentsOf:T)*/
    /*Swift.(file).UnkeyedEncodingContainer.encode(contentsOf:T)*/
    UnkeyedEncodingContainer$implementation.prototype.encodeContentsOf = function ($info, sequence) {
        throw 'unsupported method Swift.(file).UnkeyedEncodingContainer.encode(contentsOf:T) in ' + this.constructor.name;
    };
    /*Swift.(file).UnkeyedEncodingContainer.encode(contentsOf:T)*/
    /*Swift.(file).UnkeyedEncodingContainer.encode(contentsOf:T)*/
    UnkeyedEncodingContainer$implementation.prototype.encodeContentsOf = function ($info, sequence) {
        throw 'unsupported method Swift.(file).UnkeyedEncodingContainer.encode(contentsOf:T) in ' + this.constructor.name;
    };
    /*Swift.(file).UnkeyedEncodingContainer.encode(contentsOf:T)*/
    /*Swift.(file).UnkeyedEncodingContainer.encode(contentsOf:T)*/
    UnkeyedEncodingContainer$implementation.prototype.encodeContentsOf = function ($info, sequence) {
        throw 'unsupported method Swift.(file).UnkeyedEncodingContainer.encode(contentsOf:T) in ' + this.constructor.name;
    };
    /*Swift.(file).UnkeyedEncodingContainer.encode(contentsOf:T)*/
    /*Swift.(file).UnkeyedEncodingContainer.encode(contentsOf:T)*/
    UnkeyedEncodingContainer$implementation.prototype.encodeContentsOf = function ($info, sequence) {
        throw 'unsupported method Swift.(file).UnkeyedEncodingContainer.encode(contentsOf:T) in ' + this.constructor.name;
    };
    /*Swift.(file).UnkeyedEncodingContainer.encode(contentsOf:T)*/
    /*Swift.(file).UnkeyedEncodingContainer.encode(contentsOf:T)*/
    UnkeyedEncodingContainer$implementation.prototype.encodeContentsOf = function ($info, sequence) {
        throw 'unsupported method Swift.(file).UnkeyedEncodingContainer.encode(contentsOf:T) in ' + this.constructor.name;
    };
    /*Swift.(file).UnkeyedEncodingContainer.encode(contentsOf:T)*/
    /*Swift.(file).UnkeyedEncodingContainer.encode(contentsOf:T)*/
    UnkeyedEncodingContainer$implementation.prototype.encodeContentsOf = function ($info, sequence) {
        throw 'unsupported method Swift.(file).UnkeyedEncodingContainer.encode(contentsOf:T) in ' + this.constructor.name;
    };
    /*Swift.(file).UnkeyedEncodingContainer.encode(contentsOf:T)*/
    /*Swift.(file).UnkeyedEncodingContainer.encode(contentsOf:T)*/
    UnkeyedEncodingContainer$implementation.prototype.encodeContentsOf = function ($info, sequence) {
        throw 'unsupported method Swift.(file).UnkeyedEncodingContainer.encode(contentsOf:T) in ' + this.constructor.name;
    };
    /*Swift.(file).UnkeyedEncodingContainer.encode(contentsOf:T)*/
    /*Swift.(file).UnkeyedEncodingContainer.encode(contentsOf:T)*/
    UnkeyedEncodingContainer$implementation.prototype.encodeContentsOf = function ($info, sequence) {
        throw 'unsupported method Swift.(file).UnkeyedEncodingContainer.encode(contentsOf:T) in ' + this.constructor.name;
    };
    /*Swift.(file).UnkeyedEncodingContainer.encode(contentsOf:T)*/
    /*Swift.(file).UnkeyedEncodingContainer.encode(contentsOf:T)*/
    UnkeyedEncodingContainer$implementation.prototype.encodeContentsOf = function ($info, sequence) {
        throw 'unsupported method Swift.(file).UnkeyedEncodingContainer.encode(contentsOf:T) in ' + this.constructor.name;
    };
    /*Swift.(file).UnkeyedEncodingContainer.encode(contentsOf:T)*/
    /*Swift.(file).UnkeyedEncodingContainer.encode(contentsOf:T)*/
    UnkeyedEncodingContainer$implementation.prototype.encodeContentsOf = function ($info, sequence) {
        throw 'unsupported method Swift.(file).UnkeyedEncodingContainer.encode(contentsOf:T) in ' + this.constructor.name;
    };
    /*Swift.(file).UnkeyedEncodingContainer.encode(contentsOf:T)*/
    /*Swift.(file).UnkeyedEncodingContainer.encode(contentsOf:T)*/
    UnkeyedEncodingContainer$implementation.prototype.encodeContentsOf = function ($info, sequence) {
        throw 'unsupported method Swift.(file).UnkeyedEncodingContainer.encode(contentsOf:T) in ' + this.constructor.name;
    };
    /*Swift.(file).UnkeyedEncodingContainer.encode(contentsOf:T)*/
    /*Swift.(file).UnkeyedEncodingContainer.encode(contentsOf:T)*/
    UnkeyedEncodingContainer$implementation.prototype.encodeContentsOf = function ($info, sequence) {
        throw 'unsupported method Swift.(file).UnkeyedEncodingContainer.encode(contentsOf:T) in ' + this.constructor.name;
    };
    return UnkeyedEncodingContainer$implementation;
}());
var UnkeyedDecodingContainer$implementation = /** @class */ (function () {
    function UnkeyedDecodingContainer$implementation() {
    }
    /*Swift.(file).UnkeyedDecodingContainer.decodeIfPresent(_:Bool.Type)*/
    /*Swift.(file).UnkeyedDecodingContainer.decodeIfPresent(_:Bool.Type)*/
    UnkeyedDecodingContainer$implementation.prototype.decodeIfPresent = function ($info, type) {
        throw 'unsupported method Swift.(file).UnkeyedDecodingContainer.decodeIfPresent(_:Bool.Type) in ' + this.constructor.name;
    };
    /*Swift.(file).UnkeyedDecodingContainer.decodeIfPresent(_:String.Type)*/
    /*Swift.(file).UnkeyedDecodingContainer.decodeIfPresent(_:String.Type)*/
    UnkeyedDecodingContainer$implementation.prototype.decodeIfPresent = function ($info, type) {
        throw 'unsupported method Swift.(file).UnkeyedDecodingContainer.decodeIfPresent(_:String.Type) in ' + this.constructor.name;
    };
    /*Swift.(file).UnkeyedDecodingContainer.decodeIfPresent(_:Double.Type)*/
    /*Swift.(file).UnkeyedDecodingContainer.decodeIfPresent(_:Double.Type)*/
    UnkeyedDecodingContainer$implementation.prototype.decodeIfPresent = function ($info, type) {
        throw 'unsupported method Swift.(file).UnkeyedDecodingContainer.decodeIfPresent(_:Double.Type) in ' + this.constructor.name;
    };
    /*Swift.(file).UnkeyedDecodingContainer.decodeIfPresent(_:Float.Type)*/
    /*Swift.(file).UnkeyedDecodingContainer.decodeIfPresent(_:Float.Type)*/
    UnkeyedDecodingContainer$implementation.prototype.decodeIfPresent = function ($info, type) {
        throw 'unsupported method Swift.(file).UnkeyedDecodingContainer.decodeIfPresent(_:Float.Type) in ' + this.constructor.name;
    };
    /*Swift.(file).UnkeyedDecodingContainer.decodeIfPresent(_:Int.Type)*/
    /*Swift.(file).UnkeyedDecodingContainer.decodeIfPresent(_:Int.Type)*/
    UnkeyedDecodingContainer$implementation.prototype.decodeIfPresent = function ($info, type) {
        throw 'unsupported method Swift.(file).UnkeyedDecodingContainer.decodeIfPresent(_:Int.Type) in ' + this.constructor.name;
    };
    /*Swift.(file).UnkeyedDecodingContainer.decodeIfPresent(_:Int8.Type)*/
    /*Swift.(file).UnkeyedDecodingContainer.decodeIfPresent(_:Int8.Type)*/
    UnkeyedDecodingContainer$implementation.prototype.decodeIfPresent = function ($info, type) {
        throw 'unsupported method Swift.(file).UnkeyedDecodingContainer.decodeIfPresent(_:Int8.Type) in ' + this.constructor.name;
    };
    /*Swift.(file).UnkeyedDecodingContainer.decodeIfPresent(_:Int16.Type)*/
    /*Swift.(file).UnkeyedDecodingContainer.decodeIfPresent(_:Int16.Type)*/
    UnkeyedDecodingContainer$implementation.prototype.decodeIfPresent = function ($info, type) {
        throw 'unsupported method Swift.(file).UnkeyedDecodingContainer.decodeIfPresent(_:Int16.Type) in ' + this.constructor.name;
    };
    /*Swift.(file).UnkeyedDecodingContainer.decodeIfPresent(_:Int32.Type)*/
    /*Swift.(file).UnkeyedDecodingContainer.decodeIfPresent(_:Int32.Type)*/
    UnkeyedDecodingContainer$implementation.prototype.decodeIfPresent = function ($info, type) {
        throw 'unsupported method Swift.(file).UnkeyedDecodingContainer.decodeIfPresent(_:Int32.Type) in ' + this.constructor.name;
    };
    /*Swift.(file).UnkeyedDecodingContainer.decodeIfPresent(_:Int64.Type)*/
    /*Swift.(file).UnkeyedDecodingContainer.decodeIfPresent(_:Int64.Type)*/
    UnkeyedDecodingContainer$implementation.prototype.decodeIfPresent = function ($info, type) {
        throw 'unsupported method Swift.(file).UnkeyedDecodingContainer.decodeIfPresent(_:Int64.Type) in ' + this.constructor.name;
    };
    /*Swift.(file).UnkeyedDecodingContainer.decodeIfPresent(_:UInt.Type)*/
    /*Swift.(file).UnkeyedDecodingContainer.decodeIfPresent(_:UInt.Type)*/
    UnkeyedDecodingContainer$implementation.prototype.decodeIfPresent = function ($info, type) {
        throw 'unsupported method Swift.(file).UnkeyedDecodingContainer.decodeIfPresent(_:UInt.Type) in ' + this.constructor.name;
    };
    /*Swift.(file).UnkeyedDecodingContainer.decodeIfPresent(_:UInt8.Type)*/
    /*Swift.(file).UnkeyedDecodingContainer.decodeIfPresent(_:UInt8.Type)*/
    UnkeyedDecodingContainer$implementation.prototype.decodeIfPresent = function ($info, type) {
        throw 'unsupported method Swift.(file).UnkeyedDecodingContainer.decodeIfPresent(_:UInt8.Type) in ' + this.constructor.name;
    };
    /*Swift.(file).UnkeyedDecodingContainer.decodeIfPresent(_:UInt16.Type)*/
    /*Swift.(file).UnkeyedDecodingContainer.decodeIfPresent(_:UInt16.Type)*/
    UnkeyedDecodingContainer$implementation.prototype.decodeIfPresent = function ($info, type) {
        throw 'unsupported method Swift.(file).UnkeyedDecodingContainer.decodeIfPresent(_:UInt16.Type) in ' + this.constructor.name;
    };
    /*Swift.(file).UnkeyedDecodingContainer.decodeIfPresent(_:UInt32.Type)*/
    /*Swift.(file).UnkeyedDecodingContainer.decodeIfPresent(_:UInt32.Type)*/
    UnkeyedDecodingContainer$implementation.prototype.decodeIfPresent = function ($info, type) {
        throw 'unsupported method Swift.(file).UnkeyedDecodingContainer.decodeIfPresent(_:UInt32.Type) in ' + this.constructor.name;
    };
    /*Swift.(file).UnkeyedDecodingContainer.decodeIfPresent(_:UInt64.Type)*/
    /*Swift.(file).UnkeyedDecodingContainer.decodeIfPresent(_:UInt64.Type)*/
    UnkeyedDecodingContainer$implementation.prototype.decodeIfPresent = function ($info, type) {
        throw 'unsupported method Swift.(file).UnkeyedDecodingContainer.decodeIfPresent(_:UInt64.Type) in ' + this.constructor.name;
    };
    /*Swift.(file).UnkeyedDecodingContainer.decodeIfPresent(_:T.Type)*/
    /*Swift.(file).UnkeyedDecodingContainer.decodeIfPresent(_:T.Type)*/
    UnkeyedDecodingContainer$implementation.prototype.decodeIfPresent = function ($info, type) {
        throw 'unsupported method Swift.(file).UnkeyedDecodingContainer.decodeIfPresent(_:T.Type) in ' + this.constructor.name;
    };
    return UnkeyedDecodingContainer$implementation;
}());
var SingleValueEncodingContainer$implementation = /** @class */ (function () {
    function SingleValueEncodingContainer$implementation() {
    }
    return SingleValueEncodingContainer$implementation;
}());
var SingleValueDecodingContainer$implementation = /** @class */ (function () {
    function SingleValueDecodingContainer$implementation() {
    }
    return SingleValueDecodingContainer$implementation;
}());
var _KeyedEncodingContainerBase = /** @class */ (function () {
    function _KeyedEncodingContainerBase() {
    }
    /*Swift.(file)._KeyedEncodingContainerBase.init()*/
    /*Swift.(file)._KeyedEncodingContainerBase.init()*/
    _KeyedEncodingContainerBase.prototype.init = function ($info) {
        throw 'unsupported method Swift.(file)._KeyedEncodingContainerBase.init() in ' + this.constructor.name;
    };
    /*Swift.(file)._KeyedEncodingContainerBase.codingPath*/
    _KeyedEncodingContainerBase.prototype.codingPath$get = function () {
        throw 'unsupported variable Swift.(file)._KeyedEncodingContainerBase.codingPath in ' + this.constructor.name;
    };
    Object.defineProperty(_KeyedEncodingContainerBase.prototype, "codingPath", {
        get: function () { return this.codingPath$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file)._KeyedEncodingContainerBase.encodeNil(forKey:Key)*/
    /*Swift.(file)._KeyedEncodingContainerBase.encodeNil(forKey:Key)*/
    _KeyedEncodingContainerBase.prototype.encodeNilForKey = function ($info, key) {
        throw 'unsupported method Swift.(file)._KeyedEncodingContainerBase.encodeNil(forKey:Key) in ' + this.constructor.name;
    };
    /*Swift.(file)._KeyedEncodingContainerBase.encode(_:Bool,forKey:Key)*/
    /*Swift.(file)._KeyedEncodingContainerBase.encode(_:Bool,forKey:Key)*/
    _KeyedEncodingContainerBase.prototype.encodeForKey = function ($info, value, key) {
        throw 'unsupported method Swift.(file)._KeyedEncodingContainerBase.encode(_:Bool,forKey:Key) in ' + this.constructor.name;
    };
    /*Swift.(file)._KeyedEncodingContainerBase.encode(_:String,forKey:Key)*/
    /*Swift.(file)._KeyedEncodingContainerBase.encode(_:String,forKey:Key)*/
    _KeyedEncodingContainerBase.prototype.encodeForKey = function ($info, value, key) {
        throw 'unsupported method Swift.(file)._KeyedEncodingContainerBase.encode(_:String,forKey:Key) in ' + this.constructor.name;
    };
    /*Swift.(file)._KeyedEncodingContainerBase.encode(_:Double,forKey:Key)*/
    /*Swift.(file)._KeyedEncodingContainerBase.encode(_:Double,forKey:Key)*/
    _KeyedEncodingContainerBase.prototype.encodeForKey = function ($info, value, key) {
        throw 'unsupported method Swift.(file)._KeyedEncodingContainerBase.encode(_:Double,forKey:Key) in ' + this.constructor.name;
    };
    /*Swift.(file)._KeyedEncodingContainerBase.encode(_:Float,forKey:Key)*/
    /*Swift.(file)._KeyedEncodingContainerBase.encode(_:Float,forKey:Key)*/
    _KeyedEncodingContainerBase.prototype.encodeForKey = function ($info, value, key) {
        throw 'unsupported method Swift.(file)._KeyedEncodingContainerBase.encode(_:Float,forKey:Key) in ' + this.constructor.name;
    };
    /*Swift.(file)._KeyedEncodingContainerBase.encode(_:Int,forKey:Key)*/
    /*Swift.(file)._KeyedEncodingContainerBase.encode(_:Int,forKey:Key)*/
    _KeyedEncodingContainerBase.prototype.encodeForKey = function ($info, value, key) {
        throw 'unsupported method Swift.(file)._KeyedEncodingContainerBase.encode(_:Int,forKey:Key) in ' + this.constructor.name;
    };
    /*Swift.(file)._KeyedEncodingContainerBase.encode(_:Int8,forKey:Key)*/
    /*Swift.(file)._KeyedEncodingContainerBase.encode(_:Int8,forKey:Key)*/
    _KeyedEncodingContainerBase.prototype.encodeForKey = function ($info, value, key) {
        throw 'unsupported method Swift.(file)._KeyedEncodingContainerBase.encode(_:Int8,forKey:Key) in ' + this.constructor.name;
    };
    /*Swift.(file)._KeyedEncodingContainerBase.encode(_:Int16,forKey:Key)*/
    /*Swift.(file)._KeyedEncodingContainerBase.encode(_:Int16,forKey:Key)*/
    _KeyedEncodingContainerBase.prototype.encodeForKey = function ($info, value, key) {
        throw 'unsupported method Swift.(file)._KeyedEncodingContainerBase.encode(_:Int16,forKey:Key) in ' + this.constructor.name;
    };
    /*Swift.(file)._KeyedEncodingContainerBase.encode(_:Int32,forKey:Key)*/
    /*Swift.(file)._KeyedEncodingContainerBase.encode(_:Int32,forKey:Key)*/
    _KeyedEncodingContainerBase.prototype.encodeForKey = function ($info, value, key) {
        throw 'unsupported method Swift.(file)._KeyedEncodingContainerBase.encode(_:Int32,forKey:Key) in ' + this.constructor.name;
    };
    /*Swift.(file)._KeyedEncodingContainerBase.encode(_:Int64,forKey:Key)*/
    /*Swift.(file)._KeyedEncodingContainerBase.encode(_:Int64,forKey:Key)*/
    _KeyedEncodingContainerBase.prototype.encodeForKey = function ($info, value, key) {
        throw 'unsupported method Swift.(file)._KeyedEncodingContainerBase.encode(_:Int64,forKey:Key) in ' + this.constructor.name;
    };
    /*Swift.(file)._KeyedEncodingContainerBase.encode(_:UInt,forKey:Key)*/
    /*Swift.(file)._KeyedEncodingContainerBase.encode(_:UInt,forKey:Key)*/
    _KeyedEncodingContainerBase.prototype.encodeForKey = function ($info, value, key) {
        throw 'unsupported method Swift.(file)._KeyedEncodingContainerBase.encode(_:UInt,forKey:Key) in ' + this.constructor.name;
    };
    /*Swift.(file)._KeyedEncodingContainerBase.encode(_:UInt8,forKey:Key)*/
    /*Swift.(file)._KeyedEncodingContainerBase.encode(_:UInt8,forKey:Key)*/
    _KeyedEncodingContainerBase.prototype.encodeForKey = function ($info, value, key) {
        throw 'unsupported method Swift.(file)._KeyedEncodingContainerBase.encode(_:UInt8,forKey:Key) in ' + this.constructor.name;
    };
    /*Swift.(file)._KeyedEncodingContainerBase.encode(_:UInt16,forKey:Key)*/
    /*Swift.(file)._KeyedEncodingContainerBase.encode(_:UInt16,forKey:Key)*/
    _KeyedEncodingContainerBase.prototype.encodeForKey = function ($info, value, key) {
        throw 'unsupported method Swift.(file)._KeyedEncodingContainerBase.encode(_:UInt16,forKey:Key) in ' + this.constructor.name;
    };
    /*Swift.(file)._KeyedEncodingContainerBase.encode(_:UInt32,forKey:Key)*/
    /*Swift.(file)._KeyedEncodingContainerBase.encode(_:UInt32,forKey:Key)*/
    _KeyedEncodingContainerBase.prototype.encodeForKey = function ($info, value, key) {
        throw 'unsupported method Swift.(file)._KeyedEncodingContainerBase.encode(_:UInt32,forKey:Key) in ' + this.constructor.name;
    };
    /*Swift.(file)._KeyedEncodingContainerBase.encode(_:UInt64,forKey:Key)*/
    /*Swift.(file)._KeyedEncodingContainerBase.encode(_:UInt64,forKey:Key)*/
    _KeyedEncodingContainerBase.prototype.encodeForKey = function ($info, value, key) {
        throw 'unsupported method Swift.(file)._KeyedEncodingContainerBase.encode(_:UInt64,forKey:Key) in ' + this.constructor.name;
    };
    /*Swift.(file)._KeyedEncodingContainerBase.encode(_:T,forKey:Key)*/
    /*Swift.(file)._KeyedEncodingContainerBase.encode(_:T,forKey:Key)*/
    _KeyedEncodingContainerBase.prototype.encodeForKey = function ($info, value, key) {
        throw 'unsupported method Swift.(file)._KeyedEncodingContainerBase.encode(_:T,forKey:Key) in ' + this.constructor.name;
    };
    /*Swift.(file)._KeyedEncodingContainerBase.encodeConditional(_:T,forKey:Key)*/
    /*Swift.(file)._KeyedEncodingContainerBase.encodeConditional(_:T,forKey:Key)*/
    _KeyedEncodingContainerBase.prototype.encodeConditionalForKey = function ($info, object, key) {
        throw 'unsupported method Swift.(file)._KeyedEncodingContainerBase.encodeConditional(_:T,forKey:Key) in ' + this.constructor.name;
    };
    /*Swift.(file)._KeyedEncodingContainerBase.encodeIfPresent(_:Bool?,forKey:Key)*/
    /*Swift.(file)._KeyedEncodingContainerBase.encodeIfPresent(_:Bool?,forKey:Key)*/
    _KeyedEncodingContainerBase.prototype.encodeIfPresentForKey = function ($info, value, key) {
        throw 'unsupported method Swift.(file)._KeyedEncodingContainerBase.encodeIfPresent(_:Bool?,forKey:Key) in ' + this.constructor.name;
    };
    /*Swift.(file)._KeyedEncodingContainerBase.encodeIfPresent(_:String?,forKey:Key)*/
    /*Swift.(file)._KeyedEncodingContainerBase.encodeIfPresent(_:String?,forKey:Key)*/
    _KeyedEncodingContainerBase.prototype.encodeIfPresentForKey = function ($info, value, key) {
        throw 'unsupported method Swift.(file)._KeyedEncodingContainerBase.encodeIfPresent(_:String?,forKey:Key) in ' + this.constructor.name;
    };
    /*Swift.(file)._KeyedEncodingContainerBase.encodeIfPresent(_:Double?,forKey:Key)*/
    /*Swift.(file)._KeyedEncodingContainerBase.encodeIfPresent(_:Double?,forKey:Key)*/
    _KeyedEncodingContainerBase.prototype.encodeIfPresentForKey = function ($info, value, key) {
        throw 'unsupported method Swift.(file)._KeyedEncodingContainerBase.encodeIfPresent(_:Double?,forKey:Key) in ' + this.constructor.name;
    };
    /*Swift.(file)._KeyedEncodingContainerBase.encodeIfPresent(_:Float?,forKey:Key)*/
    /*Swift.(file)._KeyedEncodingContainerBase.encodeIfPresent(_:Float?,forKey:Key)*/
    _KeyedEncodingContainerBase.prototype.encodeIfPresentForKey = function ($info, value, key) {
        throw 'unsupported method Swift.(file)._KeyedEncodingContainerBase.encodeIfPresent(_:Float?,forKey:Key) in ' + this.constructor.name;
    };
    /*Swift.(file)._KeyedEncodingContainerBase.encodeIfPresent(_:Int?,forKey:Key)*/
    /*Swift.(file)._KeyedEncodingContainerBase.encodeIfPresent(_:Int?,forKey:Key)*/
    _KeyedEncodingContainerBase.prototype.encodeIfPresentForKey = function ($info, value, key) {
        throw 'unsupported method Swift.(file)._KeyedEncodingContainerBase.encodeIfPresent(_:Int?,forKey:Key) in ' + this.constructor.name;
    };
    /*Swift.(file)._KeyedEncodingContainerBase.encodeIfPresent(_:Int8?,forKey:Key)*/
    /*Swift.(file)._KeyedEncodingContainerBase.encodeIfPresent(_:Int8?,forKey:Key)*/
    _KeyedEncodingContainerBase.prototype.encodeIfPresentForKey = function ($info, value, key) {
        throw 'unsupported method Swift.(file)._KeyedEncodingContainerBase.encodeIfPresent(_:Int8?,forKey:Key) in ' + this.constructor.name;
    };
    /*Swift.(file)._KeyedEncodingContainerBase.encodeIfPresent(_:Int16?,forKey:Key)*/
    /*Swift.(file)._KeyedEncodingContainerBase.encodeIfPresent(_:Int16?,forKey:Key)*/
    _KeyedEncodingContainerBase.prototype.encodeIfPresentForKey = function ($info, value, key) {
        throw 'unsupported method Swift.(file)._KeyedEncodingContainerBase.encodeIfPresent(_:Int16?,forKey:Key) in ' + this.constructor.name;
    };
    /*Swift.(file)._KeyedEncodingContainerBase.encodeIfPresent(_:Int32?,forKey:Key)*/
    /*Swift.(file)._KeyedEncodingContainerBase.encodeIfPresent(_:Int32?,forKey:Key)*/
    _KeyedEncodingContainerBase.prototype.encodeIfPresentForKey = function ($info, value, key) {
        throw 'unsupported method Swift.(file)._KeyedEncodingContainerBase.encodeIfPresent(_:Int32?,forKey:Key) in ' + this.constructor.name;
    };
    /*Swift.(file)._KeyedEncodingContainerBase.encodeIfPresent(_:Int64?,forKey:Key)*/
    /*Swift.(file)._KeyedEncodingContainerBase.encodeIfPresent(_:Int64?,forKey:Key)*/
    _KeyedEncodingContainerBase.prototype.encodeIfPresentForKey = function ($info, value, key) {
        throw 'unsupported method Swift.(file)._KeyedEncodingContainerBase.encodeIfPresent(_:Int64?,forKey:Key) in ' + this.constructor.name;
    };
    /*Swift.(file)._KeyedEncodingContainerBase.encodeIfPresent(_:UInt?,forKey:Key)*/
    /*Swift.(file)._KeyedEncodingContainerBase.encodeIfPresent(_:UInt?,forKey:Key)*/
    _KeyedEncodingContainerBase.prototype.encodeIfPresentForKey = function ($info, value, key) {
        throw 'unsupported method Swift.(file)._KeyedEncodingContainerBase.encodeIfPresent(_:UInt?,forKey:Key) in ' + this.constructor.name;
    };
    /*Swift.(file)._KeyedEncodingContainerBase.encodeIfPresent(_:UInt8?,forKey:Key)*/
    /*Swift.(file)._KeyedEncodingContainerBase.encodeIfPresent(_:UInt8?,forKey:Key)*/
    _KeyedEncodingContainerBase.prototype.encodeIfPresentForKey = function ($info, value, key) {
        throw 'unsupported method Swift.(file)._KeyedEncodingContainerBase.encodeIfPresent(_:UInt8?,forKey:Key) in ' + this.constructor.name;
    };
    /*Swift.(file)._KeyedEncodingContainerBase.encodeIfPresent(_:UInt16?,forKey:Key)*/
    /*Swift.(file)._KeyedEncodingContainerBase.encodeIfPresent(_:UInt16?,forKey:Key)*/
    _KeyedEncodingContainerBase.prototype.encodeIfPresentForKey = function ($info, value, key) {
        throw 'unsupported method Swift.(file)._KeyedEncodingContainerBase.encodeIfPresent(_:UInt16?,forKey:Key) in ' + this.constructor.name;
    };
    /*Swift.(file)._KeyedEncodingContainerBase.encodeIfPresent(_:UInt32?,forKey:Key)*/
    /*Swift.(file)._KeyedEncodingContainerBase.encodeIfPresent(_:UInt32?,forKey:Key)*/
    _KeyedEncodingContainerBase.prototype.encodeIfPresentForKey = function ($info, value, key) {
        throw 'unsupported method Swift.(file)._KeyedEncodingContainerBase.encodeIfPresent(_:UInt32?,forKey:Key) in ' + this.constructor.name;
    };
    /*Swift.(file)._KeyedEncodingContainerBase.encodeIfPresent(_:UInt64?,forKey:Key)*/
    /*Swift.(file)._KeyedEncodingContainerBase.encodeIfPresent(_:UInt64?,forKey:Key)*/
    _KeyedEncodingContainerBase.prototype.encodeIfPresentForKey = function ($info, value, key) {
        throw 'unsupported method Swift.(file)._KeyedEncodingContainerBase.encodeIfPresent(_:UInt64?,forKey:Key) in ' + this.constructor.name;
    };
    /*Swift.(file)._KeyedEncodingContainerBase.encodeIfPresent(_:T?,forKey:Key)*/
    /*Swift.(file)._KeyedEncodingContainerBase.encodeIfPresent(_:T?,forKey:Key)*/
    _KeyedEncodingContainerBase.prototype.encodeIfPresentForKey = function ($info, value, key) {
        throw 'unsupported method Swift.(file)._KeyedEncodingContainerBase.encodeIfPresent(_:T?,forKey:Key) in ' + this.constructor.name;
    };
    /*Swift.(file)._KeyedEncodingContainerBase.nestedContainer(keyedBy:NestedKey.Type,forKey:Key)*/
    /*Swift.(file)._KeyedEncodingContainerBase.nestedContainer(keyedBy:NestedKey.Type,forKey:Key)*/
    _KeyedEncodingContainerBase.prototype.nestedContainerKeyedByForKey = function ($info, keyType, key) {
        throw 'unsupported method Swift.(file)._KeyedEncodingContainerBase.nestedContainer(keyedBy:NestedKey.Type,forKey:Key) in ' + this.constructor.name;
    };
    /*Swift.(file)._KeyedEncodingContainerBase.nestedUnkeyedContainer(forKey:Key)*/
    /*Swift.(file)._KeyedEncodingContainerBase.nestedUnkeyedContainer(forKey:Key)*/
    _KeyedEncodingContainerBase.prototype.nestedUnkeyedContainerForKey = function ($info, key) {
        throw 'unsupported method Swift.(file)._KeyedEncodingContainerBase.nestedUnkeyedContainer(forKey:Key) in ' + this.constructor.name;
    };
    /*Swift.(file)._KeyedEncodingContainerBase.superEncoder()*/
    /*Swift.(file)._KeyedEncodingContainerBase.superEncoder()*/
    _KeyedEncodingContainerBase.prototype.superEncoder = function ($info) {
        throw 'unsupported method Swift.(file)._KeyedEncodingContainerBase.superEncoder() in ' + this.constructor.name;
    };
    /*Swift.(file)._KeyedEncodingContainerBase.superEncoder(forKey:Key)*/
    /*Swift.(file)._KeyedEncodingContainerBase.superEncoder(forKey:Key)*/
    _KeyedEncodingContainerBase.prototype.superEncoderForKey = function ($info, key) {
        throw 'unsupported method Swift.(file)._KeyedEncodingContainerBase.superEncoder(forKey:Key) in ' + this.constructor.name;
    };
    _KeyedEncodingContainerBase.prototype.init$vars = function () {
    };
    _KeyedEncodingContainerBase.$infoAddress = '';
    return _KeyedEncodingContainerBase;
}());
var _KeyedEncodingContainerBox = /** @class */ (function (_super) {
    __extends(_KeyedEncodingContainerBox, _super);
    function _KeyedEncodingContainerBox() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    /*Swift.(file)._KeyedEncodingContainerBox.concrete*/
    _KeyedEncodingContainerBox.prototype.concrete$get = function () {
        throw 'unsupported variable Swift.(file)._KeyedEncodingContainerBox.concrete in ' + this.constructor.name;
    };
    Object.defineProperty(_KeyedEncodingContainerBox.prototype, "concrete", {
        get: function () { return this.concrete$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file)._KeyedEncodingContainerBox.init(_:Concrete)*/
    /*Swift.(file)._KeyedEncodingContainerBox.init(_:Concrete)*/
    _KeyedEncodingContainerBox.prototype.init = function ($info, container) {
        throw 'unsupported method Swift.(file)._KeyedEncodingContainerBox.init(_:Concrete) in ' + this.constructor.name;
    };
    /*Swift.(file)._KeyedEncodingContainerBox.codingPath*/
    _KeyedEncodingContainerBox.prototype.codingPath$get = function () {
        throw 'unsupported variable Swift.(file)._KeyedEncodingContainerBox.codingPath in ' + this.constructor.name;
    };
    Object.defineProperty(_KeyedEncodingContainerBox.prototype, "codingPath", {
        get: function () { return this.codingPath$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file)._KeyedEncodingContainerBox.encodeNil(forKey:_KeyedEncodingContainerBox<Concrete>.Key)*/
    /*Swift.(file)._KeyedEncodingContainerBase.encodeNil(forKey:Key)*/
    _KeyedEncodingContainerBox.prototype.encodeNilForKey = function ($info, key) {
        throw 'unsupported method Swift.(file)._KeyedEncodingContainerBox.encodeNil(forKey:_KeyedEncodingContainerBox<Concrete>.Key) in ' + this.constructor.name;
    };
    /*Swift.(file)._KeyedEncodingContainerBox.encode(_:Bool,forKey:_KeyedEncodingContainerBox<Concrete>.Key)*/
    /*Swift.(file)._KeyedEncodingContainerBase.encode(_:Bool,forKey:Key)*/
    _KeyedEncodingContainerBox.prototype.encodeForKey = function ($info, value, key) {
        throw 'unsupported method Swift.(file)._KeyedEncodingContainerBox.encode(_:Bool,forKey:_KeyedEncodingContainerBox<Concrete>.Key) in ' + this.constructor.name;
    };
    /*Swift.(file)._KeyedEncodingContainerBox.encode(_:String,forKey:_KeyedEncodingContainerBox<Concrete>.Key)*/
    /*Swift.(file)._KeyedEncodingContainerBase.encode(_:String,forKey:Key)*/
    _KeyedEncodingContainerBox.prototype.encodeForKey = function ($info, value, key) {
        throw 'unsupported method Swift.(file)._KeyedEncodingContainerBox.encode(_:String,forKey:_KeyedEncodingContainerBox<Concrete>.Key) in ' + this.constructor.name;
    };
    /*Swift.(file)._KeyedEncodingContainerBox.encode(_:Double,forKey:_KeyedEncodingContainerBox<Concrete>.Key)*/
    /*Swift.(file)._KeyedEncodingContainerBase.encode(_:Double,forKey:Key)*/
    _KeyedEncodingContainerBox.prototype.encodeForKey = function ($info, value, key) {
        throw 'unsupported method Swift.(file)._KeyedEncodingContainerBox.encode(_:Double,forKey:_KeyedEncodingContainerBox<Concrete>.Key) in ' + this.constructor.name;
    };
    /*Swift.(file)._KeyedEncodingContainerBox.encode(_:Float,forKey:_KeyedEncodingContainerBox<Concrete>.Key)*/
    /*Swift.(file)._KeyedEncodingContainerBase.encode(_:Float,forKey:Key)*/
    _KeyedEncodingContainerBox.prototype.encodeForKey = function ($info, value, key) {
        throw 'unsupported method Swift.(file)._KeyedEncodingContainerBox.encode(_:Float,forKey:_KeyedEncodingContainerBox<Concrete>.Key) in ' + this.constructor.name;
    };
    /*Swift.(file)._KeyedEncodingContainerBox.encode(_:Int,forKey:_KeyedEncodingContainerBox<Concrete>.Key)*/
    /*Swift.(file)._KeyedEncodingContainerBase.encode(_:Int,forKey:Key)*/
    _KeyedEncodingContainerBox.prototype.encodeForKey = function ($info, value, key) {
        throw 'unsupported method Swift.(file)._KeyedEncodingContainerBox.encode(_:Int,forKey:_KeyedEncodingContainerBox<Concrete>.Key) in ' + this.constructor.name;
    };
    /*Swift.(file)._KeyedEncodingContainerBox.encode(_:Int8,forKey:_KeyedEncodingContainerBox<Concrete>.Key)*/
    /*Swift.(file)._KeyedEncodingContainerBase.encode(_:Int8,forKey:Key)*/
    _KeyedEncodingContainerBox.prototype.encodeForKey = function ($info, value, key) {
        throw 'unsupported method Swift.(file)._KeyedEncodingContainerBox.encode(_:Int8,forKey:_KeyedEncodingContainerBox<Concrete>.Key) in ' + this.constructor.name;
    };
    /*Swift.(file)._KeyedEncodingContainerBox.encode(_:Int16,forKey:_KeyedEncodingContainerBox<Concrete>.Key)*/
    /*Swift.(file)._KeyedEncodingContainerBase.encode(_:Int16,forKey:Key)*/
    _KeyedEncodingContainerBox.prototype.encodeForKey = function ($info, value, key) {
        throw 'unsupported method Swift.(file)._KeyedEncodingContainerBox.encode(_:Int16,forKey:_KeyedEncodingContainerBox<Concrete>.Key) in ' + this.constructor.name;
    };
    /*Swift.(file)._KeyedEncodingContainerBox.encode(_:Int32,forKey:_KeyedEncodingContainerBox<Concrete>.Key)*/
    /*Swift.(file)._KeyedEncodingContainerBase.encode(_:Int32,forKey:Key)*/
    _KeyedEncodingContainerBox.prototype.encodeForKey = function ($info, value, key) {
        throw 'unsupported method Swift.(file)._KeyedEncodingContainerBox.encode(_:Int32,forKey:_KeyedEncodingContainerBox<Concrete>.Key) in ' + this.constructor.name;
    };
    /*Swift.(file)._KeyedEncodingContainerBox.encode(_:Int64,forKey:_KeyedEncodingContainerBox<Concrete>.Key)*/
    /*Swift.(file)._KeyedEncodingContainerBase.encode(_:Int64,forKey:Key)*/
    _KeyedEncodingContainerBox.prototype.encodeForKey = function ($info, value, key) {
        throw 'unsupported method Swift.(file)._KeyedEncodingContainerBox.encode(_:Int64,forKey:_KeyedEncodingContainerBox<Concrete>.Key) in ' + this.constructor.name;
    };
    /*Swift.(file)._KeyedEncodingContainerBox.encode(_:UInt,forKey:_KeyedEncodingContainerBox<Concrete>.Key)*/
    /*Swift.(file)._KeyedEncodingContainerBase.encode(_:UInt,forKey:Key)*/
    _KeyedEncodingContainerBox.prototype.encodeForKey = function ($info, value, key) {
        throw 'unsupported method Swift.(file)._KeyedEncodingContainerBox.encode(_:UInt,forKey:_KeyedEncodingContainerBox<Concrete>.Key) in ' + this.constructor.name;
    };
    /*Swift.(file)._KeyedEncodingContainerBox.encode(_:UInt8,forKey:_KeyedEncodingContainerBox<Concrete>.Key)*/
    /*Swift.(file)._KeyedEncodingContainerBase.encode(_:UInt8,forKey:Key)*/
    _KeyedEncodingContainerBox.prototype.encodeForKey = function ($info, value, key) {
        throw 'unsupported method Swift.(file)._KeyedEncodingContainerBox.encode(_:UInt8,forKey:_KeyedEncodingContainerBox<Concrete>.Key) in ' + this.constructor.name;
    };
    /*Swift.(file)._KeyedEncodingContainerBox.encode(_:UInt16,forKey:_KeyedEncodingContainerBox<Concrete>.Key)*/
    /*Swift.(file)._KeyedEncodingContainerBase.encode(_:UInt16,forKey:Key)*/
    _KeyedEncodingContainerBox.prototype.encodeForKey = function ($info, value, key) {
        throw 'unsupported method Swift.(file)._KeyedEncodingContainerBox.encode(_:UInt16,forKey:_KeyedEncodingContainerBox<Concrete>.Key) in ' + this.constructor.name;
    };
    /*Swift.(file)._KeyedEncodingContainerBox.encode(_:UInt32,forKey:_KeyedEncodingContainerBox<Concrete>.Key)*/
    /*Swift.(file)._KeyedEncodingContainerBase.encode(_:UInt32,forKey:Key)*/
    _KeyedEncodingContainerBox.prototype.encodeForKey = function ($info, value, key) {
        throw 'unsupported method Swift.(file)._KeyedEncodingContainerBox.encode(_:UInt32,forKey:_KeyedEncodingContainerBox<Concrete>.Key) in ' + this.constructor.name;
    };
    /*Swift.(file)._KeyedEncodingContainerBox.encode(_:UInt64,forKey:_KeyedEncodingContainerBox<Concrete>.Key)*/
    /*Swift.(file)._KeyedEncodingContainerBase.encode(_:UInt64,forKey:Key)*/
    _KeyedEncodingContainerBox.prototype.encodeForKey = function ($info, value, key) {
        throw 'unsupported method Swift.(file)._KeyedEncodingContainerBox.encode(_:UInt64,forKey:_KeyedEncodingContainerBox<Concrete>.Key) in ' + this.constructor.name;
    };
    /*Swift.(file)._KeyedEncodingContainerBox.encode(_:T,forKey:_KeyedEncodingContainerBox<Concrete>.Key)*/
    /*Swift.(file)._KeyedEncodingContainerBase.encode(_:T,forKey:Key)*/
    _KeyedEncodingContainerBox.prototype.encodeForKey = function ($info, value, key) {
        throw 'unsupported method Swift.(file)._KeyedEncodingContainerBox.encode(_:T,forKey:_KeyedEncodingContainerBox<Concrete>.Key) in ' + this.constructor.name;
    };
    /*Swift.(file)._KeyedEncodingContainerBox.encodeConditional(_:T,forKey:_KeyedEncodingContainerBox<Concrete>.Key)*/
    /*Swift.(file)._KeyedEncodingContainerBase.encodeConditional(_:T,forKey:Key)*/
    _KeyedEncodingContainerBox.prototype.encodeConditionalForKey = function ($info, object, key) {
        throw 'unsupported method Swift.(file)._KeyedEncodingContainerBox.encodeConditional(_:T,forKey:_KeyedEncodingContainerBox<Concrete>.Key) in ' + this.constructor.name;
    };
    /*Swift.(file)._KeyedEncodingContainerBox.encodeIfPresent(_:Bool?,forKey:_KeyedEncodingContainerBox<Concrete>.Key)*/
    /*Swift.(file)._KeyedEncodingContainerBase.encodeIfPresent(_:Bool?,forKey:Key)*/
    _KeyedEncodingContainerBox.prototype.encodeIfPresentForKey = function ($info, value, key) {
        throw 'unsupported method Swift.(file)._KeyedEncodingContainerBox.encodeIfPresent(_:Bool?,forKey:_KeyedEncodingContainerBox<Concrete>.Key) in ' + this.constructor.name;
    };
    /*Swift.(file)._KeyedEncodingContainerBox.encodeIfPresent(_:String?,forKey:_KeyedEncodingContainerBox<Concrete>.Key)*/
    /*Swift.(file)._KeyedEncodingContainerBase.encodeIfPresent(_:String?,forKey:Key)*/
    _KeyedEncodingContainerBox.prototype.encodeIfPresentForKey = function ($info, value, key) {
        throw 'unsupported method Swift.(file)._KeyedEncodingContainerBox.encodeIfPresent(_:String?,forKey:_KeyedEncodingContainerBox<Concrete>.Key) in ' + this.constructor.name;
    };
    /*Swift.(file)._KeyedEncodingContainerBox.encodeIfPresent(_:Double?,forKey:_KeyedEncodingContainerBox<Concrete>.Key)*/
    /*Swift.(file)._KeyedEncodingContainerBase.encodeIfPresent(_:Double?,forKey:Key)*/
    _KeyedEncodingContainerBox.prototype.encodeIfPresentForKey = function ($info, value, key) {
        throw 'unsupported method Swift.(file)._KeyedEncodingContainerBox.encodeIfPresent(_:Double?,forKey:_KeyedEncodingContainerBox<Concrete>.Key) in ' + this.constructor.name;
    };
    /*Swift.(file)._KeyedEncodingContainerBox.encodeIfPresent(_:Float?,forKey:_KeyedEncodingContainerBox<Concrete>.Key)*/
    /*Swift.(file)._KeyedEncodingContainerBase.encodeIfPresent(_:Float?,forKey:Key)*/
    _KeyedEncodingContainerBox.prototype.encodeIfPresentForKey = function ($info, value, key) {
        throw 'unsupported method Swift.(file)._KeyedEncodingContainerBox.encodeIfPresent(_:Float?,forKey:_KeyedEncodingContainerBox<Concrete>.Key) in ' + this.constructor.name;
    };
    /*Swift.(file)._KeyedEncodingContainerBox.encodeIfPresent(_:Int?,forKey:_KeyedEncodingContainerBox<Concrete>.Key)*/
    /*Swift.(file)._KeyedEncodingContainerBase.encodeIfPresent(_:Int?,forKey:Key)*/
    _KeyedEncodingContainerBox.prototype.encodeIfPresentForKey = function ($info, value, key) {
        throw 'unsupported method Swift.(file)._KeyedEncodingContainerBox.encodeIfPresent(_:Int?,forKey:_KeyedEncodingContainerBox<Concrete>.Key) in ' + this.constructor.name;
    };
    /*Swift.(file)._KeyedEncodingContainerBox.encodeIfPresent(_:Int8?,forKey:_KeyedEncodingContainerBox<Concrete>.Key)*/
    /*Swift.(file)._KeyedEncodingContainerBase.encodeIfPresent(_:Int8?,forKey:Key)*/
    _KeyedEncodingContainerBox.prototype.encodeIfPresentForKey = function ($info, value, key) {
        throw 'unsupported method Swift.(file)._KeyedEncodingContainerBox.encodeIfPresent(_:Int8?,forKey:_KeyedEncodingContainerBox<Concrete>.Key) in ' + this.constructor.name;
    };
    /*Swift.(file)._KeyedEncodingContainerBox.encodeIfPresent(_:Int16?,forKey:_KeyedEncodingContainerBox<Concrete>.Key)*/
    /*Swift.(file)._KeyedEncodingContainerBase.encodeIfPresent(_:Int16?,forKey:Key)*/
    _KeyedEncodingContainerBox.prototype.encodeIfPresentForKey = function ($info, value, key) {
        throw 'unsupported method Swift.(file)._KeyedEncodingContainerBox.encodeIfPresent(_:Int16?,forKey:_KeyedEncodingContainerBox<Concrete>.Key) in ' + this.constructor.name;
    };
    /*Swift.(file)._KeyedEncodingContainerBox.encodeIfPresent(_:Int32?,forKey:_KeyedEncodingContainerBox<Concrete>.Key)*/
    /*Swift.(file)._KeyedEncodingContainerBase.encodeIfPresent(_:Int32?,forKey:Key)*/
    _KeyedEncodingContainerBox.prototype.encodeIfPresentForKey = function ($info, value, key) {
        throw 'unsupported method Swift.(file)._KeyedEncodingContainerBox.encodeIfPresent(_:Int32?,forKey:_KeyedEncodingContainerBox<Concrete>.Key) in ' + this.constructor.name;
    };
    /*Swift.(file)._KeyedEncodingContainerBox.encodeIfPresent(_:Int64?,forKey:_KeyedEncodingContainerBox<Concrete>.Key)*/
    /*Swift.(file)._KeyedEncodingContainerBase.encodeIfPresent(_:Int64?,forKey:Key)*/
    _KeyedEncodingContainerBox.prototype.encodeIfPresentForKey = function ($info, value, key) {
        throw 'unsupported method Swift.(file)._KeyedEncodingContainerBox.encodeIfPresent(_:Int64?,forKey:_KeyedEncodingContainerBox<Concrete>.Key) in ' + this.constructor.name;
    };
    /*Swift.(file)._KeyedEncodingContainerBox.encodeIfPresent(_:UInt?,forKey:_KeyedEncodingContainerBox<Concrete>.Key)*/
    /*Swift.(file)._KeyedEncodingContainerBase.encodeIfPresent(_:UInt?,forKey:Key)*/
    _KeyedEncodingContainerBox.prototype.encodeIfPresentForKey = function ($info, value, key) {
        throw 'unsupported method Swift.(file)._KeyedEncodingContainerBox.encodeIfPresent(_:UInt?,forKey:_KeyedEncodingContainerBox<Concrete>.Key) in ' + this.constructor.name;
    };
    /*Swift.(file)._KeyedEncodingContainerBox.encodeIfPresent(_:UInt8?,forKey:_KeyedEncodingContainerBox<Concrete>.Key)*/
    /*Swift.(file)._KeyedEncodingContainerBase.encodeIfPresent(_:UInt8?,forKey:Key)*/
    _KeyedEncodingContainerBox.prototype.encodeIfPresentForKey = function ($info, value, key) {
        throw 'unsupported method Swift.(file)._KeyedEncodingContainerBox.encodeIfPresent(_:UInt8?,forKey:_KeyedEncodingContainerBox<Concrete>.Key) in ' + this.constructor.name;
    };
    /*Swift.(file)._KeyedEncodingContainerBox.encodeIfPresent(_:UInt16?,forKey:_KeyedEncodingContainerBox<Concrete>.Key)*/
    /*Swift.(file)._KeyedEncodingContainerBase.encodeIfPresent(_:UInt16?,forKey:Key)*/
    _KeyedEncodingContainerBox.prototype.encodeIfPresentForKey = function ($info, value, key) {
        throw 'unsupported method Swift.(file)._KeyedEncodingContainerBox.encodeIfPresent(_:UInt16?,forKey:_KeyedEncodingContainerBox<Concrete>.Key) in ' + this.constructor.name;
    };
    /*Swift.(file)._KeyedEncodingContainerBox.encodeIfPresent(_:UInt32?,forKey:_KeyedEncodingContainerBox<Concrete>.Key)*/
    /*Swift.(file)._KeyedEncodingContainerBase.encodeIfPresent(_:UInt32?,forKey:Key)*/
    _KeyedEncodingContainerBox.prototype.encodeIfPresentForKey = function ($info, value, key) {
        throw 'unsupported method Swift.(file)._KeyedEncodingContainerBox.encodeIfPresent(_:UInt32?,forKey:_KeyedEncodingContainerBox<Concrete>.Key) in ' + this.constructor.name;
    };
    /*Swift.(file)._KeyedEncodingContainerBox.encodeIfPresent(_:UInt64?,forKey:_KeyedEncodingContainerBox<Concrete>.Key)*/
    /*Swift.(file)._KeyedEncodingContainerBase.encodeIfPresent(_:UInt64?,forKey:Key)*/
    _KeyedEncodingContainerBox.prototype.encodeIfPresentForKey = function ($info, value, key) {
        throw 'unsupported method Swift.(file)._KeyedEncodingContainerBox.encodeIfPresent(_:UInt64?,forKey:_KeyedEncodingContainerBox<Concrete>.Key) in ' + this.constructor.name;
    };
    /*Swift.(file)._KeyedEncodingContainerBox.encodeIfPresent(_:T?,forKey:_KeyedEncodingContainerBox<Concrete>.Key)*/
    /*Swift.(file)._KeyedEncodingContainerBase.encodeIfPresent(_:T?,forKey:Key)*/
    _KeyedEncodingContainerBox.prototype.encodeIfPresentForKey = function ($info, value, key) {
        throw 'unsupported method Swift.(file)._KeyedEncodingContainerBox.encodeIfPresent(_:T?,forKey:_KeyedEncodingContainerBox<Concrete>.Key) in ' + this.constructor.name;
    };
    /*Swift.(file)._KeyedEncodingContainerBox.nestedContainer(keyedBy:NestedKey.Type,forKey:_KeyedEncodingContainerBox<Concrete>.Key)*/
    /*Swift.(file)._KeyedEncodingContainerBase.nestedContainer(keyedBy:NestedKey.Type,forKey:Key)*/
    _KeyedEncodingContainerBox.prototype.nestedContainerKeyedByForKey = function ($info, keyType, key) {
        throw 'unsupported method Swift.(file)._KeyedEncodingContainerBox.nestedContainer(keyedBy:NestedKey.Type,forKey:_KeyedEncodingContainerBox<Concrete>.Key) in ' + this.constructor.name;
    };
    /*Swift.(file)._KeyedEncodingContainerBox.nestedUnkeyedContainer(forKey:_KeyedEncodingContainerBox<Concrete>.Key)*/
    /*Swift.(file)._KeyedEncodingContainerBase.nestedUnkeyedContainer(forKey:Key)*/
    _KeyedEncodingContainerBox.prototype.nestedUnkeyedContainerForKey = function ($info, key) {
        throw 'unsupported method Swift.(file)._KeyedEncodingContainerBox.nestedUnkeyedContainer(forKey:_KeyedEncodingContainerBox<Concrete>.Key) in ' + this.constructor.name;
    };
    /*Swift.(file)._KeyedEncodingContainerBox.superEncoder()*/
    /*Swift.(file)._KeyedEncodingContainerBase.superEncoder()*/
    _KeyedEncodingContainerBox.prototype.superEncoder = function ($info) {
        throw 'unsupported method Swift.(file)._KeyedEncodingContainerBox.superEncoder() in ' + this.constructor.name;
    };
    /*Swift.(file)._KeyedEncodingContainerBox.superEncoder(forKey:_KeyedEncodingContainerBox<Concrete>.Key)*/
    /*Swift.(file)._KeyedEncodingContainerBase.superEncoder(forKey:Key)*/
    _KeyedEncodingContainerBox.prototype.superEncoderForKey = function ($info, key) {
        throw 'unsupported method Swift.(file)._KeyedEncodingContainerBox.superEncoder(forKey:_KeyedEncodingContainerBox<Concrete>.Key) in ' + this.constructor.name;
    };
    /*Swift.(file)._KeyedEncodingContainerBox.init()*/
    /*Swift.(file)._KeyedEncodingContainerBase.init()*/
    _KeyedEncodingContainerBox.prototype.init = function ($info) {
        throw 'unsupported method Swift.(file)._KeyedEncodingContainerBox.init() in ' + this.constructor.name;
    };
    _KeyedEncodingContainerBox.prototype.init$vars = function () {
        if (_super.prototype.init$vars)
            _super.prototype.init$vars.call(this);
    };
    _KeyedEncodingContainerBox.$infoAddress = '';
    return _KeyedEncodingContainerBox;
}(_KeyedEncodingContainerBase));
var _KeyedDecodingContainerBase = /** @class */ (function () {
    function _KeyedDecodingContainerBase() {
    }
    /*Swift.(file)._KeyedDecodingContainerBase.init()*/
    /*Swift.(file)._KeyedDecodingContainerBase.init()*/
    _KeyedDecodingContainerBase.prototype.init = function ($info) {
        throw 'unsupported method Swift.(file)._KeyedDecodingContainerBase.init() in ' + this.constructor.name;
    };
    /*Swift.(file)._KeyedDecodingContainerBase.codingPath*/
    _KeyedDecodingContainerBase.prototype.codingPath$get = function () {
        throw 'unsupported variable Swift.(file)._KeyedDecodingContainerBase.codingPath in ' + this.constructor.name;
    };
    Object.defineProperty(_KeyedDecodingContainerBase.prototype, "codingPath", {
        get: function () { return this.codingPath$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file)._KeyedDecodingContainerBase.allKeys*/
    _KeyedDecodingContainerBase.prototype.allKeys$get = function () {
        throw 'unsupported variable Swift.(file)._KeyedDecodingContainerBase.allKeys in ' + this.constructor.name;
    };
    Object.defineProperty(_KeyedDecodingContainerBase.prototype, "allKeys", {
        get: function () { return this.allKeys$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file)._KeyedDecodingContainerBase.contains(_:Key)*/
    /*Swift.(file)._KeyedDecodingContainerBase.contains(_:Key)*/
    _KeyedDecodingContainerBase.prototype.contains = function ($info, key) {
        throw 'unsupported method Swift.(file)._KeyedDecodingContainerBase.contains(_:Key) in ' + this.constructor.name;
    };
    /*Swift.(file)._KeyedDecodingContainerBase.decodeNil(forKey:Key)*/
    /*Swift.(file)._KeyedDecodingContainerBase.decodeNil(forKey:Key)*/
    _KeyedDecodingContainerBase.prototype.decodeNilForKey = function ($info, key) {
        throw 'unsupported method Swift.(file)._KeyedDecodingContainerBase.decodeNil(forKey:Key) in ' + this.constructor.name;
    };
    /*Swift.(file)._KeyedDecodingContainerBase.decode(_:Bool.Type,forKey:Key)*/
    /*Swift.(file)._KeyedDecodingContainerBase.decode(_:Bool.Type,forKey:Key)*/
    _KeyedDecodingContainerBase.prototype.decodeForKey = function ($info, type, key) {
        throw 'unsupported method Swift.(file)._KeyedDecodingContainerBase.decode(_:Bool.Type,forKey:Key) in ' + this.constructor.name;
    };
    /*Swift.(file)._KeyedDecodingContainerBase.decode(_:String.Type,forKey:Key)*/
    /*Swift.(file)._KeyedDecodingContainerBase.decode(_:String.Type,forKey:Key)*/
    _KeyedDecodingContainerBase.prototype.decodeForKey = function ($info, type, key) {
        throw 'unsupported method Swift.(file)._KeyedDecodingContainerBase.decode(_:String.Type,forKey:Key) in ' + this.constructor.name;
    };
    /*Swift.(file)._KeyedDecodingContainerBase.decode(_:Double.Type,forKey:Key)*/
    /*Swift.(file)._KeyedDecodingContainerBase.decode(_:Double.Type,forKey:Key)*/
    _KeyedDecodingContainerBase.prototype.decodeForKey = function ($info, type, key) {
        throw 'unsupported method Swift.(file)._KeyedDecodingContainerBase.decode(_:Double.Type,forKey:Key) in ' + this.constructor.name;
    };
    /*Swift.(file)._KeyedDecodingContainerBase.decode(_:Float.Type,forKey:Key)*/
    /*Swift.(file)._KeyedDecodingContainerBase.decode(_:Float.Type,forKey:Key)*/
    _KeyedDecodingContainerBase.prototype.decodeForKey = function ($info, type, key) {
        throw 'unsupported method Swift.(file)._KeyedDecodingContainerBase.decode(_:Float.Type,forKey:Key) in ' + this.constructor.name;
    };
    /*Swift.(file)._KeyedDecodingContainerBase.decode(_:Int.Type,forKey:Key)*/
    /*Swift.(file)._KeyedDecodingContainerBase.decode(_:Int.Type,forKey:Key)*/
    _KeyedDecodingContainerBase.prototype.decodeForKey = function ($info, type, key) {
        throw 'unsupported method Swift.(file)._KeyedDecodingContainerBase.decode(_:Int.Type,forKey:Key) in ' + this.constructor.name;
    };
    /*Swift.(file)._KeyedDecodingContainerBase.decode(_:Int8.Type,forKey:Key)*/
    /*Swift.(file)._KeyedDecodingContainerBase.decode(_:Int8.Type,forKey:Key)*/
    _KeyedDecodingContainerBase.prototype.decodeForKey = function ($info, type, key) {
        throw 'unsupported method Swift.(file)._KeyedDecodingContainerBase.decode(_:Int8.Type,forKey:Key) in ' + this.constructor.name;
    };
    /*Swift.(file)._KeyedDecodingContainerBase.decode(_:Int16.Type,forKey:Key)*/
    /*Swift.(file)._KeyedDecodingContainerBase.decode(_:Int16.Type,forKey:Key)*/
    _KeyedDecodingContainerBase.prototype.decodeForKey = function ($info, type, key) {
        throw 'unsupported method Swift.(file)._KeyedDecodingContainerBase.decode(_:Int16.Type,forKey:Key) in ' + this.constructor.name;
    };
    /*Swift.(file)._KeyedDecodingContainerBase.decode(_:Int32.Type,forKey:Key)*/
    /*Swift.(file)._KeyedDecodingContainerBase.decode(_:Int32.Type,forKey:Key)*/
    _KeyedDecodingContainerBase.prototype.decodeForKey = function ($info, type, key) {
        throw 'unsupported method Swift.(file)._KeyedDecodingContainerBase.decode(_:Int32.Type,forKey:Key) in ' + this.constructor.name;
    };
    /*Swift.(file)._KeyedDecodingContainerBase.decode(_:Int64.Type,forKey:Key)*/
    /*Swift.(file)._KeyedDecodingContainerBase.decode(_:Int64.Type,forKey:Key)*/
    _KeyedDecodingContainerBase.prototype.decodeForKey = function ($info, type, key) {
        throw 'unsupported method Swift.(file)._KeyedDecodingContainerBase.decode(_:Int64.Type,forKey:Key) in ' + this.constructor.name;
    };
    /*Swift.(file)._KeyedDecodingContainerBase.decode(_:UInt.Type,forKey:Key)*/
    /*Swift.(file)._KeyedDecodingContainerBase.decode(_:UInt.Type,forKey:Key)*/
    _KeyedDecodingContainerBase.prototype.decodeForKey = function ($info, type, key) {
        throw 'unsupported method Swift.(file)._KeyedDecodingContainerBase.decode(_:UInt.Type,forKey:Key) in ' + this.constructor.name;
    };
    /*Swift.(file)._KeyedDecodingContainerBase.decode(_:UInt8.Type,forKey:Key)*/
    /*Swift.(file)._KeyedDecodingContainerBase.decode(_:UInt8.Type,forKey:Key)*/
    _KeyedDecodingContainerBase.prototype.decodeForKey = function ($info, type, key) {
        throw 'unsupported method Swift.(file)._KeyedDecodingContainerBase.decode(_:UInt8.Type,forKey:Key) in ' + this.constructor.name;
    };
    /*Swift.(file)._KeyedDecodingContainerBase.decode(_:UInt16.Type,forKey:Key)*/
    /*Swift.(file)._KeyedDecodingContainerBase.decode(_:UInt16.Type,forKey:Key)*/
    _KeyedDecodingContainerBase.prototype.decodeForKey = function ($info, type, key) {
        throw 'unsupported method Swift.(file)._KeyedDecodingContainerBase.decode(_:UInt16.Type,forKey:Key) in ' + this.constructor.name;
    };
    /*Swift.(file)._KeyedDecodingContainerBase.decode(_:UInt32.Type,forKey:Key)*/
    /*Swift.(file)._KeyedDecodingContainerBase.decode(_:UInt32.Type,forKey:Key)*/
    _KeyedDecodingContainerBase.prototype.decodeForKey = function ($info, type, key) {
        throw 'unsupported method Swift.(file)._KeyedDecodingContainerBase.decode(_:UInt32.Type,forKey:Key) in ' + this.constructor.name;
    };
    /*Swift.(file)._KeyedDecodingContainerBase.decode(_:UInt64.Type,forKey:Key)*/
    /*Swift.(file)._KeyedDecodingContainerBase.decode(_:UInt64.Type,forKey:Key)*/
    _KeyedDecodingContainerBase.prototype.decodeForKey = function ($info, type, key) {
        throw 'unsupported method Swift.(file)._KeyedDecodingContainerBase.decode(_:UInt64.Type,forKey:Key) in ' + this.constructor.name;
    };
    /*Swift.(file)._KeyedDecodingContainerBase.decode(_:T.Type,forKey:Key)*/
    /*Swift.(file)._KeyedDecodingContainerBase.decode(_:T.Type,forKey:Key)*/
    _KeyedDecodingContainerBase.prototype.decodeForKey = function ($info, type, key) {
        throw 'unsupported method Swift.(file)._KeyedDecodingContainerBase.decode(_:T.Type,forKey:Key) in ' + this.constructor.name;
    };
    /*Swift.(file)._KeyedDecodingContainerBase.decodeIfPresent(_:Bool.Type,forKey:Key)*/
    /*Swift.(file)._KeyedDecodingContainerBase.decodeIfPresent(_:Bool.Type,forKey:Key)*/
    _KeyedDecodingContainerBase.prototype.decodeIfPresentForKey = function ($info, type, key) {
        throw 'unsupported method Swift.(file)._KeyedDecodingContainerBase.decodeIfPresent(_:Bool.Type,forKey:Key) in ' + this.constructor.name;
    };
    /*Swift.(file)._KeyedDecodingContainerBase.decodeIfPresent(_:String.Type,forKey:Key)*/
    /*Swift.(file)._KeyedDecodingContainerBase.decodeIfPresent(_:String.Type,forKey:Key)*/
    _KeyedDecodingContainerBase.prototype.decodeIfPresentForKey = function ($info, type, key) {
        throw 'unsupported method Swift.(file)._KeyedDecodingContainerBase.decodeIfPresent(_:String.Type,forKey:Key) in ' + this.constructor.name;
    };
    /*Swift.(file)._KeyedDecodingContainerBase.decodeIfPresent(_:Double.Type,forKey:Key)*/
    /*Swift.(file)._KeyedDecodingContainerBase.decodeIfPresent(_:Double.Type,forKey:Key)*/
    _KeyedDecodingContainerBase.prototype.decodeIfPresentForKey = function ($info, type, key) {
        throw 'unsupported method Swift.(file)._KeyedDecodingContainerBase.decodeIfPresent(_:Double.Type,forKey:Key) in ' + this.constructor.name;
    };
    /*Swift.(file)._KeyedDecodingContainerBase.decodeIfPresent(_:Float.Type,forKey:Key)*/
    /*Swift.(file)._KeyedDecodingContainerBase.decodeIfPresent(_:Float.Type,forKey:Key)*/
    _KeyedDecodingContainerBase.prototype.decodeIfPresentForKey = function ($info, type, key) {
        throw 'unsupported method Swift.(file)._KeyedDecodingContainerBase.decodeIfPresent(_:Float.Type,forKey:Key) in ' + this.constructor.name;
    };
    /*Swift.(file)._KeyedDecodingContainerBase.decodeIfPresent(_:Int.Type,forKey:Key)*/
    /*Swift.(file)._KeyedDecodingContainerBase.decodeIfPresent(_:Int.Type,forKey:Key)*/
    _KeyedDecodingContainerBase.prototype.decodeIfPresentForKey = function ($info, type, key) {
        throw 'unsupported method Swift.(file)._KeyedDecodingContainerBase.decodeIfPresent(_:Int.Type,forKey:Key) in ' + this.constructor.name;
    };
    /*Swift.(file)._KeyedDecodingContainerBase.decodeIfPresent(_:Int8.Type,forKey:Key)*/
    /*Swift.(file)._KeyedDecodingContainerBase.decodeIfPresent(_:Int8.Type,forKey:Key)*/
    _KeyedDecodingContainerBase.prototype.decodeIfPresentForKey = function ($info, type, key) {
        throw 'unsupported method Swift.(file)._KeyedDecodingContainerBase.decodeIfPresent(_:Int8.Type,forKey:Key) in ' + this.constructor.name;
    };
    /*Swift.(file)._KeyedDecodingContainerBase.decodeIfPresent(_:Int16.Type,forKey:Key)*/
    /*Swift.(file)._KeyedDecodingContainerBase.decodeIfPresent(_:Int16.Type,forKey:Key)*/
    _KeyedDecodingContainerBase.prototype.decodeIfPresentForKey = function ($info, type, key) {
        throw 'unsupported method Swift.(file)._KeyedDecodingContainerBase.decodeIfPresent(_:Int16.Type,forKey:Key) in ' + this.constructor.name;
    };
    /*Swift.(file)._KeyedDecodingContainerBase.decodeIfPresent(_:Int32.Type,forKey:Key)*/
    /*Swift.(file)._KeyedDecodingContainerBase.decodeIfPresent(_:Int32.Type,forKey:Key)*/
    _KeyedDecodingContainerBase.prototype.decodeIfPresentForKey = function ($info, type, key) {
        throw 'unsupported method Swift.(file)._KeyedDecodingContainerBase.decodeIfPresent(_:Int32.Type,forKey:Key) in ' + this.constructor.name;
    };
    /*Swift.(file)._KeyedDecodingContainerBase.decodeIfPresent(_:Int64.Type,forKey:Key)*/
    /*Swift.(file)._KeyedDecodingContainerBase.decodeIfPresent(_:Int64.Type,forKey:Key)*/
    _KeyedDecodingContainerBase.prototype.decodeIfPresentForKey = function ($info, type, key) {
        throw 'unsupported method Swift.(file)._KeyedDecodingContainerBase.decodeIfPresent(_:Int64.Type,forKey:Key) in ' + this.constructor.name;
    };
    /*Swift.(file)._KeyedDecodingContainerBase.decodeIfPresent(_:UInt.Type,forKey:Key)*/
    /*Swift.(file)._KeyedDecodingContainerBase.decodeIfPresent(_:UInt.Type,forKey:Key)*/
    _KeyedDecodingContainerBase.prototype.decodeIfPresentForKey = function ($info, type, key) {
        throw 'unsupported method Swift.(file)._KeyedDecodingContainerBase.decodeIfPresent(_:UInt.Type,forKey:Key) in ' + this.constructor.name;
    };
    /*Swift.(file)._KeyedDecodingContainerBase.decodeIfPresent(_:UInt8.Type,forKey:Key)*/
    /*Swift.(file)._KeyedDecodingContainerBase.decodeIfPresent(_:UInt8.Type,forKey:Key)*/
    _KeyedDecodingContainerBase.prototype.decodeIfPresentForKey = function ($info, type, key) {
        throw 'unsupported method Swift.(file)._KeyedDecodingContainerBase.decodeIfPresent(_:UInt8.Type,forKey:Key) in ' + this.constructor.name;
    };
    /*Swift.(file)._KeyedDecodingContainerBase.decodeIfPresent(_:UInt16.Type,forKey:Key)*/
    /*Swift.(file)._KeyedDecodingContainerBase.decodeIfPresent(_:UInt16.Type,forKey:Key)*/
    _KeyedDecodingContainerBase.prototype.decodeIfPresentForKey = function ($info, type, key) {
        throw 'unsupported method Swift.(file)._KeyedDecodingContainerBase.decodeIfPresent(_:UInt16.Type,forKey:Key) in ' + this.constructor.name;
    };
    /*Swift.(file)._KeyedDecodingContainerBase.decodeIfPresent(_:UInt32.Type,forKey:Key)*/
    /*Swift.(file)._KeyedDecodingContainerBase.decodeIfPresent(_:UInt32.Type,forKey:Key)*/
    _KeyedDecodingContainerBase.prototype.decodeIfPresentForKey = function ($info, type, key) {
        throw 'unsupported method Swift.(file)._KeyedDecodingContainerBase.decodeIfPresent(_:UInt32.Type,forKey:Key) in ' + this.constructor.name;
    };
    /*Swift.(file)._KeyedDecodingContainerBase.decodeIfPresent(_:UInt64.Type,forKey:Key)*/
    /*Swift.(file)._KeyedDecodingContainerBase.decodeIfPresent(_:UInt64.Type,forKey:Key)*/
    _KeyedDecodingContainerBase.prototype.decodeIfPresentForKey = function ($info, type, key) {
        throw 'unsupported method Swift.(file)._KeyedDecodingContainerBase.decodeIfPresent(_:UInt64.Type,forKey:Key) in ' + this.constructor.name;
    };
    /*Swift.(file)._KeyedDecodingContainerBase.decodeIfPresent(_:T.Type,forKey:Key)*/
    /*Swift.(file)._KeyedDecodingContainerBase.decodeIfPresent(_:T.Type,forKey:Key)*/
    _KeyedDecodingContainerBase.prototype.decodeIfPresentForKey = function ($info, type, key) {
        throw 'unsupported method Swift.(file)._KeyedDecodingContainerBase.decodeIfPresent(_:T.Type,forKey:Key) in ' + this.constructor.name;
    };
    /*Swift.(file)._KeyedDecodingContainerBase.nestedContainer(keyedBy:NestedKey.Type,forKey:Key)*/
    /*Swift.(file)._KeyedDecodingContainerBase.nestedContainer(keyedBy:NestedKey.Type,forKey:Key)*/
    _KeyedDecodingContainerBase.prototype.nestedContainerKeyedByForKey = function ($info, type, key) {
        throw 'unsupported method Swift.(file)._KeyedDecodingContainerBase.nestedContainer(keyedBy:NestedKey.Type,forKey:Key) in ' + this.constructor.name;
    };
    /*Swift.(file)._KeyedDecodingContainerBase.nestedUnkeyedContainer(forKey:Key)*/
    /*Swift.(file)._KeyedDecodingContainerBase.nestedUnkeyedContainer(forKey:Key)*/
    _KeyedDecodingContainerBase.prototype.nestedUnkeyedContainerForKey = function ($info, key) {
        throw 'unsupported method Swift.(file)._KeyedDecodingContainerBase.nestedUnkeyedContainer(forKey:Key) in ' + this.constructor.name;
    };
    /*Swift.(file)._KeyedDecodingContainerBase.superDecoder()*/
    /*Swift.(file)._KeyedDecodingContainerBase.superDecoder()*/
    _KeyedDecodingContainerBase.prototype.superDecoder = function ($info) {
        throw 'unsupported method Swift.(file)._KeyedDecodingContainerBase.superDecoder() in ' + this.constructor.name;
    };
    /*Swift.(file)._KeyedDecodingContainerBase.superDecoder(forKey:Key)*/
    /*Swift.(file)._KeyedDecodingContainerBase.superDecoder(forKey:Key)*/
    _KeyedDecodingContainerBase.prototype.superDecoderForKey = function ($info, key) {
        throw 'unsupported method Swift.(file)._KeyedDecodingContainerBase.superDecoder(forKey:Key) in ' + this.constructor.name;
    };
    _KeyedDecodingContainerBase.prototype.init$vars = function () {
    };
    _KeyedDecodingContainerBase.$infoAddress = '';
    return _KeyedDecodingContainerBase;
}());
var _KeyedDecodingContainerBox = /** @class */ (function (_super) {
    __extends(_KeyedDecodingContainerBox, _super);
    function _KeyedDecodingContainerBox() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    /*Swift.(file)._KeyedDecodingContainerBox.concrete*/
    _KeyedDecodingContainerBox.prototype.concrete$get = function () {
        throw 'unsupported variable Swift.(file)._KeyedDecodingContainerBox.concrete in ' + this.constructor.name;
    };
    Object.defineProperty(_KeyedDecodingContainerBox.prototype, "concrete", {
        get: function () { return this.concrete$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file)._KeyedDecodingContainerBox.init(_:Concrete)*/
    /*Swift.(file)._KeyedDecodingContainerBox.init(_:Concrete)*/
    _KeyedDecodingContainerBox.prototype.init = function ($info, container) {
        throw 'unsupported method Swift.(file)._KeyedDecodingContainerBox.init(_:Concrete) in ' + this.constructor.name;
    };
    /*Swift.(file)._KeyedDecodingContainerBox.codingPath*/
    _KeyedDecodingContainerBox.prototype.codingPath$get = function () {
        throw 'unsupported variable Swift.(file)._KeyedDecodingContainerBox.codingPath in ' + this.constructor.name;
    };
    Object.defineProperty(_KeyedDecodingContainerBox.prototype, "codingPath", {
        get: function () { return this.codingPath$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file)._KeyedDecodingContainerBox.allKeys*/
    _KeyedDecodingContainerBox.prototype.allKeys$get = function () {
        throw 'unsupported variable Swift.(file)._KeyedDecodingContainerBox.allKeys in ' + this.constructor.name;
    };
    Object.defineProperty(_KeyedDecodingContainerBox.prototype, "allKeys", {
        get: function () { return this.allKeys$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file)._KeyedDecodingContainerBox.contains(_:_KeyedDecodingContainerBox<Concrete>.Key)*/
    /*Swift.(file)._KeyedDecodingContainerBase.contains(_:Key)*/
    _KeyedDecodingContainerBox.prototype.contains = function ($info, key) {
        throw 'unsupported method Swift.(file)._KeyedDecodingContainerBox.contains(_:_KeyedDecodingContainerBox<Concrete>.Key) in ' + this.constructor.name;
    };
    /*Swift.(file)._KeyedDecodingContainerBox.decodeNil(forKey:_KeyedDecodingContainerBox<Concrete>.Key)*/
    /*Swift.(file)._KeyedDecodingContainerBase.decodeNil(forKey:Key)*/
    _KeyedDecodingContainerBox.prototype.decodeNilForKey = function ($info, key) {
        throw 'unsupported method Swift.(file)._KeyedDecodingContainerBox.decodeNil(forKey:_KeyedDecodingContainerBox<Concrete>.Key) in ' + this.constructor.name;
    };
    /*Swift.(file)._KeyedDecodingContainerBox.decode(_:Bool.Type,forKey:_KeyedDecodingContainerBox<Concrete>.Key)*/
    /*Swift.(file)._KeyedDecodingContainerBase.decode(_:Bool.Type,forKey:Key)*/
    _KeyedDecodingContainerBox.prototype.decodeForKey = function ($info, type, key) {
        throw 'unsupported method Swift.(file)._KeyedDecodingContainerBox.decode(_:Bool.Type,forKey:_KeyedDecodingContainerBox<Concrete>.Key) in ' + this.constructor.name;
    };
    /*Swift.(file)._KeyedDecodingContainerBox.decode(_:String.Type,forKey:_KeyedDecodingContainerBox<Concrete>.Key)*/
    /*Swift.(file)._KeyedDecodingContainerBase.decode(_:String.Type,forKey:Key)*/
    _KeyedDecodingContainerBox.prototype.decodeForKey = function ($info, type, key) {
        throw 'unsupported method Swift.(file)._KeyedDecodingContainerBox.decode(_:String.Type,forKey:_KeyedDecodingContainerBox<Concrete>.Key) in ' + this.constructor.name;
    };
    /*Swift.(file)._KeyedDecodingContainerBox.decode(_:Double.Type,forKey:_KeyedDecodingContainerBox<Concrete>.Key)*/
    /*Swift.(file)._KeyedDecodingContainerBase.decode(_:Double.Type,forKey:Key)*/
    _KeyedDecodingContainerBox.prototype.decodeForKey = function ($info, type, key) {
        throw 'unsupported method Swift.(file)._KeyedDecodingContainerBox.decode(_:Double.Type,forKey:_KeyedDecodingContainerBox<Concrete>.Key) in ' + this.constructor.name;
    };
    /*Swift.(file)._KeyedDecodingContainerBox.decode(_:Float.Type,forKey:_KeyedDecodingContainerBox<Concrete>.Key)*/
    /*Swift.(file)._KeyedDecodingContainerBase.decode(_:Float.Type,forKey:Key)*/
    _KeyedDecodingContainerBox.prototype.decodeForKey = function ($info, type, key) {
        throw 'unsupported method Swift.(file)._KeyedDecodingContainerBox.decode(_:Float.Type,forKey:_KeyedDecodingContainerBox<Concrete>.Key) in ' + this.constructor.name;
    };
    /*Swift.(file)._KeyedDecodingContainerBox.decode(_:Int.Type,forKey:_KeyedDecodingContainerBox<Concrete>.Key)*/
    /*Swift.(file)._KeyedDecodingContainerBase.decode(_:Int.Type,forKey:Key)*/
    _KeyedDecodingContainerBox.prototype.decodeForKey = function ($info, type, key) {
        throw 'unsupported method Swift.(file)._KeyedDecodingContainerBox.decode(_:Int.Type,forKey:_KeyedDecodingContainerBox<Concrete>.Key) in ' + this.constructor.name;
    };
    /*Swift.(file)._KeyedDecodingContainerBox.decode(_:Int8.Type,forKey:_KeyedDecodingContainerBox<Concrete>.Key)*/
    /*Swift.(file)._KeyedDecodingContainerBase.decode(_:Int8.Type,forKey:Key)*/
    _KeyedDecodingContainerBox.prototype.decodeForKey = function ($info, type, key) {
        throw 'unsupported method Swift.(file)._KeyedDecodingContainerBox.decode(_:Int8.Type,forKey:_KeyedDecodingContainerBox<Concrete>.Key) in ' + this.constructor.name;
    };
    /*Swift.(file)._KeyedDecodingContainerBox.decode(_:Int16.Type,forKey:_KeyedDecodingContainerBox<Concrete>.Key)*/
    /*Swift.(file)._KeyedDecodingContainerBase.decode(_:Int16.Type,forKey:Key)*/
    _KeyedDecodingContainerBox.prototype.decodeForKey = function ($info, type, key) {
        throw 'unsupported method Swift.(file)._KeyedDecodingContainerBox.decode(_:Int16.Type,forKey:_KeyedDecodingContainerBox<Concrete>.Key) in ' + this.constructor.name;
    };
    /*Swift.(file)._KeyedDecodingContainerBox.decode(_:Int32.Type,forKey:_KeyedDecodingContainerBox<Concrete>.Key)*/
    /*Swift.(file)._KeyedDecodingContainerBase.decode(_:Int32.Type,forKey:Key)*/
    _KeyedDecodingContainerBox.prototype.decodeForKey = function ($info, type, key) {
        throw 'unsupported method Swift.(file)._KeyedDecodingContainerBox.decode(_:Int32.Type,forKey:_KeyedDecodingContainerBox<Concrete>.Key) in ' + this.constructor.name;
    };
    /*Swift.(file)._KeyedDecodingContainerBox.decode(_:Int64.Type,forKey:_KeyedDecodingContainerBox<Concrete>.Key)*/
    /*Swift.(file)._KeyedDecodingContainerBase.decode(_:Int64.Type,forKey:Key)*/
    _KeyedDecodingContainerBox.prototype.decodeForKey = function ($info, type, key) {
        throw 'unsupported method Swift.(file)._KeyedDecodingContainerBox.decode(_:Int64.Type,forKey:_KeyedDecodingContainerBox<Concrete>.Key) in ' + this.constructor.name;
    };
    /*Swift.(file)._KeyedDecodingContainerBox.decode(_:UInt.Type,forKey:_KeyedDecodingContainerBox<Concrete>.Key)*/
    /*Swift.(file)._KeyedDecodingContainerBase.decode(_:UInt.Type,forKey:Key)*/
    _KeyedDecodingContainerBox.prototype.decodeForKey = function ($info, type, key) {
        throw 'unsupported method Swift.(file)._KeyedDecodingContainerBox.decode(_:UInt.Type,forKey:_KeyedDecodingContainerBox<Concrete>.Key) in ' + this.constructor.name;
    };
    /*Swift.(file)._KeyedDecodingContainerBox.decode(_:UInt8.Type,forKey:_KeyedDecodingContainerBox<Concrete>.Key)*/
    /*Swift.(file)._KeyedDecodingContainerBase.decode(_:UInt8.Type,forKey:Key)*/
    _KeyedDecodingContainerBox.prototype.decodeForKey = function ($info, type, key) {
        throw 'unsupported method Swift.(file)._KeyedDecodingContainerBox.decode(_:UInt8.Type,forKey:_KeyedDecodingContainerBox<Concrete>.Key) in ' + this.constructor.name;
    };
    /*Swift.(file)._KeyedDecodingContainerBox.decode(_:UInt16.Type,forKey:_KeyedDecodingContainerBox<Concrete>.Key)*/
    /*Swift.(file)._KeyedDecodingContainerBase.decode(_:UInt16.Type,forKey:Key)*/
    _KeyedDecodingContainerBox.prototype.decodeForKey = function ($info, type, key) {
        throw 'unsupported method Swift.(file)._KeyedDecodingContainerBox.decode(_:UInt16.Type,forKey:_KeyedDecodingContainerBox<Concrete>.Key) in ' + this.constructor.name;
    };
    /*Swift.(file)._KeyedDecodingContainerBox.decode(_:UInt32.Type,forKey:_KeyedDecodingContainerBox<Concrete>.Key)*/
    /*Swift.(file)._KeyedDecodingContainerBase.decode(_:UInt32.Type,forKey:Key)*/
    _KeyedDecodingContainerBox.prototype.decodeForKey = function ($info, type, key) {
        throw 'unsupported method Swift.(file)._KeyedDecodingContainerBox.decode(_:UInt32.Type,forKey:_KeyedDecodingContainerBox<Concrete>.Key) in ' + this.constructor.name;
    };
    /*Swift.(file)._KeyedDecodingContainerBox.decode(_:UInt64.Type,forKey:_KeyedDecodingContainerBox<Concrete>.Key)*/
    /*Swift.(file)._KeyedDecodingContainerBase.decode(_:UInt64.Type,forKey:Key)*/
    _KeyedDecodingContainerBox.prototype.decodeForKey = function ($info, type, key) {
        throw 'unsupported method Swift.(file)._KeyedDecodingContainerBox.decode(_:UInt64.Type,forKey:_KeyedDecodingContainerBox<Concrete>.Key) in ' + this.constructor.name;
    };
    /*Swift.(file)._KeyedDecodingContainerBox.decode(_:T.Type,forKey:_KeyedDecodingContainerBox<Concrete>.Key)*/
    /*Swift.(file)._KeyedDecodingContainerBase.decode(_:T.Type,forKey:Key)*/
    _KeyedDecodingContainerBox.prototype.decodeForKey = function ($info, type, key) {
        throw 'unsupported method Swift.(file)._KeyedDecodingContainerBox.decode(_:T.Type,forKey:_KeyedDecodingContainerBox<Concrete>.Key) in ' + this.constructor.name;
    };
    /*Swift.(file)._KeyedDecodingContainerBox.decodeIfPresent(_:Bool.Type,forKey:_KeyedDecodingContainerBox<Concrete>.Key)*/
    /*Swift.(file)._KeyedDecodingContainerBase.decodeIfPresent(_:Bool.Type,forKey:Key)*/
    _KeyedDecodingContainerBox.prototype.decodeIfPresentForKey = function ($info, type, key) {
        throw 'unsupported method Swift.(file)._KeyedDecodingContainerBox.decodeIfPresent(_:Bool.Type,forKey:_KeyedDecodingContainerBox<Concrete>.Key) in ' + this.constructor.name;
    };
    /*Swift.(file)._KeyedDecodingContainerBox.decodeIfPresent(_:String.Type,forKey:_KeyedDecodingContainerBox<Concrete>.Key)*/
    /*Swift.(file)._KeyedDecodingContainerBase.decodeIfPresent(_:String.Type,forKey:Key)*/
    _KeyedDecodingContainerBox.prototype.decodeIfPresentForKey = function ($info, type, key) {
        throw 'unsupported method Swift.(file)._KeyedDecodingContainerBox.decodeIfPresent(_:String.Type,forKey:_KeyedDecodingContainerBox<Concrete>.Key) in ' + this.constructor.name;
    };
    /*Swift.(file)._KeyedDecodingContainerBox.decodeIfPresent(_:Double.Type,forKey:_KeyedDecodingContainerBox<Concrete>.Key)*/
    /*Swift.(file)._KeyedDecodingContainerBase.decodeIfPresent(_:Double.Type,forKey:Key)*/
    _KeyedDecodingContainerBox.prototype.decodeIfPresentForKey = function ($info, type, key) {
        throw 'unsupported method Swift.(file)._KeyedDecodingContainerBox.decodeIfPresent(_:Double.Type,forKey:_KeyedDecodingContainerBox<Concrete>.Key) in ' + this.constructor.name;
    };
    /*Swift.(file)._KeyedDecodingContainerBox.decodeIfPresent(_:Float.Type,forKey:_KeyedDecodingContainerBox<Concrete>.Key)*/
    /*Swift.(file)._KeyedDecodingContainerBase.decodeIfPresent(_:Float.Type,forKey:Key)*/
    _KeyedDecodingContainerBox.prototype.decodeIfPresentForKey = function ($info, type, key) {
        throw 'unsupported method Swift.(file)._KeyedDecodingContainerBox.decodeIfPresent(_:Float.Type,forKey:_KeyedDecodingContainerBox<Concrete>.Key) in ' + this.constructor.name;
    };
    /*Swift.(file)._KeyedDecodingContainerBox.decodeIfPresent(_:Int.Type,forKey:_KeyedDecodingContainerBox<Concrete>.Key)*/
    /*Swift.(file)._KeyedDecodingContainerBase.decodeIfPresent(_:Int.Type,forKey:Key)*/
    _KeyedDecodingContainerBox.prototype.decodeIfPresentForKey = function ($info, type, key) {
        throw 'unsupported method Swift.(file)._KeyedDecodingContainerBox.decodeIfPresent(_:Int.Type,forKey:_KeyedDecodingContainerBox<Concrete>.Key) in ' + this.constructor.name;
    };
    /*Swift.(file)._KeyedDecodingContainerBox.decodeIfPresent(_:Int8.Type,forKey:_KeyedDecodingContainerBox<Concrete>.Key)*/
    /*Swift.(file)._KeyedDecodingContainerBase.decodeIfPresent(_:Int8.Type,forKey:Key)*/
    _KeyedDecodingContainerBox.prototype.decodeIfPresentForKey = function ($info, type, key) {
        throw 'unsupported method Swift.(file)._KeyedDecodingContainerBox.decodeIfPresent(_:Int8.Type,forKey:_KeyedDecodingContainerBox<Concrete>.Key) in ' + this.constructor.name;
    };
    /*Swift.(file)._KeyedDecodingContainerBox.decodeIfPresent(_:Int16.Type,forKey:_KeyedDecodingContainerBox<Concrete>.Key)*/
    /*Swift.(file)._KeyedDecodingContainerBase.decodeIfPresent(_:Int16.Type,forKey:Key)*/
    _KeyedDecodingContainerBox.prototype.decodeIfPresentForKey = function ($info, type, key) {
        throw 'unsupported method Swift.(file)._KeyedDecodingContainerBox.decodeIfPresent(_:Int16.Type,forKey:_KeyedDecodingContainerBox<Concrete>.Key) in ' + this.constructor.name;
    };
    /*Swift.(file)._KeyedDecodingContainerBox.decodeIfPresent(_:Int32.Type,forKey:_KeyedDecodingContainerBox<Concrete>.Key)*/
    /*Swift.(file)._KeyedDecodingContainerBase.decodeIfPresent(_:Int32.Type,forKey:Key)*/
    _KeyedDecodingContainerBox.prototype.decodeIfPresentForKey = function ($info, type, key) {
        throw 'unsupported method Swift.(file)._KeyedDecodingContainerBox.decodeIfPresent(_:Int32.Type,forKey:_KeyedDecodingContainerBox<Concrete>.Key) in ' + this.constructor.name;
    };
    /*Swift.(file)._KeyedDecodingContainerBox.decodeIfPresent(_:Int64.Type,forKey:_KeyedDecodingContainerBox<Concrete>.Key)*/
    /*Swift.(file)._KeyedDecodingContainerBase.decodeIfPresent(_:Int64.Type,forKey:Key)*/
    _KeyedDecodingContainerBox.prototype.decodeIfPresentForKey = function ($info, type, key) {
        throw 'unsupported method Swift.(file)._KeyedDecodingContainerBox.decodeIfPresent(_:Int64.Type,forKey:_KeyedDecodingContainerBox<Concrete>.Key) in ' + this.constructor.name;
    };
    /*Swift.(file)._KeyedDecodingContainerBox.decodeIfPresent(_:UInt.Type,forKey:_KeyedDecodingContainerBox<Concrete>.Key)*/
    /*Swift.(file)._KeyedDecodingContainerBase.decodeIfPresent(_:UInt.Type,forKey:Key)*/
    _KeyedDecodingContainerBox.prototype.decodeIfPresentForKey = function ($info, type, key) {
        throw 'unsupported method Swift.(file)._KeyedDecodingContainerBox.decodeIfPresent(_:UInt.Type,forKey:_KeyedDecodingContainerBox<Concrete>.Key) in ' + this.constructor.name;
    };
    /*Swift.(file)._KeyedDecodingContainerBox.decodeIfPresent(_:UInt8.Type,forKey:_KeyedDecodingContainerBox<Concrete>.Key)*/
    /*Swift.(file)._KeyedDecodingContainerBase.decodeIfPresent(_:UInt8.Type,forKey:Key)*/
    _KeyedDecodingContainerBox.prototype.decodeIfPresentForKey = function ($info, type, key) {
        throw 'unsupported method Swift.(file)._KeyedDecodingContainerBox.decodeIfPresent(_:UInt8.Type,forKey:_KeyedDecodingContainerBox<Concrete>.Key) in ' + this.constructor.name;
    };
    /*Swift.(file)._KeyedDecodingContainerBox.decodeIfPresent(_:UInt16.Type,forKey:_KeyedDecodingContainerBox<Concrete>.Key)*/
    /*Swift.(file)._KeyedDecodingContainerBase.decodeIfPresent(_:UInt16.Type,forKey:Key)*/
    _KeyedDecodingContainerBox.prototype.decodeIfPresentForKey = function ($info, type, key) {
        throw 'unsupported method Swift.(file)._KeyedDecodingContainerBox.decodeIfPresent(_:UInt16.Type,forKey:_KeyedDecodingContainerBox<Concrete>.Key) in ' + this.constructor.name;
    };
    /*Swift.(file)._KeyedDecodingContainerBox.decodeIfPresent(_:UInt32.Type,forKey:_KeyedDecodingContainerBox<Concrete>.Key)*/
    /*Swift.(file)._KeyedDecodingContainerBase.decodeIfPresent(_:UInt32.Type,forKey:Key)*/
    _KeyedDecodingContainerBox.prototype.decodeIfPresentForKey = function ($info, type, key) {
        throw 'unsupported method Swift.(file)._KeyedDecodingContainerBox.decodeIfPresent(_:UInt32.Type,forKey:_KeyedDecodingContainerBox<Concrete>.Key) in ' + this.constructor.name;
    };
    /*Swift.(file)._KeyedDecodingContainerBox.decodeIfPresent(_:UInt64.Type,forKey:_KeyedDecodingContainerBox<Concrete>.Key)*/
    /*Swift.(file)._KeyedDecodingContainerBase.decodeIfPresent(_:UInt64.Type,forKey:Key)*/
    _KeyedDecodingContainerBox.prototype.decodeIfPresentForKey = function ($info, type, key) {
        throw 'unsupported method Swift.(file)._KeyedDecodingContainerBox.decodeIfPresent(_:UInt64.Type,forKey:_KeyedDecodingContainerBox<Concrete>.Key) in ' + this.constructor.name;
    };
    /*Swift.(file)._KeyedDecodingContainerBox.decodeIfPresent(_:T.Type,forKey:_KeyedDecodingContainerBox<Concrete>.Key)*/
    /*Swift.(file)._KeyedDecodingContainerBase.decodeIfPresent(_:T.Type,forKey:Key)*/
    _KeyedDecodingContainerBox.prototype.decodeIfPresentForKey = function ($info, type, key) {
        throw 'unsupported method Swift.(file)._KeyedDecodingContainerBox.decodeIfPresent(_:T.Type,forKey:_KeyedDecodingContainerBox<Concrete>.Key) in ' + this.constructor.name;
    };
    /*Swift.(file)._KeyedDecodingContainerBox.nestedContainer(keyedBy:NestedKey.Type,forKey:_KeyedDecodingContainerBox<Concrete>.Key)*/
    /*Swift.(file)._KeyedDecodingContainerBase.nestedContainer(keyedBy:NestedKey.Type,forKey:Key)*/
    _KeyedDecodingContainerBox.prototype.nestedContainerKeyedByForKey = function ($info, type, key) {
        throw 'unsupported method Swift.(file)._KeyedDecodingContainerBox.nestedContainer(keyedBy:NestedKey.Type,forKey:_KeyedDecodingContainerBox<Concrete>.Key) in ' + this.constructor.name;
    };
    /*Swift.(file)._KeyedDecodingContainerBox.nestedUnkeyedContainer(forKey:_KeyedDecodingContainerBox<Concrete>.Key)*/
    /*Swift.(file)._KeyedDecodingContainerBase.nestedUnkeyedContainer(forKey:Key)*/
    _KeyedDecodingContainerBox.prototype.nestedUnkeyedContainerForKey = function ($info, key) {
        throw 'unsupported method Swift.(file)._KeyedDecodingContainerBox.nestedUnkeyedContainer(forKey:_KeyedDecodingContainerBox<Concrete>.Key) in ' + this.constructor.name;
    };
    /*Swift.(file)._KeyedDecodingContainerBox.superDecoder()*/
    /*Swift.(file)._KeyedDecodingContainerBase.superDecoder()*/
    _KeyedDecodingContainerBox.prototype.superDecoder = function ($info) {
        throw 'unsupported method Swift.(file)._KeyedDecodingContainerBox.superDecoder() in ' + this.constructor.name;
    };
    /*Swift.(file)._KeyedDecodingContainerBox.superDecoder(forKey:_KeyedDecodingContainerBox<Concrete>.Key)*/
    /*Swift.(file)._KeyedDecodingContainerBase.superDecoder(forKey:Key)*/
    _KeyedDecodingContainerBox.prototype.superDecoderForKey = function ($info, key) {
        throw 'unsupported method Swift.(file)._KeyedDecodingContainerBox.superDecoder(forKey:_KeyedDecodingContainerBox<Concrete>.Key) in ' + this.constructor.name;
    };
    /*Swift.(file)._KeyedDecodingContainerBox.init()*/
    /*Swift.(file)._KeyedDecodingContainerBase.init()*/
    _KeyedDecodingContainerBox.prototype.init = function ($info) {
        throw 'unsupported method Swift.(file)._KeyedDecodingContainerBox.init() in ' + this.constructor.name;
    };
    _KeyedDecodingContainerBox.prototype.init$vars = function () {
        if (_super.prototype.init$vars)
            _super.prototype.init$vars.call(this);
    };
    _KeyedDecodingContainerBox.$infoAddress = '';
    return _KeyedDecodingContainerBox;
}(_KeyedDecodingContainerBase));
var RawRepresentable$implementation = /** @class */ (function () {
    function RawRepresentable$implementation() {
    }
    /*Swift.(file).RawRepresentable.encode(to:Encoder)*/
    /*Swift.(file).RawRepresentable.encode(to:Encoder)*/
    RawRepresentable$implementation.prototype.encodeTo = function ($info, encoder) {
        throw 'unsupported method Swift.(file).RawRepresentable.encode(to:Encoder) in ' + this.constructor.name;
    };
    /*Swift.(file).RawRepresentable.init(from:Decoder)*/
    /*Swift.(file).RawRepresentable.init(from:Decoder)*/
    RawRepresentable$implementation.prototype.initFromDecoder = function ($info, decoder) {
        throw 'unsupported method Swift.(file).RawRepresentable.init(from:Decoder) in ' + this.constructor.name;
    };
    /*Swift.(file).RawRepresentable.encode(to:Encoder)*/
    /*Swift.(file).RawRepresentable.encode(to:Encoder)*/
    RawRepresentable$implementation.prototype.encodeTo = function ($info, encoder) {
        throw 'unsupported method Swift.(file).RawRepresentable.encode(to:Encoder) in ' + this.constructor.name;
    };
    /*Swift.(file).RawRepresentable.init(from:Decoder)*/
    /*Swift.(file).RawRepresentable.init(from:Decoder)*/
    RawRepresentable$implementation.prototype.initFromDecoder = function ($info, decoder) {
        throw 'unsupported method Swift.(file).RawRepresentable.init(from:Decoder) in ' + this.constructor.name;
    };
    /*Swift.(file).RawRepresentable.encode(to:Encoder)*/
    /*Swift.(file).RawRepresentable.encode(to:Encoder)*/
    RawRepresentable$implementation.prototype.encodeTo = function ($info, encoder) {
        throw 'unsupported method Swift.(file).RawRepresentable.encode(to:Encoder) in ' + this.constructor.name;
    };
    /*Swift.(file).RawRepresentable.init(from:Decoder)*/
    /*Swift.(file).RawRepresentable.init(from:Decoder)*/
    RawRepresentable$implementation.prototype.initFromDecoder = function ($info, decoder) {
        throw 'unsupported method Swift.(file).RawRepresentable.init(from:Decoder) in ' + this.constructor.name;
    };
    /*Swift.(file).RawRepresentable.encode(to:Encoder)*/
    /*Swift.(file).RawRepresentable.encode(to:Encoder)*/
    RawRepresentable$implementation.prototype.encodeTo = function ($info, encoder) {
        throw 'unsupported method Swift.(file).RawRepresentable.encode(to:Encoder) in ' + this.constructor.name;
    };
    /*Swift.(file).RawRepresentable.init(from:Decoder)*/
    /*Swift.(file).RawRepresentable.init(from:Decoder)*/
    RawRepresentable$implementation.prototype.initFromDecoder = function ($info, decoder) {
        throw 'unsupported method Swift.(file).RawRepresentable.init(from:Decoder) in ' + this.constructor.name;
    };
    /*Swift.(file).RawRepresentable.encode(to:Encoder)*/
    /*Swift.(file).RawRepresentable.encode(to:Encoder)*/
    RawRepresentable$implementation.prototype.encodeTo = function ($info, encoder) {
        throw 'unsupported method Swift.(file).RawRepresentable.encode(to:Encoder) in ' + this.constructor.name;
    };
    /*Swift.(file).RawRepresentable.init(from:Decoder)*/
    /*Swift.(file).RawRepresentable.init(from:Decoder)*/
    RawRepresentable$implementation.prototype.initFromDecoder = function ($info, decoder) {
        throw 'unsupported method Swift.(file).RawRepresentable.init(from:Decoder) in ' + this.constructor.name;
    };
    /*Swift.(file).RawRepresentable.encode(to:Encoder)*/
    /*Swift.(file).RawRepresentable.encode(to:Encoder)*/
    RawRepresentable$implementation.prototype.encodeTo = function ($info, encoder) {
        throw 'unsupported method Swift.(file).RawRepresentable.encode(to:Encoder) in ' + this.constructor.name;
    };
    /*Swift.(file).RawRepresentable.init(from:Decoder)*/
    /*Swift.(file).RawRepresentable.init(from:Decoder)*/
    RawRepresentable$implementation.prototype.initFromDecoder = function ($info, decoder) {
        throw 'unsupported method Swift.(file).RawRepresentable.init(from:Decoder) in ' + this.constructor.name;
    };
    /*Swift.(file).RawRepresentable.encode(to:Encoder)*/
    /*Swift.(file).RawRepresentable.encode(to:Encoder)*/
    RawRepresentable$implementation.prototype.encodeTo = function ($info, encoder) {
        throw 'unsupported method Swift.(file).RawRepresentable.encode(to:Encoder) in ' + this.constructor.name;
    };
    /*Swift.(file).RawRepresentable.init(from:Decoder)*/
    /*Swift.(file).RawRepresentable.init(from:Decoder)*/
    RawRepresentable$implementation.prototype.initFromDecoder = function ($info, decoder) {
        throw 'unsupported method Swift.(file).RawRepresentable.init(from:Decoder) in ' + this.constructor.name;
    };
    /*Swift.(file).RawRepresentable.encode(to:Encoder)*/
    /*Swift.(file).RawRepresentable.encode(to:Encoder)*/
    RawRepresentable$implementation.prototype.encodeTo = function ($info, encoder) {
        throw 'unsupported method Swift.(file).RawRepresentable.encode(to:Encoder) in ' + this.constructor.name;
    };
    /*Swift.(file).RawRepresentable.init(from:Decoder)*/
    /*Swift.(file).RawRepresentable.init(from:Decoder)*/
    RawRepresentable$implementation.prototype.initFromDecoder = function ($info, decoder) {
        throw 'unsupported method Swift.(file).RawRepresentable.init(from:Decoder) in ' + this.constructor.name;
    };
    /*Swift.(file).RawRepresentable.encode(to:Encoder)*/
    /*Swift.(file).RawRepresentable.encode(to:Encoder)*/
    RawRepresentable$implementation.prototype.encodeTo = function ($info, encoder) {
        throw 'unsupported method Swift.(file).RawRepresentable.encode(to:Encoder) in ' + this.constructor.name;
    };
    /*Swift.(file).RawRepresentable.init(from:Decoder)*/
    /*Swift.(file).RawRepresentable.init(from:Decoder)*/
    RawRepresentable$implementation.prototype.initFromDecoder = function ($info, decoder) {
        throw 'unsupported method Swift.(file).RawRepresentable.init(from:Decoder) in ' + this.constructor.name;
    };
    /*Swift.(file).RawRepresentable.encode(to:Encoder)*/
    /*Swift.(file).RawRepresentable.encode(to:Encoder)*/
    RawRepresentable$implementation.prototype.encodeTo = function ($info, encoder) {
        throw 'unsupported method Swift.(file).RawRepresentable.encode(to:Encoder) in ' + this.constructor.name;
    };
    /*Swift.(file).RawRepresentable.init(from:Decoder)*/
    /*Swift.(file).RawRepresentable.init(from:Decoder)*/
    RawRepresentable$implementation.prototype.initFromDecoder = function ($info, decoder) {
        throw 'unsupported method Swift.(file).RawRepresentable.init(from:Decoder) in ' + this.constructor.name;
    };
    /*Swift.(file).RawRepresentable.encode(to:Encoder)*/
    /*Swift.(file).RawRepresentable.encode(to:Encoder)*/
    RawRepresentable$implementation.prototype.encodeTo = function ($info, encoder) {
        throw 'unsupported method Swift.(file).RawRepresentable.encode(to:Encoder) in ' + this.constructor.name;
    };
    /*Swift.(file).RawRepresentable.init(from:Decoder)*/
    /*Swift.(file).RawRepresentable.init(from:Decoder)*/
    RawRepresentable$implementation.prototype.initFromDecoder = function ($info, decoder) {
        throw 'unsupported method Swift.(file).RawRepresentable.init(from:Decoder) in ' + this.constructor.name;
    };
    /*Swift.(file).RawRepresentable.encode(to:Encoder)*/
    /*Swift.(file).RawRepresentable.encode(to:Encoder)*/
    RawRepresentable$implementation.prototype.encodeTo = function ($info, encoder) {
        throw 'unsupported method Swift.(file).RawRepresentable.encode(to:Encoder) in ' + this.constructor.name;
    };
    /*Swift.(file).RawRepresentable.init(from:Decoder)*/
    /*Swift.(file).RawRepresentable.init(from:Decoder)*/
    RawRepresentable$implementation.prototype.initFromDecoder = function ($info, decoder) {
        throw 'unsupported method Swift.(file).RawRepresentable.init(from:Decoder) in ' + this.constructor.name;
    };
    /*Swift.(file).RawRepresentable.encode(to:Encoder)*/
    /*Swift.(file).RawRepresentable.encode(to:Encoder)*/
    RawRepresentable$implementation.prototype.encodeTo = function ($info, encoder) {
        throw 'unsupported method Swift.(file).RawRepresentable.encode(to:Encoder) in ' + this.constructor.name;
    };
    /*Swift.(file).RawRepresentable.init(from:Decoder)*/
    /*Swift.(file).RawRepresentable.init(from:Decoder)*/
    RawRepresentable$implementation.prototype.initFromDecoder = function ($info, decoder) {
        throw 'unsupported method Swift.(file).RawRepresentable.init(from:Decoder) in ' + this.constructor.name;
    };
    /*Swift.(file).RawRepresentable.encode(to:Encoder)*/
    /*Swift.(file).RawRepresentable.encode(to:Encoder)*/
    RawRepresentable$implementation.prototype.encodeTo = function ($info, encoder) {
        throw 'unsupported method Swift.(file).RawRepresentable.encode(to:Encoder) in ' + this.constructor.name;
    };
    /*Swift.(file).RawRepresentable.init(from:Decoder)*/
    /*Swift.(file).RawRepresentable.init(from:Decoder)*/
    RawRepresentable$implementation.prototype.initFromDecoder = function ($info, decoder) {
        throw 'unsupported method Swift.(file).RawRepresentable.init(from:Decoder) in ' + this.constructor.name;
    };
    /*Swift.(file).RawRepresentable.hashValue*/
    RawRepresentable$implementation.prototype.hashValue$get = function () {
        var _this = this;
        return _this.rawValue.hashValue;
    };
    Object.defineProperty(RawRepresentable$implementation.prototype, "hashValue", {
        get: function () { return this.hashValue$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).RawRepresentable.hash(into:Hasher)*/
    /*Swift.(file).RawRepresentable.hash(into:Hasher)*/
    RawRepresentable$implementation.prototype.hashInto = function ($info, hasher$inout) {
        var _this = this;
        var hasher = hasher$inout.get();
        var $result = (function () {
            hasher.combine({ $setThis: function ($val) { return hasher = $val; } }, _this.rawValue);
        })();
        hasher$inout.set(hasher);
        return $result;
    };
    return RawRepresentable$implementation;
}());
var CaseIterable$implementation = /** @class */ (function () {
    function CaseIterable$implementation() {
    }
    return CaseIterable$implementation;
}());
var ExpressibleByNilLiteral$implementation = /** @class */ (function () {
    function ExpressibleByNilLiteral$implementation() {
    }
    return ExpressibleByNilLiteral$implementation;
}());
var _ExpressibleByBuiltinIntegerLiteral$implementation = /** @class */ (function () {
    function _ExpressibleByBuiltinIntegerLiteral$implementation() {
    }
    return _ExpressibleByBuiltinIntegerLiteral$implementation;
}());
var ExpressibleByIntegerLiteral$implementation = /** @class */ (function () {
    function ExpressibleByIntegerLiteral$implementation() {
    }
    /*Swift.(file).ExpressibleByIntegerLiteral.init(integerLiteral:Self)*/
    /*Swift.(file).ExpressibleByIntegerLiteral.init(integerLiteral:Self)*/
    ExpressibleByIntegerLiteral$implementation.prototype.initIntegerLiteral = function ($info, value) {
        return value;
    };
    return ExpressibleByIntegerLiteral$implementation;
}());
var _ExpressibleByBuiltinFloatLiteral$implementation = /** @class */ (function () {
    function _ExpressibleByBuiltinFloatLiteral$implementation() {
    }
    return _ExpressibleByBuiltinFloatLiteral$implementation;
}());
var ExpressibleByFloatLiteral$implementation = /** @class */ (function () {
    function ExpressibleByFloatLiteral$implementation() {
    }
    return ExpressibleByFloatLiteral$implementation;
}());
var _ExpressibleByBuiltinBooleanLiteral$implementation = /** @class */ (function () {
    function _ExpressibleByBuiltinBooleanLiteral$implementation() {
    }
    return _ExpressibleByBuiltinBooleanLiteral$implementation;
}());
var ExpressibleByBooleanLiteral$implementation = /** @class */ (function () {
    function ExpressibleByBooleanLiteral$implementation() {
    }
    return ExpressibleByBooleanLiteral$implementation;
}());
var _ExpressibleByBuiltinUnicodeScalarLiteral$implementation = /** @class */ (function () {
    function _ExpressibleByBuiltinUnicodeScalarLiteral$implementation() {
    }
    return _ExpressibleByBuiltinUnicodeScalarLiteral$implementation;
}());
var ExpressibleByUnicodeScalarLiteral$implementation = /** @class */ (function () {
    function ExpressibleByUnicodeScalarLiteral$implementation() {
    }
    return ExpressibleByUnicodeScalarLiteral$implementation;
}());
var _ExpressibleByBuiltinExtendedGraphemeClusterLiteral$implementation = /** @class */ (function () {
    function _ExpressibleByBuiltinExtendedGraphemeClusterLiteral$implementation() {
    }
    return _ExpressibleByBuiltinExtendedGraphemeClusterLiteral$implementation;
}());
if (typeof _ExpressibleByBuiltinUnicodeScalarLiteral$implementation != 'undefined')
    _mixin(_ExpressibleByBuiltinExtendedGraphemeClusterLiteral$implementation, _ExpressibleByBuiltinUnicodeScalarLiteral$implementation, false);
var ExpressibleByExtendedGraphemeClusterLiteral$implementation = /** @class */ (function () {
    function ExpressibleByExtendedGraphemeClusterLiteral$implementation() {
    }
    /*Swift.(file).ExpressibleByExtendedGraphemeClusterLiteral.init(unicodeScalarLiteral:Self.ExtendedGraphemeClusterLiteralType)*/
    /*Swift.(file).ExpressibleByExtendedGraphemeClusterLiteral.init(unicodeScalarLiteral:Self.ExtendedGraphemeClusterLiteralType)*/
    ExpressibleByExtendedGraphemeClusterLiteral$implementation.prototype.initUnicodeScalarLiteral = function ($info, value) {
        var _this = this;
        _this.initExtendedGraphemeClusterLiteral({}, value);
        return;
    };
    return ExpressibleByExtendedGraphemeClusterLiteral$implementation;
}());
if (typeof ExpressibleByUnicodeScalarLiteral$implementation != 'undefined')
    _mixin(ExpressibleByExtendedGraphemeClusterLiteral$implementation, ExpressibleByUnicodeScalarLiteral$implementation, false);
var _ExpressibleByBuiltinStringLiteral$implementation = /** @class */ (function () {
    function _ExpressibleByBuiltinStringLiteral$implementation() {
    }
    return _ExpressibleByBuiltinStringLiteral$implementation;
}());
if (typeof _ExpressibleByBuiltinExtendedGraphemeClusterLiteral$implementation != 'undefined')
    _mixin(_ExpressibleByBuiltinStringLiteral$implementation, _ExpressibleByBuiltinExtendedGraphemeClusterLiteral$implementation, false);
var ExpressibleByStringLiteral$implementation = /** @class */ (function () {
    function ExpressibleByStringLiteral$implementation() {
    }
    /*Swift.(file).ExpressibleByStringLiteral.init(extendedGraphemeClusterLiteral:Self.StringLiteralType)*/
    /*Swift.(file).ExpressibleByStringLiteral.init(extendedGraphemeClusterLiteral:Self.StringLiteralType)*/
    ExpressibleByStringLiteral$implementation.prototype.initExtendedGraphemeClusterLiteral = function ($info, value) {
        var _this = this;
        _this.initStringLiteral({}, value);
        return;
    };
    return ExpressibleByStringLiteral$implementation;
}());
if (typeof ExpressibleByExtendedGraphemeClusterLiteral$implementation != 'undefined')
    _mixin(ExpressibleByStringLiteral$implementation, ExpressibleByExtendedGraphemeClusterLiteral$implementation, false);
var ExpressibleByArrayLiteral$implementation = /** @class */ (function () {
    function ExpressibleByArrayLiteral$implementation() {
    }
    return ExpressibleByArrayLiteral$implementation;
}());
var ExpressibleByDictionaryLiteral$implementation = /** @class */ (function () {
    function ExpressibleByDictionaryLiteral$implementation() {
    }
    return ExpressibleByDictionaryLiteral$implementation;
}());
var ExpressibleByStringInterpolation$implementation = /** @class */ (function () {
    function ExpressibleByStringInterpolation$implementation() {
    }
    /*Swift.(file).ExpressibleByStringInterpolation.init(stringInterpolation:DefaultStringInterpolation)*/
    /*Swift.(file).ExpressibleByStringInterpolation.init(stringInterpolation:DefaultStringInterpolation)*/
    ExpressibleByStringInterpolation$implementation.prototype.initStringInterpolationDefaultStringInterpolation = function ($info, stringInterpolation) {
        var _this = this;
        _this.initStringLiteral({}, stringInterpolation.make({}));
        return;
    };
    return ExpressibleByStringInterpolation$implementation;
}());
if (typeof ExpressibleByStringLiteral$implementation != 'undefined')
    _mixin(ExpressibleByStringInterpolation$implementation, ExpressibleByStringLiteral$implementation, false);
var StringInterpolationProtocol$implementation = /** @class */ (function () {
    function StringInterpolationProtocol$implementation() {
    }
    return StringInterpolationProtocol$implementation;
}());
var _ExpressibleByColorLiteral$implementation = /** @class */ (function () {
    function _ExpressibleByColorLiteral$implementation() {
    }
    return _ExpressibleByColorLiteral$implementation;
}());
var _ExpressibleByImageLiteral$implementation = /** @class */ (function () {
    function _ExpressibleByImageLiteral$implementation() {
    }
    return _ExpressibleByImageLiteral$implementation;
}());
var _ExpressibleByFileReferenceLiteral$implementation = /** @class */ (function () {
    function _ExpressibleByFileReferenceLiteral$implementation() {
    }
    return _ExpressibleByFileReferenceLiteral$implementation;
}());
var _HasContiguousBytes$implementation = /** @class */ (function () {
    function _HasContiguousBytes$implementation() {
    }
    return _HasContiguousBytes$implementation;
}());
var _UnsafePartiallyInitializedContiguousArrayBuffer = /** @class */ (function () {
    function _UnsafePartiallyInitializedContiguousArrayBuffer() {
    }
    /*Swift.(file)._UnsafePartiallyInitializedContiguousArrayBuffer.result*/
    _UnsafePartiallyInitializedContiguousArrayBuffer.prototype.result$get = function () {
        throw 'unsupported variable Swift.(file)._UnsafePartiallyInitializedContiguousArrayBuffer.result in ' + this.constructor.name;
    };
    Object.defineProperty(_UnsafePartiallyInitializedContiguousArrayBuffer.prototype, "result", {
        get: function () { return this.result$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file)._UnsafePartiallyInitializedContiguousArrayBuffer.p*/
    _UnsafePartiallyInitializedContiguousArrayBuffer.prototype.p$get = function () {
        throw 'unsupported variable Swift.(file)._UnsafePartiallyInitializedContiguousArrayBuffer.p in ' + this.constructor.name;
    };
    Object.defineProperty(_UnsafePartiallyInitializedContiguousArrayBuffer.prototype, "p", {
        get: function () { return this.p$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file)._UnsafePartiallyInitializedContiguousArrayBuffer.remainingCapacity*/
    _UnsafePartiallyInitializedContiguousArrayBuffer.prototype.remainingCapacity$get = function () {
        throw 'unsupported variable Swift.(file)._UnsafePartiallyInitializedContiguousArrayBuffer.remainingCapacity in ' + this.constructor.name;
    };
    Object.defineProperty(_UnsafePartiallyInitializedContiguousArrayBuffer.prototype, "remainingCapacity", {
        get: function () { return this.remainingCapacity$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file)._UnsafePartiallyInitializedContiguousArrayBuffer.init(initialCapacity:Int)*/
    /*Swift.(file)._UnsafePartiallyInitializedContiguousArrayBuffer.init(initialCapacity:Int)*/
    _UnsafePartiallyInitializedContiguousArrayBuffer.prototype.initInitialCapacityInt = function ($info, initialCapacity) {
        throw 'unsupported method Swift.(file)._UnsafePartiallyInitializedContiguousArrayBuffer.init(initialCapacity:Int) in ' + this.constructor.name;
    };
    /*Swift.(file)._UnsafePartiallyInitializedContiguousArrayBuffer.add(_:Element)*/
    /*Swift.(file)._UnsafePartiallyInitializedContiguousArrayBuffer.add(_:Element)*/
    _UnsafePartiallyInitializedContiguousArrayBuffer.prototype.add = function ($info, _element) {
        throw 'unsupported method Swift.(file)._UnsafePartiallyInitializedContiguousArrayBuffer.add(_:Element) in ' + this.constructor.name;
    };
    /*Swift.(file)._UnsafePartiallyInitializedContiguousArrayBuffer.addWithExistingCapacity(_:Element)*/
    /*Swift.(file)._UnsafePartiallyInitializedContiguousArrayBuffer.addWithExistingCapacity(_:Element)*/
    _UnsafePartiallyInitializedContiguousArrayBuffer.prototype.addWithExistingCapacity = function ($info, _element) {
        throw 'unsupported method Swift.(file)._UnsafePartiallyInitializedContiguousArrayBuffer.addWithExistingCapacity(_:Element) in ' + this.constructor.name;
    };
    /*Swift.(file)._UnsafePartiallyInitializedContiguousArrayBuffer.finish()*/
    /*Swift.(file)._UnsafePartiallyInitializedContiguousArrayBuffer.finish()*/
    _UnsafePartiallyInitializedContiguousArrayBuffer.prototype.finish = function ($info) {
        throw 'unsupported method Swift.(file)._UnsafePartiallyInitializedContiguousArrayBuffer.finish() in ' + this.constructor.name;
    };
    /*Swift.(file)._UnsafePartiallyInitializedContiguousArrayBuffer.finishWithOriginalCount()*/
    /*Swift.(file)._UnsafePartiallyInitializedContiguousArrayBuffer.finishWithOriginalCount()*/
    _UnsafePartiallyInitializedContiguousArrayBuffer.prototype.finishWithOriginalCount = function ($info) {
        throw 'unsupported method Swift.(file)._UnsafePartiallyInitializedContiguousArrayBuffer.finishWithOriginalCount() in ' + this.constructor.name;
    };
    _UnsafePartiallyInitializedContiguousArrayBuffer.prototype.init$vars = function () {
    };
    _UnsafePartiallyInitializedContiguousArrayBuffer.$struct = true;
    _UnsafePartiallyInitializedContiguousArrayBuffer.$infoAddress = '';
    return _UnsafePartiallyInitializedContiguousArrayBuffer;
}());
var _DebuggerSupport = /** @class */ (function () {
    function _DebuggerSupport() {
    }
    /*Swift.(file)._DebuggerSupport.isClass(_:Any)*/
    /*Swift.(file)._DebuggerSupport.isClass(_:Any)*/
    _DebuggerSupport.isClass = function ($info, value) {
        throw 'unsupported method Swift.(file)._DebuggerSupport.isClass(_:Any) in ' + this.constructor.name;
    };
    /*Swift.(file)._DebuggerSupport.checkValue(_:Any,ifClass:(AnyObject) -> T,otherwise:() -> T)*/
    /*Swift.(file)._DebuggerSupport.checkValue(_:Any,ifClass:(AnyObject) -> T,otherwise:() -> T)*/
    _DebuggerSupport.checkValueIfClassOtherwise = function ($info, value, ifClass, otherwise) {
        throw 'unsupported method Swift.(file)._DebuggerSupport.checkValue(_:Any,ifClass:(AnyObject) -> T,otherwise:() -> T) in ' + this.constructor.name;
    };
    /*Swift.(file)._DebuggerSupport.asObjectIdentifier(_:Any)*/
    /*Swift.(file)._DebuggerSupport.asObjectIdentifier(_:Any)*/
    _DebuggerSupport.asObjectIdentifier = function ($info, value) {
        throw 'unsupported method Swift.(file)._DebuggerSupport.asObjectIdentifier(_:Any) in ' + this.constructor.name;
    };
    /*Swift.(file)._DebuggerSupport.asObjectAddress(_:Any)*/
    /*Swift.(file)._DebuggerSupport.asObjectAddress(_:Any)*/
    _DebuggerSupport.asObjectAddress = function ($info, value) {
        throw 'unsupported method Swift.(file)._DebuggerSupport.asObjectAddress(_:Any) in ' + this.constructor.name;
    };
    /*Swift.(file)._DebuggerSupport.asStringRepresentation(value:Any?,mirror:Mirror,count:Int)*/
    /*Swift.(file)._DebuggerSupport.asStringRepresentation(value:Any?,mirror:Mirror,count:Int)*/
    _DebuggerSupport.asStringRepresentationValueMirrorCount = function ($info, value, mirror, count) {
        throw 'unsupported method Swift.(file)._DebuggerSupport.asStringRepresentation(value:Any?,mirror:Mirror,count:Int) in ' + this.constructor.name;
    };
    /*Swift.(file)._DebuggerSupport.ivarCount(mirror:Mirror)*/
    /*Swift.(file)._DebuggerSupport.ivarCount(mirror:Mirror)*/
    _DebuggerSupport.ivarCountMirror = function ($info, mirror) {
        throw 'unsupported method Swift.(file)._DebuggerSupport.ivarCount(mirror:Mirror) in ' + this.constructor.name;
    };
    /*Swift.(file)._DebuggerSupport.shouldExpand(mirror:Mirror,collectionStatus:_DebuggerSupport.CollectionStatus,isRoot:Bool)*/
    /*Swift.(file)._DebuggerSupport.shouldExpand(mirror:Mirror,collectionStatus:_DebuggerSupport.CollectionStatus,isRoot:Bool)*/
    _DebuggerSupport.shouldExpandMirrorCollectionStatusIsRoot = function ($info, mirror, collectionStatus, isRoot) {
        throw 'unsupported method Swift.(file)._DebuggerSupport.shouldExpand(mirror:Mirror,collectionStatus:_DebuggerSupport.CollectionStatus,isRoot:Bool) in ' + this.constructor.name;
    };
    /*Swift.(file)._DebuggerSupport.printForDebuggerImpl(value:Any?,mirror:Mirror,name:String?,indent:Int,maxDepth:Int,isRoot:Bool,parentCollectionStatus:_DebuggerSupport.CollectionStatus,refsAlreadySeen:Set<ObjectIdentifier>,maxItemCounter:Int,target:StreamType)*/
    /*Swift.(file)._DebuggerSupport.printForDebuggerImpl(value:Any?,mirror:Mirror,name:String?,indent:Int,maxDepth:Int,isRoot:Bool,parentCollectionStatus:_DebuggerSupport.CollectionStatus,refsAlreadySeen:Set<ObjectIdentifier>,maxItemCounter:Int,target:StreamType)*/
    _DebuggerSupport.printForDebuggerImplValueMirrorNameIndentMaxDepthIsRootParentCollectionStatusRefsAlreadySeenMaxItemCounterTarget = function ($info, value, mirror, _name, indent, maxDepth, isRoot, parentCollectionStatus, refsAlreadySeen$inout, maxItemCounter$inout, target$inout) {
        throw 'unsupported method Swift.(file)._DebuggerSupport.printForDebuggerImpl(value:Any?,mirror:Mirror,name:String?,indent:Int,maxDepth:Int,isRoot:Bool,parentCollectionStatus:_DebuggerSupport.CollectionStatus,refsAlreadySeen:Set<ObjectIdentifier>,maxItemCounter:Int,target:StreamType) in ' + this.constructor.name;
    };
    /*Swift.(file)._DebuggerSupport.stringForPrintObject(_:Any)*/
    /*Swift.(file)._DebuggerSupport.stringForPrintObject(_:Any)*/
    _DebuggerSupport.stringForPrintObject = function ($info, value) {
        throw 'unsupported method Swift.(file)._DebuggerSupport.stringForPrintObject(_:Any) in ' + this.constructor.name;
    };
    _DebuggerSupport.prototype.init$vars = function () {
    };
    var _a;
    _DebuggerSupport.$infoAddress = '';
    _DebuggerSupport.CollectionStatus = (_a = /** @class */ (function () {
            function class_1() {
            }
            Object.defineProperty(class_1, "notACollection", {
                get: function () { return Object.assign(new _DebuggerSupport.CollectionStatus(), __assign({ rawValue: "notACollection" }, Array.from(arguments).slice(1))); },
                enumerable: true,
                configurable: true
            });
            Object.defineProperty(class_1, "collectionOfElements", {
                get: function () { return Object.assign(new _DebuggerSupport.CollectionStatus(), __assign({ rawValue: "collectionOfElements" }, Array.from(arguments).slice(1))); },
                enumerable: true,
                configurable: true
            });
            Object.defineProperty(class_1, "collectionOfPairs", {
                get: function () { return Object.assign(new _DebuggerSupport.CollectionStatus(), __assign({ rawValue: "collectionOfPairs" }, Array.from(arguments).slice(1))); },
                enumerable: true,
                configurable: true
            });
            Object.defineProperty(class_1, "_element", {
                get: function () { return Object.assign(new _DebuggerSupport.CollectionStatus(), __assign({ rawValue: "_element" }, Array.from(arguments).slice(1))); },
                enumerable: true,
                configurable: true
            });
            Object.defineProperty(class_1, "pair", {
                get: function () { return Object.assign(new _DebuggerSupport.CollectionStatus(), __assign({ rawValue: "pair" }, Array.from(arguments).slice(1))); },
                enumerable: true,
                configurable: true
            });
            Object.defineProperty(class_1, "elementOfPair", {
                get: function () { return Object.assign(new _DebuggerSupport.CollectionStatus(), __assign({ rawValue: "elementOfPair" }, Array.from(arguments).slice(1))); },
                enumerable: true,
                configurable: true
            });
            /*Swift.(file)._DebuggerSupport.CollectionStatus.isCollection*/
            class_1.prototype.isCollection$get = function () {
                throw 'unsupported variable Swift.(file)._DebuggerSupport.CollectionStatus.isCollection in ' + this.constructor.name;
            };
            Object.defineProperty(class_1.prototype, "isCollection", {
                get: function () { return this.isCollection$get(); },
                enumerable: true,
                configurable: true
            });
            ;
            /*Swift.(file)._DebuggerSupport.CollectionStatus.getChildStatus(child:Mirror)*/
            /*Swift.(file)._DebuggerSupport.CollectionStatus.getChildStatus(child:Mirror)*/
            class_1.prototype.getChildStatusChild = function ($info, child) {
                throw 'unsupported method Swift.(file)._DebuggerSupport.CollectionStatus.getChildStatus(child:Mirror) in ' + this.constructor.name;
            };
            /*Swift.(file)._DebuggerSupport.CollectionStatus.==(_:_DebuggerSupport.CollectionStatus,_:_DebuggerSupport.CollectionStatus)*/
            /*Swift.(file).Equatable.==infix(_:Self,_:Self)*/
            class_1.infix_61_61 = function ($info, a, b) {
                return a == b;
            };
            /*Swift.(file)._DebuggerSupport.CollectionStatus.hashValue*/
            class_1.prototype.hashValue$get = function () {
                throw 'unsupported variable Swift.(file)._DebuggerSupport.CollectionStatus.hashValue in ' + this.constructor.name;
            };
            Object.defineProperty(class_1.prototype, "hashValue", {
                get: function () { return this.hashValue$get(); },
                enumerable: true,
                configurable: true
            });
            ;
            /*Swift.(file)._DebuggerSupport.CollectionStatus.hash(into:Hasher)*/
            /*Swift.(file).Hashable.hash(into:Hasher)*/
            class_1.prototype.hashInto = function ($info, hasher$inout) {
                throw 'unsupported method Swift.(file)._DebuggerSupport.CollectionStatus.hash(into:Hasher) in ' + this.constructor.name;
            };
            class_1.prototype.init$vars = function () {
            };
            return class_1;
        }()),
        _a.$infoAddress = '',
        _a);
    return _DebuggerSupport;
}());
_mixin(_DebuggerSupport.CollectionStatus, _DefaultEnumImplementation, false);
_mixin(_DebuggerSupport, _DefaultEnumImplementation, false);
var _DictionaryBuilder = /** @class */ (function () {
    function _DictionaryBuilder() {
    }
    /*Swift.(file)._DictionaryBuilder.init(count:Int)*/
    /*Swift.(file)._DictionaryBuilder.init(count:Int)*/
    _DictionaryBuilder.prototype.initCountInt = function ($info, count) {
        throw 'unsupported method Swift.(file)._DictionaryBuilder.init(count:Int) in ' + this.constructor.name;
    };
    /*Swift.(file)._DictionaryBuilder.add(key:Key,value:Value)*/
    /*Swift.(file)._DictionaryBuilder.add(key:Key,value:Value)*/
    _DictionaryBuilder.prototype.addKeyValue = function ($info, newKey, value) {
        throw 'unsupported method Swift.(file)._DictionaryBuilder.add(key:Key,value:Value) in ' + this.constructor.name;
    };
    /*Swift.(file)._DictionaryBuilder.take()*/
    /*Swift.(file)._DictionaryBuilder.take()*/
    _DictionaryBuilder.prototype.take = function ($info) {
        throw 'unsupported method Swift.(file)._DictionaryBuilder.take() in ' + this.constructor.name;
    };
    _DictionaryBuilder.prototype.init$vars = function () {
    };
    _DictionaryBuilder.$struct = true;
    _DictionaryBuilder.$infoAddress = '';
    return _DictionaryBuilder;
}());
var _DictionaryBuffer$implementation = /** @class */ (function () {
    function _DictionaryBuffer$implementation() {
    }
    return _DictionaryBuffer$implementation;
}());
var Equatable$implementation = /** @class */ (function () {
    function Equatable$implementation() {
    }
    /*Swift.(file).Equatable.!=infix(_:Self,_:Self)*/
    /*Swift.(file).Equatable.!=infix(_:Self,_:Self)*/
    Equatable$implementation.infix_33_61 = function ($info, lhs, rhs) {
        var _this = this;
        return Bool.prefix_33({}, (_.arg0 = lhs).constructor.infix_61_61({}, _.arg0, rhs));
    };
    return Equatable$implementation;
}());
var Error$implementation = /** @class */ (function () {
    function Error$implementation() {
    }
    return Error$implementation;
}());
var FloatingPointClassification = /** @class */ (function () {
    function FloatingPointClassification() {
    }
    Object.defineProperty(FloatingPointClassification, "signalingNaN", {
        get: function () { return Object.assign(new FloatingPointClassification(), __assign({ rawValue: "signalingNaN" }, Array.from(arguments).slice(1))); },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(FloatingPointClassification, "quietNaN", {
        get: function () { return Object.assign(new FloatingPointClassification(), __assign({ rawValue: "quietNaN" }, Array.from(arguments).slice(1))); },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(FloatingPointClassification, "negativeInfinity", {
        get: function () { return Object.assign(new FloatingPointClassification(), __assign({ rawValue: "negativeInfinity" }, Array.from(arguments).slice(1))); },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(FloatingPointClassification, "negativeNormal", {
        get: function () { return Object.assign(new FloatingPointClassification(), __assign({ rawValue: "negativeNormal" }, Array.from(arguments).slice(1))); },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(FloatingPointClassification, "negativeSubnormal", {
        get: function () { return Object.assign(new FloatingPointClassification(), __assign({ rawValue: "negativeSubnormal" }, Array.from(arguments).slice(1))); },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(FloatingPointClassification, "negativeZero", {
        get: function () { return Object.assign(new FloatingPointClassification(), __assign({ rawValue: "negativeZero" }, Array.from(arguments).slice(1))); },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(FloatingPointClassification, "positiveZero", {
        get: function () { return Object.assign(new FloatingPointClassification(), __assign({ rawValue: "positiveZero" }, Array.from(arguments).slice(1))); },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(FloatingPointClassification, "positiveSubnormal", {
        get: function () { return Object.assign(new FloatingPointClassification(), __assign({ rawValue: "positiveSubnormal" }, Array.from(arguments).slice(1))); },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(FloatingPointClassification, "positiveNormal", {
        get: function () { return Object.assign(new FloatingPointClassification(), __assign({ rawValue: "positiveNormal" }, Array.from(arguments).slice(1))); },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(FloatingPointClassification, "positiveInfinity", {
        get: function () { return Object.assign(new FloatingPointClassification(), __assign({ rawValue: "positiveInfinity" }, Array.from(arguments).slice(1))); },
        enumerable: true,
        configurable: true
    });
    /*Swift.(file).FloatingPointClassification.==(_:FloatingPointClassification,_:FloatingPointClassification)*/
    /*Swift.(file).Equatable.==infix(_:Self,_:Self)*/
    FloatingPointClassification.infix_61_61 = function ($info, a, b) {
        return a == b;
    };
    /*Swift.(file).FloatingPointClassification.hashValue*/
    FloatingPointClassification.prototype.hashValue$get = function () {
        throw 'unsupported variable Swift.(file).FloatingPointClassification.hashValue in ' + this.constructor.name;
    };
    Object.defineProperty(FloatingPointClassification.prototype, "hashValue", {
        get: function () { return this.hashValue$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).FloatingPointClassification.hash(into:Hasher)*/
    /*Swift.(file).Hashable.hash(into:Hasher)*/
    FloatingPointClassification.prototype.hashInto = function ($info, hasher$inout) {
        throw 'unsupported method Swift.(file).FloatingPointClassification.hash(into:Hasher) in ' + this.constructor.name;
    };
    FloatingPointClassification.prototype.init$vars = function () {
    };
    FloatingPointClassification.$infoAddress = '';
    return FloatingPointClassification;
}());
_mixin(FloatingPointClassification, _DefaultEnumImplementation, false);
var FloatingPointRoundingRule = /** @class */ (function () {
    function FloatingPointRoundingRule() {
    }
    Object.defineProperty(FloatingPointRoundingRule, "toNearestOrAwayFromZero", {
        get: function () { return Object.assign(new FloatingPointRoundingRule(), __assign({ rawValue: "toNearestOrAwayFromZero" }, Array.from(arguments).slice(1))); },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(FloatingPointRoundingRule, "toNearestOrEven", {
        get: function () { return Object.assign(new FloatingPointRoundingRule(), __assign({ rawValue: "toNearestOrEven" }, Array.from(arguments).slice(1))); },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(FloatingPointRoundingRule, "up", {
        get: function () { return Object.assign(new FloatingPointRoundingRule(), __assign({ rawValue: "up" }, Array.from(arguments).slice(1))); },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(FloatingPointRoundingRule, "down", {
        get: function () { return Object.assign(new FloatingPointRoundingRule(), __assign({ rawValue: "down" }, Array.from(arguments).slice(1))); },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(FloatingPointRoundingRule, "towardZero", {
        get: function () { return Object.assign(new FloatingPointRoundingRule(), __assign({ rawValue: "towardZero" }, Array.from(arguments).slice(1))); },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(FloatingPointRoundingRule, "awayFromZero", {
        get: function () { return Object.assign(new FloatingPointRoundingRule(), __assign({ rawValue: "awayFromZero" }, Array.from(arguments).slice(1))); },
        enumerable: true,
        configurable: true
    });
    /*Swift.(file).FloatingPointRoundingRule.==(_:FloatingPointRoundingRule,_:FloatingPointRoundingRule)*/
    /*Swift.(file).Equatable.==infix(_:Self,_:Self)*/
    FloatingPointRoundingRule.infix_61_61 = function ($info, a, b) {
        return a == b;
    };
    /*Swift.(file).FloatingPointRoundingRule.hashValue*/
    FloatingPointRoundingRule.prototype.hashValue$get = function () {
        throw 'unsupported variable Swift.(file).FloatingPointRoundingRule.hashValue in ' + this.constructor.name;
    };
    Object.defineProperty(FloatingPointRoundingRule.prototype, "hashValue", {
        get: function () { return this.hashValue$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).FloatingPointRoundingRule.hash(into:Hasher)*/
    /*Swift.(file).Hashable.hash(into:Hasher)*/
    FloatingPointRoundingRule.prototype.hashInto = function ($info, hasher$inout) {
        throw 'unsupported method Swift.(file).FloatingPointRoundingRule.hash(into:Hasher) in ' + this.constructor.name;
    };
    FloatingPointRoundingRule.prototype.init$vars = function () {
    };
    FloatingPointRoundingRule.$infoAddress = '';
    return FloatingPointRoundingRule;
}());
_mixin(FloatingPointRoundingRule, _DefaultEnumImplementation, false);
var Hashable$implementation = /** @class */ (function () {
    function Hashable$implementation() {
    }
    return Hashable$implementation;
}());
if (typeof Equatable$implementation != 'undefined')
    _mixin(Hashable$implementation, Equatable$implementation, false);
var _HasCustomAnyHashableRepresentation$implementation = /** @class */ (function () {
    function _HasCustomAnyHashableRepresentation$implementation() {
    }
    return _HasCustomAnyHashableRepresentation$implementation;
}());
var _AnyHashableBox$implementation = /** @class */ (function () {
    function _AnyHashableBox$implementation() {
    }
    return _AnyHashableBox$implementation;
}());
var _ConcreteHashableBox = /** @class */ (function () {
    function _ConcreteHashableBox() {
    }
    /*Swift.(file)._ConcreteHashableBox.init(_:Base)*/
    /*Swift.(file)._ConcreteHashableBox.init(_:Base)*/
    _ConcreteHashableBox.prototype.init = function ($info, base) {
        throw 'unsupported method Swift.(file)._ConcreteHashableBox.init(_:Base) in ' + this.constructor.name;
    };
    _ConcreteHashableBox.prototype.init$vars = function () {
    };
    _ConcreteHashableBox.$struct = true;
    _ConcreteHashableBox.$infoAddress = '';
    return _ConcreteHashableBox;
}());
if (typeof _AnyHashableBox$implementation != 'undefined')
    _mixin(_ConcreteHashableBox, _AnyHashableBox$implementation, false);
var Hasher = /** @class */ (function () {
    function Hasher() {
    }
    /*Swift.(file).Hasher.init()*/
    /*Swift.(file).Hasher.init()*/
    Hasher.prototype.init = function ($info) {
        var _this = this;
        _this._core = _create(Hasher._Core, 'init', {});
        return;
    };
    /*Swift.(file).Hasher.init(_seed:Int)*/
    /*Swift.(file).Hasher.init(_seed:Int)*/
    Hasher.prototype.init_seedInt = function ($info, _seed) {
        var _this = this;
        _this._core = _create(Hasher._Core, 'initSeedInt', {}, _seed);
        return;
    };
    /*Swift.(file).Hasher.init(_rawSeed:(UInt64, UInt64))*/
    /*Swift.(file).Hasher.init(_rawSeed:(UInt64, UInt64))*/
    Hasher.prototype.init_rawSeedtuple_type = function ($info, _rawSeed) {
        var _this = this;
        _this._core = _create(Hasher._Core, 'initStateHasher_State', {}, _create(Hasher._State, 'initRawSeedtuple_type', {}, _rawSeed));
        return;
    };
    /*Swift.(file).Hasher.combine(_:H)*/
    /*Swift.(file).Hasher.combine(_:H)*/
    Hasher.prototype.combine = function ($info, value) {
        var _this = this;
        value.hashInto({}, { get: function () { return _this; }, set: function ($val) { return $info.$setThis(_this = _cloneStruct($val)); } });
    };
    /*Swift.(file).Hasher.combine(bytes:UnsafeRawBufferPointer)*/
    /*Swift.(file).Hasher.combine(bytes:UnsafeRawBufferPointer)*/
    Hasher.prototype.combineBytes = function ($info, bytes) {
        var _this = this;
        _this._core.combineBytes({ $setThis: function ($val) { return _this._core = $val; } }, bytes);
    };
    /*Swift.(file).Hasher.finalize()*/
    /*Swift.(file).Hasher.finalize()*/
    Hasher.prototype.finalize = function ($info) {
        var _this = this;
        var core = _cloneStruct(_this._core);
        return _create(Int, 'initTruncatingIfNeeded', {}, core.finalize({ $setThis: function ($val) { return core = $val; } }));
    };
    Hasher.prototype.init$vars = function () {
    };
    var _b, _c, _d;
    Hasher.$struct = true;
    Hasher.$infoAddress = '';
    Hasher._TailBuffer = (_b = /** @class */ (function () {
            function class_2() {
            }
            /*Swift.(file).Hasher._TailBuffer.value*/
            class_2.prototype.value$get = function () {
                throw 'unsupported variable Swift.(file).Hasher._TailBuffer.value in ' + this.constructor.name;
            };
            Object.defineProperty(class_2.prototype, "value", {
                get: function () { return this.value$get(); },
                enumerable: true,
                configurable: true
            });
            ;
            /*Swift.(file).Hasher._TailBuffer.init()*/
            /*Swift.(file).Hasher._TailBuffer.init()*/
            class_2.prototype.init = function ($info) {
                throw 'unsupported method Swift.(file).Hasher._TailBuffer.init() in ' + this.constructor.name;
            };
            /*Swift.(file).Hasher._TailBuffer.init(tail:UInt64,byteCount:UInt64)*/
            /*Swift.(file).Hasher._TailBuffer.init(tail:UInt64,byteCount:UInt64)*/
            class_2.prototype.initTailUInt64ByteCountUInt64 = function ($info, tail, byteCount) {
                throw 'unsupported method Swift.(file).Hasher._TailBuffer.init(tail:UInt64,byteCount:UInt64) in ' + this.constructor.name;
            };
            /*Swift.(file).Hasher._TailBuffer.init(tail:UInt64,byteCount:Int)*/
            /*Swift.(file).Hasher._TailBuffer.init(tail:UInt64,byteCount:Int)*/
            class_2.prototype.initTailUInt64ByteCountInt = function ($info, tail, byteCount) {
                throw 'unsupported method Swift.(file).Hasher._TailBuffer.init(tail:UInt64,byteCount:Int) in ' + this.constructor.name;
            };
            /*Swift.(file).Hasher._TailBuffer.tail*/
            class_2.prototype.tail$get = function () {
                throw 'unsupported variable Swift.(file).Hasher._TailBuffer.tail in ' + this.constructor.name;
            };
            Object.defineProperty(class_2.prototype, "tail", {
                get: function () { return this.tail$get(); },
                enumerable: true,
                configurable: true
            });
            ;
            /*Swift.(file).Hasher._TailBuffer.byteCount*/
            class_2.prototype.byteCount$get = function () {
                throw 'unsupported variable Swift.(file).Hasher._TailBuffer.byteCount in ' + this.constructor.name;
            };
            Object.defineProperty(class_2.prototype, "byteCount", {
                get: function () { return this.byteCount$get(); },
                enumerable: true,
                configurable: true
            });
            ;
            /*Swift.(file).Hasher._TailBuffer.append(_:UInt64)*/
            /*Swift.(file).Hasher._TailBuffer.append(_:UInt64)*/
            class_2.prototype.append = function ($info, bytes) {
                throw 'unsupported method Swift.(file).Hasher._TailBuffer.append(_:UInt64) in ' + this.constructor.name;
            };
            /*Swift.(file).Hasher._TailBuffer.append(_:UInt64,count:UInt64)*/
            /*Swift.(file).Hasher._TailBuffer.append(_:UInt64,count:UInt64)*/
            class_2.prototype.appendCount = function ($info, bytes, count) {
                throw 'unsupported method Swift.(file).Hasher._TailBuffer.append(_:UInt64,count:UInt64) in ' + this.constructor.name;
            };
            class_2.prototype.init$vars = function () {
            };
            return class_2;
        }()),
        _b.$struct = true,
        _b.$infoAddress = '',
        _b);
    Hasher._Core = (_c = /** @class */ (function () {
            function class_3() {
            }
            /*Swift.(file).Hasher._Core.init(state:Hasher._State)*/
            /*Swift.(file).Hasher._Core.init(state:Hasher._State)*/
            class_3.prototype.initStateHasher_State = function ($info, state) {
                throw 'unsupported method Swift.(file).Hasher._Core.init(state:Hasher._State) in ' + this.constructor.name;
            };
            /*Swift.(file).Hasher._Core.init()*/
            /*Swift.(file).Hasher._Core.init()*/
            class_3.prototype.init = function ($info) {
                throw 'unsupported method Swift.(file).Hasher._Core.init() in ' + this.constructor.name;
            };
            /*Swift.(file).Hasher._Core.init(seed:Int)*/
            /*Swift.(file).Hasher._Core.init(seed:Int)*/
            class_3.prototype.initSeedInt = function ($info, seed) {
                throw 'unsupported method Swift.(file).Hasher._Core.init(seed:Int) in ' + this.constructor.name;
            };
            /*Swift.(file).Hasher._Core.combine(_:UInt)*/
            /*Swift.(file).Hasher._Core.combine(_:UInt)*/
            class_3.prototype.combine = function ($info, value) {
                throw 'unsupported method Swift.(file).Hasher._Core.combine(_:UInt) in ' + this.constructor.name;
            };
            /*Swift.(file).Hasher._Core.combine(_:UInt64)*/
            /*Swift.(file).Hasher._Core.combine(_:UInt64)*/
            class_3.prototype.combine = function ($info, value) {
                throw 'unsupported method Swift.(file).Hasher._Core.combine(_:UInt64) in ' + this.constructor.name;
            };
            /*Swift.(file).Hasher._Core.combine(_:UInt32)*/
            /*Swift.(file).Hasher._Core.combine(_:UInt32)*/
            class_3.prototype.combine = function ($info, value) {
                throw 'unsupported method Swift.(file).Hasher._Core.combine(_:UInt32) in ' + this.constructor.name;
            };
            /*Swift.(file).Hasher._Core.combine(_:UInt16)*/
            /*Swift.(file).Hasher._Core.combine(_:UInt16)*/
            class_3.prototype.combine = function ($info, value) {
                throw 'unsupported method Swift.(file).Hasher._Core.combine(_:UInt16) in ' + this.constructor.name;
            };
            /*Swift.(file).Hasher._Core.combine(_:UInt8)*/
            /*Swift.(file).Hasher._Core.combine(_:UInt8)*/
            class_3.prototype.combine = function ($info, value) {
                throw 'unsupported method Swift.(file).Hasher._Core.combine(_:UInt8) in ' + this.constructor.name;
            };
            /*Swift.(file).Hasher._Core.combine(bytes:UInt64,count:Int)*/
            /*Swift.(file).Hasher._Core.combine(bytes:UInt64,count:Int)*/
            class_3.prototype.combineBytesCount = function ($info, bytes, count) {
                throw 'unsupported method Swift.(file).Hasher._Core.combine(bytes:UInt64,count:Int) in ' + this.constructor.name;
            };
            /*Swift.(file).Hasher._Core.combine(bytes:UnsafeRawBufferPointer)*/
            /*Swift.(file).Hasher._Core.combine(bytes:UnsafeRawBufferPointer)*/
            class_3.prototype.combineBytes = function ($info, bytes) {
                throw 'unsupported method Swift.(file).Hasher._Core.combine(bytes:UnsafeRawBufferPointer) in ' + this.constructor.name;
            };
            /*Swift.(file).Hasher._Core.finalize()*/
            /*Swift.(file).Hasher._Core.finalize()*/
            class_3.prototype.finalize = function ($info) {
                throw 'unsupported method Swift.(file).Hasher._Core.finalize() in ' + this.constructor.name;
            };
            class_3.prototype.init$vars = function () {
            };
            return class_3;
        }()),
        _c.$struct = true,
        _c.$infoAddress = '',
        _c);
    Hasher._State = (_d = /** @class */ (function () {
            function class_4() {
            }
            /*Swift.(file).Hasher._State.v0*/
            class_4.prototype.v0$get = function () {
                throw 'unsupported variable Swift.(file).Hasher._State.v0 in ' + this.constructor.name;
            };
            Object.defineProperty(class_4.prototype, "v0", {
                get: function () { return this.v0$get(); },
                enumerable: true,
                configurable: true
            });
            ;
            /*Swift.(file).Hasher._State.v1*/
            class_4.prototype.v1$get = function () {
                throw 'unsupported variable Swift.(file).Hasher._State.v1 in ' + this.constructor.name;
            };
            Object.defineProperty(class_4.prototype, "v1", {
                get: function () { return this.v1$get(); },
                enumerable: true,
                configurable: true
            });
            ;
            /*Swift.(file).Hasher._State.v2*/
            class_4.prototype.v2$get = function () {
                throw 'unsupported variable Swift.(file).Hasher._State.v2 in ' + this.constructor.name;
            };
            Object.defineProperty(class_4.prototype, "v2", {
                get: function () { return this.v2$get(); },
                enumerable: true,
                configurable: true
            });
            ;
            /*Swift.(file).Hasher._State.v3*/
            class_4.prototype.v3$get = function () {
                throw 'unsupported variable Swift.(file).Hasher._State.v3 in ' + this.constructor.name;
            };
            Object.defineProperty(class_4.prototype, "v3", {
                get: function () { return this.v3$get(); },
                enumerable: true,
                configurable: true
            });
            ;
            /*Swift.(file).Hasher._State.v4*/
            class_4.prototype.v4$get = function () {
                throw 'unsupported variable Swift.(file).Hasher._State.v4 in ' + this.constructor.name;
            };
            Object.defineProperty(class_4.prototype, "v4", {
                get: function () { return this.v4$get(); },
                enumerable: true,
                configurable: true
            });
            ;
            /*Swift.(file).Hasher._State.v5*/
            class_4.prototype.v5$get = function () {
                throw 'unsupported variable Swift.(file).Hasher._State.v5 in ' + this.constructor.name;
            };
            Object.defineProperty(class_4.prototype, "v5", {
                get: function () { return this.v5$get(); },
                enumerable: true,
                configurable: true
            });
            ;
            /*Swift.(file).Hasher._State.v6*/
            class_4.prototype.v6$get = function () {
                throw 'unsupported variable Swift.(file).Hasher._State.v6 in ' + this.constructor.name;
            };
            Object.defineProperty(class_4.prototype, "v6", {
                get: function () { return this.v6$get(); },
                enumerable: true,
                configurable: true
            });
            ;
            /*Swift.(file).Hasher._State.v7*/
            class_4.prototype.v7$get = function () {
                throw 'unsupported variable Swift.(file).Hasher._State.v7 in ' + this.constructor.name;
            };
            Object.defineProperty(class_4.prototype, "v7", {
                get: function () { return this.v7$get(); },
                enumerable: true,
                configurable: true
            });
            ;
            /*Swift.(file).Hasher._State.init(rawSeed:(UInt64, UInt64))*/
            /*Swift.(file).Hasher._State.init(rawSeed:(UInt64, UInt64))*/
            class_4.prototype.initRawSeedtuple_type = function ($info, rawSeed) {
                throw 'unsupported method Swift.(file).Hasher._State.init(rawSeed:(UInt64, UInt64)) in ' + this.constructor.name;
            };
            /*Swift.(file).Hasher._State.compress(_:UInt64)*/
            /*Swift.(file).Hasher._State.compress(_:UInt64)*/
            class_4.prototype.compress = function ($info, m) {
                var _this = this;
                UInt64.infix_94_61({}, { get: function () { return _this.v3; }, set: function ($val) { return _this.v3 = $val; } }, m);
                _this._round({ $setThis: function ($val) { return $info.$setThis(_this = _cloneStruct($val)); } });
                UInt64.infix_94_61({}, { get: function () { return _this.v0; }, set: function ($val) { return _this.v0 = $val; } }, m);
            };
            /*Swift.(file).Hasher._State.finalize(tailAndByteCount:UInt64)*/
            /*Swift.(file).Hasher._State.finalize(tailAndByteCount:UInt64)*/
            class_4.prototype.finalizeTailAndByteCount = function ($info, tailAndByteCount) {
                var _this = this;
                _this.compress({ $setThis: function ($val) { return $info.$setThis(_this = _cloneStruct($val)); } }, tailAndByteCount);
                UInt64.infix_94_61({}, { get: function () { return _this.v2; }, set: function ($val) { return _this.v2 = $val; } }, 0xff);
                {
                    var $generator_1 = _cloneStruct(Int.infix_46_46_60({}, 0, 3).makeIterator({}));
                    while (true) {
                        var $ifLet0;
                        if (!((($ifLet0 = $generator_1.next({ $setThis: function ($val) { return $generator_1 = $val; } })) || true) && $ifLet0 != null))
                            break;
                        _this._round({ $setThis: function ($val) { return $info.$setThis(_this = _cloneStruct($val)); } });
                    }
                }
                ;
                return _this._extract({});
            };
            /*Swift.(file).Hasher._State.init()*/
            /*Swift.(file).Hasher._State.init()*/
            class_4.prototype.init = function ($info) {
                var _this = this;
                _this.initRawSeedtuple_type({}, Hasher._executionSeed);
                return;
            };
            /*Swift.(file).Hasher._State.init(seed:Int)*/
            /*Swift.(file).Hasher._State.init(seed:Int)*/
            class_4.prototype.initSeedInt = function ($info, seed) {
                var _this = this;
                var executionSeed = Hasher._executionSeed;
                var seed = _create(UInt, 'initBitPatternInt', {}, seed);
                _this.initRawSeedtuple_type({}, { 0: UInt64.infix_94({}, executionSeed["0"], _create(UInt64, 'initTruncatingIfNeeded', {}, seed)), 1: executionSeed["1"] });
                return;
            };
            class_4.prototype.init$vars = function () {
            };
            return class_4;
        }()),
        _d.$struct = true,
        _d.$infoAddress = '',
        _d);
    return Hasher;
}());
var _UnmanagedAnyObjectArray = /** @class */ (function () {
    function _UnmanagedAnyObjectArray() {
    }
    /*Swift.(file)._UnmanagedAnyObjectArray.value*/
    _UnmanagedAnyObjectArray.prototype.value$get = function () {
        throw 'unsupported variable Swift.(file)._UnmanagedAnyObjectArray.value in ' + this.constructor.name;
    };
    Object.defineProperty(_UnmanagedAnyObjectArray.prototype, "value", {
        get: function () { return this.value$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file)._UnmanagedAnyObjectArray.init(_:UnsafeMutablePointer<AnyObject>)*/
    /*Swift.(file)._UnmanagedAnyObjectArray.init(_:UnsafeMutablePointer<AnyObject>)*/
    _UnmanagedAnyObjectArray.prototype.initUnsafeMutablePointer = function ($info, up) {
        throw 'unsupported method Swift.(file)._UnmanagedAnyObjectArray.init(_:UnsafeMutablePointer<AnyObject>) in ' + this.constructor.name;
    };
    /*Swift.(file)._UnmanagedAnyObjectArray.init(_:UnsafeMutablePointer<AnyObject>?)*/
    /*Swift.(file)._UnmanagedAnyObjectArray.init(_:UnsafeMutablePointer<AnyObject>?)*/
    _UnmanagedAnyObjectArray.prototype.initOptional = function ($info, up) {
        throw 'unsupported method Swift.(file)._UnmanagedAnyObjectArray.init(_:UnsafeMutablePointer<AnyObject>?) in ' + this.constructor.name;
    };
    /*Swift.(file)._UnmanagedAnyObjectArray.subscript(_:Int)*/
    /*Swift.(file)._UnmanagedAnyObjectArray.subscript(_:Int)*/
    _UnmanagedAnyObjectArray.prototype.subscript$get = function ($info, i) {
        throw 'unsupported method Swift.(file)._UnmanagedAnyObjectArray.subscript(_:Int) in ' + this.constructor.name;
    }; /*Swift.(file)._UnmanagedAnyObjectArray.subscript(_:Int)*/
    /*Swift.(file)._UnmanagedAnyObjectArray.subscript(_:Int)*/
    _UnmanagedAnyObjectArray.prototype.subscript$set = function ($info, newValue, i) {
        throw 'unsupported method Swift.(file)._UnmanagedAnyObjectArray.subscript(_:Int) in ' + this.constructor.name;
    };
    _UnmanagedAnyObjectArray.prototype.init$vars = function () {
    };
    _UnmanagedAnyObjectArray.$struct = true;
    _UnmanagedAnyObjectArray.$infoAddress = '';
    _UnmanagedAnyObjectArray.initOptional$failable = true;
    return _UnmanagedAnyObjectArray;
}());
var _HashTableDelegate$implementation = /** @class */ (function () {
    function _HashTableDelegate$implementation() {
    }
    return _HashTableDelegate$implementation;
}());
var AdditiveArithmetic$implementation = /** @class */ (function () {
    function AdditiveArithmetic$implementation() {
    }
    /*Swift.(file).AdditiveArithmetic.zero*/
    AdditiveArithmetic$implementation.zero$get = function () {
        var _this = this;
        return _create(_this, 'initIntegerLiteral', {}, 0);
    };
    Object.defineProperty(AdditiveArithmetic$implementation, "zero", {
        get: function () {
            return this.zero$get();
        },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).AdditiveArithmetic.+prefix(_:Self)*/
    /*Swift.(file).AdditiveArithmetic.+prefix(_:Self)*/
    AdditiveArithmetic$implementation.prefix_43 = function ($info, x) {
        return +x;
    };
    return AdditiveArithmetic$implementation;
}());
if (typeof Equatable$implementation != 'undefined')
    _mixin(AdditiveArithmetic$implementation, Equatable$implementation, false);
var Numeric$implementation = /** @class */ (function () {
    function Numeric$implementation() {
    }
    return Numeric$implementation;
}());
if (typeof AdditiveArithmetic$implementation != 'undefined')
    _mixin(Numeric$implementation, AdditiveArithmetic$implementation, false);
if (typeof ExpressibleByIntegerLiteral$implementation != 'undefined')
    _mixin(Numeric$implementation, ExpressibleByIntegerLiteral$implementation, false);
var SignedNumeric$implementation = /** @class */ (function () {
    function SignedNumeric$implementation() {
    }
    /*Swift.(file).SignedNumeric.-prefix(_:Self)*/
    /*Swift.(file).SignedNumeric.-prefix(_:Self)*/
    SignedNumeric$implementation.prefix_45 = function ($info, operand) {
        return -operand;
    };
    /*Swift.(file).SignedNumeric.negate()*/
    /*Swift.(file).SignedNumeric.negate()*/
    SignedNumeric$implementation.prototype.negate = function ($info) {
        $info.$setThis(-this);
    };
    return SignedNumeric$implementation;
}());
if (typeof Numeric$implementation != 'undefined')
    _mixin(SignedNumeric$implementation, Numeric$implementation, false);
var _IntegerAnyHashableBox = /** @class */ (function () {
    function _IntegerAnyHashableBox() {
    }
    /*Swift.(file)._IntegerAnyHashableBox.init(_:Base)*/
    /*Swift.(file)._IntegerAnyHashableBox.init(_:Base)*/
    _IntegerAnyHashableBox.prototype.init = function ($info, value) {
        throw 'unsupported method Swift.(file)._IntegerAnyHashableBox.init(_:Base) in ' + this.constructor.name;
    };
    _IntegerAnyHashableBox.prototype.init$vars = function () {
    };
    _IntegerAnyHashableBox.$struct = true;
    _IntegerAnyHashableBox.$infoAddress = '';
    return _IntegerAnyHashableBox;
}());
if (typeof _AnyHashableBox$implementation != 'undefined')
    _mixin(_IntegerAnyHashableBox, _AnyHashableBox$implementation, false);
var KeyPathKind = /** @class */ (function () {
    function KeyPathKind() {
    }
    Object.defineProperty(KeyPathKind, "readOnly", {
        get: function () { return Object.assign(new KeyPathKind(), __assign({ rawValue: "readOnly" }, Array.from(arguments).slice(1))); },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(KeyPathKind, "value", {
        get: function () { return Object.assign(new KeyPathKind(), __assign({ rawValue: "value" }, Array.from(arguments).slice(1))); },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(KeyPathKind, "reference", {
        get: function () { return Object.assign(new KeyPathKind(), __assign({ rawValue: "reference" }, Array.from(arguments).slice(1))); },
        enumerable: true,
        configurable: true
    });
    /*Swift.(file).KeyPathKind.==(_:KeyPathKind,_:KeyPathKind)*/
    /*Swift.(file).Equatable.==infix(_:Self,_:Self)*/
    KeyPathKind.infix_61_61 = function ($info, a, b) {
        return a == b;
    };
    /*Swift.(file).KeyPathKind.hashValue*/
    KeyPathKind.prototype.hashValue$get = function () {
        throw 'unsupported variable Swift.(file).KeyPathKind.hashValue in ' + this.constructor.name;
    };
    Object.defineProperty(KeyPathKind.prototype, "hashValue", {
        get: function () { return this.hashValue$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).KeyPathKind.hash(into:Hasher)*/
    /*Swift.(file).Hashable.hash(into:Hasher)*/
    KeyPathKind.prototype.hashInto = function ($info, hasher$inout) {
        throw 'unsupported method Swift.(file).KeyPathKind.hash(into:Hasher) in ' + this.constructor.name;
    };
    KeyPathKind.prototype.init$vars = function () {
    };
    KeyPathKind.$infoAddress = '';
    return KeyPathKind;
}());
_mixin(KeyPathKind, _DefaultEnumImplementation, false);
var KeyPathComponentKind = /** @class */ (function () {
    function KeyPathComponentKind() {
    }
    Object.defineProperty(KeyPathComponentKind, "external", {
        get: function () { return Object.assign(new KeyPathComponentKind(), __assign({ rawValue: "external" }, Array.from(arguments).slice(1))); },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(KeyPathComponentKind, "struct", {
        get: function () { return Object.assign(new KeyPathComponentKind(), __assign({ rawValue: "struct" }, Array.from(arguments).slice(1))); },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(KeyPathComponentKind, "_class", {
        get: function () { return Object.assign(new KeyPathComponentKind(), __assign({ rawValue: "_class" }, Array.from(arguments).slice(1))); },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(KeyPathComponentKind, "computed", {
        get: function () { return Object.assign(new KeyPathComponentKind(), __assign({ rawValue: "computed" }, Array.from(arguments).slice(1))); },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(KeyPathComponentKind, "optionalChain", {
        get: function () { return Object.assign(new KeyPathComponentKind(), __assign({ rawValue: "optionalChain" }, Array.from(arguments).slice(1))); },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(KeyPathComponentKind, "optionalForce", {
        get: function () { return Object.assign(new KeyPathComponentKind(), __assign({ rawValue: "optionalForce" }, Array.from(arguments).slice(1))); },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(KeyPathComponentKind, "optionalWrap", {
        get: function () { return Object.assign(new KeyPathComponentKind(), __assign({ rawValue: "optionalWrap" }, Array.from(arguments).slice(1))); },
        enumerable: true,
        configurable: true
    });
    /*Swift.(file).KeyPathComponentKind.==(_:KeyPathComponentKind,_:KeyPathComponentKind)*/
    /*Swift.(file).Equatable.==infix(_:Self,_:Self)*/
    KeyPathComponentKind.infix_61_61 = function ($info, a, b) {
        return a == b;
    };
    /*Swift.(file).KeyPathComponentKind.hashValue*/
    KeyPathComponentKind.prototype.hashValue$get = function () {
        throw 'unsupported variable Swift.(file).KeyPathComponentKind.hashValue in ' + this.constructor.name;
    };
    Object.defineProperty(KeyPathComponentKind.prototype, "hashValue", {
        get: function () { return this.hashValue$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).KeyPathComponentKind.hash(into:Hasher)*/
    /*Swift.(file).Hashable.hash(into:Hasher)*/
    KeyPathComponentKind.prototype.hashInto = function ($info, hasher$inout) {
        throw 'unsupported method Swift.(file).KeyPathComponentKind.hash(into:Hasher) in ' + this.constructor.name;
    };
    KeyPathComponentKind.prototype.init$vars = function () {
    };
    KeyPathComponentKind.$infoAddress = '';
    return KeyPathComponentKind;
}());
_mixin(KeyPathComponentKind, _DefaultEnumImplementation, false);
var ComputedPropertyID = /** @class */ (function () {
    function ComputedPropertyID() {
    }
    /*Swift.(file).ComputedPropertyID.value*/
    ComputedPropertyID.prototype.value$get = function () {
        throw 'unsupported variable Swift.(file).ComputedPropertyID.value in ' + this.constructor.name;
    };
    Object.defineProperty(ComputedPropertyID.prototype, "value", {
        get: function () { return this.value$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).ComputedPropertyID.kind*/
    ComputedPropertyID.prototype.kind$get = function () {
        throw 'unsupported variable Swift.(file).ComputedPropertyID.kind in ' + this.constructor.name;
    };
    Object.defineProperty(ComputedPropertyID.prototype, "kind", {
        get: function () { return this.kind$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).ComputedPropertyID.==infix(_:ComputedPropertyID,_:ComputedPropertyID)*/
    /*Swift.(file).Equatable.==infix(_:Self,_:Self)*/
    ComputedPropertyID.infix_61_61 = function ($info, x, y) {
        return x == y;
    };
    /*Swift.(file).ComputedPropertyID.hash(into:Hasher)*/
    /*Swift.(file).Hashable.hash(into:Hasher)*/
    ComputedPropertyID.prototype.hashInto = function ($info, hasher$inout) {
        throw 'unsupported method Swift.(file).ComputedPropertyID.hash(into:Hasher) in ' + this.constructor.name;
    };
    /*Swift.(file).ComputedPropertyID.init(value:Int,kind:KeyPathComputedIDKind)*/
    /*Swift.(file).ComputedPropertyID.init(value:Int,kind:KeyPathComputedIDKind)*/
    ComputedPropertyID.prototype.initValueIntKindKeyPathComputedIDKind = function ($info, value, kind) {
        throw 'unsupported method Swift.(file).ComputedPropertyID.init(value:Int,kind:KeyPathComputedIDKind) in ' + this.constructor.name;
    };
    /*Swift.(file).ComputedPropertyID.hashValue*/
    ComputedPropertyID.prototype.hashValue$get = function () {
        throw 'unsupported variable Swift.(file).ComputedPropertyID.hashValue in ' + this.constructor.name;
    };
    Object.defineProperty(ComputedPropertyID.prototype, "hashValue", {
        get: function () { return this.hashValue$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    ComputedPropertyID.prototype.init$vars = function () {
    };
    ComputedPropertyID.$struct = true;
    ComputedPropertyID.$infoAddress = '';
    return ComputedPropertyID;
}());
if (typeof Hashable$implementation != 'undefined')
    _mixin(ComputedPropertyID, Hashable$implementation, false);
var ComputedArgumentWitnesses = /** @class */ (function () {
    function ComputedArgumentWitnesses() {
    }
    /*Swift.(file).ComputedArgumentWitnesses.destroy*/
    ComputedArgumentWitnesses.prototype.destroy$get = function () {
        throw 'unsupported variable Swift.(file).ComputedArgumentWitnesses.destroy in ' + this.constructor.name;
    };
    Object.defineProperty(ComputedArgumentWitnesses.prototype, "destroy", {
        get: function () { return this.destroy$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).ComputedArgumentWitnesses.copy*/
    ComputedArgumentWitnesses.prototype.copy$get = function () {
        throw 'unsupported variable Swift.(file).ComputedArgumentWitnesses.copy in ' + this.constructor.name;
    };
    Object.defineProperty(ComputedArgumentWitnesses.prototype, "copy", {
        get: function () { return this.copy$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).ComputedArgumentWitnesses.equals*/
    ComputedArgumentWitnesses.prototype.equals$get = function () {
        throw 'unsupported variable Swift.(file).ComputedArgumentWitnesses.equals in ' + this.constructor.name;
    };
    Object.defineProperty(ComputedArgumentWitnesses.prototype, "equals", {
        get: function () { return this.equals$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).ComputedArgumentWitnesses.hash*/
    ComputedArgumentWitnesses.prototype.hash$get = function () {
        throw 'unsupported variable Swift.(file).ComputedArgumentWitnesses.hash in ' + this.constructor.name;
    };
    Object.defineProperty(ComputedArgumentWitnesses.prototype, "hash", {
        get: function () { return this.hash$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).ComputedArgumentWitnesses.init(destroy:ComputedArgumentWitnesses.Destroy?,copy:ComputedArgumentWitnesses.Copy,equals:ComputedArgumentWitnesses.Equals,hash:ComputedArgumentWitnesses.Hash)*/
    /*Swift.(file).ComputedArgumentWitnesses.init(destroy:ComputedArgumentWitnesses.Destroy?,copy:ComputedArgumentWitnesses.Copy,equals:ComputedArgumentWitnesses.Equals,hash:ComputedArgumentWitnesses.Hash)*/
    ComputedArgumentWitnesses.prototype.initDestroyOptionalCopyComputedArgumentWitnessesCopyEqualsComputedArgumentWitnessesEqualsHashComputedArgumentWitnessesHash = function ($info, destroy, copy, equals, hash) {
        throw 'unsupported method Swift.(file).ComputedArgumentWitnesses.init(destroy:ComputedArgumentWitnesses.Destroy?,copy:ComputedArgumentWitnesses.Copy,equals:ComputedArgumentWitnesses.Equals,hash:ComputedArgumentWitnesses.Hash) in ' + this.constructor.name;
    };
    ComputedArgumentWitnesses.prototype.init$vars = function () {
    };
    ComputedArgumentWitnesses.$struct = true;
    ComputedArgumentWitnesses.$infoAddress = '';
    return ComputedArgumentWitnesses;
}());
var KeyPathComponent = /** @class */ (function () {
    function KeyPathComponent() {
    }
    KeyPathComponent.struct = function () { return Object.assign(new KeyPathComponent(), __assign({ rawValue: "struct" }, Array.from(arguments).slice(1))); };
    KeyPathComponent._class = function () { return Object.assign(new KeyPathComponent(), __assign({ rawValue: "_class" }, Array.from(arguments).slice(1))); };
    KeyPathComponent.get = function () { return Object.assign(new KeyPathComponent(), __assign({ rawValue: "get" }, Array.from(arguments).slice(1))); };
    KeyPathComponent.mutatingGetSet = function () { return Object.assign(new KeyPathComponent(), __assign({ rawValue: "mutatingGetSet" }, Array.from(arguments).slice(1))); };
    KeyPathComponent.nonmutatingGetSet = function () { return Object.assign(new KeyPathComponent(), __assign({ rawValue: "nonmutatingGetSet" }, Array.from(arguments).slice(1))); };
    Object.defineProperty(KeyPathComponent, "optionalChain", {
        get: function () { return Object.assign(new KeyPathComponent(), __assign({ rawValue: "optionalChain" }, Array.from(arguments).slice(1))); },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(KeyPathComponent, "optionalForce", {
        get: function () { return Object.assign(new KeyPathComponent(), __assign({ rawValue: "optionalForce" }, Array.from(arguments).slice(1))); },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(KeyPathComponent, "optionalWrap", {
        get: function () { return Object.assign(new KeyPathComponent(), __assign({ rawValue: "optionalWrap" }, Array.from(arguments).slice(1))); },
        enumerable: true,
        configurable: true
    });
    /*Swift.(file).KeyPathComponent.==infix(_:KeyPathComponent,_:KeyPathComponent)*/
    /*Swift.(file).Equatable.==infix(_:Self,_:Self)*/
    KeyPathComponent.infix_61_61 = function ($info, a, b) {
        return a == b;
    };
    /*Swift.(file).KeyPathComponent.hash(into:Hasher)*/
    /*Swift.(file).Hashable.hash(into:Hasher)*/
    KeyPathComponent.prototype.hashInto = function ($info, hasher$inout) {
        throw 'unsupported method Swift.(file).KeyPathComponent.hash(into:Hasher) in ' + this.constructor.name;
    };
    /*Swift.(file).KeyPathComponent.hashValue*/
    KeyPathComponent.prototype.hashValue$get = function () {
        throw 'unsupported variable Swift.(file).KeyPathComponent.hashValue in ' + this.constructor.name;
    };
    Object.defineProperty(KeyPathComponent.prototype, "hashValue", {
        get: function () { return this.hashValue$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    KeyPathComponent.prototype.init$vars = function () {
    };
    var _e;
    KeyPathComponent.$infoAddress = '';
    KeyPathComponent.ArgumentRef = (_e = /** @class */ (function () {
            function class_5() {
            }
            /*Swift.(file).KeyPathComponent.ArgumentRef.init(data:UnsafeRawBufferPointer,witnesses:UnsafePointer<ComputedArgumentWitnesses>,witnessSizeAdjustment:Int)*/
            /*Swift.(file).KeyPathComponent.ArgumentRef.init(data:UnsafeRawBufferPointer,witnesses:UnsafePointer<ComputedArgumentWitnesses>,witnessSizeAdjustment:Int)*/
            class_5.prototype.initDataUnsafeRawBufferPointerWitnessesUnsafePointerWitnessSizeAdjustmentInt = function ($info, data, witnesses, witnessSizeAdjustment) {
                throw 'unsupported method Swift.(file).KeyPathComponent.ArgumentRef.init(data:UnsafeRawBufferPointer,witnesses:UnsafePointer<ComputedArgumentWitnesses>,witnessSizeAdjustment:Int) in ' + this.constructor.name;
            };
            /*Swift.(file).KeyPathComponent.ArgumentRef.data*/
            class_5.prototype.data$get = function () {
                throw 'unsupported variable Swift.(file).KeyPathComponent.ArgumentRef.data in ' + this.constructor.name;
            };
            Object.defineProperty(class_5.prototype, "data", {
                get: function () { return this.data$get(); },
                enumerable: true,
                configurable: true
            });
            ;
            /*Swift.(file).KeyPathComponent.ArgumentRef.witnesses*/
            class_5.prototype.witnesses$get = function () {
                throw 'unsupported variable Swift.(file).KeyPathComponent.ArgumentRef.witnesses in ' + this.constructor.name;
            };
            Object.defineProperty(class_5.prototype, "witnesses", {
                get: function () { return this.witnesses$get(); },
                enumerable: true,
                configurable: true
            });
            ;
            /*Swift.(file).KeyPathComponent.ArgumentRef.witnessSizeAdjustment*/
            class_5.prototype.witnessSizeAdjustment$get = function () {
                throw 'unsupported variable Swift.(file).KeyPathComponent.ArgumentRef.witnessSizeAdjustment in ' + this.constructor.name;
            };
            Object.defineProperty(class_5.prototype, "witnessSizeAdjustment", {
                get: function () { return this.witnessSizeAdjustment$get(); },
                enumerable: true,
                configurable: true
            });
            ;
            class_5.prototype.init$vars = function () {
            };
            return class_5;
        }()),
        _e.$struct = true,
        _e.$infoAddress = '',
        _e);
    return KeyPathComponent;
}());
if (typeof Hashable$implementation != 'undefined')
    _mixin(KeyPathComponent, Hashable$implementation, false);
_mixin(KeyPathComponent, _DefaultEnumImplementation, false);
var ClassHolder = /** @class */ (function () {
    function ClassHolder() {
    }
    /*Swift.(file).ClassHolder.previous*/
    ClassHolder.prototype.previous$get = function () {
        throw 'unsupported variable Swift.(file).ClassHolder.previous in ' + this.constructor.name;
    };
    Object.defineProperty(ClassHolder.prototype, "previous", {
        get: function () { return this.previous$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).ClassHolder.instance*/
    ClassHolder.prototype.instance$get = function () {
        throw 'unsupported variable Swift.(file).ClassHolder.instance in ' + this.constructor.name;
    };
    Object.defineProperty(ClassHolder.prototype, "instance", {
        get: function () { return this.instance$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).ClassHolder.init(previous:AnyObject?,instance:AnyObject)*/
    /*Swift.(file).ClassHolder.init(previous:AnyObject?,instance:AnyObject)*/
    ClassHolder.prototype.initPreviousOptionalInstanceAnyObject = function ($info, previous, instance) {
        throw 'unsupported method Swift.(file).ClassHolder.init(previous:AnyObject?,instance:AnyObject) in ' + this.constructor.name;
    };
    ClassHolder.prototype.init$vars = function () {
    };
    ClassHolder.$infoAddress = '';
    return ClassHolder;
}());
var MutatingWritebackBuffer = /** @class */ (function () {
    function MutatingWritebackBuffer() {
    }
    /*Swift.(file).MutatingWritebackBuffer.previous*/
    MutatingWritebackBuffer.prototype.previous$get = function () {
        throw 'unsupported variable Swift.(file).MutatingWritebackBuffer.previous in ' + this.constructor.name;
    };
    Object.defineProperty(MutatingWritebackBuffer.prototype, "previous", {
        get: function () { return this.previous$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).MutatingWritebackBuffer.base*/
    MutatingWritebackBuffer.prototype.base$get = function () {
        throw 'unsupported variable Swift.(file).MutatingWritebackBuffer.base in ' + this.constructor.name;
    };
    Object.defineProperty(MutatingWritebackBuffer.prototype, "base", {
        get: function () { return this.base$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).MutatingWritebackBuffer.set*/
    MutatingWritebackBuffer.prototype.set$get = function () {
        throw 'unsupported variable Swift.(file).MutatingWritebackBuffer.set in ' + this.constructor.name;
    };
    Object.defineProperty(MutatingWritebackBuffer.prototype, "set", {
        get: function () { return this.set$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).MutatingWritebackBuffer.argument*/
    MutatingWritebackBuffer.prototype.argument$get = function () {
        throw 'unsupported variable Swift.(file).MutatingWritebackBuffer.argument in ' + this.constructor.name;
    };
    Object.defineProperty(MutatingWritebackBuffer.prototype, "argument", {
        get: function () { return this.argument$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).MutatingWritebackBuffer.argumentSize*/
    MutatingWritebackBuffer.prototype.argumentSize$get = function () {
        throw 'unsupported variable Swift.(file).MutatingWritebackBuffer.argumentSize in ' + this.constructor.name;
    };
    Object.defineProperty(MutatingWritebackBuffer.prototype, "argumentSize", {
        get: function () { return this.argumentSize$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).MutatingWritebackBuffer.value*/
    MutatingWritebackBuffer.prototype.value$get = function () {
        throw 'unsupported variable Swift.(file).MutatingWritebackBuffer.value in ' + this.constructor.name;
    };
    Object.defineProperty(MutatingWritebackBuffer.prototype, "value", {
        get: function () { return this.value$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).MutatingWritebackBuffer.init(previous:AnyObject?,base:UnsafeMutablePointer<CurValue>,set:@convention(thin) (NewValue, inout CurValue, UnsafeRawPointer, Int) -> (),argument:UnsafeRawPointer,argumentSize:Int,value:NewValue)*/
    /*Swift.(file).MutatingWritebackBuffer.init(previous:AnyObject?,base:UnsafeMutablePointer<CurValue>,set:@convention(thin) (NewValue, inout CurValue, UnsafeRawPointer, Int) -> (),argument:UnsafeRawPointer,argumentSize:Int,value:NewValue)*/
    MutatingWritebackBuffer.prototype.initPreviousOptionalBaseUnsafeMutablePointerSetfunction_typeArgumentUnsafeRawPointerArgumentSizeIntValue = function ($info, previous, base, set, argument, argumentSize, value) {
        throw 'unsupported method Swift.(file).MutatingWritebackBuffer.init(previous:AnyObject?,base:UnsafeMutablePointer<CurValue>,set:@convention(thin) (NewValue, inout CurValue, UnsafeRawPointer, Int) -> (),argument:UnsafeRawPointer,argumentSize:Int,value:NewValue) in ' + this.constructor.name;
    };
    MutatingWritebackBuffer.prototype.init$vars = function () {
    };
    MutatingWritebackBuffer.$infoAddress = '';
    return MutatingWritebackBuffer;
}());
var NonmutatingWritebackBuffer = /** @class */ (function () {
    function NonmutatingWritebackBuffer() {
    }
    /*Swift.(file).NonmutatingWritebackBuffer.previous*/
    NonmutatingWritebackBuffer.prototype.previous$get = function () {
        throw 'unsupported variable Swift.(file).NonmutatingWritebackBuffer.previous in ' + this.constructor.name;
    };
    Object.defineProperty(NonmutatingWritebackBuffer.prototype, "previous", {
        get: function () { return this.previous$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).NonmutatingWritebackBuffer.base*/
    NonmutatingWritebackBuffer.prototype.base$get = function () {
        throw 'unsupported variable Swift.(file).NonmutatingWritebackBuffer.base in ' + this.constructor.name;
    };
    Object.defineProperty(NonmutatingWritebackBuffer.prototype, "base", {
        get: function () { return this.base$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).NonmutatingWritebackBuffer.set*/
    NonmutatingWritebackBuffer.prototype.set$get = function () {
        throw 'unsupported variable Swift.(file).NonmutatingWritebackBuffer.set in ' + this.constructor.name;
    };
    Object.defineProperty(NonmutatingWritebackBuffer.prototype, "set", {
        get: function () { return this.set$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).NonmutatingWritebackBuffer.argument*/
    NonmutatingWritebackBuffer.prototype.argument$get = function () {
        throw 'unsupported variable Swift.(file).NonmutatingWritebackBuffer.argument in ' + this.constructor.name;
    };
    Object.defineProperty(NonmutatingWritebackBuffer.prototype, "argument", {
        get: function () { return this.argument$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).NonmutatingWritebackBuffer.argumentSize*/
    NonmutatingWritebackBuffer.prototype.argumentSize$get = function () {
        throw 'unsupported variable Swift.(file).NonmutatingWritebackBuffer.argumentSize in ' + this.constructor.name;
    };
    Object.defineProperty(NonmutatingWritebackBuffer.prototype, "argumentSize", {
        get: function () { return this.argumentSize$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).NonmutatingWritebackBuffer.value*/
    NonmutatingWritebackBuffer.prototype.value$get = function () {
        throw 'unsupported variable Swift.(file).NonmutatingWritebackBuffer.value in ' + this.constructor.name;
    };
    Object.defineProperty(NonmutatingWritebackBuffer.prototype, "value", {
        get: function () { return this.value$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).NonmutatingWritebackBuffer.init(previous:AnyObject?,base:CurValue,set:@convention(thin) (NewValue, CurValue, UnsafeRawPointer, Int) -> (),argument:UnsafeRawPointer,argumentSize:Int,value:NewValue)*/
    /*Swift.(file).NonmutatingWritebackBuffer.init(previous:AnyObject?,base:CurValue,set:@convention(thin) (NewValue, CurValue, UnsafeRawPointer, Int) -> (),argument:UnsafeRawPointer,argumentSize:Int,value:NewValue)*/
    NonmutatingWritebackBuffer.prototype.initPreviousOptionalBaseSetfunction_typeArgumentUnsafeRawPointerArgumentSizeIntValue = function ($info, previous, base, set, argument, argumentSize, value) {
        throw 'unsupported method Swift.(file).NonmutatingWritebackBuffer.init(previous:AnyObject?,base:CurValue,set:@convention(thin) (NewValue, CurValue, UnsafeRawPointer, Int) -> (),argument:UnsafeRawPointer,argumentSize:Int,value:NewValue) in ' + this.constructor.name;
    };
    NonmutatingWritebackBuffer.prototype.init$vars = function () {
    };
    NonmutatingWritebackBuffer.$infoAddress = '';
    return NonmutatingWritebackBuffer;
}());
var KeyPathComputedIDKind = /** @class */ (function () {
    function KeyPathComputedIDKind() {
    }
    Object.defineProperty(KeyPathComputedIDKind, "pointer", {
        get: function () { return Object.assign(new KeyPathComputedIDKind(), __assign({ rawValue: "pointer" }, Array.from(arguments).slice(1))); },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(KeyPathComputedIDKind, "storedPropertyIndex", {
        get: function () { return Object.assign(new KeyPathComputedIDKind(), __assign({ rawValue: "storedPropertyIndex" }, Array.from(arguments).slice(1))); },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(KeyPathComputedIDKind, "vtableOffset", {
        get: function () { return Object.assign(new KeyPathComputedIDKind(), __assign({ rawValue: "vtableOffset" }, Array.from(arguments).slice(1))); },
        enumerable: true,
        configurable: true
    });
    /*Swift.(file).KeyPathComputedIDKind.==(_:KeyPathComputedIDKind,_:KeyPathComputedIDKind)*/
    /*Swift.(file).Equatable.==infix(_:Self,_:Self)*/
    KeyPathComputedIDKind.infix_61_61 = function ($info, a, b) {
        return a == b;
    };
    /*Swift.(file).KeyPathComputedIDKind.hashValue*/
    KeyPathComputedIDKind.prototype.hashValue$get = function () {
        throw 'unsupported variable Swift.(file).KeyPathComputedIDKind.hashValue in ' + this.constructor.name;
    };
    Object.defineProperty(KeyPathComputedIDKind.prototype, "hashValue", {
        get: function () { return this.hashValue$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).KeyPathComputedIDKind.hash(into:Hasher)*/
    /*Swift.(file).Hashable.hash(into:Hasher)*/
    KeyPathComputedIDKind.prototype.hashInto = function ($info, hasher$inout) {
        throw 'unsupported method Swift.(file).KeyPathComputedIDKind.hash(into:Hasher) in ' + this.constructor.name;
    };
    KeyPathComputedIDKind.prototype.init$vars = function () {
    };
    KeyPathComputedIDKind.$infoAddress = '';
    return KeyPathComputedIDKind;
}());
_mixin(KeyPathComputedIDKind, _DefaultEnumImplementation, false);
var RawKeyPathComponent = /** @class */ (function () {
    function RawKeyPathComponent() {
    }
    /*Swift.(file).RawKeyPathComponent.init(header:RawKeyPathComponent.Header,body:UnsafeRawBufferPointer)*/
    /*Swift.(file).RawKeyPathComponent.init(header:RawKeyPathComponent.Header,body:UnsafeRawBufferPointer)*/
    RawKeyPathComponent.prototype.initHeaderRawKeyPathComponentHeaderBodyUnsafeRawBufferPointer = function ($info, header, body) {
        throw 'unsupported method Swift.(file).RawKeyPathComponent.init(header:RawKeyPathComponent.Header,body:UnsafeRawBufferPointer) in ' + this.constructor.name;
    };
    /*Swift.(file).RawKeyPathComponent.header*/
    RawKeyPathComponent.prototype.header$get = function () {
        throw 'unsupported variable Swift.(file).RawKeyPathComponent.header in ' + this.constructor.name;
    };
    Object.defineProperty(RawKeyPathComponent.prototype, "header", {
        get: function () { return this.header$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).RawKeyPathComponent.body*/
    RawKeyPathComponent.prototype.body$get = function () {
        throw 'unsupported variable Swift.(file).RawKeyPathComponent.body in ' + this.constructor.name;
    };
    Object.defineProperty(RawKeyPathComponent.prototype, "body", {
        get: function () { return this.body$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).RawKeyPathComponent.bodySize*/
    RawKeyPathComponent.prototype.bodySize$get = function () {
        throw 'unsupported variable Swift.(file).RawKeyPathComponent.bodySize in ' + this.constructor.name;
    };
    Object.defineProperty(RawKeyPathComponent.prototype, "bodySize", {
        get: function () { return this.bodySize$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).RawKeyPathComponent.value*/
    RawKeyPathComponent.prototype.value$get = function () {
        throw 'unsupported variable Swift.(file).RawKeyPathComponent.value in ' + this.constructor.name;
    };
    Object.defineProperty(RawKeyPathComponent.prototype, "value", {
        get: function () { return this.value$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).RawKeyPathComponent.destroy()*/
    /*Swift.(file).RawKeyPathComponent.destroy()*/
    RawKeyPathComponent.prototype.destroy = function ($info) {
        throw 'unsupported method Swift.(file).RawKeyPathComponent.destroy() in ' + this.constructor.name;
    };
    /*Swift.(file).RawKeyPathComponent.clone(into:UnsafeMutableRawBufferPointer,endOfReferencePrefix:Bool)*/
    /*Swift.(file).RawKeyPathComponent.clone(into:UnsafeMutableRawBufferPointer,endOfReferencePrefix:Bool)*/
    RawKeyPathComponent.prototype.cloneIntoEndOfReferencePrefix = function ($info, buffer$inout, endOfReferencePrefix) {
        throw 'unsupported method Swift.(file).RawKeyPathComponent.clone(into:UnsafeMutableRawBufferPointer,endOfReferencePrefix:Bool) in ' + this.constructor.name;
    };
    RawKeyPathComponent.prototype.init$vars = function () {
    };
    var _f, _g;
    RawKeyPathComponent.$struct = true;
    RawKeyPathComponent.$infoAddress = '';
    RawKeyPathComponent.Header = (_f = /** @class */ (function () {
            function class_6() {
            }
            /*Swift.(file).RawKeyPathComponent.Header.payloadMask*/
            class_6.payloadMask$get = function () {
                throw 'unsupported variable Swift.(file).RawKeyPathComponent.Header.payloadMask in ' + this.constructor.name;
            };
            Object.defineProperty(class_6, "payloadMask", {
                get: function () { return this.payloadMask$get(); },
                enumerable: true,
                configurable: true
            });
            ;
            /*Swift.(file).RawKeyPathComponent.Header.discriminatorMask*/
            class_6.discriminatorMask$get = function () {
                throw 'unsupported variable Swift.(file).RawKeyPathComponent.Header.discriminatorMask in ' + this.constructor.name;
            };
            Object.defineProperty(class_6, "discriminatorMask", {
                get: function () { return this.discriminatorMask$get(); },
                enumerable: true,
                configurable: true
            });
            ;
            /*Swift.(file).RawKeyPathComponent.Header.discriminatorShift*/
            class_6.discriminatorShift$get = function () {
                throw 'unsupported variable Swift.(file).RawKeyPathComponent.Header.discriminatorShift in ' + this.constructor.name;
            };
            Object.defineProperty(class_6, "discriminatorShift", {
                get: function () { return this.discriminatorShift$get(); },
                enumerable: true,
                configurable: true
            });
            ;
            /*Swift.(file).RawKeyPathComponent.Header.externalTag*/
            class_6.externalTag$get = function () {
                throw 'unsupported variable Swift.(file).RawKeyPathComponent.Header.externalTag in ' + this.constructor.name;
            };
            Object.defineProperty(class_6, "externalTag", {
                get: function () { return this.externalTag$get(); },
                enumerable: true,
                configurable: true
            });
            ;
            /*Swift.(file).RawKeyPathComponent.Header.structTag*/
            class_6.structTag$get = function () {
                throw 'unsupported variable Swift.(file).RawKeyPathComponent.Header.structTag in ' + this.constructor.name;
            };
            Object.defineProperty(class_6, "structTag", {
                get: function () { return this.structTag$get(); },
                enumerable: true,
                configurable: true
            });
            ;
            /*Swift.(file).RawKeyPathComponent.Header.computedTag*/
            class_6.computedTag$get = function () {
                throw 'unsupported variable Swift.(file).RawKeyPathComponent.Header.computedTag in ' + this.constructor.name;
            };
            Object.defineProperty(class_6, "computedTag", {
                get: function () { return this.computedTag$get(); },
                enumerable: true,
                configurable: true
            });
            ;
            /*Swift.(file).RawKeyPathComponent.Header.classTag*/
            class_6.classTag$get = function () {
                throw 'unsupported variable Swift.(file).RawKeyPathComponent.Header.classTag in ' + this.constructor.name;
            };
            Object.defineProperty(class_6, "classTag", {
                get: function () { return this.classTag$get(); },
                enumerable: true,
                configurable: true
            });
            ;
            /*Swift.(file).RawKeyPathComponent.Header.optionalTag*/
            class_6.optionalTag$get = function () {
                throw 'unsupported variable Swift.(file).RawKeyPathComponent.Header.optionalTag in ' + this.constructor.name;
            };
            Object.defineProperty(class_6, "optionalTag", {
                get: function () { return this.optionalTag$get(); },
                enumerable: true,
                configurable: true
            });
            ;
            /*Swift.(file).RawKeyPathComponent.Header.optionalChainPayload*/
            class_6.optionalChainPayload$get = function () {
                throw 'unsupported variable Swift.(file).RawKeyPathComponent.Header.optionalChainPayload in ' + this.constructor.name;
            };
            Object.defineProperty(class_6, "optionalChainPayload", {
                get: function () { return this.optionalChainPayload$get(); },
                enumerable: true,
                configurable: true
            });
            ;
            /*Swift.(file).RawKeyPathComponent.Header.optionalWrapPayload*/
            class_6.optionalWrapPayload$get = function () {
                throw 'unsupported variable Swift.(file).RawKeyPathComponent.Header.optionalWrapPayload in ' + this.constructor.name;
            };
            Object.defineProperty(class_6, "optionalWrapPayload", {
                get: function () { return this.optionalWrapPayload$get(); },
                enumerable: true,
                configurable: true
            });
            ;
            /*Swift.(file).RawKeyPathComponent.Header.optionalForcePayload*/
            class_6.optionalForcePayload$get = function () {
                throw 'unsupported variable Swift.(file).RawKeyPathComponent.Header.optionalForcePayload in ' + this.constructor.name;
            };
            Object.defineProperty(class_6, "optionalForcePayload", {
                get: function () { return this.optionalForcePayload$get(); },
                enumerable: true,
                configurable: true
            });
            ;
            /*Swift.(file).RawKeyPathComponent.Header.endOfReferencePrefixFlag*/
            class_6.endOfReferencePrefixFlag$get = function () {
                throw 'unsupported variable Swift.(file).RawKeyPathComponent.Header.endOfReferencePrefixFlag in ' + this.constructor.name;
            };
            Object.defineProperty(class_6, "endOfReferencePrefixFlag", {
                get: function () { return this.endOfReferencePrefixFlag$get(); },
                enumerable: true,
                configurable: true
            });
            ;
            /*Swift.(file).RawKeyPathComponent.Header.storedMutableFlag*/
            class_6.storedMutableFlag$get = function () {
                throw 'unsupported variable Swift.(file).RawKeyPathComponent.Header.storedMutableFlag in ' + this.constructor.name;
            };
            Object.defineProperty(class_6, "storedMutableFlag", {
                get: function () { return this.storedMutableFlag$get(); },
                enumerable: true,
                configurable: true
            });
            ;
            /*Swift.(file).RawKeyPathComponent.Header.storedOffsetPayloadMask*/
            class_6.storedOffsetPayloadMask$get = function () {
                throw 'unsupported variable Swift.(file).RawKeyPathComponent.Header.storedOffsetPayloadMask in ' + this.constructor.name;
            };
            Object.defineProperty(class_6, "storedOffsetPayloadMask", {
                get: function () { return this.storedOffsetPayloadMask$get(); },
                enumerable: true,
                configurable: true
            });
            ;
            /*Swift.(file).RawKeyPathComponent.Header.outOfLineOffsetPayload*/
            class_6.outOfLineOffsetPayload$get = function () {
                throw 'unsupported variable Swift.(file).RawKeyPathComponent.Header.outOfLineOffsetPayload in ' + this.constructor.name;
            };
            Object.defineProperty(class_6, "outOfLineOffsetPayload", {
                get: function () { return this.outOfLineOffsetPayload$get(); },
                enumerable: true,
                configurable: true
            });
            ;
            /*Swift.(file).RawKeyPathComponent.Header.unresolvedFieldOffsetPayload*/
            class_6.unresolvedFieldOffsetPayload$get = function () {
                throw 'unsupported variable Swift.(file).RawKeyPathComponent.Header.unresolvedFieldOffsetPayload in ' + this.constructor.name;
            };
            Object.defineProperty(class_6, "unresolvedFieldOffsetPayload", {
                get: function () { return this.unresolvedFieldOffsetPayload$get(); },
                enumerable: true,
                configurable: true
            });
            ;
            /*Swift.(file).RawKeyPathComponent.Header.unresolvedIndirectOffsetPayload*/
            class_6.unresolvedIndirectOffsetPayload$get = function () {
                throw 'unsupported variable Swift.(file).RawKeyPathComponent.Header.unresolvedIndirectOffsetPayload in ' + this.constructor.name;
            };
            Object.defineProperty(class_6, "unresolvedIndirectOffsetPayload", {
                get: function () { return this.unresolvedIndirectOffsetPayload$get(); },
                enumerable: true,
                configurable: true
            });
            ;
            /*Swift.(file).RawKeyPathComponent.Header.maximumOffsetPayload*/
            class_6.maximumOffsetPayload$get = function () {
                throw 'unsupported variable Swift.(file).RawKeyPathComponent.Header.maximumOffsetPayload in ' + this.constructor.name;
            };
            Object.defineProperty(class_6, "maximumOffsetPayload", {
                get: function () { return this.maximumOffsetPayload$get(); },
                enumerable: true,
                configurable: true
            });
            ;
            /*Swift.(file).RawKeyPathComponent.Header.isStoredMutable*/
            class_6.prototype.isStoredMutable$get = function () {
                throw 'unsupported variable Swift.(file).RawKeyPathComponent.Header.isStoredMutable in ' + this.constructor.name;
            };
            Object.defineProperty(class_6.prototype, "isStoredMutable", {
                get: function () { return this.isStoredMutable$get(); },
                enumerable: true,
                configurable: true
            });
            ;
            /*Swift.(file).RawKeyPathComponent.Header.computedMutatingFlag*/
            class_6.computedMutatingFlag$get = function () {
                throw 'unsupported variable Swift.(file).RawKeyPathComponent.Header.computedMutatingFlag in ' + this.constructor.name;
            };
            Object.defineProperty(class_6, "computedMutatingFlag", {
                get: function () { return this.computedMutatingFlag$get(); },
                enumerable: true,
                configurable: true
            });
            ;
            /*Swift.(file).RawKeyPathComponent.Header.isComputedMutating*/
            class_6.prototype.isComputedMutating$get = function () {
                throw 'unsupported variable Swift.(file).RawKeyPathComponent.Header.isComputedMutating in ' + this.constructor.name;
            };
            Object.defineProperty(class_6.prototype, "isComputedMutating", {
                get: function () { return this.isComputedMutating$get(); },
                enumerable: true,
                configurable: true
            });
            ;
            /*Swift.(file).RawKeyPathComponent.Header.computedSettableFlag*/
            class_6.computedSettableFlag$get = function () {
                throw 'unsupported variable Swift.(file).RawKeyPathComponent.Header.computedSettableFlag in ' + this.constructor.name;
            };
            Object.defineProperty(class_6, "computedSettableFlag", {
                get: function () { return this.computedSettableFlag$get(); },
                enumerable: true,
                configurable: true
            });
            ;
            /*Swift.(file).RawKeyPathComponent.Header.isComputedSettable*/
            class_6.prototype.isComputedSettable$get = function () {
                throw 'unsupported variable Swift.(file).RawKeyPathComponent.Header.isComputedSettable in ' + this.constructor.name;
            };
            Object.defineProperty(class_6.prototype, "isComputedSettable", {
                get: function () { return this.isComputedSettable$get(); },
                enumerable: true,
                configurable: true
            });
            ;
            /*Swift.(file).RawKeyPathComponent.Header.computedIDByStoredPropertyFlag*/
            class_6.computedIDByStoredPropertyFlag$get = function () {
                throw 'unsupported variable Swift.(file).RawKeyPathComponent.Header.computedIDByStoredPropertyFlag in ' + this.constructor.name;
            };
            Object.defineProperty(class_6, "computedIDByStoredPropertyFlag", {
                get: function () { return this.computedIDByStoredPropertyFlag$get(); },
                enumerable: true,
                configurable: true
            });
            ;
            /*Swift.(file).RawKeyPathComponent.Header.computedIDByVTableOffsetFlag*/
            class_6.computedIDByVTableOffsetFlag$get = function () {
                throw 'unsupported variable Swift.(file).RawKeyPathComponent.Header.computedIDByVTableOffsetFlag in ' + this.constructor.name;
            };
            Object.defineProperty(class_6, "computedIDByVTableOffsetFlag", {
                get: function () { return this.computedIDByVTableOffsetFlag$get(); },
                enumerable: true,
                configurable: true
            });
            ;
            /*Swift.(file).RawKeyPathComponent.Header.computedIDKind*/
            class_6.prototype.computedIDKind$get = function () {
                throw 'unsupported variable Swift.(file).RawKeyPathComponent.Header.computedIDKind in ' + this.constructor.name;
            };
            Object.defineProperty(class_6.prototype, "computedIDKind", {
                get: function () { return this.computedIDKind$get(); },
                enumerable: true,
                configurable: true
            });
            ;
            /*Swift.(file).RawKeyPathComponent.Header.computedHasArgumentsFlag*/
            class_6.computedHasArgumentsFlag$get = function () {
                throw 'unsupported variable Swift.(file).RawKeyPathComponent.Header.computedHasArgumentsFlag in ' + this.constructor.name;
            };
            Object.defineProperty(class_6, "computedHasArgumentsFlag", {
                get: function () { return this.computedHasArgumentsFlag$get(); },
                enumerable: true,
                configurable: true
            });
            ;
            /*Swift.(file).RawKeyPathComponent.Header.hasComputedArguments*/
            class_6.prototype.hasComputedArguments$get = function () {
                throw 'unsupported variable Swift.(file).RawKeyPathComponent.Header.hasComputedArguments in ' + this.constructor.name;
            };
            Object.defineProperty(class_6.prototype, "hasComputedArguments", {
                get: function () { return this.hasComputedArguments$get(); },
                enumerable: true,
                configurable: true
            });
            ;
            /*Swift.(file).RawKeyPathComponent.Header.computedInstantiatedFromExternalWithArgumentsFlag*/
            class_6.computedInstantiatedFromExternalWithArgumentsFlag$get = function () {
                throw 'unsupported variable Swift.(file).RawKeyPathComponent.Header.computedInstantiatedFromExternalWithArgumentsFlag in ' + this.constructor.name;
            };
            Object.defineProperty(class_6, "computedInstantiatedFromExternalWithArgumentsFlag", {
                get: function () { return this.computedInstantiatedFromExternalWithArgumentsFlag$get(); },
                enumerable: true,
                configurable: true
            });
            ;
            /*Swift.(file).RawKeyPathComponent.Header.isComputedInstantiatedFromExternalWithArguments*/
            class_6.prototype.isComputedInstantiatedFromExternalWithArguments$get = function () {
                throw 'unsupported variable Swift.(file).RawKeyPathComponent.Header.isComputedInstantiatedFromExternalWithArguments in ' + this.constructor.name;
            };
            Object.defineProperty(class_6.prototype, "isComputedInstantiatedFromExternalWithArguments", {
                get: function () { return this.isComputedInstantiatedFromExternalWithArguments$get(); },
                enumerable: true,
                configurable: true
            });
            ;
            /*Swift.(file).RawKeyPathComponent.Header.externalWithArgumentsExtraSize*/
            class_6.externalWithArgumentsExtraSize$get = function () {
                throw 'unsupported variable Swift.(file).RawKeyPathComponent.Header.externalWithArgumentsExtraSize in ' + this.constructor.name;
            };
            Object.defineProperty(class_6, "externalWithArgumentsExtraSize", {
                get: function () { return this.externalWithArgumentsExtraSize$get(); },
                enumerable: true,
                configurable: true
            });
            ;
            /*Swift.(file).RawKeyPathComponent.Header.computedIDResolutionMask*/
            class_6.computedIDResolutionMask$get = function () {
                throw 'unsupported variable Swift.(file).RawKeyPathComponent.Header.computedIDResolutionMask in ' + this.constructor.name;
            };
            Object.defineProperty(class_6, "computedIDResolutionMask", {
                get: function () { return this.computedIDResolutionMask$get(); },
                enumerable: true,
                configurable: true
            });
            ;
            /*Swift.(file).RawKeyPathComponent.Header.computedIDResolved*/
            class_6.computedIDResolved$get = function () {
                throw 'unsupported variable Swift.(file).RawKeyPathComponent.Header.computedIDResolved in ' + this.constructor.name;
            };
            Object.defineProperty(class_6, "computedIDResolved", {
                get: function () { return this.computedIDResolved$get(); },
                enumerable: true,
                configurable: true
            });
            ;
            /*Swift.(file).RawKeyPathComponent.Header.computedIDUnresolvedIndirectPointer*/
            class_6.computedIDUnresolvedIndirectPointer$get = function () {
                throw 'unsupported variable Swift.(file).RawKeyPathComponent.Header.computedIDUnresolvedIndirectPointer in ' + this.constructor.name;
            };
            Object.defineProperty(class_6, "computedIDUnresolvedIndirectPointer", {
                get: function () { return this.computedIDUnresolvedIndirectPointer$get(); },
                enumerable: true,
                configurable: true
            });
            ;
            /*Swift.(file).RawKeyPathComponent.Header.isComputedIDResolved*/
            class_6.prototype.isComputedIDResolved$get = function () {
                throw 'unsupported variable Swift.(file).RawKeyPathComponent.Header.isComputedIDResolved in ' + this.constructor.name;
            };
            Object.defineProperty(class_6.prototype, "isComputedIDResolved", {
                get: function () { return this.isComputedIDResolved$get(); },
                enumerable: true,
                configurable: true
            });
            ;
            /*Swift.(file).RawKeyPathComponent.Header.discriminator*/
            class_6.prototype.discriminator$get = function () {
                throw 'unsupported variable Swift.(file).RawKeyPathComponent.Header.discriminator in ' + this.constructor.name;
            };
            Object.defineProperty(class_6.prototype, "discriminator", {
                get: function () { return this.discriminator$get(); },
                enumerable: true,
                configurable: true
            });
            ;
            /*Swift.(file).RawKeyPathComponent.Header.payload*/
            class_6.prototype.payload$get = function () {
                throw 'unsupported variable Swift.(file).RawKeyPathComponent.Header.payload in ' + this.constructor.name;
            };
            Object.defineProperty(class_6.prototype, "payload", {
                get: function () { return this.payload$get(); },
                enumerable: true,
                configurable: true
            });
            ;
            /*Swift.(file).RawKeyPathComponent.Header.storedOffsetPayload*/
            class_6.prototype.storedOffsetPayload$get = function () {
                throw 'unsupported variable Swift.(file).RawKeyPathComponent.Header.storedOffsetPayload in ' + this.constructor.name;
            };
            Object.defineProperty(class_6.prototype, "storedOffsetPayload", {
                get: function () { return this.storedOffsetPayload$get(); },
                enumerable: true,
                configurable: true
            });
            ;
            /*Swift.(file).RawKeyPathComponent.Header.endOfReferencePrefix*/
            class_6.prototype.endOfReferencePrefix$get = function () {
                throw 'unsupported variable Swift.(file).RawKeyPathComponent.Header.endOfReferencePrefix in ' + this.constructor.name;
            };
            Object.defineProperty(class_6.prototype, "endOfReferencePrefix", {
                get: function () { return this.endOfReferencePrefix$get(); },
                enumerable: true,
                configurable: true
            });
            ;
            /*Swift.(file).RawKeyPathComponent.Header.kind*/
            class_6.prototype.kind$get = function () {
                throw 'unsupported variable Swift.(file).RawKeyPathComponent.Header.kind in ' + this.constructor.name;
            };
            Object.defineProperty(class_6.prototype, "kind", {
                get: function () { return this.kind$get(); },
                enumerable: true,
                configurable: true
            });
            ;
            /*Swift.(file).RawKeyPathComponent.Header.pointerAlignmentSkew*/
            class_6.pointerAlignmentSkew$get = function () {
                throw 'unsupported variable Swift.(file).RawKeyPathComponent.Header.pointerAlignmentSkew in ' + this.constructor.name;
            };
            Object.defineProperty(class_6, "pointerAlignmentSkew", {
                get: function () { return this.pointerAlignmentSkew$get(); },
                enumerable: true,
                configurable: true
            });
            ;
            /*Swift.(file).RawKeyPathComponent.Header.isTrivialPropertyDescriptor*/
            class_6.prototype.isTrivialPropertyDescriptor$get = function () {
                throw 'unsupported variable Swift.(file).RawKeyPathComponent.Header.isTrivialPropertyDescriptor in ' + this.constructor.name;
            };
            Object.defineProperty(class_6.prototype, "isTrivialPropertyDescriptor", {
                get: function () { return this.isTrivialPropertyDescriptor$get(); },
                enumerable: true,
                configurable: true
            });
            ;
            /*Swift.(file).RawKeyPathComponent.Header.patternComponentBodySize*/
            class_6.prototype.patternComponentBodySize$get = function () {
                throw 'unsupported variable Swift.(file).RawKeyPathComponent.Header.patternComponentBodySize in ' + this.constructor.name;
            };
            Object.defineProperty(class_6.prototype, "patternComponentBodySize", {
                get: function () { return this.patternComponentBodySize$get(); },
                enumerable: true,
                configurable: true
            });
            ;
            /*Swift.(file).RawKeyPathComponent.Header.propertyDescriptorBodySize*/
            class_6.prototype.propertyDescriptorBodySize$get = function () {
                throw 'unsupported variable Swift.(file).RawKeyPathComponent.Header.propertyDescriptorBodySize in ' + this.constructor.name;
            };
            Object.defineProperty(class_6.prototype, "propertyDescriptorBodySize", {
                get: function () { return this.propertyDescriptorBodySize$get(); },
                enumerable: true,
                configurable: true
            });
            ;
            /*Swift.(file).RawKeyPathComponent.Header.init(discriminator:UInt32,payload:UInt32)*/
            /*Swift.(file).RawKeyPathComponent.Header.init(discriminator:UInt32,payload:UInt32)*/
            class_6.prototype.initDiscriminatorUInt32PayloadUInt32 = function ($info, discriminator, payload) {
                throw 'unsupported method Swift.(file).RawKeyPathComponent.Header.init(discriminator:UInt32,payload:UInt32) in ' + this.constructor.name;
            };
            /*Swift.(file).RawKeyPathComponent.Header.init(optionalForce:())*/
            /*Swift.(file).RawKeyPathComponent.Header.init(optionalForce:())*/
            class_6.prototype.initOptionalForcetuple_type = function ($info, optionalForce) {
                throw 'unsupported method Swift.(file).RawKeyPathComponent.Header.init(optionalForce:()) in ' + this.constructor.name;
            };
            /*Swift.(file).RawKeyPathComponent.Header.init(optionalWrap:())*/
            /*Swift.(file).RawKeyPathComponent.Header.init(optionalWrap:())*/
            class_6.prototype.initOptionalWraptuple_type = function ($info, optionalWrap) {
                throw 'unsupported method Swift.(file).RawKeyPathComponent.Header.init(optionalWrap:()) in ' + this.constructor.name;
            };
            /*Swift.(file).RawKeyPathComponent.Header.init(optionalChain:())*/
            /*Swift.(file).RawKeyPathComponent.Header.init(optionalChain:())*/
            class_6.prototype.initOptionalChaintuple_type = function ($info, optionalChain) {
                throw 'unsupported method Swift.(file).RawKeyPathComponent.Header.init(optionalChain:()) in ' + this.constructor.name;
            };
            /*Swift.(file).RawKeyPathComponent.Header.init(stored:KeyPathStructOrClass,mutable:Bool,inlineOffset:UInt32)*/
            /*Swift.(file).RawKeyPathComponent.Header.init(stored:KeyPathStructOrClass,mutable:Bool,inlineOffset:UInt32)*/
            class_6.prototype.initStoredKeyPathStructOrClassMutableBoolInlineOffsetUInt32 = function ($info, kind, mutable, inlineOffset) {
                throw 'unsupported method Swift.(file).RawKeyPathComponent.Header.init(stored:KeyPathStructOrClass,mutable:Bool,inlineOffset:UInt32) in ' + this.constructor.name;
            };
            /*Swift.(file).RawKeyPathComponent.Header.init(storedWithOutOfLineOffset:KeyPathStructOrClass,mutable:Bool)*/
            /*Swift.(file).RawKeyPathComponent.Header.init(storedWithOutOfLineOffset:KeyPathStructOrClass,mutable:Bool)*/
            class_6.prototype.initStoredWithOutOfLineOffsetKeyPathStructOrClassMutableBool = function ($info, kind, mutable) {
                throw 'unsupported method Swift.(file).RawKeyPathComponent.Header.init(storedWithOutOfLineOffset:KeyPathStructOrClass,mutable:Bool) in ' + this.constructor.name;
            };
            /*Swift.(file).RawKeyPathComponent.Header.init(computedWithIDKind:KeyPathComputedIDKind,mutating:Bool,settable:Bool,hasArguments:Bool,instantiatedFromExternalWithArguments:Bool)*/
            /*Swift.(file).RawKeyPathComponent.Header.init(computedWithIDKind:KeyPathComputedIDKind,mutating:Bool,settable:Bool,hasArguments:Bool,instantiatedFromExternalWithArguments:Bool)*/
            class_6.prototype.initComputedWithIDKindKeyPathComputedIDKindMutatingBoolSettableBoolHasArgumentsBoolInstantiatedFromExternalWithArgumentsBool = function ($info, kind, mutating, settable, hasArguments, instantiatedFromExternalWithArguments) {
                throw 'unsupported method Swift.(file).RawKeyPathComponent.Header.init(computedWithIDKind:KeyPathComputedIDKind,mutating:Bool,settable:Bool,hasArguments:Bool,instantiatedFromExternalWithArguments:Bool) in ' + this.constructor.name;
            };
            class_6.prototype.init$vars = function () {
            };
            return class_6;
        }()),
        _f.$struct = true,
        _f.$infoAddress = '',
        _f);
    RawKeyPathComponent.ProjectionResult = (_g = /** @class */ (function () {
            function class_7() {
            }
            class_7._continue = function () { return Object.assign(new RawKeyPathComponent.ProjectionResult(), __assign({ rawValue: "_continue" }, Array.from(arguments).slice(1))); };
            class_7._break = function () { return Object.assign(new RawKeyPathComponent.ProjectionResult(), __assign({ rawValue: "_break" }, Array.from(arguments).slice(1))); };
            /*Swift.(file).RawKeyPathComponent.ProjectionResult.assumingContinue*/
            class_7.prototype.assumingContinue$get = function () {
                throw 'unsupported variable Swift.(file).RawKeyPathComponent.ProjectionResult.assumingContinue in ' + this.constructor.name;
            };
            Object.defineProperty(class_7.prototype, "assumingContinue", {
                get: function () { return this.assumingContinue$get(); },
                enumerable: true,
                configurable: true
            });
            ;
            class_7.prototype.init$vars = function () {
            };
            return class_7;
        }()),
        _g.$infoAddress = '',
        _g);
    return RawKeyPathComponent;
}());
_mixin(RawKeyPathComponent.ProjectionResult, _DefaultEnumImplementation, false);
var KeyPathBuffer = /** @class */ (function () {
    function KeyPathBuffer() {
    }
    /*Swift.(file).KeyPathBuffer.data*/
    KeyPathBuffer.prototype.data$get = function () {
        throw 'unsupported variable Swift.(file).KeyPathBuffer.data in ' + this.constructor.name;
    };
    Object.defineProperty(KeyPathBuffer.prototype, "data", {
        get: function () { return this.data$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).KeyPathBuffer.trivial*/
    KeyPathBuffer.prototype.trivial$get = function () {
        throw 'unsupported variable Swift.(file).KeyPathBuffer.trivial in ' + this.constructor.name;
    };
    Object.defineProperty(KeyPathBuffer.prototype, "trivial", {
        get: function () { return this.trivial$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).KeyPathBuffer.hasReferencePrefix*/
    KeyPathBuffer.prototype.hasReferencePrefix$get = function () {
        throw 'unsupported variable Swift.(file).KeyPathBuffer.hasReferencePrefix in ' + this.constructor.name;
    };
    Object.defineProperty(KeyPathBuffer.prototype, "hasReferencePrefix", {
        get: function () { return this.hasReferencePrefix$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).KeyPathBuffer.mutableData*/
    KeyPathBuffer.prototype.mutableData$get = function () {
        throw 'unsupported variable Swift.(file).KeyPathBuffer.mutableData in ' + this.constructor.name;
    };
    Object.defineProperty(KeyPathBuffer.prototype, "mutableData", {
        get: function () { return this.mutableData$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).KeyPathBuffer.init(base:UnsafeRawPointer)*/
    /*Swift.(file).KeyPathBuffer.init(base:UnsafeRawPointer)*/
    KeyPathBuffer.prototype.initBaseUnsafeRawPointer = function ($info, base) {
        throw 'unsupported method Swift.(file).KeyPathBuffer.init(base:UnsafeRawPointer) in ' + this.constructor.name;
    };
    /*Swift.(file).KeyPathBuffer.init(partialData:UnsafeRawBufferPointer,trivial:Bool,hasReferencePrefix:Bool)*/
    /*Swift.(file).KeyPathBuffer.init(partialData:UnsafeRawBufferPointer,trivial:Bool,hasReferencePrefix:Bool)*/
    KeyPathBuffer.prototype.initPartialDataUnsafeRawBufferPointerTrivialBoolHasReferencePrefixBool = function ($info, partialData, trivial, hasReferencePrefix) {
        throw 'unsupported method Swift.(file).KeyPathBuffer.init(partialData:UnsafeRawBufferPointer,trivial:Bool,hasReferencePrefix:Bool) in ' + this.constructor.name;
    };
    /*Swift.(file).KeyPathBuffer.destroy()*/
    /*Swift.(file).KeyPathBuffer.destroy()*/
    KeyPathBuffer.prototype.destroy = function ($info) {
        throw 'unsupported method Swift.(file).KeyPathBuffer.destroy() in ' + this.constructor.name;
    };
    /*Swift.(file).KeyPathBuffer.next()*/
    /*Swift.(file).KeyPathBuffer.next()*/
    KeyPathBuffer.prototype.next = function ($info) {
        throw 'unsupported method Swift.(file).KeyPathBuffer.next() in ' + this.constructor.name;
    };
    KeyPathBuffer.prototype.init$vars = function () {
    };
    var _h;
    KeyPathBuffer.$struct = true;
    KeyPathBuffer.$infoAddress = '';
    KeyPathBuffer.Header = (_h = /** @class */ (function () {
            function class_8() {
            }
            /*Swift.(file).KeyPathBuffer.Header.sizeMask*/
            class_8.sizeMask$get = function () {
                throw 'unsupported variable Swift.(file).KeyPathBuffer.Header.sizeMask in ' + this.constructor.name;
            };
            Object.defineProperty(class_8, "sizeMask", {
                get: function () { return this.sizeMask$get(); },
                enumerable: true,
                configurable: true
            });
            ;
            /*Swift.(file).KeyPathBuffer.Header.reservedMask*/
            class_8.reservedMask$get = function () {
                throw 'unsupported variable Swift.(file).KeyPathBuffer.Header.reservedMask in ' + this.constructor.name;
            };
            Object.defineProperty(class_8, "reservedMask", {
                get: function () { return this.reservedMask$get(); },
                enumerable: true,
                configurable: true
            });
            ;
            /*Swift.(file).KeyPathBuffer.Header.trivialFlag*/
            class_8.trivialFlag$get = function () {
                throw 'unsupported variable Swift.(file).KeyPathBuffer.Header.trivialFlag in ' + this.constructor.name;
            };
            Object.defineProperty(class_8, "trivialFlag", {
                get: function () { return this.trivialFlag$get(); },
                enumerable: true,
                configurable: true
            });
            ;
            /*Swift.(file).KeyPathBuffer.Header.hasReferencePrefixFlag*/
            class_8.hasReferencePrefixFlag$get = function () {
                throw 'unsupported variable Swift.(file).KeyPathBuffer.Header.hasReferencePrefixFlag in ' + this.constructor.name;
            };
            Object.defineProperty(class_8, "hasReferencePrefixFlag", {
                get: function () { return this.hasReferencePrefixFlag$get(); },
                enumerable: true,
                configurable: true
            });
            ;
            /*Swift.(file).KeyPathBuffer.Header.init(size:Int,trivial:Bool,hasReferencePrefix:Bool)*/
            /*Swift.(file).KeyPathBuffer.Header.init(size:Int,trivial:Bool,hasReferencePrefix:Bool)*/
            class_8.prototype.initSizeIntTrivialBoolHasReferencePrefixBool = function ($info, size, trivial, hasReferencePrefix) {
                throw 'unsupported method Swift.(file).KeyPathBuffer.Header.init(size:Int,trivial:Bool,hasReferencePrefix:Bool) in ' + this.constructor.name;
            };
            /*Swift.(file).KeyPathBuffer.Header.size*/
            class_8.prototype.size$get = function () {
                throw 'unsupported variable Swift.(file).KeyPathBuffer.Header.size in ' + this.constructor.name;
            };
            Object.defineProperty(class_8.prototype, "size", {
                get: function () { return this.size$get(); },
                enumerable: true,
                configurable: true
            });
            ;
            /*Swift.(file).KeyPathBuffer.Header.trivial*/
            class_8.prototype.trivial$get = function () {
                throw 'unsupported variable Swift.(file).KeyPathBuffer.Header.trivial in ' + this.constructor.name;
            };
            Object.defineProperty(class_8.prototype, "trivial", {
                get: function () { return this.trivial$get(); },
                enumerable: true,
                configurable: true
            });
            ;
            /*Swift.(file).KeyPathBuffer.Header.hasReferencePrefix*/
            class_8.prototype.hasReferencePrefix$get = function () {
                throw 'unsupported variable Swift.(file).KeyPathBuffer.Header.hasReferencePrefix in ' + this.constructor.name;
            };
            Object.defineProperty(class_8.prototype, "hasReferencePrefix", {
                get: function () { return this.hasReferencePrefix$get(); },
                enumerable: true,
                configurable: true
            });
            ;
            /*Swift.(file).KeyPathBuffer.Header.instantiableInLine*/
            class_8.prototype.instantiableInLine$get = function () {
                throw 'unsupported variable Swift.(file).KeyPathBuffer.Header.instantiableInLine in ' + this.constructor.name;
            };
            Object.defineProperty(class_8.prototype, "instantiableInLine", {
                get: function () { return this.instantiableInLine$get(); },
                enumerable: true,
                configurable: true
            });
            ;
            /*Swift.(file).KeyPathBuffer.Header.validateReservedBits()*/
            /*Swift.(file).KeyPathBuffer.Header.validateReservedBits()*/
            class_8.prototype.validateReservedBits = function ($info) {
                throw 'unsupported method Swift.(file).KeyPathBuffer.Header.validateReservedBits() in ' + this.constructor.name;
            };
            class_8.prototype.init$vars = function () {
            };
            return class_8;
        }()),
        _h.$struct = true,
        _h.$infoAddress = '',
        _h);
    return KeyPathBuffer;
}());
var _AppendKeyPath$implementation = /** @class */ (function () {
    function _AppendKeyPath$implementation() {
    }
    /*Swift.(file)._AppendKeyPath.appending(path:AnyKeyPath)*/
    _AppendKeyPath$implementation.prototype.appendingPath = function ($info, path) {
        var _this = this;
        return _tryToAppendKeyPathsRootLeaf({}, _this, path);
    };
    /*Swift.(file)._AppendKeyPath.appending(path:AnyKeyPath)*/
    /*Swift.(file)._AppendKeyPath.appending(path:AnyKeyPath)*/
    _AppendKeyPath$implementation.prototype.appendingPath = function ($info, path) {
        var _this = this;
        return _tryToAppendKeyPathsRootLeaf({}, _this, path);
    };
    /*Swift.(file)._AppendKeyPath.appending(path:KeyPath<AppendedRoot, AppendedValue>)*/
    /*Swift.(file)._AppendKeyPath.appending(path:KeyPath<AppendedRoot, AppendedValue>)*/
    _AppendKeyPath$implementation.prototype.appendingPath = function ($info, path) {
        var _this = this;
        return _tryToAppendKeyPathsRootLeaf({}, /*derived_to_base_expr*/ _this, /*derived_to_base_expr*/ path);
    };
    /*Swift.(file)._AppendKeyPath.appending(path:ReferenceWritableKeyPath<AppendedRoot, AppendedValue>)*/
    /*Swift.(file)._AppendKeyPath.appending(path:ReferenceWritableKeyPath<AppendedRoot, AppendedValue>)*/
    _AppendKeyPath$implementation.prototype.appendingPath = function ($info, path) {
        var _this = this;
        return _tryToAppendKeyPathsRootLeaf({}, /*derived_to_base_expr*/ _this, /*derived_to_base_expr*/ path);
    };
    /*Swift.(file)._AppendKeyPath.appending(path:KeyPath<Value, AppendedValue>)*/
    /*Swift.(file)._AppendKeyPath.appending(path:KeyPath<Value, AppendedValue>)*/
    _AppendKeyPath$implementation.prototype.appendingPath = function ($info, path) {
        var _this = this;
        return _appendingKeyPathsRootLeaf({}, /*archetype_to_super_expr*/ _this, path);
    };
    /*Swift.(file)._AppendKeyPath.appending(path:ReferenceWritableKeyPath<Value, AppendedValue>)*/
    /*Swift.(file)._AppendKeyPath.appending(path:ReferenceWritableKeyPath<Value, AppendedValue>)*/
    _AppendKeyPath$implementation.prototype.appendingPath = function ($info, path) {
        var _this = this;
        return _appendingKeyPathsRootLeaf({}, _this, /*derived_to_base_expr*/ path);
    };
    /*Swift.(file)._AppendKeyPath.appending(path:WritableKeyPath<Value, AppendedValue>)*/
    /*Swift.(file)._AppendKeyPath.appending(path:WritableKeyPath<Value, AppendedValue>)*/
    _AppendKeyPath$implementation.prototype.appendingPath = function ($info, path) {
        var _this = this;
        return _appendingKeyPathsRootLeaf({}, /*derived_to_base_expr*/ _this, /*derived_to_base_expr*/ path);
    };
    /*Swift.(file)._AppendKeyPath.appending(path:ReferenceWritableKeyPath<Value, AppendedValue>)*/
    /*Swift.(file)._AppendKeyPath.appending(path:ReferenceWritableKeyPath<Value, AppendedValue>)*/
    _AppendKeyPath$implementation.prototype.appendingPath = function ($info, path) {
        var _this = this;
        return _appendingKeyPathsRootLeaf({}, _this, /*derived_to_base_expr*/ path);
    };
    /*Swift.(file)._AppendKeyPath.appending(path:WritableKeyPath<Value, AppendedValue>)*/
    /*Swift.(file)._AppendKeyPath.appending(path:WritableKeyPath<Value, AppendedValue>)*/
    _AppendKeyPath$implementation.prototype.appendingPath = function ($info, path) {
        var _this = this;
        return _appendingKeyPathsRootLeaf({}, /*derived_to_base_expr*/ _this, /*derived_to_base_expr*/ path);
    };
    return _AppendKeyPath$implementation;
}());
var KeyPathStructOrClass = /** @class */ (function () {
    function KeyPathStructOrClass() {
    }
    Object.defineProperty(KeyPathStructOrClass, "struct", {
        get: function () { return Object.assign(new KeyPathStructOrClass(), __assign({ rawValue: "struct" }, Array.from(arguments).slice(1))); },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(KeyPathStructOrClass, "_class", {
        get: function () { return Object.assign(new KeyPathStructOrClass(), __assign({ rawValue: "_class" }, Array.from(arguments).slice(1))); },
        enumerable: true,
        configurable: true
    });
    /*Swift.(file).KeyPathStructOrClass.==(_:KeyPathStructOrClass,_:KeyPathStructOrClass)*/
    /*Swift.(file).Equatable.==infix(_:Self,_:Self)*/
    KeyPathStructOrClass.infix_61_61 = function ($info, a, b) {
        return a == b;
    };
    /*Swift.(file).KeyPathStructOrClass.hashValue*/
    KeyPathStructOrClass.prototype.hashValue$get = function () {
        throw 'unsupported variable Swift.(file).KeyPathStructOrClass.hashValue in ' + this.constructor.name;
    };
    Object.defineProperty(KeyPathStructOrClass.prototype, "hashValue", {
        get: function () { return this.hashValue$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).KeyPathStructOrClass.hash(into:Hasher)*/
    /*Swift.(file).Hashable.hash(into:Hasher)*/
    KeyPathStructOrClass.prototype.hashInto = function ($info, hasher$inout) {
        throw 'unsupported method Swift.(file).KeyPathStructOrClass.hash(into:Hasher) in ' + this.constructor.name;
    };
    KeyPathStructOrClass.prototype.init$vars = function () {
    };
    KeyPathStructOrClass.$infoAddress = '';
    return KeyPathStructOrClass;
}());
_mixin(KeyPathStructOrClass, _DefaultEnumImplementation, false);
var KeyPathPatternStoredOffset = /** @class */ (function () {
    function KeyPathPatternStoredOffset() {
    }
    KeyPathPatternStoredOffset.inline = function () { return Object.assign(new KeyPathPatternStoredOffset(), __assign({ rawValue: "inline" }, Array.from(arguments).slice(1))); };
    KeyPathPatternStoredOffset.outOfLine = function () { return Object.assign(new KeyPathPatternStoredOffset(), __assign({ rawValue: "outOfLine" }, Array.from(arguments).slice(1))); };
    KeyPathPatternStoredOffset.unresolvedFieldOffset = function () { return Object.assign(new KeyPathPatternStoredOffset(), __assign({ rawValue: "unresolvedFieldOffset" }, Array.from(arguments).slice(1))); };
    KeyPathPatternStoredOffset.unresolvedIndirectOffset = function () { return Object.assign(new KeyPathPatternStoredOffset(), __assign({ rawValue: "unresolvedIndirectOffset" }, Array.from(arguments).slice(1))); };
    KeyPathPatternStoredOffset.prototype.init$vars = function () {
    };
    KeyPathPatternStoredOffset.$infoAddress = '';
    return KeyPathPatternStoredOffset;
}());
_mixin(KeyPathPatternStoredOffset, _DefaultEnumImplementation, false);
var KeyPathPatternComputedArguments = /** @class */ (function () {
    function KeyPathPatternComputedArguments() {
    }
    /*Swift.(file).KeyPathPatternComputedArguments.getLayout*/
    KeyPathPatternComputedArguments.prototype.getLayout$get = function () {
        throw 'unsupported variable Swift.(file).KeyPathPatternComputedArguments.getLayout in ' + this.constructor.name;
    };
    Object.defineProperty(KeyPathPatternComputedArguments.prototype, "getLayout", {
        get: function () { return this.getLayout$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).KeyPathPatternComputedArguments.witnesses*/
    KeyPathPatternComputedArguments.prototype.witnesses$get = function () {
        throw 'unsupported variable Swift.(file).KeyPathPatternComputedArguments.witnesses in ' + this.constructor.name;
    };
    Object.defineProperty(KeyPathPatternComputedArguments.prototype, "witnesses", {
        get: function () { return this.witnesses$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).KeyPathPatternComputedArguments.initializer*/
    KeyPathPatternComputedArguments.prototype.initializer$get = function () {
        throw 'unsupported variable Swift.(file).KeyPathPatternComputedArguments.initializer in ' + this.constructor.name;
    };
    Object.defineProperty(KeyPathPatternComputedArguments.prototype, "initializer", {
        get: function () { return this.initializer$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).KeyPathPatternComputedArguments.init(getLayout:KeyPathComputedArgumentLayoutFn,witnesses:UnsafePointer<ComputedArgumentWitnesses>,initializer:KeyPathComputedArgumentInitializerFn)*/
    /*Swift.(file).KeyPathPatternComputedArguments.init(getLayout:KeyPathComputedArgumentLayoutFn,witnesses:UnsafePointer<ComputedArgumentWitnesses>,initializer:KeyPathComputedArgumentInitializerFn)*/
    KeyPathPatternComputedArguments.prototype.initGetLayoutKeyPathComputedArgumentLayoutFnWitnessesUnsafePointerInitializerKeyPathComputedArgumentInitializerFn = function ($info, getLayout, witnesses, initializer) {
        throw 'unsupported method Swift.(file).KeyPathPatternComputedArguments.init(getLayout:KeyPathComputedArgumentLayoutFn,witnesses:UnsafePointer<ComputedArgumentWitnesses>,initializer:KeyPathComputedArgumentInitializerFn) in ' + this.constructor.name;
    };
    KeyPathPatternComputedArguments.prototype.init$vars = function () {
    };
    KeyPathPatternComputedArguments.$struct = true;
    KeyPathPatternComputedArguments.$infoAddress = '';
    return KeyPathPatternComputedArguments;
}());
var KeyPathPatternVisitor$implementation = /** @class */ (function () {
    function KeyPathPatternVisitor$implementation() {
    }
    return KeyPathPatternVisitor$implementation;
}());
var GetKeyPathClassAndInstanceSizeFromPattern = /** @class */ (function () {
    function GetKeyPathClassAndInstanceSizeFromPattern() {
    }
    /*Swift.(file).GetKeyPathClassAndInstanceSizeFromPattern.size*/
    GetKeyPathClassAndInstanceSizeFromPattern.prototype.size$get = function () {
        throw 'unsupported variable Swift.(file).GetKeyPathClassAndInstanceSizeFromPattern.size in ' + this.constructor.name;
    };
    Object.defineProperty(GetKeyPathClassAndInstanceSizeFromPattern.prototype, "size", {
        get: function () { return this.size$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).GetKeyPathClassAndInstanceSizeFromPattern.capability*/
    GetKeyPathClassAndInstanceSizeFromPattern.prototype.capability$get = function () {
        throw 'unsupported variable Swift.(file).GetKeyPathClassAndInstanceSizeFromPattern.capability in ' + this.constructor.name;
    };
    Object.defineProperty(GetKeyPathClassAndInstanceSizeFromPattern.prototype, "capability", {
        get: function () { return this.capability$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).GetKeyPathClassAndInstanceSizeFromPattern.didChain*/
    GetKeyPathClassAndInstanceSizeFromPattern.prototype.didChain$get = function () {
        throw 'unsupported variable Swift.(file).GetKeyPathClassAndInstanceSizeFromPattern.didChain in ' + this.constructor.name;
    };
    Object.defineProperty(GetKeyPathClassAndInstanceSizeFromPattern.prototype, "didChain", {
        get: function () { return this.didChain$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).GetKeyPathClassAndInstanceSizeFromPattern.root*/
    GetKeyPathClassAndInstanceSizeFromPattern.prototype.root$get = function () {
        throw 'unsupported variable Swift.(file).GetKeyPathClassAndInstanceSizeFromPattern.root in ' + this.constructor.name;
    };
    Object.defineProperty(GetKeyPathClassAndInstanceSizeFromPattern.prototype, "root", {
        get: function () { return this.root$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).GetKeyPathClassAndInstanceSizeFromPattern.leaf*/
    GetKeyPathClassAndInstanceSizeFromPattern.prototype.leaf$get = function () {
        throw 'unsupported variable Swift.(file).GetKeyPathClassAndInstanceSizeFromPattern.leaf in ' + this.constructor.name;
    };
    Object.defineProperty(GetKeyPathClassAndInstanceSizeFromPattern.prototype, "leaf", {
        get: function () { return this.leaf$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).GetKeyPathClassAndInstanceSizeFromPattern.genericEnvironment*/
    GetKeyPathClassAndInstanceSizeFromPattern.prototype.genericEnvironment$get = function () {
        throw 'unsupported variable Swift.(file).GetKeyPathClassAndInstanceSizeFromPattern.genericEnvironment in ' + this.constructor.name;
    };
    Object.defineProperty(GetKeyPathClassAndInstanceSizeFromPattern.prototype, "genericEnvironment", {
        get: function () { return this.genericEnvironment$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).GetKeyPathClassAndInstanceSizeFromPattern.patternArgs*/
    GetKeyPathClassAndInstanceSizeFromPattern.prototype.patternArgs$get = function () {
        throw 'unsupported variable Swift.(file).GetKeyPathClassAndInstanceSizeFromPattern.patternArgs in ' + this.constructor.name;
    };
    Object.defineProperty(GetKeyPathClassAndInstanceSizeFromPattern.prototype, "patternArgs", {
        get: function () { return this.patternArgs$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).GetKeyPathClassAndInstanceSizeFromPattern.init(patternArgs:UnsafeRawPointer?)*/
    /*Swift.(file).GetKeyPathClassAndInstanceSizeFromPattern.init(patternArgs:UnsafeRawPointer?)*/
    GetKeyPathClassAndInstanceSizeFromPattern.prototype.initPatternArgsOptional = function ($info, patternArgs) {
        throw 'unsupported method Swift.(file).GetKeyPathClassAndInstanceSizeFromPattern.init(patternArgs:UnsafeRawPointer?) in ' + this.constructor.name;
    };
    /*Swift.(file).GetKeyPathClassAndInstanceSizeFromPattern.roundUpToPointerAlignment()*/
    /*Swift.(file).GetKeyPathClassAndInstanceSizeFromPattern.roundUpToPointerAlignment()*/
    GetKeyPathClassAndInstanceSizeFromPattern.prototype.roundUpToPointerAlignment = function ($info) {
        throw 'unsupported method Swift.(file).GetKeyPathClassAndInstanceSizeFromPattern.roundUpToPointerAlignment() in ' + this.constructor.name;
    };
    /*Swift.(file).GetKeyPathClassAndInstanceSizeFromPattern.visitHeader(genericEnvironment:UnsafeRawPointer?,rootMetadataRef:MetadataReference,leafMetadataRef:MetadataReference,kvcCompatibilityString:UnsafeRawPointer?)*/
    /*Swift.(file).KeyPathPatternVisitor.visitHeader(genericEnvironment:UnsafeRawPointer?,rootMetadataRef:MetadataReference,leafMetadataRef:MetadataReference,kvcCompatibilityString:UnsafeRawPointer?)*/
    GetKeyPathClassAndInstanceSizeFromPattern.prototype.visitHeaderGenericEnvironmentRootMetadataRefLeafMetadataRefKvcCompatibilityString = function ($info, genericEnvironment, rootMetadataRef, leafMetadataRef, kvcCompatibilityString) {
        throw 'unsupported method Swift.(file).GetKeyPathClassAndInstanceSizeFromPattern.visitHeader(genericEnvironment:UnsafeRawPointer?,rootMetadataRef:MetadataReference,leafMetadataRef:MetadataReference,kvcCompatibilityString:UnsafeRawPointer?) in ' + this.constructor.name;
    };
    /*Swift.(file).GetKeyPathClassAndInstanceSizeFromPattern.visitStoredComponent(kind:KeyPathStructOrClass,mutable:Bool,offset:KeyPathPatternStoredOffset)*/
    /*Swift.(file).KeyPathPatternVisitor.visitStoredComponent(kind:KeyPathStructOrClass,mutable:Bool,offset:KeyPathPatternStoredOffset)*/
    GetKeyPathClassAndInstanceSizeFromPattern.prototype.visitStoredComponentKindMutableOffset = function ($info, kind, mutable, offset) {
        throw 'unsupported method Swift.(file).GetKeyPathClassAndInstanceSizeFromPattern.visitStoredComponent(kind:KeyPathStructOrClass,mutable:Bool,offset:KeyPathPatternStoredOffset) in ' + this.constructor.name;
    };
    /*Swift.(file).GetKeyPathClassAndInstanceSizeFromPattern.visitComputedComponent(mutating:Bool,idKind:KeyPathComputedIDKind,idResolved:Bool,idValueBase:UnsafeRawPointer,idValue:Int32,getter:UnsafeRawPointer,setter:UnsafeRawPointer?,arguments:KeyPathPatternComputedArguments?,externalArgs:UnsafeBufferPointer<Int32>?)*/
    /*Swift.(file).KeyPathPatternVisitor.visitComputedComponent(mutating:Bool,idKind:KeyPathComputedIDKind,idResolved:Bool,idValueBase:UnsafeRawPointer,idValue:Int32,getter:UnsafeRawPointer,setter:UnsafeRawPointer?,arguments:KeyPathPatternComputedArguments?,externalArgs:UnsafeBufferPointer<Int32>?)*/
    GetKeyPathClassAndInstanceSizeFromPattern.prototype.visitComputedComponentMutatingIdKindIdResolvedIdValueBaseIdValueGetterSetterArgumentsExternalArgs = function ($info, mutating, idKind, idResolved, idValueBase, idValue, getter, setter, _arguments, externalArgs) {
        throw 'unsupported method Swift.(file).GetKeyPathClassAndInstanceSizeFromPattern.visitComputedComponent(mutating:Bool,idKind:KeyPathComputedIDKind,idResolved:Bool,idValueBase:UnsafeRawPointer,idValue:Int32,getter:UnsafeRawPointer,setter:UnsafeRawPointer?,arguments:KeyPathPatternComputedArguments?,externalArgs:UnsafeBufferPointer<Int32>?) in ' + this.constructor.name;
    };
    /*Swift.(file).GetKeyPathClassAndInstanceSizeFromPattern.visitOptionalChainComponent()*/
    /*Swift.(file).KeyPathPatternVisitor.visitOptionalChainComponent()*/
    GetKeyPathClassAndInstanceSizeFromPattern.prototype.visitOptionalChainComponent = function ($info) {
        throw 'unsupported method Swift.(file).GetKeyPathClassAndInstanceSizeFromPattern.visitOptionalChainComponent() in ' + this.constructor.name;
    };
    /*Swift.(file).GetKeyPathClassAndInstanceSizeFromPattern.visitOptionalWrapComponent()*/
    /*Swift.(file).KeyPathPatternVisitor.visitOptionalWrapComponent()*/
    GetKeyPathClassAndInstanceSizeFromPattern.prototype.visitOptionalWrapComponent = function ($info) {
        throw 'unsupported method Swift.(file).GetKeyPathClassAndInstanceSizeFromPattern.visitOptionalWrapComponent() in ' + this.constructor.name;
    };
    /*Swift.(file).GetKeyPathClassAndInstanceSizeFromPattern.visitOptionalForceComponent()*/
    /*Swift.(file).KeyPathPatternVisitor.visitOptionalForceComponent()*/
    GetKeyPathClassAndInstanceSizeFromPattern.prototype.visitOptionalForceComponent = function ($info) {
        throw 'unsupported method Swift.(file).GetKeyPathClassAndInstanceSizeFromPattern.visitOptionalForceComponent() in ' + this.constructor.name;
    };
    /*Swift.(file).GetKeyPathClassAndInstanceSizeFromPattern.visitIntermediateComponentType(metadataRef:MetadataReference)*/
    /*Swift.(file).KeyPathPatternVisitor.visitIntermediateComponentType(metadataRef:MetadataReference)*/
    GetKeyPathClassAndInstanceSizeFromPattern.prototype.visitIntermediateComponentTypeMetadataRef = function ($info, _) {
        throw 'unsupported method Swift.(file).GetKeyPathClassAndInstanceSizeFromPattern.visitIntermediateComponentType(metadataRef:MetadataReference) in ' + this.constructor.name;
    };
    /*Swift.(file).GetKeyPathClassAndInstanceSizeFromPattern.finish()*/
    /*Swift.(file).KeyPathPatternVisitor.finish()*/
    GetKeyPathClassAndInstanceSizeFromPattern.prototype.finish = function ($info) {
        throw 'unsupported method Swift.(file).GetKeyPathClassAndInstanceSizeFromPattern.finish() in ' + this.constructor.name;
    };
    GetKeyPathClassAndInstanceSizeFromPattern.prototype.init$vars = function () {
    };
    GetKeyPathClassAndInstanceSizeFromPattern.$struct = true;
    GetKeyPathClassAndInstanceSizeFromPattern.$infoAddress = '';
    return GetKeyPathClassAndInstanceSizeFromPattern;
}());
if (typeof KeyPathPatternVisitor$implementation != 'undefined')
    _mixin(GetKeyPathClassAndInstanceSizeFromPattern, KeyPathPatternVisitor$implementation, false);
var InstantiateKeyPathBuffer = /** @class */ (function () {
    function InstantiateKeyPathBuffer() {
    }
    /*Swift.(file).InstantiateKeyPathBuffer.destData*/
    InstantiateKeyPathBuffer.prototype.destData$get = function () {
        throw 'unsupported variable Swift.(file).InstantiateKeyPathBuffer.destData in ' + this.constructor.name;
    };
    Object.defineProperty(InstantiateKeyPathBuffer.prototype, "destData", {
        get: function () { return this.destData$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).InstantiateKeyPathBuffer.genericEnvironment*/
    InstantiateKeyPathBuffer.prototype.genericEnvironment$get = function () {
        throw 'unsupported variable Swift.(file).InstantiateKeyPathBuffer.genericEnvironment in ' + this.constructor.name;
    };
    Object.defineProperty(InstantiateKeyPathBuffer.prototype, "genericEnvironment", {
        get: function () { return this.genericEnvironment$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).InstantiateKeyPathBuffer.patternArgs*/
    InstantiateKeyPathBuffer.prototype.patternArgs$get = function () {
        throw 'unsupported variable Swift.(file).InstantiateKeyPathBuffer.patternArgs in ' + this.constructor.name;
    };
    Object.defineProperty(InstantiateKeyPathBuffer.prototype, "patternArgs", {
        get: function () { return this.patternArgs$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).InstantiateKeyPathBuffer.base*/
    InstantiateKeyPathBuffer.prototype.base$get = function () {
        throw 'unsupported variable Swift.(file).InstantiateKeyPathBuffer.base in ' + this.constructor.name;
    };
    Object.defineProperty(InstantiateKeyPathBuffer.prototype, "base", {
        get: function () { return this.base$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).InstantiateKeyPathBuffer.init(destData:UnsafeMutableRawBufferPointer,patternArgs:UnsafeRawPointer?,root:Any.Type)*/
    /*Swift.(file).InstantiateKeyPathBuffer.init(destData:UnsafeMutableRawBufferPointer,patternArgs:UnsafeRawPointer?,root:Any.Type)*/
    InstantiateKeyPathBuffer.prototype.initDestDataUnsafeMutableRawBufferPointerPatternArgsOptionalRootprotocol_composition_type = function ($info, destData, patternArgs, root) {
        throw 'unsupported method Swift.(file).InstantiateKeyPathBuffer.init(destData:UnsafeMutableRawBufferPointer,patternArgs:UnsafeRawPointer?,root:Any.Type) in ' + this.constructor.name;
    };
    /*Swift.(file).InstantiateKeyPathBuffer.isTrivial*/
    InstantiateKeyPathBuffer.prototype.isTrivial$get = function () {
        throw 'unsupported variable Swift.(file).InstantiateKeyPathBuffer.isTrivial in ' + this.constructor.name;
    };
    Object.defineProperty(InstantiateKeyPathBuffer.prototype, "isTrivial", {
        get: function () { return this.isTrivial$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).InstantiateKeyPathBuffer.endOfReferencePrefixComponent*/
    InstantiateKeyPathBuffer.prototype.endOfReferencePrefixComponent$get = function () {
        throw 'unsupported variable Swift.(file).InstantiateKeyPathBuffer.endOfReferencePrefixComponent in ' + this.constructor.name;
    };
    Object.defineProperty(InstantiateKeyPathBuffer.prototype, "endOfReferencePrefixComponent", {
        get: function () { return this.endOfReferencePrefixComponent$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).InstantiateKeyPathBuffer.previousComponentAddr*/
    InstantiateKeyPathBuffer.prototype.previousComponentAddr$get = function () {
        throw 'unsupported variable Swift.(file).InstantiateKeyPathBuffer.previousComponentAddr in ' + this.constructor.name;
    };
    Object.defineProperty(InstantiateKeyPathBuffer.prototype, "previousComponentAddr", {
        get: function () { return this.previousComponentAddr$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).InstantiateKeyPathBuffer.pushDest(_:T)*/
    /*Swift.(file).InstantiateKeyPathBuffer.pushDest(_:T)*/
    InstantiateKeyPathBuffer.prototype.pushDest = function ($info, value) {
        throw 'unsupported method Swift.(file).InstantiateKeyPathBuffer.pushDest(_:T) in ' + this.constructor.name;
    };
    /*Swift.(file).InstantiateKeyPathBuffer.updatePreviousComponentAddr()*/
    /*Swift.(file).InstantiateKeyPathBuffer.updatePreviousComponentAddr()*/
    InstantiateKeyPathBuffer.prototype.updatePreviousComponentAddr = function ($info) {
        throw 'unsupported method Swift.(file).InstantiateKeyPathBuffer.updatePreviousComponentAddr() in ' + this.constructor.name;
    };
    /*Swift.(file).InstantiateKeyPathBuffer.visitHeader(genericEnvironment:UnsafeRawPointer?,rootMetadataRef:MetadataReference,leafMetadataRef:MetadataReference,kvcCompatibilityString:UnsafeRawPointer?)*/
    /*Swift.(file).KeyPathPatternVisitor.visitHeader(genericEnvironment:UnsafeRawPointer?,rootMetadataRef:MetadataReference,leafMetadataRef:MetadataReference,kvcCompatibilityString:UnsafeRawPointer?)*/
    InstantiateKeyPathBuffer.prototype.visitHeaderGenericEnvironmentRootMetadataRefLeafMetadataRefKvcCompatibilityString = function ($info, genericEnvironment, rootMetadataRef, leafMetadataRef, kvcCompatibilityString) {
        throw 'unsupported method Swift.(file).InstantiateKeyPathBuffer.visitHeader(genericEnvironment:UnsafeRawPointer?,rootMetadataRef:MetadataReference,leafMetadataRef:MetadataReference,kvcCompatibilityString:UnsafeRawPointer?) in ' + this.constructor.name;
    };
    /*Swift.(file).InstantiateKeyPathBuffer.visitStoredComponent(kind:KeyPathStructOrClass,mutable:Bool,offset:KeyPathPatternStoredOffset)*/
    /*Swift.(file).KeyPathPatternVisitor.visitStoredComponent(kind:KeyPathStructOrClass,mutable:Bool,offset:KeyPathPatternStoredOffset)*/
    InstantiateKeyPathBuffer.prototype.visitStoredComponentKindMutableOffset = function ($info, kind, mutable, offset) {
        throw 'unsupported method Swift.(file).InstantiateKeyPathBuffer.visitStoredComponent(kind:KeyPathStructOrClass,mutable:Bool,offset:KeyPathPatternStoredOffset) in ' + this.constructor.name;
    };
    /*Swift.(file).InstantiateKeyPathBuffer.visitComputedComponent(mutating:Bool,idKind:KeyPathComputedIDKind,idResolved:Bool,idValueBase:UnsafeRawPointer,idValue:Int32,getter:UnsafeRawPointer,setter:UnsafeRawPointer?,arguments:KeyPathPatternComputedArguments?,externalArgs:UnsafeBufferPointer<Int32>?)*/
    /*Swift.(file).KeyPathPatternVisitor.visitComputedComponent(mutating:Bool,idKind:KeyPathComputedIDKind,idResolved:Bool,idValueBase:UnsafeRawPointer,idValue:Int32,getter:UnsafeRawPointer,setter:UnsafeRawPointer?,arguments:KeyPathPatternComputedArguments?,externalArgs:UnsafeBufferPointer<Int32>?)*/
    InstantiateKeyPathBuffer.prototype.visitComputedComponentMutatingIdKindIdResolvedIdValueBaseIdValueGetterSetterArgumentsExternalArgs = function ($info, mutating, idKind, idResolved, idValueBase, idValue, getter, setter, _arguments, externalArgs) {
        throw 'unsupported method Swift.(file).InstantiateKeyPathBuffer.visitComputedComponent(mutating:Bool,idKind:KeyPathComputedIDKind,idResolved:Bool,idValueBase:UnsafeRawPointer,idValue:Int32,getter:UnsafeRawPointer,setter:UnsafeRawPointer?,arguments:KeyPathPatternComputedArguments?,externalArgs:UnsafeBufferPointer<Int32>?) in ' + this.constructor.name;
    };
    /*Swift.(file).InstantiateKeyPathBuffer.visitOptionalChainComponent()*/
    /*Swift.(file).KeyPathPatternVisitor.visitOptionalChainComponent()*/
    InstantiateKeyPathBuffer.prototype.visitOptionalChainComponent = function ($info) {
        throw 'unsupported method Swift.(file).InstantiateKeyPathBuffer.visitOptionalChainComponent() in ' + this.constructor.name;
    };
    /*Swift.(file).InstantiateKeyPathBuffer.visitOptionalWrapComponent()*/
    /*Swift.(file).KeyPathPatternVisitor.visitOptionalWrapComponent()*/
    InstantiateKeyPathBuffer.prototype.visitOptionalWrapComponent = function ($info) {
        throw 'unsupported method Swift.(file).InstantiateKeyPathBuffer.visitOptionalWrapComponent() in ' + this.constructor.name;
    };
    /*Swift.(file).InstantiateKeyPathBuffer.visitOptionalForceComponent()*/
    /*Swift.(file).KeyPathPatternVisitor.visitOptionalForceComponent()*/
    InstantiateKeyPathBuffer.prototype.visitOptionalForceComponent = function ($info) {
        throw 'unsupported method Swift.(file).InstantiateKeyPathBuffer.visitOptionalForceComponent() in ' + this.constructor.name;
    };
    /*Swift.(file).InstantiateKeyPathBuffer.visitIntermediateComponentType(metadataRef:MetadataReference)*/
    /*Swift.(file).KeyPathPatternVisitor.visitIntermediateComponentType(metadataRef:MetadataReference)*/
    InstantiateKeyPathBuffer.prototype.visitIntermediateComponentTypeMetadataRef = function ($info, metadataRef) {
        throw 'unsupported method Swift.(file).InstantiateKeyPathBuffer.visitIntermediateComponentType(metadataRef:MetadataReference) in ' + this.constructor.name;
    };
    /*Swift.(file).InstantiateKeyPathBuffer.finish()*/
    /*Swift.(file).KeyPathPatternVisitor.finish()*/
    InstantiateKeyPathBuffer.prototype.finish = function ($info) {
        throw 'unsupported method Swift.(file).InstantiateKeyPathBuffer.finish() in ' + this.constructor.name;
    };
    InstantiateKeyPathBuffer.prototype.init$vars = function () {
    };
    InstantiateKeyPathBuffer.$struct = true;
    InstantiateKeyPathBuffer.$infoAddress = '';
    return InstantiateKeyPathBuffer;
}());
if (typeof KeyPathPatternVisitor$implementation != 'undefined')
    _mixin(InstantiateKeyPathBuffer, KeyPathPatternVisitor$implementation, false);
var ValidatingInstantiateKeyPathBuffer = /** @class */ (function () {
    function ValidatingInstantiateKeyPathBuffer() {
    }
    /*Swift.(file).ValidatingInstantiateKeyPathBuffer.sizeVisitor*/
    ValidatingInstantiateKeyPathBuffer.prototype.sizeVisitor$get = function () {
        throw 'unsupported variable Swift.(file).ValidatingInstantiateKeyPathBuffer.sizeVisitor in ' + this.constructor.name;
    };
    Object.defineProperty(ValidatingInstantiateKeyPathBuffer.prototype, "sizeVisitor", {
        get: function () { return this.sizeVisitor$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).ValidatingInstantiateKeyPathBuffer.instantiateVisitor*/
    ValidatingInstantiateKeyPathBuffer.prototype.instantiateVisitor$get = function () {
        throw 'unsupported variable Swift.(file).ValidatingInstantiateKeyPathBuffer.instantiateVisitor in ' + this.constructor.name;
    };
    Object.defineProperty(ValidatingInstantiateKeyPathBuffer.prototype, "instantiateVisitor", {
        get: function () { return this.instantiateVisitor$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).ValidatingInstantiateKeyPathBuffer.origDest*/
    ValidatingInstantiateKeyPathBuffer.prototype.origDest$get = function () {
        throw 'unsupported variable Swift.(file).ValidatingInstantiateKeyPathBuffer.origDest in ' + this.constructor.name;
    };
    Object.defineProperty(ValidatingInstantiateKeyPathBuffer.prototype, "origDest", {
        get: function () { return this.origDest$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).ValidatingInstantiateKeyPathBuffer.init(sizeVisitor:GetKeyPathClassAndInstanceSizeFromPattern,instantiateVisitor:InstantiateKeyPathBuffer)*/
    /*Swift.(file).ValidatingInstantiateKeyPathBuffer.init(sizeVisitor:GetKeyPathClassAndInstanceSizeFromPattern,instantiateVisitor:InstantiateKeyPathBuffer)*/
    ValidatingInstantiateKeyPathBuffer.prototype.initSizeVisitorGetKeyPathClassAndInstanceSizeFromPatternInstantiateVisitorInstantiateKeyPathBuffer = function ($info, sizeVisitor, instantiateVisitor) {
        throw 'unsupported method Swift.(file).ValidatingInstantiateKeyPathBuffer.init(sizeVisitor:GetKeyPathClassAndInstanceSizeFromPattern,instantiateVisitor:InstantiateKeyPathBuffer) in ' + this.constructor.name;
    };
    /*Swift.(file).ValidatingInstantiateKeyPathBuffer.visitHeader(genericEnvironment:UnsafeRawPointer?,rootMetadataRef:MetadataReference,leafMetadataRef:MetadataReference,kvcCompatibilityString:UnsafeRawPointer?)*/
    /*Swift.(file).KeyPathPatternVisitor.visitHeader(genericEnvironment:UnsafeRawPointer?,rootMetadataRef:MetadataReference,leafMetadataRef:MetadataReference,kvcCompatibilityString:UnsafeRawPointer?)*/
    ValidatingInstantiateKeyPathBuffer.prototype.visitHeaderGenericEnvironmentRootMetadataRefLeafMetadataRefKvcCompatibilityString = function ($info, genericEnvironment, rootMetadataRef, leafMetadataRef, kvcCompatibilityString) {
        throw 'unsupported method Swift.(file).ValidatingInstantiateKeyPathBuffer.visitHeader(genericEnvironment:UnsafeRawPointer?,rootMetadataRef:MetadataReference,leafMetadataRef:MetadataReference,kvcCompatibilityString:UnsafeRawPointer?) in ' + this.constructor.name;
    };
    /*Swift.(file).ValidatingInstantiateKeyPathBuffer.visitStoredComponent(kind:KeyPathStructOrClass,mutable:Bool,offset:KeyPathPatternStoredOffset)*/
    /*Swift.(file).KeyPathPatternVisitor.visitStoredComponent(kind:KeyPathStructOrClass,mutable:Bool,offset:KeyPathPatternStoredOffset)*/
    ValidatingInstantiateKeyPathBuffer.prototype.visitStoredComponentKindMutableOffset = function ($info, kind, mutable, offset) {
        throw 'unsupported method Swift.(file).ValidatingInstantiateKeyPathBuffer.visitStoredComponent(kind:KeyPathStructOrClass,mutable:Bool,offset:KeyPathPatternStoredOffset) in ' + this.constructor.name;
    };
    /*Swift.(file).ValidatingInstantiateKeyPathBuffer.visitComputedComponent(mutating:Bool,idKind:KeyPathComputedIDKind,idResolved:Bool,idValueBase:UnsafeRawPointer,idValue:Int32,getter:UnsafeRawPointer,setter:UnsafeRawPointer?,arguments:KeyPathPatternComputedArguments?,externalArgs:UnsafeBufferPointer<Int32>?)*/
    /*Swift.(file).KeyPathPatternVisitor.visitComputedComponent(mutating:Bool,idKind:KeyPathComputedIDKind,idResolved:Bool,idValueBase:UnsafeRawPointer,idValue:Int32,getter:UnsafeRawPointer,setter:UnsafeRawPointer?,arguments:KeyPathPatternComputedArguments?,externalArgs:UnsafeBufferPointer<Int32>?)*/
    ValidatingInstantiateKeyPathBuffer.prototype.visitComputedComponentMutatingIdKindIdResolvedIdValueBaseIdValueGetterSetterArgumentsExternalArgs = function ($info, mutating, idKind, idResolved, idValueBase, idValue, getter, setter, _arguments, externalArgs) {
        throw 'unsupported method Swift.(file).ValidatingInstantiateKeyPathBuffer.visitComputedComponent(mutating:Bool,idKind:KeyPathComputedIDKind,idResolved:Bool,idValueBase:UnsafeRawPointer,idValue:Int32,getter:UnsafeRawPointer,setter:UnsafeRawPointer?,arguments:KeyPathPatternComputedArguments?,externalArgs:UnsafeBufferPointer<Int32>?) in ' + this.constructor.name;
    };
    /*Swift.(file).ValidatingInstantiateKeyPathBuffer.visitOptionalChainComponent()*/
    /*Swift.(file).KeyPathPatternVisitor.visitOptionalChainComponent()*/
    ValidatingInstantiateKeyPathBuffer.prototype.visitOptionalChainComponent = function ($info) {
        throw 'unsupported method Swift.(file).ValidatingInstantiateKeyPathBuffer.visitOptionalChainComponent() in ' + this.constructor.name;
    };
    /*Swift.(file).ValidatingInstantiateKeyPathBuffer.visitOptionalWrapComponent()*/
    /*Swift.(file).KeyPathPatternVisitor.visitOptionalWrapComponent()*/
    ValidatingInstantiateKeyPathBuffer.prototype.visitOptionalWrapComponent = function ($info) {
        throw 'unsupported method Swift.(file).ValidatingInstantiateKeyPathBuffer.visitOptionalWrapComponent() in ' + this.constructor.name;
    };
    /*Swift.(file).ValidatingInstantiateKeyPathBuffer.visitOptionalForceComponent()*/
    /*Swift.(file).KeyPathPatternVisitor.visitOptionalForceComponent()*/
    ValidatingInstantiateKeyPathBuffer.prototype.visitOptionalForceComponent = function ($info) {
        throw 'unsupported method Swift.(file).ValidatingInstantiateKeyPathBuffer.visitOptionalForceComponent() in ' + this.constructor.name;
    };
    /*Swift.(file).ValidatingInstantiateKeyPathBuffer.visitIntermediateComponentType(metadataRef:MetadataReference)*/
    /*Swift.(file).KeyPathPatternVisitor.visitIntermediateComponentType(metadataRef:MetadataReference)*/
    ValidatingInstantiateKeyPathBuffer.prototype.visitIntermediateComponentTypeMetadataRef = function ($info, metadataRef) {
        throw 'unsupported method Swift.(file).ValidatingInstantiateKeyPathBuffer.visitIntermediateComponentType(metadataRef:MetadataReference) in ' + this.constructor.name;
    };
    /*Swift.(file).ValidatingInstantiateKeyPathBuffer.finish()*/
    /*Swift.(file).KeyPathPatternVisitor.finish()*/
    ValidatingInstantiateKeyPathBuffer.prototype.finish = function ($info) {
        throw 'unsupported method Swift.(file).ValidatingInstantiateKeyPathBuffer.finish() in ' + this.constructor.name;
    };
    /*Swift.(file).ValidatingInstantiateKeyPathBuffer.checkSizeConsistency()*/
    /*Swift.(file).ValidatingInstantiateKeyPathBuffer.checkSizeConsistency()*/
    ValidatingInstantiateKeyPathBuffer.prototype.checkSizeConsistency = function ($info) {
        throw 'unsupported method Swift.(file).ValidatingInstantiateKeyPathBuffer.checkSizeConsistency() in ' + this.constructor.name;
    };
    ValidatingInstantiateKeyPathBuffer.prototype.init$vars = function () {
    };
    ValidatingInstantiateKeyPathBuffer.$struct = true;
    ValidatingInstantiateKeyPathBuffer.$infoAddress = '';
    return ValidatingInstantiateKeyPathBuffer;
}());
if (typeof KeyPathPatternVisitor$implementation != 'undefined')
    _mixin(ValidatingInstantiateKeyPathBuffer, KeyPathPatternVisitor$implementation, false);
var ManagedBuffer = /** @class */ (function () {
    function ManagedBuffer() {
    }
    /*Swift.(file).ManagedBuffer.header*/
    ManagedBuffer.prototype.header$get = function () {
        throw 'unsupported variable Swift.(file).ManagedBuffer.header in ' + this.constructor.name;
    };
    Object.defineProperty(ManagedBuffer.prototype, "header", {
        get: function () { return this.header$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).ManagedBuffer.init(_doNotCallMe:())*/
    /*Swift.(file).ManagedBuffer.init(_doNotCallMe:())*/
    ManagedBuffer.prototype.init_doNotCallMetuple_type = function ($info, _doNotCallMe) {
        throw 'unsupported method Swift.(file).ManagedBuffer.init(_doNotCallMe:()) in ' + this.constructor.name;
    };
    /*Swift.(file).ManagedBuffer.create(minimumCapacity:Int,makingHeaderWith:(ManagedBuffer<Header, Element>) throws -> Header)*/
    /*Swift.(file).ManagedBuffer.create(minimumCapacity:Int,makingHeaderWith:(ManagedBuffer<Header, Element>) throws -> Header)*/
    ManagedBuffer.createMinimumCapacityMakingHeaderWith = function ($info, minimumCapacity, factory) {
        throw 'unsupported method Swift.(file).ManagedBuffer.create(minimumCapacity:Int,makingHeaderWith:(ManagedBuffer<Header, Element>) throws -> Header) in ' + this.constructor.name;
    };
    /*Swift.(file).ManagedBuffer.capacity*/
    ManagedBuffer.prototype.capacity$get = function () {
        throw 'unsupported variable Swift.(file).ManagedBuffer.capacity in ' + this.constructor.name;
    };
    Object.defineProperty(ManagedBuffer.prototype, "capacity", {
        get: function () { return this.capacity$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).ManagedBuffer.firstElementAddress*/
    ManagedBuffer.prototype.firstElementAddress$get = function () {
        throw 'unsupported variable Swift.(file).ManagedBuffer.firstElementAddress in ' + this.constructor.name;
    };
    Object.defineProperty(ManagedBuffer.prototype, "firstElementAddress", {
        get: function () { return this.firstElementAddress$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).ManagedBuffer.headerAddress*/
    ManagedBuffer.prototype.headerAddress$get = function () {
        throw 'unsupported variable Swift.(file).ManagedBuffer.headerAddress in ' + this.constructor.name;
    };
    Object.defineProperty(ManagedBuffer.prototype, "headerAddress", {
        get: function () { return this.headerAddress$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).ManagedBuffer.withUnsafeMutablePointerToHeader(_:(UnsafeMutablePointer<Header>) throws -> R)*/
    /*Swift.(file).ManagedBuffer.withUnsafeMutablePointerToHeader(_:(UnsafeMutablePointer<Header>) throws -> R)*/
    ManagedBuffer.prototype.withUnsafeMutablePointerToHeader = function ($info, body) {
        var _this = this;
        return _this.withUnsafeMutablePointers({}, (function ($info, v, _) { return body({}, v); }));
    };
    /*Swift.(file).ManagedBuffer.withUnsafeMutablePointerToElements(_:(UnsafeMutablePointer<Element>) throws -> R)*/
    /*Swift.(file).ManagedBuffer.withUnsafeMutablePointerToElements(_:(UnsafeMutablePointer<Element>) throws -> R)*/
    ManagedBuffer.prototype.withUnsafeMutablePointerToElements = function ($info, body) {
        var _this = this;
        return _this.withUnsafeMutablePointers({}, (function ($info, $0, $1) { return body({}, $1); }));
    };
    /*Swift.(file).ManagedBuffer.withUnsafeMutablePointers(_:(UnsafeMutablePointer<Header>, UnsafeMutablePointer<Element>) throws -> R)*/
    /*Swift.(file).ManagedBuffer.withUnsafeMutablePointers(_:(UnsafeMutablePointer<Header>, UnsafeMutablePointer<Element>) throws -> R)*/
    ManagedBuffer.prototype.withUnsafeMutablePointers = function ($info, body) {
        var _this = this;
        var $defer = function () {
            _fixLifetime({}, _this);
        };
        var $result = (function () {
            try {
                ;
                return body({}, _this.headerAddress, _this.firstElementAddress);
            }
            catch ($error) {
                $defer({});
                throw $error;
            }
        })();
        $defer({});
        return $result;
    };
    ManagedBuffer.prototype.init$vars = function () {
    };
    ManagedBuffer.$infoAddress = '';
    return ManagedBuffer;
}());
var ManagedBufferPointer = /** @class */ (function () {
    function ManagedBufferPointer() {
    }
    /*Swift.(file).ManagedBufferPointer.init(bufferClass:AnyClass,minimumCapacity:Int,makingHeaderWith:(AnyObject, (AnyObject) -> Int) throws -> Header)*/
    /*Swift.(file).ManagedBufferPointer.init(bufferClass:AnyClass,minimumCapacity:Int,makingHeaderWith:(AnyObject, (AnyObject) -> Int) throws -> Header)*/
    ManagedBufferPointer.prototype.initBufferClassAnyClassMinimumCapacityIntMakingHeaderWithfunction_type = function ($info, bufferClass, minimumCapacity, factory) {
        var _this = this;
        $info.$setThis(_this = _cloneStruct(_create(ManagedBufferPointer, 'initBufferClassAnyClassMinimumCapacityInt', {}, bufferClass, minimumCapacity)));
        _this.withUnsafeMutablePointerToHeader({}, (function ($info, $0) { return $0.initializeTo({}, factory({}, _this.buffer, (function ($info, $0) { return _create(ManagedBufferPointer, 'initUnsafeBufferObjectAnyObject', {}, $0).capacity; }))); }));
        _.discardAssignment = _this.header;
        return;
    };
    /*Swift.(file).ManagedBufferPointer.init(unsafeBufferObject:AnyObject)*/
    /*Swift.(file).ManagedBufferPointer.init(unsafeBufferObject:AnyObject)*/
    ManagedBufferPointer.prototype.initUnsafeBufferObjectAnyObject = function ($info, buffer) {
        throw 'unsupported method Swift.(file).ManagedBufferPointer.init(unsafeBufferObject:AnyObject) in ' + this.constructor.name;
    };
    /*Swift.(file).ManagedBufferPointer.init(_uncheckedUnsafeBufferObject:AnyObject)*/
    /*Swift.(file).ManagedBufferPointer.init(_uncheckedUnsafeBufferObject:AnyObject)*/
    ManagedBufferPointer.prototype.init_uncheckedUnsafeBufferObjectAnyObject = function ($info, buffer) {
        throw 'unsupported method Swift.(file).ManagedBufferPointer.init(_uncheckedUnsafeBufferObject:AnyObject) in ' + this.constructor.name;
    };
    /*Swift.(file).ManagedBufferPointer.init(bufferClass:AnyClass,minimumCapacity:Int)*/
    /*Swift.(file).ManagedBufferPointer.init(bufferClass:AnyClass,minimumCapacity:Int)*/
    ManagedBufferPointer.prototype.initBufferClassAnyClassMinimumCapacityInt = function ($info, bufferClass, minimumCapacity) {
        var _this = this;
        ManagedBufferPointer._checkValidBufferClassCreating({}, bufferClass, true);
        preconditionFileLine({}, function () { return Int.infix_62_61({}, minimumCapacity, 0); }, function () { return "ManagedBufferPointer must have non-negative capacity"; }, '?3', '?3');
        _this.init_uncheckedBufferClassAnyClassMinimumCapacityInt({}, bufferClass, minimumCapacity);
        return;
    };
    /*Swift.(file).ManagedBufferPointer.init(_uncheckedBufferClass:AnyClass,minimumCapacity:Int)*/
    /*Swift.(file).ManagedBufferPointer.init(_uncheckedBufferClass:AnyClass,minimumCapacity:Int)*/
    ManagedBufferPointer.prototype.init_uncheckedBufferClassAnyClassMinimumCapacityInt = function ($info, _uncheckedBufferClass, minimumCapacity) {
        throw 'unsupported method Swift.(file).ManagedBufferPointer.init(_uncheckedBufferClass:AnyClass,minimumCapacity:Int) in ' + this.constructor.name;
    };
    /*Swift.(file).ManagedBufferPointer.init(_:ManagedBuffer<Header, Element>)*/
    /*Swift.(file).ManagedBufferPointer.init(_:ManagedBuffer<Header, Element>)*/
    ManagedBufferPointer.prototype.initManagedBuffer = function ($info, buffer) {
        throw 'unsupported method Swift.(file).ManagedBufferPointer.init(_:ManagedBuffer<Header, Element>) in ' + this.constructor.name;
    };
    /*Swift.(file).ManagedBufferPointer.init(_:Int)*/
    /*Swift.(file).ManagedBufferPointer.init(_:Int)*/
    ManagedBufferPointer.prototype.initInt = function ($info, count) {
        var _this = this;
        _this.init_uncheckedBufferClassAnyClassMinimumCapacityInt({}, _BridgingBufferStorage, count);
        _this.withUnsafeMutablePointerToHeader({}, (function ($info, $0) { return $0.initializeTo({}, _create(_BridgingBufferHeader, 'initInt', {}, count)); }));
        return;
    };
    /*Swift.(file).ManagedBufferPointer.count*/
    ManagedBufferPointer.prototype.count$get = function () {
        var _this = this;
        return _this.header.count;
    };
    Object.defineProperty(ManagedBufferPointer.prototype, "count", {
        get: function () { return this.count$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).ManagedBufferPointer.subscript(_:Int)*/
    /*Swift.(file).ManagedBufferPointer.subscript(_:Int)*/
    ManagedBufferPointer.prototype.subscript$get = function ($info, i) {
        var _this = this;
        return _this.withUnsafeMutablePointerToElements({}, (function ($info, $0) { return $0.subscript$get({}, i); }));
    };
    /*Swift.(file).ManagedBufferPointer.baseAddress*/
    ManagedBufferPointer.prototype.baseAddress$get = function () {
        var _this = this;
        return _this.withUnsafeMutablePointerToElements({}, (function ($info, $0) { return $0; }));
    };
    Object.defineProperty(ManagedBufferPointer.prototype, "baseAddress", {
        get: function () { return this.baseAddress$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).ManagedBufferPointer.storage*/
    ManagedBufferPointer.prototype.storage$get = function () {
        var _this = this;
        return _this.buffer;
    };
    Object.defineProperty(ManagedBufferPointer.prototype, "storage", {
        get: function () { return this.storage$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).ManagedBufferPointer.init(_nativeObject:NativeObject)*/
    /*Swift.(file).ManagedBufferPointer.init(_nativeObject:NativeObject)*/
    ManagedBufferPointer.prototype.init_nativeObjectNativeObject = function ($info, buffer) {
        throw 'unsupported method Swift.(file).ManagedBufferPointer.init(_nativeObject:NativeObject) in ' + this.constructor.name;
    };
    /*Swift.(file).ManagedBufferPointer.header*/
    ManagedBufferPointer.prototype.header$get = function () {
        return this.header$internal;
    };
    Object.defineProperty(ManagedBufferPointer.prototype, "header", {
        get: function () { return this.header$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).ManagedBufferPointer.buffer*/
    ManagedBufferPointer.prototype.buffer$get = function () {
        throw 'unsupported variable Swift.(file).ManagedBufferPointer.buffer in ' + this.constructor.name;
    };
    Object.defineProperty(ManagedBufferPointer.prototype, "buffer", {
        get: function () { return this.buffer$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).ManagedBufferPointer.capacity*/
    ManagedBufferPointer.prototype.capacity$get = function () {
        var _this = this;
        return Int.infix_47({}, Int.infix_38_45({}, _this._capacityInBytes, ManagedBufferPointer._elementOffset), MemoryLayout.stride);
    };
    Object.defineProperty(ManagedBufferPointer.prototype, "capacity", {
        get: function () { return this.capacity$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).ManagedBufferPointer.withUnsafeMutablePointerToHeader(_:(UnsafeMutablePointer<Header>) throws -> R)*/
    /*Swift.(file).ManagedBufferPointer.withUnsafeMutablePointerToHeader(_:(UnsafeMutablePointer<Header>) throws -> R)*/
    ManagedBufferPointer.prototype.withUnsafeMutablePointerToHeader = function ($info, body) {
        var _this = this;
        return _this.withUnsafeMutablePointers({}, (function ($info, v, _) { return body({}, v); }));
    };
    /*Swift.(file).ManagedBufferPointer.withUnsafeMutablePointerToElements(_:(UnsafeMutablePointer<Element>) throws -> R)*/
    /*Swift.(file).ManagedBufferPointer.withUnsafeMutablePointerToElements(_:(UnsafeMutablePointer<Element>) throws -> R)*/
    ManagedBufferPointer.prototype.withUnsafeMutablePointerToElements = function ($info, body) {
        var _this = this;
        return _this.withUnsafeMutablePointers({}, (function ($info, $0, $1) { return body({}, $1); }));
    };
    /*Swift.(file).ManagedBufferPointer.withUnsafeMutablePointers(_:(UnsafeMutablePointer<Header>, UnsafeMutablePointer<Element>) throws -> R)*/
    /*Swift.(file).ManagedBufferPointer.withUnsafeMutablePointers(_:(UnsafeMutablePointer<Header>, UnsafeMutablePointer<Element>) throws -> R)*/
    ManagedBufferPointer.prototype.withUnsafeMutablePointers = function ($info, body) {
        var _this = this;
        var $defer = function () {
            _fixLifetime({}, _this._nativeBuffer);
        };
        var $result = (function () {
            try {
                ;
                return body({}, _this._headerPointer, _this._elementPointer);
            }
            catch ($error) {
                $defer({});
                throw $error;
            }
        })();
        $defer({});
        return $result;
    };
    /*Swift.(file).ManagedBufferPointer.isUniqueReference()*/
    /*Swift.(file).ManagedBufferPointer.isUniqueReference()*/
    ManagedBufferPointer.prototype.isUniqueReference = function ($info) {
        var _this = this;
        return _isUnique({}, { get: function () { return _this._nativeBuffer; }, set: function ($val) { return _this._nativeBuffer = $val; } });
    };
    /*Swift.(file).ManagedBufferPointer.==infix(_:ManagedBufferPointer<Header, Element>,_:ManagedBufferPointer<Header, Element>)*/
    /*Swift.(file).Equatable.==infix(_:Self,_:Self)*/
    ManagedBufferPointer.infix_61_61 = function ($info, lhs, rhs) {
        var _this = this;
        return UnsafeMutableRawPointer.infix_61_61({}, lhs._address, rhs._address);
    };
    ManagedBufferPointer.prototype.init$vars = function () {
    };
    ManagedBufferPointer.$struct = true;
    ManagedBufferPointer.$infoAddress = '';
    return ManagedBufferPointer;
}());
if (typeof Equatable$implementation != 'undefined')
    _mixin(ManagedBufferPointer, Equatable$implementation, false);
var MemoryLayout = /** @class */ (function () {
    function MemoryLayout() {
    }
    /*Swift.(file).MemoryLayout.size*/
    MemoryLayout.size$get = function () {
        throw 'unsupported variable Swift.(file).MemoryLayout.size in ' + this.constructor.name;
    };
    Object.defineProperty(MemoryLayout, "size", {
        get: function () { return this.size$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).MemoryLayout.stride*/
    MemoryLayout.stride$get = function () {
        throw 'unsupported variable Swift.(file).MemoryLayout.stride in ' + this.constructor.name;
    };
    Object.defineProperty(MemoryLayout, "stride", {
        get: function () { return this.stride$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).MemoryLayout.alignment*/
    MemoryLayout.alignment$get = function () {
        throw 'unsupported variable Swift.(file).MemoryLayout.alignment in ' + this.constructor.name;
    };
    Object.defineProperty(MemoryLayout, "alignment", {
        get: function () { return this.alignment$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).MemoryLayout.size(ofValue:T)*/
    /*Swift.(file).MemoryLayout.size(ofValue:T)*/
    MemoryLayout.sizeOfValue = function ($info, value) {
        var _this = this;
        return MemoryLayout.size;
    };
    /*Swift.(file).MemoryLayout.stride(ofValue:T)*/
    /*Swift.(file).MemoryLayout.stride(ofValue:T)*/
    MemoryLayout.strideOfValue = function ($info, value) {
        var _this = this;
        return MemoryLayout.stride;
    };
    /*Swift.(file).MemoryLayout.alignment(ofValue:T)*/
    /*Swift.(file).MemoryLayout.alignment(ofValue:T)*/
    MemoryLayout.alignmentOfValue = function ($info, value) {
        var _this = this;
        return MemoryLayout.alignment;
    };
    /*Swift.(file).MemoryLayout.offset(of:PartialKeyPath<T>)*/
    /*Swift.(file).MemoryLayout.offset(of:PartialKeyPath<T>)*/
    MemoryLayout.offsetOf = function ($info, key) {
        var _this = this;
        return /*derived_to_base_expr*/ key._storedInlineOffset;
    };
    MemoryLayout.prototype.init$vars = function () {
    };
    MemoryLayout.$infoAddress = '';
    return MemoryLayout;
}());
_mixin(MemoryLayout, _DefaultEnumImplementation, false);
var _SwiftNewtypeWrapper$implementation = /** @class */ (function () {
    function _SwiftNewtypeWrapper$implementation() {
    }
    /*Swift.(file)._SwiftNewtypeWrapper.hashValue*/
    _SwiftNewtypeWrapper$implementation.prototype.hashValue$get = function () {
        var _this = this;
        return _this.rawValue.hashValue;
    };
    Object.defineProperty(_SwiftNewtypeWrapper$implementation.prototype, "hashValue", {
        get: function () { return this.hashValue$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file)._SwiftNewtypeWrapper.hash(into:Hasher)*/
    /*Swift.(file)._SwiftNewtypeWrapper.hash(into:Hasher)*/
    _SwiftNewtypeWrapper$implementation.prototype.hashInto = function ($info, hasher$inout) {
        var _this = this;
        var hasher = hasher$inout.get();
        var $result = (function () {
            hasher.combine({ $setThis: function ($val) { return hasher = $val; } }, _this.rawValue);
        })();
        hasher$inout.set(hasher);
        return $result;
    };
    return _SwiftNewtypeWrapper$implementation;
}());
if (typeof RawRepresentable$implementation != 'undefined')
    _mixin(_SwiftNewtypeWrapper$implementation, RawRepresentable$implementation, false);
if (typeof _HasCustomAnyHashableRepresentation$implementation != 'undefined')
    _mixin(_SwiftNewtypeWrapper$implementation, _HasCustomAnyHashableRepresentation$implementation, false);
var _NewtypeWrapperAnyHashableBox = /** @class */ (function () {
    function _NewtypeWrapperAnyHashableBox() {
    }
    /*Swift.(file)._NewtypeWrapperAnyHashableBox.init(_:Base)*/
    /*Swift.(file)._NewtypeWrapperAnyHashableBox.init(_:Base)*/
    _NewtypeWrapperAnyHashableBox.prototype.init = function ($info, value) {
        throw 'unsupported method Swift.(file)._NewtypeWrapperAnyHashableBox.init(_:Base) in ' + this.constructor.name;
    };
    _NewtypeWrapperAnyHashableBox.prototype.init$vars = function () {
    };
    _NewtypeWrapperAnyHashableBox.$struct = true;
    _NewtypeWrapperAnyHashableBox.$infoAddress = '';
    return _NewtypeWrapperAnyHashableBox;
}());
if (typeof _AnyHashableBox$implementation != 'undefined')
    _mixin(_NewtypeWrapperAnyHashableBox, _AnyHashableBox$implementation, false);
var _SegmentSource$implementation = /** @class */ (function () {
    function _SegmentSource$implementation() {
    }
    /*Swift.(file)._SegmentSource.tryFill(into:UnsafeMutablePointer<_Normalization._SegmentOutputBuffer>)*/
    /*Swift.(file)._SegmentSource.tryFill(into:UnsafeMutablePointer<_Normalization._SegmentOutputBuffer>)*/
    _SegmentSource$implementation.prototype.tryFillInto = function ($info, output) {
        throw 'unsupported method Swift.(file)._SegmentSource.tryFill(into:UnsafeMutablePointer<_Normalization._SegmentOutputBuffer>) in ' + this.constructor.name;
    };
    return _SegmentSource$implementation;
}());
var _OptionalNilComparisonType = /** @class */ (function () {
    function _OptionalNilComparisonType() {
    }
    /*Swift.(file)._OptionalNilComparisonType.init(nilLiteral:())*/
    /*Swift.(file).ExpressibleByNilLiteral.init(nilLiteral:())*/
    _OptionalNilComparisonType.prototype.initNilLiteraltuple_type = function ($info, nilLiteral) {
    };
    _OptionalNilComparisonType.prototype.init$vars = function () {
    };
    _OptionalNilComparisonType.$struct = true;
    _OptionalNilComparisonType.$infoAddress = '';
    return _OptionalNilComparisonType;
}());
if (typeof ExpressibleByNilLiteral$implementation != 'undefined')
    _mixin(_OptionalNilComparisonType, ExpressibleByNilLiteral$implementation, false);
var TextOutputStream$implementation = /** @class */ (function () {
    function TextOutputStream$implementation() {
    }
    return TextOutputStream$implementation;
}());
var TextOutputStreamable$implementation = /** @class */ (function () {
    function TextOutputStreamable$implementation() {
    }
    return TextOutputStreamable$implementation;
}());
var CustomStringConvertible$implementation = /** @class */ (function () {
    function CustomStringConvertible$implementation() {
    }
    return CustomStringConvertible$implementation;
}());
var LosslessStringConvertible$implementation = /** @class */ (function () {
    function LosslessStringConvertible$implementation() {
    }
    return LosslessStringConvertible$implementation;
}());
if (typeof CustomStringConvertible$implementation != 'undefined')
    _mixin(LosslessStringConvertible$implementation, CustomStringConvertible$implementation, false);
var CustomDebugStringConvertible$implementation = /** @class */ (function () {
    function CustomDebugStringConvertible$implementation() {
    }
    return CustomDebugStringConvertible$implementation;
}());
var _Stdout = /** @class */ (function () {
    function _Stdout() {
    }
    /*Swift.(file)._Stdout.init()*/
    /*Swift.(file)._Stdout.init()*/
    _Stdout.prototype.init = function ($info) {
        throw 'unsupported method Swift.(file)._Stdout.init() in ' + this.constructor.name;
    };
    /*Swift.(file)._Stdout.write(_:String)*/
    /*Swift.(file).TextOutputStream.write(_:String)*/
    _Stdout.prototype.write = function ($info, string) {
        throw 'unsupported method Swift.(file)._Stdout.write(_:String) in ' + this.constructor.name;
    };
    _Stdout.prototype.init$vars = function () {
    };
    _Stdout.$struct = true;
    _Stdout.$infoAddress = '';
    return _Stdout;
}());
if (typeof TextOutputStream$implementation != 'undefined')
    _mixin(_Stdout, TextOutputStream$implementation, false);
var _TeeStream = /** @class */ (function () {
    function _TeeStream() {
    }
    /*Swift.(file)._TeeStream.init(left:L,right:R)*/
    /*Swift.(file)._TeeStream.init(left:L,right:R)*/
    _TeeStream.prototype.initLeftRight = function ($info, left, right) {
        throw 'unsupported method Swift.(file)._TeeStream.init(left:L,right:R) in ' + this.constructor.name;
    };
    /*Swift.(file)._TeeStream.left*/
    _TeeStream.prototype.left$get = function () {
        throw 'unsupported variable Swift.(file)._TeeStream.left in ' + this.constructor.name;
    };
    Object.defineProperty(_TeeStream.prototype, "left", {
        get: function () { return this.left$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file)._TeeStream.right*/
    _TeeStream.prototype.right$get = function () {
        throw 'unsupported variable Swift.(file)._TeeStream.right in ' + this.constructor.name;
    };
    Object.defineProperty(_TeeStream.prototype, "right", {
        get: function () { return this.right$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file)._TeeStream.write(_:String)*/
    /*Swift.(file).TextOutputStream.write(_:String)*/
    _TeeStream.prototype.write = function ($info, string) {
        throw 'unsupported method Swift.(file)._TeeStream.write(_:String) in ' + this.constructor.name;
    };
    _TeeStream.prototype.init$vars = function () {
    };
    _TeeStream.$struct = true;
    _TeeStream.$infoAddress = '';
    return _TeeStream;
}());
if (typeof TextOutputStream$implementation != 'undefined')
    _mixin(_TeeStream, TextOutputStream$implementation, false);
var RandomNumberGenerator$implementation = /** @class */ (function () {
    function RandomNumberGenerator$implementation() {
    }
    /*Swift.(file).RandomNumberGenerator.next()*/
    /*Swift.(file).RandomNumberGenerator.next()*/
    RandomNumberGenerator$implementation.prototype.next = function ($info) {
        var _this = this;
        return ((function () { throw '!unclarifiedGeneric:T'; })())._randomUsing({}, { get: function () { return _this; }, set: function ($val) { return $info.$setThis(_this = _cloneStruct($val)); } });
    };
    /*Swift.(file).RandomNumberGenerator.next(upperBound:T)*/
    /*Swift.(file).RandomNumberGenerator.next(upperBound:T)*/
    RandomNumberGenerator$implementation.prototype.nextUpperBound = function ($info, upperBound) {
        var _this = this;
        preconditionFileLine({}, function () { return ((function () { throw '!unclarifiedGeneric:T'; })()).infix_33_61({}, upperBound, 0); }, function () { return "upperBound cannot be zero."; }, '?3', '?3');
        var tmp = ((function () { throw '!unclarifiedGeneric:T'; })()).infix_43({}, ((function () { throw '!unclarifiedGeneric:T'; })()).infix_37({}, ((function () { throw '!unclarifiedGeneric:T'; })()).max, upperBound), _create(((function () { throw '!unclarifiedGeneric:T'; })()), 'initIntegerLiteral', {}, 1));
        var range = (((function () { throw '!unclarifiedGeneric:T'; })()).infix_61_61({}, tmp, upperBound) ? _create(((function () { throw '!unclarifiedGeneric:T'; })()), 'initIntegerLiteral', {}, 0) : tmp);
        var random = _create(((function () { throw '!unclarifiedGeneric:T'; })()), 'initIntegerLiteral', {}, 0);
        do {
            random = _this.next({ $setThis: function ($val) { return $info.$setThis(_this = _cloneStruct($val)); } });
        } while (((function () { throw '!unclarifiedGeneric:T'; })()).infix_60({}, random, range));
        return ((function () { throw '!unclarifiedGeneric:T'; })()).infix_37({}, random, upperBound);
    };
    return RandomNumberGenerator$implementation;
}());
var SystemRandomNumberGenerator = /** @class */ (function () {
    function SystemRandomNumberGenerator() {
    }
    /*Swift.(file).SystemRandomNumberGenerator.init()*/
    /*Swift.(file).SystemRandomNumberGenerator.init()*/
    SystemRandomNumberGenerator.prototype.init = function ($info) {
        var _this = this;
        return;
    };
    /*Swift.(file).SystemRandomNumberGenerator.next()*/
    /*Swift.(file).RandomNumberGenerator.next()*/
    SystemRandomNumberGenerator.prototype.next = function ($info) {
        var _this = this;
        return ((function () { throw '!unclarifiedGeneric:T'; })())._randomUsing({}, { get: function () { return _this; }, set: function ($val) { return $info.$setThis(_this = _cloneStruct($val)); } });
    };
    SystemRandomNumberGenerator.prototype.init$vars = function () {
    };
    SystemRandomNumberGenerator.$struct = true;
    SystemRandomNumberGenerator.$infoAddress = '';
    return SystemRandomNumberGenerator;
}());
if (typeof RandomNumberGenerator$implementation != 'undefined')
    _mixin(SystemRandomNumberGenerator, RandomNumberGenerator$implementation, false);
var RangeExpression$implementation = /** @class */ (function () {
    function RangeExpression$implementation() {
    }
    /*Swift.(file).RangeExpression.~=infix(_:Self,_:Self.Bound)*/
    /*Swift.(file).RangeExpression.~=infix(_:Self,_:Self.Bound)*/
    RangeExpression$implementation.infix_126_61 = function ($info, pattern, value) {
        var _this = this;
        return pattern.contains({}, value);
    };
    return RangeExpression$implementation;
}());
var PartialRangeUpTo = /** @class */ (function () {
    function PartialRangeUpTo() {
    }
    /*Swift.(file).PartialRangeUpTo.upperBound*/
    PartialRangeUpTo.prototype.upperBound$get = function () {
        throw 'unsupported variable Swift.(file).PartialRangeUpTo.upperBound in ' + this.constructor.name;
    };
    Object.defineProperty(PartialRangeUpTo.prototype, "upperBound", {
        get: function () { return this.upperBound$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).PartialRangeUpTo.init(_:Bound)*/
    /*Swift.(file).PartialRangeUpTo.init(_:Bound)*/
    PartialRangeUpTo.prototype.init = function ($info, upperBound) {
        throw 'unsupported method Swift.(file).PartialRangeUpTo.init(_:Bound) in ' + this.constructor.name;
    };
    /*Swift.(file).PartialRangeUpTo.relative(to:C)*/
    /*Swift.(file).RangeExpression.relative(to:C)*/
    PartialRangeUpTo.prototype.relativeTo = function ($info, collection) {
        var _this = this;
        return (_.arg0 = collection.startIndex).constructor.infix_46_46_60({}, _.arg0, _this.upperBound);
    };
    /*Swift.(file).PartialRangeUpTo.contains(_:Bound)*/
    /*Swift.(file).RangeExpression.contains(_:Self.Bound)*/
    PartialRangeUpTo.prototype.contains = function ($info, _element) {
        var _this = this;
        return (_.arg0 = _element).constructor.infix_60({}, _.arg0, _this.upperBound);
    };
    PartialRangeUpTo.prototype.init$vars = function () {
    };
    PartialRangeUpTo.$struct = true;
    PartialRangeUpTo.$infoAddress = '';
    return PartialRangeUpTo;
}());
if (typeof RangeExpression$implementation != 'undefined')
    _mixin(PartialRangeUpTo, RangeExpression$implementation, false);
var PartialRangeThrough = /** @class */ (function () {
    function PartialRangeThrough() {
    }
    /*Swift.(file).PartialRangeThrough.upperBound*/
    PartialRangeThrough.prototype.upperBound$get = function () {
        throw 'unsupported variable Swift.(file).PartialRangeThrough.upperBound in ' + this.constructor.name;
    };
    Object.defineProperty(PartialRangeThrough.prototype, "upperBound", {
        get: function () { return this.upperBound$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).PartialRangeThrough.init(_:Bound)*/
    /*Swift.(file).PartialRangeThrough.init(_:Bound)*/
    PartialRangeThrough.prototype.init = function ($info, upperBound) {
        throw 'unsupported method Swift.(file).PartialRangeThrough.init(_:Bound) in ' + this.constructor.name;
    };
    /*Swift.(file).PartialRangeThrough.relative(to:C)*/
    /*Swift.(file).RangeExpression.relative(to:C)*/
    PartialRangeThrough.prototype.relativeTo = function ($info, collection) {
        var _this = this;
        return (_.arg0 = collection.startIndex).constructor.infix_46_46_60({}, _.arg0, collection.indexAfter({}, _this.upperBound));
    };
    /*Swift.(file).PartialRangeThrough.contains(_:Bound)*/
    /*Swift.(file).RangeExpression.contains(_:Self.Bound)*/
    PartialRangeThrough.prototype.contains = function ($info, _element) {
        var _this = this;
        return (_.arg0 = _element).constructor.infix_60_61({}, _.arg0, _this.upperBound);
    };
    PartialRangeThrough.prototype.init$vars = function () {
    };
    PartialRangeThrough.$struct = true;
    PartialRangeThrough.$infoAddress = '';
    return PartialRangeThrough;
}());
if (typeof RangeExpression$implementation != 'undefined')
    _mixin(PartialRangeThrough, RangeExpression$implementation, false);
var UnboundedRange_ = /** @class */ (function () {
    function UnboundedRange_() {
    }
    /*Swift.(file).UnboundedRange_....postfix(_:UnboundedRange_)*/
    /*Swift.(file).UnboundedRange_....postfix(_:UnboundedRange_)*/
    UnboundedRange_.postfix_46_46_46 = function ($info, _) {
        /*return _...*/
    };
    UnboundedRange_.prototype.init$vars = function () {
    };
    UnboundedRange_.$infoAddress = '';
    return UnboundedRange_;
}());
_mixin(UnboundedRange_, _DefaultEnumImplementation, false);
var Result = /** @class */ (function () {
    function Result() {
    }
    Result.success = function () { return Object.assign(new Result(), __assign({ rawValue: "success" }, Array.from(arguments).slice(1))); };
    Result.failure = function () { return Object.assign(new Result(), __assign({ rawValue: "failure" }, Array.from(arguments).slice(1))); };
    /*Swift.(file).Result.map(_:(Success) -> NewSuccess)*/
    /*Swift.(file).Result.map(_:(Success) -> NewSuccess)*/
    Result.prototype.mapSwift = function ($info, transform) {
        var _this = this;
        var $match = _this;
        if ((($match.rawValue == Result.success().rawValue))) {
            var success = $match[0];
            return Result.success({}, transform({}, success));
        }
        else if ((($match.rawValue == Result.failure().rawValue))) {
            var failure = $match[0];
            return Result.failure({}, failure);
        }
    };
    /*Swift.(file).Result.mapError(_:(Failure) -> NewFailure)*/
    /*Swift.(file).Result.mapError(_:(Failure) -> NewFailure)*/
    Result.prototype.mapError = function ($info, transform) {
        var _this = this;
        var $match = _this;
        if ((($match.rawValue == Result.success().rawValue))) {
            var success = $match[0];
            return Result.success({}, success);
        }
        else if ((($match.rawValue == Result.failure().rawValue))) {
            var failure = $match[0];
            return Result.failure({}, transform({}, failure));
        }
    };
    /*Swift.(file).Result.flatMap(_:(Success) -> Result<NewSuccess, Failure>)*/
    /*Swift.(file).Result.flatMap(_:(Success) -> Result<NewSuccess, Failure>)*/
    Result.prototype.flatMap = function ($info, transform) {
        var _this = this;
        var $match = _this;
        if ((($match.rawValue == Result.success().rawValue))) {
            var success = $match[0];
            return transform({}, success);
        }
        else if ((($match.rawValue == Result.failure().rawValue))) {
            var failure = $match[0];
            return Result.failure({}, failure);
        }
    };
    /*Swift.(file).Result.flatMapError(_:(Failure) -> Result<Success, NewFailure>)*/
    /*Swift.(file).Result.flatMapError(_:(Failure) -> Result<Success, NewFailure>)*/
    Result.prototype.flatMapError = function ($info, transform) {
        var _this = this;
        var $match = _this;
        if ((($match.rawValue == Result.success().rawValue))) {
            var success = $match[0];
            return Result.success({}, success);
        }
        else if ((($match.rawValue == Result.failure().rawValue))) {
            var failure = $match[0];
            return transform({}, failure);
        }
    };
    /*Swift.(file).Result.get()*/
    /*Swift.(file).Result.get()*/
    Result.prototype.get = function ($info) {
        var _this = this;
        var $match = _this;
        if ((($match.rawValue == Result.success().rawValue))) {
            var success = $match[0];
            return success;
        }
        else if ((($match.rawValue == Result.failure().rawValue))) {
            var failure = $match[0];
            throw failure;
        }
    };
    /*Swift.(file).Result.init(catching:() throws -> Success)*/
    /*Swift.(file).Result.init(catching:() throws -> Success)*/
    Result.prototype.initCatchingfunction_type = function ($info, body) {
        var _this = this;
        try {
            $info.$setThis(_this = _cloneStruct(Result.success({}, body({}))));
        }
        catch (error) {
            if ((true)) {
                $info.$setThis(_this = _cloneStruct(Result.failure({}, error)));
            }
            else
                throw error;
        }
        ;
        return;
    };
    /*Swift.(file).Result.==(_:Result<Success, Failure>,_:Result<Success, Failure>)*/
    /*Swift.(file).Equatable.==infix(_:Self,_:Self)*/
    Result.infix_61_61 = function ($info, a, b) {
        return a == b;
    };
    /*Swift.(file).Result.hashValue*/
    Result.prototype.hashValue$get = function () {
        throw 'unsupported variable Swift.(file).Result.hashValue in ' + this.constructor.name;
    };
    Object.defineProperty(Result.prototype, "hashValue", {
        get: function () { return this.hashValue$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).Result.hash(into:Hasher)*/
    /*Swift.(file).Hashable.hash(into:Hasher)*/
    Result.prototype.hashInto = function ($info, hasher$inout) {
        throw 'unsupported method Swift.(file).Result.hash(into:Hasher) in ' + this.constructor.name;
    };
    Result.prototype.init$vars = function () {
    };
    Result.$infoAddress = '';
    return Result;
}());
if (typeof Equatable$implementation != 'undefined')
    _mixin(Result, Equatable$implementation, false);
if (typeof Hashable$implementation != 'undefined')
    _mixin(Result, Hashable$implementation, false);
_mixin(Result, _DefaultEnumImplementation, false);
var _Buffer32 = /** @class */ (function () {
    function _Buffer32() {
    }
    /*Swift.(file)._Buffer32.init()*/
    /*Swift.(file)._Buffer32.init()*/
    _Buffer32.prototype.init = function ($info) {
        throw 'unsupported method Swift.(file)._Buffer32.init() in ' + this.constructor.name;
    };
    /*Swift.(file)._Buffer32.withBytes(_:(UnsafeMutablePointer<UInt8>) throws -> Result)*/
    /*Swift.(file)._Buffer32.withBytes(_:(UnsafeMutablePointer<UInt8>) throws -> Result)*/
    _Buffer32.prototype.withBytes = function ($info, body) {
        throw 'unsupported method Swift.(file)._Buffer32.withBytes(_:(UnsafeMutablePointer<UInt8>) throws -> Result) in ' + this.constructor.name;
    };
    _Buffer32.prototype.init$vars = function () {
    };
    _Buffer32.$struct = true;
    _Buffer32.$infoAddress = '';
    return _Buffer32;
}());
var _Buffer72 = /** @class */ (function () {
    function _Buffer72() {
    }
    /*Swift.(file)._Buffer72.init()*/
    /*Swift.(file)._Buffer72.init()*/
    _Buffer72.prototype.init = function ($info) {
        throw 'unsupported method Swift.(file)._Buffer72.init() in ' + this.constructor.name;
    };
    /*Swift.(file)._Buffer72.withBytes(_:(UnsafeMutablePointer<UInt8>) throws -> Result)*/
    /*Swift.(file)._Buffer72.withBytes(_:(UnsafeMutablePointer<UInt8>) throws -> Result)*/
    _Buffer72.prototype.withBytes = function ($info, body) {
        throw 'unsupported method Swift.(file)._Buffer72.withBytes(_:(UnsafeMutablePointer<UInt8>) throws -> Result) in ' + this.constructor.name;
    };
    _Buffer72.prototype.init$vars = function () {
    };
    _Buffer72.$struct = true;
    _Buffer72.$infoAddress = '';
    return _Buffer72;
}());
var __SwiftNativeNSArray = /** @class */ (function () {
    function __SwiftNativeNSArray() {
    }
    /*Swift.(file).__SwiftNativeNSArray.init()*/
    /*Swift.(file).__SwiftNativeNSArray.init()*/
    __SwiftNativeNSArray.prototype.init = function ($info) {
        throw 'unsupported method Swift.(file).__SwiftNativeNSArray.init() in ' + this.constructor.name;
    };
    __SwiftNativeNSArray.prototype.init$vars = function () {
    };
    __SwiftNativeNSArray.$infoAddress = '';
    return __SwiftNativeNSArray;
}());
var __SwiftNativeNSDictionary = /** @class */ (function () {
    function __SwiftNativeNSDictionary() {
    }
    /*Swift.(file).__SwiftNativeNSDictionary.init()*/
    /*Swift.(file).__SwiftNativeNSDictionary.init()*/
    __SwiftNativeNSDictionary.prototype.init = function ($info) {
        throw 'unsupported method Swift.(file).__SwiftNativeNSDictionary.init() in ' + this.constructor.name;
    };
    __SwiftNativeNSDictionary.prototype.init$vars = function () {
    };
    __SwiftNativeNSDictionary.$infoAddress = '';
    return __SwiftNativeNSDictionary;
}());
var __SwiftNativeNSSet = /** @class */ (function () {
    function __SwiftNativeNSSet() {
    }
    /*Swift.(file).__SwiftNativeNSSet.init()*/
    /*Swift.(file).__SwiftNativeNSSet.init()*/
    __SwiftNativeNSSet.prototype.init = function ($info) {
        throw 'unsupported method Swift.(file).__SwiftNativeNSSet.init() in ' + this.constructor.name;
    };
    __SwiftNativeNSSet.prototype.init$vars = function () {
    };
    __SwiftNativeNSSet.$infoAddress = '';
    return __SwiftNativeNSSet;
}());
var __SwiftNativeNSEnumerator = /** @class */ (function () {
    function __SwiftNativeNSEnumerator() {
    }
    /*Swift.(file).__SwiftNativeNSEnumerator.init()*/
    /*Swift.(file).__SwiftNativeNSEnumerator.init()*/
    __SwiftNativeNSEnumerator.prototype.init = function ($info) {
        throw 'unsupported method Swift.(file).__SwiftNativeNSEnumerator.init() in ' + this.constructor.name;
    };
    __SwiftNativeNSEnumerator.prototype.init$vars = function () {
    };
    __SwiftNativeNSEnumerator.$infoAddress = '';
    return __SwiftNativeNSEnumerator;
}());
var __SwiftNativeNSData = /** @class */ (function () {
    function __SwiftNativeNSData() {
    }
    /*Swift.(file).__SwiftNativeNSData.init()*/
    /*Swift.(file).__SwiftNativeNSData.init()*/
    __SwiftNativeNSData.prototype.init = function ($info) {
        throw 'unsupported method Swift.(file).__SwiftNativeNSData.init() in ' + this.constructor.name;
    };
    __SwiftNativeNSData.prototype.init$vars = function () {
    };
    __SwiftNativeNSData.$infoAddress = '';
    return __SwiftNativeNSData;
}());
var __stdlib_ReturnAutoreleasedDummy = /** @class */ (function () {
    function __stdlib_ReturnAutoreleasedDummy() {
    }
    /*Swift.(file).__stdlib_ReturnAutoreleasedDummy.init()*/
    /*Swift.(file).__stdlib_ReturnAutoreleasedDummy.init()*/
    __stdlib_ReturnAutoreleasedDummy.prototype.init = function ($info) {
        throw 'unsupported method Swift.(file).__stdlib_ReturnAutoreleasedDummy.init() in ' + this.constructor.name;
    };
    /*Swift.(file).__stdlib_ReturnAutoreleasedDummy.returnsAutoreleased(_:AnyObject)*/
    /*Swift.(file).__stdlib_ReturnAutoreleasedDummy.returnsAutoreleased(_:AnyObject)*/
    __stdlib_ReturnAutoreleasedDummy.prototype.returnsAutoreleased = function ($info, x) {
        throw 'unsupported method Swift.(file).__stdlib_ReturnAutoreleasedDummy.returnsAutoreleased(_:AnyObject) in ' + this.constructor.name;
    };
    __stdlib_ReturnAutoreleasedDummy.prototype.init$vars = function () {
    };
    __stdlib_ReturnAutoreleasedDummy.$infoAddress = '';
    return __stdlib_ReturnAutoreleasedDummy;
}());
var _RuntimeFunctionCounters = /** @class */ (function () {
    function _RuntimeFunctionCounters() {
    }
    /*Swift.(file)._RuntimeFunctionCounters.runtimeFunctionNames*/
    _RuntimeFunctionCounters.runtimeFunctionNames$get = function () {
        throw 'unsupported variable Swift.(file)._RuntimeFunctionCounters.runtimeFunctionNames in ' + this.constructor.name;
    };
    Object.defineProperty(_RuntimeFunctionCounters, "runtimeFunctionNames", {
        get: function () { return this.runtimeFunctionNames$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file)._RuntimeFunctionCounters.runtimeFunctionCountersOffsets*/
    _RuntimeFunctionCounters.runtimeFunctionCountersOffsets$get = function () {
        throw 'unsupported variable Swift.(file)._RuntimeFunctionCounters.runtimeFunctionCountersOffsets in ' + this.constructor.name;
    };
    Object.defineProperty(_RuntimeFunctionCounters, "runtimeFunctionCountersOffsets", {
        get: function () { return this.runtimeFunctionCountersOffsets$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file)._RuntimeFunctionCounters.numRuntimeFunctionCounters*/
    _RuntimeFunctionCounters.numRuntimeFunctionCounters$get = function () {
        throw 'unsupported variable Swift.(file)._RuntimeFunctionCounters.numRuntimeFunctionCounters in ' + this.constructor.name;
    };
    Object.defineProperty(_RuntimeFunctionCounters, "numRuntimeFunctionCounters", {
        get: function () { return this.numRuntimeFunctionCounters$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file)._RuntimeFunctionCounters.runtimeFunctionNameToIndex*/
    _RuntimeFunctionCounters.runtimeFunctionNameToIndex$get = function () {
        throw 'unsupported variable Swift.(file)._RuntimeFunctionCounters.runtimeFunctionNameToIndex in ' + this.constructor.name;
    };
    Object.defineProperty(_RuntimeFunctionCounters, "runtimeFunctionNameToIndex", {
        get: function () { return this.runtimeFunctionNameToIndex$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file)._RuntimeFunctionCounters.getRuntimeFunctionNames()*/
    /*Swift.(file)._RuntimeFunctionCounters.getRuntimeFunctionNames()*/
    _RuntimeFunctionCounters.getRuntimeFunctionNames = function ($info) {
        throw 'unsupported method Swift.(file)._RuntimeFunctionCounters.getRuntimeFunctionNames() in ' + this.constructor.name;
    };
    /*Swift.(file)._RuntimeFunctionCounters.getRuntimeFunctionCountersOffsets()*/
    /*Swift.(file)._RuntimeFunctionCounters.getRuntimeFunctionCountersOffsets()*/
    _RuntimeFunctionCounters.getRuntimeFunctionCountersOffsets = function ($info) {
        throw 'unsupported method Swift.(file)._RuntimeFunctionCounters.getRuntimeFunctionCountersOffsets() in ' + this.constructor.name;
    };
    /*Swift.(file)._RuntimeFunctionCounters.getNumRuntimeFunctionCounters()*/
    /*Swift.(file)._RuntimeFunctionCounters.getNumRuntimeFunctionCounters()*/
    _RuntimeFunctionCounters.getNumRuntimeFunctionCounters = function ($info) {
        throw 'unsupported method Swift.(file)._RuntimeFunctionCounters.getNumRuntimeFunctionCounters() in ' + this.constructor.name;
    };
    /*Swift.(file)._RuntimeFunctionCounters.dumpObjectsRuntimeFunctionPointers()*/
    /*Swift.(file)._RuntimeFunctionCounters.dumpObjectsRuntimeFunctionPointers()*/
    _RuntimeFunctionCounters.dumpObjectsRuntimeFunctionPointers = function ($info) {
        throw 'unsupported method Swift.(file)._RuntimeFunctionCounters.dumpObjectsRuntimeFunctionPointers() in ' + this.constructor.name;
    };
    /*Swift.(file)._RuntimeFunctionCounters.setGlobalRuntimeFunctionCountersUpdateHandler(handler:_RuntimeFunctionCounters.RuntimeFunctionCountersUpdateHandler?)*/
    /*Swift.(file)._RuntimeFunctionCounters.setGlobalRuntimeFunctionCountersUpdateHandler(handler:_RuntimeFunctionCounters.RuntimeFunctionCountersUpdateHandler?)*/
    _RuntimeFunctionCounters.setGlobalRuntimeFunctionCountersUpdateHandlerHandler = function ($info, handler) {
        throw 'unsupported method Swift.(file)._RuntimeFunctionCounters.setGlobalRuntimeFunctionCountersUpdateHandler(handler:_RuntimeFunctionCounters.RuntimeFunctionCountersUpdateHandler?) in ' + this.constructor.name;
    };
    /*Swift.(file)._RuntimeFunctionCounters.collectAllReferencesInsideObject(_:Any)*/
    /*Swift.(file)._RuntimeFunctionCounters.collectAllReferencesInsideObject(_:Any)*/
    _RuntimeFunctionCounters.collectAllReferencesInsideObject = function ($info, value) {
        throw 'unsupported method Swift.(file)._RuntimeFunctionCounters.collectAllReferencesInsideObject(_:Any) in ' + this.constructor.name;
    };
    /*Swift.(file)._RuntimeFunctionCounters.getRuntimeFunctionNameToIndex()*/
    /*Swift.(file)._RuntimeFunctionCounters.getRuntimeFunctionNameToIndex()*/
    _RuntimeFunctionCounters.getRuntimeFunctionNameToIndex = function ($info) {
        throw 'unsupported method Swift.(file)._RuntimeFunctionCounters.getRuntimeFunctionNameToIndex() in ' + this.constructor.name;
    };
    /*Swift.(file)._RuntimeFunctionCounters.init()*/
    /*Swift.(file)._RuntimeFunctionCounters.init()*/
    _RuntimeFunctionCounters.prototype.init = function ($info) {
        throw 'unsupported method Swift.(file)._RuntimeFunctionCounters.init() in ' + this.constructor.name;
    };
    /*Swift.(file)._RuntimeFunctionCounters.getObjectRuntimeFunctionCounters(_:UnsafeRawPointer,_:_RuntimeFunctionCountersState)*/
    /*Swift.(file)._RuntimeFunctionCounters.getObjectRuntimeFunctionCounters(_:UnsafeRawPointer,_:_RuntimeFunctionCountersState)*/
    _RuntimeFunctionCounters.getObjectRuntimeFunctionCounters = function ($info, object, result$inout) {
        throw 'unsupported method Swift.(file)._RuntimeFunctionCounters.getObjectRuntimeFunctionCounters(_:UnsafeRawPointer,_:_RuntimeFunctionCountersState) in ' + this.constructor.name;
    };
    /*Swift.(file)._RuntimeFunctionCounters.getGlobalRuntimeFunctionCounters(_:_RuntimeFunctionCountersState)*/
    /*Swift.(file)._RuntimeFunctionCounters.getGlobalRuntimeFunctionCounters(_:_RuntimeFunctionCountersState)*/
    _RuntimeFunctionCounters.getGlobalRuntimeFunctionCounters = function ($info, result$inout) {
        throw 'unsupported method Swift.(file)._RuntimeFunctionCounters.getGlobalRuntimeFunctionCounters(_:_RuntimeFunctionCountersState) in ' + this.constructor.name;
    };
    /*Swift.(file)._RuntimeFunctionCounters.setGlobalRuntimeFunctionCounters(_:_RuntimeFunctionCountersState)*/
    /*Swift.(file)._RuntimeFunctionCounters.setGlobalRuntimeFunctionCounters(_:_RuntimeFunctionCountersState)*/
    _RuntimeFunctionCounters.setGlobalRuntimeFunctionCounters = function ($info, state$inout) {
        throw 'unsupported method Swift.(file)._RuntimeFunctionCounters.setGlobalRuntimeFunctionCounters(_:_RuntimeFunctionCountersState) in ' + this.constructor.name;
    };
    /*Swift.(file)._RuntimeFunctionCounters.setObjectRuntimeFunctionCounters(_:UnsafeRawPointer,_:_RuntimeFunctionCountersState)*/
    /*Swift.(file)._RuntimeFunctionCounters.setObjectRuntimeFunctionCounters(_:UnsafeRawPointer,_:_RuntimeFunctionCountersState)*/
    _RuntimeFunctionCounters.setObjectRuntimeFunctionCounters = function ($info, object, state$inout) {
        throw 'unsupported method Swift.(file)._RuntimeFunctionCounters.setObjectRuntimeFunctionCounters(_:UnsafeRawPointer,_:_RuntimeFunctionCountersState) in ' + this.constructor.name;
    };
    /*Swift.(file)._RuntimeFunctionCounters.setGlobalRuntimeFunctionCountersMode(enable:Bool)*/
    /*Swift.(file)._RuntimeFunctionCounters.setGlobalRuntimeFunctionCountersMode(enable:Bool)*/
    _RuntimeFunctionCounters.setGlobalRuntimeFunctionCountersModeEnable = function ($info, enable) {
        throw 'unsupported method Swift.(file)._RuntimeFunctionCounters.setGlobalRuntimeFunctionCountersMode(enable:Bool) in ' + this.constructor.name;
    };
    /*Swift.(file)._RuntimeFunctionCounters.setPerObjectRuntimeFunctionCountersMode(enable:Bool)*/
    /*Swift.(file)._RuntimeFunctionCounters.setPerObjectRuntimeFunctionCountersMode(enable:Bool)*/
    _RuntimeFunctionCounters.setPerObjectRuntimeFunctionCountersModeEnable = function ($info, enable) {
        throw 'unsupported method Swift.(file)._RuntimeFunctionCounters.setPerObjectRuntimeFunctionCountersMode(enable:Bool) in ' + this.constructor.name;
    };
    /*Swift.(file)._RuntimeFunctionCounters.enableRuntimeFunctionCountersUpdates(mode:(globalMode: Bool, perObjectMode: Bool))*/
    /*Swift.(file)._RuntimeFunctionCounters.enableRuntimeFunctionCountersUpdates(mode:(globalMode: Bool, perObjectMode: Bool))*/
    _RuntimeFunctionCounters.enableRuntimeFunctionCountersUpdatesMode = function ($info, mode) {
        throw 'unsupported method Swift.(file)._RuntimeFunctionCounters.enableRuntimeFunctionCountersUpdates(mode:(globalMode: Bool, perObjectMode: Bool)) in ' + this.constructor.name;
    };
    /*Swift.(file)._RuntimeFunctionCounters.disableRuntimeFunctionCountersUpdates()*/
    /*Swift.(file)._RuntimeFunctionCounters.disableRuntimeFunctionCountersUpdates()*/
    _RuntimeFunctionCounters.disableRuntimeFunctionCountersUpdates = function ($info) {
        throw 'unsupported method Swift.(file)._RuntimeFunctionCounters.disableRuntimeFunctionCountersUpdates() in ' + this.constructor.name;
    };
    _RuntimeFunctionCounters.prototype.init$vars = function () {
    };
    _RuntimeFunctionCounters.$struct = true;
    _RuntimeFunctionCounters.$infoAddress = '';
    return _RuntimeFunctionCounters;
}());
var _RuntimeFunctionCountersStats$implementation = /** @class */ (function () {
    function _RuntimeFunctionCountersStats$implementation() {
    }
    /*Swift.(file)._RuntimeFunctionCountersStats.dump(skipUnchanged:Bool)*/
    /*Swift.(file)._RuntimeFunctionCountersStats.dump(skipUnchanged:Bool)*/
    _RuntimeFunctionCountersStats$implementation.prototype.dumpSkipUnchanged = function ($info, skipUnchanged) {
        throw 'unsupported method Swift.(file)._RuntimeFunctionCountersStats.dump(skipUnchanged:Bool) in ' + this.constructor.name;
    };
    /*Swift.(file)._RuntimeFunctionCountersStats.dumpDiff(_:Self,skipUnchanged:Bool)*/
    /*Swift.(file)._RuntimeFunctionCountersStats.dumpDiff(_:Self,skipUnchanged:Bool)*/
    _RuntimeFunctionCountersStats$implementation.prototype.dumpDiffSkipUnchanged = function ($info, after, skipUnchanged) {
        throw 'unsupported method Swift.(file)._RuntimeFunctionCountersStats.dumpDiff(_:Self,skipUnchanged:Bool) in ' + this.constructor.name;
    };
    /*Swift.(file)._RuntimeFunctionCountersStats.debugDescription*/
    _RuntimeFunctionCountersStats$implementation.prototype.debugDescription$get = function () {
        throw 'unsupported variable Swift.(file)._RuntimeFunctionCountersStats.debugDescription in ' + this.constructor.name;
    };
    Object.defineProperty(_RuntimeFunctionCountersStats$implementation.prototype, "debugDescription", {
        get: function () { return this.debugDescription$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file)._RuntimeFunctionCountersStats.dump(skipUnchanged:Bool,to:T)*/
    /*Swift.(file)._RuntimeFunctionCountersStats.dump(skipUnchanged:Bool,to:T)*/
    _RuntimeFunctionCountersStats$implementation.prototype.dumpSkipUnchangedTo = function ($info, skipUnchanged, to$inout) {
        throw 'unsupported method Swift.(file)._RuntimeFunctionCountersStats.dump(skipUnchanged:Bool,to:T) in ' + this.constructor.name;
    };
    /*Swift.(file)._RuntimeFunctionCountersStats.dumpDiff(_:Self,skipUnchanged:Bool,to:T)*/
    /*Swift.(file)._RuntimeFunctionCountersStats.dumpDiff(_:Self,skipUnchanged:Bool,to:T)*/
    _RuntimeFunctionCountersStats$implementation.prototype.dumpDiffSkipUnchangedTo = function ($info, after, skipUnchanged, to$inout) {
        throw 'unsupported method Swift.(file)._RuntimeFunctionCountersStats.dumpDiff(_:Self,skipUnchanged:Bool,to:T) in ' + this.constructor.name;
    };
    /*Swift.(file)._RuntimeFunctionCountersStats.diff(_:Self)*/
    /*Swift.(file)._RuntimeFunctionCountersStats.diff(_:Self)*/
    _RuntimeFunctionCountersStats$implementation.prototype.diff = function ($info, other) {
        throw 'unsupported method Swift.(file)._RuntimeFunctionCountersStats.diff(_:Self) in ' + this.constructor.name;
    };
    return _RuntimeFunctionCountersStats$implementation;
}());
if (typeof CustomDebugStringConvertible$implementation != 'undefined')
    _mixin(_RuntimeFunctionCountersStats$implementation, CustomDebugStringConvertible$implementation, false);
var _RuntimeFunctionCountersState = /** @class */ (function () {
    function _RuntimeFunctionCountersState() {
    }
    /*Swift.(file)._RuntimeFunctionCountersState.counters*/
    _RuntimeFunctionCountersState.prototype.counters$get = function () {
        throw 'unsupported variable Swift.(file)._RuntimeFunctionCountersState.counters in ' + this.constructor.name;
    };
    Object.defineProperty(_RuntimeFunctionCountersState.prototype, "counters", {
        get: function () { return this.counters$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file)._RuntimeFunctionCountersState.subscript(_:String)*/
    /*Swift.(file)._RuntimeFunctionCountersStats.subscript(_:String)*/
    _RuntimeFunctionCountersState.prototype.subscript$get = function ($info, counterName) {
        throw 'unsupported method Swift.(file)._RuntimeFunctionCountersState.subscript(_:String) in ' + this.constructor.name;
    }; /*Swift.(file)._RuntimeFunctionCountersState.subscript(_:String)*/
    /*Swift.(file)._RuntimeFunctionCountersStats.subscript(_:String)*/
    _RuntimeFunctionCountersState.prototype.subscript$set = function ($info, newValue, counterName) {
        throw 'unsupported method Swift.(file)._RuntimeFunctionCountersState.subscript(_:String) in ' + this.constructor.name;
    };
    /*Swift.(file)._RuntimeFunctionCountersState.subscript(_:Int)*/
    /*Swift.(file)._RuntimeFunctionCountersStats.subscript(_:Int)*/
    _RuntimeFunctionCountersState.prototype.subscript$get = function ($info, index) {
        throw 'unsupported method Swift.(file)._RuntimeFunctionCountersState.subscript(_:Int) in ' + this.constructor.name;
    }; /*Swift.(file)._RuntimeFunctionCountersState.subscript(_:Int)*/
    /*Swift.(file)._RuntimeFunctionCountersStats.subscript(_:Int)*/
    _RuntimeFunctionCountersState.prototype.subscript$set = function ($info, newValue, index) {
        throw 'unsupported method Swift.(file)._RuntimeFunctionCountersState.subscript(_:Int) in ' + this.constructor.name;
    };
    /*Swift.(file)._RuntimeFunctionCountersState.init(counters:_RuntimeFunctionCountersState.Counters)*/
    /*Swift.(file)._RuntimeFunctionCountersState.init(counters:_RuntimeFunctionCountersState.Counters)*/
    _RuntimeFunctionCountersState.prototype.initCounters_RuntimeFunctionCountersStateCounters = function ($info, counters) {
        throw 'unsupported method Swift.(file)._RuntimeFunctionCountersState.init(counters:_RuntimeFunctionCountersState.Counters) in ' + this.constructor.name;
    };
    /*Swift.(file)._RuntimeFunctionCountersState.init()*/
    /*Swift.(file)._RuntimeFunctionCountersStats.init()*/
    _RuntimeFunctionCountersState.prototype.init = function ($info) {
        throw 'unsupported method Swift.(file)._RuntimeFunctionCountersState.init() in ' + this.constructor.name;
    };
    _RuntimeFunctionCountersState.prototype.init$vars = function () {
    };
    _RuntimeFunctionCountersState.$struct = true;
    _RuntimeFunctionCountersState.$infoAddress = '';
    return _RuntimeFunctionCountersState;
}());
if (typeof _RuntimeFunctionCountersStats$implementation != 'undefined')
    _mixin(_RuntimeFunctionCountersState, _RuntimeFunctionCountersStats$implementation, false);
var _GlobalRuntimeFunctionCountersState = /** @class */ (function () {
    function _GlobalRuntimeFunctionCountersState() {
    }
    /*Swift.(file)._GlobalRuntimeFunctionCountersState.state*/
    _GlobalRuntimeFunctionCountersState.prototype.state$get = function () {
        throw 'unsupported variable Swift.(file)._GlobalRuntimeFunctionCountersState.state in ' + this.constructor.name;
    };
    Object.defineProperty(_GlobalRuntimeFunctionCountersState.prototype, "state", {
        get: function () { return this.state$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file)._GlobalRuntimeFunctionCountersState.init()*/
    /*Swift.(file)._RuntimeFunctionCountersStats.init()*/
    _GlobalRuntimeFunctionCountersState.prototype.init = function ($info) {
        throw 'unsupported method Swift.(file)._GlobalRuntimeFunctionCountersState.init() in ' + this.constructor.name;
    };
    /*Swift.(file)._GlobalRuntimeFunctionCountersState.getGlobalRuntimeFunctionCounters()*/
    /*Swift.(file)._GlobalRuntimeFunctionCountersState.getGlobalRuntimeFunctionCounters()*/
    _GlobalRuntimeFunctionCountersState.prototype.getGlobalRuntimeFunctionCounters = function ($info) {
        throw 'unsupported method Swift.(file)._GlobalRuntimeFunctionCountersState.getGlobalRuntimeFunctionCounters() in ' + this.constructor.name;
    };
    /*Swift.(file)._GlobalRuntimeFunctionCountersState.setGlobalRuntimeFunctionCounters()*/
    /*Swift.(file)._GlobalRuntimeFunctionCountersState.setGlobalRuntimeFunctionCounters()*/
    _GlobalRuntimeFunctionCountersState.prototype.setGlobalRuntimeFunctionCounters = function ($info) {
        throw 'unsupported method Swift.(file)._GlobalRuntimeFunctionCountersState.setGlobalRuntimeFunctionCounters() in ' + this.constructor.name;
    };
    /*Swift.(file)._GlobalRuntimeFunctionCountersState.subscript(_:String)*/
    /*Swift.(file)._RuntimeFunctionCountersStats.subscript(_:String)*/
    _GlobalRuntimeFunctionCountersState.prototype.subscript$get = function ($info, index) {
        throw 'unsupported method Swift.(file)._GlobalRuntimeFunctionCountersState.subscript(_:String) in ' + this.constructor.name;
    }; /*Swift.(file)._GlobalRuntimeFunctionCountersState.subscript(_:String)*/
    /*Swift.(file)._RuntimeFunctionCountersStats.subscript(_:String)*/
    _GlobalRuntimeFunctionCountersState.prototype.subscript$set = function ($info, newValue, index) {
        throw 'unsupported method Swift.(file)._GlobalRuntimeFunctionCountersState.subscript(_:String) in ' + this.constructor.name;
    };
    /*Swift.(file)._GlobalRuntimeFunctionCountersState.subscript(_:Int)*/
    /*Swift.(file)._RuntimeFunctionCountersStats.subscript(_:Int)*/
    _GlobalRuntimeFunctionCountersState.prototype.subscript$get = function ($info, index) {
        throw 'unsupported method Swift.(file)._GlobalRuntimeFunctionCountersState.subscript(_:Int) in ' + this.constructor.name;
    }; /*Swift.(file)._GlobalRuntimeFunctionCountersState.subscript(_:Int)*/
    /*Swift.(file)._RuntimeFunctionCountersStats.subscript(_:Int)*/
    _GlobalRuntimeFunctionCountersState.prototype.subscript$set = function ($info, newValue, index) {
        throw 'unsupported method Swift.(file)._GlobalRuntimeFunctionCountersState.subscript(_:Int) in ' + this.constructor.name;
    };
    _GlobalRuntimeFunctionCountersState.prototype.init$vars = function () {
    };
    _GlobalRuntimeFunctionCountersState.$struct = true;
    _GlobalRuntimeFunctionCountersState.$infoAddress = '';
    return _GlobalRuntimeFunctionCountersState;
}());
if (typeof _RuntimeFunctionCountersStats$implementation != 'undefined')
    _mixin(_GlobalRuntimeFunctionCountersState, _RuntimeFunctionCountersStats$implementation, false);
var _ObjectRuntimeFunctionCountersState = /** @class */ (function () {
    function _ObjectRuntimeFunctionCountersState() {
    }
    /*Swift.(file)._ObjectRuntimeFunctionCountersState.state*/
    _ObjectRuntimeFunctionCountersState.prototype.state$get = function () {
        throw 'unsupported variable Swift.(file)._ObjectRuntimeFunctionCountersState.state in ' + this.constructor.name;
    };
    Object.defineProperty(_ObjectRuntimeFunctionCountersState.prototype, "state", {
        get: function () { return this.state$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file)._ObjectRuntimeFunctionCountersState.init(_:UnsafeRawPointer)*/
    /*Swift.(file)._ObjectRuntimeFunctionCountersState.init(_:UnsafeRawPointer)*/
    _ObjectRuntimeFunctionCountersState.prototype.initUnsafeRawPointer = function ($info, p) {
        throw 'unsupported method Swift.(file)._ObjectRuntimeFunctionCountersState.init(_:UnsafeRawPointer) in ' + this.constructor.name;
    };
    /*Swift.(file)._ObjectRuntimeFunctionCountersState.init()*/
    /*Swift.(file)._RuntimeFunctionCountersStats.init()*/
    _ObjectRuntimeFunctionCountersState.prototype.init = function ($info) {
        throw 'unsupported method Swift.(file)._ObjectRuntimeFunctionCountersState.init() in ' + this.constructor.name;
    };
    /*Swift.(file)._ObjectRuntimeFunctionCountersState.getObjectRuntimeFunctionCounters(_:UnsafeRawPointer)*/
    /*Swift.(file)._ObjectRuntimeFunctionCountersState.getObjectRuntimeFunctionCounters(_:UnsafeRawPointer)*/
    _ObjectRuntimeFunctionCountersState.prototype.getObjectRuntimeFunctionCounters = function ($info, o) {
        throw 'unsupported method Swift.(file)._ObjectRuntimeFunctionCountersState.getObjectRuntimeFunctionCounters(_:UnsafeRawPointer) in ' + this.constructor.name;
    };
    /*Swift.(file)._ObjectRuntimeFunctionCountersState.setObjectRuntimeFunctionCounters(_:UnsafeRawPointer)*/
    /*Swift.(file)._ObjectRuntimeFunctionCountersState.setObjectRuntimeFunctionCounters(_:UnsafeRawPointer)*/
    _ObjectRuntimeFunctionCountersState.prototype.setObjectRuntimeFunctionCounters = function ($info, o) {
        throw 'unsupported method Swift.(file)._ObjectRuntimeFunctionCountersState.setObjectRuntimeFunctionCounters(_:UnsafeRawPointer) in ' + this.constructor.name;
    };
    /*Swift.(file)._ObjectRuntimeFunctionCountersState.subscript(_:String)*/
    /*Swift.(file)._RuntimeFunctionCountersStats.subscript(_:String)*/
    _ObjectRuntimeFunctionCountersState.prototype.subscript$get = function ($info, index) {
        throw 'unsupported method Swift.(file)._ObjectRuntimeFunctionCountersState.subscript(_:String) in ' + this.constructor.name;
    }; /*Swift.(file)._ObjectRuntimeFunctionCountersState.subscript(_:String)*/
    /*Swift.(file)._RuntimeFunctionCountersStats.subscript(_:String)*/
    _ObjectRuntimeFunctionCountersState.prototype.subscript$set = function ($info, newValue, index) {
        throw 'unsupported method Swift.(file)._ObjectRuntimeFunctionCountersState.subscript(_:String) in ' + this.constructor.name;
    };
    /*Swift.(file)._ObjectRuntimeFunctionCountersState.subscript(_:Int)*/
    /*Swift.(file)._RuntimeFunctionCountersStats.subscript(_:Int)*/
    _ObjectRuntimeFunctionCountersState.prototype.subscript$get = function ($info, index) {
        throw 'unsupported method Swift.(file)._ObjectRuntimeFunctionCountersState.subscript(_:Int) in ' + this.constructor.name;
    }; /*Swift.(file)._ObjectRuntimeFunctionCountersState.subscript(_:Int)*/
    /*Swift.(file)._RuntimeFunctionCountersStats.subscript(_:Int)*/
    _ObjectRuntimeFunctionCountersState.prototype.subscript$set = function ($info, newValue, index) {
        throw 'unsupported method Swift.(file)._ObjectRuntimeFunctionCountersState.subscript(_:Int) in ' + this.constructor.name;
    };
    _ObjectRuntimeFunctionCountersState.prototype.init$vars = function () {
    };
    _ObjectRuntimeFunctionCountersState.$struct = true;
    _ObjectRuntimeFunctionCountersState.$infoAddress = '';
    return _ObjectRuntimeFunctionCountersState;
}());
if (typeof _RuntimeFunctionCountersStats$implementation != 'undefined')
    _mixin(_ObjectRuntimeFunctionCountersState, _RuntimeFunctionCountersStats$implementation, false);
var IteratorProtocol$implementation = /** @class */ (function () {
    function IteratorProtocol$implementation() {
    }
    return IteratorProtocol$implementation;
}());
var Sequence$implementation = /** @class */ (function () {
    function Sequence$implementation() {
    }
    /*Swift.(file).Sequence.shuffled(using:T)*/
    /*Swift.(file).Sequence.shuffled(using:T)*/
    Sequence$implementation.prototype.shuffledUsing = function ($info, generator$inout) {
        var _this = this;
        var generator = generator$inout.get();
        var $result = (function () {
            var result = _create(ContiguousArray, 'initBuffer', {}, _this);
            result.shuffleUsing({ $setThis: function ($val) { return result = $val; } }, { get: function () { return generator; }, set: function ($val) { return generator = $val; } });
            return _create(Array, 'initBuffer', {}, result);
        })();
        generator$inout.set(generator);
        return $result;
    };
    /*Swift.(file).Sequence.shuffled()*/
    /*Swift.(file).Sequence.shuffled()*/
    Sequence$implementation.prototype.shuffled = function ($info) {
        var _this = this;
        var g = _create(SystemRandomNumberGenerator, 'init', {});
        return _this.shuffledUsing({}, { get: function () { return g; }, set: function ($val) { return g = $val; } });
    };
    /*Swift.(file).Sequence.joined()*/
    /*Swift.(file).Sequence.joined()*/
    Sequence$implementation.prototype.joined = function ($info) {
        var _this = this;
        return _create(FlattenSequence, 'init_base', {}, _this);
    };
    /*Swift.(file).Sequence.joined(separator:Separator)*/
    /*Swift.(file).Sequence.joined(separator:Separator)*/
    Sequence$implementation.prototype.joinedSeparator = function ($info, separator) {
        var _this = this;
        return _create(JoinedSequence, 'initBaseSeparator', {}, _this, separator);
    };
    /*Swift.(file).Sequence.lazy*/
    Sequence$implementation.prototype.lazy$get = function () {
        var _this = this;
        return _create(LazySequence, 'init_base', {}, _this);
    };
    Object.defineProperty(Sequence$implementation.prototype, "lazy", {
        get: function () { return this.lazy$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).Sequence.makeIterator()*/
    /*Swift.(file).Sequence.makeIterator()*/
    Sequence$implementation.prototype.makeIterator = function ($info) {
        var _this = this;
        return _this;
    };
    /*Swift.(file).Sequence.map(_:(Self.Element) throws -> T)*/
    /*Swift.(file).Sequence.map(_:(Self.Element) throws -> T)*/
    Sequence$implementation.prototype.mapSwift = function ($info, transform) {
        var _this = this;
        var result = _create(Array, 'init', {});
        var iterator = _this.makeIterator({});
        while (true) {
            var $ifLet0, _element_1;
            if (!((($ifLet0 = iterator.next({ $setThis: function ($val) { return iterator = $val; } })) || true) && $ifLet0 != null && ((_element_1 = $ifLet0) || true)))
                break;
            result.append({ $setThis: function ($val) { return result = $val; } }, transform({}, _element_1));
        }
        ;
        return result;
    };
    /*Swift.(file).Sequence.filter(_:(Self.Element) throws -> Bool)*/
    /*Swift.(file).Sequence.filter(_:(Self.Element) throws -> Bool)*/
    Sequence$implementation.prototype.filterSwift = function ($info, isIncluded) {
        var _this = this;
        return _this._filter({}, isIncluded);
    };
    /*Swift.(file).Sequence.underestimatedCount*/
    Sequence$implementation.prototype.underestimatedCount$get = function () {
        var _this = this;
        return 0;
    };
    Object.defineProperty(Sequence$implementation.prototype, "underestimatedCount", {
        get: function () { return this.underestimatedCount$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).Sequence.forEach(_:(Self.Element) throws -> Void)*/
    /*Swift.(file).Sequence.forEach(_:(Self.Element) throws -> Void)*/
    Sequence$implementation.prototype.forEachSwift = function ($info, body) {
        var _this = this;
        {
            var $element$generator_1 = _this.makeIterator({});
            while (true) {
                var $ifLet0, _element_1;
                if (!((($ifLet0 = $element$generator_1.next({ $setThis: function ($val) { return $element$generator_1 = $val; } })) || true) && $ifLet0 != null && ((_element_1 = $ifLet0) || true)))
                    break;
                body({}, _element_1);
            }
        }
    };
    /*Swift.(file).Sequence.first(where:(Self.Element) throws -> Bool)*/
    /*Swift.(file).Sequence.first(where:(Self.Element) throws -> Bool)*/
    Sequence$implementation.prototype.firstWhere = function ($info, predicate) {
        var _this = this;
        {
            var $element$generator_2 = _this.makeIterator({});
            while (true) {
                var $ifLet0, _element_1;
                if (!((($ifLet0 = $element$generator_2.next({ $setThis: function ($val) { return $element$generator_2 = $val; } })) || true) && $ifLet0 != null && ((_element_1 = $ifLet0) || true)))
                    break;
                if ((predicate({}, _element_1))) {
                    return _element_1;
                }
                ;
            }
        }
        ;
        return null;
    };
    /*Swift.(file).Sequence.split(separator:Self.Element,maxSplits:Int,omittingEmptySubsequences:Bool)*/
    /*Swift.(file).Sequence.split(separator:Self.Element,maxSplits:Int,omittingEmptySubsequences:Bool)*/
    Sequence$implementation.prototype.splitSeparatorMaxSplitsOmittingEmptySubsequences = function ($info, separator, maxSplits, omittingEmptySubsequences) {
        var _this = this;
        return _this.splitMaxSplitsOmittingEmptySubsequencesWhereSeparator({}, maxSplits, omittingEmptySubsequences, (function ($info, $0) { return (_.arg0 = $0).constructor.infix_61_61({}, _.arg0, separator); }));
    };
    /*Swift.(file).Sequence.split(maxSplits:Int,omittingEmptySubsequences:Bool,whereSeparator:(Self.Element) throws -> Bool)*/
    /*Swift.(file).Sequence.split(maxSplits:Int,omittingEmptySubsequences:Bool,whereSeparator:(Self.Element) throws -> Bool)*/
    Sequence$implementation.prototype.splitMaxSplitsOmittingEmptySubsequencesWhereSeparator = function ($info, maxSplits, omittingEmptySubsequences, isSeparator) {
        var _this = this;
        preconditionFileLine({}, function () { return Int.infix_62_61({}, maxSplits, 0); }, function () { return "Must take zero or more splits"; }, '?3', '?3');
        var whole = _create(Array, 'initBuffer', {}, _this);
        return whole.splitMaxSplitsOmittingEmptySubsequencesWhereSeparator({}, maxSplits, omittingEmptySubsequences, isSeparator);
    };
    /*Swift.(file).Sequence.suffix(_:Int)*/
    /*Swift.(file).Sequence.suffix(_:Int)*/
    Sequence$implementation.prototype.suffix = function ($info, maxLength) {
        var _this = this;
        preconditionFileLine({}, function () { return Int.infix_62_61({}, maxLength, 0); }, function () { return "Can't take a suffix of negative length from a sequence"; }, '?3', '?3');
        if (!((Int.infix_33_61({}, maxLength, 0)))) {
            return _create(Array, 'initArrayLiteralArray', {}, []);
        }
        ;
        var ringBuffer = _create(Array, 'initArrayLiteralArray', {}, []);
        var i = 0;
        {
            var $element$generator_3 = _this.makeIterator({});
            while (true) {
                var $ifLet0, _element_1;
                if (!((($ifLet0 = $element$generator_3.next({ $setThis: function ($val) { return $element$generator_3 = $val; } })) || true) && $ifLet0 != null && ((_element_1 = $ifLet0) || true)))
                    break;
                if ((Int.infix_60({}, ringBuffer.count, maxLength))) {
                    ringBuffer.append({ $setThis: function ($val) { return ringBuffer = $val; } }, _element_1);
                }
                else {
                    ringBuffer.subscript$set({ $setThis: function ($val) { return ringBuffer = $val; } }, _element_1, i);
                    Int.infix_43_61({}, { get: function () { return i; }, set: function ($val) { return i = $val; } }, 1);
                    Int.infix_37_61({}, { get: function () { return i; }, set: function ($val) { return i = $val; } }, maxLength);
                }
                ;
            }
        }
        ;
        if ((Int.infix_33_61({}, i, ringBuffer.startIndex))) {
            var rotated_1 = _create(Array, 'initArrayLiteralArray', {}, []);
            Array.infix_43_61({}, { get: function () { return rotated_1; }, set: function ($val) { return rotated_1 = $val; } }, ringBuffer.subscriptRange$get({}, Int.infix_46_46_60({}, i, ringBuffer.endIndex)));
            Array.infix_43_61({}, { get: function () { return rotated_1; }, set: function ($val) { return rotated_1 = $val; } }, ringBuffer.subscriptRange$get({}, Int.infix_46_46_60({}, 0, i)));
            return rotated_1;
        }
        else {
            return ringBuffer;
        }
    };
    /*Swift.(file).Sequence.dropFirst(_:Int)*/
    /*Swift.(file).Sequence.dropFirst(_:Int)*/
    Sequence$implementation.prototype.dropFirst = function ($info, k) {
        var _this = this;
        return _create(DropFirstSequence, 'initDroppingInt', {}, _this, k);
    };
    /*Swift.(file).Sequence.dropLast(_:Int)*/
    /*Swift.(file).Sequence.dropLast(_:Int)*/
    Sequence$implementation.prototype.dropLast = function ($info, k) {
        var _this = this;
        preconditionFileLine({}, function () { return Int.infix_62_61({}, k, 0); }, function () { return "Can't drop a negative number of elements from a sequence"; }, '?3', '?3');
        if (!((Int.infix_33_61({}, k, 0)))) {
            return _create(Array, 'initBuffer', {}, _this);
        }
        ;
        var result = _create(Array, 'initArrayLiteralArray', {}, []);
        var ringBuffer = _create(Array, 'initArrayLiteralArray', {}, []);
        var i = ringBuffer.startIndex;
        {
            var $element$generator_4 = _this.makeIterator({});
            while (true) {
                var $ifLet0, _element_1;
                if (!((($ifLet0 = $element$generator_4.next({ $setThis: function ($val) { return $element$generator_4 = $val; } })) || true) && $ifLet0 != null && ((_element_1 = $ifLet0) || true)))
                    break;
                if ((Int.infix_60({}, ringBuffer.count, k))) {
                    ringBuffer.append({ $setThis: function ($val) { return ringBuffer = $val; } }, _element_1);
                }
                else {
                    result.append({ $setThis: function ($val) { return result = $val; } }, ringBuffer.subscript$get({}, i));
                    ringBuffer.subscript$set({ $setThis: function ($val) { return ringBuffer = $val; } }, _element_1, i);
                    Int.infix_43_61({}, { get: function () { return i; }, set: function ($val) { return i = $val; } }, 1);
                    Int.infix_37_61({}, { get: function () { return i; }, set: function ($val) { return i = $val; } }, k);
                }
                ;
            }
        }
        ;
        return result;
    };
    /*Swift.(file).Sequence.drop(while:(Self.Element) throws -> Bool)*/
    /*Swift.(file).Sequence.drop(while:(Self.Element) throws -> Bool)*/
    Sequence$implementation.prototype.dropWhile = function ($info, predicate) {
        var _this = this;
        return _create(DropWhileSequence, 'initPredicatefunction_type', {}, _this, predicate);
    };
    /*Swift.(file).Sequence.prefix(_:Int)*/
    /*Swift.(file).Sequence.prefix(_:Int)*/
    Sequence$implementation.prototype.prefix = function ($info, maxLength) {
        var _this = this;
        return _create(PrefixSequence, 'initMaxLengthInt', {}, _this, maxLength);
    };
    /*Swift.(file).Sequence.prefix(while:(Self.Element) throws -> Bool)*/
    /*Swift.(file).Sequence.prefix(while:(Self.Element) throws -> Bool)*/
    Sequence$implementation.prototype.prefixWhile = function ($info, predicate) {
        var _this = this;
        var result = _create(Array, 'initArrayLiteralArray', {}, []);
        {
            var $element$generator_5 = _this.makeIterator({});
            while (true) {
                var $ifLet0, _element_1;
                if (!((($ifLet0 = $element$generator_5.next({ $setThis: function ($val) { return $element$generator_5 = $val; } })) || true) && $ifLet0 != null && ((_element_1 = $ifLet0) || true)))
                    break;
                if (!((predicate({}, _element_1)))) {
                    break;
                }
                ;
                result.append({ $setThis: function ($val) { return result = $val; } }, _element_1);
            }
        }
        ;
        return result;
    };
    /*Swift.(file).Sequence.withContiguousStorageIfAvailable(_:(UnsafeBufferPointer<Self.Element>) throws -> R)*/
    /*Swift.(file).Sequence.withContiguousStorageIfAvailable(_:(UnsafeBufferPointer<Self.Element>) throws -> R)*/
    Sequence$implementation.prototype.withContiguousStorageIfAvailable = function ($info, body) {
        var _this = this;
        return null;
    };
    /*Swift.(file).Sequence.enumerated()*/
    /*Swift.(file).Sequence.enumerated()*/
    Sequence$implementation.prototype.enumerated = function ($info) {
        var _this = this;
        return _create(EnumeratedSequence, 'init_base', {}, _this);
    };
    /*Swift.(file).Sequence.min(by:(Self.Element, Self.Element) throws -> Bool)*/
    /*Swift.(file).Sequence.min(by:(Self.Element, Self.Element) throws -> Bool)*/
    Sequence$implementation.prototype.minBy = function ($info, areInIncreasingOrder) {
        var _this = this;
        var it = _this.makeIterator({});
        var $ifLet0, result_1;
        if (!((($ifLet0 = it.next({ $setThis: function ($val) { return it = $val; } })) || true) && $ifLet0 != null && ((result_1 = $ifLet0) || true))) {
            return null;
        }
        ;
        while (true) {
            var $ifLet2, e_3;
            if (!((($ifLet2 = it.next({ $setThis: function ($val) { return it = $val; } })) || true) && $ifLet2 != null && ((e_3 = $ifLet2) || true)))
                break;
            if ((areInIncreasingOrder({}, e_3, result_1))) {
                result_1 = e_3;
            }
            ;
        }
        ;
        return result_1;
    };
    /*Swift.(file).Sequence.max(by:(Self.Element, Self.Element) throws -> Bool)*/
    /*Swift.(file).Sequence.max(by:(Self.Element, Self.Element) throws -> Bool)*/
    Sequence$implementation.prototype.maxBy = function ($info, areInIncreasingOrder) {
        var _this = this;
        var it = _this.makeIterator({});
        var $ifLet0, result_1;
        if (!((($ifLet0 = it.next({ $setThis: function ($val) { return it = $val; } })) || true) && $ifLet0 != null && ((result_1 = $ifLet0) || true))) {
            return null;
        }
        ;
        while (true) {
            var $ifLet2, e_3;
            if (!((($ifLet2 = it.next({ $setThis: function ($val) { return it = $val; } })) || true) && $ifLet2 != null && ((e_3 = $ifLet2) || true)))
                break;
            if ((areInIncreasingOrder({}, result_1, e_3))) {
                result_1 = e_3;
            }
            ;
        }
        ;
        return result_1;
    };
    /*Swift.(file).Sequence.min()*/
    /*Swift.(file).Sequence.min()*/
    Sequence$implementation.prototype.min = function ($info) {
        var _this = this;
        return _this.minBy({}, this.first[0].constructor.infix_60);
    };
    /*Swift.(file).Sequence.max()*/
    /*Swift.(file).Sequence.max()*/
    Sequence$implementation.prototype.max = function ($info) {
        var _this = this;
        return _this.maxBy({}, this.first[0].constructor.infix_60);
    };
    /*Swift.(file).Sequence.starts(with:PossiblePrefix,by:(Self.Element, PossiblePrefix.Element) throws -> Bool)*/
    /*Swift.(file).Sequence.starts(with:PossiblePrefix,by:(Self.Element, PossiblePrefix.Element) throws -> Bool)*/
    Sequence$implementation.prototype.startsWithBy = function ($info, possiblePrefix, areEquivalent) {
        var _this = this;
        var possiblePrefixIterator = possiblePrefix.makeIterator({});
        {
            var $e0$generator_1 = _this.makeIterator({});
            while (true) {
                var $ifLet0, e0_1;
                if (!((($ifLet0 = $e0$generator_1.next({ $setThis: function ($val) { return $e0$generator_1 = $val; } })) || true) && $ifLet0 != null && ((e0_1 = $ifLet0) || true)))
                    break;
                var $ifLet2, e1_3;
                if ((($ifLet2 = possiblePrefixIterator.next({ $setThis: function ($val) { return possiblePrefixIterator = $val; } })) || true) && $ifLet2 != null && ((e1_3 = $ifLet2) || true)) {
                    if ((Bool.prefix_33({}, areEquivalent({}, e0_1, e1_3)))) {
                        return false;
                    }
                    ;
                }
                else {
                    return true;
                }
                ;
            }
        }
        ;
        return Optional.wrappedEqualsOptionalNilComparisonType({}, possiblePrefixIterator.next({ $setThis: function ($val) { return possiblePrefixIterator = $val; } }), null);
    };
    /*Swift.(file).Sequence.starts(with:PossiblePrefix)*/
    /*Swift.(file).Sequence.starts(with:PossiblePrefix)*/
    Sequence$implementation.prototype.startsWithSwift = function ($info, possiblePrefix) {
        var _this = this;
        return _this.startsWithBy({}, possiblePrefix, this.first[0].constructor.infix_61_61);
    };
    /*Swift.(file).Sequence.elementsEqual(_:OtherSequence,by:(Self.Element, OtherSequence.Element) throws -> Bool)*/
    /*Swift.(file).Sequence.elementsEqual(_:OtherSequence,by:(Self.Element, OtherSequence.Element) throws -> Bool)*/
    Sequence$implementation.prototype.elementsEqualBy = function ($info, other, areEquivalent) {
        var _this = this;
        var iter1 = _this.makeIterator({});
        var iter2 = other.makeIterator({});
        while (true) {
            if (!((true)))
                break;
            var $match = { 0: iter1.next({ $setThis: function ($val) { return iter1 = $val; } }), 1: iter2.next({ $setThis: function ($val) { return iter2 = $val; } }) };
            if ((($match[0] != null && $match[1] != null))) {
                var e1 = $match[0];
                var e2 = $match[1];
                if ((Bool.prefix_33({}, areEquivalent({}, e1, e2)))) {
                    return false;
                }
                ;
            }
            else if ((($match[0] != null && $match[1] == null) || ($match[0] == null && $match[1] != null))) {
                return false;
            }
            else if ((($match[0] == null && $match[1] == null))) {
                return true;
            }
            ;
        }
    };
    /*Swift.(file).Sequence.elementsEqual(_:OtherSequence)*/
    /*Swift.(file).Sequence.elementsEqual(_:OtherSequence)*/
    Sequence$implementation.prototype.elementsEqual = function ($info, other) {
        var _this = this;
        return _this.elementsEqualBy({}, other, this.first[0].constructor.infix_61_61);
    };
    /*Swift.(file).Sequence.lexicographicallyPrecedes(_:OtherSequence,by:(Self.Element, Self.Element) throws -> Bool)*/
    /*Swift.(file).Sequence.lexicographicallyPrecedes(_:OtherSequence,by:(Self.Element, Self.Element) throws -> Bool)*/
    Sequence$implementation.prototype.lexicographicallyPrecedesBy = function ($info, other, areInIncreasingOrder) {
        var _this = this;
        var iter1 = _this.makeIterator({});
        var iter2 = other.makeIterator({});
        while (true) {
            if (!((true)))
                break;
            var $ifLet0, e1_1;
            if ((($ifLet0 = iter1.next({ $setThis: function ($val) { return iter1 = $val; } })) || true) && $ifLet0 != null && ((e1_1 = $ifLet0) || true)) {
                var $ifLet2, e2_3;
                if ((($ifLet2 = iter2.next({ $setThis: function ($val) { return iter2 = $val; } })) || true) && $ifLet2 != null && ((e2_3 = $ifLet2) || true)) {
                    if ((areInIncreasingOrder({}, e1_1, e2_3))) {
                        return true;
                    }
                    ;
                    if ((areInIncreasingOrder({}, e2_3, e1_1))) {
                        return false;
                    }
                    ;
                    continue;
                }
                ;
                return false;
            }
            ;
            return Optional.wrappedNotEqualsOptionalNilComparisonType({}, iter2.next({ $setThis: function ($val) { return iter2 = $val; } }), null);
        }
    };
    /*Swift.(file).Sequence.lexicographicallyPrecedes(_:OtherSequence)*/
    /*Swift.(file).Sequence.lexicographicallyPrecedes(_:OtherSequence)*/
    Sequence$implementation.prototype.lexicographicallyPrecedes = function ($info, other) {
        var _this = this;
        return _this.lexicographicallyPrecedesBy({}, other, this.first[0].constructor.infix_60);
    };
    /*Swift.(file).Sequence.contains(where:(Self.Element) throws -> Bool)*/
    /*Swift.(file).Sequence.contains(where:(Self.Element) throws -> Bool)*/
    Sequence$implementation.prototype.containsWhere = function ($info, predicate) {
        var _this = this;
        {
            var $e$generator_1 = _this.makeIterator({});
            while (true) {
                var $ifLet0, e_1;
                if (!((($ifLet0 = $e$generator_1.next({ $setThis: function ($val) { return $e$generator_1 = $val; } })) || true) && $ifLet0 != null && ((e_1 = $ifLet0) || true)))
                    break;
                if ((predicate({}, e_1))) {
                    return true;
                }
                ;
            }
        }
        ;
        return false;
    };
    /*Swift.(file).Sequence.allSatisfy(_:(Self.Element) throws -> Bool)*/
    /*Swift.(file).Sequence.allSatisfy(_:(Self.Element) throws -> Bool)*/
    Sequence$implementation.prototype.allSatisfy = function ($info, predicate) {
        var _this = this;
        return Bool.prefix_33({}, _this.containsWhere({}, (function ($info, $0) { return Bool.prefix_33({}, predicate({}, $0)); })));
    };
    /*Swift.(file).Sequence.contains(_:Self.Element)*/
    /*Swift.(file).Sequence.contains(_:Self.Element)*/
    Sequence$implementation.prototype.contains = function ($info, _element) {
        var _this = this;
        var $ifLet0, result_1;
        if ((($ifLet0 = _this._customContainsEquatableElement({}, _element)) || true) && $ifLet0 != null && ((result_1 = $ifLet0) || true)) {
            return result_1;
        }
        else {
            return _this.containsWhere({}, (function ($info, $0) { return (_.arg0 = $0).constructor.infix_61_61({}, _.arg0, _element); }));
        }
    };
    /*Swift.(file).Sequence.count(where:(Self.Element) throws -> Bool)*/
    /*Swift.(file).Sequence.count(where:(Self.Element) throws -> Bool)*/
    Sequence$implementation.prototype.countWhere = function ($info, predicate) {
        var _this = this;
        var count = 0;
        {
            var $e$generator_2 = _this.makeIterator({});
            while (true) {
                var $ifLet0, e_1;
                if (!((($ifLet0 = $e$generator_2.next({ $setThis: function ($val) { return $e$generator_2 = $val; } })) || true) && $ifLet0 != null && ((e_1 = $ifLet0) || true)))
                    break;
                if ((predicate({}, e_1))) {
                    Int.infix_43_61({}, { get: function () { return count; }, set: function ($val) { return count = $val; } }, 1);
                }
                ;
            }
        }
        ;
        return count;
    };
    /*Swift.(file).Sequence.reduce(_:Result,_:(Result, Self.Element) throws -> Result)*/
    /*Swift.(file).Sequence.reduce(_:Result,_:(Result, Self.Element) throws -> Result)*/
    Sequence$implementation.prototype.reduceSwift = function ($info, initialResult, nextPartialResult) {
        var _this = this;
        var accumulator = initialResult;
        {
            var $element$generator_6 = _this.makeIterator({});
            while (true) {
                var $ifLet0, _element_1;
                if (!((($ifLet0 = $element$generator_6.next({ $setThis: function ($val) { return $element$generator_6 = $val; } })) || true) && $ifLet0 != null && ((_element_1 = $ifLet0) || true)))
                    break;
                accumulator = nextPartialResult({}, accumulator, _element_1);
            }
        }
        ;
        return accumulator;
    };
    /*Swift.(file).Sequence.reduce(into:Result,_:(inout Result, Self.Element) throws -> ())*/
    /*Swift.(file).Sequence.reduce(into:Result,_:(inout Result, Self.Element) throws -> ())*/
    Sequence$implementation.prototype.reduceInto = function ($info, initialResult, updateAccumulatingResult) {
        var _this = this;
        var accumulator = initialResult;
        {
            var $element$generator_7 = _this.makeIterator({});
            while (true) {
                var $ifLet0, _element_1;
                if (!((($ifLet0 = $element$generator_7.next({ $setThis: function ($val) { return $element$generator_7 = $val; } })) || true) && $ifLet0 != null && ((_element_1 = $ifLet0) || true)))
                    break;
                updateAccumulatingResult({}, { get: function () { return accumulator; }, set: function ($val) { return accumulator = $val; } }, _element_1);
            }
        }
        ;
        return accumulator;
    };
    /*Swift.(file).Sequence.reversed()*/
    /*Swift.(file).Sequence.reversed()*/
    Sequence$implementation.prototype.reversed = function ($info) {
        var _this = this;
        var result = _create(Array, 'initBuffer', {}, _this);
        var count = result.count;
        {
            var $i$generator_1 = _cloneStruct(Int.infix_46_46_60({}, 0, Int.infix_47({}, count, 2)).makeIterator({}));
            while (true) {
                var $ifLet0, i_1;
                if (!((($ifLet0 = $i$generator_1.next({ $setThis: function ($val) { return $i$generator_1 = $val; } })) || true) && $ifLet0 != null && ((i_1 = $ifLet0) || true)))
                    break;
                result.swapAt({ $setThis: function ($val) { return result = $val; } }, i_1, Int.infix_45({}, count, Int.infix_43({}, i_1, 1)));
            }
        }
        ;
        return result;
    };
    /*Swift.(file).Sequence.flatMap(_:(Self.Element) throws -> SegmentOfResult)*/
    /*Swift.(file).Sequence.flatMap(_:(Self.Element) throws -> SegmentOfResult)*/
    Sequence$implementation.prototype.flatMap = function ($info, transform) {
        var _this = this;
        var result = _create(Array, 'initArrayLiteralArray', {}, []);
        {
            var $element$generator_8 = _this.makeIterator({});
            while (true) {
                var $ifLet0, _element_1;
                if (!((($ifLet0 = $element$generator_8.next({ $setThis: function ($val) { return $element$generator_8 = $val; } })) || true) && $ifLet0 != null && ((_element_1 = $ifLet0) || true)))
                    break;
                result.appendContentsOf({ $setThis: function ($val) { return result = $val; } }, transform({}, _element_1));
            }
        }
        ;
        return result;
    };
    /*Swift.(file).Sequence.compactMap(_:(Self.Element) throws -> ElementOfResult?)*/
    /*Swift.(file).Sequence.compactMap(_:(Self.Element) throws -> ElementOfResult?)*/
    Sequence$implementation.prototype.compactMap = function ($info, transform) {
        var _this = this;
        return _this._compactMap({}, transform);
    };
    /*Swift.(file).Sequence.sorted()*/
    /*Swift.(file).Sequence.sorted()*/
    Sequence$implementation.prototype.sorted = function ($info) {
        var _this = this;
        return _this.sortedBy({}, this.first[0].constructor.infix_60);
    };
    /*Swift.(file).Sequence.sorted(by:(Self.Element, Self.Element) throws -> Bool)*/
    /*Swift.(file).Sequence.sorted(by:(Self.Element, Self.Element) throws -> Bool)*/
    Sequence$implementation.prototype.sortedBy = function ($info, areInIncreasingOrder) {
        var _this = this;
        var result = _create(Array, 'initBuffer', {}, _this);
        result.sortBy({ $setThis: function ($val) { return result = $val; } }, areInIncreasingOrder);
        return result;
    };
    /*Swift.(file).Sequence.joined(separator:String)*/
    /*Swift.(file).Sequence.joined(separator:String)*/
    Sequence$implementation.prototype.joinedSeparator = function ($info, separator) {
        var _this = this;
        var result = "";
        if ((separator.isEmpty)) {
            {
                var $x$generator_1 = _this.makeIterator({});
                while (true) {
                    var $ifLet0, x_1;
                    if (!((($ifLet0 = $x$generator_1.next({ $setThis: function ($val) { return $x$generator_1 = $val; } })) || true) && $ifLet0 != null && ((x_1 = $ifLet0) || true)))
                        break;
                    result.append({ $setThis: function ($val) { return result = $val; } }, _create(String, 'initString', {}, x_1));
                }
            }
            ;
            return result;
        }
        ;
        var iter = _this.makeIterator({});
        var $ifLet2, first_3;
        if ((($ifLet2 = iter.next({ $setThis: function ($val) { return iter = $val; } })) || true) && $ifLet2 != null && ((first_3 = $ifLet2) || true)) {
            result.append({ $setThis: function ($val) { return result = $val; } }, _create(String, 'initString', {}, first_3));
            while (true) {
                var $ifLet4, next_5;
                if (!((($ifLet4 = iter.next({ $setThis: function ($val) { return iter = $val; } })) || true) && $ifLet4 != null && ((next_5 = $ifLet4) || true)))
                    break;
                result.append({ $setThis: function ($val) { return result = $val; } }, separator);
                result.append({ $setThis: function ($val) { return result = $val; } }, _create(String, 'initString', {}, next_5));
            }
            ;
        }
        ;
        return result;
    };
    /*Swift.(file).Sequence.+infix(_:Self,_:String)*/
    /*Swift.(file).Sequence.+infix(_:Self,_:String)*/
    Sequence$implementation.infix_43 = function ($info, lhs, rhs) {
        var _this = this;
        fatalErrorFileLine({}, function () { return String(); } /*!default_value*/, '?3', '?3');
    };
    /*Swift.(file).Sequence.+infix(_:String,_:Self)*/
    /*Swift.(file).Sequence.+infix(_:String,_:Self)*/
    Sequence$implementation.infix_43 = function ($info, lhs, rhs) {
        var _this = this;
        fatalErrorFileLine({}, function () { return String(); } /*!default_value*/, '?3', '?3');
    };
    /*Swift.(file).Sequence.flatMap(_:(Self.Element) throws -> ElementOfResult?)*/
    /*Swift.(file).Sequence.flatMap(_:(Self.Element) throws -> ElementOfResult?)*/
    Sequence$implementation.prototype.flatMap = function ($info, transform) {
        var _this = this;
        return _this._compactMap({}, transform);
    };
    /*Swift.(file).Sequence.flatMap(_:(Self.Element) throws -> String)*/
    /*Swift.(file).Sequence.flatMap(_:(Self.Element) throws -> String)*/
    Sequence$implementation.prototype.flatMap = function ($info, transform) {
        var _this = this;
        return _this.mapSwift({}, transform);
    };
    return Sequence$implementation;
}());
var DropFirstSequence = /** @class */ (function () {
    function DropFirstSequence() {
    }
    /*Swift.(file).DropFirstSequence.init(_:Base,dropping:Int)*/
    /*Swift.(file).DropFirstSequence.init(_:Base,dropping:Int)*/
    DropFirstSequence.prototype.initDroppingInt = function ($info, base, limit) {
        throw 'unsupported method Swift.(file).DropFirstSequence.init(_:Base,dropping:Int) in ' + this.constructor.name;
    };
    /*Swift.(file).DropFirstSequence.makeIterator()*/
    /*Swift.(file).Sequence.makeIterator()*/
    DropFirstSequence.prototype.makeIterator = function ($info) {
        var _this = this;
        var it = _this._base.makeIterator({});
        var dropped = 0;
        while (true) {
            if (!((Int.infix_60({}, dropped, _this._limit)) && (Optional.wrappedNotEqualsOptionalNilComparisonType({}, it.next({ $setThis: function ($val) { return it = $val; } }), null))))
                break;
            Int.infix_38_43_61({}, { get: function () { return dropped; }, set: function ($val) { return dropped = $val; } }, 1);
        }
        ;
        return it;
    };
    /*Swift.(file).DropFirstSequence.dropFirst(_:Int)*/
    /*Swift.(file).DropFirstSequence.dropFirst(_:Int)*/
    DropFirstSequence.prototype.dropFirst = function ($info, k) {
        var _this = this;
        return _create(DropFirstSequence, 'initDroppingInt', {}, _this._base, Int.infix_43({}, _this._limit, k));
    };
    DropFirstSequence.prototype.init$vars = function () {
    };
    DropFirstSequence.$struct = true;
    DropFirstSequence.$infoAddress = '';
    return DropFirstSequence;
}());
if (typeof Sequence$implementation != 'undefined')
    _mixin(DropFirstSequence, Sequence$implementation, false);
var PrefixSequence = /** @class */ (function () {
    function PrefixSequence() {
    }
    /*Swift.(file).PrefixSequence.init(_:Base,maxLength:Int)*/
    /*Swift.(file).PrefixSequence.init(_:Base,maxLength:Int)*/
    PrefixSequence.prototype.initMaxLengthInt = function ($info, base, maxLength) {
        throw 'unsupported method Swift.(file).PrefixSequence.init(_:Base,maxLength:Int) in ' + this.constructor.name;
    };
    /*Swift.(file).PrefixSequence.makeIterator()*/
    /*Swift.(file).Sequence.makeIterator()*/
    PrefixSequence.prototype.makeIterator = function ($info) {
        var _this = this;
        return _create(PrefixSequence.Iterator, 'initMaxLengthInt', {}, _this._base.makeIterator({}), _this._maxLength);
    };
    /*Swift.(file).PrefixSequence.prefix(_:Int)*/
    /*Swift.(file).PrefixSequence.prefix(_:Int)*/
    PrefixSequence.prototype.prefix = function ($info, maxLength) {
        var _this = this;
        var _length = /*dot_syntax_base_ignored*/ min({}, maxLength, _this._maxLength);
        return _create(PrefixSequence, 'initMaxLengthInt', {}, _this._base, _length);
    };
    PrefixSequence.prototype.init$vars = function () {
    };
    var _j;
    PrefixSequence.$struct = true;
    PrefixSequence.$infoAddress = '';
    PrefixSequence.Iterator = (_j = /** @class */ (function () {
            function class_9() {
            }
            /*Swift.(file).PrefixSequence.Iterator.init(_:Base.Iterator,maxLength:Int)*/
            /*Swift.(file).PrefixSequence.Iterator.init(_:Base.Iterator,maxLength:Int)*/
            class_9.prototype.initMaxLengthInt = function ($info, base, maxLength) {
                var _this = this;
                _this._base = base;
                _this._remaining = maxLength;
                return;
            };
            /*Swift.(file).PrefixSequence.Iterator.next()*/
            /*Swift.(file).IteratorProtocol.next()*/
            class_9.prototype.next = function ($info) {
                var _this = this;
                if ((Int.infix_33_61({}, _this._remaining, 0))) {
                    Int.infix_38_45_61({}, { get: function () { return _this._remaining; }, set: function ($val) { return _this._remaining = $val; } }, 1);
                    return _this._base.next({ $setThis: function ($val) { return _this._base = $val; } });
                }
                else {
                    return null;
                }
            };
            class_9.prototype.init$vars = function () {
            };
            return class_9;
        }()),
        _j.$struct = true,
        _j.$infoAddress = '',
        _j);
    return PrefixSequence;
}());
if (typeof IteratorProtocol$implementation != 'undefined')
    _mixin(PrefixSequence.Iterator, IteratorProtocol$implementation, false);
if (typeof Sequence$implementation != 'undefined')
    _mixin(PrefixSequence, Sequence$implementation, false);
var DropWhileSequence = /** @class */ (function () {
    function DropWhileSequence() {
    }
    /*Swift.(file).DropWhileSequence.init(iterator:Base.Iterator,predicate:(DropWhileSequence<Base>.Element) throws -> Bool)*/
    /*Swift.(file).DropWhileSequence.init(iterator:Base.Iterator,predicate:(DropWhileSequence<Base>.Element) throws -> Bool)*/
    DropWhileSequence.prototype.initIteratorPredicatefunction_type = function ($info, iterator, predicate) {
        throw 'unsupported method Swift.(file).DropWhileSequence.init(iterator:Base.Iterator,predicate:(DropWhileSequence<Base>.Element) throws -> Bool) in ' + this.constructor.name;
    };
    /*Swift.(file).DropWhileSequence.init(_:Base,predicate:(DropWhileSequence<Base>.Element) throws -> Bool)*/
    /*Swift.(file).DropWhileSequence.init(_:Base,predicate:(DropWhileSequence<Base>.Element) throws -> Bool)*/
    DropWhileSequence.prototype.initPredicatefunction_type = function ($info, base, predicate) {
        throw 'unsupported method Swift.(file).DropWhileSequence.init(_:Base,predicate:(DropWhileSequence<Base>.Element) throws -> Bool) in ' + this.constructor.name;
    };
    /*Swift.(file).DropWhileSequence.makeIterator()*/
    /*Swift.(file).Sequence.makeIterator()*/
    DropWhileSequence.prototype.makeIterator = function ($info) {
        var _this = this;
        return _create(DropWhileSequence.Iterator, 'initNextElementOptional', {}, _this._iterator, _this._nextElement);
    };
    /*Swift.(file).DropWhileSequence.drop(while:(DropWhileSequence<Base>.Element) throws -> Bool)*/
    /*Swift.(file).DropWhileSequence.drop(while:(DropWhileSequence<Base>.Element) throws -> Bool)*/
    DropWhileSequence.prototype.dropWhile = function ($info, predicate) {
        throw 'unsupported method Swift.(file).DropWhileSequence.drop(while:(DropWhileSequence<Base>.Element) throws -> Bool) in ' + this.constructor.name;
    };
    DropWhileSequence.prototype.init$vars = function () {
    };
    var _k;
    DropWhileSequence.$struct = true;
    DropWhileSequence.$infoAddress = '';
    DropWhileSequence.Iterator = (_k = /** @class */ (function () {
            function class_10() {
            }
            /*Swift.(file).DropWhileSequence.Iterator.init(_:Base.Iterator,nextElement:DropWhileSequence<Base>.Iterator.Element?)*/
            /*Swift.(file).DropWhileSequence.Iterator.init(_:Base.Iterator,nextElement:DropWhileSequence<Base>.Iterator.Element?)*/
            class_10.prototype.initNextElementOptional = function ($info, iterator, nextElement) {
                var _this = this;
                _this._iterator = iterator;
                _this._nextElement = nextElement;
                return;
            };
            /*Swift.(file).DropWhileSequence.Iterator.next()*/
            /*Swift.(file).IteratorProtocol.next()*/
            class_10.prototype.next = function ($info) {
                var _this = this;
                var $ifLet0, next_1;
                if (!((($ifLet0 = _this._nextElement) || true) && $ifLet0 != null && ((next_1 = $ifLet0) || true))) {
                    return null;
                }
                ;
                _this._nextElement = _this._iterator.next({ $setThis: function ($val) { return _this._iterator = $val; } });
                return next_1;
            };
            class_10.prototype.init$vars = function () {
            };
            return class_10;
        }()),
        _k.$struct = true,
        _k.$infoAddress = '',
        _k);
    return DropWhileSequence;
}());
if (typeof IteratorProtocol$implementation != 'undefined')
    _mixin(DropWhileSequence.Iterator, IteratorProtocol$implementation, false);
if (typeof Sequence$implementation != 'undefined')
    _mixin(DropWhileSequence, Sequence$implementation, false);
var IteratorSequence = /** @class */ (function () {
    function IteratorSequence() {
    }
    /*Swift.(file).IteratorSequence.init(_:Base)*/
    /*Swift.(file).IteratorSequence.init(_:Base)*/
    IteratorSequence.prototype.init = function ($info, base) {
        var _this = this;
        _this._base = base;
        return;
    };
    /*Swift.(file).IteratorSequence.next()*/
    /*Swift.(file).IteratorProtocol.next()*/
    IteratorSequence.prototype.next = function ($info) {
        var _this = this;
        return _this._base.next({ $setThis: function ($val) { return _this._base = $val; } });
    };
    IteratorSequence.prototype.init$vars = function () {
    };
    IteratorSequence.$struct = true;
    IteratorSequence.$infoAddress = '';
    return IteratorSequence;
}());
if (typeof IteratorProtocol$implementation != 'undefined')
    _mixin(IteratorSequence, IteratorProtocol$implementation, false);
if (typeof Sequence$implementation != 'undefined')
    _mixin(IteratorSequence, Sequence$implementation, false);
var _SetAnyHashableBox = /** @class */ (function () {
    function _SetAnyHashableBox() {
    }
    /*Swift.(file)._SetAnyHashableBox.init(_:Set<Element>)*/
    /*Swift.(file)._SetAnyHashableBox.init(_:Set<Element>)*/
    _SetAnyHashableBox.prototype.initSet = function ($info, value) {
        throw 'unsupported method Swift.(file)._SetAnyHashableBox.init(_:Set<Element>) in ' + this.constructor.name;
    };
    _SetAnyHashableBox.prototype.init$vars = function () {
    };
    _SetAnyHashableBox.$struct = true;
    _SetAnyHashableBox.$infoAddress = '';
    return _SetAnyHashableBox;
}());
if (typeof _AnyHashableBox$implementation != 'undefined')
    _mixin(_SetAnyHashableBox, _AnyHashableBox$implementation, false);
var SetAlgebra$implementation = /** @class */ (function () {
    function SetAlgebra$implementation() {
    }
    /*Swift.(file).SetAlgebra.init(_:S)*/
    /*Swift.(file).SetAlgebra.init(_:S)*/
    SetAlgebra$implementation.prototype.initSource = function ($info, sequence) {
        var _this = this;
        _this.init({});
        {
            var $e$generator_3 = sequence.makeIterator({});
            while (true) {
                var $ifLet0, e_1;
                if (!((($ifLet0 = $e$generator_3.next({ $setThis: function ($val) { return $e$generator_3 = $val; } })) || true) && $ifLet0 != null && ((e_1 = $ifLet0) || true)))
                    break;
                _this.insert({ $setThis: function ($val) { return $info.$setThis(_this = _cloneStruct($val)); } }, e_1);
            }
        }
        ;
        return;
    };
    /*Swift.(file).SetAlgebra.subtract(_:Self)*/
    /*Swift.(file).SetAlgebra.subtract(_:Self)*/
    SetAlgebra$implementation.prototype.subtract = function ($info, other) {
        var _this = this;
        _this.formIntersection({ $setThis: function ($val) { return $info.$setThis(_this = _cloneStruct($val)); } }, _this.symmetricDifference({}, other));
    };
    /*Swift.(file).SetAlgebra.isSubset(of:Self)*/
    /*Swift.(file).SetAlgebra.isSubset(of:Self)*/
    SetAlgebra$implementation.prototype.isSubsetOf = function ($info, other) {
        var _this = this;
        return (_.arg0 = _this.intersection({}, other)).constructor.infix_61_61({}, _.arg0, _this);
    };
    /*Swift.(file).SetAlgebra.isSuperset(of:Self)*/
    /*Swift.(file).SetAlgebra.isSuperset(of:Self)*/
    SetAlgebra$implementation.prototype.isSupersetOf = function ($info, other) {
        var _this = this;
        return other.isSubsetOf({}, _this);
    };
    /*Swift.(file).SetAlgebra.isDisjoint(with:Self)*/
    /*Swift.(file).SetAlgebra.isDisjoint(with:Self)*/
    SetAlgebra$implementation.prototype.isDisjointWith = function ($info, other) {
        var _this = this;
        return _this.intersection({}, other).isEmpty;
    };
    /*Swift.(file).SetAlgebra.subtracting(_:Self)*/
    /*Swift.(file).SetAlgebra.subtracting(_:Self)*/
    SetAlgebra$implementation.prototype.subtracting = function ($info, other) {
        var _this = this;
        return _this.intersection({}, _this.symmetricDifference({}, other));
    };
    /*Swift.(file).SetAlgebra.isEmpty*/
    SetAlgebra$implementation.prototype.isEmpty$get = function () {
        var _this = this;
        return (_.arg0 = _this).constructor.infix_61_61({}, _.arg0, _create(_this.constructor, 'init', {}));
    };
    Object.defineProperty(SetAlgebra$implementation.prototype, "isEmpty", {
        get: function () { return this.isEmpty$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).SetAlgebra.isStrictSuperset(of:Self)*/
    /*Swift.(file).SetAlgebra.isStrictSuperset(of:Self)*/
    SetAlgebra$implementation.prototype.isStrictSupersetOf = function ($info, other) {
        var _this = this;
        return Bool.infix_38_38({}, _this.isSupersetOf({}, other), function () { return (_.arg0 = _this).constructor.infix_33_61({}, _.arg0, other); });
    };
    /*Swift.(file).SetAlgebra.isStrictSubset(of:Self)*/
    /*Swift.(file).SetAlgebra.isStrictSubset(of:Self)*/
    SetAlgebra$implementation.prototype.isStrictSubsetOf = function ($info, other) {
        var _this = this;
        return other.isStrictSupersetOf({}, _this);
    };
    /*Swift.(file).SetAlgebra.init(arrayLiteral:[Self.Element])*/
    /*Swift.(file).SetAlgebra.init(arrayLiteral:[Self.Element])*/
    SetAlgebra$implementation.prototype.initArrayLiteralArray = function ($info, arrayLiteral) {
        var _this = this;
        _this.initSource({}, arrayLiteral);
        return;
    };
    return SetAlgebra$implementation;
}());
if (typeof Equatable$implementation != 'undefined')
    _mixin(SetAlgebra$implementation, Equatable$implementation, false);
if (typeof ExpressibleByArrayLiteral$implementation != 'undefined')
    _mixin(SetAlgebra$implementation, ExpressibleByArrayLiteral$implementation, false);
var _SetBuilder = /** @class */ (function () {
    function _SetBuilder() {
    }
    /*Swift.(file)._SetBuilder.init(count:Int)*/
    /*Swift.(file)._SetBuilder.init(count:Int)*/
    _SetBuilder.prototype.initCountInt = function ($info, count) {
        throw 'unsupported method Swift.(file)._SetBuilder.init(count:Int) in ' + this.constructor.name;
    };
    /*Swift.(file)._SetBuilder.add(member:Element)*/
    /*Swift.(file)._SetBuilder.add(member:Element)*/
    _SetBuilder.prototype.addMember = function ($info, member) {
        throw 'unsupported method Swift.(file)._SetBuilder.add(member:Element) in ' + this.constructor.name;
    };
    /*Swift.(file)._SetBuilder.take()*/
    /*Swift.(file)._SetBuilder.take()*/
    _SetBuilder.prototype.take = function ($info) {
        throw 'unsupported method Swift.(file)._SetBuilder.take() in ' + this.constructor.name;
    };
    _SetBuilder.prototype.init$vars = function () {
    };
    _SetBuilder.$struct = true;
    _SetBuilder.$infoAddress = '';
    return _SetBuilder;
}());
var _RawSetStorage = /** @class */ (function (_super) {
    __extends(_RawSetStorage, _super);
    function _RawSetStorage() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    /*Swift.(file)._RawSetStorage.init(_doNotCallMe:())*/
    /*Swift.(file)._RawSetStorage.init(_doNotCallMe:())*/
    _RawSetStorage.prototype.init_doNotCallMetuple_type = function ($info, _doNotCallMe) {
        throw 'unsupported method Swift.(file)._RawSetStorage.init(_doNotCallMe:()) in ' + this.constructor.name;
    };
    /*Swift.(file)._RawSetStorage.init()*/
    /*Swift.(file).__SwiftNativeNSSet.init()*/
    _RawSetStorage.prototype.init = function ($info) {
        throw 'unsupported method Swift.(file)._RawSetStorage.init() in ' + this.constructor.name;
    };
    /*Swift.(file)._RawSetStorage.empty*/
    _RawSetStorage.empty$get = function () {
        throw 'unsupported variable Swift.(file)._RawSetStorage.empty in ' + this.constructor.name;
    };
    Object.defineProperty(_RawSetStorage, "empty", {
        get: function () { return this.empty$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    _RawSetStorage.prototype.init$vars = function () {
        if (_super.prototype.init$vars)
            _super.prototype.init$vars.call(this);
    };
    _RawSetStorage.$infoAddress = '';
    return _RawSetStorage;
}(__SwiftNativeNSSet));
var _SetBuffer$implementation = /** @class */ (function () {
    function _SetBuffer$implementation() {
    }
    return _SetBuffer$implementation;
}());
var _NSFastEnumeration$implementation = /** @class */ (function () {
    function _NSFastEnumeration$implementation() {
    }
    return _NSFastEnumeration$implementation;
}());
if (typeof _ShadowProtocol$implementation != 'undefined')
    _mixin(_NSFastEnumeration$implementation, _ShadowProtocol$implementation, false);
var _NSEnumerator$implementation = /** @class */ (function () {
    function _NSEnumerator$implementation() {
    }
    return _NSEnumerator$implementation;
}());
if (typeof _ShadowProtocol$implementation != 'undefined')
    _mixin(_NSEnumerator$implementation, _ShadowProtocol$implementation, false);
var _NSCopying$implementation = /** @class */ (function () {
    function _NSCopying$implementation() {
    }
    return _NSCopying$implementation;
}());
if (typeof _ShadowProtocol$implementation != 'undefined')
    _mixin(_NSCopying$implementation, _ShadowProtocol$implementation, false);
var _NSArrayCore$implementation = /** @class */ (function () {
    function _NSArrayCore$implementation() {
    }
    return _NSArrayCore$implementation;
}());
if (typeof _NSCopying$implementation != 'undefined')
    _mixin(_NSArrayCore$implementation, _NSCopying$implementation, false);
if (typeof _NSFastEnumeration$implementation != 'undefined')
    _mixin(_NSArrayCore$implementation, _NSFastEnumeration$implementation, false);
var _NSDictionaryCore$implementation = /** @class */ (function () {
    function _NSDictionaryCore$implementation() {
    }
    return _NSDictionaryCore$implementation;
}());
if (typeof _NSCopying$implementation != 'undefined')
    _mixin(_NSDictionaryCore$implementation, _NSCopying$implementation, false);
if (typeof _NSFastEnumeration$implementation != 'undefined')
    _mixin(_NSDictionaryCore$implementation, _NSFastEnumeration$implementation, false);
var _NSDictionary$implementation = /** @class */ (function () {
    function _NSDictionary$implementation() {
    }
    return _NSDictionary$implementation;
}());
if (typeof _NSDictionaryCore$implementation != 'undefined')
    _mixin(_NSDictionary$implementation, _NSDictionaryCore$implementation, false);
var _NSSetCore$implementation = /** @class */ (function () {
    function _NSSetCore$implementation() {
    }
    return _NSSetCore$implementation;
}());
if (typeof _NSCopying$implementation != 'undefined')
    _mixin(_NSSetCore$implementation, _NSCopying$implementation, false);
if (typeof _NSFastEnumeration$implementation != 'undefined')
    _mixin(_NSSetCore$implementation, _NSFastEnumeration$implementation, false);
var _NSNumber$implementation = /** @class */ (function () {
    function _NSNumber$implementation() {
    }
    return _NSNumber$implementation;
}());
var _SmallBuffer = /** @class */ (function () {
    function _SmallBuffer() {
    }
    /*Swift.(file)._SmallBuffer.init()*/
    /*Swift.(file)._SmallBuffer.init()*/
    _SmallBuffer.prototype.init = function ($info) {
        throw 'unsupported method Swift.(file)._SmallBuffer.init() in ' + this.constructor.name;
    };
    /*Swift.(file)._SmallBuffer.stride*/
    _SmallBuffer.prototype.stride$get = function () {
        var _this = this;
        return MemoryLayout.stride;
    };
    Object.defineProperty(_SmallBuffer.prototype, "stride", {
        get: function () { return this.stride$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file)._SmallBuffer.byteCapacity*/
    _SmallBuffer.prototype.byteCapacity$get = function () {
        var _this = this;
        return MemoryLayout.strideOfValue({}, _this._inlineStorage);
    };
    Object.defineProperty(_SmallBuffer.prototype, "byteCapacity", {
        get: function () { return this.byteCapacity$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file)._SmallBuffer.capacity*/
    _SmallBuffer.prototype.capacity$get = function () {
        var _this = this;
        return Int.infix_47({}, _this.byteCapacity, _this.stride);
    };
    Object.defineProperty(_SmallBuffer.prototype, "capacity", {
        get: function () { return this.capacity$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file)._SmallBuffer.subscript(_:Int)*/
    /*Swift.(file)._SmallBuffer.subscript(_:Int)*/
    _SmallBuffer.prototype.subscript$get = function ($info, i) {
        var _this = this;
        var capacity = _this.capacity;
        return withUnsafeBytesOf({}, _this._inlineStorage, (function ($info, $0) {
            var rawPtr = _cloneStruct($0.baseAddress._unsafelyUnwrappedUnchecked);
            var bufPtr = _create(UnsafeBufferPointer, 'initStartOptionalCountInt', {}, /*pointer_to_pointer*/ rawPtr.assumingMemoryBoundTo({}, ((function () { throw '!unclarifiedGeneric:T'; })())), capacity);
            return bufPtr.subscript_unchecked$get({}, i);
        }));
    }; /*Swift.(file)._SmallBuffer.subscript(_:Int)*/
    /*Swift.(file)._SmallBuffer.subscript(_:Int)*/
    _SmallBuffer.prototype.subscript$set = function ($info, newValue, i) {
        var _this = this;
        var capacity = _this.capacity;
        withUnsafeMutableBytesOf({}, { get: function () { return _this._inlineStorage; }, set: function ($val) { return _this._inlineStorage = $val; } }, (function ($info, $0) {
            var rawPtr = _cloneStruct($0.baseAddress._unsafelyUnwrappedUnchecked);
            var bufPtr = _create(UnsafeMutableBufferPointer, 'initStartOptionalCountInt', {}, /*pointer_to_pointer*/ rawPtr.assumingMemoryBoundTo({}, ((function () { throw '!unclarifiedGeneric:T'; })())), capacity);
            bufPtr.subscript_unchecked$set({ $setThis: function ($val) { return bufPtr = _cloneStruct($val); } }, newValue, i);
        }));
    };
    _SmallBuffer.prototype.init$vars = function () {
    };
    _SmallBuffer.$struct = true;
    _SmallBuffer.$infoAddress = '';
    return _SmallBuffer;
}());
var StrideToIterator = /** @class */ (function () {
    function StrideToIterator() {
    }
    /*Swift.(file).StrideToIterator.init(_start:Element,end:Element,stride:Element.Stride)*/
    /*Swift.(file).StrideToIterator.init(_start:Element,end:Element,stride:Element.Stride)*/
    StrideToIterator.prototype.init_startEndStride = function ($info, _start, end, stride) {
        throw 'unsupported method Swift.(file).StrideToIterator.init(_start:Element,end:Element,stride:Element.Stride) in ' + this.constructor.name;
    };
    /*Swift.(file).StrideToIterator.next()*/
    /*Swift.(file).IteratorProtocol.next()*/
    StrideToIterator.prototype.next = function ($info) {
        var _this = this;
        var result = _this._current["1"];
        if (((((function () { throw '!unclarifiedGeneric:Element.Stride'; })()).infix_62({}, _this._stride, _create(((function () { throw '!unclarifiedGeneric:Element.Stride'; })()), 'initIntegerLiteral', {}, 0)) ? (_.arg0 = result).constructor.infix_62_61({}, _.arg0, _this._end) : (_.arg1 = result).constructor.infix_60_61({}, _.arg1, _this._end)))) {
            return null;
        }
        ;
        _this._current = ((function () { throw '!unclarifiedGeneric:Element'; })())._stepAfterFromBy({}, _this._current, _this._start, _this._stride);
        return result;
    };
    StrideToIterator.prototype.init$vars = function () {
    };
    StrideToIterator.$struct = true;
    StrideToIterator.$infoAddress = '';
    return StrideToIterator;
}());
if (typeof IteratorProtocol$implementation != 'undefined')
    _mixin(StrideToIterator, IteratorProtocol$implementation, false);
var StrideThroughIterator = /** @class */ (function () {
    function StrideThroughIterator() {
    }
    /*Swift.(file).StrideThroughIterator.init(_start:Element,end:Element,stride:Element.Stride)*/
    /*Swift.(file).StrideThroughIterator.init(_start:Element,end:Element,stride:Element.Stride)*/
    StrideThroughIterator.prototype.init_startEndStride = function ($info, _start, end, stride) {
        throw 'unsupported method Swift.(file).StrideThroughIterator.init(_start:Element,end:Element,stride:Element.Stride) in ' + this.constructor.name;
    };
    /*Swift.(file).StrideThroughIterator.next()*/
    /*Swift.(file).IteratorProtocol.next()*/
    StrideThroughIterator.prototype.next = function ($info) {
        var _this = this;
        var result = _this._current["1"];
        if (((((function () { throw '!unclarifiedGeneric:Element.Stride'; })()).infix_62({}, _this._stride, _create(((function () { throw '!unclarifiedGeneric:Element.Stride'; })()), 'initIntegerLiteral', {}, 0)) ? (_.arg0 = result).constructor.infix_62_61({}, _.arg0, _this._end) : (_.arg1 = result).constructor.infix_60_61({}, _.arg1, _this._end)))) {
            if ((Bool.infix_38_38({}, (_.arg2 = result).constructor.infix_61_61({}, _.arg2, _this._end), function () { return Bool.prefix_33({}, _this._didReturnEnd); }))) {
                _this._didReturnEnd = true;
                return result;
            }
            ;
            return null;
        }
        ;
        _this._current = ((function () { throw '!unclarifiedGeneric:Element'; })())._stepAfterFromBy({}, _this._current, _this._start, _this._stride);
        return result;
    };
    StrideThroughIterator.prototype.init$vars = function () {
    };
    StrideThroughIterator.$struct = true;
    StrideThroughIterator.$infoAddress = '';
    return StrideThroughIterator;
}());
if (typeof IteratorProtocol$implementation != 'undefined')
    _mixin(StrideThroughIterator, IteratorProtocol$implementation, false);
var _StringBreadcrumbs = /** @class */ (function () {
    function _StringBreadcrumbs() {
    }
    /*Swift.(file)._StringBreadcrumbs.breadcrumbStride*/
    _StringBreadcrumbs.breadcrumbStride$get = function () {
        throw 'unsupported variable Swift.(file)._StringBreadcrumbs.breadcrumbStride in ' + this.constructor.name;
    };
    Object.defineProperty(_StringBreadcrumbs, "breadcrumbStride", {
        get: function () { return this.breadcrumbStride$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file)._StringBreadcrumbs.utf16Length*/
    _StringBreadcrumbs.prototype.utf16Length$get = function () {
        throw 'unsupported variable Swift.(file)._StringBreadcrumbs.utf16Length in ' + this.constructor.name;
    };
    Object.defineProperty(_StringBreadcrumbs.prototype, "utf16Length", {
        get: function () { return this.utf16Length$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file)._StringBreadcrumbs.crumbs*/
    _StringBreadcrumbs.prototype.crumbs$get = function () {
        throw 'unsupported variable Swift.(file)._StringBreadcrumbs.crumbs in ' + this.constructor.name;
    };
    Object.defineProperty(_StringBreadcrumbs.prototype, "crumbs", {
        get: function () { return this.crumbs$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file)._StringBreadcrumbs.init(_:String)*/
    /*Swift.(file)._StringBreadcrumbs.init(_:String)*/
    _StringBreadcrumbs.prototype.initString = function ($info, str) {
        throw 'unsupported method Swift.(file)._StringBreadcrumbs.init(_:String) in ' + this.constructor.name;
    };
    /*Swift.(file)._StringBreadcrumbs.stride*/
    _StringBreadcrumbs.prototype.stride$get = function () {
        var _this = this;
        return _StringBreadcrumbs.breadcrumbStride;
    };
    Object.defineProperty(_StringBreadcrumbs.prototype, "stride", {
        get: function () { return this.stride$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file)._StringBreadcrumbs.getBreadcrumb(forOffset:Int)*/
    /*Swift.(file)._StringBreadcrumbs.getBreadcrumb(forOffset:Int)*/
    _StringBreadcrumbs.prototype.getBreadcrumbForOffset = function ($info, offset) {
        var _this = this;
        return { 0: _this.crumbs.subscript$get({}, Int.infix_47({}, offset, _this.stride)), 1: Int.infix_37({}, offset, _this.stride) };
    };
    /*Swift.(file)._StringBreadcrumbs.getBreadcrumb(forIndex:String.Index)*/
    /*Swift.(file)._StringBreadcrumbs.getBreadcrumb(forIndex:String.Index)*/
    _StringBreadcrumbs.prototype.getBreadcrumbForIndex = function ($info, idx) {
        var _this = this;
        var lowerBound = Int.infix_47({}, Int.infix_47({}, idx.encodedOffset, 3), _this.stride);
        var upperBound = /*dot_syntax_base_ignored*/ min({}, Int.infix_43({}, 1, Int.infix_47({}, idx.encodedOffset, _this.stride)), _this.crumbs.count);
        while (true) {
            if (!((Int.infix_62({}, Int.infix_38_45({}, upperBound, lowerBound), 1))))
                break;
            var mid = Int.infix_43({}, lowerBound, Int.infix_47({}, Int.infix_38_45({}, upperBound, lowerBound), 2));
            if ((String.Index.infix_60_61({}, _this.crumbs.subscript$get({}, mid), idx))) {
                lowerBound = mid;
            }
            else {
                upperBound = mid;
            }
            ;
        }
        ;
        var crumb = _cloneStruct(_this.crumbs.subscript$get({}, lowerBound));
        return { 0: crumb, 1: Int.infix_38_42({}, lowerBound, _this.stride) };
    };
    _StringBreadcrumbs.prototype.init$vars = function () {
    };
    _StringBreadcrumbs.$infoAddress = '';
    return _StringBreadcrumbs;
}());
var _KnownCocoaString = /** @class */ (function () {
    function _KnownCocoaString() {
    }
    Object.defineProperty(_KnownCocoaString, "storage", {
        get: function () { return Object.assign(new _KnownCocoaString(), __assign({ rawValue: "storage" }, Array.from(arguments).slice(1))); },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(_KnownCocoaString, "shared", {
        get: function () { return Object.assign(new _KnownCocoaString(), __assign({ rawValue: "shared" }, Array.from(arguments).slice(1))); },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(_KnownCocoaString, "cocoa", {
        get: function () { return Object.assign(new _KnownCocoaString(), __assign({ rawValue: "cocoa" }, Array.from(arguments).slice(1))); },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(_KnownCocoaString, "tagged", {
        get: function () { return Object.assign(new _KnownCocoaString(), __assign({ rawValue: "tagged" }, Array.from(arguments).slice(1))); },
        enumerable: true,
        configurable: true
    });
    /*Swift.(file)._KnownCocoaString.init(_:_CocoaString)*/
    /*Swift.(file)._KnownCocoaString.init(_:_CocoaString)*/
    _KnownCocoaString.prototype.init_CocoaString = function ($info, str) {
        throw 'unsupported method Swift.(file)._KnownCocoaString.init(_:_CocoaString) in ' + this.constructor.name;
    };
    /*Swift.(file)._KnownCocoaString.==(_:_KnownCocoaString,_:_KnownCocoaString)*/
    /*Swift.(file).Equatable.==infix(_:Self,_:Self)*/
    _KnownCocoaString.infix_61_61 = function ($info, a, b) {
        return a == b;
    };
    /*Swift.(file)._KnownCocoaString.hashValue*/
    _KnownCocoaString.prototype.hashValue$get = function () {
        throw 'unsupported variable Swift.(file)._KnownCocoaString.hashValue in ' + this.constructor.name;
    };
    Object.defineProperty(_KnownCocoaString.prototype, "hashValue", {
        get: function () { return this.hashValue$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file)._KnownCocoaString.hash(into:Hasher)*/
    /*Swift.(file).Hashable.hash(into:Hasher)*/
    _KnownCocoaString.prototype.hashInto = function ($info, hasher$inout) {
        throw 'unsupported method Swift.(file)._KnownCocoaString.hash(into:Hasher) in ' + this.constructor.name;
    };
    _KnownCocoaString.prototype.init$vars = function () {
    };
    _KnownCocoaString.$infoAddress = '';
    return _KnownCocoaString;
}());
_mixin(_KnownCocoaString, _DefaultEnumImplementation, false);
var CocoaStringPointer = /** @class */ (function () {
    function CocoaStringPointer() {
    }
    CocoaStringPointer.ascii = function () { return Object.assign(new CocoaStringPointer(), __assign({ rawValue: "ascii" }, Array.from(arguments).slice(1))); };
    CocoaStringPointer.utf8 = function () { return Object.assign(new CocoaStringPointer(), __assign({ rawValue: "utf8" }, Array.from(arguments).slice(1))); };
    CocoaStringPointer.utf16 = function () { return Object.assign(new CocoaStringPointer(), __assign({ rawValue: "utf16" }, Array.from(arguments).slice(1))); };
    Object.defineProperty(CocoaStringPointer, "none", {
        get: function () { return Object.assign(new CocoaStringPointer(), __assign({ rawValue: "none" }, Array.from(arguments).slice(1))); },
        enumerable: true,
        configurable: true
    });
    CocoaStringPointer.prototype.init$vars = function () {
    };
    CocoaStringPointer.$infoAddress = '';
    return CocoaStringPointer;
}());
_mixin(CocoaStringPointer, _DefaultEnumImplementation, false);
var __SwiftNativeNSString = /** @class */ (function () {
    function __SwiftNativeNSString() {
    }
    /*Swift.(file).__SwiftNativeNSString.init()*/
    /*Swift.(file).__SwiftNativeNSString.init()*/
    __SwiftNativeNSString.prototype.init = function ($info) {
        throw 'unsupported method Swift.(file).__SwiftNativeNSString.init() in ' + this.constructor.name;
    };
    __SwiftNativeNSString.prototype.init$vars = function () {
    };
    __SwiftNativeNSString.$infoAddress = '';
    return __SwiftNativeNSString;
}());
var _StringComparisonResult = /** @class */ (function () {
    function _StringComparisonResult() {
    }
    Object.defineProperty(_StringComparisonResult, "equal", {
        get: function () { return Object.assign(new _StringComparisonResult(), __assign({ rawValue: "equal" }, Array.from(arguments).slice(1))); },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(_StringComparisonResult, "less", {
        get: function () { return Object.assign(new _StringComparisonResult(), __assign({ rawValue: "less" }, Array.from(arguments).slice(1))); },
        enumerable: true,
        configurable: true
    });
    /*Swift.(file)._StringComparisonResult.init(signedNotation:Int)*/
    /*Swift.(file)._StringComparisonResult.init(signedNotation:Int)*/
    _StringComparisonResult.prototype.initSignedNotationInt = function ($info, int) {
        throw 'unsupported method Swift.(file)._StringComparisonResult.init(signedNotation:Int) in ' + this.constructor.name;
    };
    /*Swift.(file)._StringComparisonResult.==infix(_:_StringComparisonResult,_:_StringComparisonResult)*/
    /*Swift.(file).Equatable.==infix(_:Self,_:Self)*/
    _StringComparisonResult.infix_61_61 = function ($info, lhs, rhs) {
        return lhs == rhs;
    };
    /*Swift.(file)._StringComparisonResult.hashValue*/
    _StringComparisonResult.prototype.hashValue$get = function () {
        throw 'unsupported variable Swift.(file)._StringComparisonResult.hashValue in ' + this.constructor.name;
    };
    Object.defineProperty(_StringComparisonResult.prototype, "hashValue", {
        get: function () { return this.hashValue$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file)._StringComparisonResult.hash(into:Hasher)*/
    /*Swift.(file).Hashable.hash(into:Hasher)*/
    _StringComparisonResult.prototype.hashInto = function ($info, hasher$inout) {
        throw 'unsupported method Swift.(file)._StringComparisonResult.hash(into:Hasher) in ' + this.constructor.name;
    };
    _StringComparisonResult.prototype.init$vars = function () {
    };
    _StringComparisonResult.$infoAddress = '';
    return _StringComparisonResult;
}());
_mixin(_StringComparisonResult, _DefaultEnumImplementation, false);
var _StringGuts = /** @class */ (function () {
    function _StringGuts() {
    }
    /*Swift.(file)._StringGuts.init(_:_StringObject)*/
    /*Swift.(file)._StringGuts.init(_:_StringObject)*/
    _StringGuts.prototype.init_StringObject = function ($info, object) {
        throw 'unsupported method Swift.(file)._StringGuts.init(_:_StringObject) in ' + this.constructor.name;
    };
    /*Swift.(file)._StringGuts.init()*/
    /*Swift.(file)._StringGuts.init()*/
    _StringGuts.prototype.init = function ($info) {
        throw 'unsupported method Swift.(file)._StringGuts.init() in ' + this.constructor.name;
    };
    /*Swift.(file)._StringGuts.foreignHasNormalizationBoundary(before:String.Index)*/
    /*Swift.(file)._StringGuts.foreignHasNormalizationBoundary(before:String.Index)*/
    _StringGuts.prototype.foreignHasNormalizationBoundaryBefore = function ($info, index) {
        var _this = this;
        var offset = index.encodedOffset;
        if ((Bool.infix_124_124({}, Int.infix_61_61({}, offset, 0), function () { return Int.infix_61_61({}, offset, _this.count); }))) {
            return true;
        }
        ;
        var scalar = _cloneStruct(_this.foreignErrorCorrectedScalarStartingAt({}, index)["0"]);
        return scalar._hasNormalizationBoundaryBefore;
    };
    /*Swift.(file)._StringGuts.getBreadcrumbsPtr()*/
    /*Swift.(file)._StringGuts.getBreadcrumbsPtr()*/
    _StringGuts.prototype.getBreadcrumbsPtr = function ($info) {
        throw 'unsupported method Swift.(file)._StringGuts.getBreadcrumbsPtr() in ' + this.constructor.name;
    };
    /*Swift.(file)._StringGuts.populateBreadcrumbs(_:UnsafeMutablePointer<_StringBreadcrumbs?>)*/
    /*Swift.(file)._StringGuts.populateBreadcrumbs(_:UnsafeMutablePointer<_StringBreadcrumbs?>)*/
    _StringGuts.prototype.populateBreadcrumbs = function ($info, mutPtr) {
        var _this = this;
        var crumbs = _create(_StringBreadcrumbs, 'initString', {}, _create(String, 'init_StringGuts', {}, _this));
        _stdlib_atomicInitializeARCRefObjectDesired({}, _create(UnsafeMutablePointer, 'initUnsafeMutablePointer', {}, mutPtr), crumbs);
    };
    /*Swift.(file)._StringGuts.rawBits*/
    _StringGuts.prototype.rawBits$get = function () {
        var _this = this;
        return _this._object.rawBits;
    };
    Object.defineProperty(_StringGuts.prototype, "rawBits", {
        get: function () { return this.rawBits$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file)._StringGuts.init(_:_SmallString)*/
    /*Swift.(file)._StringGuts.init(_:_SmallString)*/
    _StringGuts.prototype.init_SmallString = function ($info, smol) {
        throw 'unsupported method Swift.(file)._StringGuts.init(_:_SmallString) in ' + this.constructor.name;
    };
    /*Swift.(file)._StringGuts.init(_:UnsafeBufferPointer<UInt8>,isASCII:Bool)*/
    /*Swift.(file)._StringGuts.init(_:UnsafeBufferPointer<UInt8>,isASCII:Bool)*/
    _StringGuts.prototype.initUnsafeBufferPointerIsASCIIBool = function ($info, bufPtr, isASCII) {
        var _this = this;
        _this.init_StringObject({}, _create(_StringObject, 'initImmortalUnsafeBufferPointerIsASCIIBool', {}, bufPtr, isASCII));
        return;
    };
    /*Swift.(file)._StringGuts.init(_:_StringStorage)*/
    /*Swift.(file)._StringGuts.init(_:_StringStorage)*/
    _StringGuts.prototype.init_StringStorage = function ($info, storage) {
        throw 'unsupported method Swift.(file)._StringGuts.init(_:_StringStorage) in ' + this.constructor.name;
    };
    /*Swift.(file)._StringGuts.init(_:_SharedStringStorage)*/
    /*Swift.(file)._StringGuts.init(_:_SharedStringStorage)*/
    _StringGuts.prototype.init_SharedStringStorage = function ($info, storage) {
        throw 'unsupported method Swift.(file)._StringGuts.init(_:_SharedStringStorage) in ' + this.constructor.name;
    };
    /*Swift.(file)._StringGuts.init(cocoa:AnyObject,providesFastUTF8:Bool,isASCII:Bool,length:Int)*/
    /*Swift.(file)._StringGuts.init(cocoa:AnyObject,providesFastUTF8:Bool,isASCII:Bool,length:Int)*/
    _StringGuts.prototype.initCocoaAnyObjectProvidesFastUTF8BoolIsASCIIBoolLengthInt = function ($info, cocoa, providesFastUTF8, isASCII, _length) {
        var _this = this;
        _this.init_StringObject({}, _create(_StringObject, 'initCocoaAnyObjectProvidesFastUTF8BoolIsASCIIBoolLengthInt', {}, cocoa, providesFastUTF8, isASCII, _length));
        return;
    };
    /*Swift.(file)._StringGuts.count*/
    _StringGuts.prototype.count$get = function () {
        var _this = this;
        return _this._object.count;
    };
    Object.defineProperty(_StringGuts.prototype, "count", {
        get: function () { return this.count$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file)._StringGuts.isEmpty*/
    _StringGuts.prototype.isEmpty$get = function () {
        var _this = this;
        return Int.infix_61_61({}, _this.count, 0);
    };
    Object.defineProperty(_StringGuts.prototype, "isEmpty", {
        get: function () { return this.isEmpty$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file)._StringGuts.isSmall*/
    _StringGuts.prototype.isSmall$get = function () {
        var _this = this;
        return _this._object.isSmall;
    };
    Object.defineProperty(_StringGuts.prototype, "isSmall", {
        get: function () { return this.isSmall$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file)._StringGuts.isSmallASCII*/
    _StringGuts.prototype.isSmallASCII$get = function () {
        var _this = this;
        return Bool.infix_38_38({}, _this._object.isSmall, function () { return _this._object.smallIsASCII; });
    };
    Object.defineProperty(_StringGuts.prototype, "isSmallASCII", {
        get: function () { return this.isSmallASCII$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file)._StringGuts.asSmall*/
    _StringGuts.prototype.asSmall$get = function () {
        var _this = this;
        return _create(_SmallString, 'init_StringObject', {}, _this._object);
    };
    Object.defineProperty(_StringGuts.prototype, "asSmall", {
        get: function () { return this.asSmall$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file)._StringGuts.isASCII*/
    _StringGuts.prototype.isASCII$get = function () {
        var _this = this;
        return _this._object.isASCII;
    };
    Object.defineProperty(_StringGuts.prototype, "isASCII", {
        get: function () { return this.isASCII$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file)._StringGuts.isFastASCII*/
    _StringGuts.prototype.isFastASCII$get = function () {
        var _this = this;
        return Bool.infix_38_38({}, _this.isFastUTF8, function () { return _this._object.isASCII; });
    };
    Object.defineProperty(_StringGuts.prototype, "isFastASCII", {
        get: function () { return this.isFastASCII$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file)._StringGuts.isNFC*/
    _StringGuts.prototype.isNFC$get = function () {
        var _this = this;
        return _this._object.isNFC;
    };
    Object.defineProperty(_StringGuts.prototype, "isNFC", {
        get: function () { return this.isNFC$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file)._StringGuts.isNFCFastUTF8*/
    _StringGuts.prototype.isNFCFastUTF8$get = function () {
        var _this = this;
        return Bool.infix_38_38({}, _this._object.isNFC, function () { return _this.isFastUTF8; });
    };
    Object.defineProperty(_StringGuts.prototype, "isNFCFastUTF8", {
        get: function () { return this.isNFCFastUTF8$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file)._StringGuts.hasNativeStorage*/
    _StringGuts.prototype.hasNativeStorage$get = function () {
        var _this = this;
        return _this._object.hasNativeStorage;
    };
    Object.defineProperty(_StringGuts.prototype, "hasNativeStorage", {
        get: function () { return this.hasNativeStorage$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file)._StringGuts.hasSharedStorage*/
    _StringGuts.prototype.hasSharedStorage$get = function () {
        var _this = this;
        return _this._object.hasSharedStorage;
    };
    Object.defineProperty(_StringGuts.prototype, "hasSharedStorage", {
        get: function () { return this.hasSharedStorage$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file)._StringGuts.hasBreadcrumbs*/
    _StringGuts.prototype.hasBreadcrumbs$get = function () {
        var _this = this;
        return Bool.infix_124_124({}, _this.hasNativeStorage, function () { return _this.hasSharedStorage; });
    };
    Object.defineProperty(_StringGuts.prototype, "hasBreadcrumbs", {
        get: function () { return this.hasBreadcrumbs$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file)._StringGuts.isFastUTF8*/
    _StringGuts.prototype.isFastUTF8$get = function () {
        var _this = this;
        return _fastPath({}, _this._object.providesFastUTF8);
    };
    Object.defineProperty(_StringGuts.prototype, "isFastUTF8", {
        get: function () { return this.isFastUTF8$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file)._StringGuts.isForeign*/
    _StringGuts.prototype.isForeign$get = function () {
        var _this = this;
        return _slowPath({}, _this._object.isForeign);
    };
    Object.defineProperty(_StringGuts.prototype, "isForeign", {
        get: function () { return this.isForeign$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file)._StringGuts.withFastUTF8(_:(UnsafeBufferPointer<UInt8>) throws -> R)*/
    /*Swift.(file)._StringGuts.withFastUTF8(_:(UnsafeBufferPointer<UInt8>) throws -> R)*/
    _StringGuts.prototype.withFastUTF8 = function ($info, f) {
        var _this = this;
        if ((_this.isSmall)) {
            return _create(_SmallString, 'init_StringObject', {}, _this._object).withUTF8({}, f);
        }
        ;
        var $defer = function () {
            _fixLifetime({}, _this);
        };
        var $result = (function () {
            try {
                ;
                return f({}, _this._object.fastUTF8);
            }
            catch ($error) {
                $defer({});
                throw $error;
            }
        })();
        $defer({});
        return $result;
    };
    /*Swift.(file)._StringGuts.withFastUTF8(range:Range<Int>,_:(UnsafeBufferPointer<UInt8>) throws -> R)*/
    /*Swift.(file)._StringGuts.withFastUTF8(range:Range<Int>,_:(UnsafeBufferPointer<UInt8>) throws -> R)*/
    _StringGuts.prototype.withFastUTF8Range = function ($info, range, f) {
        var _this = this;
        return _this.withFastUTF8({}, (function ($info, wholeUTF8) { return f({}, _create(UnsafeBufferPointer, 'initRebasingSlice', {}, wholeUTF8.subscriptRange$get({}, range))); }));
    };
    /*Swift.(file)._StringGuts.withFastCChar(_:(UnsafeBufferPointer<CChar>) throws -> R)*/
    /*Swift.(file)._StringGuts.withFastCChar(_:(UnsafeBufferPointer<CChar>) throws -> R)*/
    _StringGuts.prototype.withFastCChar = function ($info, f) {
        var _this = this;
        return _this.withFastUTF8({}, (function ($info, utf8) {
            var ptr = _cloneStruct(utf8.baseAddress._unsafelyUnwrappedUnchecked._asCChar);
            return f({}, _create(UnsafeBufferPointer, 'initStartOptionalCountInt', {}, /*pointer_to_pointer*/ ptr, utf8.count));
        }));
    };
    /*Swift.(file)._StringGuts.withCString(_:(UnsafePointer<Int8>) throws -> Result)*/
    /*Swift.(file)._StringGuts.withCString(_:(UnsafePointer<Int8>) throws -> Result)*/
    _StringGuts.prototype.withCString = function ($info, body) {
        var _this = this;
        if ((_slowPath({}, Bool.prefix_33({}, _this._object.isFastZeroTerminated)))) {
            return _this._slowWithCString({}, body);
        }
        ;
        return _this.withFastCChar({}, (function ($info, $0) { return body({}, $0.baseAddress._unsafelyUnwrappedUnchecked); }));
    };
    /*Swift.(file)._StringGuts.copyUTF8(into:UnsafeMutableBufferPointer<UInt8>)*/
    /*Swift.(file)._StringGuts.copyUTF8(into:UnsafeMutableBufferPointer<UInt8>)*/
    _StringGuts.prototype.copyUTF8Into = function ($info, mbp) {
        var _this = this;
        var ptr = _cloneStruct(mbp.baseAddress._unsafelyUnwrappedUnchecked);
        if ((_fastPath({}, _this.isFastUTF8))) {
            return _this.withFastUTF8({}, (function ($info, utf8) {
                if (!((Int.infix_60_61({}, utf8.count, mbp.count)))) {
                    return null;
                }
                ;
                var utf8Start = _cloneStruct(utf8.baseAddress._unsafelyUnwrappedUnchecked);
                ptr.initializeFromCount({}, utf8Start, utf8.count);
                return utf8.count;
            }));
        }
        ;
        return _this._foreignCopyUTF8Into({}, mbp);
    };
    /*Swift.(file)._StringGuts.utf8Count*/
    _StringGuts.prototype.utf8Count$get = function () {
        var _this = this;
        if ((_fastPath({}, _this.isFastUTF8))) {
            return _this.count;
        }
        ;
        return _create(String, 'init_StringGuts', {}, _this).utf8.count;
    };
    Object.defineProperty(_StringGuts.prototype, "utf8Count", {
        get: function () { return this.utf8Count$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file)._StringGuts.startIndex*/
    _StringGuts.prototype.startIndex$get = function () {
        var _this = this;
        return _create(_StringGuts.Index, 'initEncodedOffsetInt', {}, 0);
    };
    Object.defineProperty(_StringGuts.prototype, "startIndex", {
        get: function () { return this.startIndex$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file)._StringGuts.endIndex*/
    _StringGuts.prototype.endIndex$get = function () {
        var _this = this;
        return _create(_StringGuts.Index, 'initEncodedOffsetInt', {}, _this.count);
    };
    Object.defineProperty(_StringGuts.prototype, "endIndex", {
        get: function () { return this.endIndex$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file)._StringGuts.startASCII*/
    _StringGuts.prototype.startASCII$get = function () {
        var _this = this;
        return _create(UnsafeMutablePointer, 'initMutatingUnsafePointer', {}, _this._object.fastUTF8.baseAddress);
    };
    Object.defineProperty(_StringGuts.prototype, "startASCII", {
        get: function () { return this.startASCII$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file)._StringGuts.startUTF16*/
    _StringGuts.prototype.startUTF16$get = function () {
        var _this = this;
        fatalErrorFileLine({}, function () { return "Not contiguous UTF-16"; }, '?3', '?3');
    };
    Object.defineProperty(_StringGuts.prototype, "startUTF16", {
        get: function () { return this.startUTF16$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file)._StringGuts.nativeCapacity*/
    _StringGuts.prototype.nativeCapacity$get = function () {
        var _this = this;
        if (!((_this.hasNativeStorage))) {
            return null;
        }
        ;
        return _this._object.nativeStorage.capacity;
    };
    Object.defineProperty(_StringGuts.prototype, "nativeCapacity", {
        get: function () { return this.nativeCapacity$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file)._StringGuts.nativeUnusedCapacity*/
    _StringGuts.prototype.nativeUnusedCapacity$get = function () {
        var _this = this;
        if (!((_this.hasNativeStorage))) {
            return null;
        }
        ;
        return _this._object.nativeStorage.unusedCapacity;
    };
    Object.defineProperty(_StringGuts.prototype, "nativeUnusedCapacity", {
        get: function () { return this.nativeUnusedCapacity$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file)._StringGuts.uniqueNativeCapacity*/
    _StringGuts.prototype.uniqueNativeCapacity$get = function () {
        var _this = this;
        if (!((_this.isUniqueNative))) {
            return null;
        }
        ;
        return _this._object.nativeStorage.capacity;
    };
    Object.defineProperty(_StringGuts.prototype, "uniqueNativeCapacity", {
        get: function () { return this.uniqueNativeCapacity$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file)._StringGuts.uniqueNativeUnusedCapacity*/
    _StringGuts.prototype.uniqueNativeUnusedCapacity$get = function () {
        var _this = this;
        if (!((_this.isUniqueNative))) {
            return null;
        }
        ;
        return _this._object.nativeStorage.unusedCapacity;
    };
    Object.defineProperty(_StringGuts.prototype, "uniqueNativeUnusedCapacity", {
        get: function () { return this.uniqueNativeUnusedCapacity$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file)._StringGuts.isUniqueNative*/
    _StringGuts.prototype.isUniqueNative$get = function () {
        var _this = this;
        if (!((_this.hasNativeStorage))) {
            return false;
        }
        ;
        var $defer = function () {
            _fixLifetime({}, _this);
        };
        var $result = (function () {
            try {
                ;
                var bits_1 = _this._object.largeAddressBits;
                return _isUnique_native({}, { get: function () { return bits_1; }, set: function ($val) { return bits_1 = $val; } });
            }
            catch ($error) {
                $defer({});
                throw $error;
            }
        })();
        $defer({});
        return $result;
    };
    Object.defineProperty(_StringGuts.prototype, "isUniqueNative", {
        get: function () { return this.isUniqueNative$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file)._StringGuts.init(_initialCapacity:Int)*/
    /*Swift.(file)._StringGuts.init(_initialCapacity:Int)*/
    _StringGuts.prototype.init_initialCapacityInt = function ($info, capacity) {
        var _this = this;
        _this.init({});
        if ((_slowPath({}, Int.infix_62({}, capacity, _SmallString.capacity)))) {
            _this.grow({ $setThis: function ($val) { return $info.$setThis(_this = _cloneStruct($val)); } }, capacity);
        }
        ;
        return;
    };
    /*Swift.(file)._StringGuts.reserveCapacity(_:Int)*/
    /*Swift.(file)._StringGuts.reserveCapacity(_:Int)*/
    _StringGuts.prototype.reserveCapacity = function ($info, n) {
        throw 'unsupported method Swift.(file)._StringGuts.reserveCapacity(_:Int) in ' + this.constructor.name;
    };
    /*Swift.(file)._StringGuts.grow(_:Int)*/
    /*Swift.(file)._StringGuts.grow(_:Int)*/
    _StringGuts.prototype.grow = function ($info, n) {
        throw 'unsupported method Swift.(file)._StringGuts.grow(_:Int) in ' + this.constructor.name;
    };
    /*Swift.(file)._StringGuts.prepareForAppendInPlace(otherUTF8Count:Int)*/
    /*Swift.(file)._StringGuts.prepareForAppendInPlace(otherUTF8Count:Int)*/
    _StringGuts.prototype.prepareForAppendInPlaceOtherUTF8Count = function ($info, otherCount) {
        throw 'unsupported method Swift.(file)._StringGuts.prepareForAppendInPlace(otherUTF8Count:Int) in ' + this.constructor.name;
    };
    /*Swift.(file)._StringGuts.append(_:_StringGuts)*/
    /*Swift.(file)._StringGuts.append(_:_StringGuts)*/
    _StringGuts.prototype.append = function ($info, other) {
        var _this = this;
        if ((Bool.infix_38_38({}, _this.isSmall, function () { return other.isSmall; }))) {
            var $ifLet0, smol_1;
            if ((($ifLet0 = _create(_SmallString, 'init_SmallStringAppending_SmallString', {}, _this.asSmall, other.asSmall)) || true) && $ifLet0 != null && ((smol_1 = $ifLet0) || true)) {
                $info.$setThis(_this = _cloneStruct(_create(_StringGuts, 'init_SmallString', {}, smol_1)));
                return;
            }
            ;
        }
        ;
        _this.append({ $setThis: function ($val) { return $info.$setThis(_this = _cloneStruct($val)); } }, _create(_StringGutsSlice, 'init_StringGuts', {}, other));
    };
    /*Swift.(file)._StringGuts.append(_:_StringGutsSlice)*/
    /*Swift.(file)._StringGuts.append(_:_StringGutsSlice)*/
    _StringGuts.prototype.append = function ($info, slicedOther) {
        throw 'unsupported method Swift.(file)._StringGuts.append(_:_StringGutsSlice) in ' + this.constructor.name;
    };
    /*Swift.(file)._StringGuts.appendInPlace(_:UnsafeBufferPointer<UInt8>,isASCII:Bool)*/
    /*Swift.(file)._StringGuts.appendInPlace(_:UnsafeBufferPointer<UInt8>,isASCII:Bool)*/
    _StringGuts.prototype.appendInPlaceIsASCII = function ($info, other, isASCII) {
        var _this = this;
        _this._object.nativeStorage.appendInPlaceIsASCII({}, other, isASCII);
        $info.$setThis(_this = _cloneStruct(_create(_StringGuts, 'init_StringStorage', {}, _this._object.nativeStorage)));
    };
    /*Swift.(file)._StringGuts.clear()*/
    /*Swift.(file)._StringGuts.clear()*/
    _StringGuts.prototype.clear = function ($info) {
        var _this = this;
        if (!((_this.isUniqueNative))) {
            $info.$setThis(_this = _cloneStruct(_create(_StringGuts, 'init', {})));
            return;
        }
        ;
        _this._object.nativeStorage.clear({});
        $info.$setThis(_this = _cloneStruct(_create(_StringGuts, 'init_StringStorage', {}, _this._object.nativeStorage)));
    };
    /*Swift.(file)._StringGuts.remove(from:_StringGuts.Index,to:_StringGuts.Index)*/
    /*Swift.(file)._StringGuts.remove(from:_StringGuts.Index,to:_StringGuts.Index)*/
    _StringGuts.prototype.removeFromTo = function ($info, lower, upper) {
        throw 'unsupported method Swift.(file)._StringGuts.remove(from:_StringGuts.Index,to:_StringGuts.Index) in ' + this.constructor.name;
    };
    /*Swift.(file)._StringGuts.replaceSubrange(_:Range<_StringGuts.Index>,with:C)*/
    /*Swift.(file)._StringGuts.replaceSubrange(_:Range<_StringGuts.Index>,with:C)*/
    _StringGuts.prototype.replaceSubrangeWith = function ($info, bounds, newElements) {
        throw 'unsupported method Swift.(file)._StringGuts.replaceSubrange(_:Range<_StringGuts.Index>,with:C) in ' + this.constructor.name;
    };
    /*Swift.(file)._StringGuts.uniqueNativeReplaceSubrange(_:Range<_StringGuts.Index>,with:UnsafeBufferPointer<UInt8>,isASCII:Bool)*/
    /*Swift.(file)._StringGuts.uniqueNativeReplaceSubrange(_:Range<_StringGuts.Index>,with:UnsafeBufferPointer<UInt8>,isASCII:Bool)*/
    _StringGuts.prototype.uniqueNativeReplaceSubrangeWithIsASCII = function ($info, bounds, codeUnits, isASCII) {
        throw 'unsupported method Swift.(file)._StringGuts.uniqueNativeReplaceSubrange(_:Range<_StringGuts.Index>,with:UnsafeBufferPointer<UInt8>,isASCII:Bool) in ' + this.constructor.name;
    };
    /*Swift.(file)._StringGuts.uniqueNativeReplaceSubrange(_:Range<_StringGuts.Index>,with:C)*/
    /*Swift.(file)._StringGuts.uniqueNativeReplaceSubrange(_:Range<_StringGuts.Index>,with:C)*/
    _StringGuts.prototype.uniqueNativeReplaceSubrangeWith = function ($info, bounds, codeUnits) {
        throw 'unsupported method Swift.(file)._StringGuts.uniqueNativeReplaceSubrange(_:Range<_StringGuts.Index>,with:C) in ' + this.constructor.name;
    };
    /*Swift.(file)._StringGuts.scalarAlign(_:_StringGuts.Index)*/
    /*Swift.(file)._StringGuts.scalarAlign(_:_StringGuts.Index)*/
    _StringGuts.prototype.scalarAlign = function ($info, idx) {
        throw 'unsupported method Swift.(file)._StringGuts.scalarAlign(_:_StringGuts.Index) in ' + this.constructor.name;
    };
    /*Swift.(file)._StringGuts.fastUTF8ScalarLength(startingAt:Int)*/
    /*Swift.(file)._StringGuts.fastUTF8ScalarLength(startingAt:Int)*/
    _StringGuts.prototype.fastUTF8ScalarLengthStartingAt = function ($info, i) {
        var _this = this;
        var len = _utf8ScalarLength({}, _this.withFastUTF8({}, (function ($info, $0) { return $0.subscript$get({}, i); })));
        return len;
    };
    /*Swift.(file)._StringGuts.fastUTF8ScalarLength(endingAt:Int)*/
    /*Swift.(file)._StringGuts.fastUTF8ScalarLength(endingAt:Int)*/
    _StringGuts.prototype.fastUTF8ScalarLengthEndingAt = function ($info, i) {
        var _this = this;
        return _this.withFastUTF8({}, (function ($info, utf8) {
            var len = 1;
            while (true) {
                if (!((_isContinuation({}, utf8.subscript$get({}, Int.infix_38_45({}, i, len))))))
                    break;
                Int.infix_43_61({}, { get: function () { return len; }, set: function ($val) { return len = $val; } }, 1);
            }
            ;
            return len;
        }));
    };
    /*Swift.(file)._StringGuts.fastUTF8Scalar(startingAt:Int)*/
    /*Swift.(file)._StringGuts.fastUTF8Scalar(startingAt:Int)*/
    _StringGuts.prototype.fastUTF8ScalarStartingAt = function ($info, i) {
        var _this = this;
        return _this.withFastUTF8({}, (function ($info, $0) { return _decodeScalarStartingAt({}, $0, i)["0"]; }));
    };
    /*Swift.(file)._StringGuts.isOnUnicodeScalarBoundary(_:String.Index)*/
    /*Swift.(file)._StringGuts.isOnUnicodeScalarBoundary(_:String.Index)*/
    _StringGuts.prototype.isOnUnicodeScalarBoundary = function ($info, i) {
        var _this = this;
        if (!((Int.infix_61_61({}, i.transcodedOffset, 0)))) {
            return false;
        }
        ;
        if ((Bool.infix_124_124({}, String.Index.infix_61_61({}, i, _this.startIndex), function () { return String.Index.infix_61_61({}, i, _this.endIndex); }))) {
            return true;
        }
        ;
        if ((_fastPath({}, _this.isFastUTF8))) {
            return _this.withFastUTF8({}, (function ($info, $0) { return Bool.prefix_33({}, _isContinuation({}, $0.subscript$get({}, i.encodedOffset))); }));
        }
        ;
        return String.Index.infix_61_61({}, i, _this.foreignScalarAlign({}, i));
    };
    /*Swift.(file)._StringGuts.foreignErrorCorrectedScalar(startingAt:String.Index)*/
    /*Swift.(file)._StringGuts.foreignErrorCorrectedScalar(startingAt:String.Index)*/
    _StringGuts.prototype.foreignErrorCorrectedScalarStartingAt = function ($info, idx) {
        var _this = this;
        var start = idx.encodedOffset;
        var leading = _this._getForeignCodeUnitAt({}, start);
        if ((_fastPath({}, Bool.prefix_33({}, _isSurrogate({}, leading))))) {
            return { 0: _create(Unicode.Scalar, 'init_uncheckedUInt32', {}, _create(UInt32, 'initT', {}, leading)), 1: 1 };
        }
        ;
        var nextOffset = Int.infix_38_43({}, start, 1);
        if ((_slowPath({}, Bool.infix_124_124({}, _isTrailingSurrogate({}, leading), function () { return Int.infix_61_61({}, nextOffset, _this.count); })))) {
            return { 0: Unicode.Scalar._replacementCharacter, 1: 1 };
        }
        ;
        var trailing = _this._getForeignCodeUnitAt({}, nextOffset);
        if ((_slowPath({}, Bool.prefix_33({}, _isTrailingSurrogate({}, trailing))))) {
            return { 0: Unicode.Scalar._replacementCharacter, 1: 1 };
        }
        ;
        return { 0: _create(Unicode.Scalar, 'init_uncheckedUInt32', {}, _decodeSurrogatePairLeadingTrailing({}, leading, trailing)), 1: 2 };
    };
    /*Swift.(file)._StringGuts.foreignErrorCorrectedScalar(endingAt:String.Index)*/
    /*Swift.(file)._StringGuts.foreignErrorCorrectedScalar(endingAt:String.Index)*/
    _StringGuts.prototype.foreignErrorCorrectedScalarEndingAt = function ($info, idx) {
        var _this = this;
        var end = idx.encodedOffset;
        var trailing = _this._getForeignCodeUnitAt({}, Int.infix_38_45({}, end, 1));
        if ((_fastPath({}, Bool.prefix_33({}, _isSurrogate({}, trailing))))) {
            return { 0: _create(Unicode.Scalar, 'init_uncheckedUInt32', {}, _create(UInt32, 'initT', {}, trailing)), 1: 1 };
        }
        ;
        var priorOffset = Int.infix_38_45({}, end, 2);
        if ((_slowPath({}, Bool.infix_124_124({}, _isLeadingSurrogate({}, trailing), function () { return Int.infix_60({}, priorOffset, 0); })))) {
            return { 0: Unicode.Scalar._replacementCharacter, 1: 1 };
        }
        ;
        var leading = _this._getForeignCodeUnitAt({}, priorOffset);
        if ((_slowPath({}, Bool.prefix_33({}, _isLeadingSurrogate({}, leading))))) {
            return { 0: Unicode.Scalar._replacementCharacter, 1: 1 };
        }
        ;
        return { 0: _create(Unicode.Scalar, 'init_uncheckedUInt32', {}, _decodeSurrogatePairLeadingTrailing({}, leading, trailing)), 1: 2 };
    };
    /*Swift.(file)._StringGuts.foreignErrorCorrectedUTF16CodeUnit(at:String.Index)*/
    /*Swift.(file)._StringGuts.foreignErrorCorrectedUTF16CodeUnit(at:String.Index)*/
    _StringGuts.prototype.foreignErrorCorrectedUTF16CodeUnitAt = function ($info, idx) {
        var _this = this;
        var start = idx.encodedOffset;
        var cu = _this._getForeignCodeUnitAt({}, start);
        if ((_fastPath({}, Bool.prefix_33({}, _isSurrogate({}, cu))))) {
            return cu;
        }
        ;
        if ((_isLeadingSurrogate({}, cu))) {
            var nextOffset = Int.infix_38_43({}, start, 1);
            if (!((Int.infix_60({}, nextOffset, _this.count)) && (_isTrailingSurrogate({}, _this._getForeignCodeUnitAt({}, nextOffset))))) {
                return UTF16._replacementCodeUnit;
            }
            ;
        }
        else {
            var priorOffset = Int.infix_38_45({}, start, 1);
            if (!((Int.infix_62_61({}, priorOffset, 0)) && (_isLeadingSurrogate({}, _this._getForeignCodeUnitAt({}, priorOffset))))) {
                return UTF16._replacementCodeUnit;
            }
            ;
        }
        ;
        return cu;
    };
    /*Swift.(file)._StringGuts.foreignScalarAlign(_:_StringGuts.Index)*/
    /*Swift.(file)._StringGuts.foreignScalarAlign(_:_StringGuts.Index)*/
    _StringGuts.prototype.foreignScalarAlign = function ($info, idx) {
        throw 'unsupported method Swift.(file)._StringGuts.foreignScalarAlign(_:_StringGuts.Index) in ' + this.constructor.name;
    };
    /*Swift.(file)._StringGuts.foreignErrorCorrectedGrapheme(startingAt:Int,endingAt:Int)*/
    /*Swift.(file)._StringGuts.foreignErrorCorrectedGrapheme(startingAt:Int,endingAt:Int)*/
    _StringGuts.prototype.foreignErrorCorrectedGraphemeStartingAtEndingAt = function ($info, start, end) {
        var _this = this;
        var count = Int.infix_38_45({}, end, start);
        if ((Int.infix_61_61({}, Int.infix_38_45({}, start, end), 1))) {
            return _create(Character, 'initString', {}, _create(String, 'initUnicodeScalar', {}, _this.foreignErrorCorrectedScalarStartingAt({}, _create(String.Index, 'initEncodedOffsetInt', {}, start))["0"]));
        }
        ;
        var cus = _create(Array, 'initRepeatingCountInt', {}, 0, count);
        cus.withUnsafeMutableBufferPointer({ $setThis: function ($val) { return cus = $val; } }, (function ($info, $0$inout) { return _cocoaStringCopyCharactersFromRangeInto({}, _this._object.cocoaObject, Int.infix_46_46_60({}, start, end), $0.baseAddress._unsafelyUnwrappedUnchecked); }));
        return cus.withUnsafeBufferPointer({}, (function ($info, $0) { return _create(Character, 'initString', {}, String._uncheckedFromUTF16({}, $0)); }));
    };
    /*Swift.(file)._StringGuts.errorCorrectedScalar(startingAt:Int)*/
    /*Swift.(file)._StringGuts.errorCorrectedScalar(startingAt:Int)*/
    _StringGuts.prototype.errorCorrectedScalarStartingAt = function ($info, i) {
        var _this = this;
        if ((_fastPath({}, _this.isFastUTF8))) {
            return _this.withFastUTF8({}, (function ($info, $0) { return _decodeScalarStartingAt({}, $0, i); }));
        }
        ;
        return _this.foreignErrorCorrectedScalarStartingAt({}, _create(String.Index, 'initEncodedOffsetInt', {}, i));
    };
    /*Swift.(file)._StringGuts.errorCorrectedCharacter(startingAt:Int,endingAt:Int)*/
    /*Swift.(file)._StringGuts.errorCorrectedCharacter(startingAt:Int,endingAt:Int)*/
    _StringGuts.prototype.errorCorrectedCharacterStartingAtEndingAt = function ($info, start, end) {
        var _this = this;
        if ((_fastPath({}, _this.isFastUTF8))) {
            return _this.withFastUTF8Range({}, Int.infix_46_46_60({}, start, end), (function ($info, utf8) { return _create(Character, 'initUncheckedString', {}, String._uncheckedFromUTF8({}, utf8)); }));
        }
        ;
        return _this.foreignErrorCorrectedGraphemeStartingAtEndingAt({}, start, end);
    };
    /*Swift.(file)._StringGuts.isOnGraphemeClusterBoundary(_:String.Index)*/
    /*Swift.(file)._StringGuts.isOnGraphemeClusterBoundary(_:String.Index)*/
    _StringGuts.prototype.isOnGraphemeClusterBoundary = function ($info, i) {
        var _this = this;
        if (!((Int.infix_61_61({}, i.transcodedOffset, 0)))) {
            return false;
        }
        ;
        var offset = i.encodedOffset;
        if ((Bool.infix_124_124({}, Int.infix_61_61({}, offset, 0), function () { return Int.infix_61_61({}, offset, _this.count); }))) {
            return true;
        }
        ;
        if (!((_this.isOnUnicodeScalarBoundary({}, i)))) {
            return false;
        }
        ;
        var str = _create(String, 'init_StringGuts', {}, _this);
        return String.Index.infix_61_61({}, i, str.indexBefore({}, str.indexAfter({}, i)));
    };
    _StringGuts.prototype.init$vars = function () {
    };
    _StringGuts.$struct = true;
    _StringGuts.$infoAddress = '';
    return _StringGuts;
}());
var _StringGutsSlice = /** @class */ (function () {
    function _StringGutsSlice() {
    }
    /*Swift.(file)._StringGutsSlice.init(_:_StringGuts)*/
    /*Swift.(file)._StringGutsSlice.init(_:_StringGuts)*/
    _StringGutsSlice.prototype.init_StringGuts = function ($info, guts) {
        throw 'unsupported method Swift.(file)._StringGutsSlice.init(_:_StringGuts) in ' + this.constructor.name;
    };
    /*Swift.(file)._StringGutsSlice.init(_:_StringGuts,_:Range<Int>)*/
    /*Swift.(file)._StringGutsSlice.init(_:_StringGuts,_:Range<Int>)*/
    _StringGutsSlice.prototype.init_StringGutsRange = function ($info, guts, offsetRange) {
        throw 'unsupported method Swift.(file)._StringGutsSlice.init(_:_StringGuts,_:Range<Int>) in ' + this.constructor.name;
    };
    /*Swift.(file)._StringGutsSlice.start*/
    _StringGutsSlice.prototype.start$get = function () {
        throw 'unsupported variable Swift.(file)._StringGutsSlice.start in ' + this.constructor.name;
    };
    Object.defineProperty(_StringGutsSlice.prototype, "start", {
        get: function () { return this.start$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file)._StringGutsSlice.end*/
    _StringGutsSlice.prototype.end$get = function () {
        throw 'unsupported variable Swift.(file)._StringGutsSlice.end in ' + this.constructor.name;
    };
    Object.defineProperty(_StringGutsSlice.prototype, "end", {
        get: function () { return this.end$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file)._StringGutsSlice.count*/
    _StringGutsSlice.prototype.count$get = function () {
        throw 'unsupported variable Swift.(file)._StringGutsSlice.count in ' + this.constructor.name;
    };
    Object.defineProperty(_StringGutsSlice.prototype, "count", {
        get: function () { return this.count$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file)._StringGutsSlice.isNFCFastUTF8*/
    _StringGutsSlice.prototype.isNFCFastUTF8$get = function () {
        throw 'unsupported variable Swift.(file)._StringGutsSlice.isNFCFastUTF8 in ' + this.constructor.name;
    };
    Object.defineProperty(_StringGutsSlice.prototype, "isNFCFastUTF8", {
        get: function () { return this.isNFCFastUTF8$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file)._StringGutsSlice.isASCII*/
    _StringGutsSlice.prototype.isASCII$get = function () {
        throw 'unsupported variable Swift.(file)._StringGutsSlice.isASCII in ' + this.constructor.name;
    };
    Object.defineProperty(_StringGutsSlice.prototype, "isASCII", {
        get: function () { return this.isASCII$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file)._StringGutsSlice.isFastUTF8*/
    _StringGutsSlice.prototype.isFastUTF8$get = function () {
        throw 'unsupported variable Swift.(file)._StringGutsSlice.isFastUTF8 in ' + this.constructor.name;
    };
    Object.defineProperty(_StringGutsSlice.prototype, "isFastUTF8", {
        get: function () { return this.isFastUTF8$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file)._StringGutsSlice.utf8Count*/
    _StringGutsSlice.prototype.utf8Count$get = function () {
        throw 'unsupported variable Swift.(file)._StringGutsSlice.utf8Count in ' + this.constructor.name;
    };
    Object.defineProperty(_StringGutsSlice.prototype, "utf8Count", {
        get: function () { return this.utf8Count$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file)._StringGutsSlice.range*/
    _StringGutsSlice.prototype.range$get = function () {
        throw 'unsupported variable Swift.(file)._StringGutsSlice.range in ' + this.constructor.name;
    };
    Object.defineProperty(_StringGutsSlice.prototype, "range", {
        get: function () { return this.range$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file)._StringGutsSlice.withFastUTF8(_:(UnsafeBufferPointer<UInt8>) throws -> R)*/
    /*Swift.(file)._StringGutsSlice.withFastUTF8(_:(UnsafeBufferPointer<UInt8>) throws -> R)*/
    _StringGutsSlice.prototype.withFastUTF8 = function ($info, f) {
        throw 'unsupported method Swift.(file)._StringGutsSlice.withFastUTF8(_:(UnsafeBufferPointer<UInt8>) throws -> R) in ' + this.constructor.name;
    };
    /*Swift.(file)._StringGutsSlice.foreignErrorCorrectedScalar(startingAt:String.Index)*/
    /*Swift.(file)._StringGutsSlice.foreignErrorCorrectedScalar(startingAt:String.Index)*/
    _StringGutsSlice.prototype.foreignErrorCorrectedScalarStartingAt = function ($info, idx) {
        throw 'unsupported method Swift.(file)._StringGutsSlice.foreignErrorCorrectedScalar(startingAt:String.Index) in ' + this.constructor.name;
    };
    /*Swift.(file)._StringGutsSlice.foreignHasNormalizationBoundary(before:String.Index)*/
    /*Swift.(file)._StringGutsSlice.foreignHasNormalizationBoundary(before:String.Index)*/
    _StringGutsSlice.prototype.foreignHasNormalizationBoundaryBefore = function ($info, index) {
        throw 'unsupported method Swift.(file)._StringGutsSlice.foreignHasNormalizationBoundary(before:String.Index) in ' + this.constructor.name;
    };
    /*Swift.(file)._StringGutsSlice.withNFCCodeUnitsIterator(_:(_NormalizedUTF8CodeUnitIterator) throws -> R)*/
    /*Swift.(file)._StringGutsSlice.withNFCCodeUnitsIterator(_:(_NormalizedUTF8CodeUnitIterator) throws -> R)*/
    _StringGutsSlice.prototype.withNFCCodeUnitsIterator = function ($info, f) {
        throw 'unsupported method Swift.(file)._StringGutsSlice.withNFCCodeUnitsIterator(_:(_NormalizedUTF8CodeUnitIterator) throws -> R) in ' + this.constructor.name;
    };
    /*Swift.(file)._StringGutsSlice.withNFCCodeUnitsIterator_2(_:(_NormalizedUTF8CodeUnitIterator_2) throws -> R)*/
    /*Swift.(file)._StringGutsSlice.withNFCCodeUnitsIterator_2(_:(_NormalizedUTF8CodeUnitIterator_2) throws -> R)*/
    _StringGutsSlice.prototype.withNFCCodeUnitsIterator_2 = function ($info, f) {
        throw 'unsupported method Swift.(file)._StringGutsSlice.withNFCCodeUnitsIterator_2(_:(_NormalizedUTF8CodeUnitIterator_2) throws -> R) in ' + this.constructor.name;
    };
    /*Swift.(file)._StringGutsSlice.compare(with:_StringGutsSlice,expecting:_StringComparisonResult)*/
    /*Swift.(file)._StringGutsSlice.compare(with:_StringGutsSlice,expecting:_StringComparisonResult)*/
    _StringGutsSlice.prototype.compareWithExpecting = function ($info, other, expecting) {
        throw 'unsupported method Swift.(file)._StringGutsSlice.compare(with:_StringGutsSlice,expecting:_StringComparisonResult) in ' + this.constructor.name;
    };
    _StringGutsSlice.prototype.init$vars = function () {
    };
    _StringGutsSlice.$struct = true;
    _StringGutsSlice.$infoAddress = '';
    return _StringGutsSlice;
}());
var _StringObject = /** @class */ (function () {
    function _StringObject() {
    }
    /*Swift.(file)._StringObject.init(zero:())*/
    /*Swift.(file)._StringObject.init(zero:())*/
    _StringObject.prototype.initZerotuple_type = function ($info, zero) {
        throw 'unsupported method Swift.(file)._StringObject.init(zero:()) in ' + this.constructor.name;
    };
    /*Swift.(file)._StringObject.rawBits*/
    _StringObject.prototype.rawBits$get = function () {
        var _this = this;
        return { 0: _this._countAndFlagsBits, 1: _this.discriminatedObjectRawBits };
    };
    Object.defineProperty(_StringObject.prototype, "rawBits", {
        get: function () { return this.rawBits$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file)._StringObject.init(bridgeObject:BridgeObject,countAndFlags:_StringObject.CountAndFlags)*/
    /*Swift.(file)._StringObject.init(bridgeObject:BridgeObject,countAndFlags:_StringObject.CountAndFlags)*/
    _StringObject.prototype.initBridgeObjectBridgeObjectCountAndFlags_StringObjectCountAndFlags = function ($info, bridgeObject, countAndFlags) {
        throw 'unsupported method Swift.(file)._StringObject.init(bridgeObject:BridgeObject,countAndFlags:_StringObject.CountAndFlags) in ' + this.constructor.name;
    };
    /*Swift.(file)._StringObject.init(object:AnyObject,discriminator:UInt64,countAndFlags:_StringObject.CountAndFlags)*/
    /*Swift.(file)._StringObject.init(object:AnyObject,discriminator:UInt64,countAndFlags:_StringObject.CountAndFlags)*/
    _StringObject.prototype.initObjectAnyObjectDiscriminatorUInt64CountAndFlags_StringObjectCountAndFlags = function ($info, object, discriminator, countAndFlags) {
        throw 'unsupported method Swift.(file)._StringObject.init(object:AnyObject,discriminator:UInt64,countAndFlags:_StringObject.CountAndFlags) in ' + this.constructor.name;
    };
    /*Swift.(file)._StringObject.init(pointerBits:UInt64,discriminator:UInt64,countAndFlags:_StringObject.CountAndFlags)*/
    /*Swift.(file)._StringObject.init(pointerBits:UInt64,discriminator:UInt64,countAndFlags:_StringObject.CountAndFlags)*/
    _StringObject.prototype.initPointerBitsUInt64DiscriminatorUInt64CountAndFlags_StringObjectCountAndFlags = function ($info, pointerBits, discriminator, countAndFlags) {
        throw 'unsupported method Swift.(file)._StringObject.init(pointerBits:UInt64,discriminator:UInt64,countAndFlags:_StringObject.CountAndFlags) in ' + this.constructor.name;
    };
    /*Swift.(file)._StringObject.init(rawUncheckedValue:_StringObject.RawBitPattern)*/
    /*Swift.(file)._StringObject.init(rawUncheckedValue:_StringObject.RawBitPattern)*/
    _StringObject.prototype.initRawUncheckedValue_StringObjectRawBitPattern = function ($info, bits) {
        throw 'unsupported method Swift.(file)._StringObject.init(rawUncheckedValue:_StringObject.RawBitPattern) in ' + this.constructor.name;
    };
    /*Swift.(file)._StringObject.init(rawValue:_StringObject.RawBitPattern)*/
    /*Swift.(file)._StringObject.init(rawValue:_StringObject.RawBitPattern)*/
    _StringObject.prototype.initRawValue_StringObjectRawBitPattern = function ($info, bits) {
        var _this = this;
        _this.initRawUncheckedValue_StringObjectRawBitPattern({}, bits);
        _this._invariantCheck({});
        return;
    };
    /*Swift.(file)._StringObject.discriminatedObjectRawBits*/
    _StringObject.prototype.discriminatedObjectRawBits$get = function () {
        throw 'unsupported variable Swift.(file)._StringObject.discriminatedObjectRawBits in ' + this.constructor.name;
    };
    Object.defineProperty(_StringObject.prototype, "discriminatedObjectRawBits", {
        get: function () { return this.discriminatedObjectRawBits$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file)._StringObject.nativeBias*/
    _StringObject.nativeBias$get = function () {
        var _this = this;
        return 32;
    };
    Object.defineProperty(_StringObject, "nativeBias", {
        get: function () {
            return this.nativeBias$get();
        },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file)._StringObject.isImmortal*/
    _StringObject.prototype.isImmortal$get = function () {
        var _this = this;
        return UInt64.infix_33_61({}, UInt64.infix_38({}, _this.discriminatedObjectRawBits, 0x8000000000000000), 0);
    };
    Object.defineProperty(_StringObject.prototype, "isImmortal", {
        get: function () { return this.isImmortal$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file)._StringObject.isMortal*/
    _StringObject.prototype.isMortal$get = function () {
        var _this = this;
        return Bool.prefix_33({}, _this.isImmortal);
    };
    Object.defineProperty(_StringObject.prototype, "isMortal", {
        get: function () { return this.isMortal$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file)._StringObject.isSmall*/
    _StringObject.prototype.isSmall$get = function () {
        var _this = this;
        return UInt64.infix_33_61({}, UInt64.infix_38({}, _this.discriminatedObjectRawBits, 0x2000000000000000), 0);
    };
    Object.defineProperty(_StringObject.prototype, "isSmall", {
        get: function () { return this.isSmall$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file)._StringObject.isLarge*/
    _StringObject.prototype.isLarge$get = function () {
        var _this = this;
        return Bool.prefix_33({}, _this.isSmall);
    };
    Object.defineProperty(_StringObject.prototype, "isLarge", {
        get: function () { return this.isLarge$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file)._StringObject.providesFastUTF8*/
    _StringObject.prototype.providesFastUTF8$get = function () {
        var _this = this;
        return UInt64.infix_61_61({}, UInt64.infix_38({}, _this.discriminatedObjectRawBits, 0x1000000000000000), 0);
    };
    Object.defineProperty(_StringObject.prototype, "providesFastUTF8", {
        get: function () { return this.providesFastUTF8$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file)._StringObject.isForeign*/
    _StringObject.prototype.isForeign$get = function () {
        var _this = this;
        return Bool.prefix_33({}, _this.providesFastUTF8);
    };
    Object.defineProperty(_StringObject.prototype, "isForeign", {
        get: function () { return this.isForeign$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file)._StringObject.hasStorage*/
    _StringObject.prototype.hasStorage$get = function () {
        var _this = this;
        return UInt64.infix_61_61({}, UInt64.infix_38({}, _this.discriminatedObjectRawBits, 0xF000000000000000), 0);
    };
    Object.defineProperty(_StringObject.prototype, "hasStorage", {
        get: function () { return this.hasStorage$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file)._StringObject.hasNativeStorage*/
    _StringObject.prototype.hasNativeStorage$get = function () {
        var _this = this;
        var bits = UInt64.infix_38({}, UInt64.prefix_126({}, _this.discriminatedObjectRawBits), _this._countAndFlagsBits);
        var result = UInt64.infix_33_61({}, UInt64.infix_38({}, bits, 0x2000000000000000), 0);
        return result;
    };
    Object.defineProperty(_StringObject.prototype, "hasNativeStorage", {
        get: function () { return this.hasNativeStorage$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file)._StringObject.hasSharedStorage*/
    _StringObject.prototype.hasSharedStorage$get = function () {
        var _this = this;
        return Bool.infix_38_38({}, _this.hasStorage, function () { return Bool.prefix_33({}, _this.hasNativeStorage); });
    };
    Object.defineProperty(_StringObject.prototype, "hasSharedStorage", {
        get: function () { return this.hasSharedStorage$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file)._StringObject.largeFastIsTailAllocated*/
    _StringObject.prototype.largeFastIsTailAllocated$get = function () {
        var _this = this;
        return _this._countAndFlags.isTailAllocated;
    };
    Object.defineProperty(_StringObject.prototype, "largeFastIsTailAllocated", {
        get: function () { return this.largeFastIsTailAllocated$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file)._StringObject.largeFastIsShared*/
    _StringObject.prototype.largeFastIsShared$get = function () {
        var _this = this;
        return Bool.prefix_33({}, _this.largeFastIsTailAllocated);
    };
    Object.defineProperty(_StringObject.prototype, "largeFastIsShared", {
        get: function () { return this.largeFastIsShared$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file)._StringObject.largeIsCocoa*/
    _StringObject.prototype.largeIsCocoa$get = function () {
        var _this = this;
        return UInt64.infix_33_61({}, UInt64.infix_38({}, _this.discriminatedObjectRawBits, 0x4000000000000000), 0);
    };
    Object.defineProperty(_StringObject.prototype, "largeIsCocoa", {
        get: function () { return this.largeIsCocoa$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file)._StringObject.init(_:_SmallString)*/
    /*Swift.(file)._StringObject.init(_:_SmallString)*/
    _StringObject.prototype.init_SmallString = function ($info, small) {
        throw 'unsupported method Swift.(file)._StringObject.init(_:_SmallString) in ' + this.constructor.name;
    };
    /*Swift.(file)._StringObject.getSmallCount(fromRaw:UInt64)*/
    /*Swift.(file)._StringObject.getSmallCount(fromRaw:UInt64)*/
    _StringObject.getSmallCountFromRaw = function ($info, x) {
        var _this = this;
        return _create(Int, 'initTruncatingIfNeeded', {}, UInt64.infix_38_62_62({}, UInt64.infix_38({}, x, 0x0F00000000000000), 56));
    };
    /*Swift.(file)._StringObject.smallCount*/
    _StringObject.prototype.smallCount$get = function () {
        var _this = this;
        return _StringObject.getSmallCountFromRaw({}, _this.discriminatedObjectRawBits);
    };
    Object.defineProperty(_StringObject.prototype, "smallCount", {
        get: function () { return this.smallCount$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file)._StringObject.getSmallIsASCII(fromRaw:UInt64)*/
    /*Swift.(file)._StringObject.getSmallIsASCII(fromRaw:UInt64)*/
    _StringObject.getSmallIsASCIIFromRaw = function ($info, x) {
        var _this = this;
        return UInt64.infix_33_61({}, UInt64.infix_38({}, x, 0x4000000000000000), 0);
    };
    /*Swift.(file)._StringObject.smallIsASCII*/
    _StringObject.prototype.smallIsASCII$get = function () {
        var _this = this;
        return _StringObject.getSmallIsASCIIFromRaw({}, _this.discriminatedObjectRawBits);
    };
    Object.defineProperty(_StringObject.prototype, "smallIsASCII", {
        get: function () { return this.smallIsASCII$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file)._StringObject.init(empty:())*/
    /*Swift.(file)._StringObject.init(empty:())*/
    _StringObject.prototype.initEmptytuple_type = function ($info, empty) {
        throw 'unsupported method Swift.(file)._StringObject.init(empty:()) in ' + this.constructor.name;
    };
    /*Swift.(file)._StringObject.largeCount*/
    _StringObject.prototype.largeCount$get = function () {
        var _this = this;
        return _this._countAndFlags.count;
    };
    Object.defineProperty(_StringObject.prototype, "largeCount", {
        get: function () { return this.largeCount$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file)._StringObject.largeAddressBits*/
    _StringObject.prototype.largeAddressBits$get = function () {
        var _this = this;
        return _create(UInt, 'initTruncatingIfNeeded', {}, UInt64.infix_38({}, _this.discriminatedObjectRawBits, _StringObject.Nibbles.largeAddressMask));
    };
    Object.defineProperty(_StringObject.prototype, "largeAddressBits", {
        get: function () { return this.largeAddressBits$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file)._StringObject.nativeUTF8Start*/
    _StringObject.prototype.nativeUTF8Start$get = function () {
        var _this = this;
        return _create(UnsafePointer, 'initBitPatternUInt', {}, UInt.infix_38_43({}, _this.largeAddressBits, _StringObject.nativeBias))._unsafelyUnwrappedUnchecked;
    };
    Object.defineProperty(_StringObject.prototype, "nativeUTF8Start", {
        get: function () { return this.nativeUTF8Start$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file)._StringObject.nativeUTF8*/
    _StringObject.prototype.nativeUTF8$get = function () {
        var _this = this;
        return _create(UnsafeBufferPointer, 'initStartOptionalCountInt', {}, /*pointer_to_pointer*/ _this.nativeUTF8Start, _this.largeCount);
    };
    Object.defineProperty(_StringObject.prototype, "nativeUTF8", {
        get: function () { return this.nativeUTF8$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file)._StringObject.getSharedUTF8Start()*/
    /*Swift.(file)._StringObject.getSharedUTF8Start()*/
    _StringObject.prototype.getSharedUTF8Start = function ($info) {
        var _this = this;
        if ((_this.largeIsCocoa)) {
            return _cocoaUTF8Pointer({}, _this.cocoaObject)._unsafelyUnwrappedUnchecked;
        }
        ;
        return _this.sharedStorage.start;
    };
    /*Swift.(file)._StringObject.sharedUTF8*/
    _StringObject.prototype.sharedUTF8$get = function () {
        var _this = this;
        var start = _cloneStruct(_this.getSharedUTF8Start({}));
        return _create(UnsafeBufferPointer, 'initStartOptionalCountInt', {}, /*pointer_to_pointer*/ start, _this.largeCount);
    };
    Object.defineProperty(_StringObject.prototype, "sharedUTF8", {
        get: function () { return this.sharedUTF8$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file)._StringObject.nativeStorage*/
    _StringObject.prototype.nativeStorage$get = function () {
        throw 'unsupported variable Swift.(file)._StringObject.nativeStorage in ' + this.constructor.name;
    };
    Object.defineProperty(_StringObject.prototype, "nativeStorage", {
        get: function () { return this.nativeStorage$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file)._StringObject.sharedStorage*/
    _StringObject.prototype.sharedStorage$get = function () {
        throw 'unsupported variable Swift.(file)._StringObject.sharedStorage in ' + this.constructor.name;
    };
    Object.defineProperty(_StringObject.prototype, "sharedStorage", {
        get: function () { return this.sharedStorage$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file)._StringObject.cocoaObject*/
    _StringObject.prototype.cocoaObject$get = function () {
        throw 'unsupported variable Swift.(file)._StringObject.cocoaObject in ' + this.constructor.name;
    };
    Object.defineProperty(_StringObject.prototype, "cocoaObject", {
        get: function () { return this.cocoaObject$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file)._StringObject.count*/
    _StringObject.prototype.count$get = function () {
        var _this = this;
        return (_this.isSmall ? _this.smallCount : _this.largeCount);
    };
    Object.defineProperty(_StringObject.prototype, "count", {
        get: function () { return this.count$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file)._StringObject.isASCII*/
    _StringObject.prototype.isASCII$get = function () {
        var _this = this;
        if ((_this.isSmall)) {
            return _this.smallIsASCII;
        }
        ;
        return _this._countAndFlags.isASCII;
    };
    Object.defineProperty(_StringObject.prototype, "isASCII", {
        get: function () { return this.isASCII$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file)._StringObject.isNFC*/
    _StringObject.prototype.isNFC$get = function () {
        var _this = this;
        if ((_this.isSmall)) {
            return _this.smallIsASCII;
        }
        ;
        return _this._countAndFlags.isNFC;
    };
    Object.defineProperty(_StringObject.prototype, "isNFC", {
        get: function () { return this.isNFC$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file)._StringObject.fastUTF8*/
    _StringObject.prototype.fastUTF8$get = function () {
        var _this = this;
        if (!((_fastPath({}, _this.largeFastIsTailAllocated)))) {
            return _this.sharedUTF8;
        }
        ;
        return _create(UnsafeBufferPointer, 'initStartOptionalCountInt', {}, /*pointer_to_pointer*/ _this.nativeUTF8Start, _this.largeCount);
    };
    Object.defineProperty(_StringObject.prototype, "fastUTF8", {
        get: function () { return this.fastUTF8$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file)._StringObject.hasObjCBridgeableObject*/
    _StringObject.prototype.hasObjCBridgeableObject$get = function () {
        var _this = this;
        return Bool.prefix_33({}, _this.isImmortal);
    };
    Object.defineProperty(_StringObject.prototype, "hasObjCBridgeableObject", {
        get: function () { return this.hasObjCBridgeableObject$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file)._StringObject.objCBridgeableObject*/
    _StringObject.prototype.objCBridgeableObject$get = function () {
        throw 'unsupported variable Swift.(file)._StringObject.objCBridgeableObject in ' + this.constructor.name;
    };
    Object.defineProperty(_StringObject.prototype, "objCBridgeableObject", {
        get: function () { return this.objCBridgeableObject$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file)._StringObject.isFastZeroTerminated*/
    _StringObject.prototype.isFastZeroTerminated$get = function () {
        var _this = this;
        if ((_slowPath({}, Bool.prefix_33({}, _this.providesFastUTF8)))) {
            return false;
        }
        ;
        if ((_this.isSmall)) {
            return true;
        }
        ;
        return _this.largeFastIsTailAllocated;
    };
    Object.defineProperty(_StringObject.prototype, "isFastZeroTerminated", {
        get: function () { return this.isFastZeroTerminated$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file)._StringObject.init(immortal:UnsafeBufferPointer<UInt8>,isASCII:Bool)*/
    /*Swift.(file)._StringObject.init(immortal:UnsafeBufferPointer<UInt8>,isASCII:Bool)*/
    _StringObject.prototype.initImmortalUnsafeBufferPointerIsASCIIBool = function ($info, bufPtr, isASCII) {
        var _this = this;
        var countAndFlags = _create(_StringObject.CountAndFlags, 'initImmortalCountIntIsASCIIBool', {}, bufPtr.count, isASCII);
        var biasedAddress = UInt.infix_38_45({}, _create(UInt, 'initBitPatternOptional', {}, bufPtr.baseAddress._unsafelyUnwrappedUnchecked), _StringObject.nativeBias);
        _this.initPointerBitsUInt64DiscriminatorUInt64CountAndFlags_StringObjectCountAndFlags({}, _create(UInt64, 'initTruncatingIfNeeded', {}, biasedAddress), _StringObject.Nibbles.largeImmortal({}), countAndFlags);
        return;
    };
    /*Swift.(file)._StringObject.init(_:_StringStorage)*/
    /*Swift.(file)._StringObject.init(_:_StringStorage)*/
    _StringObject.prototype.init_StringStorage = function ($info, storage) {
        throw 'unsupported method Swift.(file)._StringObject.init(_:_StringStorage) in ' + this.constructor.name;
    };
    /*Swift.(file)._StringObject.init(_:_SharedStringStorage)*/
    /*Swift.(file)._StringObject.init(_:_SharedStringStorage)*/
    _StringObject.prototype.init_SharedStringStorage = function ($info, storage) {
        throw 'unsupported method Swift.(file)._StringObject.init(_:_SharedStringStorage) in ' + this.constructor.name;
    };
    /*Swift.(file)._StringObject.init(cocoa:AnyObject,providesFastUTF8:Bool,isASCII:Bool,length:Int)*/
    /*Swift.(file)._StringObject.init(cocoa:AnyObject,providesFastUTF8:Bool,isASCII:Bool,length:Int)*/
    _StringObject.prototype.initCocoaAnyObjectProvidesFastUTF8BoolIsASCIIBoolLengthInt = function ($info, cocoa, providesFastUTF8, isASCII, _length) {
        var _this = this;
        var countAndFlags = _create(_StringObject.CountAndFlags, 'initSharedCountIntIsASCIIBool', {}, _length, isASCII);
        var discriminator = _StringObject.Nibbles.largeCocoaProvidesFastUTF8({}, providesFastUTF8);
        _this.initObjectAnyObjectDiscriminatorUInt64CountAndFlags_StringObjectCountAndFlags({}, cocoa, discriminator, countAndFlags);
        return;
    };
    _StringObject.prototype.init$vars = function () {
    };
    var _l, _m;
    _StringObject.$struct = true;
    _StringObject.$infoAddress = '';
    _StringObject.Nibbles = (_l = /** @class */ (function () {
            function class_11() {
            }
            /*Swift.(file)._StringObject.Nibbles.emptyString*/
            class_11.emptyString$get = function () {
                var _this = this;
                return _StringObject.Nibbles.smallIsASCII({}, true);
            };
            Object.defineProperty(class_11, "emptyString", {
                get: function () {
                    return this.emptyString$get();
                },
                enumerable: true,
                configurable: true
            });
            ;
            /*Swift.(file)._StringObject.Nibbles.largeAddressMask*/
            class_11.largeAddressMask$get = function () {
                var _this = this;
                return 0x0FFFFFFFFFFFFFFF;
            };
            Object.defineProperty(class_11, "largeAddressMask", {
                get: function () {
                    return this.largeAddressMask$get();
                },
                enumerable: true,
                configurable: true
            });
            ;
            /*Swift.(file)._StringObject.Nibbles.discriminatorMask*/
            class_11.discriminatorMask$get = function () {
                var _this = this;
                return UInt64.prefix_126({}, _this.largeAddressMask);
            };
            Object.defineProperty(class_11, "discriminatorMask", {
                get: function () {
                    return this.discriminatorMask$get();
                },
                enumerable: true,
                configurable: true
            });
            ;
            /*Swift.(file)._StringObject.Nibbles.small(isASCII:Bool)*/
            /*Swift.(file)._StringObject.Nibbles.small(isASCII:Bool)*/
            class_11.smallIsASCII = function ($info, isASCII) {
                var _this = this;
                return (isASCII ? 0xE000000000000000 : 0xA000000000000000);
            };
            /*Swift.(file)._StringObject.Nibbles.small(withCount:Int,isASCII:Bool)*/
            /*Swift.(file)._StringObject.Nibbles.small(withCount:Int,isASCII:Bool)*/
            class_11.smallWithCountIsASCII = function ($info, count, isASCII) {
                var _this = this;
                return UInt64.infix_124({}, _this.smallIsASCII({}, isASCII), UInt64.infix_38_60_60({}, _create(UInt64, 'initTruncatingIfNeeded', {}, count), 56));
            };
            /*Swift.(file)._StringObject.Nibbles.largeImmortal()*/
            /*Swift.(file)._StringObject.Nibbles.largeImmortal()*/
            class_11.largeImmortal = function ($info) {
                var _this = this;
                return 0x8000000000000000;
            };
            /*Swift.(file)._StringObject.Nibbles.largeMortal()*/
            /*Swift.(file)._StringObject.Nibbles.largeMortal()*/
            class_11.largeMortal = function ($info) {
                var _this = this;
                return 0x0000000000000000;
            };
            /*Swift.(file)._StringObject.Nibbles.largeCocoa(providesFastUTF8:Bool)*/
            /*Swift.(file)._StringObject.Nibbles.largeCocoa(providesFastUTF8:Bool)*/
            class_11.largeCocoaProvidesFastUTF8 = function ($info, providesFastUTF8) {
                var _this = this;
                return (providesFastUTF8 ? 0x4000000000000000 : 0x5000000000000000);
            };
            class_11.prototype.init$vars = function () {
            };
            return class_11;
        }()),
        _l.$infoAddress = '',
        _l);
    _StringObject.CountAndFlags = (_m = /** @class */ (function () {
            function class_12() {
            }
            /*Swift.(file)._StringObject.CountAndFlags.init(zero:())*/
            /*Swift.(file)._StringObject.CountAndFlags.init(zero:())*/
            class_12.prototype.initZerotuple_type = function ($info, zero) {
                throw 'unsupported method Swift.(file)._StringObject.CountAndFlags.init(zero:()) in ' + this.constructor.name;
            };
            /*Swift.(file)._StringObject.CountAndFlags.rawBits*/
            class_12.prototype.rawBits$get = function () {
                var _this = this;
                return _this._storage;
            };
            Object.defineProperty(class_12.prototype, "rawBits", {
                get: function () { return this.rawBits$get(); },
                enumerable: true,
                configurable: true
            });
            ;
            /*Swift.(file)._StringObject.CountAndFlags.init(rawUnchecked:_StringObject.CountAndFlags.RawBitPattern)*/
            /*Swift.(file)._StringObject.CountAndFlags.init(rawUnchecked:_StringObject.CountAndFlags.RawBitPattern)*/
            class_12.prototype.initRawUnchecked_StringObjectCountAndFlagsRawBitPattern = function ($info, bits) {
                var _this = this;
                _this._storage = bits;
                return;
            };
            /*Swift.(file)._StringObject.CountAndFlags.init(raw:_StringObject.CountAndFlags.RawBitPattern)*/
            /*Swift.(file)._StringObject.CountAndFlags.init(raw:_StringObject.CountAndFlags.RawBitPattern)*/
            class_12.prototype.initRaw_StringObjectCountAndFlagsRawBitPattern = function ($info, bits) {
                var _this = this;
                _this.initRawUnchecked_StringObjectCountAndFlagsRawBitPattern({}, bits);
                _this._invariantCheck({});
                return;
            };
            /*Swift.(file)._StringObject.CountAndFlags.countMask*/
            class_12.countMask$get = function () {
                var _this = this;
                return 0x0000FFFFFFFFFFFF;
            };
            Object.defineProperty(class_12, "countMask", {
                get: function () {
                    return this.countMask$get();
                },
                enumerable: true,
                configurable: true
            });
            ;
            /*Swift.(file)._StringObject.CountAndFlags.flagsMask*/
            class_12.flagsMask$get = function () {
                var _this = this;
                return UInt64.prefix_126({}, _this.countMask);
            };
            Object.defineProperty(class_12, "flagsMask", {
                get: function () {
                    return this.flagsMask$get();
                },
                enumerable: true,
                configurable: true
            });
            ;
            /*Swift.(file)._StringObject.CountAndFlags.isASCIIMask*/
            class_12.isASCIIMask$get = function () {
                var _this = this;
                return 0x8000000000000000;
            };
            Object.defineProperty(class_12, "isASCIIMask", {
                get: function () {
                    return this.isASCIIMask$get();
                },
                enumerable: true,
                configurable: true
            });
            ;
            /*Swift.(file)._StringObject.CountAndFlags.isNFCMask*/
            class_12.isNFCMask$get = function () {
                var _this = this;
                return 0x4000000000000000;
            };
            Object.defineProperty(class_12, "isNFCMask", {
                get: function () {
                    return this.isNFCMask$get();
                },
                enumerable: true,
                configurable: true
            });
            ;
            /*Swift.(file)._StringObject.CountAndFlags.isNativelyStoredMask*/
            class_12.isNativelyStoredMask$get = function () {
                var _this = this;
                return 0x2000000000000000;
            };
            Object.defineProperty(class_12, "isNativelyStoredMask", {
                get: function () {
                    return this.isNativelyStoredMask$get();
                },
                enumerable: true,
                configurable: true
            });
            ;
            /*Swift.(file)._StringObject.CountAndFlags.isTailAllocatedMask*/
            class_12.isTailAllocatedMask$get = function () {
                var _this = this;
                return 0x1000000000000000;
            };
            Object.defineProperty(class_12, "isTailAllocatedMask", {
                get: function () {
                    return this.isTailAllocatedMask$get();
                },
                enumerable: true,
                configurable: true
            });
            ;
            /*Swift.(file)._StringObject.CountAndFlags.init(count:Int,isASCII:Bool,isNFC:Bool,isNativelyStored:Bool,isTailAllocated:Bool)*/
            /*Swift.(file)._StringObject.CountAndFlags.init(count:Int,isASCII:Bool,isNFC:Bool,isNativelyStored:Bool,isTailAllocated:Bool)*/
            class_12.prototype.initCountIntIsASCIIBoolIsNFCBoolIsNativelyStoredBoolIsTailAllocatedBool = function ($info, count, isASCII, isNFC, isNativelyStored, isTailAllocated) {
                var _this = this;
                var rawBits = _create(UInt64, 'initTruncatingIfNeeded', {}, count);
                if ((isASCII)) {
                    UInt64.infix_124_61({}, { get: function () { return rawBits; }, set: function ($val) { return rawBits = $val; } }, _StringObject.CountAndFlags.isASCIIMask);
                }
                ;
                if ((isNFC)) {
                    UInt64.infix_124_61({}, { get: function () { return rawBits; }, set: function ($val) { return rawBits = $val; } }, _StringObject.CountAndFlags.isNFCMask);
                }
                ;
                if ((isNativelyStored)) {
                    UInt64.infix_124_61({}, { get: function () { return rawBits; }, set: function ($val) { return rawBits = $val; } }, _StringObject.CountAndFlags.isNativelyStoredMask);
                }
                ;
                if ((isTailAllocated)) {
                    UInt64.infix_124_61({}, { get: function () { return rawBits; }, set: function ($val) { return rawBits = $val; } }, _StringObject.CountAndFlags.isTailAllocatedMask);
                }
                ;
                _this.initRaw_StringObjectCountAndFlagsRawBitPattern({}, rawBits);
                return;
            };
            /*Swift.(file)._StringObject.CountAndFlags.init(count:Int,flags:UInt16)*/
            /*Swift.(file)._StringObject.CountAndFlags.init(count:Int,flags:UInt16)*/
            class_12.prototype.initCountIntFlagsUInt16 = function ($info, count, flags) {
                var _this = this;
                var rawBits = UInt64.infix_124({}, UInt64.infix_38_60_60({}, _create(UInt64, 'initTruncatingIfNeeded', {}, flags), 48), _create(UInt64, 'initTruncatingIfNeeded', {}, count));
                _this.initRaw_StringObjectCountAndFlagsRawBitPattern({}, rawBits);
                return;
            };
            /*Swift.(file)._StringObject.CountAndFlags.init(immortalCount:Int,isASCII:Bool)*/
            /*Swift.(file)._StringObject.CountAndFlags.init(immortalCount:Int,isASCII:Bool)*/
            class_12.prototype.initImmortalCountIntIsASCIIBool = function ($info, immortalCount, isASCII) {
                var _this = this;
                _this.initCountIntIsASCIIBoolIsNFCBoolIsNativelyStoredBoolIsTailAllocatedBool({}, immortalCount, isASCII, isASCII, false, true);
                return;
            };
            /*Swift.(file)._StringObject.CountAndFlags.init(mortalCount:Int,isASCII:Bool)*/
            /*Swift.(file)._StringObject.CountAndFlags.init(mortalCount:Int,isASCII:Bool)*/
            class_12.prototype.initMortalCountIntIsASCIIBool = function ($info, mortalCount, isASCII) {
                var _this = this;
                _this.initCountIntIsASCIIBoolIsNFCBoolIsNativelyStoredBoolIsTailAllocatedBool({}, mortalCount, isASCII, isASCII, true, true);
                return;
            };
            /*Swift.(file)._StringObject.CountAndFlags.init(sharedCount:Int,isASCII:Bool)*/
            /*Swift.(file)._StringObject.CountAndFlags.init(sharedCount:Int,isASCII:Bool)*/
            class_12.prototype.initSharedCountIntIsASCIIBool = function ($info, sharedCount, isASCII) {
                var _this = this;
                _this.initCountIntIsASCIIBoolIsNFCBoolIsNativelyStoredBoolIsTailAllocatedBool({}, sharedCount, isASCII, isASCII, false, false);
                return;
            };
            /*Swift.(file)._StringObject.CountAndFlags.count*/
            class_12.prototype.count$get = function () {
                var _this = this;
                return _create(Int, 'initTruncatingIfNeeded', {}, UInt64.infix_38({}, _this._storage, _StringObject.CountAndFlags.countMask));
            };
            Object.defineProperty(class_12.prototype, "count", {
                get: function () { return this.count$get(); },
                enumerable: true,
                configurable: true
            });
            ;
            /*Swift.(file)._StringObject.CountAndFlags.flags*/
            class_12.prototype.flags$get = function () {
                var _this = this;
                return _create(UInt16, 'initTruncatingIfNeeded', {}, UInt64.infix_38_62_62({}, _this._storage, 48));
            };
            Object.defineProperty(class_12.prototype, "flags", {
                get: function () { return this.flags$get(); },
                enumerable: true,
                configurable: true
            });
            ;
            /*Swift.(file)._StringObject.CountAndFlags.isASCII*/
            class_12.prototype.isASCII$get = function () {
                var _this = this;
                return Int.infix_33_61({}, 0, UInt64.infix_38({}, _this._storage, _StringObject.CountAndFlags.isASCIIMask));
            };
            Object.defineProperty(class_12.prototype, "isASCII", {
                get: function () { return this.isASCII$get(); },
                enumerable: true,
                configurable: true
            });
            ;
            /*Swift.(file)._StringObject.CountAndFlags.isNFC*/
            class_12.prototype.isNFC$get = function () {
                var _this = this;
                return Int.infix_33_61({}, 0, UInt64.infix_38({}, _this._storage, _StringObject.CountAndFlags.isNFCMask));
            };
            Object.defineProperty(class_12.prototype, "isNFC", {
                get: function () { return this.isNFC$get(); },
                enumerable: true,
                configurable: true
            });
            ;
            /*Swift.(file)._StringObject.CountAndFlags.isNativelyStored*/
            class_12.prototype.isNativelyStored$get = function () {
                var _this = this;
                return Int.infix_33_61({}, 0, UInt64.infix_38({}, _this._storage, _StringObject.CountAndFlags.isNativelyStoredMask));
            };
            Object.defineProperty(class_12.prototype, "isNativelyStored", {
                get: function () { return this.isNativelyStored$get(); },
                enumerable: true,
                configurable: true
            });
            ;
            /*Swift.(file)._StringObject.CountAndFlags.isTailAllocated*/
            class_12.prototype.isTailAllocated$get = function () {
                var _this = this;
                return Int.infix_33_61({}, 0, UInt64.infix_38({}, _this._storage, _StringObject.CountAndFlags.isTailAllocatedMask));
            };
            Object.defineProperty(class_12.prototype, "isTailAllocated", {
                get: function () { return this.isTailAllocated$get(); },
                enumerable: true,
                configurable: true
            });
            ;
            class_12.prototype.init$vars = function () {
            };
            return class_12;
        }()),
        _m.$struct = true,
        _m.$infoAddress = '',
        _m);
    return _StringObject;
}());
_mixin(_StringObject.Nibbles, _DefaultEnumImplementation, false);
var DefaultStringInterpolation = /** @class */ (function () {
    function DefaultStringInterpolation() {
    }
    /*Swift.(file).DefaultStringInterpolation.init(literalCapacity:Int,interpolationCount:Int)*/
    /*Swift.(file).StringInterpolationProtocol.init(literalCapacity:Int,interpolationCount:Int)*/
    DefaultStringInterpolation.prototype.initLiteralCapacityIntInterpolationCountInt = function ($info, literalCapacity, interpolationCount) {
        var _this = this;
        var capacityPerInterpolation = 2;
        var initialCapacity = Int.infix_43({}, literalCapacity, Int.infix_42({}, interpolationCount, capacityPerInterpolation));
        _this._storage = _create(String, 'init_StringGuts', {}, _create(_StringGuts, 'init_initialCapacityInt', {}, initialCapacity));
        return;
    };
    /*Swift.(file).DefaultStringInterpolation.appendLiteral(_:String)*/
    /*Swift.(file).StringInterpolationProtocol.appendLiteral(_:Self.StringLiteralType)*/
    DefaultStringInterpolation.prototype.appendLiteral = function ($info, literal) {
        var _this = this;
        literal.writeTo({}, { get: function () { return _this; }, set: function ($val) { return $info.$setThis(_this = _cloneStruct($val)); } });
    };
    /*Swift.(file).DefaultStringInterpolation.appendInterpolation(_:T)*/
    /*Swift.(file).DefaultStringInterpolation.appendInterpolation(_:T)*/
    DefaultStringInterpolation.prototype.appendInterpolation = function ($info, value) {
        var _this = this;
        value.writeTo({}, { get: function () { return _this; }, set: function ($val) { return $info.$setThis(_this = _cloneStruct($val)); } });
    };
    /*Swift.(file).DefaultStringInterpolation.appendInterpolation(_:T)*/
    /*Swift.(file).DefaultStringInterpolation.appendInterpolation(_:T)*/
    DefaultStringInterpolation.prototype.appendInterpolation = function ($info, value) {
        var _this = this;
        value.writeTo({}, { get: function () { return _this; }, set: function ($val) { return $info.$setThis(_this = _cloneStruct($val)); } });
    };
    /*Swift.(file).DefaultStringInterpolation.appendInterpolation(_:T)*/
    /*Swift.(file).DefaultStringInterpolation.appendInterpolation(_:T)*/
    DefaultStringInterpolation.prototype.appendInterpolation = function ($info, value) {
        var _this = this;
        value.writeTo({}, { get: function () { return _this; }, set: function ($val) { return $info.$setThis(_this = _cloneStruct($val)); } });
    };
    /*Swift.(file).DefaultStringInterpolation.appendInterpolation(_:T)*/
    /*Swift.(file).DefaultStringInterpolation.appendInterpolation(_:T)*/
    DefaultStringInterpolation.prototype.appendInterpolation = function ($info, value) {
        var _this = this;
        value.writeTo({}, { get: function () { return _this; }, set: function ($val) { return $info.$setThis(_this = _cloneStruct($val)); } });
    };
    /*Swift.(file).DefaultStringInterpolation.make()*/
    /*Swift.(file).DefaultStringInterpolation.make()*/
    DefaultStringInterpolation.prototype.make = function ($info) {
        var _this = this;
        return _this._storage;
    };
    /*Swift.(file).DefaultStringInterpolation.description*/
    DefaultStringInterpolation.prototype.description$get = function () {
        var _this = this;
        return _this._storage;
    };
    Object.defineProperty(DefaultStringInterpolation.prototype, "description", {
        get: function () { return this.description$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).DefaultStringInterpolation.write(_:String)*/
    /*Swift.(file).TextOutputStream.write(_:String)*/
    DefaultStringInterpolation.prototype.write = function ($info, string) {
        var _this = this;
        _this._storage.append({ $setThis: function ($val) { return _this._storage = $val; } }, string);
    };
    DefaultStringInterpolation.prototype.init$vars = function () {
    };
    DefaultStringInterpolation.$struct = true;
    DefaultStringInterpolation.$infoAddress = '';
    return DefaultStringInterpolation;
}());
if (typeof StringInterpolationProtocol$implementation != 'undefined')
    _mixin(DefaultStringInterpolation, StringInterpolationProtocol$implementation, false);
if (typeof CustomStringConvertible$implementation != 'undefined')
    _mixin(DefaultStringInterpolation, CustomStringConvertible$implementation, false);
if (typeof TextOutputStream$implementation != 'undefined')
    _mixin(DefaultStringInterpolation, TextOutputStream$implementation, false);
var _Normalization = /** @class */ (function () {
    function _Normalization() {
    }
    _Normalization.prototype.init$vars = function () {
    };
    _Normalization.$infoAddress = '';
    return _Normalization;
}());
_mixin(_Normalization, _DefaultEnumImplementation, false);
var _AbstractStringStorage$implementation = /** @class */ (function () {
    function _AbstractStringStorage$implementation() {
    }
    return _AbstractStringStorage$implementation;
}());
if (typeof _NSCopying$implementation != 'undefined')
    _mixin(_AbstractStringStorage$implementation, _NSCopying$implementation, false);
var _StringStorage = /** @class */ (function (_super) {
    __extends(_StringStorage, _super);
    function _StringStorage() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    /*Swift.(file)._StringStorage.count*/
    _StringStorage.prototype.count$get = function () {
        throw 'unsupported variable Swift.(file)._StringStorage.count in ' + this.constructor.name;
    };
    Object.defineProperty(_StringStorage.prototype, "count", {
        get: function () { return this.count$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file)._StringStorage.isASCII*/
    _StringStorage.prototype.isASCII$get = function () {
        throw 'unsupported variable Swift.(file)._StringStorage.isASCII in ' + this.constructor.name;
    };
    Object.defineProperty(_StringStorage.prototype, "isASCII", {
        get: function () { return this.isASCII$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file)._StringStorage.asString*/
    _StringStorage.prototype.asString$get = function () {
        throw 'unsupported variable Swift.(file)._StringStorage.asString in ' + this.constructor.name;
    };
    Object.defineProperty(_StringStorage.prototype, "asString", {
        get: function () { return this.asString$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file)._StringStorage.hash*/
    _StringStorage.prototype.hash$get = function () {
        throw 'unsupported variable Swift.(file)._StringStorage.hash in ' + this.constructor.name;
    };
    Object.defineProperty(_StringStorage.prototype, "hash", {
        get: function () { return this.hash$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file)._StringStorage.character(at:Int)*/
    /*Swift.(file)._StringStorage.character(at:Int)*/
    _StringStorage.prototype.characterAt = function ($info, offset) {
        throw 'unsupported method Swift.(file)._StringStorage.character(at:Int) in ' + this.constructor.name;
    };
    /*Swift.(file)._StringStorage.getCharacters(_:UnsafeMutablePointer<UInt16>,range:_SwiftNSRange)*/
    /*Swift.(file)._StringStorage.getCharacters(_:UnsafeMutablePointer<UInt16>,range:_SwiftNSRange)*/
    _StringStorage.prototype.getCharactersRange = function ($info, buffer, aRange) {
        throw 'unsupported method Swift.(file)._StringStorage.getCharacters(_:UnsafeMutablePointer<UInt16>,range:_SwiftNSRange) in ' + this.constructor.name;
    };
    /*Swift.(file)._StringStorage.cString(encoding:UInt)*/
    /*Swift.(file)._StringStorage.cString(encoding:UInt)*/
    _StringStorage.prototype.cStringEncoding = function ($info, encoding) {
        throw 'unsupported method Swift.(file)._StringStorage.cString(encoding:UInt) in ' + this.constructor.name;
    };
    /*Swift.(file)._StringStorage.getCString(_:UnsafeMutablePointer<UInt8>,maxLength:Int,encoding:UInt)*/
    /*Swift.(file)._StringStorage.getCString(_:UnsafeMutablePointer<UInt8>,maxLength:Int,encoding:UInt)*/
    _StringStorage.prototype.getCStringMaxLengthEncoding = function ($info, outputPtr, maxLength, encoding) {
        throw 'unsupported method Swift.(file)._StringStorage.getCString(_:UnsafeMutablePointer<UInt8>,maxLength:Int,encoding:UInt) in ' + this.constructor.name;
    };
    /*Swift.(file)._StringStorage.fastestEncoding*/
    _StringStorage.prototype.fastestEncoding$get = function () {
        throw 'unsupported variable Swift.(file)._StringStorage.fastestEncoding in ' + this.constructor.name;
    };
    Object.defineProperty(_StringStorage.prototype, "fastestEncoding", {
        get: function () { return this.fastestEncoding$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file)._StringStorage.isEqual(to:AnyObject?)*/
    /*Swift.(file)._StringStorage.isEqual(to:AnyObject?)*/
    _StringStorage.prototype.isEqualTo = function ($info, other) {
        throw 'unsupported method Swift.(file)._StringStorage.isEqual(to:AnyObject?) in ' + this.constructor.name;
    };
    /*Swift.(file)._StringStorage.copy(with:_SwiftNSZone?)*/
    /*Swift.(file)._NSCopying.copy(with:_SwiftNSZone?)*/
    _StringStorage.prototype.copyWith = function ($info, zone) {
        throw 'unsupported method Swift.(file)._StringStorage.copy(with:_SwiftNSZone?) in ' + this.constructor.name;
    };
    /*Swift.(file)._StringStorage.init(_doNotCallMe:())*/
    /*Swift.(file)._StringStorage.init(_doNotCallMe:())*/
    _StringStorage.prototype.init_doNotCallMetuple_type = function ($info, _doNotCallMe) {
        throw 'unsupported method Swift.(file)._StringStorage.init(_doNotCallMe:()) in ' + this.constructor.name;
    };
    /*Swift.(file)._StringStorage.init()*/
    /*Swift.(file).__SwiftNativeNSString.init()*/
    _StringStorage.prototype.init = function ($info) {
        throw 'unsupported method Swift.(file)._StringStorage.init() in ' + this.constructor.name;
    };
    /*Swift.(file)._StringStorage.create(realCodeUnitCapacity:Int,countAndFlags:CountAndFlags)*/
    /*Swift.(file)._StringStorage.create(realCodeUnitCapacity:Int,countAndFlags:CountAndFlags)*/
    _StringStorage.createRealCodeUnitCapacityCountAndFlags = function ($info, realCodeUnitCapacity, countAndFlags) {
        throw 'unsupported method Swift.(file)._StringStorage.create(realCodeUnitCapacity:Int,countAndFlags:CountAndFlags) in ' + this.constructor.name;
    };
    /*Swift.(file)._StringStorage.create(capacity:Int,countAndFlags:CountAndFlags)*/
    /*Swift.(file)._StringStorage.create(capacity:Int,countAndFlags:CountAndFlags)*/
    _StringStorage.createCapacityCountAndFlags = function ($info, capacity, countAndFlags) {
        throw 'unsupported method Swift.(file)._StringStorage.create(capacity:Int,countAndFlags:CountAndFlags) in ' + this.constructor.name;
    };
    /*Swift.(file)._StringStorage.create(initializingFrom:UnsafeBufferPointer<UInt8>,capacity:Int,isASCII:Bool)*/
    /*Swift.(file)._StringStorage.create(initializingFrom:UnsafeBufferPointer<UInt8>,capacity:Int,isASCII:Bool)*/
    _StringStorage.createInitializingFromCapacityIsASCII = function ($info, bufPtr, capacity, isASCII) {
        var _this = this;
        var countAndFlags = _create(CountAndFlags, 'initMortalCountIntIsASCIIBool', {}, bufPtr.count, isASCII);
        var storage = _StringStorage.createCapacityCountAndFlags({}, capacity, countAndFlags);
        var addr = _cloneStruct(bufPtr.baseAddress._unsafelyUnwrappedUnchecked);
        storage.mutableStart.initializeFromCount({}, addr, bufPtr.count);
        storage._invariantCheck({});
        return storage;
    };
    /*Swift.(file)._StringStorage.create(initializingFrom:UnsafeBufferPointer<UInt8>,isASCII:Bool)*/
    /*Swift.(file)._StringStorage.create(initializingFrom:UnsafeBufferPointer<UInt8>,isASCII:Bool)*/
    _StringStorage.createInitializingFromIsASCII = function ($info, bufPtr, isASCII) {
        var _this = this;
        return _StringStorage.createInitializingFromCapacityIsASCII({}, bufPtr, bufPtr.count, isASCII);
    };
    /*Swift.(file)._StringStorage.mutableStart*/
    _StringStorage.prototype.mutableStart$get = function () {
        throw 'unsupported variable Swift.(file)._StringStorage.mutableStart in ' + this.constructor.name;
    };
    Object.defineProperty(_StringStorage.prototype, "mutableStart", {
        get: function () { return this.mutableStart$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file)._StringStorage.mutableEnd*/
    _StringStorage.prototype.mutableEnd$get = function () {
        var _this = this;
        return UnsafeMutablePointer.infix_43({}, _this.mutableStart, _this.count);
    };
    Object.defineProperty(_StringStorage.prototype, "mutableEnd", {
        get: function () { return this.mutableEnd$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file)._StringStorage.start*/
    _StringStorage.prototype.start$get = function () {
        var _this = this;
        return _create(UnsafePointer, 'initUnsafeMutablePointer', {}, _this.mutableStart);
    };
    Object.defineProperty(_StringStorage.prototype, "start", {
        get: function () { return this.start$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file)._StringStorage.end*/
    _StringStorage.prototype.end$get = function () {
        var _this = this;
        return _create(UnsafePointer, 'initUnsafeMutablePointer', {}, _this.mutableEnd);
    };
    Object.defineProperty(_StringStorage.prototype, "end", {
        get: function () { return this.end$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file)._StringStorage.terminator*/
    _StringStorage.prototype.terminator$get = function () {
        var _this = this;
        return _this.mutableEnd;
    };
    Object.defineProperty(_StringStorage.prototype, "terminator", {
        get: function () { return this.terminator$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file)._StringStorage.codeUnits*/
    _StringStorage.prototype.codeUnits$get = function () {
        var _this = this;
        return _create(UnsafeBufferPointer, 'initStartOptionalCountInt', {}, /*pointer_to_pointer*/ _this.start, _this.count);
    };
    Object.defineProperty(_StringStorage.prototype, "codeUnits", {
        get: function () { return this.codeUnits$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file)._StringStorage.capacity*/
    _StringStorage.prototype.capacity$get = function () {
        var _this = this;
        return Int.infix_38_45({}, _this._realCapacity, 1);
    };
    Object.defineProperty(_StringStorage.prototype, "capacity", {
        get: function () { return this.capacity$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file)._StringStorage.unusedStorage*/
    _StringStorage.prototype.unusedStorage$get = function () {
        var _this = this;
        return _create(UnsafeMutableBufferPointer, 'initStartOptionalCountInt', {}, /*pointer_to_pointer*/ _this.mutableEnd, _this.unusedCapacity);
    };
    Object.defineProperty(_StringStorage.prototype, "unusedStorage", {
        get: function () { return this.unusedStorage$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file)._StringStorage.unusedCapacity*/
    _StringStorage.prototype.unusedCapacity$get = function () {
        var _this = this;
        return Int.infix_38_45({}, Int.infix_38_45({}, _this._realCapacity, _this.count), 1);
    };
    Object.defineProperty(_StringStorage.prototype, "unusedCapacity", {
        get: function () { return this.unusedCapacity$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file)._StringStorage.appendInPlace(_:UnsafeBufferPointer<UInt8>,isASCII:Bool)*/
    /*Swift.(file)._StringStorage.appendInPlace(_:UnsafeBufferPointer<UInt8>,isASCII:Bool)*/
    _StringStorage.prototype.appendInPlaceIsASCII = function ($info, other, isASCII) {
        var _this = this;
        var srcAddr = _cloneStruct(other.baseAddress._unsafelyUnwrappedUnchecked);
        var srcCount = other.count;
        _this.mutableEnd.initializeFromCount({}, srcAddr, srcCount);
        _this._postAppendAdjustAppendedCountAppendedIsASCII({}, srcCount, isASCII);
    };
    /*Swift.(file)._StringStorage.appendInPlace(_:Iter,isASCII:Bool)*/
    /*Swift.(file)._StringStorage.appendInPlace(_:Iter,isASCII:Bool)*/
    _StringStorage.prototype.appendInPlaceIsASCII = function ($info, other$inout, isASCII) {
        var _this = this;
        var other = other$inout.get();
        var $result = (function () {
            var srcCount = 0;
            while (true) {
                var $ifLet0, cu_1;
                if (!((($ifLet0 = other.next({ $setThis: function ($val) { return other = $val; } })) || true) && $ifLet0 != null && ((cu_1 = $ifLet0) || true)))
                    break;
                _this.unusedStorage.subscript$set({ $setThis: function ($val) { return _this.unusedStorage = _cloneStruct($val); } }, cu_1, srcCount);
                Int.infix_43_61({}, { get: function () { return srcCount; }, set: function ($val) { return srcCount = $val; } }, 1);
            }
            ;
            _this._postAppendAdjustAppendedCountAppendedIsASCII({}, srcCount, isASCII);
        })();
        other$inout.set(other);
        return $result;
    };
    /*Swift.(file)._StringStorage.clear()*/
    /*Swift.(file)._StringStorage.clear()*/
    _StringStorage.prototype.clear = function ($info) {
        var _this = this;
        _this._postRRCAdjustNewCountNewIsASCII({}, 0, true);
    };
    /*Swift.(file)._StringStorage.remove(from:Int,to:Int)*/
    /*Swift.(file)._StringStorage.remove(from:Int,to:Int)*/
    _StringStorage.prototype.removeFromTo = function ($info, lower, upper) {
        var _this = this;
        var lowerPtr = _cloneStruct(UnsafeMutablePointer.infix_43({}, _this.mutableStart, lower));
        var upperPtr = _cloneStruct(UnsafeMutablePointer.infix_43({}, _this.mutableStart, upper));
        var tailCount = UnsafeMutablePointer.infix_45({}, _this.mutableEnd, upperPtr);
        lowerPtr.moveInitializeFromCount({}, upperPtr, tailCount);
        _this._postRRCAdjustNewCountNewIsASCII({}, Int.infix_38_45({}, _this.count, Int.infix_38_45({}, upper, lower)), _this.isASCII);
    };
    /*Swift.(file)._StringStorage.replace(from:Int,to:Int,with:UnsafeBufferPointer<UInt8>)*/
    /*Swift.(file)._StringStorage.replace(from:Int,to:Int,with:UnsafeBufferPointer<UInt8>)*/
    _StringStorage.prototype.replaceFromToWith = function ($info, lower, upper, replacement) {
        var _this = this;
        var replCount = replacement.count;
        var lowerPtr = _cloneStruct(UnsafeMutablePointer.infix_43({}, _this.mutableStart, lower));
        var tailCount = _this._slideTailSrcDst({}, UnsafeMutablePointer.infix_43({}, _this.mutableStart, upper), UnsafeMutablePointer.infix_43({}, lowerPtr, replCount));
        lowerPtr.moveInitializeFromCount({}, _create(UnsafeMutablePointer, 'initMutatingUnsafePointer', {}, replacement.baseAddress._unsafelyUnwrappedUnchecked), replCount);
        var isASCII = Bool.infix_38_38({}, _this.isASCII, function () { return _allASCII({}, replacement); });
        _this._postRRCAdjustNewCountNewIsASCII({}, Int.infix_43({}, Int.infix_43({}, lower, replCount), tailCount), isASCII);
    };
    /*Swift.(file)._StringStorage.replace(from:Int,to:Int,with:C,replacementCount:Int)*/
    /*Swift.(file)._StringStorage.replace(from:Int,to:Int,with:C,replacementCount:Int)*/
    _StringStorage.prototype.replaceFromToWithReplacementCount = function ($info, lower, upper, replacement, replCount) {
        var _this = this;
        var lowerPtr = _cloneStruct(UnsafeMutablePointer.infix_43({}, _this.mutableStart, lower));
        var tailCount = _this._slideTailSrcDst({}, UnsafeMutablePointer.infix_43({}, _this.mutableStart, upper), UnsafeMutablePointer.infix_43({}, lowerPtr, replCount));
        var isASCII = _this.isASCII;
        var srcCount = 0;
        {
            var $cu$generator_1 = replacement.makeIterator({});
            while (true) {
                var $ifLet0, cu_1;
                if (!((($ifLet0 = $cu$generator_1.next({ $setThis: function ($val) { return $cu$generator_1 = $val; } })) || true) && $ifLet0 != null && ((cu_1 = $ifLet0) || true)))
                    break;
                if ((UInt8.infix_62_61({}, cu_1, 0x80))) {
                    isASCII = false;
                }
                ;
                lowerPtr.subscript$set({ $setThis: function ($val) { return lowerPtr = _cloneStruct($val); } }, cu_1, srcCount);
                Int.infix_43_61({}, { get: function () { return srcCount; }, set: function ($val) { return srcCount = $val; } }, 1);
            }
        }
        ;
        _this._postRRCAdjustNewCountNewIsASCII({}, Int.infix_43({}, Int.infix_43({}, lower, replCount), tailCount), isASCII);
    };
    _StringStorage.prototype.init$vars = function () {
        if (_super.prototype.init$vars)
            _super.prototype.init$vars.call(this);
    };
    _StringStorage.$infoAddress = '';
    return _StringStorage;
}(__SwiftNativeNSString));
if (typeof _AbstractStringStorage$implementation != 'undefined')
    _mixin(_StringStorage, _AbstractStringStorage$implementation, false);
var _SharedStringStorage = /** @class */ (function (_super) {
    __extends(_SharedStringStorage, _super);
    function _SharedStringStorage() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    /*Swift.(file)._SharedStringStorage.start*/
    _SharedStringStorage.prototype.start$get = function () {
        throw 'unsupported variable Swift.(file)._SharedStringStorage.start in ' + this.constructor.name;
    };
    Object.defineProperty(_SharedStringStorage.prototype, "start", {
        get: function () { return this.start$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file)._SharedStringStorage.count*/
    _SharedStringStorage.prototype.count$get = function () {
        throw 'unsupported variable Swift.(file)._SharedStringStorage.count in ' + this.constructor.name;
    };
    Object.defineProperty(_SharedStringStorage.prototype, "count", {
        get: function () { return this.count$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file)._SharedStringStorage.init(immortal:UnsafePointer<UInt8>,countAndFlags:_StringObject.CountAndFlags)*/
    /*Swift.(file)._SharedStringStorage.init(immortal:UnsafePointer<UInt8>,countAndFlags:_StringObject.CountAndFlags)*/
    _SharedStringStorage.prototype.initImmortalUnsafePointerCountAndFlags_StringObjectCountAndFlags = function ($info, ptr, countAndFlags) {
        throw 'unsupported method Swift.(file)._SharedStringStorage.init(immortal:UnsafePointer<UInt8>,countAndFlags:_StringObject.CountAndFlags) in ' + this.constructor.name;
    };
    /*Swift.(file)._SharedStringStorage.isASCII*/
    _SharedStringStorage.prototype.isASCII$get = function () {
        throw 'unsupported variable Swift.(file)._SharedStringStorage.isASCII in ' + this.constructor.name;
    };
    Object.defineProperty(_SharedStringStorage.prototype, "isASCII", {
        get: function () { return this.isASCII$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file)._SharedStringStorage.asString*/
    _SharedStringStorage.prototype.asString$get = function () {
        throw 'unsupported variable Swift.(file)._SharedStringStorage.asString in ' + this.constructor.name;
    };
    Object.defineProperty(_SharedStringStorage.prototype, "asString", {
        get: function () { return this.asString$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file)._SharedStringStorage.hash*/
    _SharedStringStorage.prototype.hash$get = function () {
        throw 'unsupported variable Swift.(file)._SharedStringStorage.hash in ' + this.constructor.name;
    };
    Object.defineProperty(_SharedStringStorage.prototype, "hash", {
        get: function () { return this.hash$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file)._SharedStringStorage.character(at:Int)*/
    /*Swift.(file)._SharedStringStorage.character(at:Int)*/
    _SharedStringStorage.prototype.characterAt = function ($info, offset) {
        throw 'unsupported method Swift.(file)._SharedStringStorage.character(at:Int) in ' + this.constructor.name;
    };
    /*Swift.(file)._SharedStringStorage.getCharacters(_:UnsafeMutablePointer<UInt16>,range:_SwiftNSRange)*/
    /*Swift.(file)._SharedStringStorage.getCharacters(_:UnsafeMutablePointer<UInt16>,range:_SwiftNSRange)*/
    _SharedStringStorage.prototype.getCharactersRange = function ($info, buffer, aRange) {
        throw 'unsupported method Swift.(file)._SharedStringStorage.getCharacters(_:UnsafeMutablePointer<UInt16>,range:_SwiftNSRange) in ' + this.constructor.name;
    };
    /*Swift.(file)._SharedStringStorage.fastestEncoding*/
    _SharedStringStorage.prototype.fastestEncoding$get = function () {
        throw 'unsupported variable Swift.(file)._SharedStringStorage.fastestEncoding in ' + this.constructor.name;
    };
    Object.defineProperty(_SharedStringStorage.prototype, "fastestEncoding", {
        get: function () { return this.fastestEncoding$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file)._SharedStringStorage.cString(encoding:UInt)*/
    /*Swift.(file)._SharedStringStorage.cString(encoding:UInt)*/
    _SharedStringStorage.prototype.cStringEncoding = function ($info, encoding) {
        throw 'unsupported method Swift.(file)._SharedStringStorage.cString(encoding:UInt) in ' + this.constructor.name;
    };
    /*Swift.(file)._SharedStringStorage.getCString(_:UnsafeMutablePointer<UInt8>,maxLength:Int,encoding:UInt)*/
    /*Swift.(file)._SharedStringStorage.getCString(_:UnsafeMutablePointer<UInt8>,maxLength:Int,encoding:UInt)*/
    _SharedStringStorage.prototype.getCStringMaxLengthEncoding = function ($info, outputPtr, maxLength, encoding) {
        throw 'unsupported method Swift.(file)._SharedStringStorage.getCString(_:UnsafeMutablePointer<UInt8>,maxLength:Int,encoding:UInt) in ' + this.constructor.name;
    };
    /*Swift.(file)._SharedStringStorage.isEqual(to:AnyObject?)*/
    /*Swift.(file)._SharedStringStorage.isEqual(to:AnyObject?)*/
    _SharedStringStorage.prototype.isEqualTo = function ($info, other) {
        throw 'unsupported method Swift.(file)._SharedStringStorage.isEqual(to:AnyObject?) in ' + this.constructor.name;
    };
    /*Swift.(file)._SharedStringStorage.copy(with:_SwiftNSZone?)*/
    /*Swift.(file)._NSCopying.copy(with:_SwiftNSZone?)*/
    _SharedStringStorage.prototype.copyWith = function ($info, zone) {
        throw 'unsupported method Swift.(file)._SharedStringStorage.copy(with:_SwiftNSZone?) in ' + this.constructor.name;
    };
    /*Swift.(file)._SharedStringStorage.init()*/
    /*Swift.(file).__SwiftNativeNSString.init()*/
    _SharedStringStorage.prototype.init = function ($info) {
        throw 'unsupported method Swift.(file)._SharedStringStorage.init() in ' + this.constructor.name;
    };
    _SharedStringStorage.prototype.init$vars = function () {
        if (_super.prototype.init$vars)
            _super.prototype.init$vars.call(this);
    };
    _SharedStringStorage.$infoAddress = '';
    return _SharedStringStorage;
}(__SwiftNativeNSString));
if (typeof _AbstractStringStorage$implementation != 'undefined')
    _mixin(_SharedStringStorage, _AbstractStringStorage$implementation, false);
var _OpaqueStringSwitchCache = /** @class */ (function () {
    function _OpaqueStringSwitchCache() {
    }
    /*Swift.(file)._OpaqueStringSwitchCache.a*/
    _OpaqueStringSwitchCache.prototype.a$get = function () {
        throw 'unsupported variable Swift.(file)._OpaqueStringSwitchCache.a in ' + this.constructor.name;
    };
    Object.defineProperty(_OpaqueStringSwitchCache.prototype, "a", {
        get: function () { return this.a$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file)._OpaqueStringSwitchCache.b*/
    _OpaqueStringSwitchCache.prototype.b$get = function () {
        throw 'unsupported variable Swift.(file)._OpaqueStringSwitchCache.b in ' + this.constructor.name;
    };
    Object.defineProperty(_OpaqueStringSwitchCache.prototype, "b", {
        get: function () { return this.b$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file)._OpaqueStringSwitchCache.init(a:Word,b:Word)*/
    /*Swift.(file)._OpaqueStringSwitchCache.init(a:Word,b:Word)*/
    _OpaqueStringSwitchCache.prototype.initAWordBWord = function ($info, a, b) {
        throw 'unsupported method Swift.(file)._OpaqueStringSwitchCache.init(a:Word,b:Word) in ' + this.constructor.name;
    };
    _OpaqueStringSwitchCache.prototype.init$vars = function () {
    };
    _OpaqueStringSwitchCache.$struct = true;
    _OpaqueStringSwitchCache.$infoAddress = '';
    return _OpaqueStringSwitchCache;
}());
var _StringSwitchContext = /** @class */ (function () {
    function _StringSwitchContext() {
    }
    /*Swift.(file)._StringSwitchContext.init(cases:[StaticString],cachePtr:UnsafeMutablePointer<_StringSwitchCache>)*/
    /*Swift.(file)._StringSwitchContext.init(cases:[StaticString],cachePtr:UnsafeMutablePointer<_StringSwitchCache>)*/
    _StringSwitchContext.prototype.initCasesArrayCachePtrUnsafeMutablePointer = function ($info, cases, cachePtr) {
        throw 'unsupported method Swift.(file)._StringSwitchContext.init(cases:[StaticString],cachePtr:UnsafeMutablePointer<_StringSwitchCache>) in ' + this.constructor.name;
    };
    /*Swift.(file)._StringSwitchContext.cases*/
    _StringSwitchContext.prototype.cases$get = function () {
        throw 'unsupported variable Swift.(file)._StringSwitchContext.cases in ' + this.constructor.name;
    };
    Object.defineProperty(_StringSwitchContext.prototype, "cases", {
        get: function () { return this.cases$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file)._StringSwitchContext.cachePtr*/
    _StringSwitchContext.prototype.cachePtr$get = function () {
        throw 'unsupported variable Swift.(file)._StringSwitchContext.cachePtr in ' + this.constructor.name;
    };
    Object.defineProperty(_StringSwitchContext.prototype, "cachePtr", {
        get: function () { return this.cachePtr$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    _StringSwitchContext.prototype.init$vars = function () {
    };
    _StringSwitchContext.$struct = true;
    _StringSwitchContext.$infoAddress = '';
    return _StringSwitchContext;
}());
var _StringRepresentation = /** @class */ (function () {
    function _StringRepresentation() {
    }
    /*Swift.(file)._StringRepresentation.init(_isASCII:Bool,_count:Int,_capacity:Int,_form:_StringRepresentation._Form)*/
    /*Swift.(file)._StringRepresentation.init(_isASCII:Bool,_count:Int,_capacity:Int,_form:_StringRepresentation._Form)*/
    _StringRepresentation.prototype.init_isASCIIBool_countInt_capacityInt_form_StringRepresentation_Form = function ($info, _isASCII, _count, _capacity, _form) {
        throw 'unsupported method Swift.(file)._StringRepresentation.init(_isASCII:Bool,_count:Int,_capacity:Int,_form:_StringRepresentation._Form) in ' + this.constructor.name;
    };
    _StringRepresentation.prototype.init$vars = function () {
    };
    var _o;
    _StringRepresentation.$struct = true;
    _StringRepresentation.$infoAddress = '';
    _StringRepresentation._Form = (_o = /** @class */ (function () {
            function class_13() {
            }
            Object.defineProperty(class_13, "_small", {
                get: function () { return Object.assign(new _StringRepresentation._Form(), __assign({ rawValue: "_small" }, Array.from(arguments).slice(1))); },
                enumerable: true,
                configurable: true
            });
            class_13._cocoa = function () { return Object.assign(new _StringRepresentation._Form(), __assign({ rawValue: "_cocoa" }, Array.from(arguments).slice(1))); };
            class_13._native = function () { return Object.assign(new _StringRepresentation._Form(), __assign({ rawValue: "_native" }, Array.from(arguments).slice(1))); };
            class_13._immortal = function () { return Object.assign(new _StringRepresentation._Form(), __assign({ rawValue: "_immortal" }, Array.from(arguments).slice(1))); };
            class_13.prototype.init$vars = function () {
            };
            return class_13;
        }()),
        _o.$infoAddress = '',
        _o);
    return _StringRepresentation;
}());
_mixin(_StringRepresentation._Form, _DefaultEnumImplementation, false);
var UTF8ExtraInfo = /** @class */ (function () {
    function UTF8ExtraInfo() {
    }
    /*Swift.(file).UTF8ExtraInfo.isASCII*/
    UTF8ExtraInfo.prototype.isASCII$get = function () {
        throw 'unsupported variable Swift.(file).UTF8ExtraInfo.isASCII in ' + this.constructor.name;
    };
    Object.defineProperty(UTF8ExtraInfo.prototype, "isASCII", {
        get: function () { return this.isASCII$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).UTF8ExtraInfo.init(isASCII:Bool)*/
    /*Swift.(file).UTF8ExtraInfo.init(isASCII:Bool)*/
    UTF8ExtraInfo.prototype.initIsASCIIBool = function ($info, isASCII) {
        throw 'unsupported method Swift.(file).UTF8ExtraInfo.init(isASCII:Bool) in ' + this.constructor.name;
    };
    /*Swift.(file).UTF8ExtraInfo.==(_:UTF8ExtraInfo,_:UTF8ExtraInfo)*/
    /*Swift.(file).Equatable.==infix(_:Self,_:Self)*/
    UTF8ExtraInfo.infix_61_61 = function ($info, a, b) {
        return a == b;
    };
    UTF8ExtraInfo.prototype.init$vars = function () {
    };
    UTF8ExtraInfo.$struct = true;
    UTF8ExtraInfo.$infoAddress = '';
    return UTF8ExtraInfo;
}());
if (typeof Equatable$implementation != 'undefined')
    _mixin(UTF8ExtraInfo, Equatable$implementation, false);
var UTF8ValidationResult = /** @class */ (function () {
    function UTF8ValidationResult() {
    }
    UTF8ValidationResult.success = function () { return Object.assign(new UTF8ValidationResult(), __assign({ rawValue: "success" }, Array.from(arguments).slice(1))); };
    UTF8ValidationResult.error = function () { return Object.assign(new UTF8ValidationResult(), __assign({ rawValue: "error" }, Array.from(arguments).slice(1))); };
    /*Swift.(file).UTF8ValidationResult.==(_:UTF8ValidationResult,_:UTF8ValidationResult)*/
    /*Swift.(file).Equatable.==infix(_:Self,_:Self)*/
    UTF8ValidationResult.infix_61_61 = function ($info, a, b) {
        return a == b;
    };
    UTF8ValidationResult.prototype.init$vars = function () {
    };
    UTF8ValidationResult.$infoAddress = '';
    return UTF8ValidationResult;
}());
if (typeof Equatable$implementation != 'undefined')
    _mixin(UTF8ValidationResult, Equatable$implementation, false);
_mixin(UTF8ValidationResult, _DefaultEnumImplementation, false);
var UTF8ValidationError = /** @class */ (function () {
    function UTF8ValidationError() {
    }
    /*Swift.(file).UTF8ValidationError.init()*/
    /*Swift.(file).UTF8ValidationError.init()*/
    UTF8ValidationError.prototype.init = function ($info) {
        throw 'unsupported method Swift.(file).UTF8ValidationError.init() in ' + this.constructor.name;
    };
    UTF8ValidationError.prototype.init$vars = function () {
    };
    UTF8ValidationError.$struct = true;
    UTF8ValidationError.$infoAddress = '';
    return UTF8ValidationError;
}());
if (typeof Error$implementation != 'undefined')
    _mixin(UTF8ValidationError, Error$implementation, false);
var __SwiftNativeNSArrayWithContiguousStorage = /** @class */ (function (_super) {
    __extends(__SwiftNativeNSArrayWithContiguousStorage, _super);
    function __SwiftNativeNSArrayWithContiguousStorage() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    /*Swift.(file).__SwiftNativeNSArrayWithContiguousStorage.init()*/
    /*Swift.(file).__SwiftNativeNSArray.init()*/
    __SwiftNativeNSArrayWithContiguousStorage.prototype.init = function ($info) {
        throw 'unsupported method Swift.(file).__SwiftNativeNSArrayWithContiguousStorage.init() in ' + this.constructor.name;
    };
    /*Swift.(file).__SwiftNativeNSArrayWithContiguousStorage.withUnsafeBufferOfObjects(_:(UnsafeBufferPointer<AnyObject>) throws -> R)*/
    /*Swift.(file).__SwiftNativeNSArrayWithContiguousStorage.withUnsafeBufferOfObjects(_:(UnsafeBufferPointer<AnyObject>) throws -> R)*/
    __SwiftNativeNSArrayWithContiguousStorage.prototype.withUnsafeBufferOfObjects = function ($info, body) {
        throw 'unsupported method Swift.(file).__SwiftNativeNSArrayWithContiguousStorage.withUnsafeBufferOfObjects(_:(UnsafeBufferPointer<AnyObject>) throws -> R) in ' + this.constructor.name;
    };
    /*Swift.(file).__SwiftNativeNSArrayWithContiguousStorage.count*/
    __SwiftNativeNSArrayWithContiguousStorage.prototype.count$get = function () {
        throw 'unsupported variable Swift.(file).__SwiftNativeNSArrayWithContiguousStorage.count in ' + this.constructor.name;
    };
    Object.defineProperty(__SwiftNativeNSArrayWithContiguousStorage.prototype, "count", {
        get: function () { return this.count$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).__SwiftNativeNSArrayWithContiguousStorage.objectAt(_:Int)*/
    /*Swift.(file)._NSArrayCore.objectAt(_:Int)*/
    __SwiftNativeNSArrayWithContiguousStorage.prototype.objectAt = function ($info, index) {
        var _this = this;
        return _this.withUnsafeBufferOfObjects({}, (function ($info, objects) {
            preconditionFileLine({}, function () { return _isValidArraySubscriptCount({}, index, objects.count); }, function () { return "Array index out of range"; }, '?3', '?3');
            return objects.subscript$get({}, index);
        }));
    };
    /*Swift.(file).__SwiftNativeNSArrayWithContiguousStorage.getObjects(_:UnsafeMutablePointer<AnyObject>,range:_SwiftNSRange)*/
    /*Swift.(file)._NSArrayCore.getObjects(_:UnsafeMutablePointer<AnyObject>,range:_SwiftNSRange)*/
    __SwiftNativeNSArrayWithContiguousStorage.prototype.getObjectsRange = function ($info, aBuffer, range) {
        throw 'unsupported method Swift.(file).__SwiftNativeNSArrayWithContiguousStorage.getObjects(_:UnsafeMutablePointer<AnyObject>,range:_SwiftNSRange) in ' + this.constructor.name;
    };
    /*Swift.(file).__SwiftNativeNSArrayWithContiguousStorage.countByEnumerating(with:UnsafeMutablePointer<_SwiftNSFastEnumerationState>,objects:UnsafeMutablePointer<AnyObject>?,count:Int)*/
    /*Swift.(file)._NSArrayCore.countByEnumerating(with:UnsafeMutablePointer<_SwiftNSFastEnumerationState>,objects:UnsafeMutablePointer<AnyObject>?,count:Int)*/
    /*Swift.(file)._NSFastEnumeration.countByEnumerating(with:UnsafeMutablePointer<_SwiftNSFastEnumerationState>,objects:UnsafeMutablePointer<AnyObject>?,count:Int)*/
    __SwiftNativeNSArrayWithContiguousStorage.prototype.countByEnumeratingWithObjectsCount = function ($info, state, objects, count) {
        throw 'unsupported method Swift.(file).__SwiftNativeNSArrayWithContiguousStorage.countByEnumerating(with:UnsafeMutablePointer<_SwiftNSFastEnumerationState>,objects:UnsafeMutablePointer<AnyObject>?,count:Int) in ' + this.constructor.name;
    };
    /*Swift.(file).__SwiftNativeNSArrayWithContiguousStorage.copy(with:_SwiftNSZone?)*/
    /*Swift.(file)._NSCopying.copy(with:_SwiftNSZone?)*/
    __SwiftNativeNSArrayWithContiguousStorage.prototype.copyWith = function ($info, _) {
        throw 'unsupported method Swift.(file).__SwiftNativeNSArrayWithContiguousStorage.copy(with:_SwiftNSZone?) in ' + this.constructor.name;
    };
    __SwiftNativeNSArrayWithContiguousStorage.prototype.init$vars = function () {
        if (_super.prototype.init$vars)
            _super.prototype.init$vars.call(this);
    };
    __SwiftNativeNSArrayWithContiguousStorage.$infoAddress = '';
    return __SwiftNativeNSArrayWithContiguousStorage;
}(__SwiftNativeNSArray));
if (typeof _NSArrayCore$implementation != 'undefined')
    _mixin(__SwiftNativeNSArrayWithContiguousStorage, _NSArrayCore$implementation, false);
var __SwiftDeferredNSArray = /** @class */ (function (_super) {
    __extends(__SwiftDeferredNSArray, _super);
    function __SwiftDeferredNSArray() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    /*Swift.(file).__SwiftDeferredNSArray.init(_nativeStorage:__ContiguousArrayStorageBase)*/
    /*Swift.(file).__SwiftDeferredNSArray.init(_nativeStorage:__ContiguousArrayStorageBase)*/
    __SwiftDeferredNSArray.prototype.init_nativeStorage__ContiguousArrayStorageBase = function ($info, _nativeStorage) {
        throw 'unsupported method Swift.(file).__SwiftDeferredNSArray.init(_nativeStorage:__ContiguousArrayStorageBase) in ' + this.constructor.name;
    };
    /*Swift.(file).__SwiftDeferredNSArray.withUnsafeBufferOfObjects(_:(UnsafeBufferPointer<AnyObject>) throws -> R)*/
    /*Swift.(file).__SwiftNativeNSArrayWithContiguousStorage.withUnsafeBufferOfObjects(_:(UnsafeBufferPointer<AnyObject>) throws -> R)*/
    __SwiftDeferredNSArray.prototype.withUnsafeBufferOfObjects = function ($info, body) {
        throw 'unsupported method Swift.(file).__SwiftDeferredNSArray.withUnsafeBufferOfObjects(_:(UnsafeBufferPointer<AnyObject>) throws -> R) in ' + this.constructor.name;
    };
    /*Swift.(file).__SwiftDeferredNSArray.count*/
    __SwiftDeferredNSArray.prototype.count$get = function () {
        throw 'unsupported variable Swift.(file).__SwiftDeferredNSArray.count in ' + this.constructor.name;
    };
    Object.defineProperty(__SwiftDeferredNSArray.prototype, "count", {
        get: function () { return this.count$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).__SwiftDeferredNSArray.init()*/
    /*Swift.(file).__SwiftNativeNSArray.init()*/
    __SwiftDeferredNSArray.prototype.init = function ($info) {
        throw 'unsupported method Swift.(file).__SwiftDeferredNSArray.init() in ' + this.constructor.name;
    };
    __SwiftDeferredNSArray.prototype.init$vars = function () {
        if (_super.prototype.init$vars)
            _super.prototype.init$vars.call(this);
    };
    __SwiftDeferredNSArray.$infoAddress = '';
    return __SwiftDeferredNSArray;
}(__SwiftNativeNSArrayWithContiguousStorage));
var __ContiguousArrayStorageBase = /** @class */ (function (_super) {
    __extends(__ContiguousArrayStorageBase, _super);
    function __ContiguousArrayStorageBase() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    /*Swift.(file).__ContiguousArrayStorageBase.countAndCapacity*/
    __ContiguousArrayStorageBase.prototype.countAndCapacity$get = function () {
        throw 'unsupported variable Swift.(file).__ContiguousArrayStorageBase.countAndCapacity in ' + this.constructor.name;
    };
    Object.defineProperty(__ContiguousArrayStorageBase.prototype, "countAndCapacity", {
        get: function () { return this.countAndCapacity$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).__ContiguousArrayStorageBase.init(_doNotCallMeBase:())*/
    /*Swift.(file).__ContiguousArrayStorageBase.init(_doNotCallMeBase:())*/
    __ContiguousArrayStorageBase.prototype.init_doNotCallMeBasetuple_type = function ($info, _doNotCallMeBase) {
        throw 'unsupported method Swift.(file).__ContiguousArrayStorageBase.init(_doNotCallMeBase:()) in ' + this.constructor.name;
    };
    /*Swift.(file).__ContiguousArrayStorageBase.withUnsafeBufferOfObjects(_:(UnsafeBufferPointer<AnyObject>) throws -> R)*/
    /*Swift.(file).__SwiftNativeNSArrayWithContiguousStorage.withUnsafeBufferOfObjects(_:(UnsafeBufferPointer<AnyObject>) throws -> R)*/
    __ContiguousArrayStorageBase.prototype.withUnsafeBufferOfObjects = function ($info, body) {
        throw 'unsupported method Swift.(file).__ContiguousArrayStorageBase.withUnsafeBufferOfObjects(_:(UnsafeBufferPointer<AnyObject>) throws -> R) in ' + this.constructor.name;
    };
    /*Swift.(file).__ContiguousArrayStorageBase.canStoreElements(ofDynamicType:Any.Type)*/
    /*Swift.(file).__ContiguousArrayStorageBase.canStoreElements(ofDynamicType:Any.Type)*/
    __ContiguousArrayStorageBase.prototype.canStoreElementsOfDynamicType = function ($info, _) {
        throw 'unsupported method Swift.(file).__ContiguousArrayStorageBase.canStoreElements(ofDynamicType:Any.Type) in ' + this.constructor.name;
    };
    /*Swift.(file).__ContiguousArrayStorageBase.staticElementType*/
    __ContiguousArrayStorageBase.prototype.staticElementType$get = function () {
        throw 'unsupported variable Swift.(file).__ContiguousArrayStorageBase.staticElementType in ' + this.constructor.name;
    };
    Object.defineProperty(__ContiguousArrayStorageBase.prototype, "staticElementType", {
        get: function () { return this.staticElementType$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).__ContiguousArrayStorageBase.init()*/
    /*Swift.(file).__SwiftNativeNSArray.init()*/
    __ContiguousArrayStorageBase.prototype.init = function ($info) {
        throw 'unsupported method Swift.(file).__ContiguousArrayStorageBase.init() in ' + this.constructor.name;
    };
    __ContiguousArrayStorageBase.prototype.init$vars = function () {
        if (_super.prototype.init$vars)
            _super.prototype.init$vars.call(this);
    };
    __ContiguousArrayStorageBase.$infoAddress = '';
    return __ContiguousArrayStorageBase;
}(__SwiftNativeNSArrayWithContiguousStorage));
var _TLSAtomicInt = /** @class */ (function () {
    function _TLSAtomicInt() {
    }
    /*Swift.(file)._TLSAtomicInt.value*/
    _TLSAtomicInt.prototype.value$get = function () {
        throw 'unsupported variable Swift.(file)._TLSAtomicInt.value in ' + this.constructor.name;
    };
    Object.defineProperty(_TLSAtomicInt.prototype, "value", {
        get: function () { return this.value$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file)._TLSAtomicInt.init()*/
    /*Swift.(file)._TLSAtomicInt.init()*/
    _TLSAtomicInt.prototype.init = function ($info) {
        throw 'unsupported method Swift.(file)._TLSAtomicInt.init() in ' + this.constructor.name;
    };
    /*Swift.(file)._TLSAtomicInt.valuePtr*/
    _TLSAtomicInt.prototype.valuePtr$get = function () {
        throw 'unsupported variable Swift.(file)._TLSAtomicInt.valuePtr in ' + this.constructor.name;
    };
    Object.defineProperty(_TLSAtomicInt.prototype, "valuePtr", {
        get: function () { return this.valuePtr$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file)._TLSAtomicInt.increment()*/
    /*Swift.(file)._TLSAtomicInt.increment()*/
    _TLSAtomicInt.prototype.increment = function ($info) {
        throw 'unsupported method Swift.(file)._TLSAtomicInt.increment() in ' + this.constructor.name;
    };
    /*Swift.(file)._TLSAtomicInt.load()*/
    /*Swift.(file)._TLSAtomicInt.load()*/
    _TLSAtomicInt.prototype.load = function ($info) {
        throw 'unsupported method Swift.(file)._TLSAtomicInt.load() in ' + this.constructor.name;
    };
    _TLSAtomicInt.prototype.init$vars = function () {
    };
    _TLSAtomicInt.$infoAddress = '';
    return _TLSAtomicInt;
}());
var _ThreadLocalStorage = /** @class */ (function () {
    function _ThreadLocalStorage() {
    }
    /*Swift.(file)._ThreadLocalStorage.uBreakIterator*/
    _ThreadLocalStorage.prototype.uBreakIterator$get = function () {
        throw 'unsupported variable Swift.(file)._ThreadLocalStorage.uBreakIterator in ' + this.constructor.name;
    };
    Object.defineProperty(_ThreadLocalStorage.prototype, "uBreakIterator", {
        get: function () { return this.uBreakIterator$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file)._ThreadLocalStorage.uText*/
    _ThreadLocalStorage.prototype.uText$get = function () {
        throw 'unsupported variable Swift.(file)._ThreadLocalStorage.uText in ' + this.constructor.name;
    };
    Object.defineProperty(_ThreadLocalStorage.prototype, "uText", {
        get: function () { return this.uText$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file)._ThreadLocalStorage.init(_uBreakIterator:OpaquePointer,_uText:OpaquePointer)*/
    /*Swift.(file)._ThreadLocalStorage.init(_uBreakIterator:OpaquePointer,_uText:OpaquePointer)*/
    _ThreadLocalStorage.prototype.init_uBreakIteratorOpaquePointer_uTextOpaquePointer = function ($info, _uBreakIterator, _uText) {
        throw 'unsupported method Swift.(file)._ThreadLocalStorage.init(_uBreakIterator:OpaquePointer,_uText:OpaquePointer) in ' + this.constructor.name;
    };
    /*Swift.(file)._ThreadLocalStorage.getPointer()*/
    /*Swift.(file)._ThreadLocalStorage.getPointer()*/
    _ThreadLocalStorage.getPointer = function ($info) {
        throw 'unsupported method Swift.(file)._ThreadLocalStorage.getPointer() in ' + this.constructor.name;
    };
    /*Swift.(file)._ThreadLocalStorage.getUBreakIterator(_:UnsafeBufferPointer<UTF16.CodeUnit>)*/
    /*Swift.(file)._ThreadLocalStorage.getUBreakIterator(_:UnsafeBufferPointer<UTF16.CodeUnit>)*/
    _ThreadLocalStorage.getUBreakIterator = function ($info, bufPtr) {
        throw 'unsupported method Swift.(file)._ThreadLocalStorage.getUBreakIterator(_:UnsafeBufferPointer<UTF16.CodeUnit>) in ' + this.constructor.name;
    };
    /*Swift.(file)._ThreadLocalStorage.getUBreakIterator(_:UnsafeBufferPointer<UTF8.CodeUnit>)*/
    /*Swift.(file)._ThreadLocalStorage.getUBreakIterator(_:UnsafeBufferPointer<UTF8.CodeUnit>)*/
    _ThreadLocalStorage.getUBreakIterator = function ($info, bufPtr) {
        throw 'unsupported method Swift.(file)._ThreadLocalStorage.getUBreakIterator(_:UnsafeBufferPointer<UTF8.CodeUnit>) in ' + this.constructor.name;
    };
    _ThreadLocalStorage.prototype.init$vars = function () {
    };
    _ThreadLocalStorage.$struct = true;
    _ThreadLocalStorage.$infoAddress = '';
    return _ThreadLocalStorage;
}());
var _UnicodeEncoding$implementation = /** @class */ (function () {
    function _UnicodeEncoding$implementation() {
    }
    /*Swift.(file)._UnicodeEncoding.transcode(_:FromEncoding.EncodedScalar,from:FromEncoding.Type)*/
    /*Swift.(file)._UnicodeEncoding.transcode(_:FromEncoding.EncodedScalar,from:FromEncoding.Type)*/
    _UnicodeEncoding$implementation.transcodeFrom = function ($info, content, _) {
        throw 'unsupported method Swift.(file)._UnicodeEncoding.transcode(_:FromEncoding.EncodedScalar,from:FromEncoding.Type) in ' + this.constructor.name;
    };
    return _UnicodeEncoding$implementation;
}());
var _UnicodeParser$implementation = /** @class */ (function () {
    function _UnicodeParser$implementation() {
    }
    return _UnicodeParser$implementation;
}());
var Unmanaged = /** @class */ (function () {
    function Unmanaged() {
    }
    /*Swift.(file).Unmanaged.init(_private:Instance)*/
    /*Swift.(file).Unmanaged.init(_private:Instance)*/
    Unmanaged.prototype.init_private = function ($info, _private) {
        var _this = this;
        _this._value = _private;
        return;
    };
    /*Swift.(file).Unmanaged.fromOpaque(_:UnsafeRawPointer)*/
    /*Swift.(file).Unmanaged.fromOpaque(_:UnsafeRawPointer)*/
    Unmanaged.fromOpaque = function ($info, value) {
        var _this = this;
        return _create(Unmanaged, 'init_private', {}, unsafeBitCastTo({}, value, ((function () { throw '!unclarifiedGeneric:Instance'; })())));
    };
    /*Swift.(file).Unmanaged.toOpaque()*/
    /*Swift.(file).Unmanaged.toOpaque()*/
    Unmanaged.prototype.toOpaque = function ($info) {
        var _this = this;
        return unsafeBitCastTo({}, _this._value, UnsafeMutableRawPointer);
    };
    /*Swift.(file).Unmanaged.passRetained(_:Instance)*/
    /*Swift.(file).Unmanaged.passRetained(_:Instance)*/
    Unmanaged.passRetained = function ($info, value) {
        var _this = this;
        return _create(Unmanaged, 'init_private', {}, value).retain({});
    };
    /*Swift.(file).Unmanaged.passUnretained(_:Instance)*/
    /*Swift.(file).Unmanaged.passUnretained(_:Instance)*/
    Unmanaged.passUnretained = function ($info, value) {
        var _this = this;
        return _create(Unmanaged, 'init_private', {}, value);
    };
    /*Swift.(file).Unmanaged.takeUnretainedValue()*/
    /*Swift.(file).Unmanaged.takeUnretainedValue()*/
    Unmanaged.prototype.takeUnretainedValue = function ($info) {
        var _this = this;
        return _this._value;
    };
    /*Swift.(file).Unmanaged.takeRetainedValue()*/
    /*Swift.(file).Unmanaged.takeRetainedValue()*/
    Unmanaged.prototype.takeRetainedValue = function ($info) {
        var _this = this;
        var result = _this._value;
        _this.release({});
        return result;
    };
    /*Swift.(file).Unmanaged.retain()*/
    /*Swift.(file).Unmanaged.retain()*/
    Unmanaged.prototype.retain = function ($info) {
        throw 'unsupported method Swift.(file).Unmanaged.retain() in ' + this.constructor.name;
    };
    /*Swift.(file).Unmanaged.release()*/
    /*Swift.(file).Unmanaged.release()*/
    Unmanaged.prototype.release = function ($info) {
        throw 'unsupported method Swift.(file).Unmanaged.release() in ' + this.constructor.name;
    };
    /*Swift.(file).Unmanaged.autorelease()*/
    /*Swift.(file).Unmanaged.autorelease()*/
    Unmanaged.prototype.autorelease = function ($info) {
        throw 'unsupported method Swift.(file).Unmanaged.autorelease() in ' + this.constructor.name;
    };
    Unmanaged.prototype.init$vars = function () {
    };
    Unmanaged.$struct = true;
    Unmanaged.$infoAddress = '';
    return Unmanaged;
}());
var _UTFParser$implementation = /** @class */ (function () {
    function _UTFParser$implementation() {
    }
    /*Swift.(file)._UTFParser.parseScalar(from:I)*/
    /*Swift.(file)._UTFParser.parseScalar(from:I)*/
    _UTFParser$implementation.prototype.parseScalarFrom = function ($info, input$inout) {
        throw 'unsupported method Swift.(file)._UTFParser.parseScalar(from:I) in ' + this.constructor.name;
    };
    return _UTFParser$implementation;
}());
var UnicodeDecodingResult = /** @class */ (function () {
    function UnicodeDecodingResult() {
    }
    UnicodeDecodingResult.scalarValue = function () { return Object.assign(new UnicodeDecodingResult(), __assign({ rawValue: "scalarValue" }, Array.from(arguments).slice(1))); };
    Object.defineProperty(UnicodeDecodingResult, "emptyInput", {
        get: function () { return Object.assign(new UnicodeDecodingResult(), __assign({ rawValue: "emptyInput" }, Array.from(arguments).slice(1))); },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(UnicodeDecodingResult, "error", {
        get: function () { return Object.assign(new UnicodeDecodingResult(), __assign({ rawValue: "error" }, Array.from(arguments).slice(1))); },
        enumerable: true,
        configurable: true
    });
    /*Swift.(file).UnicodeDecodingResult.==infix(_:UnicodeDecodingResult,_:UnicodeDecodingResult)*/
    /*Swift.(file).Equatable.==infix(_:Self,_:Self)*/
    UnicodeDecodingResult.infix_61_61 = function ($info, lhs, rhs) {
        var _this = this;
        var $match = { 0: lhs, 1: rhs };
        if ((($match[0].rawValue == UnicodeDecodingResult.scalarValue().rawValue && $match[1].rawValue == UnicodeDecodingResult.scalarValue().rawValue))) {
            var lhsScalar = $match[0][0];
            var rhsScalar = $match[1][0];
            return Unicode.Scalar.infix_61_61({}, lhsScalar, rhsScalar);
        }
        else if ((($match[0].rawValue == UnicodeDecodingResult.emptyInput.rawValue && $match[1].rawValue == UnicodeDecodingResult.emptyInput.rawValue))) {
            return true;
        }
        else if ((($match[0].rawValue == UnicodeDecodingResult.error.rawValue && $match[1].rawValue == UnicodeDecodingResult.error.rawValue))) {
            return true;
        }
        else if (((true))) {
            return false;
        }
    };
    UnicodeDecodingResult.prototype.init$vars = function () {
    };
    UnicodeDecodingResult.$infoAddress = '';
    return UnicodeDecodingResult;
}());
if (typeof Equatable$implementation != 'undefined')
    _mixin(UnicodeDecodingResult, Equatable$implementation, false);
_mixin(UnicodeDecodingResult, _DefaultEnumImplementation, false);
var UnicodeCodec$implementation = /** @class */ (function () {
    function UnicodeCodec$implementation() {
    }
    return UnicodeCodec$implementation;
}());
if (typeof Unicode != 'undefined' && typeof Unicode.Encoding$implementation != 'undefined')
    _mixin(UnicodeCodec$implementation, Unicode.Encoding$implementation, false);
var _StringElement$implementation = /** @class */ (function () {
    function _StringElement$implementation() {
    }
    return _StringElement$implementation;
}());
var _PlaygroundQuickLook = /** @class */ (function () {
    function _PlaygroundQuickLook() {
    }
    _PlaygroundQuickLook._text = function () { return Object.assign(new _PlaygroundQuickLook(), __assign({ rawValue: "_text" }, Array.from(arguments).slice(1))); };
    _PlaygroundQuickLook.int = function () { return Object.assign(new _PlaygroundQuickLook(), __assign({ rawValue: "int" }, Array.from(arguments).slice(1))); };
    _PlaygroundQuickLook.uInt = function () { return Object.assign(new _PlaygroundQuickLook(), __assign({ rawValue: "uInt" }, Array.from(arguments).slice(1))); };
    _PlaygroundQuickLook.float = function () { return Object.assign(new _PlaygroundQuickLook(), __assign({ rawValue: "float" }, Array.from(arguments).slice(1))); };
    _PlaygroundQuickLook.double = function () { return Object.assign(new _PlaygroundQuickLook(), __assign({ rawValue: "double" }, Array.from(arguments).slice(1))); };
    _PlaygroundQuickLook._image = function () { return Object.assign(new _PlaygroundQuickLook(), __assign({ rawValue: "_image" }, Array.from(arguments).slice(1))); };
    _PlaygroundQuickLook.sound = function () { return Object.assign(new _PlaygroundQuickLook(), __assign({ rawValue: "sound" }, Array.from(arguments).slice(1))); };
    _PlaygroundQuickLook.color = function () { return Object.assign(new _PlaygroundQuickLook(), __assign({ rawValue: "color" }, Array.from(arguments).slice(1))); };
    _PlaygroundQuickLook.bezierPath = function () { return Object.assign(new _PlaygroundQuickLook(), __assign({ rawValue: "bezierPath" }, Array.from(arguments).slice(1))); };
    _PlaygroundQuickLook.attributedString = function () { return Object.assign(new _PlaygroundQuickLook(), __assign({ rawValue: "attributedString" }, Array.from(arguments).slice(1))); };
    _PlaygroundQuickLook.rectangle = function () { return Object.assign(new _PlaygroundQuickLook(), __assign({ rawValue: "rectangle" }, Array.from(arguments).slice(1))); };
    _PlaygroundQuickLook.point = function () { return Object.assign(new _PlaygroundQuickLook(), __assign({ rawValue: "point" }, Array.from(arguments).slice(1))); };
    _PlaygroundQuickLook.size = function () { return Object.assign(new _PlaygroundQuickLook(), __assign({ rawValue: "size" }, Array.from(arguments).slice(1))); };
    _PlaygroundQuickLook.bool = function () { return Object.assign(new _PlaygroundQuickLook(), __assign({ rawValue: "bool" }, Array.from(arguments).slice(1))); };
    _PlaygroundQuickLook.range = function () { return Object.assign(new _PlaygroundQuickLook(), __assign({ rawValue: "range" }, Array.from(arguments).slice(1))); };
    _PlaygroundQuickLook.view = function () { return Object.assign(new _PlaygroundQuickLook(), __assign({ rawValue: "view" }, Array.from(arguments).slice(1))); };
    _PlaygroundQuickLook.sprite = function () { return Object.assign(new _PlaygroundQuickLook(), __assign({ rawValue: "sprite" }, Array.from(arguments).slice(1))); };
    _PlaygroundQuickLook.url = function () { return Object.assign(new _PlaygroundQuickLook(), __assign({ rawValue: "url" }, Array.from(arguments).slice(1))); };
    _PlaygroundQuickLook._raw = function () { return Object.assign(new _PlaygroundQuickLook(), __assign({ rawValue: "_raw" }, Array.from(arguments).slice(1))); };
    /*Swift.(file)._PlaygroundQuickLook.init(reflecting:Any)*/
    /*Swift.(file)._PlaygroundQuickLook.init(reflecting:Any)*/
    _PlaygroundQuickLook.prototype.initReflectingprotocol_composition_type = function ($info, subject) {
        var _this = this;
        var $ifLet0, customized_1;
        if ((($ifLet0 = subject) || true) && $ifLet0 != null && ((customized_1 = $ifLet0) || true)) {
            $info.$setThis(_this = _cloneStruct(customized_1.customPlaygroundQuickLook));
        }
        else {
            var $ifLet2, customized_3;
            if ((($ifLet2 = subject) || true) && $ifLet2 != null && ((customized_3 = $ifLet2) || true)) {
                $info.$setThis(_this = _cloneStruct(customized_3._defaultCustomPlaygroundQuickLook));
            }
            else {
                var $ifLet4, q_5;
                if ((($ifLet4 = Mirror.quickLookObject({}, subject)) || true) && $ifLet4 != null && ((q_5 = $ifLet4) || true)) {
                    $info.$setThis(_this = _cloneStruct(q_5));
                }
                else {
                    $info.$setThis(_this = _cloneStruct(_PlaygroundQuickLook._text({}, _create(String, 'initReflecting', {}, subject))));
                }
                ;
            }
        }
        ;
        return;
    };
    _PlaygroundQuickLook.prototype.init$vars = function () {
    };
    _PlaygroundQuickLook.$infoAddress = '';
    return _PlaygroundQuickLook;
}());
_mixin(_PlaygroundQuickLook, _DefaultEnumImplementation, false);
var _CustomPlaygroundQuickLookable$implementation = /** @class */ (function () {
    function _CustomPlaygroundQuickLookable$implementation() {
    }
    return _CustomPlaygroundQuickLookable$implementation;
}());
var __DefaultCustomPlaygroundQuickLookable$implementation = /** @class */ (function () {
    function __DefaultCustomPlaygroundQuickLookable$implementation() {
    }
    return __DefaultCustomPlaygroundQuickLookable$implementation;
}());
var AnyIterator = /** @class */ (function () {
    function AnyIterator() {
    }
    /*Swift.(file).AnyIterator.init(_:I)*/
    /*Swift.(file).AnyIterator.init(_:I)*/
    AnyIterator.prototype.init = function ($info, base) {
        throw 'unsupported method Swift.(file).AnyIterator.init(_:I) in ' + this.constructor.name;
    };
    /*Swift.(file).AnyIterator.init(_:() -> Element?)*/
    /*Swift.(file).AnyIterator.init(_:() -> Element?)*/
    AnyIterator.prototype.initfunction_type = function ($info, body) {
        //slightly bodgy; in principle, the passed function becomes the next, so that's exactly what we're doing here
        this.next = body;
    };
    /*Swift.(file).AnyIterator.init(_box:_AnyIteratorBoxBase<Element>)*/
    /*Swift.(file).AnyIterator.init(_box:_AnyIteratorBoxBase<Element>)*/
    AnyIterator.prototype.init_box_AnyIteratorBoxBase = function ($info, _box) {
        throw 'unsupported method Swift.(file).AnyIterator.init(_box:_AnyIteratorBoxBase<Element>) in ' + this.constructor.name;
    };
    /*Swift.(file).AnyIterator.next()*/
    /*Swift.(file).IteratorProtocol.next()*/
    AnyIterator.prototype.next = function ($info) {
        throw 'unsupported method Swift.(file).AnyIterator.next() in ' + this.constructor.name;
    };
    AnyIterator.prototype.init$vars = function () {
    };
    AnyIterator.$struct = true;
    AnyIterator.$infoAddress = '';
    return AnyIterator;
}());
if (typeof IteratorProtocol$implementation != 'undefined')
    _mixin(AnyIterator, IteratorProtocol$implementation, false);
if (typeof Sequence$implementation != 'undefined')
    _mixin(AnyIterator, Sequence$implementation, false);
var _ClosureBasedIterator = /** @class */ (function () {
    function _ClosureBasedIterator() {
    }
    /*Swift.(file)._ClosureBasedIterator.init(_:() -> Element?)*/
    /*Swift.(file)._ClosureBasedIterator.init(_:() -> Element?)*/
    _ClosureBasedIterator.prototype.initfunction_type = function ($info, body) {
        throw 'unsupported method Swift.(file)._ClosureBasedIterator.init(_:() -> Element?) in ' + this.constructor.name;
    };
    /*Swift.(file)._ClosureBasedIterator.next()*/
    /*Swift.(file).IteratorProtocol.next()*/
    _ClosureBasedIterator.prototype.next = function ($info) {
        throw 'unsupported method Swift.(file)._ClosureBasedIterator.next() in ' + this.constructor.name;
    };
    _ClosureBasedIterator.prototype.init$vars = function () {
    };
    _ClosureBasedIterator.$struct = true;
    _ClosureBasedIterator.$infoAddress = '';
    return _ClosureBasedIterator;
}());
if (typeof IteratorProtocol$implementation != 'undefined')
    _mixin(_ClosureBasedIterator, IteratorProtocol$implementation, false);
var _AnyIteratorBoxBase = /** @class */ (function () {
    function _AnyIteratorBoxBase() {
    }
    /*Swift.(file)._AnyIteratorBoxBase.init()*/
    /*Swift.(file)._AnyIteratorBoxBase.init()*/
    _AnyIteratorBoxBase.prototype.init = function ($info) {
        throw 'unsupported method Swift.(file)._AnyIteratorBoxBase.init() in ' + this.constructor.name;
    };
    /*Swift.(file)._AnyIteratorBoxBase.next()*/
    /*Swift.(file).IteratorProtocol.next()*/
    _AnyIteratorBoxBase.prototype.next = function ($info) {
        throw 'unsupported method Swift.(file)._AnyIteratorBoxBase.next() in ' + this.constructor.name;
    };
    _AnyIteratorBoxBase.prototype.init$vars = function () {
    };
    _AnyIteratorBoxBase.$infoAddress = '';
    return _AnyIteratorBoxBase;
}());
if (typeof IteratorProtocol$implementation != 'undefined')
    _mixin(_AnyIteratorBoxBase, IteratorProtocol$implementation, false);
var _IteratorBox = /** @class */ (function (_super) {
    __extends(_IteratorBox, _super);
    function _IteratorBox() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    /*Swift.(file)._IteratorBox.init(_:Base)*/
    /*Swift.(file)._IteratorBox.init(_:Base)*/
    _IteratorBox.prototype.init = function ($info, base) {
        throw 'unsupported method Swift.(file)._IteratorBox.init(_:Base) in ' + this.constructor.name;
    };
    /*Swift.(file)._IteratorBox.next()*/
    /*Swift.(file).IteratorProtocol.next()*/
    _IteratorBox.prototype.next = function ($info) {
        throw 'unsupported method Swift.(file)._IteratorBox.next() in ' + this.constructor.name;
    };
    /*Swift.(file)._IteratorBox.init()*/
    /*Swift.(file)._AnyIteratorBoxBase.init()*/
    _IteratorBox.prototype.init = function ($info) {
        throw 'unsupported method Swift.(file)._IteratorBox.init() in ' + this.constructor.name;
    };
    _IteratorBox.prototype.init$vars = function () {
        if (_super.prototype.init$vars)
            _super.prototype.init$vars.call(this);
    };
    _IteratorBox.$infoAddress = '';
    return _IteratorBox;
}(_AnyIteratorBoxBase));
var _AnySequenceBox = /** @class */ (function () {
    function _AnySequenceBox() {
    }
    /*Swift.(file)._AnySequenceBox.init()*/
    /*Swift.(file)._AnySequenceBox.init()*/
    _AnySequenceBox.prototype.init = function ($info) {
        throw 'unsupported method Swift.(file)._AnySequenceBox.init() in ' + this.constructor.name;
    };
    _AnySequenceBox.prototype.init$vars = function () {
    };
    _AnySequenceBox.$infoAddress = '';
    return _AnySequenceBox;
}());
var _AnyCollectionBox = /** @class */ (function (_super) {
    __extends(_AnyCollectionBox, _super);
    function _AnyCollectionBox() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    /*Swift.(file)._AnyCollectionBox.subscript(_:_AnyIndexBox)*/
    /*Swift.(file)._AnyCollectionBox.subscript(_:_AnyIndexBox)*/
    _AnyCollectionBox.prototype.subscript$get = function ($info, i) {
        throw 'unsupported method Swift.(file)._AnyCollectionBox.subscript(_:_AnyIndexBox) in ' + this.constructor.name;
    };
    /*Swift.(file)._AnyCollectionBox.init(_startIndex:_AnyIndexBox,endIndex:_AnyIndexBox)*/
    /*Swift.(file)._AnyCollectionBox.init(_startIndex:_AnyIndexBox,endIndex:_AnyIndexBox)*/
    _AnyCollectionBox.prototype.init_startIndex_AnyIndexBoxEndIndex_AnyIndexBox = function ($info, _startIndex, endIndex) {
        throw 'unsupported method Swift.(file)._AnyCollectionBox.init(_startIndex:_AnyIndexBox,endIndex:_AnyIndexBox) in ' + this.constructor.name;
    };
    /*Swift.(file)._AnyCollectionBox.subscript(start:_AnyIndexBox,end:_AnyIndexBox)*/
    /*Swift.(file)._AnyCollectionBox.subscript(start:_AnyIndexBox,end:_AnyIndexBox)*/
    _AnyCollectionBox.prototype.subscriptStartEnd$get = function ($info, start, end) {
        throw 'unsupported method Swift.(file)._AnyCollectionBox.subscript(start:_AnyIndexBox,end:_AnyIndexBox) in ' + this.constructor.name;
    };
    /*Swift.(file)._AnyCollectionBox.init()*/
    /*Swift.(file)._AnySequenceBox.init()*/
    _AnyCollectionBox.prototype.init = function ($info) {
        throw 'unsupported method Swift.(file)._AnyCollectionBox.init() in ' + this.constructor.name;
    };
    _AnyCollectionBox.prototype.init$vars = function () {
        if (_super.prototype.init$vars)
            _super.prototype.init$vars.call(this);
    };
    _AnyCollectionBox.$infoAddress = '';
    return _AnyCollectionBox;
}(_AnySequenceBox));
var _AnyBidirectionalCollectionBox = /** @class */ (function (_super) {
    __extends(_AnyBidirectionalCollectionBox, _super);
    function _AnyBidirectionalCollectionBox() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    /*Swift.(file)._AnyBidirectionalCollectionBox.subscript(start:_AnyIndexBox,end:_AnyIndexBox)*/
    /*Swift.(file)._AnyCollectionBox.subscript(start:_AnyIndexBox,end:_AnyIndexBox)*/
    _AnyBidirectionalCollectionBox.prototype.subscriptStartEnd$get = function ($info, start, end) {
        throw 'unsupported method Swift.(file)._AnyBidirectionalCollectionBox.subscript(start:_AnyIndexBox,end:_AnyIndexBox) in ' + this.constructor.name;
    };
    /*Swift.(file)._AnyBidirectionalCollectionBox.init(_startIndex:_AnyIndexBox,endIndex:_AnyIndexBox)*/
    /*Swift.(file)._AnyCollectionBox.init(_startIndex:_AnyIndexBox,endIndex:_AnyIndexBox)*/
    _AnyBidirectionalCollectionBox.prototype.init_startIndex_AnyIndexBoxEndIndex_AnyIndexBox = function ($info, _startIndex, endIndex) {
        throw 'unsupported method Swift.(file)._AnyBidirectionalCollectionBox.init(_startIndex:_AnyIndexBox,endIndex:_AnyIndexBox) in ' + this.constructor.name;
    };
    _AnyBidirectionalCollectionBox.prototype.init$vars = function () {
        if (_super.prototype.init$vars)
            _super.prototype.init$vars.call(this);
    };
    _AnyBidirectionalCollectionBox.$infoAddress = '';
    return _AnyBidirectionalCollectionBox;
}(_AnyCollectionBox));
var _AnyRandomAccessCollectionBox = /** @class */ (function (_super) {
    __extends(_AnyRandomAccessCollectionBox, _super);
    function _AnyRandomAccessCollectionBox() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    /*Swift.(file)._AnyRandomAccessCollectionBox.subscript(start:_AnyIndexBox,end:_AnyIndexBox)*/
    /*Swift.(file)._AnyCollectionBox.subscript(start:_AnyIndexBox,end:_AnyIndexBox)*/
    _AnyRandomAccessCollectionBox.prototype.subscriptStartEnd$get = function ($info, start, end) {
        throw 'unsupported method Swift.(file)._AnyRandomAccessCollectionBox.subscript(start:_AnyIndexBox,end:_AnyIndexBox) in ' + this.constructor.name;
    };
    /*Swift.(file)._AnyRandomAccessCollectionBox.init(_startIndex:_AnyIndexBox,endIndex:_AnyIndexBox)*/
    /*Swift.(file)._AnyCollectionBox.init(_startIndex:_AnyIndexBox,endIndex:_AnyIndexBox)*/
    _AnyRandomAccessCollectionBox.prototype.init_startIndex_AnyIndexBoxEndIndex_AnyIndexBox = function ($info, _startIndex, endIndex) {
        throw 'unsupported method Swift.(file)._AnyRandomAccessCollectionBox.init(_startIndex:_AnyIndexBox,endIndex:_AnyIndexBox) in ' + this.constructor.name;
    };
    _AnyRandomAccessCollectionBox.prototype.init$vars = function () {
        if (_super.prototype.init$vars)
            _super.prototype.init$vars.call(this);
    };
    _AnyRandomAccessCollectionBox.$infoAddress = '';
    return _AnyRandomAccessCollectionBox;
}(_AnyBidirectionalCollectionBox));
var _SequenceBox = /** @class */ (function (_super) {
    __extends(_SequenceBox, _super);
    function _SequenceBox() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    /*Swift.(file)._SequenceBox.init(_base:S)*/
    /*Swift.(file)._SequenceBox.init(_base:S)*/
    _SequenceBox.prototype.init_base = function ($info, _base) {
        throw 'unsupported method Swift.(file)._SequenceBox.init(_base:S) in ' + this.constructor.name;
    };
    /*Swift.(file)._SequenceBox.init()*/
    /*Swift.(file)._AnySequenceBox.init()*/
    _SequenceBox.prototype.init = function ($info) {
        throw 'unsupported method Swift.(file)._SequenceBox.init() in ' + this.constructor.name;
    };
    _SequenceBox.prototype.init$vars = function () {
        if (_super.prototype.init$vars)
            _super.prototype.init$vars.call(this);
    };
    _SequenceBox.$infoAddress = '';
    return _SequenceBox;
}(_AnySequenceBox));
var _CollectionBox = /** @class */ (function (_super) {
    __extends(_CollectionBox, _super);
    function _CollectionBox() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    /*Swift.(file)._CollectionBox.init(_base:S)*/
    /*Swift.(file)._CollectionBox.init(_base:S)*/
    _CollectionBox.prototype.init_base = function ($info, _base) {
        throw 'unsupported method Swift.(file)._CollectionBox.init(_base:S) in ' + this.constructor.name;
    };
    /*Swift.(file)._CollectionBox.subscript(_:_AnyIndexBox)*/
    /*Swift.(file)._AnyCollectionBox.subscript(_:_AnyIndexBox)*/
    _CollectionBox.prototype.subscript$get = function ($info, position) {
        throw 'unsupported method Swift.(file)._CollectionBox.subscript(_:_AnyIndexBox) in ' + this.constructor.name;
    };
    /*Swift.(file)._CollectionBox.subscript(start:_AnyIndexBox,end:_AnyIndexBox)*/
    /*Swift.(file)._AnyCollectionBox.subscript(start:_AnyIndexBox,end:_AnyIndexBox)*/
    _CollectionBox.prototype.subscriptStartEnd$get = function ($info, start, end) {
        throw 'unsupported method Swift.(file)._CollectionBox.subscript(start:_AnyIndexBox,end:_AnyIndexBox) in ' + this.constructor.name;
    };
    /*Swift.(file)._CollectionBox.init(_startIndex:_AnyIndexBox,endIndex:_AnyIndexBox)*/
    /*Swift.(file)._AnyCollectionBox.init(_startIndex:_AnyIndexBox,endIndex:_AnyIndexBox)*/
    _CollectionBox.prototype.init_startIndex_AnyIndexBoxEndIndex_AnyIndexBox = function ($info, _startIndex, endIndex) {
        throw 'unsupported method Swift.(file)._CollectionBox.init(_startIndex:_AnyIndexBox,endIndex:_AnyIndexBox) in ' + this.constructor.name;
    };
    _CollectionBox.prototype.init$vars = function () {
        if (_super.prototype.init$vars)
            _super.prototype.init$vars.call(this);
    };
    _CollectionBox.$infoAddress = '';
    return _CollectionBox;
}(_AnyCollectionBox));
var _BidirectionalCollectionBox = /** @class */ (function (_super) {
    __extends(_BidirectionalCollectionBox, _super);
    function _BidirectionalCollectionBox() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    /*Swift.(file)._BidirectionalCollectionBox.init(_base:S)*/
    /*Swift.(file)._BidirectionalCollectionBox.init(_base:S)*/
    _BidirectionalCollectionBox.prototype.init_base = function ($info, _base) {
        throw 'unsupported method Swift.(file)._BidirectionalCollectionBox.init(_base:S) in ' + this.constructor.name;
    };
    /*Swift.(file)._BidirectionalCollectionBox.subscript(_:_AnyIndexBox)*/
    /*Swift.(file)._AnyCollectionBox.subscript(_:_AnyIndexBox)*/
    _BidirectionalCollectionBox.prototype.subscript$get = function ($info, position) {
        throw 'unsupported method Swift.(file)._BidirectionalCollectionBox.subscript(_:_AnyIndexBox) in ' + this.constructor.name;
    };
    /*Swift.(file)._BidirectionalCollectionBox.subscript(start:_AnyIndexBox,end:_AnyIndexBox)*/
    /*Swift.(file)._AnyCollectionBox.subscript(start:_AnyIndexBox,end:_AnyIndexBox)*/
    _BidirectionalCollectionBox.prototype.subscriptStartEnd$get = function ($info, start, end) {
        throw 'unsupported method Swift.(file)._BidirectionalCollectionBox.subscript(start:_AnyIndexBox,end:_AnyIndexBox) in ' + this.constructor.name;
    };
    /*Swift.(file)._BidirectionalCollectionBox.init(_startIndex:_AnyIndexBox,endIndex:_AnyIndexBox)*/
    /*Swift.(file)._AnyCollectionBox.init(_startIndex:_AnyIndexBox,endIndex:_AnyIndexBox)*/
    _BidirectionalCollectionBox.prototype.init_startIndex_AnyIndexBoxEndIndex_AnyIndexBox = function ($info, _startIndex, endIndex) {
        throw 'unsupported method Swift.(file)._BidirectionalCollectionBox.init(_startIndex:_AnyIndexBox,endIndex:_AnyIndexBox) in ' + this.constructor.name;
    };
    _BidirectionalCollectionBox.prototype.init$vars = function () {
        if (_super.prototype.init$vars)
            _super.prototype.init$vars.call(this);
    };
    _BidirectionalCollectionBox.$infoAddress = '';
    return _BidirectionalCollectionBox;
}(_AnyBidirectionalCollectionBox));
var _RandomAccessCollectionBox = /** @class */ (function (_super) {
    __extends(_RandomAccessCollectionBox, _super);
    function _RandomAccessCollectionBox() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    /*Swift.(file)._RandomAccessCollectionBox.init(_base:S)*/
    /*Swift.(file)._RandomAccessCollectionBox.init(_base:S)*/
    _RandomAccessCollectionBox.prototype.init_base = function ($info, _base) {
        throw 'unsupported method Swift.(file)._RandomAccessCollectionBox.init(_base:S) in ' + this.constructor.name;
    };
    /*Swift.(file)._RandomAccessCollectionBox.subscript(_:_AnyIndexBox)*/
    /*Swift.(file)._AnyCollectionBox.subscript(_:_AnyIndexBox)*/
    _RandomAccessCollectionBox.prototype.subscript$get = function ($info, position) {
        throw 'unsupported method Swift.(file)._RandomAccessCollectionBox.subscript(_:_AnyIndexBox) in ' + this.constructor.name;
    };
    /*Swift.(file)._RandomAccessCollectionBox.subscript(start:_AnyIndexBox,end:_AnyIndexBox)*/
    /*Swift.(file)._AnyCollectionBox.subscript(start:_AnyIndexBox,end:_AnyIndexBox)*/
    _RandomAccessCollectionBox.prototype.subscriptStartEnd$get = function ($info, start, end) {
        throw 'unsupported method Swift.(file)._RandomAccessCollectionBox.subscript(start:_AnyIndexBox,end:_AnyIndexBox) in ' + this.constructor.name;
    };
    /*Swift.(file)._RandomAccessCollectionBox.init(_startIndex:_AnyIndexBox,endIndex:_AnyIndexBox)*/
    /*Swift.(file)._AnyCollectionBox.init(_startIndex:_AnyIndexBox,endIndex:_AnyIndexBox)*/
    _RandomAccessCollectionBox.prototype.init_startIndex_AnyIndexBoxEndIndex_AnyIndexBox = function ($info, _startIndex, endIndex) {
        throw 'unsupported method Swift.(file)._RandomAccessCollectionBox.init(_startIndex:_AnyIndexBox,endIndex:_AnyIndexBox) in ' + this.constructor.name;
    };
    _RandomAccessCollectionBox.prototype.init$vars = function () {
        if (_super.prototype.init$vars)
            _super.prototype.init$vars.call(this);
    };
    _RandomAccessCollectionBox.$infoAddress = '';
    return _RandomAccessCollectionBox;
}(_AnyRandomAccessCollectionBox));
var _ClosureBasedSequence = /** @class */ (function () {
    function _ClosureBasedSequence() {
    }
    /*Swift.(file)._ClosureBasedSequence.init(_:() -> Iterator)*/
    /*Swift.(file)._ClosureBasedSequence.init(_:() -> Iterator)*/
    _ClosureBasedSequence.prototype.initfunction_type = function ($info, makeUnderlyingIterator) {
        throw 'unsupported method Swift.(file)._ClosureBasedSequence.init(_:() -> Iterator) in ' + this.constructor.name;
    };
    /*Swift.(file)._ClosureBasedSequence.makeIterator()*/
    /*Swift.(file).Sequence.makeIterator()*/
    _ClosureBasedSequence.prototype.makeIterator = function ($info) {
        var _this = this;
        return _this;
    };
    _ClosureBasedSequence.prototype.init$vars = function () {
    };
    _ClosureBasedSequence.$struct = true;
    _ClosureBasedSequence.$infoAddress = '';
    return _ClosureBasedSequence;
}());
if (typeof Sequence$implementation != 'undefined')
    _mixin(_ClosureBasedSequence, Sequence$implementation, false);
var AnySequence = /** @class */ (function () {
    function AnySequence() {
    }
    /*Swift.(file).AnySequence.init(_:() -> I)*/
    /*Swift.(file).AnySequence.init(_:() -> I)*/
    AnySequence.prototype.initfunction_type = function ($info, makeUnderlyingIterator) {
        throw 'unsupported method Swift.(file).AnySequence.init(_:() -> I) in ' + this.constructor.name;
    };
    /*Swift.(file).AnySequence.init(_box:_AnySequenceBox<Element>)*/
    /*Swift.(file).AnySequence.init(_box:_AnySequenceBox<Element>)*/
    AnySequence.prototype.init_box_AnySequenceBox = function ($info, _box) {
        throw 'unsupported method Swift.(file).AnySequence.init(_box:_AnySequenceBox<Element>) in ' + this.constructor.name;
    };
    /*Swift.(file).AnySequence.init(_:S)*/
    /*Swift.(file).AnySequence.init(_:S)*/
    AnySequence.prototype.init = function ($info, base) {
        throw 'unsupported method Swift.(file).AnySequence.init(_:S) in ' + this.constructor.name;
    };
    /*Swift.(file).AnySequence.makeIterator()*/
    /*Swift.(file).Sequence.makeIterator()*/
    AnySequence.prototype.makeIterator = function ($info) {
        var _this = this;
        return _this;
    };
    /*Swift.(file).AnySequence.dropLast(_:Int)*/
    /*Swift.(file).AnySequence.dropLast(_:Int)*/
    AnySequence.prototype.dropLast = function ($info, n) {
        throw 'unsupported method Swift.(file).AnySequence.dropLast(_:Int) in ' + this.constructor.name;
    };
    /*Swift.(file).AnySequence.prefix(while:(Element) throws -> Bool)*/
    /*Swift.(file).AnySequence.prefix(while:(Element) throws -> Bool)*/
    AnySequence.prototype.prefixWhile = function ($info, predicate) {
        throw 'unsupported method Swift.(file).AnySequence.prefix(while:(Element) throws -> Bool) in ' + this.constructor.name;
    };
    /*Swift.(file).AnySequence.suffix(_:Int)*/
    /*Swift.(file).AnySequence.suffix(_:Int)*/
    AnySequence.prototype.suffix = function ($info, maxLength) {
        throw 'unsupported method Swift.(file).AnySequence.suffix(_:Int) in ' + this.constructor.name;
    };
    /*Swift.(file).AnySequence.underestimatedCount*/
    AnySequence.prototype.underestimatedCount$get = function () {
        var _this = this;
        return 0;
    };
    Object.defineProperty(AnySequence.prototype, "underestimatedCount", {
        get: function () { return this.underestimatedCount$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).AnySequence.map(_:(Element) throws -> T)*/
    /*Swift.(file).AnySequence.map(_:(Element) throws -> T)*/
    AnySequence.prototype.mapSwift = function ($info, transform) {
        throw 'unsupported method Swift.(file).AnySequence.map(_:(Element) throws -> T) in ' + this.constructor.name;
    };
    /*Swift.(file).AnySequence.filter(_:(Element) throws -> Bool)*/
    /*Swift.(file).AnySequence.filter(_:(Element) throws -> Bool)*/
    AnySequence.prototype.filterSwift = function ($info, isIncluded) {
        throw 'unsupported method Swift.(file).AnySequence.filter(_:(Element) throws -> Bool) in ' + this.constructor.name;
    };
    /*Swift.(file).AnySequence.forEach(_:(Element) throws -> Void)*/
    /*Swift.(file).AnySequence.forEach(_:(Element) throws -> Void)*/
    AnySequence.prototype.forEachSwift = function ($info, body) {
        throw 'unsupported method Swift.(file).AnySequence.forEach(_:(Element) throws -> Void) in ' + this.constructor.name;
    };
    /*Swift.(file).AnySequence.drop(while:(Element) throws -> Bool)*/
    /*Swift.(file).AnySequence.drop(while:(Element) throws -> Bool)*/
    AnySequence.prototype.dropWhile = function ($info, predicate) {
        throw 'unsupported method Swift.(file).AnySequence.drop(while:(Element) throws -> Bool) in ' + this.constructor.name;
    };
    /*Swift.(file).AnySequence.dropFirst(_:Int)*/
    /*Swift.(file).AnySequence.dropFirst(_:Int)*/
    AnySequence.prototype.dropFirst = function ($info, n) {
        throw 'unsupported method Swift.(file).AnySequence.dropFirst(_:Int) in ' + this.constructor.name;
    };
    /*Swift.(file).AnySequence.prefix(_:Int)*/
    /*Swift.(file).AnySequence.prefix(_:Int)*/
    AnySequence.prototype.prefix = function ($info, maxLength) {
        throw 'unsupported method Swift.(file).AnySequence.prefix(_:Int) in ' + this.constructor.name;
    };
    AnySequence.prototype.init$vars = function () {
    };
    AnySequence.$struct = true;
    AnySequence.$infoAddress = '';
    return AnySequence;
}());
if (typeof Sequence$implementation != 'undefined')
    _mixin(AnySequence, Sequence$implementation, false);
var _AnyIndexBox$implementation = /** @class */ (function () {
    function _AnyIndexBox$implementation() {
    }
    return _AnyIndexBox$implementation;
}());
if (typeof AnyObject$implementation != 'undefined')
    _mixin(_AnyIndexBox$implementation, AnyObject$implementation, false);
var _IndexBox = /** @class */ (function () {
    function _IndexBox() {
    }
    /*Swift.(file)._IndexBox.init(_base:BaseIndex)*/
    /*Swift.(file)._IndexBox.init(_base:BaseIndex)*/
    _IndexBox.prototype.init_base = function ($info, _base) {
        throw 'unsupported method Swift.(file)._IndexBox.init(_base:BaseIndex) in ' + this.constructor.name;
    };
    _IndexBox.prototype.init$vars = function () {
    };
    _IndexBox.$infoAddress = '';
    return _IndexBox;
}());
if (typeof _AnyIndexBox$implementation != 'undefined')
    _mixin(_IndexBox, _AnyIndexBox$implementation, false);
var CustomReflectable$implementation = /** @class */ (function () {
    function CustomReflectable$implementation() {
    }
    return CustomReflectable$implementation;
}());
var CustomPlaygroundDisplayConvertible$implementation = /** @class */ (function () {
    function CustomPlaygroundDisplayConvertible$implementation() {
    }
    return CustomPlaygroundDisplayConvertible$implementation;
}());
var CommandLine = /** @class */ (function () {
    function CommandLine() {
    }
    /*Swift.(file).CommandLine.argc*/
    CommandLine.argc$get = function () {
        throw 'unsupported variable Swift.(file).CommandLine.argc in ' + this.constructor.name;
    };
    Object.defineProperty(CommandLine, "argc", {
        get: function () { return this.argc$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).CommandLine.unsafeArgv*/
    CommandLine.unsafeArgv$get = function () {
        throw 'unsupported variable Swift.(file).CommandLine.unsafeArgv in ' + this.constructor.name;
    };
    Object.defineProperty(CommandLine, "unsafeArgv", {
        get: function () { return this.unsafeArgv$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    CommandLine.prototype.init$vars = function () {
    };
    CommandLine.$infoAddress = '';
    return CommandLine;
}());
_mixin(CommandLine, _DefaultEnumImplementation, false);
var SIMDStorage$implementation = /** @class */ (function () {
    function SIMDStorage$implementation() {
    }
    return SIMDStorage$implementation;
}());
var SIMDScalar$implementation = /** @class */ (function () {
    function SIMDScalar$implementation() {
    }
    return SIMDScalar$implementation;
}());
var SIMD$implementation = /** @class */ (function () {
    function SIMD$implementation() {
    }
    /*Swift.(file).SIMD.indices*/
    SIMD$implementation.prototype.indices$get = function () {
        throw 'unsupported variable Swift.(file).SIMD.indices in ' + this.constructor.name;
    };
    Object.defineProperty(SIMD$implementation.prototype, "indices", {
        get: function () { return this.indices$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).SIMD.init(repeating:Self.Scalar)*/
    /*Swift.(file).SIMD.init(repeating:Self.Scalar)*/
    SIMD$implementation.prototype.initRepeating = function ($info, value) {
        throw 'unsupported method Swift.(file).SIMD.init(repeating:Self.Scalar) in ' + this.constructor.name;
    };
    /*Swift.(file).SIMD.==infix(_:Self,_:Self)*/
    /*Swift.(file).SIMD.==infix(_:Self,_:Self)*/
    SIMD$implementation.infix_61_61 = function ($info, lhs, rhs) {
        return lhs == rhs;
    };
    /*Swift.(file).SIMD.hash(into:Hasher)*/
    /*Swift.(file).SIMD.hash(into:Hasher)*/
    SIMD$implementation.prototype.hashInto = function ($info, hasher$inout) {
        throw 'unsupported method Swift.(file).SIMD.hash(into:Hasher) in ' + this.constructor.name;
    };
    /*Swift.(file).SIMD.description*/
    SIMD$implementation.prototype.description$get = function () {
        throw 'unsupported variable Swift.(file).SIMD.description in ' + this.constructor.name;
    };
    Object.defineProperty(SIMD$implementation.prototype, "description", {
        get: function () { return this.description$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).SIMD..==infix(_:Self,_:Self)*/
    /*Swift.(file).SIMD..==infix(_:Self,_:Self)*/
    SIMD$implementation.infix_46_61_61 = function ($info, lhs, rhs) {
        /*return lhs .== rhs*/
    };
    /*Swift.(file).SIMD..!=infix(_:Self,_:Self)*/
    /*Swift.(file).SIMD..!=infix(_:Self,_:Self)*/
    SIMD$implementation.infix_46_33_61 = function ($info, lhs, rhs) {
        /*return lhs .!= rhs*/
    };
    /*Swift.(file).SIMD.replace(with:Self,where:SIMDMask<Self.MaskStorage>)*/
    /*Swift.(file).SIMD.replace(with:Self,where:SIMDMask<Self.MaskStorage>)*/
    SIMD$implementation.prototype.replaceWithWhere = function ($info, other, mask) {
        throw 'unsupported method Swift.(file).SIMD.replace(with:Self,where:SIMDMask<Self.MaskStorage>) in ' + this.constructor.name;
    };
    /*Swift.(file).SIMD.init(arrayLiteral:[Self.Scalar])*/
    /*Swift.(file).SIMD.init(arrayLiteral:[Self.Scalar])*/
    SIMD$implementation.prototype.initArrayLiteralArray = function ($info, scalars) {
        throw 'unsupported method Swift.(file).SIMD.init(arrayLiteral:[Self.Scalar]) in ' + this.constructor.name;
    };
    /*Swift.(file).SIMD.init(_:S)*/
    /*Swift.(file).SIMD.init(_:S)*/
    SIMD$implementation.prototype.init = function ($info, scalars) {
        throw 'unsupported method Swift.(file).SIMD.init(_:S) in ' + this.constructor.name;
    };
    /*Swift.(file).SIMD..<infix(_:Self,_:Self)*/
    /*Swift.(file).SIMD..<infix(_:Self,_:Self)*/
    SIMD$implementation.infix_46_60 = function ($info, lhs, rhs) {
        /*return lhs .< rhs*/
    };
    /*Swift.(file).SIMD..<=infix(_:Self,_:Self)*/
    /*Swift.(file).SIMD..<=infix(_:Self,_:Self)*/
    SIMD$implementation.infix_46_60_61 = function ($info, lhs, rhs) {
        /*return lhs .<= rhs*/
    };
    /*Swift.(file).SIMD..==infix(_:Self.Scalar,_:Self)*/
    /*Swift.(file).SIMD..==infix(_:Self.Scalar,_:Self)*/
    SIMD$implementation.infix_46_61_61 = function ($info, lhs, rhs) {
        /*return lhs .== rhs*/
    };
    /*Swift.(file).SIMD..!=infix(_:Self.Scalar,_:Self)*/
    /*Swift.(file).SIMD..!=infix(_:Self.Scalar,_:Self)*/
    SIMD$implementation.infix_46_33_61 = function ($info, lhs, rhs) {
        /*return lhs .!= rhs*/
    };
    /*Swift.(file).SIMD..==infix(_:Self,_:Self.Scalar)*/
    /*Swift.(file).SIMD..==infix(_:Self,_:Self.Scalar)*/
    SIMD$implementation.infix_46_61_61 = function ($info, lhs, rhs) {
        /*return lhs .== rhs*/
    };
    /*Swift.(file).SIMD..!=infix(_:Self,_:Self.Scalar)*/
    /*Swift.(file).SIMD..!=infix(_:Self,_:Self.Scalar)*/
    SIMD$implementation.infix_46_33_61 = function ($info, lhs, rhs) {
        /*return lhs .!= rhs*/
    };
    /*Swift.(file).SIMD.replace(with:Self.Scalar,where:SIMDMask<Self.MaskStorage>)*/
    /*Swift.(file).SIMD.replace(with:Self.Scalar,where:SIMDMask<Self.MaskStorage>)*/
    SIMD$implementation.prototype.replaceWithWhere = function ($info, other, mask) {
        throw 'unsupported method Swift.(file).SIMD.replace(with:Self.Scalar,where:SIMDMask<Self.MaskStorage>) in ' + this.constructor.name;
    };
    /*Swift.(file).SIMD.replacing(with:Self,where:SIMDMask<Self.MaskStorage>)*/
    /*Swift.(file).SIMD.replacing(with:Self,where:SIMDMask<Self.MaskStorage>)*/
    SIMD$implementation.prototype.replacingWithWhere = function ($info, other, mask) {
        throw 'unsupported method Swift.(file).SIMD.replacing(with:Self,where:SIMDMask<Self.MaskStorage>) in ' + this.constructor.name;
    };
    /*Swift.(file).SIMD.replacing(with:Self.Scalar,where:SIMDMask<Self.MaskStorage>)*/
    /*Swift.(file).SIMD.replacing(with:Self.Scalar,where:SIMDMask<Self.MaskStorage>)*/
    SIMD$implementation.prototype.replacingWithWhere = function ($info, other, mask) {
        throw 'unsupported method Swift.(file).SIMD.replacing(with:Self.Scalar,where:SIMDMask<Self.MaskStorage>) in ' + this.constructor.name;
    };
    /*Swift.(file).SIMD..>=infix(_:Self,_:Self)*/
    /*Swift.(file).SIMD..>=infix(_:Self,_:Self)*/
    SIMD$implementation.infix_46_62_61 = function ($info, lhs, rhs) {
        /*return lhs .>= rhs*/
    };
    /*Swift.(file).SIMD..>infix(_:Self,_:Self)*/
    /*Swift.(file).SIMD..>infix(_:Self,_:Self)*/
    SIMD$implementation.infix_46_62 = function ($info, lhs, rhs) {
        /*return lhs .> rhs*/
    };
    /*Swift.(file).SIMD..<infix(_:Self.Scalar,_:Self)*/
    /*Swift.(file).SIMD..<infix(_:Self.Scalar,_:Self)*/
    SIMD$implementation.infix_46_60 = function ($info, lhs, rhs) {
        /*return lhs .< rhs*/
    };
    /*Swift.(file).SIMD..<=infix(_:Self.Scalar,_:Self)*/
    /*Swift.(file).SIMD..<=infix(_:Self.Scalar,_:Self)*/
    SIMD$implementation.infix_46_60_61 = function ($info, lhs, rhs) {
        /*return lhs .<= rhs*/
    };
    /*Swift.(file).SIMD..>=infix(_:Self.Scalar,_:Self)*/
    /*Swift.(file).SIMD..>=infix(_:Self.Scalar,_:Self)*/
    SIMD$implementation.infix_46_62_61 = function ($info, lhs, rhs) {
        /*return lhs .>= rhs*/
    };
    /*Swift.(file).SIMD..>infix(_:Self.Scalar,_:Self)*/
    /*Swift.(file).SIMD..>infix(_:Self.Scalar,_:Self)*/
    SIMD$implementation.infix_46_62 = function ($info, lhs, rhs) {
        /*return lhs .> rhs*/
    };
    /*Swift.(file).SIMD..<infix(_:Self,_:Self.Scalar)*/
    /*Swift.(file).SIMD..<infix(_:Self,_:Self.Scalar)*/
    SIMD$implementation.infix_46_60 = function ($info, lhs, rhs) {
        /*return lhs .< rhs*/
    };
    /*Swift.(file).SIMD..<=infix(_:Self,_:Self.Scalar)*/
    /*Swift.(file).SIMD..<=infix(_:Self,_:Self.Scalar)*/
    SIMD$implementation.infix_46_60_61 = function ($info, lhs, rhs) {
        /*return lhs .<= rhs*/
    };
    /*Swift.(file).SIMD..>=infix(_:Self,_:Self.Scalar)*/
    /*Swift.(file).SIMD..>=infix(_:Self,_:Self.Scalar)*/
    SIMD$implementation.infix_46_62_61 = function ($info, lhs, rhs) {
        /*return lhs .>= rhs*/
    };
    /*Swift.(file).SIMD..>infix(_:Self,_:Self.Scalar)*/
    /*Swift.(file).SIMD..>infix(_:Self,_:Self.Scalar)*/
    SIMD$implementation.infix_46_62 = function ($info, lhs, rhs) {
        /*return lhs .> rhs*/
    };
    /*Swift.(file).SIMD.zero*/
    SIMD$implementation.zero$get = function () {
        throw 'unsupported variable Swift.(file).SIMD.zero in ' + this.constructor.name;
    };
    Object.defineProperty(SIMD$implementation, "zero", {
        get: function () { return this.zero$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).SIMD.random(in:Range<Self.Scalar>,using:T)*/
    /*Swift.(file).SIMD.random(in:Range<Self.Scalar>,using:T)*/
    SIMD$implementation.randomInUsing = function ($info, range, generator$inout) {
        throw 'unsupported method Swift.(file).SIMD.random(in:Range<Self.Scalar>,using:T) in ' + this.constructor.name;
    };
    /*Swift.(file).SIMD.random(in:Range<Self.Scalar>)*/
    /*Swift.(file).SIMD.random(in:Range<Self.Scalar>)*/
    SIMD$implementation.randomIn = function ($info, range) {
        throw 'unsupported method Swift.(file).SIMD.random(in:Range<Self.Scalar>) in ' + this.constructor.name;
    };
    /*Swift.(file).SIMD.random(in:ClosedRange<Self.Scalar>,using:T)*/
    /*Swift.(file).SIMD.random(in:ClosedRange<Self.Scalar>,using:T)*/
    SIMD$implementation.randomInUsing = function ($info, range, generator$inout) {
        throw 'unsupported method Swift.(file).SIMD.random(in:ClosedRange<Self.Scalar>,using:T) in ' + this.constructor.name;
    };
    /*Swift.(file).SIMD.random(in:ClosedRange<Self.Scalar>)*/
    /*Swift.(file).SIMD.random(in:ClosedRange<Self.Scalar>)*/
    SIMD$implementation.randomIn = function ($info, range) {
        throw 'unsupported method Swift.(file).SIMD.random(in:ClosedRange<Self.Scalar>) in ' + this.constructor.name;
    };
    /*Swift.(file).SIMD.zero*/
    SIMD$implementation.zero$get = function () {
        throw 'unsupported variable Swift.(file).SIMD.zero in ' + this.constructor.name;
    };
    ;
    /*Swift.(file).SIMD.random(in:Range<Self.Scalar>,using:T)*/
    /*Swift.(file).SIMD.random(in:Range<Self.Scalar>,using:T)*/
    SIMD$implementation.randomInUsing = function ($info, range, generator$inout) {
        throw 'unsupported method Swift.(file).SIMD.random(in:Range<Self.Scalar>,using:T) in ' + this.constructor.name;
    };
    /*Swift.(file).SIMD.random(in:Range<Self.Scalar>)*/
    /*Swift.(file).SIMD.random(in:Range<Self.Scalar>)*/
    SIMD$implementation.randomIn = function ($info, range) {
        throw 'unsupported method Swift.(file).SIMD.random(in:Range<Self.Scalar>) in ' + this.constructor.name;
    };
    /*Swift.(file).SIMD.random(in:ClosedRange<Self.Scalar>,using:T)*/
    /*Swift.(file).SIMD.random(in:ClosedRange<Self.Scalar>,using:T)*/
    SIMD$implementation.randomInUsing = function ($info, range, generator$inout) {
        throw 'unsupported method Swift.(file).SIMD.random(in:ClosedRange<Self.Scalar>,using:T) in ' + this.constructor.name;
    };
    /*Swift.(file).SIMD.random(in:ClosedRange<Self.Scalar>)*/
    /*Swift.(file).SIMD.random(in:ClosedRange<Self.Scalar>)*/
    SIMD$implementation.randomIn = function ($info, range) {
        throw 'unsupported method Swift.(file).SIMD.random(in:ClosedRange<Self.Scalar>) in ' + this.constructor.name;
    };
    /*Swift.(file).SIMD.leadingZeroBitCount*/
    SIMD$implementation.prototype.leadingZeroBitCount$get = function () {
        throw 'unsupported variable Swift.(file).SIMD.leadingZeroBitCount in ' + this.constructor.name;
    };
    Object.defineProperty(SIMD$implementation.prototype, "leadingZeroBitCount", {
        get: function () { return this.leadingZeroBitCount$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).SIMD.trailingZeroBitCount*/
    SIMD$implementation.prototype.trailingZeroBitCount$get = function () {
        throw 'unsupported variable Swift.(file).SIMD.trailingZeroBitCount in ' + this.constructor.name;
    };
    Object.defineProperty(SIMD$implementation.prototype, "trailingZeroBitCount", {
        get: function () { return this.trailingZeroBitCount$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).SIMD.nonzeroBitCount*/
    SIMD$implementation.prototype.nonzeroBitCount$get = function () {
        throw 'unsupported variable Swift.(file).SIMD.nonzeroBitCount in ' + this.constructor.name;
    };
    Object.defineProperty(SIMD$implementation.prototype, "nonzeroBitCount", {
        get: function () { return this.nonzeroBitCount$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).SIMD.~prefix(_:Self)*/
    /*Swift.(file).SIMD.~prefix(_:Self)*/
    SIMD$implementation.prefix_126 = function ($info, rhs) {
        return ~rhs;
    };
    /*Swift.(file).SIMD.&infix(_:Self,_:Self)*/
    /*Swift.(file).SIMD.&infix(_:Self,_:Self)*/
    SIMD$implementation.infix_38 = function ($info, lhs, rhs) {
        return lhs & rhs;
    };
    /*Swift.(file).SIMD.^infix(_:Self,_:Self)*/
    /*Swift.(file).SIMD.^infix(_:Self,_:Self)*/
    SIMD$implementation.infix_94 = function ($info, lhs, rhs) {
        return lhs ^ rhs;
    };
    /*Swift.(file).SIMD.|infix(_:Self,_:Self)*/
    /*Swift.(file).SIMD.|infix(_:Self,_:Self)*/
    SIMD$implementation.infix_124 = function ($info, lhs, rhs) {
        return lhs | rhs;
    };
    /*Swift.(file).SIMD.&<<infix(_:Self,_:Self)*/
    /*Swift.(file).SIMD.&<<infix(_:Self,_:Self)*/
    SIMD$implementation.infix_38_60_60 = function ($info, lhs, rhs) {
        return lhs << rhs;
    };
    /*Swift.(file).SIMD.&>>infix(_:Self,_:Self)*/
    /*Swift.(file).SIMD.&>>infix(_:Self,_:Self)*/
    SIMD$implementation.infix_38_62_62 = function ($info, lhs, rhs) {
        return lhs >> rhs;
    };
    /*Swift.(file).SIMD.&+infix(_:Self,_:Self)*/
    /*Swift.(file).SIMD.&+infix(_:Self,_:Self)*/
    SIMD$implementation.infix_38_43 = function ($info, lhs, rhs) {
        return lhs + rhs;
    };
    /*Swift.(file).SIMD.&-infix(_:Self,_:Self)*/
    /*Swift.(file).SIMD.&-infix(_:Self,_:Self)*/
    SIMD$implementation.infix_38_45 = function ($info, lhs, rhs) {
        return lhs - rhs;
    };
    /*Swift.(file).SIMD.&*infix(_:Self,_:Self)*/
    /*Swift.(file).SIMD.&*infix(_:Self,_:Self)*/
    SIMD$implementation.infix_38_42 = function ($info, lhs, rhs) {
        return lhs * rhs;
    };
    /*Swift.(file).SIMD./infix(_:Self,_:Self)*/
    /*Swift.(file).SIMD./infix(_:Self,_:Self)*/
    SIMD$implementation.infix_47 = function ($info, lhs, rhs) {
        return lhs / rhs;
    };
    /*Swift.(file).SIMD.%infix(_:Self,_:Self)*/
    /*Swift.(file).SIMD.%infix(_:Self,_:Self)*/
    SIMD$implementation.infix_37 = function ($info, lhs, rhs) {
        return lhs % rhs;
    };
    /*Swift.(file).SIMD.+infix(_:Self,_:Self)*/
    /*Swift.(file).SIMD.+infix(_:Self,_:Self)*/
    SIMD$implementation.infix_43 = function ($info, lhs, rhs) {
        return lhs + rhs;
    };
    /*Swift.(file).SIMD.-infix(_:Self,_:Self)*/
    /*Swift.(file).SIMD.-infix(_:Self,_:Self)*/
    SIMD$implementation.infix_45 = function ($info, lhs, rhs) {
        return lhs - rhs;
    };
    /*Swift.(file).SIMD.*infix(_:Self,_:Self)*/
    /*Swift.(file).SIMD.*infix(_:Self,_:Self)*/
    SIMD$implementation.infix_42 = function ($info, lhs, rhs) {
        return lhs * rhs;
    };
    /*Swift.(file).SIMD./infix(_:Self,_:Self)*/
    /*Swift.(file).SIMD./infix(_:Self,_:Self)*/
    SIMD$implementation.infix_47 = function ($info, lhs, rhs) {
        return lhs / rhs;
    };
    /*Swift.(file).SIMD.addingProduct(_:Self,_:Self)*/
    /*Swift.(file).SIMD.addingProduct(_:Self,_:Self)*/
    SIMD$implementation.prototype.addingProduct = function ($info, lhs, rhs) {
        throw 'unsupported method Swift.(file).SIMD.addingProduct(_:Self,_:Self) in ' + this.constructor.name;
    };
    /*Swift.(file).SIMD.squareRoot()*/
    /*Swift.(file).SIMD.squareRoot()*/
    SIMD$implementation.prototype.squareRoot = function ($info) {
        throw 'unsupported method Swift.(file).SIMD.squareRoot() in ' + this.constructor.name;
    };
    /*Swift.(file).SIMD.rounded(_:FloatingPointRoundingRule)*/
    /*Swift.(file).SIMD.rounded(_:FloatingPointRoundingRule)*/
    SIMD$implementation.prototype.rounded = function ($info, rule) {
        throw 'unsupported method Swift.(file).SIMD.rounded(_:FloatingPointRoundingRule) in ' + this.constructor.name;
    };
    /*Swift.(file).SIMD.&infix(_:Self.Scalar,_:Self)*/
    /*Swift.(file).SIMD.&infix(_:Self.Scalar,_:Self)*/
    SIMD$implementation.infix_38 = function ($info, lhs, rhs) {
        return lhs & rhs;
    };
    /*Swift.(file).SIMD.^infix(_:Self.Scalar,_:Self)*/
    /*Swift.(file).SIMD.^infix(_:Self.Scalar,_:Self)*/
    SIMD$implementation.infix_94 = function ($info, lhs, rhs) {
        return lhs ^ rhs;
    };
    /*Swift.(file).SIMD.|infix(_:Self.Scalar,_:Self)*/
    /*Swift.(file).SIMD.|infix(_:Self.Scalar,_:Self)*/
    SIMD$implementation.infix_124 = function ($info, lhs, rhs) {
        return lhs | rhs;
    };
    /*Swift.(file).SIMD.&<<infix(_:Self.Scalar,_:Self)*/
    /*Swift.(file).SIMD.&<<infix(_:Self.Scalar,_:Self)*/
    SIMD$implementation.infix_38_60_60 = function ($info, lhs, rhs) {
        return lhs << rhs;
    };
    /*Swift.(file).SIMD.&>>infix(_:Self.Scalar,_:Self)*/
    /*Swift.(file).SIMD.&>>infix(_:Self.Scalar,_:Self)*/
    SIMD$implementation.infix_38_62_62 = function ($info, lhs, rhs) {
        return lhs >> rhs;
    };
    /*Swift.(file).SIMD.&+infix(_:Self.Scalar,_:Self)*/
    /*Swift.(file).SIMD.&+infix(_:Self.Scalar,_:Self)*/
    SIMD$implementation.infix_38_43 = function ($info, lhs, rhs) {
        return lhs + rhs;
    };
    /*Swift.(file).SIMD.&-infix(_:Self.Scalar,_:Self)*/
    /*Swift.(file).SIMD.&-infix(_:Self.Scalar,_:Self)*/
    SIMD$implementation.infix_38_45 = function ($info, lhs, rhs) {
        return lhs - rhs;
    };
    /*Swift.(file).SIMD.&*infix(_:Self.Scalar,_:Self)*/
    /*Swift.(file).SIMD.&*infix(_:Self.Scalar,_:Self)*/
    SIMD$implementation.infix_38_42 = function ($info, lhs, rhs) {
        return lhs * rhs;
    };
    /*Swift.(file).SIMD./infix(_:Self.Scalar,_:Self)*/
    /*Swift.(file).SIMD./infix(_:Self.Scalar,_:Self)*/
    SIMD$implementation.infix_47 = function ($info, lhs, rhs) {
        return lhs / rhs;
    };
    /*Swift.(file).SIMD.%infix(_:Self.Scalar,_:Self)*/
    /*Swift.(file).SIMD.%infix(_:Self.Scalar,_:Self)*/
    SIMD$implementation.infix_37 = function ($info, lhs, rhs) {
        return lhs % rhs;
    };
    /*Swift.(file).SIMD.&infix(_:Self,_:Self.Scalar)*/
    /*Swift.(file).SIMD.&infix(_:Self,_:Self.Scalar)*/
    SIMD$implementation.infix_38 = function ($info, lhs, rhs) {
        return lhs & rhs;
    };
    /*Swift.(file).SIMD.^infix(_:Self,_:Self.Scalar)*/
    /*Swift.(file).SIMD.^infix(_:Self,_:Self.Scalar)*/
    SIMD$implementation.infix_94 = function ($info, lhs, rhs) {
        return lhs ^ rhs;
    };
    /*Swift.(file).SIMD.|infix(_:Self,_:Self.Scalar)*/
    /*Swift.(file).SIMD.|infix(_:Self,_:Self.Scalar)*/
    SIMD$implementation.infix_124 = function ($info, lhs, rhs) {
        return lhs | rhs;
    };
    /*Swift.(file).SIMD.&<<infix(_:Self,_:Self.Scalar)*/
    /*Swift.(file).SIMD.&<<infix(_:Self,_:Self.Scalar)*/
    SIMD$implementation.infix_38_60_60 = function ($info, lhs, rhs) {
        return lhs << rhs;
    };
    /*Swift.(file).SIMD.&>>infix(_:Self,_:Self.Scalar)*/
    /*Swift.(file).SIMD.&>>infix(_:Self,_:Self.Scalar)*/
    SIMD$implementation.infix_38_62_62 = function ($info, lhs, rhs) {
        return lhs >> rhs;
    };
    /*Swift.(file).SIMD.&+infix(_:Self,_:Self.Scalar)*/
    /*Swift.(file).SIMD.&+infix(_:Self,_:Self.Scalar)*/
    SIMD$implementation.infix_38_43 = function ($info, lhs, rhs) {
        return lhs + rhs;
    };
    /*Swift.(file).SIMD.&-infix(_:Self,_:Self.Scalar)*/
    /*Swift.(file).SIMD.&-infix(_:Self,_:Self.Scalar)*/
    SIMD$implementation.infix_38_45 = function ($info, lhs, rhs) {
        return lhs - rhs;
    };
    /*Swift.(file).SIMD.&*infix(_:Self,_:Self.Scalar)*/
    /*Swift.(file).SIMD.&*infix(_:Self,_:Self.Scalar)*/
    SIMD$implementation.infix_38_42 = function ($info, lhs, rhs) {
        return lhs * rhs;
    };
    /*Swift.(file).SIMD./infix(_:Self,_:Self.Scalar)*/
    /*Swift.(file).SIMD./infix(_:Self,_:Self.Scalar)*/
    SIMD$implementation.infix_47 = function ($info, lhs, rhs) {
        return lhs / rhs;
    };
    /*Swift.(file).SIMD.%infix(_:Self,_:Self.Scalar)*/
    /*Swift.(file).SIMD.%infix(_:Self,_:Self.Scalar)*/
    SIMD$implementation.infix_37 = function ($info, lhs, rhs) {
        return lhs % rhs;
    };
    /*Swift.(file).SIMD.&=infix(_:Self,_:Self)*/
    /*Swift.(file).SIMD.&=infix(_:Self,_:Self)*/
    SIMD$implementation.infix_38_61 = function ($info, lhs$inout, rhs) {
        lhs$inout.set(lhs$inout.get() & rhs);
    };
    /*Swift.(file).SIMD.^=infix(_:Self,_:Self)*/
    /*Swift.(file).SIMD.^=infix(_:Self,_:Self)*/
    SIMD$implementation.infix_94_61 = function ($info, lhs$inout, rhs) {
        lhs$inout.set(lhs$inout.get() ^ rhs);
    };
    /*Swift.(file).SIMD.|=infix(_:Self,_:Self)*/
    /*Swift.(file).SIMD.|=infix(_:Self,_:Self)*/
    SIMD$implementation.infix_124_61 = function ($info, lhs$inout, rhs) {
        lhs$inout.set(lhs$inout.get() | rhs);
    };
    /*Swift.(file).SIMD.&<<=infix(_:Self,_:Self)*/
    /*Swift.(file).SIMD.&<<=infix(_:Self,_:Self)*/
    SIMD$implementation.infix_38_60_60_61 = function ($info, lhs$inout, rhs) {
        lhs$inout.set(lhs$inout.get() << rhs);
    };
    /*Swift.(file).SIMD.&>>=infix(_:Self,_:Self)*/
    /*Swift.(file).SIMD.&>>=infix(_:Self,_:Self)*/
    SIMD$implementation.infix_38_62_62_61 = function ($info, lhs$inout, rhs) {
        lhs$inout.set(lhs$inout.get() >> rhs);
    };
    /*Swift.(file).SIMD.&+=infix(_:Self,_:Self)*/
    /*Swift.(file).SIMD.&+=infix(_:Self,_:Self)*/
    SIMD$implementation.infix_38_43_61 = function ($info, lhs$inout, rhs) {
        return lhs$inout += rhs;
    };
    /*Swift.(file).SIMD.&-=infix(_:Self,_:Self)*/
    /*Swift.(file).SIMD.&-=infix(_:Self,_:Self)*/
    SIMD$implementation.infix_38_45_61 = function ($info, lhs$inout, rhs) {
        return lhs$inout -= rhs;
    };
    /*Swift.(file).SIMD.&*=infix(_:Self,_:Self)*/
    /*Swift.(file).SIMD.&*=infix(_:Self,_:Self)*/
    SIMD$implementation.infix_38_42_61 = function ($info, lhs$inout, rhs) {
        return lhs$inout *= rhs;
    };
    /*Swift.(file).SIMD./=infix(_:Self,_:Self)*/
    /*Swift.(file).SIMD./=infix(_:Self,_:Self)*/
    SIMD$implementation.infix_47_61 = function ($info, lhs$inout, rhs) {
        lhs$inout.set(lhs$inout.get() / rhs);
    };
    /*Swift.(file).SIMD.%=infix(_:Self,_:Self)*/
    /*Swift.(file).SIMD.%=infix(_:Self,_:Self)*/
    SIMD$implementation.infix_37_61 = function ($info, lhs$inout, rhs) {
        lhs$inout.set(lhs$inout.get() % rhs);
    };
    /*Swift.(file).SIMD.&=infix(_:Self,_:Self.Scalar)*/
    /*Swift.(file).SIMD.&=infix(_:Self,_:Self.Scalar)*/
    SIMD$implementation.infix_38_61 = function ($info, lhs$inout, rhs) {
        lhs$inout.set(lhs$inout.get() & rhs);
    };
    /*Swift.(file).SIMD.^=infix(_:Self,_:Self.Scalar)*/
    /*Swift.(file).SIMD.^=infix(_:Self,_:Self.Scalar)*/
    SIMD$implementation.infix_94_61 = function ($info, lhs$inout, rhs) {
        lhs$inout.set(lhs$inout.get() ^ rhs);
    };
    /*Swift.(file).SIMD.|=infix(_:Self,_:Self.Scalar)*/
    /*Swift.(file).SIMD.|=infix(_:Self,_:Self.Scalar)*/
    SIMD$implementation.infix_124_61 = function ($info, lhs$inout, rhs) {
        lhs$inout.set(lhs$inout.get() | rhs);
    };
    /*Swift.(file).SIMD.&<<=infix(_:Self,_:Self.Scalar)*/
    /*Swift.(file).SIMD.&<<=infix(_:Self,_:Self.Scalar)*/
    SIMD$implementation.infix_38_60_60_61 = function ($info, lhs$inout, rhs) {
        lhs$inout.set(lhs$inout.get() << rhs);
    };
    /*Swift.(file).SIMD.&>>=infix(_:Self,_:Self.Scalar)*/
    /*Swift.(file).SIMD.&>>=infix(_:Self,_:Self.Scalar)*/
    SIMD$implementation.infix_38_62_62_61 = function ($info, lhs$inout, rhs) {
        lhs$inout.set(lhs$inout.get() >> rhs);
    };
    /*Swift.(file).SIMD.&+=infix(_:Self,_:Self.Scalar)*/
    /*Swift.(file).SIMD.&+=infix(_:Self,_:Self.Scalar)*/
    SIMD$implementation.infix_38_43_61 = function ($info, lhs$inout, rhs) {
        return lhs$inout += rhs;
    };
    /*Swift.(file).SIMD.&-=infix(_:Self,_:Self.Scalar)*/
    /*Swift.(file).SIMD.&-=infix(_:Self,_:Self.Scalar)*/
    SIMD$implementation.infix_38_45_61 = function ($info, lhs$inout, rhs) {
        return lhs$inout -= rhs;
    };
    /*Swift.(file).SIMD.&*=infix(_:Self,_:Self.Scalar)*/
    /*Swift.(file).SIMD.&*=infix(_:Self,_:Self.Scalar)*/
    SIMD$implementation.infix_38_42_61 = function ($info, lhs$inout, rhs) {
        return lhs$inout *= rhs;
    };
    /*Swift.(file).SIMD./=infix(_:Self,_:Self.Scalar)*/
    /*Swift.(file).SIMD./=infix(_:Self,_:Self.Scalar)*/
    SIMD$implementation.infix_47_61 = function ($info, lhs$inout, rhs) {
        lhs$inout.set(lhs$inout.get() / rhs);
    };
    /*Swift.(file).SIMD.%=infix(_:Self,_:Self.Scalar)*/
    /*Swift.(file).SIMD.%=infix(_:Self,_:Self.Scalar)*/
    SIMD$implementation.infix_37_61 = function ($info, lhs$inout, rhs) {
        lhs$inout.set(lhs$inout.get() % rhs);
    };
    /*Swift.(file).SIMD.+infix(_:Self,_:Self)*/
    /*Swift.(file).SIMD.+infix(_:Self,_:Self)*/
    SIMD$implementation.infix_43 = function ($info, lhs, rhs) {
        return lhs + rhs;
    };
    /*Swift.(file).SIMD.-infix(_:Self,_:Self)*/
    /*Swift.(file).SIMD.-infix(_:Self,_:Self)*/
    SIMD$implementation.infix_45 = function ($info, lhs, rhs) {
        return lhs - rhs;
    };
    /*Swift.(file).SIMD.*infix(_:Self,_:Self)*/
    /*Swift.(file).SIMD.*infix(_:Self,_:Self)*/
    SIMD$implementation.infix_42 = function ($info, lhs, rhs) {
        return lhs * rhs;
    };
    /*Swift.(file).SIMD.+infix(_:Self,_:Self.Scalar)*/
    /*Swift.(file).SIMD.+infix(_:Self,_:Self.Scalar)*/
    SIMD$implementation.infix_43 = function ($info, lhs, rhs) {
        return lhs + rhs;
    };
    /*Swift.(file).SIMD.-infix(_:Self,_:Self.Scalar)*/
    /*Swift.(file).SIMD.-infix(_:Self,_:Self.Scalar)*/
    SIMD$implementation.infix_45 = function ($info, lhs, rhs) {
        return lhs - rhs;
    };
    /*Swift.(file).SIMD.*infix(_:Self,_:Self.Scalar)*/
    /*Swift.(file).SIMD.*infix(_:Self,_:Self.Scalar)*/
    SIMD$implementation.infix_42 = function ($info, lhs, rhs) {
        return lhs * rhs;
    };
    /*Swift.(file).SIMD.+infix(_:Self.Scalar,_:Self)*/
    /*Swift.(file).SIMD.+infix(_:Self.Scalar,_:Self)*/
    SIMD$implementation.infix_43 = function ($info, lhs, rhs) {
        return lhs + rhs;
    };
    /*Swift.(file).SIMD.-infix(_:Self.Scalar,_:Self)*/
    /*Swift.(file).SIMD.-infix(_:Self.Scalar,_:Self)*/
    SIMD$implementation.infix_45 = function ($info, lhs, rhs) {
        return lhs - rhs;
    };
    /*Swift.(file).SIMD.*infix(_:Self.Scalar,_:Self)*/
    /*Swift.(file).SIMD.*infix(_:Self.Scalar,_:Self)*/
    SIMD$implementation.infix_42 = function ($info, lhs, rhs) {
        return lhs * rhs;
    };
    /*Swift.(file).SIMD.+=infix(_:Self,_:Self)*/
    /*Swift.(file).SIMD.+=infix(_:Self,_:Self)*/
    SIMD$implementation.infix_43_61 = function ($info, lhs$inout, rhs) {
        lhs$inout.set(lhs$inout.get() + rhs);
    };
    /*Swift.(file).SIMD.-=infix(_:Self,_:Self)*/
    /*Swift.(file).SIMD.-=infix(_:Self,_:Self)*/
    SIMD$implementation.infix_45_61 = function ($info, lhs$inout, rhs) {
        lhs$inout.set(lhs$inout.get() - rhs);
    };
    /*Swift.(file).SIMD.*=infix(_:Self,_:Self)*/
    /*Swift.(file).SIMD.*=infix(_:Self,_:Self)*/
    SIMD$implementation.infix_42_61 = function ($info, lhs$inout, rhs) {
        lhs$inout.set(lhs$inout.get() * rhs);
    };
    /*Swift.(file).SIMD.+=infix(_:Self,_:Self.Scalar)*/
    /*Swift.(file).SIMD.+=infix(_:Self,_:Self.Scalar)*/
    SIMD$implementation.infix_43_61 = function ($info, lhs$inout, rhs) {
        lhs$inout.set(lhs$inout.get() + rhs);
    };
    /*Swift.(file).SIMD.-=infix(_:Self,_:Self.Scalar)*/
    /*Swift.(file).SIMD.-=infix(_:Self,_:Self.Scalar)*/
    SIMD$implementation.infix_45_61 = function ($info, lhs$inout, rhs) {
        lhs$inout.set(lhs$inout.get() - rhs);
    };
    /*Swift.(file).SIMD.*=infix(_:Self,_:Self.Scalar)*/
    /*Swift.(file).SIMD.*=infix(_:Self,_:Self.Scalar)*/
    SIMD$implementation.infix_42_61 = function ($info, lhs$inout, rhs) {
        lhs$inout.set(lhs$inout.get() * rhs);
    };
    /*Swift.(file).SIMD.-prefix(_:Self)*/
    /*Swift.(file).SIMD.-prefix(_:Self)*/
    SIMD$implementation.prefix_45 = function ($info, rhs) {
        return -rhs;
    };
    /*Swift.(file).SIMD.+infix(_:Self.Scalar,_:Self)*/
    /*Swift.(file).SIMD.+infix(_:Self.Scalar,_:Self)*/
    SIMD$implementation.infix_43 = function ($info, lhs, rhs) {
        return lhs + rhs;
    };
    /*Swift.(file).SIMD.-infix(_:Self.Scalar,_:Self)*/
    /*Swift.(file).SIMD.-infix(_:Self.Scalar,_:Self)*/
    SIMD$implementation.infix_45 = function ($info, lhs, rhs) {
        return lhs - rhs;
    };
    /*Swift.(file).SIMD.*infix(_:Self.Scalar,_:Self)*/
    /*Swift.(file).SIMD.*infix(_:Self.Scalar,_:Self)*/
    SIMD$implementation.infix_42 = function ($info, lhs, rhs) {
        return lhs * rhs;
    };
    /*Swift.(file).SIMD./infix(_:Self.Scalar,_:Self)*/
    /*Swift.(file).SIMD./infix(_:Self.Scalar,_:Self)*/
    SIMD$implementation.infix_47 = function ($info, lhs, rhs) {
        return lhs / rhs;
    };
    /*Swift.(file).SIMD.+infix(_:Self,_:Self.Scalar)*/
    /*Swift.(file).SIMD.+infix(_:Self,_:Self.Scalar)*/
    SIMD$implementation.infix_43 = function ($info, lhs, rhs) {
        return lhs + rhs;
    };
    /*Swift.(file).SIMD.-infix(_:Self,_:Self.Scalar)*/
    /*Swift.(file).SIMD.-infix(_:Self,_:Self.Scalar)*/
    SIMD$implementation.infix_45 = function ($info, lhs, rhs) {
        return lhs - rhs;
    };
    /*Swift.(file).SIMD.*infix(_:Self,_:Self.Scalar)*/
    /*Swift.(file).SIMD.*infix(_:Self,_:Self.Scalar)*/
    SIMD$implementation.infix_42 = function ($info, lhs, rhs) {
        return lhs * rhs;
    };
    /*Swift.(file).SIMD./infix(_:Self,_:Self.Scalar)*/
    /*Swift.(file).SIMD./infix(_:Self,_:Self.Scalar)*/
    SIMD$implementation.infix_47 = function ($info, lhs, rhs) {
        return lhs / rhs;
    };
    /*Swift.(file).SIMD.+=infix(_:Self,_:Self)*/
    /*Swift.(file).SIMD.+=infix(_:Self,_:Self)*/
    SIMD$implementation.infix_43_61 = function ($info, lhs$inout, rhs) {
        lhs$inout.set(lhs$inout.get() + rhs);
    };
    /*Swift.(file).SIMD.-=infix(_:Self,_:Self)*/
    /*Swift.(file).SIMD.-=infix(_:Self,_:Self)*/
    SIMD$implementation.infix_45_61 = function ($info, lhs$inout, rhs) {
        lhs$inout.set(lhs$inout.get() - rhs);
    };
    /*Swift.(file).SIMD.*=infix(_:Self,_:Self)*/
    /*Swift.(file).SIMD.*=infix(_:Self,_:Self)*/
    SIMD$implementation.infix_42_61 = function ($info, lhs$inout, rhs) {
        lhs$inout.set(lhs$inout.get() * rhs);
    };
    /*Swift.(file).SIMD./=infix(_:Self,_:Self)*/
    /*Swift.(file).SIMD./=infix(_:Self,_:Self)*/
    SIMD$implementation.infix_47_61 = function ($info, lhs$inout, rhs) {
        lhs$inout.set(lhs$inout.get() / rhs);
    };
    /*Swift.(file).SIMD.+=infix(_:Self,_:Self.Scalar)*/
    /*Swift.(file).SIMD.+=infix(_:Self,_:Self.Scalar)*/
    SIMD$implementation.infix_43_61 = function ($info, lhs$inout, rhs) {
        lhs$inout.set(lhs$inout.get() + rhs);
    };
    /*Swift.(file).SIMD.-=infix(_:Self,_:Self.Scalar)*/
    /*Swift.(file).SIMD.-=infix(_:Self,_:Self.Scalar)*/
    SIMD$implementation.infix_45_61 = function ($info, lhs$inout, rhs) {
        lhs$inout.set(lhs$inout.get() - rhs);
    };
    /*Swift.(file).SIMD.*=infix(_:Self,_:Self.Scalar)*/
    /*Swift.(file).SIMD.*=infix(_:Self,_:Self.Scalar)*/
    SIMD$implementation.infix_42_61 = function ($info, lhs$inout, rhs) {
        lhs$inout.set(lhs$inout.get() * rhs);
    };
    /*Swift.(file).SIMD./=infix(_:Self,_:Self.Scalar)*/
    /*Swift.(file).SIMD./=infix(_:Self,_:Self.Scalar)*/
    SIMD$implementation.infix_47_61 = function ($info, lhs$inout, rhs) {
        lhs$inout.set(lhs$inout.get() / rhs);
    };
    /*Swift.(file).SIMD.addingProduct(_:Self.Scalar,_:Self)*/
    /*Swift.(file).SIMD.addingProduct(_:Self.Scalar,_:Self)*/
    SIMD$implementation.prototype.addingProduct = function ($info, lhs, rhs) {
        throw 'unsupported method Swift.(file).SIMD.addingProduct(_:Self.Scalar,_:Self) in ' + this.constructor.name;
    };
    /*Swift.(file).SIMD.addingProduct(_:Self,_:Self.Scalar)*/
    /*Swift.(file).SIMD.addingProduct(_:Self,_:Self.Scalar)*/
    SIMD$implementation.prototype.addingProduct = function ($info, lhs, rhs) {
        throw 'unsupported method Swift.(file).SIMD.addingProduct(_:Self,_:Self.Scalar) in ' + this.constructor.name;
    };
    /*Swift.(file).SIMD.addProduct(_:Self,_:Self)*/
    /*Swift.(file).SIMD.addProduct(_:Self,_:Self)*/
    SIMD$implementation.prototype.addProduct = function ($info, lhs, rhs) {
        throw 'unsupported method Swift.(file).SIMD.addProduct(_:Self,_:Self) in ' + this.constructor.name;
    };
    /*Swift.(file).SIMD.addProduct(_:Self.Scalar,_:Self)*/
    /*Swift.(file).SIMD.addProduct(_:Self.Scalar,_:Self)*/
    SIMD$implementation.prototype.addProduct = function ($info, lhs, rhs) {
        throw 'unsupported method Swift.(file).SIMD.addProduct(_:Self.Scalar,_:Self) in ' + this.constructor.name;
    };
    /*Swift.(file).SIMD.addProduct(_:Self,_:Self.Scalar)*/
    /*Swift.(file).SIMD.addProduct(_:Self,_:Self.Scalar)*/
    SIMD$implementation.prototype.addProduct = function ($info, lhs, rhs) {
        throw 'unsupported method Swift.(file).SIMD.addProduct(_:Self,_:Self.Scalar) in ' + this.constructor.name;
    };
    /*Swift.(file).SIMD.formSquareRoot()*/
    /*Swift.(file).SIMD.formSquareRoot()*/
    SIMD$implementation.prototype.formSquareRoot = function ($info) {
        throw 'unsupported method Swift.(file).SIMD.formSquareRoot() in ' + this.constructor.name;
    };
    /*Swift.(file).SIMD.round(_:FloatingPointRoundingRule)*/
    /*Swift.(file).SIMD.round(_:FloatingPointRoundingRule)*/
    SIMD$implementation.prototype.round = function ($info, rule) {
        throw 'unsupported method Swift.(file).SIMD.round(_:FloatingPointRoundingRule) in ' + this.constructor.name;
    };
    return SIMD$implementation;
}());
if (typeof SIMDStorage$implementation != 'undefined')
    _mixin(SIMD$implementation, SIMDStorage$implementation, false);
if (typeof Hashable$implementation != 'undefined')
    _mixin(SIMD$implementation, Hashable$implementation, false);
if (typeof CustomStringConvertible$implementation != 'undefined')
    _mixin(SIMD$implementation, CustomStringConvertible$implementation, false);
if (typeof ExpressibleByArrayLiteral$implementation != 'undefined')
    _mixin(SIMD$implementation, ExpressibleByArrayLiteral$implementation, false);
var SIMDMask = /** @class */ (function () {
    function SIMDMask() {
    }
    /*Swift.(file).SIMDMask.scalarCount*/
    SIMDMask.prototype.scalarCount$get = function () {
        throw 'unsupported variable Swift.(file).SIMDMask.scalarCount in ' + this.constructor.name;
    };
    Object.defineProperty(SIMDMask.prototype, "scalarCount", {
        get: function () { return this.scalarCount$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).SIMDMask.init()*/
    /*Swift.(file).SIMDStorage.init()*/
    SIMDMask.prototype.init = function ($info) {
        throw 'unsupported method Swift.(file).SIMDMask.init() in ' + this.constructor.name;
    };
    /*Swift.(file).SIMDMask.init(_:Storage)*/
    /*Swift.(file).SIMDMask.init(_:Storage)*/
    SIMDMask.prototype.init = function ($info, _storage) {
        throw 'unsupported method Swift.(file).SIMDMask.init(_:Storage) in ' + this.constructor.name;
    };
    /*Swift.(file).SIMDMask.subscript(_:Int)*/
    /*Swift.(file).SIMDStorage.subscript(_:Int)*/
    SIMDMask.prototype.subscript$get = function ($info, index) {
        throw 'unsupported method Swift.(file).SIMDMask.subscript(_:Int) in ' + this.constructor.name;
    }; /*Swift.(file).SIMDMask.subscript(_:Int)*/
    /*Swift.(file).SIMDStorage.subscript(_:Int)*/
    SIMDMask.prototype.subscript$set = function ($info, newValue, index) {
        throw 'unsupported method Swift.(file).SIMDMask.subscript(_:Int) in ' + this.constructor.name;
    };
    /*Swift.(file).SIMDMask.hashValue*/
    SIMDMask.prototype.hashValue$get = function () {
        throw 'unsupported variable Swift.(file).SIMDMask.hashValue in ' + this.constructor.name;
    };
    Object.defineProperty(SIMDMask.prototype, "hashValue", {
        get: function () { return this.hashValue$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).SIMDMask.random(using:T)*/
    /*Swift.(file).SIMDMask.random(using:T)*/
    SIMDMask.randomUsing = function ($info, generator$inout) {
        throw 'unsupported method Swift.(file).SIMDMask.random(using:T) in ' + this.constructor.name;
    };
    /*Swift.(file).SIMDMask.random()*/
    /*Swift.(file).SIMDMask.random()*/
    SIMDMask.random = function ($info) {
        throw 'unsupported method Swift.(file).SIMDMask.random() in ' + this.constructor.name;
    };
    /*Swift.(file).SIMDMask..!prefix(_:SIMDMask<Storage>)*/
    /*Swift.(file).SIMDMask..!prefix(_:SIMDMask<Storage>)*/
    SIMDMask.prefix_46_33 = function ($info, rhs) {
        /*return .!rhs*/
    };
    /*Swift.(file).SIMDMask..&infix(_:SIMDMask<Storage>,_:SIMDMask<Storage>)*/
    /*Swift.(file).SIMDMask..&infix(_:SIMDMask<Storage>,_:SIMDMask<Storage>)*/
    SIMDMask.infix_46_38 = function ($info, lhs, rhs) {
        /*return lhs .& rhs*/
    };
    /*Swift.(file).SIMDMask..^infix(_:SIMDMask<Storage>,_:SIMDMask<Storage>)*/
    /*Swift.(file).SIMDMask..^infix(_:SIMDMask<Storage>,_:SIMDMask<Storage>)*/
    SIMDMask.infix_46_94 = function ($info, lhs, rhs) {
        /*return lhs .^ rhs*/
    };
    /*Swift.(file).SIMDMask..|infix(_:SIMDMask<Storage>,_:SIMDMask<Storage>)*/
    /*Swift.(file).SIMDMask..|infix(_:SIMDMask<Storage>,_:SIMDMask<Storage>)*/
    SIMDMask.infix_46_124 = function ($info, lhs, rhs) {
        /*return lhs .| rhs*/
    };
    /*Swift.(file).SIMDMask..&infix(_:Bool,_:SIMDMask<Storage>)*/
    /*Swift.(file).SIMDMask..&infix(_:Bool,_:SIMDMask<Storage>)*/
    SIMDMask.infix_46_38 = function ($info, lhs, rhs) {
        /*return lhs .& rhs*/
    };
    /*Swift.(file).SIMDMask..^infix(_:Bool,_:SIMDMask<Storage>)*/
    /*Swift.(file).SIMDMask..^infix(_:Bool,_:SIMDMask<Storage>)*/
    SIMDMask.infix_46_94 = function ($info, lhs, rhs) {
        /*return lhs .^ rhs*/
    };
    /*Swift.(file).SIMDMask..|infix(_:Bool,_:SIMDMask<Storage>)*/
    /*Swift.(file).SIMDMask..|infix(_:Bool,_:SIMDMask<Storage>)*/
    SIMDMask.infix_46_124 = function ($info, lhs, rhs) {
        /*return lhs .| rhs*/
    };
    /*Swift.(file).SIMDMask..&infix(_:SIMDMask<Storage>,_:Bool)*/
    /*Swift.(file).SIMDMask..&infix(_:SIMDMask<Storage>,_:Bool)*/
    SIMDMask.infix_46_38 = function ($info, lhs, rhs) {
        /*return lhs .& rhs*/
    };
    /*Swift.(file).SIMDMask..^infix(_:SIMDMask<Storage>,_:Bool)*/
    /*Swift.(file).SIMDMask..^infix(_:SIMDMask<Storage>,_:Bool)*/
    SIMDMask.infix_46_94 = function ($info, lhs, rhs) {
        /*return lhs .^ rhs*/
    };
    /*Swift.(file).SIMDMask..|infix(_:SIMDMask<Storage>,_:Bool)*/
    /*Swift.(file).SIMDMask..|infix(_:SIMDMask<Storage>,_:Bool)*/
    SIMDMask.infix_46_124 = function ($info, lhs, rhs) {
        /*return lhs .| rhs*/
    };
    /*Swift.(file).SIMDMask..&=infix(_:SIMDMask<Storage>,_:SIMDMask<Storage>)*/
    /*Swift.(file).SIMDMask..&=infix(_:SIMDMask<Storage>,_:SIMDMask<Storage>)*/
    SIMDMask.infix_46_38_61 = function ($info, lhs$inout, rhs) {
        /*return lhs$inout .&= rhs*/
    };
    /*Swift.(file).SIMDMask..^=infix(_:SIMDMask<Storage>,_:SIMDMask<Storage>)*/
    /*Swift.(file).SIMDMask..^=infix(_:SIMDMask<Storage>,_:SIMDMask<Storage>)*/
    SIMDMask.infix_46_94_61 = function ($info, lhs$inout, rhs) {
        /*return lhs$inout .^= rhs*/
    };
    /*Swift.(file).SIMDMask..|=infix(_:SIMDMask<Storage>,_:SIMDMask<Storage>)*/
    /*Swift.(file).SIMDMask..|=infix(_:SIMDMask<Storage>,_:SIMDMask<Storage>)*/
    SIMDMask.infix_46_124_61 = function ($info, lhs$inout, rhs) {
        /*return lhs$inout .|= rhs*/
    };
    /*Swift.(file).SIMDMask..&=infix(_:SIMDMask<Storage>,_:Bool)*/
    /*Swift.(file).SIMDMask..&=infix(_:SIMDMask<Storage>,_:Bool)*/
    SIMDMask.infix_46_38_61 = function ($info, lhs$inout, rhs) {
        /*return lhs$inout .&= rhs*/
    };
    /*Swift.(file).SIMDMask..^=infix(_:SIMDMask<Storage>,_:Bool)*/
    /*Swift.(file).SIMDMask..^=infix(_:SIMDMask<Storage>,_:Bool)*/
    SIMDMask.infix_46_94_61 = function ($info, lhs$inout, rhs) {
        /*return lhs$inout .^= rhs*/
    };
    /*Swift.(file).SIMDMask..|=infix(_:SIMDMask<Storage>,_:Bool)*/
    /*Swift.(file).SIMDMask..|=infix(_:SIMDMask<Storage>,_:Bool)*/
    SIMDMask.infix_46_124_61 = function ($info, lhs$inout, rhs) {
        /*return lhs$inout .|= rhs*/
    };
    SIMDMask.prototype.init$vars = function () {
    };
    SIMDMask.$struct = true;
    SIMDMask.$infoAddress = '';
    return SIMDMask;
}());
if (typeof SIMD$implementation != 'undefined')
    _mixin(SIMDMask, SIMD$implementation, false);
var SIMD2 = /** @class */ (function () {
    function SIMD2() {
    }
    /*Swift.(file).SIMD2.scalarCount*/
    SIMD2.prototype.scalarCount$get = function () {
        throw 'unsupported variable Swift.(file).SIMD2.scalarCount in ' + this.constructor.name;
    };
    Object.defineProperty(SIMD2.prototype, "scalarCount", {
        get: function () { return this.scalarCount$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).SIMD2.init()*/
    /*Swift.(file).SIMDStorage.init()*/
    SIMD2.prototype.init = function ($info) {
        throw 'unsupported method Swift.(file).SIMD2.init() in ' + this.constructor.name;
    };
    /*Swift.(file).SIMD2.subscript(_:Int)*/
    /*Swift.(file).SIMDStorage.subscript(_:Int)*/
    SIMD2.prototype.subscript$get = function ($info, index) {
        throw 'unsupported method Swift.(file).SIMD2.subscript(_:Int) in ' + this.constructor.name;
    }; /*Swift.(file).SIMD2.subscript(_:Int)*/
    /*Swift.(file).SIMDStorage.subscript(_:Int)*/
    SIMD2.prototype.subscript$set = function ($info, newValue, index) {
        throw 'unsupported method Swift.(file).SIMD2.subscript(_:Int) in ' + this.constructor.name;
    };
    /*Swift.(file).SIMD2.init(_:Scalar,_:Scalar)*/
    /*Swift.(file).SIMD2.init(_:Scalar,_:Scalar)*/
    SIMD2.prototype.init = function ($info, v0, v1) {
        throw 'unsupported method Swift.(file).SIMD2.init(_:Scalar,_:Scalar) in ' + this.constructor.name;
    };
    /*Swift.(file).SIMD2.init(x:Scalar,y:Scalar)*/
    /*Swift.(file).SIMD2.init(x:Scalar,y:Scalar)*/
    SIMD2.prototype.initXY = function ($info, x, y) {
        throw 'unsupported method Swift.(file).SIMD2.init(x:Scalar,y:Scalar) in ' + this.constructor.name;
    };
    /*Swift.(file).SIMD2.x*/
    SIMD2.prototype.x$get = function () {
        throw 'unsupported variable Swift.(file).SIMD2.x in ' + this.constructor.name;
    };
    Object.defineProperty(SIMD2.prototype, "x", {
        get: function () { return this.x$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).SIMD2.y*/
    SIMD2.prototype.y$get = function () {
        throw 'unsupported variable Swift.(file).SIMD2.y in ' + this.constructor.name;
    };
    Object.defineProperty(SIMD2.prototype, "y", {
        get: function () { return this.y$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).SIMD2.hashValue*/
    SIMD2.prototype.hashValue$get = function () {
        throw 'unsupported variable Swift.(file).SIMD2.hashValue in ' + this.constructor.name;
    };
    Object.defineProperty(SIMD2.prototype, "hashValue", {
        get: function () { return this.hashValue$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).SIMD2.init(truncatingIfNeeded:SIMD2<Other>)*/
    /*Swift.(file).SIMD2.init(truncatingIfNeeded:SIMD2<Other>)*/
    SIMD2.prototype.initTruncatingIfNeededSIMD2 = function ($info, other) {
        throw 'unsupported method Swift.(file).SIMD2.init(truncatingIfNeeded:SIMD2<Other>) in ' + this.constructor.name;
    };
    /*Swift.(file).SIMD2.init(clamping:SIMD2<Other>)*/
    /*Swift.(file).SIMD2.init(clamping:SIMD2<Other>)*/
    SIMD2.prototype.initClampingSIMD2 = function ($info, other) {
        throw 'unsupported method Swift.(file).SIMD2.init(clamping:SIMD2<Other>) in ' + this.constructor.name;
    };
    /*Swift.(file).SIMD2.init(_:SIMD2<Other>,rounding:FloatingPointRoundingRule)*/
    /*Swift.(file).SIMD2.init(_:SIMD2<Other>,rounding:FloatingPointRoundingRule)*/
    SIMD2.prototype.initSIMD2RoundingFloatingPointRoundingRule = function ($info, other, rule) {
        throw 'unsupported method Swift.(file).SIMD2.init(_:SIMD2<Other>,rounding:FloatingPointRoundingRule) in ' + this.constructor.name;
    };
    /*Swift.(file).SIMD2.debugDescription*/
    SIMD2.prototype.debugDescription$get = function () {
        throw 'unsupported variable Swift.(file).SIMD2.debugDescription in ' + this.constructor.name;
    };
    Object.defineProperty(SIMD2.prototype, "debugDescription", {
        get: function () { return this.debugDescription$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).SIMD2.init(_:SIMD2<Other>)*/
    /*Swift.(file).SIMD2.init(_:SIMD2<Other>)*/
    SIMD2.prototype.initSIMD2 = function ($info, other) {
        throw 'unsupported method Swift.(file).SIMD2.init(_:SIMD2<Other>) in ' + this.constructor.name;
    };
    /*Swift.(file).SIMD2.init(_:SIMD2<Other>)*/
    /*Swift.(file).SIMD2.init(_:SIMD2<Other>)*/
    SIMD2.prototype.initSIMD2 = function ($info, other) {
        throw 'unsupported method Swift.(file).SIMD2.init(_:SIMD2<Other>) in ' + this.constructor.name;
    };
    SIMD2.prototype.init$vars = function () {
    };
    SIMD2.$struct = true;
    SIMD2.$infoAddress = '';
    return SIMD2;
}());
if (typeof SIMD$implementation != 'undefined')
    _mixin(SIMD2, SIMD$implementation, false);
if (typeof CustomDebugStringConvertible$implementation != 'undefined')
    _mixin(SIMD2, CustomDebugStringConvertible$implementation, false);
var SIMD4 = /** @class */ (function () {
    function SIMD4() {
    }
    /*Swift.(file).SIMD4.scalarCount*/
    SIMD4.prototype.scalarCount$get = function () {
        throw 'unsupported variable Swift.(file).SIMD4.scalarCount in ' + this.constructor.name;
    };
    Object.defineProperty(SIMD4.prototype, "scalarCount", {
        get: function () { return this.scalarCount$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).SIMD4.init()*/
    /*Swift.(file).SIMDStorage.init()*/
    SIMD4.prototype.init = function ($info) {
        throw 'unsupported method Swift.(file).SIMD4.init() in ' + this.constructor.name;
    };
    /*Swift.(file).SIMD4.subscript(_:Int)*/
    /*Swift.(file).SIMDStorage.subscript(_:Int)*/
    SIMD4.prototype.subscript$get = function ($info, index) {
        throw 'unsupported method Swift.(file).SIMD4.subscript(_:Int) in ' + this.constructor.name;
    }; /*Swift.(file).SIMD4.subscript(_:Int)*/
    /*Swift.(file).SIMDStorage.subscript(_:Int)*/
    SIMD4.prototype.subscript$set = function ($info, newValue, index) {
        throw 'unsupported method Swift.(file).SIMD4.subscript(_:Int) in ' + this.constructor.name;
    };
    /*Swift.(file).SIMD4.init(_:Scalar,_:Scalar,_:Scalar,_:Scalar)*/
    /*Swift.(file).SIMD4.init(_:Scalar,_:Scalar,_:Scalar,_:Scalar)*/
    SIMD4.prototype.init = function ($info, v0, v1, v2, v3) {
        throw 'unsupported method Swift.(file).SIMD4.init(_:Scalar,_:Scalar,_:Scalar,_:Scalar) in ' + this.constructor.name;
    };
    /*Swift.(file).SIMD4.init(x:Scalar,y:Scalar,z:Scalar,w:Scalar)*/
    /*Swift.(file).SIMD4.init(x:Scalar,y:Scalar,z:Scalar,w:Scalar)*/
    SIMD4.prototype.initXYZW = function ($info, x, y, z, w) {
        throw 'unsupported method Swift.(file).SIMD4.init(x:Scalar,y:Scalar,z:Scalar,w:Scalar) in ' + this.constructor.name;
    };
    /*Swift.(file).SIMD4.x*/
    SIMD4.prototype.x$get = function () {
        throw 'unsupported variable Swift.(file).SIMD4.x in ' + this.constructor.name;
    };
    Object.defineProperty(SIMD4.prototype, "x", {
        get: function () { return this.x$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).SIMD4.y*/
    SIMD4.prototype.y$get = function () {
        throw 'unsupported variable Swift.(file).SIMD4.y in ' + this.constructor.name;
    };
    Object.defineProperty(SIMD4.prototype, "y", {
        get: function () { return this.y$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).SIMD4.z*/
    SIMD4.prototype.z$get = function () {
        throw 'unsupported variable Swift.(file).SIMD4.z in ' + this.constructor.name;
    };
    Object.defineProperty(SIMD4.prototype, "z", {
        get: function () { return this.z$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).SIMD4.w*/
    SIMD4.prototype.w$get = function () {
        throw 'unsupported variable Swift.(file).SIMD4.w in ' + this.constructor.name;
    };
    Object.defineProperty(SIMD4.prototype, "w", {
        get: function () { return this.w$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).SIMD4.init(lowHalf:SIMD2<Scalar>,highHalf:SIMD2<Scalar>)*/
    /*Swift.(file).SIMD4.init(lowHalf:SIMD2<Scalar>,highHalf:SIMD2<Scalar>)*/
    SIMD4.prototype.initLowHalfSIMD2HighHalfSIMD2 = function ($info, lowHalf, highHalf) {
        throw 'unsupported method Swift.(file).SIMD4.init(lowHalf:SIMD2<Scalar>,highHalf:SIMD2<Scalar>) in ' + this.constructor.name;
    };
    /*Swift.(file).SIMD4.lowHalf*/
    SIMD4.prototype.lowHalf$get = function () {
        throw 'unsupported variable Swift.(file).SIMD4.lowHalf in ' + this.constructor.name;
    };
    Object.defineProperty(SIMD4.prototype, "lowHalf", {
        get: function () { return this.lowHalf$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).SIMD4.highHalf*/
    SIMD4.prototype.highHalf$get = function () {
        throw 'unsupported variable Swift.(file).SIMD4.highHalf in ' + this.constructor.name;
    };
    Object.defineProperty(SIMD4.prototype, "highHalf", {
        get: function () { return this.highHalf$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).SIMD4.evenHalf*/
    SIMD4.prototype.evenHalf$get = function () {
        throw 'unsupported variable Swift.(file).SIMD4.evenHalf in ' + this.constructor.name;
    };
    Object.defineProperty(SIMD4.prototype, "evenHalf", {
        get: function () { return this.evenHalf$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).SIMD4.oddHalf*/
    SIMD4.prototype.oddHalf$get = function () {
        throw 'unsupported variable Swift.(file).SIMD4.oddHalf in ' + this.constructor.name;
    };
    Object.defineProperty(SIMD4.prototype, "oddHalf", {
        get: function () { return this.oddHalf$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).SIMD4.hashValue*/
    SIMD4.prototype.hashValue$get = function () {
        throw 'unsupported variable Swift.(file).SIMD4.hashValue in ' + this.constructor.name;
    };
    Object.defineProperty(SIMD4.prototype, "hashValue", {
        get: function () { return this.hashValue$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).SIMD4.init(truncatingIfNeeded:SIMD4<Other>)*/
    /*Swift.(file).SIMD4.init(truncatingIfNeeded:SIMD4<Other>)*/
    SIMD4.prototype.initTruncatingIfNeededSIMD4 = function ($info, other) {
        throw 'unsupported method Swift.(file).SIMD4.init(truncatingIfNeeded:SIMD4<Other>) in ' + this.constructor.name;
    };
    /*Swift.(file).SIMD4.init(clamping:SIMD4<Other>)*/
    /*Swift.(file).SIMD4.init(clamping:SIMD4<Other>)*/
    SIMD4.prototype.initClampingSIMD4 = function ($info, other) {
        throw 'unsupported method Swift.(file).SIMD4.init(clamping:SIMD4<Other>) in ' + this.constructor.name;
    };
    /*Swift.(file).SIMD4.init(_:SIMD4<Other>,rounding:FloatingPointRoundingRule)*/
    /*Swift.(file).SIMD4.init(_:SIMD4<Other>,rounding:FloatingPointRoundingRule)*/
    SIMD4.prototype.initSIMD4RoundingFloatingPointRoundingRule = function ($info, other, rule) {
        throw 'unsupported method Swift.(file).SIMD4.init(_:SIMD4<Other>,rounding:FloatingPointRoundingRule) in ' + this.constructor.name;
    };
    /*Swift.(file).SIMD4.debugDescription*/
    SIMD4.prototype.debugDescription$get = function () {
        throw 'unsupported variable Swift.(file).SIMD4.debugDescription in ' + this.constructor.name;
    };
    Object.defineProperty(SIMD4.prototype, "debugDescription", {
        get: function () { return this.debugDescription$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).SIMD4.init(_:SIMD4<Other>)*/
    /*Swift.(file).SIMD4.init(_:SIMD4<Other>)*/
    SIMD4.prototype.initSIMD4 = function ($info, other) {
        throw 'unsupported method Swift.(file).SIMD4.init(_:SIMD4<Other>) in ' + this.constructor.name;
    };
    /*Swift.(file).SIMD4.init(_:SIMD4<Other>)*/
    /*Swift.(file).SIMD4.init(_:SIMD4<Other>)*/
    SIMD4.prototype.initSIMD4 = function ($info, other) {
        throw 'unsupported method Swift.(file).SIMD4.init(_:SIMD4<Other>) in ' + this.constructor.name;
    };
    SIMD4.prototype.init$vars = function () {
    };
    SIMD4.$struct = true;
    SIMD4.$infoAddress = '';
    return SIMD4;
}());
if (typeof SIMD$implementation != 'undefined')
    _mixin(SIMD4, SIMD$implementation, false);
if (typeof CustomDebugStringConvertible$implementation != 'undefined')
    _mixin(SIMD4, CustomDebugStringConvertible$implementation, false);
var SIMD8 = /** @class */ (function () {
    function SIMD8() {
    }
    /*Swift.(file).SIMD8.scalarCount*/
    SIMD8.prototype.scalarCount$get = function () {
        throw 'unsupported variable Swift.(file).SIMD8.scalarCount in ' + this.constructor.name;
    };
    Object.defineProperty(SIMD8.prototype, "scalarCount", {
        get: function () { return this.scalarCount$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).SIMD8.init()*/
    /*Swift.(file).SIMDStorage.init()*/
    SIMD8.prototype.init = function ($info) {
        throw 'unsupported method Swift.(file).SIMD8.init() in ' + this.constructor.name;
    };
    /*Swift.(file).SIMD8.subscript(_:Int)*/
    /*Swift.(file).SIMDStorage.subscript(_:Int)*/
    SIMD8.prototype.subscript$get = function ($info, index) {
        throw 'unsupported method Swift.(file).SIMD8.subscript(_:Int) in ' + this.constructor.name;
    }; /*Swift.(file).SIMD8.subscript(_:Int)*/
    /*Swift.(file).SIMDStorage.subscript(_:Int)*/
    SIMD8.prototype.subscript$set = function ($info, newValue, index) {
        throw 'unsupported method Swift.(file).SIMD8.subscript(_:Int) in ' + this.constructor.name;
    };
    /*Swift.(file).SIMD8.init(_:Scalar,_:Scalar,_:Scalar,_:Scalar,_:Scalar,_:Scalar,_:Scalar,_:Scalar)*/
    /*Swift.(file).SIMD8.init(_:Scalar,_:Scalar,_:Scalar,_:Scalar,_:Scalar,_:Scalar,_:Scalar,_:Scalar)*/
    SIMD8.prototype.init = function ($info, v0, v1, v2, v3, v4, v5, v6, v7) {
        throw 'unsupported method Swift.(file).SIMD8.init(_:Scalar,_:Scalar,_:Scalar,_:Scalar,_:Scalar,_:Scalar,_:Scalar,_:Scalar) in ' + this.constructor.name;
    };
    /*Swift.(file).SIMD8.init(lowHalf:SIMD4<Scalar>,highHalf:SIMD4<Scalar>)*/
    /*Swift.(file).SIMD8.init(lowHalf:SIMD4<Scalar>,highHalf:SIMD4<Scalar>)*/
    SIMD8.prototype.initLowHalfSIMD4HighHalfSIMD4 = function ($info, lowHalf, highHalf) {
        throw 'unsupported method Swift.(file).SIMD8.init(lowHalf:SIMD4<Scalar>,highHalf:SIMD4<Scalar>) in ' + this.constructor.name;
    };
    /*Swift.(file).SIMD8.lowHalf*/
    SIMD8.prototype.lowHalf$get = function () {
        throw 'unsupported variable Swift.(file).SIMD8.lowHalf in ' + this.constructor.name;
    };
    Object.defineProperty(SIMD8.prototype, "lowHalf", {
        get: function () { return this.lowHalf$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).SIMD8.highHalf*/
    SIMD8.prototype.highHalf$get = function () {
        throw 'unsupported variable Swift.(file).SIMD8.highHalf in ' + this.constructor.name;
    };
    Object.defineProperty(SIMD8.prototype, "highHalf", {
        get: function () { return this.highHalf$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).SIMD8.evenHalf*/
    SIMD8.prototype.evenHalf$get = function () {
        throw 'unsupported variable Swift.(file).SIMD8.evenHalf in ' + this.constructor.name;
    };
    Object.defineProperty(SIMD8.prototype, "evenHalf", {
        get: function () { return this.evenHalf$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).SIMD8.oddHalf*/
    SIMD8.prototype.oddHalf$get = function () {
        throw 'unsupported variable Swift.(file).SIMD8.oddHalf in ' + this.constructor.name;
    };
    Object.defineProperty(SIMD8.prototype, "oddHalf", {
        get: function () { return this.oddHalf$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).SIMD8.hashValue*/
    SIMD8.prototype.hashValue$get = function () {
        throw 'unsupported variable Swift.(file).SIMD8.hashValue in ' + this.constructor.name;
    };
    Object.defineProperty(SIMD8.prototype, "hashValue", {
        get: function () { return this.hashValue$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).SIMD8.init(truncatingIfNeeded:SIMD8<Other>)*/
    /*Swift.(file).SIMD8.init(truncatingIfNeeded:SIMD8<Other>)*/
    SIMD8.prototype.initTruncatingIfNeededSIMD8 = function ($info, other) {
        throw 'unsupported method Swift.(file).SIMD8.init(truncatingIfNeeded:SIMD8<Other>) in ' + this.constructor.name;
    };
    /*Swift.(file).SIMD8.init(clamping:SIMD8<Other>)*/
    /*Swift.(file).SIMD8.init(clamping:SIMD8<Other>)*/
    SIMD8.prototype.initClampingSIMD8 = function ($info, other) {
        throw 'unsupported method Swift.(file).SIMD8.init(clamping:SIMD8<Other>) in ' + this.constructor.name;
    };
    /*Swift.(file).SIMD8.init(_:SIMD8<Other>,rounding:FloatingPointRoundingRule)*/
    /*Swift.(file).SIMD8.init(_:SIMD8<Other>,rounding:FloatingPointRoundingRule)*/
    SIMD8.prototype.initSIMD8RoundingFloatingPointRoundingRule = function ($info, other, rule) {
        throw 'unsupported method Swift.(file).SIMD8.init(_:SIMD8<Other>,rounding:FloatingPointRoundingRule) in ' + this.constructor.name;
    };
    /*Swift.(file).SIMD8.debugDescription*/
    SIMD8.prototype.debugDescription$get = function () {
        throw 'unsupported variable Swift.(file).SIMD8.debugDescription in ' + this.constructor.name;
    };
    Object.defineProperty(SIMD8.prototype, "debugDescription", {
        get: function () { return this.debugDescription$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).SIMD8.init(_:SIMD8<Other>)*/
    /*Swift.(file).SIMD8.init(_:SIMD8<Other>)*/
    SIMD8.prototype.initSIMD8 = function ($info, other) {
        throw 'unsupported method Swift.(file).SIMD8.init(_:SIMD8<Other>) in ' + this.constructor.name;
    };
    /*Swift.(file).SIMD8.init(_:SIMD8<Other>)*/
    /*Swift.(file).SIMD8.init(_:SIMD8<Other>)*/
    SIMD8.prototype.initSIMD8 = function ($info, other) {
        throw 'unsupported method Swift.(file).SIMD8.init(_:SIMD8<Other>) in ' + this.constructor.name;
    };
    SIMD8.prototype.init$vars = function () {
    };
    SIMD8.$struct = true;
    SIMD8.$infoAddress = '';
    return SIMD8;
}());
if (typeof SIMD$implementation != 'undefined')
    _mixin(SIMD8, SIMD$implementation, false);
if (typeof CustomDebugStringConvertible$implementation != 'undefined')
    _mixin(SIMD8, CustomDebugStringConvertible$implementation, false);
var SIMD16 = /** @class */ (function () {
    function SIMD16() {
    }
    /*Swift.(file).SIMD16.scalarCount*/
    SIMD16.prototype.scalarCount$get = function () {
        throw 'unsupported variable Swift.(file).SIMD16.scalarCount in ' + this.constructor.name;
    };
    Object.defineProperty(SIMD16.prototype, "scalarCount", {
        get: function () { return this.scalarCount$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).SIMD16.init()*/
    /*Swift.(file).SIMDStorage.init()*/
    SIMD16.prototype.init = function ($info) {
        throw 'unsupported method Swift.(file).SIMD16.init() in ' + this.constructor.name;
    };
    /*Swift.(file).SIMD16.subscript(_:Int)*/
    /*Swift.(file).SIMDStorage.subscript(_:Int)*/
    SIMD16.prototype.subscript$get = function ($info, index) {
        throw 'unsupported method Swift.(file).SIMD16.subscript(_:Int) in ' + this.constructor.name;
    }; /*Swift.(file).SIMD16.subscript(_:Int)*/
    /*Swift.(file).SIMDStorage.subscript(_:Int)*/
    SIMD16.prototype.subscript$set = function ($info, newValue, index) {
        throw 'unsupported method Swift.(file).SIMD16.subscript(_:Int) in ' + this.constructor.name;
    };
    /*Swift.(file).SIMD16.init(_:Scalar,_:Scalar,_:Scalar,_:Scalar,_:Scalar,_:Scalar,_:Scalar,_:Scalar,_:Scalar,_:Scalar,_:Scalar,_:Scalar,_:Scalar,_:Scalar,_:Scalar,_:Scalar)*/
    /*Swift.(file).SIMD16.init(_:Scalar,_:Scalar,_:Scalar,_:Scalar,_:Scalar,_:Scalar,_:Scalar,_:Scalar,_:Scalar,_:Scalar,_:Scalar,_:Scalar,_:Scalar,_:Scalar,_:Scalar,_:Scalar)*/
    SIMD16.prototype.init = function ($info, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9, v10, v11, v12, v13, v14, v15) {
        throw 'unsupported method Swift.(file).SIMD16.init(_:Scalar,_:Scalar,_:Scalar,_:Scalar,_:Scalar,_:Scalar,_:Scalar,_:Scalar,_:Scalar,_:Scalar,_:Scalar,_:Scalar,_:Scalar,_:Scalar,_:Scalar,_:Scalar) in ' + this.constructor.name;
    };
    /*Swift.(file).SIMD16.init(lowHalf:SIMD8<Scalar>,highHalf:SIMD8<Scalar>)*/
    /*Swift.(file).SIMD16.init(lowHalf:SIMD8<Scalar>,highHalf:SIMD8<Scalar>)*/
    SIMD16.prototype.initLowHalfSIMD8HighHalfSIMD8 = function ($info, lowHalf, highHalf) {
        throw 'unsupported method Swift.(file).SIMD16.init(lowHalf:SIMD8<Scalar>,highHalf:SIMD8<Scalar>) in ' + this.constructor.name;
    };
    /*Swift.(file).SIMD16.lowHalf*/
    SIMD16.prototype.lowHalf$get = function () {
        throw 'unsupported variable Swift.(file).SIMD16.lowHalf in ' + this.constructor.name;
    };
    Object.defineProperty(SIMD16.prototype, "lowHalf", {
        get: function () { return this.lowHalf$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).SIMD16.highHalf*/
    SIMD16.prototype.highHalf$get = function () {
        throw 'unsupported variable Swift.(file).SIMD16.highHalf in ' + this.constructor.name;
    };
    Object.defineProperty(SIMD16.prototype, "highHalf", {
        get: function () { return this.highHalf$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).SIMD16.evenHalf*/
    SIMD16.prototype.evenHalf$get = function () {
        throw 'unsupported variable Swift.(file).SIMD16.evenHalf in ' + this.constructor.name;
    };
    Object.defineProperty(SIMD16.prototype, "evenHalf", {
        get: function () { return this.evenHalf$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).SIMD16.oddHalf*/
    SIMD16.prototype.oddHalf$get = function () {
        throw 'unsupported variable Swift.(file).SIMD16.oddHalf in ' + this.constructor.name;
    };
    Object.defineProperty(SIMD16.prototype, "oddHalf", {
        get: function () { return this.oddHalf$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).SIMD16.hashValue*/
    SIMD16.prototype.hashValue$get = function () {
        throw 'unsupported variable Swift.(file).SIMD16.hashValue in ' + this.constructor.name;
    };
    Object.defineProperty(SIMD16.prototype, "hashValue", {
        get: function () { return this.hashValue$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).SIMD16.init(truncatingIfNeeded:SIMD16<Other>)*/
    /*Swift.(file).SIMD16.init(truncatingIfNeeded:SIMD16<Other>)*/
    SIMD16.prototype.initTruncatingIfNeededSIMD16 = function ($info, other) {
        throw 'unsupported method Swift.(file).SIMD16.init(truncatingIfNeeded:SIMD16<Other>) in ' + this.constructor.name;
    };
    /*Swift.(file).SIMD16.init(clamping:SIMD16<Other>)*/
    /*Swift.(file).SIMD16.init(clamping:SIMD16<Other>)*/
    SIMD16.prototype.initClampingSIMD16 = function ($info, other) {
        throw 'unsupported method Swift.(file).SIMD16.init(clamping:SIMD16<Other>) in ' + this.constructor.name;
    };
    /*Swift.(file).SIMD16.init(_:SIMD16<Other>,rounding:FloatingPointRoundingRule)*/
    /*Swift.(file).SIMD16.init(_:SIMD16<Other>,rounding:FloatingPointRoundingRule)*/
    SIMD16.prototype.initSIMD16RoundingFloatingPointRoundingRule = function ($info, other, rule) {
        throw 'unsupported method Swift.(file).SIMD16.init(_:SIMD16<Other>,rounding:FloatingPointRoundingRule) in ' + this.constructor.name;
    };
    /*Swift.(file).SIMD16.debugDescription*/
    SIMD16.prototype.debugDescription$get = function () {
        throw 'unsupported variable Swift.(file).SIMD16.debugDescription in ' + this.constructor.name;
    };
    Object.defineProperty(SIMD16.prototype, "debugDescription", {
        get: function () { return this.debugDescription$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).SIMD16.init(_:SIMD16<Other>)*/
    /*Swift.(file).SIMD16.init(_:SIMD16<Other>)*/
    SIMD16.prototype.initSIMD16 = function ($info, other) {
        throw 'unsupported method Swift.(file).SIMD16.init(_:SIMD16<Other>) in ' + this.constructor.name;
    };
    /*Swift.(file).SIMD16.init(_:SIMD16<Other>)*/
    /*Swift.(file).SIMD16.init(_:SIMD16<Other>)*/
    SIMD16.prototype.initSIMD16 = function ($info, other) {
        throw 'unsupported method Swift.(file).SIMD16.init(_:SIMD16<Other>) in ' + this.constructor.name;
    };
    SIMD16.prototype.init$vars = function () {
    };
    SIMD16.$struct = true;
    SIMD16.$infoAddress = '';
    return SIMD16;
}());
if (typeof SIMD$implementation != 'undefined')
    _mixin(SIMD16, SIMD$implementation, false);
if (typeof CustomDebugStringConvertible$implementation != 'undefined')
    _mixin(SIMD16, CustomDebugStringConvertible$implementation, false);
var SIMD32 = /** @class */ (function () {
    function SIMD32() {
    }
    /*Swift.(file).SIMD32.scalarCount*/
    SIMD32.prototype.scalarCount$get = function () {
        throw 'unsupported variable Swift.(file).SIMD32.scalarCount in ' + this.constructor.name;
    };
    Object.defineProperty(SIMD32.prototype, "scalarCount", {
        get: function () { return this.scalarCount$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).SIMD32.init()*/
    /*Swift.(file).SIMDStorage.init()*/
    SIMD32.prototype.init = function ($info) {
        throw 'unsupported method Swift.(file).SIMD32.init() in ' + this.constructor.name;
    };
    /*Swift.(file).SIMD32.subscript(_:Int)*/
    /*Swift.(file).SIMDStorage.subscript(_:Int)*/
    SIMD32.prototype.subscript$get = function ($info, index) {
        throw 'unsupported method Swift.(file).SIMD32.subscript(_:Int) in ' + this.constructor.name;
    }; /*Swift.(file).SIMD32.subscript(_:Int)*/
    /*Swift.(file).SIMDStorage.subscript(_:Int)*/
    SIMD32.prototype.subscript$set = function ($info, newValue, index) {
        throw 'unsupported method Swift.(file).SIMD32.subscript(_:Int) in ' + this.constructor.name;
    };
    /*Swift.(file).SIMD32.init(_:Scalar,_:Scalar,_:Scalar,_:Scalar,_:Scalar,_:Scalar,_:Scalar,_:Scalar,_:Scalar,_:Scalar,_:Scalar,_:Scalar,_:Scalar,_:Scalar,_:Scalar,_:Scalar,_:Scalar,_:Scalar,_:Scalar,_:Scalar,_:Scalar,_:Scalar,_:Scalar,_:Scalar,_:Scalar,_:Scalar,_:Scalar,_:Scalar,_:Scalar,_:Scalar,_:Scalar,_:Scalar)*/
    /*Swift.(file).SIMD32.init(_:Scalar,_:Scalar,_:Scalar,_:Scalar,_:Scalar,_:Scalar,_:Scalar,_:Scalar,_:Scalar,_:Scalar,_:Scalar,_:Scalar,_:Scalar,_:Scalar,_:Scalar,_:Scalar,_:Scalar,_:Scalar,_:Scalar,_:Scalar,_:Scalar,_:Scalar,_:Scalar,_:Scalar,_:Scalar,_:Scalar,_:Scalar,_:Scalar,_:Scalar,_:Scalar,_:Scalar,_:Scalar)*/
    SIMD32.prototype.init = function ($info, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9, v10, v11, v12, v13, v14, v15, v16, v17, v18, v19, v20, v21, v22, v23, v24, v25, v26, v27, v28, v29, v30, v31) {
        throw 'unsupported method Swift.(file).SIMD32.init(_:Scalar,_:Scalar,_:Scalar,_:Scalar,_:Scalar,_:Scalar,_:Scalar,_:Scalar,_:Scalar,_:Scalar,_:Scalar,_:Scalar,_:Scalar,_:Scalar,_:Scalar,_:Scalar,_:Scalar,_:Scalar,_:Scalar,_:Scalar,_:Scalar,_:Scalar,_:Scalar,_:Scalar,_:Scalar,_:Scalar,_:Scalar,_:Scalar,_:Scalar,_:Scalar,_:Scalar,_:Scalar) in ' + this.constructor.name;
    };
    /*Swift.(file).SIMD32.init(lowHalf:SIMD16<Scalar>,highHalf:SIMD16<Scalar>)*/
    /*Swift.(file).SIMD32.init(lowHalf:SIMD16<Scalar>,highHalf:SIMD16<Scalar>)*/
    SIMD32.prototype.initLowHalfSIMD16HighHalfSIMD16 = function ($info, lowHalf, highHalf) {
        throw 'unsupported method Swift.(file).SIMD32.init(lowHalf:SIMD16<Scalar>,highHalf:SIMD16<Scalar>) in ' + this.constructor.name;
    };
    /*Swift.(file).SIMD32.lowHalf*/
    SIMD32.prototype.lowHalf$get = function () {
        throw 'unsupported variable Swift.(file).SIMD32.lowHalf in ' + this.constructor.name;
    };
    Object.defineProperty(SIMD32.prototype, "lowHalf", {
        get: function () { return this.lowHalf$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).SIMD32.highHalf*/
    SIMD32.prototype.highHalf$get = function () {
        throw 'unsupported variable Swift.(file).SIMD32.highHalf in ' + this.constructor.name;
    };
    Object.defineProperty(SIMD32.prototype, "highHalf", {
        get: function () { return this.highHalf$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).SIMD32.evenHalf*/
    SIMD32.prototype.evenHalf$get = function () {
        throw 'unsupported variable Swift.(file).SIMD32.evenHalf in ' + this.constructor.name;
    };
    Object.defineProperty(SIMD32.prototype, "evenHalf", {
        get: function () { return this.evenHalf$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).SIMD32.oddHalf*/
    SIMD32.prototype.oddHalf$get = function () {
        throw 'unsupported variable Swift.(file).SIMD32.oddHalf in ' + this.constructor.name;
    };
    Object.defineProperty(SIMD32.prototype, "oddHalf", {
        get: function () { return this.oddHalf$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).SIMD32.hashValue*/
    SIMD32.prototype.hashValue$get = function () {
        throw 'unsupported variable Swift.(file).SIMD32.hashValue in ' + this.constructor.name;
    };
    Object.defineProperty(SIMD32.prototype, "hashValue", {
        get: function () { return this.hashValue$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).SIMD32.init(truncatingIfNeeded:SIMD32<Other>)*/
    /*Swift.(file).SIMD32.init(truncatingIfNeeded:SIMD32<Other>)*/
    SIMD32.prototype.initTruncatingIfNeededSIMD32 = function ($info, other) {
        throw 'unsupported method Swift.(file).SIMD32.init(truncatingIfNeeded:SIMD32<Other>) in ' + this.constructor.name;
    };
    /*Swift.(file).SIMD32.init(clamping:SIMD32<Other>)*/
    /*Swift.(file).SIMD32.init(clamping:SIMD32<Other>)*/
    SIMD32.prototype.initClampingSIMD32 = function ($info, other) {
        throw 'unsupported method Swift.(file).SIMD32.init(clamping:SIMD32<Other>) in ' + this.constructor.name;
    };
    /*Swift.(file).SIMD32.init(_:SIMD32<Other>,rounding:FloatingPointRoundingRule)*/
    /*Swift.(file).SIMD32.init(_:SIMD32<Other>,rounding:FloatingPointRoundingRule)*/
    SIMD32.prototype.initSIMD32RoundingFloatingPointRoundingRule = function ($info, other, rule) {
        throw 'unsupported method Swift.(file).SIMD32.init(_:SIMD32<Other>,rounding:FloatingPointRoundingRule) in ' + this.constructor.name;
    };
    /*Swift.(file).SIMD32.debugDescription*/
    SIMD32.prototype.debugDescription$get = function () {
        throw 'unsupported variable Swift.(file).SIMD32.debugDescription in ' + this.constructor.name;
    };
    Object.defineProperty(SIMD32.prototype, "debugDescription", {
        get: function () { return this.debugDescription$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).SIMD32.init(_:SIMD32<Other>)*/
    /*Swift.(file).SIMD32.init(_:SIMD32<Other>)*/
    SIMD32.prototype.initSIMD32 = function ($info, other) {
        throw 'unsupported method Swift.(file).SIMD32.init(_:SIMD32<Other>) in ' + this.constructor.name;
    };
    /*Swift.(file).SIMD32.init(_:SIMD32<Other>)*/
    /*Swift.(file).SIMD32.init(_:SIMD32<Other>)*/
    SIMD32.prototype.initSIMD32 = function ($info, other) {
        throw 'unsupported method Swift.(file).SIMD32.init(_:SIMD32<Other>) in ' + this.constructor.name;
    };
    SIMD32.prototype.init$vars = function () {
    };
    SIMD32.$struct = true;
    SIMD32.$infoAddress = '';
    return SIMD32;
}());
if (typeof SIMD$implementation != 'undefined')
    _mixin(SIMD32, SIMD$implementation, false);
if (typeof CustomDebugStringConvertible$implementation != 'undefined')
    _mixin(SIMD32, CustomDebugStringConvertible$implementation, false);
var SIMD64 = /** @class */ (function () {
    function SIMD64() {
    }
    /*Swift.(file).SIMD64.scalarCount*/
    SIMD64.prototype.scalarCount$get = function () {
        throw 'unsupported variable Swift.(file).SIMD64.scalarCount in ' + this.constructor.name;
    };
    Object.defineProperty(SIMD64.prototype, "scalarCount", {
        get: function () { return this.scalarCount$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).SIMD64.init()*/
    /*Swift.(file).SIMDStorage.init()*/
    SIMD64.prototype.init = function ($info) {
        throw 'unsupported method Swift.(file).SIMD64.init() in ' + this.constructor.name;
    };
    /*Swift.(file).SIMD64.subscript(_:Int)*/
    /*Swift.(file).SIMDStorage.subscript(_:Int)*/
    SIMD64.prototype.subscript$get = function ($info, index) {
        throw 'unsupported method Swift.(file).SIMD64.subscript(_:Int) in ' + this.constructor.name;
    }; /*Swift.(file).SIMD64.subscript(_:Int)*/
    /*Swift.(file).SIMDStorage.subscript(_:Int)*/
    SIMD64.prototype.subscript$set = function ($info, newValue, index) {
        throw 'unsupported method Swift.(file).SIMD64.subscript(_:Int) in ' + this.constructor.name;
    };
    /*Swift.(file).SIMD64.init(_:Scalar,_:Scalar,_:Scalar,_:Scalar,_:Scalar,_:Scalar,_:Scalar,_:Scalar,_:Scalar,_:Scalar,_:Scalar,_:Scalar,_:Scalar,_:Scalar,_:Scalar,_:Scalar,_:Scalar,_:Scalar,_:Scalar,_:Scalar,_:Scalar,_:Scalar,_:Scalar,_:Scalar,_:Scalar,_:Scalar,_:Scalar,_:Scalar,_:Scalar,_:Scalar,_:Scalar,_:Scalar,_:Scalar,_:Scalar,_:Scalar,_:Scalar,_:Scalar,_:Scalar,_:Scalar,_:Scalar,_:Scalar,_:Scalar,_:Scalar,_:Scalar,_:Scalar,_:Scalar,_:Scalar,_:Scalar,_:Scalar,_:Scalar,_:Scalar,_:Scalar,_:Scalar,_:Scalar,_:Scalar,_:Scalar,_:Scalar,_:Scalar,_:Scalar,_:Scalar,_:Scalar,_:Scalar,_:Scalar,_:Scalar)*/
    /*Swift.(file).SIMD64.init(_:Scalar,_:Scalar,_:Scalar,_:Scalar,_:Scalar,_:Scalar,_:Scalar,_:Scalar,_:Scalar,_:Scalar,_:Scalar,_:Scalar,_:Scalar,_:Scalar,_:Scalar,_:Scalar,_:Scalar,_:Scalar,_:Scalar,_:Scalar,_:Scalar,_:Scalar,_:Scalar,_:Scalar,_:Scalar,_:Scalar,_:Scalar,_:Scalar,_:Scalar,_:Scalar,_:Scalar,_:Scalar,_:Scalar,_:Scalar,_:Scalar,_:Scalar,_:Scalar,_:Scalar,_:Scalar,_:Scalar,_:Scalar,_:Scalar,_:Scalar,_:Scalar,_:Scalar,_:Scalar,_:Scalar,_:Scalar,_:Scalar,_:Scalar,_:Scalar,_:Scalar,_:Scalar,_:Scalar,_:Scalar,_:Scalar,_:Scalar,_:Scalar,_:Scalar,_:Scalar,_:Scalar,_:Scalar,_:Scalar,_:Scalar)*/
    SIMD64.prototype.init = function ($info, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9, v10, v11, v12, v13, v14, v15, v16, v17, v18, v19, v20, v21, v22, v23, v24, v25, v26, v27, v28, v29, v30, v31, v32, v33, v34, v35, v36, v37, v38, v39, v40, v41, v42, v43, v44, v45, v46, v47, v48, v49, v50, v51, v52, v53, v54, v55, v56, v57, v58, v59, v60, v61, v62, v63) {
        throw 'unsupported method Swift.(file).SIMD64.init(_:Scalar,_:Scalar,_:Scalar,_:Scalar,_:Scalar,_:Scalar,_:Scalar,_:Scalar,_:Scalar,_:Scalar,_:Scalar,_:Scalar,_:Scalar,_:Scalar,_:Scalar,_:Scalar,_:Scalar,_:Scalar,_:Scalar,_:Scalar,_:Scalar,_:Scalar,_:Scalar,_:Scalar,_:Scalar,_:Scalar,_:Scalar,_:Scalar,_:Scalar,_:Scalar,_:Scalar,_:Scalar,_:Scalar,_:Scalar,_:Scalar,_:Scalar,_:Scalar,_:Scalar,_:Scalar,_:Scalar,_:Scalar,_:Scalar,_:Scalar,_:Scalar,_:Scalar,_:Scalar,_:Scalar,_:Scalar,_:Scalar,_:Scalar,_:Scalar,_:Scalar,_:Scalar,_:Scalar,_:Scalar,_:Scalar,_:Scalar,_:Scalar,_:Scalar,_:Scalar,_:Scalar,_:Scalar,_:Scalar,_:Scalar) in ' + this.constructor.name;
    };
    /*Swift.(file).SIMD64.init(lowHalf:SIMD32<Scalar>,highHalf:SIMD32<Scalar>)*/
    /*Swift.(file).SIMD64.init(lowHalf:SIMD32<Scalar>,highHalf:SIMD32<Scalar>)*/
    SIMD64.prototype.initLowHalfSIMD32HighHalfSIMD32 = function ($info, lowHalf, highHalf) {
        throw 'unsupported method Swift.(file).SIMD64.init(lowHalf:SIMD32<Scalar>,highHalf:SIMD32<Scalar>) in ' + this.constructor.name;
    };
    /*Swift.(file).SIMD64.lowHalf*/
    SIMD64.prototype.lowHalf$get = function () {
        throw 'unsupported variable Swift.(file).SIMD64.lowHalf in ' + this.constructor.name;
    };
    Object.defineProperty(SIMD64.prototype, "lowHalf", {
        get: function () { return this.lowHalf$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).SIMD64.highHalf*/
    SIMD64.prototype.highHalf$get = function () {
        throw 'unsupported variable Swift.(file).SIMD64.highHalf in ' + this.constructor.name;
    };
    Object.defineProperty(SIMD64.prototype, "highHalf", {
        get: function () { return this.highHalf$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).SIMD64.evenHalf*/
    SIMD64.prototype.evenHalf$get = function () {
        throw 'unsupported variable Swift.(file).SIMD64.evenHalf in ' + this.constructor.name;
    };
    Object.defineProperty(SIMD64.prototype, "evenHalf", {
        get: function () { return this.evenHalf$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).SIMD64.oddHalf*/
    SIMD64.prototype.oddHalf$get = function () {
        throw 'unsupported variable Swift.(file).SIMD64.oddHalf in ' + this.constructor.name;
    };
    Object.defineProperty(SIMD64.prototype, "oddHalf", {
        get: function () { return this.oddHalf$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).SIMD64.hashValue*/
    SIMD64.prototype.hashValue$get = function () {
        throw 'unsupported variable Swift.(file).SIMD64.hashValue in ' + this.constructor.name;
    };
    Object.defineProperty(SIMD64.prototype, "hashValue", {
        get: function () { return this.hashValue$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).SIMD64.init(truncatingIfNeeded:SIMD64<Other>)*/
    /*Swift.(file).SIMD64.init(truncatingIfNeeded:SIMD64<Other>)*/
    SIMD64.prototype.initTruncatingIfNeededSIMD64 = function ($info, other) {
        throw 'unsupported method Swift.(file).SIMD64.init(truncatingIfNeeded:SIMD64<Other>) in ' + this.constructor.name;
    };
    /*Swift.(file).SIMD64.init(clamping:SIMD64<Other>)*/
    /*Swift.(file).SIMD64.init(clamping:SIMD64<Other>)*/
    SIMD64.prototype.initClampingSIMD64 = function ($info, other) {
        throw 'unsupported method Swift.(file).SIMD64.init(clamping:SIMD64<Other>) in ' + this.constructor.name;
    };
    /*Swift.(file).SIMD64.init(_:SIMD64<Other>,rounding:FloatingPointRoundingRule)*/
    /*Swift.(file).SIMD64.init(_:SIMD64<Other>,rounding:FloatingPointRoundingRule)*/
    SIMD64.prototype.initSIMD64RoundingFloatingPointRoundingRule = function ($info, other, rule) {
        throw 'unsupported method Swift.(file).SIMD64.init(_:SIMD64<Other>,rounding:FloatingPointRoundingRule) in ' + this.constructor.name;
    };
    /*Swift.(file).SIMD64.debugDescription*/
    SIMD64.prototype.debugDescription$get = function () {
        throw 'unsupported variable Swift.(file).SIMD64.debugDescription in ' + this.constructor.name;
    };
    Object.defineProperty(SIMD64.prototype, "debugDescription", {
        get: function () { return this.debugDescription$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).SIMD64.init(_:SIMD64<Other>)*/
    /*Swift.(file).SIMD64.init(_:SIMD64<Other>)*/
    SIMD64.prototype.initSIMD64 = function ($info, other) {
        throw 'unsupported method Swift.(file).SIMD64.init(_:SIMD64<Other>) in ' + this.constructor.name;
    };
    /*Swift.(file).SIMD64.init(_:SIMD64<Other>)*/
    /*Swift.(file).SIMD64.init(_:SIMD64<Other>)*/
    SIMD64.prototype.initSIMD64 = function ($info, other) {
        throw 'unsupported method Swift.(file).SIMD64.init(_:SIMD64<Other>) in ' + this.constructor.name;
    };
    SIMD64.prototype.init$vars = function () {
    };
    SIMD64.$struct = true;
    SIMD64.$infoAddress = '';
    return SIMD64;
}());
if (typeof SIMD$implementation != 'undefined')
    _mixin(SIMD64, SIMD$implementation, false);
if (typeof CustomDebugStringConvertible$implementation != 'undefined')
    _mixin(SIMD64, CustomDebugStringConvertible$implementation, false);
var SIMD3 = /** @class */ (function () {
    function SIMD3() {
    }
    /*Swift.(file).SIMD3.scalarCount*/
    SIMD3.prototype.scalarCount$get = function () {
        throw 'unsupported variable Swift.(file).SIMD3.scalarCount in ' + this.constructor.name;
    };
    Object.defineProperty(SIMD3.prototype, "scalarCount", {
        get: function () { return this.scalarCount$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).SIMD3.init()*/
    /*Swift.(file).SIMDStorage.init()*/
    SIMD3.prototype.init = function ($info) {
        throw 'unsupported method Swift.(file).SIMD3.init() in ' + this.constructor.name;
    };
    /*Swift.(file).SIMD3.subscript(_:Int)*/
    /*Swift.(file).SIMDStorage.subscript(_:Int)*/
    SIMD3.prototype.subscript$get = function ($info, index) {
        throw 'unsupported method Swift.(file).SIMD3.subscript(_:Int) in ' + this.constructor.name;
    }; /*Swift.(file).SIMD3.subscript(_:Int)*/
    /*Swift.(file).SIMDStorage.subscript(_:Int)*/
    SIMD3.prototype.subscript$set = function ($info, newValue, index) {
        throw 'unsupported method Swift.(file).SIMD3.subscript(_:Int) in ' + this.constructor.name;
    };
    /*Swift.(file).SIMD3.init(_:Scalar,_:Scalar,_:Scalar)*/
    /*Swift.(file).SIMD3.init(_:Scalar,_:Scalar,_:Scalar)*/
    SIMD3.prototype.init = function ($info, v0, v1, v2) {
        throw 'unsupported method Swift.(file).SIMD3.init(_:Scalar,_:Scalar,_:Scalar) in ' + this.constructor.name;
    };
    /*Swift.(file).SIMD3.init(x:Scalar,y:Scalar,z:Scalar)*/
    /*Swift.(file).SIMD3.init(x:Scalar,y:Scalar,z:Scalar)*/
    SIMD3.prototype.initXYZ = function ($info, x, y, z) {
        throw 'unsupported method Swift.(file).SIMD3.init(x:Scalar,y:Scalar,z:Scalar) in ' + this.constructor.name;
    };
    /*Swift.(file).SIMD3.x*/
    SIMD3.prototype.x$get = function () {
        throw 'unsupported variable Swift.(file).SIMD3.x in ' + this.constructor.name;
    };
    Object.defineProperty(SIMD3.prototype, "x", {
        get: function () { return this.x$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).SIMD3.y*/
    SIMD3.prototype.y$get = function () {
        throw 'unsupported variable Swift.(file).SIMD3.y in ' + this.constructor.name;
    };
    Object.defineProperty(SIMD3.prototype, "y", {
        get: function () { return this.y$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).SIMD3.z*/
    SIMD3.prototype.z$get = function () {
        throw 'unsupported variable Swift.(file).SIMD3.z in ' + this.constructor.name;
    };
    Object.defineProperty(SIMD3.prototype, "z", {
        get: function () { return this.z$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).SIMD3.hashValue*/
    SIMD3.prototype.hashValue$get = function () {
        throw 'unsupported variable Swift.(file).SIMD3.hashValue in ' + this.constructor.name;
    };
    Object.defineProperty(SIMD3.prototype, "hashValue", {
        get: function () { return this.hashValue$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).SIMD3.init(truncatingIfNeeded:SIMD3<Other>)*/
    /*Swift.(file).SIMD3.init(truncatingIfNeeded:SIMD3<Other>)*/
    SIMD3.prototype.initTruncatingIfNeededSIMD3 = function ($info, other) {
        throw 'unsupported method Swift.(file).SIMD3.init(truncatingIfNeeded:SIMD3<Other>) in ' + this.constructor.name;
    };
    /*Swift.(file).SIMD3.init(clamping:SIMD3<Other>)*/
    /*Swift.(file).SIMD3.init(clamping:SIMD3<Other>)*/
    SIMD3.prototype.initClampingSIMD3 = function ($info, other) {
        throw 'unsupported method Swift.(file).SIMD3.init(clamping:SIMD3<Other>) in ' + this.constructor.name;
    };
    /*Swift.(file).SIMD3.init(_:SIMD3<Other>,rounding:FloatingPointRoundingRule)*/
    /*Swift.(file).SIMD3.init(_:SIMD3<Other>,rounding:FloatingPointRoundingRule)*/
    SIMD3.prototype.initSIMD3RoundingFloatingPointRoundingRule = function ($info, other, rule) {
        throw 'unsupported method Swift.(file).SIMD3.init(_:SIMD3<Other>,rounding:FloatingPointRoundingRule) in ' + this.constructor.name;
    };
    /*Swift.(file).SIMD3.debugDescription*/
    SIMD3.prototype.debugDescription$get = function () {
        throw 'unsupported variable Swift.(file).SIMD3.debugDescription in ' + this.constructor.name;
    };
    Object.defineProperty(SIMD3.prototype, "debugDescription", {
        get: function () { return this.debugDescription$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).SIMD3.init(_:SIMD3<Other>)*/
    /*Swift.(file).SIMD3.init(_:SIMD3<Other>)*/
    SIMD3.prototype.initSIMD3 = function ($info, other) {
        throw 'unsupported method Swift.(file).SIMD3.init(_:SIMD3<Other>) in ' + this.constructor.name;
    };
    /*Swift.(file).SIMD3.init(_:SIMD3<Other>)*/
    /*Swift.(file).SIMD3.init(_:SIMD3<Other>)*/
    SIMD3.prototype.initSIMD3 = function ($info, other) {
        throw 'unsupported method Swift.(file).SIMD3.init(_:SIMD3<Other>) in ' + this.constructor.name;
    };
    SIMD3.prototype.init$vars = function () {
    };
    SIMD3.$struct = true;
    SIMD3.$infoAddress = '';
    return SIMD3;
}());
if (typeof SIMD$implementation != 'undefined')
    _mixin(SIMD3, SIMD$implementation, false);
if (typeof CustomDebugStringConvertible$implementation != 'undefined')
    _mixin(SIMD3, CustomDebugStringConvertible$implementation, false);
var UnfoldSequence = /** @class */ (function () {
    function UnfoldSequence() {
    }
    /*Swift.(file).UnfoldSequence.next()*/
    /*Swift.(file).IteratorProtocol.next()*/
    UnfoldSequence.prototype.next = function ($info) {
        throw 'unsupported method Swift.(file).UnfoldSequence.next() in ' + this.constructor.name;
    };
    /*Swift.(file).UnfoldSequence.init(_state:State,_next:(inout State) -> Element?)*/
    /*Swift.(file).UnfoldSequence.init(_state:State,_next:(inout State) -> Element?)*/
    UnfoldSequence.prototype.init_state_nextfunction_type = function ($info, _state, _next) {
        throw 'unsupported method Swift.(file).UnfoldSequence.init(_state:State,_next:(inout State) -> Element?) in ' + this.constructor.name;
    };
    UnfoldSequence.prototype.init$vars = function () {
    };
    UnfoldSequence.$struct = true;
    UnfoldSequence.$infoAddress = '';
    return UnfoldSequence;
}());
if (typeof Sequence$implementation != 'undefined')
    _mixin(UnfoldSequence, Sequence$implementation, false);
if (typeof IteratorProtocol$implementation != 'undefined')
    _mixin(UnfoldSequence, IteratorProtocol$implementation, false);
var CVarArg$implementation = /** @class */ (function () {
    function CVarArg$implementation() {
    }
    return CVarArg$implementation;
}());
var _CVarArgAligned$implementation = /** @class */ (function () {
    function _CVarArgAligned$implementation() {
    }
    return _CVarArgAligned$implementation;
}());
if (typeof CVarArg$implementation != 'undefined')
    _mixin(_CVarArgAligned$implementation, CVarArg$implementation, false);
var __VaListBuilder = /** @class */ (function () {
    function __VaListBuilder() {
    }
    /*Swift.(file).__VaListBuilder.gpRegistersUsed*/
    __VaListBuilder.prototype.gpRegistersUsed$get = function () {
        throw 'unsupported variable Swift.(file).__VaListBuilder.gpRegistersUsed in ' + this.constructor.name;
    };
    Object.defineProperty(__VaListBuilder.prototype, "gpRegistersUsed", {
        get: function () { return this.gpRegistersUsed$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).__VaListBuilder.fpRegistersUsed*/
    __VaListBuilder.prototype.fpRegistersUsed$get = function () {
        throw 'unsupported variable Swift.(file).__VaListBuilder.fpRegistersUsed in ' + this.constructor.name;
    };
    Object.defineProperty(__VaListBuilder.prototype, "fpRegistersUsed", {
        get: function () { return this.fpRegistersUsed$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).__VaListBuilder.header*/
    __VaListBuilder.prototype.header$get = function () {
        throw 'unsupported variable Swift.(file).__VaListBuilder.header in ' + this.constructor.name;
    };
    Object.defineProperty(__VaListBuilder.prototype, "header", {
        get: function () { return this.header$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).__VaListBuilder.storage*/
    __VaListBuilder.prototype.storage$get = function () {
        throw 'unsupported variable Swift.(file).__VaListBuilder.storage in ' + this.constructor.name;
    };
    Object.defineProperty(__VaListBuilder.prototype, "storage", {
        get: function () { return this.storage$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).__VaListBuilder.init()*/
    /*Swift.(file).__VaListBuilder.init()*/
    __VaListBuilder.prototype.init = function ($info) {
        throw 'unsupported method Swift.(file).__VaListBuilder.init() in ' + this.constructor.name;
    };
    /*Swift.(file).__VaListBuilder.append(_:CVarArg)*/
    /*Swift.(file).__VaListBuilder.append(_:CVarArg)*/
    __VaListBuilder.prototype.append = function ($info, arg) {
        throw 'unsupported method Swift.(file).__VaListBuilder.append(_:CVarArg) in ' + this.constructor.name;
    };
    /*Swift.(file).__VaListBuilder.va_list()*/
    /*Swift.(file).__VaListBuilder.va_list()*/
    __VaListBuilder.prototype.va_list = function ($info) {
        throw 'unsupported method Swift.(file).__VaListBuilder.va_list() in ' + this.constructor.name;
    };
    __VaListBuilder.prototype.init$vars = function () {
    };
    var _p;
    __VaListBuilder.$infoAddress = '';
    __VaListBuilder.Header = (_p = /** @class */ (function () {
            function class_14() {
            }
            /*Swift.(file).__VaListBuilder.Header.init()*/
            /*Swift.(file).__VaListBuilder.Header.init()*/
            class_14.prototype.init = function ($info) {
                throw 'unsupported method Swift.(file).__VaListBuilder.Header.init() in ' + this.constructor.name;
            };
            /*Swift.(file).__VaListBuilder.Header.gp_offset*/
            class_14.prototype.gp_offset$get = function () {
                throw 'unsupported variable Swift.(file).__VaListBuilder.Header.gp_offset in ' + this.constructor.name;
            };
            Object.defineProperty(class_14.prototype, "gp_offset", {
                get: function () { return this.gp_offset$get(); },
                enumerable: true,
                configurable: true
            });
            ;
            /*Swift.(file).__VaListBuilder.Header.fp_offset*/
            class_14.prototype.fp_offset$get = function () {
                throw 'unsupported variable Swift.(file).__VaListBuilder.Header.fp_offset in ' + this.constructor.name;
            };
            Object.defineProperty(class_14.prototype, "fp_offset", {
                get: function () { return this.fp_offset$get(); },
                enumerable: true,
                configurable: true
            });
            ;
            /*Swift.(file).__VaListBuilder.Header.overflow_arg_area*/
            class_14.prototype.overflow_arg_area$get = function () {
                throw 'unsupported variable Swift.(file).__VaListBuilder.Header.overflow_arg_area in ' + this.constructor.name;
            };
            Object.defineProperty(class_14.prototype, "overflow_arg_area", {
                get: function () { return this.overflow_arg_area$get(); },
                enumerable: true,
                configurable: true
            });
            ;
            /*Swift.(file).__VaListBuilder.Header.reg_save_area*/
            class_14.prototype.reg_save_area$get = function () {
                throw 'unsupported variable Swift.(file).__VaListBuilder.Header.reg_save_area in ' + this.constructor.name;
            };
            Object.defineProperty(class_14.prototype, "reg_save_area", {
                get: function () { return this.reg_save_area$get(); },
                enumerable: true,
                configurable: true
            });
            ;
            class_14.prototype.init$vars = function () {
            };
            return class_14;
        }()),
        _p.$struct = true,
        _p.$infoAddress = '',
        _p);
    return __VaListBuilder;
}());
var Zip2Sequence = /** @class */ (function () {
    function Zip2Sequence() {
    }
    /*Swift.(file).Zip2Sequence.init(_:Sequence1,_:Sequence2)*/
    /*Swift.(file).Zip2Sequence.init(_:Sequence1,_:Sequence2)*/
    Zip2Sequence.prototype.init = function ($info, sequence1, sequence2) {
        throw 'unsupported method Swift.(file).Zip2Sequence.init(_:Sequence1,_:Sequence2) in ' + this.constructor.name;
    };
    /*Swift.(file).Zip2Sequence.makeIterator()*/
    /*Swift.(file).Sequence.makeIterator()*/
    Zip2Sequence.prototype.makeIterator = function ($info) {
        var _this = this;
        return _this;
    };
    Zip2Sequence.prototype.init$vars = function () {
    };
    var _q;
    Zip2Sequence.$struct = true;
    Zip2Sequence.$infoAddress = '';
    Zip2Sequence.Iterator = (_q = /** @class */ (function () {
            function class_15() {
            }
            /*Swift.(file).Zip2Sequence.Iterator.init(_:Sequence1.Iterator,_:Sequence2.Iterator)*/
            /*Swift.(file).Zip2Sequence.Iterator.init(_:Sequence1.Iterator,_:Sequence2.Iterator)*/
            class_15.prototype.init = function ($info, iterator1, iterator2) {
                throw 'unsupported method Swift.(file).Zip2Sequence.Iterator.init(_:Sequence1.Iterator,_:Sequence2.Iterator) in ' + this.constructor.name;
            };
            /*Swift.(file).Zip2Sequence.Iterator.next()*/
            /*Swift.(file).IteratorProtocol.next()*/
            class_15.prototype.next = function ($info) {
                throw 'unsupported method Swift.(file).Zip2Sequence.Iterator.next() in ' + this.constructor.name;
            };
            class_15.prototype.init$vars = function () {
            };
            return class_15;
        }()),
        _q.$struct = true,
        _q.$infoAddress = '',
        _q);
    return Zip2Sequence;
}());
if (typeof IteratorProtocol$implementation != 'undefined')
    _mixin(Zip2Sequence.Iterator, IteratorProtocol$implementation, false);
if (typeof Sequence$implementation != 'undefined')
    _mixin(Zip2Sequence, Sequence$implementation, false);
var EnumeratedSequence = /** @class */ (function () {
    function EnumeratedSequence() {
    }
    /*Swift.(file).EnumeratedSequence.init(_base:Base)*/
    /*Swift.(file).EnumeratedSequence.init(_base:Base)*/
    EnumeratedSequence.prototype.init_base = function ($info, _base) {
        var _this = this;
        _this._base = _base;
        return;
    };
    /*Swift.(file).EnumeratedSequence.makeIterator()*/
    /*Swift.(file).Sequence.makeIterator()*/
    EnumeratedSequence.prototype.makeIterator = function ($info) {
        var _this = this;
        return _create(EnumeratedSequence.Iterator, 'init_base', {}, _this._base.makeIterator({}));
    };
    EnumeratedSequence.prototype.init$vars = function () {
    };
    var _r;
    EnumeratedSequence.$struct = true;
    EnumeratedSequence.$infoAddress = '';
    EnumeratedSequence.Iterator = (_r = /** @class */ (function () {
            function class_16() {
            }
            /*Swift.(file).EnumeratedSequence.Iterator.init(_base:Base.Iterator)*/
            /*Swift.(file).EnumeratedSequence.Iterator.init(_base:Base.Iterator)*/
            class_16.prototype.init_base = function ($info, _base) {
                var _this = this;
                _this._base = _base;
                _this._count = 0;
                return;
            };
            /*Swift.(file).EnumeratedSequence.Iterator.next()*/
            /*Swift.(file).IteratorProtocol.next()*/
            class_16.prototype.next = function ($info) {
                var _this = this;
                var $ifLet0, b_1;
                if (!((($ifLet0 = _this._base.next({ $setThis: function ($val) { return _this._base = $val; } })) || true) && $ifLet0 != null && ((b_1 = $ifLet0) || true))) {
                    return null;
                }
                ;
                var result = { 0: _this._count, 1: b_1 };
                Int.infix_43_61({}, { get: function () { return _this._count; }, set: function ($val) { return _this._count = $val; } }, 1);
                return result;
            };
            class_16.prototype.init$vars = function () {
            };
            return class_16;
        }()),
        _r.$struct = true,
        _r.$infoAddress = '',
        _r);
    return EnumeratedSequence;
}());
if (typeof IteratorProtocol$implementation != 'undefined')
    _mixin(EnumeratedSequence.Iterator, IteratorProtocol$implementation, false);
if (typeof Sequence$implementation != 'undefined')
    _mixin(EnumeratedSequence.Iterator, Sequence$implementation, false);
if (typeof Sequence$implementation != 'undefined')
    _mixin(EnumeratedSequence, Sequence$implementation, false);
var _ArrayAnyHashableProtocol$implementation = /** @class */ (function () {
    function _ArrayAnyHashableProtocol$implementation() {
    }
    return _ArrayAnyHashableProtocol$implementation;
}());
if (typeof _AnyHashableBox$implementation != 'undefined')
    _mixin(_ArrayAnyHashableProtocol$implementation, _AnyHashableBox$implementation, false);
var _ArrayAnyHashableBox = /** @class */ (function () {
    function _ArrayAnyHashableBox() {
    }
    /*Swift.(file)._ArrayAnyHashableBox.init(_:[Element])*/
    /*Swift.(file)._ArrayAnyHashableBox.init(_:[Element])*/
    _ArrayAnyHashableBox.prototype.initArray = function ($info, value) {
        throw 'unsupported method Swift.(file)._ArrayAnyHashableBox.init(_:[Element]) in ' + this.constructor.name;
    };
    /*Swift.(file)._ArrayAnyHashableBox.count*/
    _ArrayAnyHashableBox.prototype.count$get = function () {
        throw 'unsupported variable Swift.(file)._ArrayAnyHashableBox.count in ' + this.constructor.name;
    };
    Object.defineProperty(_ArrayAnyHashableBox.prototype, "count", {
        get: function () { return this.count$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file)._ArrayAnyHashableBox.subscript(_:Int)*/
    /*Swift.(file)._ArrayAnyHashableProtocol.subscript(_:Int)*/
    _ArrayAnyHashableBox.prototype.subscript$get = function ($info, index) {
        throw 'unsupported method Swift.(file)._ArrayAnyHashableBox.subscript(_:Int) in ' + this.constructor.name;
    };
    _ArrayAnyHashableBox.prototype.init$vars = function () {
    };
    _ArrayAnyHashableBox.$struct = true;
    _ArrayAnyHashableBox.$infoAddress = '';
    return _ArrayAnyHashableBox;
}());
if (typeof _ArrayAnyHashableProtocol$implementation != 'undefined')
    _mixin(_ArrayAnyHashableBox, _ArrayAnyHashableProtocol$implementation, false);
var _UnsafeBitset = /** @class */ (function () {
    function _UnsafeBitset() {
    }
    /*Swift.(file)._UnsafeBitset.words*/
    _UnsafeBitset.prototype.words$get = function () {
        throw 'unsupported variable Swift.(file)._UnsafeBitset.words in ' + this.constructor.name;
    };
    Object.defineProperty(_UnsafeBitset.prototype, "words", {
        get: function () { return this.words$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file)._UnsafeBitset.wordCount*/
    _UnsafeBitset.prototype.wordCount$get = function () {
        throw 'unsupported variable Swift.(file)._UnsafeBitset.wordCount in ' + this.constructor.name;
    };
    Object.defineProperty(_UnsafeBitset.prototype, "wordCount", {
        get: function () { return this.wordCount$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file)._UnsafeBitset.init(words:UnsafeMutablePointer<_UnsafeBitset.Word>,wordCount:Int)*/
    /*Swift.(file)._UnsafeBitset.init(words:UnsafeMutablePointer<_UnsafeBitset.Word>,wordCount:Int)*/
    _UnsafeBitset.prototype.initWordsUnsafeMutablePointerWordCountInt = function ($info, words, wordCount) {
        throw 'unsupported method Swift.(file)._UnsafeBitset.init(words:UnsafeMutablePointer<_UnsafeBitset.Word>,wordCount:Int) in ' + this.constructor.name;
    };
    /*Swift.(file)._UnsafeBitset.word(for:Int)*/
    /*Swift.(file)._UnsafeBitset.word(for:Int)*/
    _UnsafeBitset.wordFor = function ($info, _element) {
        var _this = this;
        var _element = _create(UInt, 'initBitPatternInt', {}, _element);
        var capacity = _create(UInt, 'initBitPatternInt', {}, _UnsafeBitset.Word.capacity);
        return _create(Int, 'initBitPatternUInt', {}, UInt.infix_47({}, _element, capacity));
    };
    /*Swift.(file)._UnsafeBitset.bit(for:Int)*/
    /*Swift.(file)._UnsafeBitset.bit(for:Int)*/
    _UnsafeBitset.bitFor = function ($info, _element) {
        var _this = this;
        var _element = _create(UInt, 'initBitPatternInt', {}, _element);
        var capacity = _create(UInt, 'initBitPatternInt', {}, _UnsafeBitset.Word.capacity);
        return _create(Int, 'initBitPatternUInt', {}, UInt.infix_37({}, _element, capacity));
    };
    /*Swift.(file)._UnsafeBitset.split(_:Int)*/
    /*Swift.(file)._UnsafeBitset.split(_:Int)*/
    _UnsafeBitset.split = function ($info, _element) {
        var _this = this;
        return { 0: _this.wordFor({}, _element), 1: _this.bitFor({}, _element) };
    };
    /*Swift.(file)._UnsafeBitset.join(word:Int,bit:Int)*/
    /*Swift.(file)._UnsafeBitset.join(word:Int,bit:Int)*/
    _UnsafeBitset.joinWordBit = function ($info, word, bit) {
        var _this = this;
        return Int.infix_38_43({}, Int.infix_38_42({}, word, _UnsafeBitset.Word.capacity), bit);
    };
    /*Swift.(file)._UnsafeBitset.wordCount(forCapacity:Int)*/
    /*Swift.(file)._UnsafeBitset.wordCount(forCapacity:Int)*/
    _UnsafeBitset.wordCountForCapacity = function ($info, capacity) {
        var _this = this;
        return _this.wordFor({}, Int.infix_38_45({}, Int.infix_38_43({}, capacity, _UnsafeBitset.Word.capacity), 1));
    };
    /*Swift.(file)._UnsafeBitset.capacity*/
    _UnsafeBitset.prototype.capacity$get = function () {
        var _this = this;
        return Int.infix_38_42({}, _this.wordCount, _UnsafeBitset.Word.capacity);
    };
    Object.defineProperty(_UnsafeBitset.prototype, "capacity", {
        get: function () { return this.capacity$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file)._UnsafeBitset.isValid(_:Int)*/
    /*Swift.(file)._UnsafeBitset.isValid(_:Int)*/
    _UnsafeBitset.prototype.isValid = function ($info, _element) {
        var _this = this;
        return Bool.infix_38_38({}, Int.infix_62_61({}, _element, 0), function () { return Int.infix_60_61({}, _element, _this.capacity); });
    };
    /*Swift.(file)._UnsafeBitset.uncheckedContains(_:Int)*/
    /*Swift.(file)._UnsafeBitset.uncheckedContains(_:Int)*/
    _UnsafeBitset.prototype.uncheckedContains = function ($info, _element) {
        var _this = this;
        var $tuple = _UnsafeBitset.split({}, _element), word = $tuple && $tuple[0], bit = $tuple && $tuple[1];
        return _this.words.subscript$get({}, word).uncheckedContains({}, bit);
    };
    /*Swift.(file)._UnsafeBitset.uncheckedInsert(_:Int)*/
    /*Swift.(file)._UnsafeBitset.uncheckedInsert(_:Int)*/
    _UnsafeBitset.prototype.uncheckedInsert = function ($info, _element) {
        var _this = this;
        var $tuple = _UnsafeBitset.split({}, _element), word = $tuple && $tuple[0], bit = $tuple && $tuple[1];
        return _this.words.subscript$get({}, word).uncheckedInsert({ $setThis: function ($val) { return _this.words.subscript$set({ $setThis: function ($val) { return _this.words = _cloneStruct($val); } }, $val, word); } }, bit);
    };
    /*Swift.(file)._UnsafeBitset.uncheckedRemove(_:Int)*/
    /*Swift.(file)._UnsafeBitset.uncheckedRemove(_:Int)*/
    _UnsafeBitset.prototype.uncheckedRemove = function ($info, _element) {
        var _this = this;
        var $tuple = _UnsafeBitset.split({}, _element), word = $tuple && $tuple[0], bit = $tuple && $tuple[1];
        return _this.words.subscript$get({}, word).uncheckedRemove({ $setThis: function ($val) { return _this.words.subscript$set({ $setThis: function ($val) { return _this.words = _cloneStruct($val); } }, $val, word); } }, bit);
    };
    /*Swift.(file)._UnsafeBitset.clear()*/
    /*Swift.(file)._UnsafeBitset.clear()*/
    _UnsafeBitset.prototype.clear = function ($info) {
        var _this = this;
        _this.words.assignRepeatingCount({}, _UnsafeBitset.Word.empty, _this.wordCount);
    };
    /*Swift.(file)._UnsafeBitset.count*/
    _UnsafeBitset.prototype.count$get = function () {
        var _this = this;
        var count = 0;
        {
            var $w$generator_1 = _cloneStruct(Int.infix_46_46_60({}, 0, _this.wordCount).makeIterator({}));
            while (true) {
                var $ifLet0, w_1;
                if (!((($ifLet0 = $w$generator_1.next({ $setThis: function ($val) { return $w$generator_1 = $val; } })) || true) && $ifLet0 != null && ((w_1 = $ifLet0) || true)))
                    break;
                Int.infix_43_61({}, { get: function () { return count; }, set: function ($val) { return count = $val; } }, _this.words.subscript$get({}, w_1).count);
            }
        }
        ;
        return count;
    };
    Object.defineProperty(_UnsafeBitset.prototype, "count", {
        get: function () { return this.count$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file)._UnsafeBitset.underestimatedCount*/
    _UnsafeBitset.prototype.underestimatedCount$get = function () {
        var _this = this;
        return _this.count;
    };
    Object.defineProperty(_UnsafeBitset.prototype, "underestimatedCount", {
        get: function () { return this.underestimatedCount$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file)._UnsafeBitset.makeIterator()*/
    /*Swift.(file).Sequence.makeIterator()*/
    _UnsafeBitset.prototype.makeIterator = function ($info) {
        var _this = this;
        return _create(_UnsafeBitset.Iterator, 'init_UnsafeBitset', {}, _this);
    };
    _UnsafeBitset.prototype.init$vars = function () {
    };
    var _s, _t;
    _UnsafeBitset.$struct = true;
    _UnsafeBitset.$infoAddress = '';
    _UnsafeBitset.Iterator = (_s = /** @class */ (function () {
            function class_17() {
            }
            /*Swift.(file)._UnsafeBitset.Iterator.bitset*/
            class_17.prototype.bitset$get = function () {
                throw 'unsupported variable Swift.(file)._UnsafeBitset.Iterator.bitset in ' + this.constructor.name;
            };
            Object.defineProperty(class_17.prototype, "bitset", {
                get: function () { return this.bitset$get(); },
                enumerable: true,
                configurable: true
            });
            ;
            /*Swift.(file)._UnsafeBitset.Iterator.index*/
            class_17.prototype.index$get = function () {
                throw 'unsupported variable Swift.(file)._UnsafeBitset.Iterator.index in ' + this.constructor.name;
            };
            Object.defineProperty(class_17.prototype, "index", {
                get: function () { return this.index$get(); },
                enumerable: true,
                configurable: true
            });
            ;
            /*Swift.(file)._UnsafeBitset.Iterator.word*/
            class_17.prototype.word$get = function () {
                throw 'unsupported variable Swift.(file)._UnsafeBitset.Iterator.word in ' + this.constructor.name;
            };
            Object.defineProperty(class_17.prototype, "word", {
                get: function () { return this.word$get(); },
                enumerable: true,
                configurable: true
            });
            ;
            /*Swift.(file)._UnsafeBitset.Iterator.init(_:_UnsafeBitset)*/
            /*Swift.(file)._UnsafeBitset.Iterator.init(_:_UnsafeBitset)*/
            class_17.prototype.init_UnsafeBitset = function ($info, bitset) {
                throw 'unsupported method Swift.(file)._UnsafeBitset.Iterator.init(_:_UnsafeBitset) in ' + this.constructor.name;
            };
            /*Swift.(file)._UnsafeBitset.Iterator.next()*/
            /*Swift.(file).IteratorProtocol.next()*/
            class_17.prototype.next = function ($info) {
                throw 'unsupported method Swift.(file)._UnsafeBitset.Iterator.next() in ' + this.constructor.name;
            };
            class_17.prototype.init$vars = function () {
            };
            return class_17;
        }()),
        _s.$struct = true,
        _s.$infoAddress = '',
        _s);
    _UnsafeBitset.Word = (_t = /** @class */ (function () {
            function class_18() {
            }
            /*Swift.(file)._UnsafeBitset.Word.value*/
            class_18.prototype.value$get = function () {
                throw 'unsupported variable Swift.(file)._UnsafeBitset.Word.value in ' + this.constructor.name;
            };
            Object.defineProperty(class_18.prototype, "value", {
                get: function () { return this.value$get(); },
                enumerable: true,
                configurable: true
            });
            ;
            /*Swift.(file)._UnsafeBitset.Word.init(_:UInt)*/
            /*Swift.(file)._UnsafeBitset.Word.init(_:UInt)*/
            class_18.prototype.initUInt = function ($info, value) {
                throw 'unsupported method Swift.(file)._UnsafeBitset.Word.init(_:UInt) in ' + this.constructor.name;
            };
            /*Swift.(file)._UnsafeBitset.Word.capacity*/
            class_18.capacity$get = function () {
                var _this = this;
                return UInt.bitWidth;
            };
            Object.defineProperty(class_18, "capacity", {
                get: function () {
                    return this.capacity$get();
                },
                enumerable: true,
                configurable: true
            });
            ;
            /*Swift.(file)._UnsafeBitset.Word.uncheckedContains(_:Int)*/
            /*Swift.(file)._UnsafeBitset.Word.uncheckedContains(_:Int)*/
            class_18.prototype.uncheckedContains = function ($info, bit) {
                var _this = this;
                return UInt.infix_33_61({}, UInt.infix_38({}, _this.value, UInt.infix_38_60_60({}, 1, bit)), 0);
            };
            /*Swift.(file)._UnsafeBitset.Word.uncheckedInsert(_:Int)*/
            /*Swift.(file)._UnsafeBitset.Word.uncheckedInsert(_:Int)*/
            class_18.prototype.uncheckedInsert = function ($info, bit) {
                var _this = this;
                var mask = UInt.infix_38_60_60({}, 1, bit);
                var inserted = UInt.infix_61_61({}, UInt.infix_38({}, _this.value, mask), 0);
                UInt.infix_124_61({}, { get: function () { return _this.value; }, set: function ($val) { return _this.value = $val; } }, mask);
                return inserted;
            };
            /*Swift.(file)._UnsafeBitset.Word.uncheckedRemove(_:Int)*/
            /*Swift.(file)._UnsafeBitset.Word.uncheckedRemove(_:Int)*/
            class_18.prototype.uncheckedRemove = function ($info, bit) {
                var _this = this;
                var mask = UInt.infix_38_60_60({}, 1, bit);
                var removed = UInt.infix_33_61({}, UInt.infix_38({}, _this.value, mask), 0);
                UInt.infix_38_61({}, { get: function () { return _this.value; }, set: function ($val) { return _this.value = $val; } }, UInt.prefix_126({}, mask));
                return removed;
            };
            /*Swift.(file)._UnsafeBitset.Word.minimum*/
            class_18.prototype.minimum$get = function () {
                var _this = this;
                if (!((UInt.infix_33_61({}, _this.value, 0)))) {
                    return null;
                }
                ;
                return UInt.prototype.trailingZeroBitCount$get.call(_this.value);
            };
            Object.defineProperty(class_18.prototype, "minimum", {
                get: function () { return this.minimum$get(); },
                enumerable: true,
                configurable: true
            });
            ;
            /*Swift.(file)._UnsafeBitset.Word.maximum*/
            class_18.prototype.maximum$get = function () {
                var _this = this;
                if (!((UInt.infix_33_61({}, _this.value, 0)))) {
                    return null;
                }
                ;
                return Int.infix_38_45({}, Int.infix_38_45({}, _UnsafeBitset.Word.capacity, 1), UInt.prototype.leadingZeroBitCount$get.call(_this.value));
            };
            Object.defineProperty(class_18.prototype, "maximum", {
                get: function () { return this.maximum$get(); },
                enumerable: true,
                configurable: true
            });
            ;
            /*Swift.(file)._UnsafeBitset.Word.complement*/
            class_18.prototype.complement$get = function () {
                var _this = this;
                return _create(_UnsafeBitset.Word, 'initUInt', {}, UInt.prefix_126({}, _this.value));
            };
            Object.defineProperty(class_18.prototype, "complement", {
                get: function () { return this.complement$get(); },
                enumerable: true,
                configurable: true
            });
            ;
            /*Swift.(file)._UnsafeBitset.Word.subtracting(elementsBelow:Int)*/
            /*Swift.(file)._UnsafeBitset.Word.subtracting(elementsBelow:Int)*/
            class_18.prototype.subtractingElementsBelow = function ($info, bit) {
                var _this = this;
                var mask = UInt.infix_38_60_60({}, UInt.max, bit);
                return _create(_UnsafeBitset.Word, 'initUInt', {}, UInt.infix_38({}, _this.value, mask));
            };
            /*Swift.(file)._UnsafeBitset.Word.intersecting(elementsBelow:Int)*/
            /*Swift.(file)._UnsafeBitset.Word.intersecting(elementsBelow:Int)*/
            class_18.prototype.intersectingElementsBelow = function ($info, bit) {
                var _this = this;
                var mask = UInt.infix_38_45({}, UInt.infix_38_60_60({}, 1, bit), 1);
                return _create(_UnsafeBitset.Word, 'initUInt', {}, UInt.infix_38({}, _this.value, mask));
            };
            /*Swift.(file)._UnsafeBitset.Word.intersecting(elementsAbove:Int)*/
            /*Swift.(file)._UnsafeBitset.Word.intersecting(elementsAbove:Int)*/
            class_18.prototype.intersectingElementsAbove = function ($info, bit) {
                var _this = this;
                var mask = UInt.infix_38_60_60({}, UInt.infix_38_60_60({}, UInt.max, bit), 1);
                return _create(_UnsafeBitset.Word, 'initUInt', {}, UInt.infix_38({}, _this.value, mask));
            };
            /*Swift.(file)._UnsafeBitset.Word.empty*/
            class_18.empty$get = function () {
                var _this = this;
                return _create(_UnsafeBitset.Word, 'initUInt', {}, 0);
            };
            Object.defineProperty(class_18, "empty", {
                get: function () {
                    return this.empty$get();
                },
                enumerable: true,
                configurable: true
            });
            ;
            /*Swift.(file)._UnsafeBitset.Word.allBits*/
            class_18.allBits$get = function () {
                var _this = this;
                return _create(_UnsafeBitset.Word, 'initUInt', {}, UInt.max);
            };
            Object.defineProperty(class_18, "allBits", {
                get: function () {
                    return this.allBits$get();
                },
                enumerable: true,
                configurable: true
            });
            ;
            /*Swift.(file)._UnsafeBitset.Word.count*/
            class_18.prototype.count$get = function () {
                var _this = this;
                return UInt.prototype.nonzeroBitCount$get.call(_this.value);
            };
            Object.defineProperty(class_18.prototype, "count", {
                get: function () { return this.count$get(); },
                enumerable: true,
                configurable: true
            });
            ;
            /*Swift.(file)._UnsafeBitset.Word.underestimatedCount*/
            class_18.prototype.underestimatedCount$get = function () {
                var _this = this;
                return _this.count;
            };
            Object.defineProperty(class_18.prototype, "underestimatedCount", {
                get: function () { return this.underestimatedCount$get(); },
                enumerable: true,
                configurable: true
            });
            ;
            /*Swift.(file)._UnsafeBitset.Word.isEmpty*/
            class_18.prototype.isEmpty$get = function () {
                var _this = this;
                return UInt.infix_61_61({}, _this.value, 0);
            };
            Object.defineProperty(class_18.prototype, "isEmpty", {
                get: function () { return this.isEmpty$get(); },
                enumerable: true,
                configurable: true
            });
            ;
            /*Swift.(file)._UnsafeBitset.Word.next()*/
            /*Swift.(file).IteratorProtocol.next()*/
            class_18.prototype.next = function ($info) {
                var _this = this;
                if (!((UInt.infix_33_61({}, _this.value, 0)))) {
                    return null;
                }
                ;
                var bit = UInt.prototype.trailingZeroBitCount$get.call(_this.value);
                UInt.infix_38_61({}, { get: function () { return _this.value; }, set: function ($val) { return _this.value = $val; } }, UInt.infix_38_45({}, _this.value, 1));
                return bit;
            };
            class_18.prototype.init$vars = function () {
            };
            return class_18;
        }()),
        _t.$struct = true,
        _t.$infoAddress = '',
        _t);
    return _UnsafeBitset;
}());
if (typeof IteratorProtocol$implementation != 'undefined')
    _mixin(_UnsafeBitset.Iterator, IteratorProtocol$implementation, false);
if (typeof Sequence$implementation != 'undefined')
    _mixin(_UnsafeBitset.Word, Sequence$implementation, false);
if (typeof IteratorProtocol$implementation != 'undefined')
    _mixin(_UnsafeBitset.Word, IteratorProtocol$implementation, false);
if (typeof Sequence$implementation != 'undefined')
    _mixin(_UnsafeBitset, Sequence$implementation, false);
var MIO_Mixin_Bool = /** @class */ (function () {
    function MIO_Mixin_Bool() {
    }
    /*Swift.(file).Bool.init()*/
    /*Swift.(file).Bool.init()*/
    MIO_Mixin_Bool.prototype.init = function ($info) {
        throw 'unsupported method Swift.(file).Bool.init() in ' + this.constructor.name;
    };
    /*Swift.(file).Bool.init(_:Int1)*/
    /*Swift.(file).Bool.init(_:Int1)*/
    MIO_Mixin_Bool.prototype.initInt1 = function ($info, v) {
        throw 'unsupported method Swift.(file).Bool.init(_:Int1) in ' + this.constructor.name;
    };
    /*Swift.(file).Bool.init(_:Bool)*/
    /*Swift.(file).Bool.init(_:Bool)*/
    MIO_Mixin_Bool.prototype.initBool = function ($info, value) {
        var _this = this;
        return _cloneStruct(value);
        return;
    };
    /*Swift.(file).Bool.random(using:T)*/
    /*Swift.(file).Bool.random(using:T)*/
    MIO_Mixin_Bool.randomUsing = function ($info, generator$inout) {
        var _this = this;
        var generator = generator$inout.get();
        var $result = (function () {
            return UInt64.infix_61_61({}, UInt64.infix_38({}, UInt64.infix_62_62({}, generator.next({ $setThis: function ($val) { return generator = $val; } }), 17), 1), 0);
        })();
        generator$inout.set(generator);
        return $result;
    };
    /*Swift.(file).Bool.random()*/
    /*Swift.(file).Bool.random()*/
    MIO_Mixin_Bool.random = function ($info) {
        var _this = this;
        var g = _create(SystemRandomNumberGenerator, 'init', {});
        return Bool.randomUsing({}, { get: function () { return g; }, set: function ($val) { return g = $val; } });
    };
    /*Swift.(file).Bool.init(_builtinBooleanLiteral:Int1)*/
    /*Swift.(file)._ExpressibleByBuiltinBooleanLiteral.init(_builtinBooleanLiteral:Int1)*/
    MIO_Mixin_Bool.prototype.init_builtinBooleanLiteralInt1 = function ($info, value) {
        throw 'unsupported method Swift.(file).Bool.init(_builtinBooleanLiteral:Int1) in ' + this.constructor.name;
    };
    /*Swift.(file).Bool.init(booleanLiteral:Bool)*/
    /*Swift.(file).ExpressibleByBooleanLiteral.init(booleanLiteral:Self.BooleanLiteralType)*/
    MIO_Mixin_Bool.prototype.initBooleanLiteral = function ($info, value) {
        var _this = this;
        return _cloneStruct(value);
        return;
    };
    /*Swift.(file).Bool.description*/
    MIO_Mixin_Bool.prototype.description$get = function () {
        var _this = this;
        return (_this ? "true" : "false");
    };
    Object.defineProperty(MIO_Mixin_Bool.prototype, "description", {
        get: function () { return this.description$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).Bool.==infix(_:Bool,_:Bool)*/
    /*Swift.(file).Equatable.==infix(_:Self,_:Self)*/
    MIO_Mixin_Bool.infix_61_61 = function ($info, lhs, rhs) {
        return lhs == rhs;
    };
    /*Swift.(file).Bool.hash(into:Hasher)*/
    /*Swift.(file).Hashable.hash(into:Hasher)*/
    MIO_Mixin_Bool.prototype.hashInto = function ($info, hasher$inout) {
        var _this = this;
        var hasher = hasher$inout.get();
        var $result = (function () {
            hasher.combine({ $setThis: function ($val) { return hasher = $val; } }, (_this ? 1 : 0));
        })();
        hasher$inout.set(hasher);
        return $result;
    };
    /*Swift.(file).Bool.hashValue*/
    MIO_Mixin_Bool.prototype.hashValue$get = function () {
        throw 'unsupported variable Swift.(file).Bool.hashValue in ' + this.constructor.name;
    };
    Object.defineProperty(MIO_Mixin_Bool.prototype, "hashValue", {
        get: function () { return this.hashValue$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).Bool.init(_:String)*/
    /*Swift.(file).LosslessStringConvertible.init(_:String)*/
    MIO_Mixin_Bool.prototype.initString = function ($info, description) {
        var _this = this;
        if ((String.infix_61_61({}, description, "true"))) {
            return _cloneStruct(true);
        }
        else {
            if ((String.infix_61_61({}, description, "false"))) {
                return _cloneStruct(false);
            }
            else {
                return (this.$failed = true);
            }
        }
        ;
        return;
    };
    /*Swift.(file).Bool.!prefix(_:Bool)*/
    /*Swift.(file).Bool.!prefix(_:Bool)*/
    MIO_Mixin_Bool.prefix_33 = function ($info, a) {
        return !a;
    };
    /*Swift.(file).Bool.&&infix(_:Bool,_:() throws -> Bool)*/
    /*Swift.(file).Bool.&&infix(_:Bool,_:() throws -> Bool)*/
    MIO_Mixin_Bool.infix_38_38 = function ($info, lhs, rhs) {
        var _this = this;
        return (lhs ? rhs({}) : false);
    };
    /*Swift.(file).Bool.||infix(_:Bool,_:() throws -> Bool)*/
    /*Swift.(file).Bool.||infix(_:Bool,_:() throws -> Bool)*/
    MIO_Mixin_Bool.infix_124_124 = function ($info, lhs, rhs) {
        var _this = this;
        return (lhs ? true : rhs({}));
    };
    /*Swift.(file).Bool.toggle()*/
    /*Swift.(file).Bool.toggle()*/
    MIO_Mixin_Bool.prototype.toggle = function ($info) {
        var _this = this;
        $info.$setThis(_this = _cloneStruct(Bool.prefix_33({}, _this)));
    };
    /*Swift.(file).Bool.init(from:Decoder)*/
    /*Swift.(file).Decodable.init(from:Decoder)*/
    MIO_Mixin_Bool.prototype.initFromDecoder = function ($info, decoder) {
        throw 'unsupported method Swift.(file).Bool.init(from:Decoder) in ' + this.constructor.name;
    };
    /*Swift.(file).Bool.encode(to:Encoder)*/
    /*Swift.(file).Encodable.encode(to:Encoder)*/
    MIO_Mixin_Bool.prototype.encodeTo = function ($info, encoder) {
        throw 'unsupported method Swift.(file).Bool.encode(to:Encoder) in ' + this.constructor.name;
    };
    /*Swift.(file).Bool.customMirror*/
    MIO_Mixin_Bool.prototype.customMirror$get = function () {
        throw 'unsupported variable Swift.(file).Bool.customMirror in ' + this.constructor.name;
    };
    Object.defineProperty(MIO_Mixin_Bool.prototype, "customMirror", {
        get: function () { return this.customMirror$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).Bool.customPlaygroundQuickLook*/
    MIO_Mixin_Bool.prototype.customPlaygroundQuickLook$get = function () {
        throw 'unsupported variable Swift.(file).Bool.customPlaygroundQuickLook in ' + this.constructor.name;
    };
    Object.defineProperty(MIO_Mixin_Bool.prototype, "customPlaygroundQuickLook", {
        get: function () { return this.customPlaygroundQuickLook$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    MIO_Mixin_Bool.prototype.init$vars = function () {
    };
    MIO_Mixin_Bool.$struct = true;
    MIO_Mixin_Bool.$mixin = true;
    MIO_Mixin_Bool.$infoAddress = '';
    MIO_Mixin_Bool.initString$failable = true;
    return MIO_Mixin_Bool;
}());
if (typeof _ExpressibleByBuiltinBooleanLiteral$implementation != 'undefined')
    _mixin(MIO_Mixin_Bool, _ExpressibleByBuiltinBooleanLiteral$implementation, false);
if (typeof ExpressibleByBooleanLiteral$implementation != 'undefined')
    _mixin(MIO_Mixin_Bool, ExpressibleByBooleanLiteral$implementation, false);
if (typeof CustomStringConvertible$implementation != 'undefined')
    _mixin(MIO_Mixin_Bool, CustomStringConvertible$implementation, false);
if (typeof Equatable$implementation != 'undefined')
    _mixin(MIO_Mixin_Bool, Equatable$implementation, false);
if (typeof Hashable$implementation != 'undefined')
    _mixin(MIO_Mixin_Bool, Hashable$implementation, false);
if (typeof LosslessStringConvertible$implementation != 'undefined')
    _mixin(MIO_Mixin_Bool, LosslessStringConvertible$implementation, false);
if (typeof Codable$implementation != 'undefined')
    _mixin(MIO_Mixin_Bool, Codable$implementation, false);
if (typeof CustomReflectable$implementation != 'undefined')
    _mixin(MIO_Mixin_Bool, CustomReflectable$implementation, false);
if (typeof _CustomPlaygroundQuickLookable$implementation != 'undefined')
    _mixin(MIO_Mixin_Bool, _CustomPlaygroundQuickLookable$implementation, false);
if (typeof CVarArg$implementation != 'undefined')
    _mixin(MIO_Mixin_Bool, CVarArg$implementation, false);
_mixin(Boolean, MIO_Mixin_Bool, true);
var Bool = /** @class */ (function () {
    function Bool() {
    }
    return Bool;
}());
_mixin(Bool, MIO_Mixin_Bool, true);
var _BridgingBufferStorage = /** @class */ (function (_super) {
    __extends(_BridgingBufferStorage, _super);
    function _BridgingBufferStorage() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    /*Swift.(file)._BridgingBufferStorage.init(_doNotCallMe:())*/
    /*Swift.(file).ManagedBuffer.init(_doNotCallMe:())*/
    _BridgingBufferStorage.prototype.init_doNotCallMetuple_type = function ($info, _doNotCallMe) {
        throw 'unsupported method Swift.(file)._BridgingBufferStorage.init(_doNotCallMe:()) in ' + this.constructor.name;
    };
    _BridgingBufferStorage.prototype.init$vars = function () {
        if (_super.prototype.init$vars)
            _super.prototype.init$vars.call(this);
    };
    _BridgingBufferStorage.$infoAddress = '';
    return _BridgingBufferStorage;
}(ManagedBuffer));
var CodingKey$implementation = /** @class */ (function () {
    function CodingKey$implementation() {
    }
    /*Swift.(file).CodingKey.description*/
    CodingKey$implementation.prototype.description$get = function () {
        throw 'unsupported variable Swift.(file).CodingKey.description in ' + this.constructor.name;
    };
    Object.defineProperty(CodingKey$implementation.prototype, "description", {
        get: function () { return this.description$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).CodingKey.debugDescription*/
    CodingKey$implementation.prototype.debugDescription$get = function () {
        throw 'unsupported variable Swift.(file).CodingKey.debugDescription in ' + this.constructor.name;
    };
    Object.defineProperty(CodingKey$implementation.prototype, "debugDescription", {
        get: function () { return this.debugDescription$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    return CodingKey$implementation;
}());
if (typeof CustomStringConvertible$implementation != 'undefined')
    _mixin(CodingKey$implementation, CustomStringConvertible$implementation, false);
if (typeof CustomDebugStringConvertible$implementation != 'undefined')
    _mixin(CodingKey$implementation, CustomDebugStringConvertible$implementation, false);
var CodingUserInfoKey = /** @class */ (function () {
    function CodingUserInfoKey() {
    }
    /*Swift.(file).CodingUserInfoKey.rawValue*/
    CodingUserInfoKey.prototype.rawValue$get = function () {
        throw 'unsupported variable Swift.(file).CodingUserInfoKey.rawValue in ' + this.constructor.name;
    };
    Object.defineProperty(CodingUserInfoKey.prototype, "rawValue", {
        get: function () { return this.rawValue$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).CodingUserInfoKey.init(rawValue:String)*/
    /*Swift.(file).RawRepresentable.init(rawValue:Self.RawValue)*/
    CodingUserInfoKey.prototype.initRawValue = function ($info, rawValue) {
        throw 'unsupported method Swift.(file).CodingUserInfoKey.init(rawValue:String) in ' + this.constructor.name;
    };
    /*Swift.(file).CodingUserInfoKey.==infix(_:CodingUserInfoKey,_:CodingUserInfoKey)*/
    /*Swift.(file).Equatable.==infix(_:Self,_:Self)*/
    CodingUserInfoKey.infix_61_61 = function ($info, lhs, rhs) {
        return lhs == rhs;
    };
    /*Swift.(file).CodingUserInfoKey.hashValue*/
    CodingUserInfoKey.prototype.hashValue$get = function () {
        throw 'unsupported variable Swift.(file).CodingUserInfoKey.hashValue in ' + this.constructor.name;
    };
    Object.defineProperty(CodingUserInfoKey.prototype, "hashValue", {
        get: function () { return this.hashValue$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).CodingUserInfoKey.hash(into:Hasher)*/
    /*Swift.(file).Hashable.hash(into:Hasher)*/
    CodingUserInfoKey.prototype.hashInto = function ($info, hasher$inout) {
        throw 'unsupported method Swift.(file).CodingUserInfoKey.hash(into:Hasher) in ' + this.constructor.name;
    };
    CodingUserInfoKey.prototype.init$vars = function () {
    };
    CodingUserInfoKey.$struct = true;
    CodingUserInfoKey.$infoAddress = '';
    CodingUserInfoKey.initRawValue$failable = true;
    return CodingUserInfoKey;
}());
if (typeof RawRepresentable$implementation != 'undefined')
    _mixin(CodingUserInfoKey, RawRepresentable$implementation, false);
if (typeof Equatable$implementation != 'undefined')
    _mixin(CodingUserInfoKey, Equatable$implementation, false);
if (typeof Hashable$implementation != 'undefined')
    _mixin(CodingUserInfoKey, Hashable$implementation, false);
var EncodingError = /** @class */ (function () {
    function EncodingError() {
    }
    EncodingError.invalidValue = function () { return Object.assign(new EncodingError(), __assign({ rawValue: "invalidValue" }, Array.from(arguments).slice(1))); };
    EncodingError.prototype.init$vars = function () {
    };
    var _u;
    EncodingError.$infoAddress = '';
    EncodingError.Context = (_u = /** @class */ (function () {
            function class_19() {
            }
            /*Swift.(file).EncodingError.Context.codingPath*/
            class_19.prototype.codingPath$get = function () {
                throw 'unsupported variable Swift.(file).EncodingError.Context.codingPath in ' + this.constructor.name;
            };
            Object.defineProperty(class_19.prototype, "codingPath", {
                get: function () { return this.codingPath$get(); },
                enumerable: true,
                configurable: true
            });
            ;
            /*Swift.(file).EncodingError.Context.debugDescription*/
            class_19.prototype.debugDescription$get = function () {
                throw 'unsupported variable Swift.(file).EncodingError.Context.debugDescription in ' + this.constructor.name;
            };
            Object.defineProperty(class_19.prototype, "debugDescription", {
                get: function () { return this.debugDescription$get(); },
                enumerable: true,
                configurable: true
            });
            ;
            /*Swift.(file).EncodingError.Context.underlyingError*/
            class_19.prototype.underlyingError$get = function () {
                throw 'unsupported variable Swift.(file).EncodingError.Context.underlyingError in ' + this.constructor.name;
            };
            Object.defineProperty(class_19.prototype, "underlyingError", {
                get: function () { return this.underlyingError$get(); },
                enumerable: true,
                configurable: true
            });
            ;
            /*Swift.(file).EncodingError.Context.init(codingPath:[CodingKey],debugDescription:String,underlyingError:Error?)*/
            /*Swift.(file).EncodingError.Context.init(codingPath:[CodingKey],debugDescription:String,underlyingError:Error?)*/
            class_19.prototype.initCodingPathArrayDebugDescriptionStringUnderlyingErrorOptional = function ($info, codingPath, debugDescription, underlyingError) {
                throw 'unsupported method Swift.(file).EncodingError.Context.init(codingPath:[CodingKey],debugDescription:String,underlyingError:Error?) in ' + this.constructor.name;
            };
            class_19.prototype.init$vars = function () {
            };
            return class_19;
        }()),
        _u.$struct = true,
        _u.$infoAddress = '',
        _u);
    return EncodingError;
}());
if (typeof Error$implementation != 'undefined')
    _mixin(EncodingError, Error$implementation, false);
_mixin(EncodingError, _DefaultEnumImplementation, false);
var DecodingError = /** @class */ (function () {
    function DecodingError() {
    }
    DecodingError.typeMismatch = function () { return Object.assign(new DecodingError(), __assign({ rawValue: "typeMismatch" }, Array.from(arguments).slice(1))); };
    DecodingError.valueNotFound = function () { return Object.assign(new DecodingError(), __assign({ rawValue: "valueNotFound" }, Array.from(arguments).slice(1))); };
    DecodingError.keyNotFound = function () { return Object.assign(new DecodingError(), __assign({ rawValue: "keyNotFound" }, Array.from(arguments).slice(1))); };
    DecodingError.dataCorrupted = function () { return Object.assign(new DecodingError(), __assign({ rawValue: "dataCorrupted" }, Array.from(arguments).slice(1))); };
    /*Swift.(file).DecodingError.dataCorruptedError(forKey:C.Key,in:C,debugDescription:String)*/
    /*Swift.(file).DecodingError.dataCorruptedError(forKey:C.Key,in:C,debugDescription:String)*/
    DecodingError.dataCorruptedErrorForKeyInDebugDescription = function ($info, key, container, debugDescription) {
        throw 'unsupported method Swift.(file).DecodingError.dataCorruptedError(forKey:C.Key,in:C,debugDescription:String) in ' + this.constructor.name;
    };
    /*Swift.(file).DecodingError.dataCorruptedError(in:UnkeyedDecodingContainer,debugDescription:String)*/
    /*Swift.(file).DecodingError.dataCorruptedError(in:UnkeyedDecodingContainer,debugDescription:String)*/
    DecodingError.dataCorruptedErrorInDebugDescription = function ($info, container, debugDescription) {
        throw 'unsupported method Swift.(file).DecodingError.dataCorruptedError(in:UnkeyedDecodingContainer,debugDescription:String) in ' + this.constructor.name;
    };
    /*Swift.(file).DecodingError.dataCorruptedError(in:SingleValueDecodingContainer,debugDescription:String)*/
    /*Swift.(file).DecodingError.dataCorruptedError(in:SingleValueDecodingContainer,debugDescription:String)*/
    DecodingError.dataCorruptedErrorInDebugDescription = function ($info, container, debugDescription) {
        throw 'unsupported method Swift.(file).DecodingError.dataCorruptedError(in:SingleValueDecodingContainer,debugDescription:String) in ' + this.constructor.name;
    };
    DecodingError.prototype.init$vars = function () {
    };
    var _w;
    DecodingError.$infoAddress = '';
    DecodingError.Context = (_w = /** @class */ (function () {
            function class_20() {
            }
            /*Swift.(file).DecodingError.Context.codingPath*/
            class_20.prototype.codingPath$get = function () {
                throw 'unsupported variable Swift.(file).DecodingError.Context.codingPath in ' + this.constructor.name;
            };
            Object.defineProperty(class_20.prototype, "codingPath", {
                get: function () { return this.codingPath$get(); },
                enumerable: true,
                configurable: true
            });
            ;
            /*Swift.(file).DecodingError.Context.debugDescription*/
            class_20.prototype.debugDescription$get = function () {
                throw 'unsupported variable Swift.(file).DecodingError.Context.debugDescription in ' + this.constructor.name;
            };
            Object.defineProperty(class_20.prototype, "debugDescription", {
                get: function () { return this.debugDescription$get(); },
                enumerable: true,
                configurable: true
            });
            ;
            /*Swift.(file).DecodingError.Context.underlyingError*/
            class_20.prototype.underlyingError$get = function () {
                throw 'unsupported variable Swift.(file).DecodingError.Context.underlyingError in ' + this.constructor.name;
            };
            Object.defineProperty(class_20.prototype, "underlyingError", {
                get: function () { return this.underlyingError$get(); },
                enumerable: true,
                configurable: true
            });
            ;
            /*Swift.(file).DecodingError.Context.init(codingPath:[CodingKey],debugDescription:String,underlyingError:Error?)*/
            /*Swift.(file).DecodingError.Context.init(codingPath:[CodingKey],debugDescription:String,underlyingError:Error?)*/
            class_20.prototype.initCodingPathArrayDebugDescriptionStringUnderlyingErrorOptional = function ($info, codingPath, debugDescription, underlyingError) {
                throw 'unsupported method Swift.(file).DecodingError.Context.init(codingPath:[CodingKey],debugDescription:String,underlyingError:Error?) in ' + this.constructor.name;
            };
            class_20.prototype.init$vars = function () {
            };
            return class_20;
        }()),
        _w.$struct = true,
        _w.$infoAddress = '',
        _w);
    return DecodingError;
}());
if (typeof Error$implementation != 'undefined')
    _mixin(DecodingError, Error$implementation, false);
_mixin(DecodingError, _DefaultEnumImplementation, false);
var _GenericIndexKey = /** @class */ (function () {
    function _GenericIndexKey() {
    }
    /*Swift.(file)._GenericIndexKey.stringValue*/
    _GenericIndexKey.prototype.stringValue$get = function () {
        throw 'unsupported variable Swift.(file)._GenericIndexKey.stringValue in ' + this.constructor.name;
    };
    Object.defineProperty(_GenericIndexKey.prototype, "stringValue", {
        get: function () { return this.stringValue$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file)._GenericIndexKey.intValue*/
    _GenericIndexKey.prototype.intValue$get = function () {
        throw 'unsupported variable Swift.(file)._GenericIndexKey.intValue in ' + this.constructor.name;
    };
    Object.defineProperty(_GenericIndexKey.prototype, "intValue", {
        get: function () { return this.intValue$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file)._GenericIndexKey.init(stringValue:String)*/
    /*Swift.(file).CodingKey.init(stringValue:String)*/
    _GenericIndexKey.prototype.initStringValueString = function ($info, stringValue) {
        throw 'unsupported method Swift.(file)._GenericIndexKey.init(stringValue:String) in ' + this.constructor.name;
    };
    /*Swift.(file)._GenericIndexKey.init(intValue:Int)*/
    /*Swift.(file).CodingKey.init(intValue:Int)*/
    _GenericIndexKey.prototype.initIntValueInt = function ($info, intValue) {
        throw 'unsupported method Swift.(file)._GenericIndexKey.init(intValue:Int) in ' + this.constructor.name;
    };
    _GenericIndexKey.prototype.init$vars = function () {
    };
    _GenericIndexKey.$struct = true;
    _GenericIndexKey.$infoAddress = '';
    _GenericIndexKey.initStringValueString$failable = true;
    _GenericIndexKey.initIntValueInt$failable = true;
    return _GenericIndexKey;
}());
if (typeof CodingKey$implementation != 'undefined')
    _mixin(_GenericIndexKey, CodingKey$implementation, false);
var _DictionaryCodingKey = /** @class */ (function () {
    function _DictionaryCodingKey() {
    }
    /*Swift.(file)._DictionaryCodingKey.stringValue*/
    _DictionaryCodingKey.prototype.stringValue$get = function () {
        throw 'unsupported variable Swift.(file)._DictionaryCodingKey.stringValue in ' + this.constructor.name;
    };
    Object.defineProperty(_DictionaryCodingKey.prototype, "stringValue", {
        get: function () { return this.stringValue$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file)._DictionaryCodingKey.intValue*/
    _DictionaryCodingKey.prototype.intValue$get = function () {
        throw 'unsupported variable Swift.(file)._DictionaryCodingKey.intValue in ' + this.constructor.name;
    };
    Object.defineProperty(_DictionaryCodingKey.prototype, "intValue", {
        get: function () { return this.intValue$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file)._DictionaryCodingKey.init(stringValue:String)*/
    /*Swift.(file).CodingKey.init(stringValue:String)*/
    _DictionaryCodingKey.prototype.initStringValueString = function ($info, stringValue) {
        throw 'unsupported method Swift.(file)._DictionaryCodingKey.init(stringValue:String) in ' + this.constructor.name;
    };
    /*Swift.(file)._DictionaryCodingKey.init(intValue:Int)*/
    /*Swift.(file).CodingKey.init(intValue:Int)*/
    _DictionaryCodingKey.prototype.initIntValueInt = function ($info, intValue) {
        throw 'unsupported method Swift.(file)._DictionaryCodingKey.init(intValue:Int) in ' + this.constructor.name;
    };
    _DictionaryCodingKey.prototype.init$vars = function () {
    };
    _DictionaryCodingKey.$struct = true;
    _DictionaryCodingKey.$infoAddress = '';
    _DictionaryCodingKey.initStringValueString$failable = true;
    _DictionaryCodingKey.initIntValueInt$failable = true;
    return _DictionaryCodingKey;
}());
if (typeof CodingKey$implementation != 'undefined')
    _mixin(_DictionaryCodingKey, CodingKey$implementation, false);
var IndexingIterator = /** @class */ (function () {
    function IndexingIterator() {
    }
    /*Swift.(file).IndexingIterator.init(_elements:Elements)*/
    /*Swift.(file).IndexingIterator.init(_elements:Elements)*/
    IndexingIterator.prototype.init_elements = function ($info, _elements) {
        var _this = this;
        _this._elements = _elements;
        _this._position = _elements.startIndex;
        return;
    };
    /*Swift.(file).IndexingIterator.init(_elements:Elements,_position:Elements.Index)*/
    /*Swift.(file).IndexingIterator.init(_elements:Elements,_position:Elements.Index)*/
    IndexingIterator.prototype.init_elements_position = function ($info, _elements, _position) {
        var _this = this;
        _this._elements = _elements;
        _this._position = _position;
        return;
    };
    /*Swift.(file).IndexingIterator.next()*/
    /*Swift.(file).IteratorProtocol.next()*/
    IndexingIterator.prototype.next = function ($info) {
        var _this = this;
        if (((_.arg0 = _this._position).constructor.infix_61_61({}, _.arg0, _this._elements.endIndex))) {
            return null;
        }
        ;
        var _element = _this._elements.subscript$get({}, _this._position);
        _this._elements.formIndexAfter({}, { get: function () { return _this._position; }, set: function ($val) { return _this._position = $val; } });
        return _element;
    };
    IndexingIterator.prototype.init$vars = function () {
    };
    IndexingIterator.$struct = true;
    IndexingIterator.$infoAddress = '';
    return IndexingIterator;
}());
if (typeof IteratorProtocol$implementation != 'undefined')
    _mixin(IndexingIterator, IteratorProtocol$implementation, false);
if (typeof Sequence$implementation != 'undefined')
    _mixin(IndexingIterator, Sequence$implementation, false);
var Collection$implementation = /** @class */ (function () {
    function Collection$implementation() {
    }
    /*Swift.(file).Collection.formIndex(after:Self.Index)*/
    /*Swift.(file).Collection.formIndex(after:Self.Index)*/
    Collection$implementation.prototype.formIndexAfter = function ($info, i$inout) {
        var _this = this;
        var i = i$inout.get();
        var $result = (function () {
            i = _this.indexAfter({}, i);
        })();
        i$inout.set(i);
        return $result;
    };
    /*Swift.(file).Collection.index(_:Self.Index,offsetBy:Int)*/
    /*Swift.(file).Collection.index(_:Self.Index,offsetBy:Int)*/
    Collection$implementation.prototype.indexOffsetBy = function ($info, i, distance) {
        var _this = this;
        return _this._advanceForwardBy({}, i, distance);
    };
    /*Swift.(file).Collection.index(_:Self.Index,offsetBy:Int,limitedBy:Self.Index)*/
    /*Swift.(file).Collection.index(_:Self.Index,offsetBy:Int,limitedBy:Self.Index)*/
    Collection$implementation.prototype.indexOffsetByLimitedBy = function ($info, i, distance, limit) {
        var _this = this;
        return _this._advanceForwardByLimitedBy({}, i, distance, limit);
    };
    /*Swift.(file).Collection.formIndex(_:Self.Index,offsetBy:Int)*/
    /*Swift.(file).Collection.formIndex(_:Self.Index,offsetBy:Int)*/
    Collection$implementation.prototype.formIndexOffsetBy = function ($info, i$inout, distance) {
        var _this = this;
        var i = i$inout.get();
        var $result = (function () {
            i = _this.indexOffsetBy({}, i, distance);
        })();
        i$inout.set(i);
        return $result;
    };
    /*Swift.(file).Collection.formIndex(_:Self.Index,offsetBy:Int,limitedBy:Self.Index)*/
    /*Swift.(file).Collection.formIndex(_:Self.Index,offsetBy:Int,limitedBy:Self.Index)*/
    Collection$implementation.prototype.formIndexOffsetByLimitedBy = function ($info, i$inout, distance, limit) {
        var _this = this;
        var i = i$inout.get();
        var $result = (function () {
            var $ifLet0, advancedIndex_1;
            if ((($ifLet0 = _this.indexOffsetByLimitedBy({}, i, distance, limit)) || true) && $ifLet0 != null && ((advancedIndex_1 = $ifLet0) || true)) {
                i = advancedIndex_1;
                return true;
            }
            ;
            i = limit;
            return false;
        })();
        i$inout.set(i);
        return $result;
    };
    /*Swift.(file).Collection.distance(from:Self.Index,to:Self.Index)*/
    /*Swift.(file).Collection.distance(from:Self.Index,to:Self.Index)*/
    Collection$implementation.prototype.distanceFromTo = function ($info, start, end) {
        var _this = this;
        preconditionFileLine({}, function () { return (_.arg0 = start).constructor.infix_60_61({}, _.arg0, end); }, function () { return "Only BidirectionalCollections can have end come before start"; }, '?3', '?3');
        var start_dupl = start;
        var count = 0;
        while (true) {
            if (!(((_.arg1 = start_dupl).constructor.infix_33_61({}, _.arg1, end))))
                break;
            count = Int.infix_43({}, count, 1);
            _this.formIndexAfter({}, { get: function () { return start_dupl; }, set: function ($val) { return start_dupl = $val; } });
        }
        ;
        return count;
    };
    /*Swift.(file).Collection.randomElement(using:T)*/
    /*Swift.(file).Collection.randomElement(using:T)*/
    Collection$implementation.prototype.randomElementUsing = function ($info, generator$inout) {
        var _this = this;
        var generator = generator$inout.get();
        var $result = (function () {
            if (!((Bool.prefix_33({}, _this.isEmpty)))) {
                return null;
            }
            ;
            var random = Int.randomInUsing({}, Int.infix_46_46_60({}, 0, _this.count), { get: function () { return generator; }, set: function ($val) { return generator = $val; } });
            var idx = _this.indexOffsetBy({}, _this.startIndex, random);
            return _this.subscript$get({}, idx);
        })();
        generator$inout.set(generator);
        return $result;
    };
    /*Swift.(file).Collection.randomElement()*/
    /*Swift.(file).Collection.randomElement()*/
    Collection$implementation.prototype.randomElement = function ($info) {
        var _this = this;
        var g = _create(SystemRandomNumberGenerator, 'init', {});
        return _this.randomElementUsing({}, { get: function () { return g; }, set: function ($val) { return g = $val; } });
    };
    /*Swift.(file).Collection.makeIterator()*/
    /*Swift.(file).Collection.makeIterator()*/
    Collection$implementation.prototype.makeIterator = function ($info) {
        var _this = this;
        return _create(IndexingIterator, 'init_elements', {}, _this);
    };
    /*Swift.(file).Collection.subscript(_:Range<Self.Index>)*/
    /*Swift.(file).Collection.subscript(_:Range<Self.Index>)*/
    Collection$implementation.prototype.subscriptRange$get = function ($info, bounds) {
        var _this = this;
        return _create(Slice, 'initBaseBoundsRange', {}, _this, bounds);
    };
    /*Swift.(file).Collection.popFirst()*/
    /*Swift.(file).Collection.popFirst()*/
    Collection$implementation.prototype.popFirst = function ($info) {
        var _this = this;
        if (!((Bool.prefix_33({}, _this.isEmpty)))) {
            return null;
        }
        ;
        var _element = _this.first;
        $info.$setThis(_this = _cloneStruct(_this.subscriptRange$get({}, (_.arg0 = _this.indexAfter({}, _this.startIndex)).constructor.infix_46_46_60({}, _.arg0, _this.endIndex))));
        return _element;
    };
    /*Swift.(file).Collection.isEmpty*/
    Collection$implementation.prototype.isEmpty$get = function () {
        var _this = this;
        return (_.arg0 = _this.startIndex).constructor.infix_61_61({}, _.arg0, _this.endIndex);
    };
    Object.defineProperty(Collection$implementation.prototype, "isEmpty", {
        get: function () { return this.isEmpty$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).Collection.first*/
    Collection$implementation.prototype.first$get = function () {
        var _this = this;
        var start = _this.startIndex;
        if (((_.arg0 = start).constructor.infix_33_61({}, _.arg0, _this.endIndex))) {
            return _this.subscript$get({}, start);
        }
        else {
            return null;
        }
    };
    Object.defineProperty(Collection$implementation.prototype, "first", {
        get: function () { return this.first$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).Collection.underestimatedCount*/
    Collection$implementation.prototype.underestimatedCount$get = function () {
        var _this = this;
        return _this.count;
    };
    Object.defineProperty(Collection$implementation.prototype, "underestimatedCount", {
        get: function () { return this.underestimatedCount$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).Collection.count*/
    Collection$implementation.prototype.count$get = function () {
        var _this = this;
        return _this.distanceFromTo({}, _this.startIndex, _this.endIndex);
    };
    Object.defineProperty(Collection$implementation.prototype, "count", {
        get: function () { return this.count$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).Collection.map(_:(Self.Element) throws -> T)*/
    /*Swift.(file).Collection.map(_:(Self.Element) throws -> T)*/
    Collection$implementation.prototype.mapSwift = function ($info, transform) {
        var _this = this;
        var n = _this.count;
        if ((Int.infix_61_61({}, n, 0))) {
            return _create(Array, 'initArrayLiteralArray', {}, []);
        }
        ;
        var result = _create(Array, 'init', {});
        var i = _this.startIndex;
        {
            var $generator_2 = _cloneStruct(Int.infix_46_46_60({}, 0, n).makeIterator({}));
            while (true) {
                var $ifLet0;
                if (!((($ifLet0 = $generator_2.next({ $setThis: function ($val) { return $generator_2 = $val; } })) || true) && $ifLet0 != null))
                    break;
                result.append({ $setThis: function ($val) { return result = $val; } }, transform({}, _this.subscript$get({}, i)));
                _this.formIndexAfter({}, { get: function () { return i; }, set: function ($val) { return i = $val; } });
            }
        }
        ;
        return result;
    };
    /*Swift.(file).Collection.dropFirst(_:Int)*/
    /*Swift.(file).Collection.dropFirst(_:Int)*/
    Collection$implementation.prototype.dropFirst = function ($info, k) {
        var _this = this;
        preconditionFileLine({}, function () { return Int.infix_62_61({}, k, 0); }, function () { return "Can't drop a negative number of elements from a collection"; }, '?3', '?3');
        var start = infix_63_63({}, _this.indexOffsetByLimitedBy({}, _this.startIndex, k, _this.endIndex), function () { return _this.endIndex; });
        return _this.subscriptRange$get({}, (_.arg0 = start).constructor.infix_46_46_60({}, _.arg0, _this.endIndex));
    };
    /*Swift.(file).Collection.dropLast(_:Int)*/
    /*Swift.(file).Collection.dropLast(_:Int)*/
    Collection$implementation.prototype.dropLast = function ($info, k) {
        var _this = this;
        preconditionFileLine({}, function () { return Int.infix_62_61({}, k, 0); }, function () { return "Can't drop a negative number of elements from a collection"; }, '?3', '?3');
        var amount = /*dot_syntax_base_ignored*/ max({}, 0, Int.infix_45({}, _this.count, k));
        var end = infix_63_63({}, _this.indexOffsetByLimitedBy({}, _this.startIndex, amount, _this.endIndex), function () { return _this.endIndex; });
        return _this.subscriptRange$get({}, (_.arg0 = _this.startIndex).constructor.infix_46_46_60({}, _.arg0, end));
    };
    /*Swift.(file).Collection.drop(while:(Self.Element) throws -> Bool)*/
    /*Swift.(file).Collection.drop(while:(Self.Element) throws -> Bool)*/
    Collection$implementation.prototype.dropWhile = function ($info, predicate) {
        var _this = this;
        var start = _this.startIndex;
        while (true) {
            if (!((Bool.infix_38_38({}, (_.arg0 = start).constructor.infix_33_61({}, _.arg0, _this.endIndex), function () { return predicate({}, _this.subscript$get({}, start)); }))))
                break;
            _this.formIndexAfter({}, { get: function () { return start; }, set: function ($val) { return start = $val; } });
        }
        ;
        return _this.subscriptRange$get({}, (_.arg1 = start).constructor.infix_46_46_60({}, _.arg1, _this.endIndex));
    };
    /*Swift.(file).Collection.prefix(_:Int)*/
    /*Swift.(file).Collection.prefix(_:Int)*/
    Collection$implementation.prototype.prefix = function ($info, maxLength) {
        var _this = this;
        preconditionFileLine({}, function () { return Int.infix_62_61({}, maxLength, 0); }, function () { return "Can't take a prefix of negative length from a collection"; }, '?3', '?3');
        var end = infix_63_63({}, _this.indexOffsetByLimitedBy({}, _this.startIndex, maxLength, _this.endIndex), function () { return _this.endIndex; });
        return _this.subscriptRange$get({}, (_.arg0 = _this.startIndex).constructor.infix_46_46_60({}, _.arg0, end));
    };
    /*Swift.(file).Collection.prefix(while:(Self.Element) throws -> Bool)*/
    /*Swift.(file).Collection.prefix(while:(Self.Element) throws -> Bool)*/
    Collection$implementation.prototype.prefixWhile = function ($info, predicate) {
        var _this = this;
        var end = _this.startIndex;
        while (true) {
            if (!((Bool.infix_38_38({}, (_.arg0 = end).constructor.infix_33_61({}, _.arg0, _this.endIndex), function () { return predicate({}, _this.subscript$get({}, end)); }))))
                break;
            _this.formIndexAfter({}, { get: function () { return end; }, set: function ($val) { return end = $val; } });
        }
        ;
        return _this.subscriptRange$get({}, (_.arg1 = _this.startIndex).constructor.infix_46_46_60({}, _.arg1, end));
    };
    /*Swift.(file).Collection.suffix(_:Int)*/
    /*Swift.(file).Collection.suffix(_:Int)*/
    Collection$implementation.prototype.suffix = function ($info, maxLength) {
        var _this = this;
        preconditionFileLine({}, function () { return Int.infix_62_61({}, maxLength, 0); }, function () { return "Can't take a suffix of negative length from a collection"; }, '?3', '?3');
        var amount = /*dot_syntax_base_ignored*/ max({}, 0, Int.infix_45({}, _this.count, maxLength));
        var start = infix_63_63({}, _this.indexOffsetByLimitedBy({}, _this.startIndex, amount, _this.endIndex), function () { return _this.endIndex; });
        return _this.subscriptRange$get({}, (_.arg0 = start).constructor.infix_46_46_60({}, _.arg0, _this.endIndex));
    };
    /*Swift.(file).Collection.prefix(upTo:Self.Index)*/
    /*Swift.(file).Collection.prefix(upTo:Self.Index)*/
    Collection$implementation.prototype.prefixUpTo = function ($info, end) {
        var _this = this;
        return _this.subscriptRange$get({}, (_.arg0 = _this.startIndex).constructor.infix_46_46_60({}, _.arg0, end));
    };
    /*Swift.(file).Collection.suffix(from:Self.Index)*/
    /*Swift.(file).Collection.suffix(from:Self.Index)*/
    Collection$implementation.prototype.suffixFrom = function ($info, start) {
        var _this = this;
        return _this.subscriptRange$get({}, (_.arg0 = start).constructor.infix_46_46_60({}, _.arg0, _this.endIndex));
    };
    /*Swift.(file).Collection.prefix(through:Self.Index)*/
    /*Swift.(file).Collection.prefix(through:Self.Index)*/
    Collection$implementation.prototype.prefixThrough = function ($info, position) {
        var _this = this;
        return _this.prefixUpTo({}, _this.indexAfter({}, position));
    };
    /*Swift.(file).Collection.split(maxSplits:Int,omittingEmptySubsequences:Bool,whereSeparator:(Self.Element) throws -> Bool)*/
    /*Swift.(file).Collection.split(maxSplits:Int,omittingEmptySubsequences:Bool,whereSeparator:(Self.Element) throws -> Bool)*/
    Collection$implementation.prototype.splitMaxSplitsOmittingEmptySubsequencesWhereSeparator = function ($info, maxSplits, omittingEmptySubsequences, isSeparator) {
        var _this = this;
        preconditionFileLine({}, function () { return Int.infix_62_61({}, maxSplits, 0); }, function () { return "Must take zero or more splits"; }, '?3', '?3');
        var result = _create(Array, 'initArrayLiteralArray', {}, []);
        var subSequenceStart = _this.startIndex;
        function appendSubsequenceEnd($info, end) {
            if ((Bool.infix_38_38({}, (_.arg0 = subSequenceStart).constructor.infix_61_61({}, _.arg0, end), function () { return omittingEmptySubsequences; }))) {
                return false;
            }
            ;
            result.append({ $setThis: function ($val) { return result = $val; } }, _this.subscriptRange$get({}, (_.arg1 = subSequenceStart).constructor.infix_46_46_60({}, _.arg1, end)));
            return true;
        }
        if ((Bool.infix_124_124({}, Int.infix_61_61({}, maxSplits, 0), function () { return _this.isEmpty; }))) {
            _.discardAssignment = appendSubsequenceEnd({}, _this.endIndex);
            return result;
        }
        ;
        var subSequenceEnd = subSequenceStart;
        var cachedEndIndex = _this.endIndex;
        while (true) {
            if (!(((_.arg2 = subSequenceEnd).constructor.infix_33_61({}, _.arg2, cachedEndIndex))))
                break;
            if ((isSeparator({}, _this.subscript$get({}, subSequenceEnd)))) {
                var didAppend = appendSubsequenceEnd({}, subSequenceEnd);
                _this.formIndexAfter({}, { get: function () { return subSequenceEnd; }, set: function ($val) { return subSequenceEnd = $val; } });
                subSequenceStart = subSequenceEnd;
                if ((Bool.infix_38_38({}, didAppend, function () { return Int.infix_61_61({}, result.count, maxSplits); }))) {
                    break;
                }
                ;
                continue;
            }
            ;
            _this.formIndexAfter({}, { get: function () { return subSequenceEnd; }, set: function ($val) { return subSequenceEnd = $val; } });
        }
        ;
        if ((Bool.infix_124_124({}, (_.arg3 = subSequenceStart).constructor.infix_33_61({}, _.arg3, cachedEndIndex), function () { return Bool.prefix_33({}, omittingEmptySubsequences); }))) {
            result.append({ $setThis: function ($val) { return result = $val; } }, _this.subscriptRange$get({}, (_.arg4 = subSequenceStart).constructor.infix_46_46_60({}, _.arg4, cachedEndIndex)));
        }
        ;
        return result;
    };
    /*Swift.(file).Collection.split(separator:Self.Element,maxSplits:Int,omittingEmptySubsequences:Bool)*/
    /*Swift.(file).Collection.split(separator:Self.Element,maxSplits:Int,omittingEmptySubsequences:Bool)*/
    Collection$implementation.prototype.splitSeparatorMaxSplitsOmittingEmptySubsequences = function ($info, separator, maxSplits, omittingEmptySubsequences) {
        var _this = this;
        return _this.splitMaxSplitsOmittingEmptySubsequencesWhereSeparator({}, maxSplits, omittingEmptySubsequences, (function ($info, $0) { return (_.arg0 = $0).constructor.infix_61_61({}, _.arg0, separator); }));
    };
    /*Swift.(file).Collection.removeFirst()*/
    /*Swift.(file).Collection.removeFirst()*/
    Collection$implementation.prototype.removeFirst = function ($info) {
        var _this = this;
        preconditionFileLine({}, function () { return Bool.prefix_33({}, _this.isEmpty); }, function () { return "Can't remove items from an empty collection"; }, '?3', '?3');
        var _element = _this.first;
        $info.$setThis(_this = _cloneStruct(_this.subscriptRange$get({}, (_.arg0 = _this.indexAfter({}, _this.startIndex)).constructor.infix_46_46_60({}, _.arg0, _this.endIndex))));
        return _element;
    };
    /*Swift.(file).Collection.removeFirst(_:Int)*/
    /*Swift.(file).Collection.removeFirst(_:Int)*/
    Collection$implementation.prototype.removeFirst = function ($info, k) {
        var _this = this;
        if ((Int.infix_61_61({}, k, 0))) {
            return;
        }
        ;
        preconditionFileLine({}, function () { return Int.infix_62_61({}, k, 0); }, function () { return "Number of elements to remove should be non-negative"; }, '?3', '?3');
        preconditionFileLine({}, function () { return Int.infix_62_61({}, _this.count, k); }, function () { return "Can't remove more items from a collection than it contains"; }, '?3', '?3');
        $info.$setThis(_this = _cloneStruct(_this.subscriptRange$get({}, (_.arg0 = _this.indexOffsetBy({}, _this.startIndex, k)).constructor.infix_46_46_60({}, _.arg0, _this.endIndex))));
    };
    /*Swift.(file).Collection.firstIndex(of:Self.Element)*/
    /*Swift.(file).Collection.firstIndex(of:Self.Element)*/
    Collection$implementation.prototype.firstIndexOf = function ($info, _element) {
        var _this = this;
        var $ifLet0, result_1;
        if ((($ifLet0 = _this._customIndexOfEquatableElement({}, _element)) || true) && $ifLet0 != null && ((result_1 = $ifLet0) || true)) {
            return result_1;
        }
        ;
        var i = _this.startIndex;
        while (true) {
            if (!(((_.arg0 = i).constructor.infix_33_61({}, _.arg0, _this.endIndex))))
                break;
            if (((_.arg1 = _this.subscript$get({}, i)).constructor.infix_61_61({}, _.arg1, _element))) {
                return i;
            }
            ;
            _this.formIndexAfter({}, { get: function () { return i; }, set: function ($val) { return i = $val; } });
        }
        ;
        return null;
    };
    /*Swift.(file).Collection.firstIndex(where:(Self.Element) throws -> Bool)*/
    /*Swift.(file).Collection.firstIndex(where:(Self.Element) throws -> Bool)*/
    Collection$implementation.prototype.firstIndexWhere = function ($info, predicate) {
        var _this = this;
        var i = _this.startIndex;
        while (true) {
            if (!(((_.arg0 = i).constructor.infix_33_61({}, _.arg0, _this.endIndex))))
                break;
            if ((predicate({}, _this.subscript$get({}, i)))) {
                return i;
            }
            ;
            _this.formIndexAfter({}, { get: function () { return i; }, set: function ($val) { return i = $val; } });
        }
        ;
        return null;
    };
    /*Swift.(file).Collection.indices*/
    Collection$implementation.prototype.indices$get = function () {
        var _this = this;
        return _create(DefaultIndices, 'init_elementsStartIndexEndIndex', {}, _this, _this.startIndex, _this.endIndex);
    };
    Object.defineProperty(Collection$implementation.prototype, "indices", {
        get: function () { return this.indices$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).Collection.subscript(_:R)*/
    /*Swift.(file).Collection.subscript(_:R)*/
    Collection$implementation.prototype.subscript$get = function ($info, r) {
        var _this = this;
        return _this.subscriptRange$get({}, r.relativeTo({}, _this));
    };
    /*Swift.(file).Collection.subscript(_:(UnboundedRange_) -> ())*/
    /*Swift.(file).Collection.subscript(_:(UnboundedRange_) -> ())*/
    Collection$implementation.prototype.subscriptUnboundedRange$get = function ($info, x) {
        var _this = this;
        return _this.subscript$get({}, ((function () { throw '!unclarifiedGeneric:Self.Index'; })()).postfix_46_46_46({}, _this.startIndex));
    };
    /*Swift.(file).Collection.index(_:Self.Index,offsetBy:T)*/
    /*Swift.(file).Collection.index(_:Self.Index,offsetBy:T)*/
    Collection$implementation.prototype.indexOffsetByT = function ($info, i, n) {
        var _this = this;
        return _this.indexOffsetBy({}, i, _create(Int, 'initT', {}, n));
    };
    /*Swift.(file).Collection.formIndex(_:Self.Index,offsetBy:T)*/
    /*Swift.(file).Collection.formIndex(_:Self.Index,offsetBy:T)*/
    Collection$implementation.prototype.formIndexOffsetBy = function ($info, i$inout, n) {
        var _this = this;
        var i = i$inout.get();
        var $result = (function () {
            return _this.formIndexOffsetBy({}, { get: function () { return i; }, set: function ($val) { return i = $val; } }, _create(Int, 'initT', {}, n));
        })();
        i$inout.set(i);
        return $result;
    };
    /*Swift.(file).Collection.index(_:Self.Index,offsetBy:T,limitedBy:Self.Index)*/
    /*Swift.(file).Collection.index(_:Self.Index,offsetBy:T,limitedBy:Self.Index)*/
    Collection$implementation.prototype.indexOffsetByTLimitedBy = function ($info, i, n, limit) {
        var _this = this;
        return _this.indexOffsetByLimitedBy({}, i, _create(Int, 'initT', {}, n), limit);
    };
    /*Swift.(file).Collection.formIndex(_:Self.Index,offsetBy:T,limitedBy:Self.Index)*/
    /*Swift.(file).Collection.formIndex(_:Self.Index,offsetBy:T,limitedBy:Self.Index)*/
    Collection$implementation.prototype.formIndexOffsetByLimitedBy = function ($info, i$inout, n, limit) {
        var _this = this;
        var i = i$inout.get();
        var $result = (function () {
            return _this.formIndexOffsetByLimitedBy({}, { get: function () { return i; }, set: function ($val) { return i = $val; } }, _create(Int, 'initT', {}, n), limit);
        })();
        i$inout.set(i);
        return $result;
    };
    /*Swift.(file).Collection.distance(from:Self.Index,to:Self.Index)*/
    /*Swift.(file).Collection.distance(from:Self.Index,to:Self.Index)*/
    Collection$implementation.prototype.distanceFromTo = function ($info, start, end) {
        var _this = this;
        preconditionFileLine({}, function () { return (_.arg0 = start).constructor.infix_60_61({}, _.arg0, end); }, function () { return "Only BidirectionalCollections can have end come before start"; }, '?3', '?3');
        var start_dupl = start;
        var count = 0;
        while (true) {
            if (!(((_.arg1 = start_dupl).constructor.infix_33_61({}, _.arg1, end))))
                break;
            count = Int.infix_43({}, count, 1);
            _this.formIndexAfter({}, { get: function () { return start_dupl; }, set: function ($val) { return start_dupl = $val; } });
        }
        ;
        return count;
    };
    /*Swift.(file).Collection.flatMap(_:(Self.Element) throws -> String?)*/
    /*Swift.(file).Collection.flatMap(_:(Self.Element) throws -> String?)*/
    Collection$implementation.prototype.flatMap = function ($info, transform) {
        var _this = this;
        return _this._compactMap({}, transform);
    };
    /*Swift.(file).Collection.index(where:(Self.Element) throws -> Bool)*/
    /*Swift.(file).Collection.index(where:(Self.Element) throws -> Bool)*/
    Collection$implementation.prototype.indexWhere = function ($info, _predicate) {
        var _this = this;
        return _this.firstIndexWhere({}, _predicate);
    };
    /*Swift.(file).Collection.index(of:Self.Element)*/
    /*Swift.(file).Collection.index(of:Self.Element)*/
    Collection$implementation.prototype.indexOfSwift = function ($info, _element) {
        var _this = this;
        return _this.firstIndexOf({}, _element);
    };
    return Collection$implementation;
}());
if (typeof Sequence$implementation != 'undefined')
    _mixin(Collection$implementation, Sequence$implementation, false);
var Comparable$implementation = /** @class */ (function () {
    function Comparable$implementation() {
    }
    /*Swift.(file).Comparable.>infix(_:Self,_:Self)*/
    /*Swift.(file).Comparable.>infix(_:Self,_:Self)*/
    Comparable$implementation.infix_62 = function ($info, lhs, rhs) {
        var _this = this;
        return (_.arg0 = rhs).constructor.infix_60({}, _.arg0, lhs);
    };
    /*Swift.(file).Comparable.<=infix(_:Self,_:Self)*/
    /*Swift.(file).Comparable.<=infix(_:Self,_:Self)*/
    Comparable$implementation.infix_60_61 = function ($info, lhs, rhs) {
        var _this = this;
        return Bool.prefix_33({}, (_.arg0 = rhs).constructor.infix_60({}, _.arg0, lhs));
    };
    /*Swift.(file).Comparable.>=infix(_:Self,_:Self)*/
    /*Swift.(file).Comparable.>=infix(_:Self,_:Self)*/
    Comparable$implementation.infix_62_61 = function ($info, lhs, rhs) {
        var _this = this;
        return Bool.prefix_33({}, (_.arg0 = lhs).constructor.infix_60({}, _.arg0, rhs));
    };
    /*Swift.(file).Comparable....infix(_:Self,_:Self)*/
    /*Swift.(file).Comparable....infix(_:Self,_:Self)*/
    Comparable$implementation.infix_46_46_46 = function ($info, minimum, maximum) {
        var _this = this;
        preconditionFileLine({}, function () { return (_.arg0 = minimum).constructor.infix_60_61({}, _.arg0, maximum); }, function () { return "Can't form Range with upperBound < lowerBound"; }, '?3', '?3');
        return _create(ClosedRange, 'initUncheckedBoundstuple_type', {}, { 0: minimum, 1: maximum });
    };
    /*Swift.(file).Comparable...<infix(_:Self,_:Self)*/
    /*Swift.(file).Comparable...<infix(_:Self,_:Self)*/
    Comparable$implementation.infix_46_46_60 = function ($info, minimum, maximum) {
        var _this = this;
        preconditionFileLine({}, function () { return (_.arg0 = minimum).constructor.infix_60_61({}, _.arg0, maximum); }, function () { return "Can't form Range with upperBound < lowerBound"; }, '?3', '?3');
        return _create(Range, 'initUncheckedBoundstuple_type', {}, { 0: minimum, 1: maximum });
    };
    /*Swift.(file).Comparable...<prefix(_:Self)*/
    /*Swift.(file).Comparable...<prefix(_:Self)*/
    Comparable$implementation.prefix_46_46_60 = function ($info, maximum) {
        var _this = this;
        return _create(PartialRangeUpTo, 'init', {}, maximum);
    };
    /*Swift.(file).Comparable....prefix(_:Self)*/
    /*Swift.(file).Comparable....prefix(_:Self)*/
    Comparable$implementation.prefix_46_46_46 = function ($info, maximum) {
        var _this = this;
        return _create(PartialRangeThrough, 'init', {}, maximum);
    };
    /*Swift.(file).Comparable....postfix(_:Self)*/
    /*Swift.(file).Comparable....postfix(_:Self)*/
    Comparable$implementation.postfix_46_46_46 = function ($info, minimum) {
        var _this = this;
        return _create(PartialRangeFrom, 'init', {}, minimum);
    };
    return Comparable$implementation;
}());
if (typeof Equatable$implementation != 'undefined')
    _mixin(Comparable$implementation, Equatable$implementation, false);
var __EmptyArrayStorage = /** @class */ (function (_super) {
    __extends(__EmptyArrayStorage, _super);
    function __EmptyArrayStorage() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    /*Swift.(file).__EmptyArrayStorage.init(_doNotCallMe:())*/
    /*Swift.(file).__EmptyArrayStorage.init(_doNotCallMe:())*/
    __EmptyArrayStorage.prototype.init_doNotCallMetuple_type = function ($info, _doNotCallMe) {
        throw 'unsupported method Swift.(file).__EmptyArrayStorage.init(_doNotCallMe:()) in ' + this.constructor.name;
    };
    /*Swift.(file).__EmptyArrayStorage.canStoreElements(ofDynamicType:Any.Type)*/
    /*Swift.(file).__ContiguousArrayStorageBase.canStoreElements(ofDynamicType:Any.Type)*/
    __EmptyArrayStorage.prototype.canStoreElementsOfDynamicType = function ($info, _) {
        throw 'unsupported method Swift.(file).__EmptyArrayStorage.canStoreElements(ofDynamicType:Any.Type) in ' + this.constructor.name;
    };
    /*Swift.(file).__EmptyArrayStorage.staticElementType*/
    __EmptyArrayStorage.prototype.staticElementType$get = function () {
        throw 'unsupported variable Swift.(file).__EmptyArrayStorage.staticElementType in ' + this.constructor.name;
    };
    Object.defineProperty(__EmptyArrayStorage.prototype, "staticElementType", {
        get: function () { return this.staticElementType$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).__EmptyArrayStorage.init(_doNotCallMeBase:())*/
    /*Swift.(file).__ContiguousArrayStorageBase.init(_doNotCallMeBase:())*/
    __EmptyArrayStorage.prototype.init_doNotCallMeBasetuple_type = function ($info, _doNotCallMeBase) {
        throw 'unsupported method Swift.(file).__EmptyArrayStorage.init(_doNotCallMeBase:()) in ' + this.constructor.name;
    };
    __EmptyArrayStorage.prototype.init$vars = function () {
        if (_super.prototype.init$vars)
            _super.prototype.init$vars.call(this);
    };
    __EmptyArrayStorage.$infoAddress = '';
    return __EmptyArrayStorage;
}(__ContiguousArrayStorageBase));
var _ContiguousArrayStorage = /** @class */ (function (_super) {
    __extends(_ContiguousArrayStorage, _super);
    function _ContiguousArrayStorage() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    /*Swift.(file)._ContiguousArrayStorage.canStoreElements(ofDynamicType:Any.Type)*/
    /*Swift.(file).__ContiguousArrayStorageBase.canStoreElements(ofDynamicType:Any.Type)*/
    _ContiguousArrayStorage.prototype.canStoreElementsOfDynamicType = function ($info, proposedElementType) {
        throw 'unsupported method Swift.(file)._ContiguousArrayStorage.canStoreElements(ofDynamicType:Any.Type) in ' + this.constructor.name;
    };
    /*Swift.(file)._ContiguousArrayStorage.staticElementType*/
    _ContiguousArrayStorage.prototype.staticElementType$get = function () {
        throw 'unsupported variable Swift.(file)._ContiguousArrayStorage.staticElementType in ' + this.constructor.name;
    };
    Object.defineProperty(_ContiguousArrayStorage.prototype, "staticElementType", {
        get: function () { return this.staticElementType$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file)._ContiguousArrayStorage.init(_doNotCallMeBase:())*/
    /*Swift.(file).__ContiguousArrayStorageBase.init(_doNotCallMeBase:())*/
    _ContiguousArrayStorage.prototype.init_doNotCallMeBasetuple_type = function ($info, _doNotCallMeBase) {
        throw 'unsupported method Swift.(file)._ContiguousArrayStorage.init(_doNotCallMeBase:()) in ' + this.constructor.name;
    };
    _ContiguousArrayStorage.prototype.init$vars = function () {
        if (_super.prototype.init$vars)
            _super.prototype.init$vars.call(this);
    };
    _ContiguousArrayStorage.$infoAddress = '';
    return _ContiguousArrayStorage;
}(__ContiguousArrayStorageBase));
var OpaquePointer = /** @class */ (function () {
    function OpaquePointer() {
    }
    /*Swift.(file).OpaquePointer.init(_:RawPointer)*/
    /*Swift.(file).OpaquePointer.init(_:RawPointer)*/
    OpaquePointer.prototype.initRawPointer = function ($info, v) {
        throw 'unsupported method Swift.(file).OpaquePointer.init(_:RawPointer) in ' + this.constructor.name;
    };
    /*Swift.(file).OpaquePointer.init(bitPattern:Int)*/
    /*Swift.(file).OpaquePointer.init(bitPattern:Int)*/
    OpaquePointer.prototype.initBitPatternInt = function ($info, bitPattern) {
        throw 'unsupported method Swift.(file).OpaquePointer.init(bitPattern:Int) in ' + this.constructor.name;
    };
    /*Swift.(file).OpaquePointer.init(bitPattern:UInt)*/
    /*Swift.(file).OpaquePointer.init(bitPattern:UInt)*/
    OpaquePointer.prototype.initBitPatternUInt = function ($info, bitPattern) {
        throw 'unsupported method Swift.(file).OpaquePointer.init(bitPattern:UInt) in ' + this.constructor.name;
    };
    /*Swift.(file).OpaquePointer.init(_:UnsafePointer<T>)*/
    /*Swift.(file).OpaquePointer.init(_:UnsafePointer<T>)*/
    OpaquePointer.prototype.initUnsafePointer = function ($info, from) {
        var _this = this;
        _this._rawValue = from._rawValue;
        return;
    };
    /*Swift.(file).OpaquePointer.init(_:UnsafePointer<T>?)*/
    /*Swift.(file).OpaquePointer.init(_:UnsafePointer<T>?)*/
    OpaquePointer.prototype.initOptional = function ($info, from) {
        var _this = this;
        var $ifLet0, unwrapped_1;
        if (!((($ifLet0 = from) || true) && $ifLet0 != null && ((unwrapped_1 = $ifLet0) || true))) {
            return (this.$failed = true);
        }
        ;
        _this.initUnsafeRawPointer({}, /*pointer_to_pointer*/ unwrapped_1);
        return;
    };
    /*Swift.(file).OpaquePointer.init(_:UnsafeMutablePointer<T>)*/
    /*Swift.(file).OpaquePointer.init(_:UnsafeMutablePointer<T>)*/
    OpaquePointer.prototype.initUnsafeMutablePointer = function ($info, from) {
        var _this = this;
        _this._rawValue = from._rawValue;
        return;
    };
    /*Swift.(file).OpaquePointer.init(_:UnsafeMutablePointer<T>?)*/
    /*Swift.(file).OpaquePointer.init(_:UnsafeMutablePointer<T>?)*/
    OpaquePointer.prototype.initOptional = function ($info, from) {
        var _this = this;
        var $ifLet0, unwrapped_1;
        if (!((($ifLet0 = from) || true) && $ifLet0 != null && ((unwrapped_1 = $ifLet0) || true))) {
            return (this.$failed = true);
        }
        ;
        _this.initUnsafeMutablePointer({}, unwrapped_1);
        return;
    };
    /*Swift.(file).OpaquePointer.==infix(_:OpaquePointer,_:OpaquePointer)*/
    /*Swift.(file).Equatable.==infix(_:Self,_:Self)*/
    OpaquePointer.infix_61_61 = function ($info, lhs, rhs) {
        return lhs == rhs;
    };
    /*Swift.(file).OpaquePointer.hash(into:Hasher)*/
    /*Swift.(file).Hashable.hash(into:Hasher)*/
    OpaquePointer.prototype.hashInto = function ($info, hasher$inout) {
        throw 'unsupported method Swift.(file).OpaquePointer.hash(into:Hasher) in ' + this.constructor.name;
    };
    /*Swift.(file).OpaquePointer.hashValue*/
    OpaquePointer.prototype.hashValue$get = function () {
        throw 'unsupported variable Swift.(file).OpaquePointer.hashValue in ' + this.constructor.name;
    };
    Object.defineProperty(OpaquePointer.prototype, "hashValue", {
        get: function () { return this.hashValue$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).OpaquePointer.debugDescription*/
    OpaquePointer.prototype.debugDescription$get = function () {
        var _this = this;
        return _rawPointerToString({}, _this._rawValue);
    };
    Object.defineProperty(OpaquePointer.prototype, "debugDescription", {
        get: function () { return this.debugDescription$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).OpaquePointer.init(_:UnsafeMutableRawPointer)*/
    /*Swift.(file).OpaquePointer.init(_:UnsafeMutableRawPointer)*/
    OpaquePointer.prototype.initUnsafeMutableRawPointer = function ($info, from) {
        var _this = this;
        _this._rawValue = from._rawValue;
        return;
    };
    /*Swift.(file).OpaquePointer.init(_:UnsafeMutableRawPointer?)*/
    /*Swift.(file).OpaquePointer.init(_:UnsafeMutableRawPointer?)*/
    OpaquePointer.prototype.initOptional = function ($info, from) {
        var _this = this;
        var $ifLet0, unwrapped_1;
        if (!((($ifLet0 = from) || true) && $ifLet0 != null && ((unwrapped_1 = $ifLet0) || true))) {
            return (this.$failed = true);
        }
        ;
        _this._rawValue = unwrapped_1._rawValue;
        return;
    };
    /*Swift.(file).OpaquePointer.init(_:UnsafeRawPointer)*/
    /*Swift.(file).OpaquePointer.init(_:UnsafeRawPointer)*/
    OpaquePointer.prototype.initUnsafeRawPointer = function ($info, from) {
        var _this = this;
        _this._rawValue = from._rawValue;
        return;
    };
    /*Swift.(file).OpaquePointer.init(_:UnsafeRawPointer?)*/
    /*Swift.(file).OpaquePointer.init(_:UnsafeRawPointer?)*/
    OpaquePointer.prototype.initOptional = function ($info, from) {
        var _this = this;
        var $ifLet0, unwrapped_1;
        if (!((($ifLet0 = from) || true) && $ifLet0 != null && ((unwrapped_1 = $ifLet0) || true))) {
            return (this.$failed = true);
        }
        ;
        _this._rawValue = unwrapped_1._rawValue;
        return;
    };
    OpaquePointer.prototype.init$vars = function () {
    };
    OpaquePointer.$struct = true;
    OpaquePointer.$infoAddress = '';
    OpaquePointer.initBitPatternInt$failable = true;
    OpaquePointer.initBitPatternUInt$failable = true;
    OpaquePointer.initOptional$failable = true;
    OpaquePointer.initOptional$failable = true;
    OpaquePointer.initOptional$failable = true;
    OpaquePointer.initOptional$failable = true;
    return OpaquePointer;
}());
if (typeof Equatable$implementation != 'undefined')
    _mixin(OpaquePointer, Equatable$implementation, false);
if (typeof Hashable$implementation != 'undefined')
    _mixin(OpaquePointer, Hashable$implementation, false);
if (typeof CustomDebugStringConvertible$implementation != 'undefined')
    _mixin(OpaquePointer, CustomDebugStringConvertible$implementation, false);
if (typeof CVarArg$implementation != 'undefined')
    _mixin(OpaquePointer, CVarArg$implementation, false);
var CVaListPointer = /** @class */ (function () {
    function CVaListPointer() {
    }
    /*Swift.(file).CVaListPointer.init(_fromUnsafeMutablePointer:UnsafeMutableRawPointer)*/
    /*Swift.(file).CVaListPointer.init(_fromUnsafeMutablePointer:UnsafeMutableRawPointer)*/
    CVaListPointer.prototype.init_fromUnsafeMutablePointerUnsafeMutableRawPointer = function ($info, from) {
        var _this = this;
        _this._value = _cloneStruct(from);
        return;
    };
    /*Swift.(file).CVaListPointer.debugDescription*/
    CVaListPointer.prototype.debugDescription$get = function () {
        var _this = this;
        return _this._value.debugDescription;
    };
    Object.defineProperty(CVaListPointer.prototype, "debugDescription", {
        get: function () { return this.debugDescription$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    CVaListPointer.prototype.init$vars = function () {
    };
    CVaListPointer.$struct = true;
    CVaListPointer.$infoAddress = '';
    return CVaListPointer;
}());
if (typeof CustomDebugStringConvertible$implementation != 'undefined')
    _mixin(CVaListPointer, CustomDebugStringConvertible$implementation, false);
var _DictionaryAnyHashableBox = /** @class */ (function () {
    function _DictionaryAnyHashableBox() {
    }
    /*Swift.(file)._DictionaryAnyHashableBox.init(_:Dictionary<Key, Value>)*/
    /*Swift.(file)._DictionaryAnyHashableBox.init(_:Dictionary<Key, Value>)*/
    _DictionaryAnyHashableBox.prototype.initDictionary = function ($info, value) {
        throw 'unsupported method Swift.(file)._DictionaryAnyHashableBox.init(_:Dictionary<Key, Value>) in ' + this.constructor.name;
    };
    _DictionaryAnyHashableBox.prototype.init$vars = function () {
    };
    _DictionaryAnyHashableBox.$struct = true;
    _DictionaryAnyHashableBox.$infoAddress = '';
    return _DictionaryAnyHashableBox;
}());
if (typeof _AnyHashableBox$implementation != 'undefined')
    _mixin(_DictionaryAnyHashableBox, _AnyHashableBox$implementation, false);
var _MergeError = /** @class */ (function () {
    function _MergeError() {
    }
    Object.defineProperty(_MergeError, "keyCollision", {
        get: function () { return Object.assign(new _MergeError(), __assign({ rawValue: "keyCollision" }, Array.from(arguments).slice(1))); },
        enumerable: true,
        configurable: true
    });
    /*Swift.(file)._MergeError.==(_:_MergeError,_:_MergeError)*/
    /*Swift.(file).Equatable.==infix(_:Self,_:Self)*/
    _MergeError.infix_61_61 = function ($info, a, b) {
        return a == b;
    };
    /*Swift.(file)._MergeError.hashValue*/
    _MergeError.prototype.hashValue$get = function () {
        throw 'unsupported variable Swift.(file)._MergeError.hashValue in ' + this.constructor.name;
    };
    Object.defineProperty(_MergeError.prototype, "hashValue", {
        get: function () { return this.hashValue$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file)._MergeError.hash(into:Hasher)*/
    /*Swift.(file).Hashable.hash(into:Hasher)*/
    _MergeError.prototype.hashInto = function ($info, hasher$inout) {
        throw 'unsupported method Swift.(file)._MergeError.hash(into:Hasher) in ' + this.constructor.name;
    };
    _MergeError.prototype.init$vars = function () {
    };
    _MergeError.$infoAddress = '';
    return _MergeError;
}());
if (typeof Error$implementation != 'undefined')
    _mixin(_MergeError, Error$implementation, false);
_mixin(_MergeError, _DefaultEnumImplementation, false);
var _SwiftDictionaryNSEnumerator = /** @class */ (function (_super) {
    __extends(_SwiftDictionaryNSEnumerator, _super);
    function _SwiftDictionaryNSEnumerator() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    /*Swift.(file)._SwiftDictionaryNSEnumerator.base*/
    _SwiftDictionaryNSEnumerator.prototype.base$get = function () {
        throw 'unsupported variable Swift.(file)._SwiftDictionaryNSEnumerator.base in ' + this.constructor.name;
    };
    Object.defineProperty(_SwiftDictionaryNSEnumerator.prototype, "base", {
        get: function () { return this.base$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file)._SwiftDictionaryNSEnumerator.bridgedKeys*/
    _SwiftDictionaryNSEnumerator.prototype.bridgedKeys$get = function () {
        throw 'unsupported variable Swift.(file)._SwiftDictionaryNSEnumerator.bridgedKeys in ' + this.constructor.name;
    };
    Object.defineProperty(_SwiftDictionaryNSEnumerator.prototype, "bridgedKeys", {
        get: function () { return this.bridgedKeys$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file)._SwiftDictionaryNSEnumerator.nextBucket*/
    _SwiftDictionaryNSEnumerator.prototype.nextBucket$get = function () {
        throw 'unsupported variable Swift.(file)._SwiftDictionaryNSEnumerator.nextBucket in ' + this.constructor.name;
    };
    Object.defineProperty(_SwiftDictionaryNSEnumerator.prototype, "nextBucket", {
        get: function () { return this.nextBucket$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file)._SwiftDictionaryNSEnumerator.endBucket*/
    _SwiftDictionaryNSEnumerator.prototype.endBucket$get = function () {
        throw 'unsupported variable Swift.(file)._SwiftDictionaryNSEnumerator.endBucket in ' + this.constructor.name;
    };
    Object.defineProperty(_SwiftDictionaryNSEnumerator.prototype, "endBucket", {
        get: function () { return this.endBucket$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file)._SwiftDictionaryNSEnumerator.init()*/
    /*Swift.(file).__SwiftNativeNSEnumerator.init()*/
    _SwiftDictionaryNSEnumerator.prototype.init = function ($info) {
        throw 'unsupported method Swift.(file)._SwiftDictionaryNSEnumerator.init() in ' + this.constructor.name;
    };
    /*Swift.(file)._SwiftDictionaryNSEnumerator.init(_:_NativeDictionary<Key, Value>)*/
    /*Swift.(file)._SwiftDictionaryNSEnumerator.init(_:_NativeDictionary<Key, Value>)*/
    _SwiftDictionaryNSEnumerator.prototype.init_NativeDictionary = function ($info, base) {
        throw 'unsupported method Swift.(file)._SwiftDictionaryNSEnumerator.init(_:_NativeDictionary<Key, Value>) in ' + this.constructor.name;
    };
    /*Swift.(file)._SwiftDictionaryNSEnumerator.init(_:_SwiftDeferredNSDictionary<Key, Value>)*/
    /*Swift.(file)._SwiftDictionaryNSEnumerator.init(_:_SwiftDeferredNSDictionary<Key, Value>)*/
    _SwiftDictionaryNSEnumerator.prototype.init_SwiftDeferredNSDictionary = function ($info, deferred) {
        throw 'unsupported method Swift.(file)._SwiftDictionaryNSEnumerator.init(_:_SwiftDeferredNSDictionary<Key, Value>) in ' + this.constructor.name;
    };
    /*Swift.(file)._SwiftDictionaryNSEnumerator.bridgedKey(at:_HashTable.Bucket)*/
    /*Swift.(file)._SwiftDictionaryNSEnumerator.bridgedKey(at:_HashTable.Bucket)*/
    _SwiftDictionaryNSEnumerator.prototype.bridgedKeyAt = function ($info, bucket) {
        throw 'unsupported method Swift.(file)._SwiftDictionaryNSEnumerator.bridgedKey(at:_HashTable.Bucket) in ' + this.constructor.name;
    };
    /*Swift.(file)._SwiftDictionaryNSEnumerator.nextObject()*/
    /*Swift.(file)._NSEnumerator.nextObject()*/
    _SwiftDictionaryNSEnumerator.prototype.nextObject = function ($info) {
        throw 'unsupported method Swift.(file)._SwiftDictionaryNSEnumerator.nextObject() in ' + this.constructor.name;
    };
    /*Swift.(file)._SwiftDictionaryNSEnumerator.countByEnumerating(with:UnsafeMutablePointer<_SwiftNSFastEnumerationState>,objects:UnsafeMutablePointer<AnyObject>,count:Int)*/
    /*Swift.(file)._SwiftDictionaryNSEnumerator.countByEnumerating(with:UnsafeMutablePointer<_SwiftNSFastEnumerationState>,objects:UnsafeMutablePointer<AnyObject>,count:Int)*/
    _SwiftDictionaryNSEnumerator.prototype.countByEnumeratingWithObjectsCount = function ($info, state, objects, count) {
        throw 'unsupported method Swift.(file)._SwiftDictionaryNSEnumerator.countByEnumerating(with:UnsafeMutablePointer<_SwiftNSFastEnumerationState>,objects:UnsafeMutablePointer<AnyObject>,count:Int) in ' + this.constructor.name;
    };
    _SwiftDictionaryNSEnumerator.prototype.init$vars = function () {
        if (_super.prototype.init$vars)
            _super.prototype.init$vars.call(this);
    };
    _SwiftDictionaryNSEnumerator.$infoAddress = '';
    return _SwiftDictionaryNSEnumerator;
}(__SwiftNativeNSEnumerator));
if (typeof _NSEnumerator$implementation != 'undefined')
    _mixin(_SwiftDictionaryNSEnumerator, _NSEnumerator$implementation, false);
var _SwiftDeferredNSDictionary = /** @class */ (function (_super) {
    __extends(_SwiftDeferredNSDictionary, _super);
    function _SwiftDeferredNSDictionary() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    /*Swift.(file)._SwiftDeferredNSDictionary.init(_:_NativeDictionary<Key, Value>)*/
    /*Swift.(file)._SwiftDeferredNSDictionary.init(_:_NativeDictionary<Key, Value>)*/
    _SwiftDeferredNSDictionary.prototype.init_NativeDictionary = function ($info, _native) {
        throw 'unsupported method Swift.(file)._SwiftDeferredNSDictionary.init(_:_NativeDictionary<Key, Value>) in ' + this.constructor.name;
    };
    /*Swift.(file)._SwiftDeferredNSDictionary.init(objects:UnsafePointer<AnyObject?>,forKeys:UnsafeRawPointer,count:Int)*/
    /*Swift.(file)._NSDictionaryCore.init(objects:UnsafePointer<AnyObject?>,forKeys:UnsafeRawPointer,count:Int)*/
    _SwiftDeferredNSDictionary.prototype.initObjectsUnsafePointerForKeysUnsafeRawPointerCountInt = function ($info, objects, forKeys, count) {
        throw 'unsupported method Swift.(file)._SwiftDeferredNSDictionary.init(objects:UnsafePointer<AnyObject?>,forKeys:UnsafeRawPointer,count:Int) in ' + this.constructor.name;
    };
    /*Swift.(file)._SwiftDeferredNSDictionary.bridgeKeys()*/
    /*Swift.(file)._SwiftDeferredNSDictionary.bridgeKeys()*/
    _SwiftDeferredNSDictionary.prototype.bridgeKeys = function ($info) {
        throw 'unsupported method Swift.(file)._SwiftDeferredNSDictionary.bridgeKeys() in ' + this.constructor.name;
    };
    /*Swift.(file)._SwiftDeferredNSDictionary.bridgeValues()*/
    /*Swift.(file)._SwiftDeferredNSDictionary.bridgeValues()*/
    _SwiftDeferredNSDictionary.prototype.bridgeValues = function ($info) {
        throw 'unsupported method Swift.(file)._SwiftDeferredNSDictionary.bridgeValues() in ' + this.constructor.name;
    };
    /*Swift.(file)._SwiftDeferredNSDictionary.copy(with:_SwiftNSZone?)*/
    /*Swift.(file)._NSDictionaryCore.copy(with:_SwiftNSZone?)*/
    /*Swift.(file)._NSCopying.copy(with:_SwiftNSZone?)*/
    _SwiftDeferredNSDictionary.prototype.copyWith = function ($info, zone) {
        throw 'unsupported method Swift.(file)._SwiftDeferredNSDictionary.copy(with:_SwiftNSZone?) in ' + this.constructor.name;
    };
    /*Swift.(file)._SwiftDeferredNSDictionary.object(forKey:AnyObject)*/
    /*Swift.(file)._NSDictionaryCore.object(forKey:AnyObject)*/
    _SwiftDeferredNSDictionary.prototype.objectForKey = function ($info, aKey) {
        throw 'unsupported method Swift.(file)._SwiftDeferredNSDictionary.object(forKey:AnyObject) in ' + this.constructor.name;
    };
    /*Swift.(file)._SwiftDeferredNSDictionary.keyEnumerator()*/
    /*Swift.(file)._NSDictionaryCore.keyEnumerator()*/
    _SwiftDeferredNSDictionary.prototype.keyEnumerator = function ($info) {
        throw 'unsupported method Swift.(file)._SwiftDeferredNSDictionary.keyEnumerator() in ' + this.constructor.name;
    };
    /*Swift.(file)._SwiftDeferredNSDictionary.getObjects(_:UnsafeMutablePointer<AnyObject>?,andKeys:UnsafeMutablePointer<AnyObject>?,count:Int)*/
    /*Swift.(file)._NSDictionaryCore.getObjects(_:UnsafeMutablePointer<AnyObject>?,andKeys:UnsafeMutablePointer<AnyObject>?,count:Int)*/
    _SwiftDeferredNSDictionary.prototype.getObjectsAndKeysCount = function ($info, objects, keys, count) {
        throw 'unsupported method Swift.(file)._SwiftDeferredNSDictionary.getObjects(_:UnsafeMutablePointer<AnyObject>?,andKeys:UnsafeMutablePointer<AnyObject>?,count:Int) in ' + this.constructor.name;
    };
    /*Swift.(file)._SwiftDeferredNSDictionary.enumerateKeysAndObjects(options:Int,using:@convention(block) (Unmanaged<AnyObject>, Unmanaged<AnyObject>, UnsafeMutablePointer<UInt8>) -> Void)*/
    /*Swift.(file)._SwiftDeferredNSDictionary.enumerateKeysAndObjects(options:Int,using:@convention(block) (Unmanaged<AnyObject>, Unmanaged<AnyObject>, UnsafeMutablePointer<UInt8>) -> Void)*/
    _SwiftDeferredNSDictionary.prototype.enumerateKeysAndObjectsOptionsUsing = function ($info, options, block) {
        throw 'unsupported method Swift.(file)._SwiftDeferredNSDictionary.enumerateKeysAndObjects(options:Int,using:@convention(block) (Unmanaged<AnyObject>, Unmanaged<AnyObject>, UnsafeMutablePointer<UInt8>) -> Void) in ' + this.constructor.name;
    };
    /*Swift.(file)._SwiftDeferredNSDictionary.count*/
    _SwiftDeferredNSDictionary.prototype.count$get = function () {
        throw 'unsupported variable Swift.(file)._SwiftDeferredNSDictionary.count in ' + this.constructor.name;
    };
    Object.defineProperty(_SwiftDeferredNSDictionary.prototype, "count", {
        get: function () { return this.count$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file)._SwiftDeferredNSDictionary.countByEnumerating(with:UnsafeMutablePointer<_SwiftNSFastEnumerationState>,objects:UnsafeMutablePointer<AnyObject>?,count:Int)*/
    /*Swift.(file)._NSDictionaryCore.countByEnumerating(with:UnsafeMutablePointer<_SwiftNSFastEnumerationState>,objects:UnsafeMutablePointer<AnyObject>?,count:Int)*/
    /*Swift.(file)._NSFastEnumeration.countByEnumerating(with:UnsafeMutablePointer<_SwiftNSFastEnumerationState>,objects:UnsafeMutablePointer<AnyObject>?,count:Int)*/
    _SwiftDeferredNSDictionary.prototype.countByEnumeratingWithObjectsCount = function ($info, state, objects, count) {
        throw 'unsupported method Swift.(file)._SwiftDeferredNSDictionary.countByEnumerating(with:UnsafeMutablePointer<_SwiftNSFastEnumerationState>,objects:UnsafeMutablePointer<AnyObject>?,count:Int) in ' + this.constructor.name;
    };
    /*Swift.(file)._SwiftDeferredNSDictionary.init()*/
    /*Swift.(file).__SwiftNativeNSDictionary.init()*/
    _SwiftDeferredNSDictionary.prototype.init = function ($info) {
        throw 'unsupported method Swift.(file)._SwiftDeferredNSDictionary.init() in ' + this.constructor.name;
    };
    _SwiftDeferredNSDictionary.prototype.init$vars = function () {
        if (_super.prototype.init$vars)
            _super.prototype.init$vars.call(this);
    };
    _SwiftDeferredNSDictionary.$infoAddress = '';
    return _SwiftDeferredNSDictionary;
}(__SwiftNativeNSDictionary));
if (typeof _NSDictionaryCore$implementation != 'undefined')
    _mixin(_SwiftDeferredNSDictionary, _NSDictionaryCore$implementation, false);
var _CocoaDictionary = /** @class */ (function () {
    function _CocoaDictionary() {
    }
    /*Swift.(file)._CocoaDictionary.object*/
    _CocoaDictionary.prototype.object$get = function () {
        throw 'unsupported variable Swift.(file)._CocoaDictionary.object in ' + this.constructor.name;
    };
    Object.defineProperty(_CocoaDictionary.prototype, "object", {
        get: function () { return this.object$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file)._CocoaDictionary.init(_:AnyObject)*/
    /*Swift.(file)._CocoaDictionary.init(_:AnyObject)*/
    _CocoaDictionary.prototype.initAnyObject = function ($info, object) {
        throw 'unsupported method Swift.(file)._CocoaDictionary.init(_:AnyObject) in ' + this.constructor.name;
    };
    /*Swift.(file)._CocoaDictionary.isEqual(to:_CocoaDictionary)*/
    /*Swift.(file)._CocoaDictionary.isEqual(to:_CocoaDictionary)*/
    _CocoaDictionary.prototype.isEqualTo = function ($info, other) {
        var _this = this;
        return _stdlib_NSObject_isEqual({}, _this.object, other.object);
    };
    /*Swift.(file)._CocoaDictionary.startIndex*/
    _CocoaDictionary.prototype.startIndex$get = function () {
        var _this = this;
        var allKeys = _cloneStruct(_stdlib_NSDictionary_allKeys({}, _this.object));
        return _create(_CocoaDictionary.Index, 'init_CocoaDictionaryIndexStorageOffsetInt', {}, _create(_CocoaDictionary.Index.Storage, 'init_CocoaDictionary_BridgingBuffer', {}, _this, allKeys), 0);
    };
    Object.defineProperty(_CocoaDictionary.prototype, "startIndex", {
        get: function () { return this.startIndex$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file)._CocoaDictionary.endIndex*/
    _CocoaDictionary.prototype.endIndex$get = function () {
        var _this = this;
        var allKeys = _cloneStruct(_stdlib_NSDictionary_allKeys({}, _this.object));
        return _create(_CocoaDictionary.Index, 'init_CocoaDictionaryIndexStorageOffsetInt', {}, _create(_CocoaDictionary.Index.Storage, 'init_CocoaDictionary_BridgingBuffer', {}, _this, allKeys), allKeys.count);
    };
    Object.defineProperty(_CocoaDictionary.prototype, "endIndex", {
        get: function () { return this.endIndex$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file)._CocoaDictionary.index(after:_CocoaDictionary.Index)*/
    /*Swift.(file)._DictionaryBuffer.index(after:Self.Index)*/
    _CocoaDictionary.prototype.indexAfter = function ($info, index) {
        var _this = this;
        _this.validate({}, index);
        var result = _cloneStruct(index);
        Int.infix_43_61({}, { get: function () { return result._offset; }, set: function ($val) { return result._offset = $val; } }, 1);
        return result;
    };
    /*Swift.(file)._CocoaDictionary.validate(_:_CocoaDictionary.Index)*/
    /*Swift.(file)._CocoaDictionary.validate(_:_CocoaDictionary.Index)*/
    _CocoaDictionary.prototype.validate = function ($info, index) {
        var _this = this;
        preconditionFileLine({}, function () { return infix_61_61_61({}, index.storage.base.object, _this.object); }, function () { return "Invalid index"; }, '?3', '?3');
        preconditionFileLine({}, function () { return Int.infix_60({}, index._offset, index.storage.allKeys.count); }, function () { return "Attempt to access endIndex"; }, '?3', '?3');
    };
    /*Swift.(file)._CocoaDictionary.formIndex(after:_CocoaDictionary.Index,isUnique:Bool)*/
    /*Swift.(file)._CocoaDictionary.formIndex(after:_CocoaDictionary.Index,isUnique:Bool)*/
    _CocoaDictionary.prototype.formIndexAfterIsUnique = function ($info, index$inout, isUnique) {
        var _this = this;
        var index = index$inout.get();
        var $result = (function () {
            _this.validate({}, index);
            Int.infix_43_61({}, { get: function () { return index._offset; }, set: function ($val) { return index._offset = $val; } }, 1);
        })();
        index$inout.set(index);
        return $result;
    };
    /*Swift.(file)._CocoaDictionary.index(forKey:_CocoaDictionary.Key)*/
    /*Swift.(file)._DictionaryBuffer.index(forKey:Self.Key)*/
    _CocoaDictionary.prototype.indexForKey = function ($info, key) {
        throw 'unsupported method Swift.(file)._CocoaDictionary.index(forKey:_CocoaDictionary.Key) in ' + this.constructor.name;
    };
    /*Swift.(file)._CocoaDictionary.count*/
    _CocoaDictionary.prototype.count$get = function () {
        var _this = this;
        var nsd = _cloneStruct(unsafeBitCastTo({}, _this.object, _NSDictionary));
        return nsd.count;
    };
    Object.defineProperty(_CocoaDictionary.prototype, "count", {
        get: function () { return this.count$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file)._CocoaDictionary.contains(_:_CocoaDictionary.Key)*/
    /*Swift.(file)._DictionaryBuffer.contains(_:Self.Key)*/
    _CocoaDictionary.prototype.contains = function ($info, key) {
        var _this = this;
        var nsd = _cloneStruct(unsafeBitCastTo({}, _this.object, _NSDictionary));
        return Optional.wrappedNotEqualsOptionalNilComparisonType({}, nsd.objectForKey({}, key), null);
    };
    /*Swift.(file)._CocoaDictionary.lookup(_:_CocoaDictionary.Key)*/
    /*Swift.(file)._DictionaryBuffer.lookup(_:Self.Key)*/
    _CocoaDictionary.prototype.lookup = function ($info, key) {
        var _this = this;
        var nsd = _cloneStruct(unsafeBitCastTo({}, _this.object, _NSDictionary));
        return nsd.objectForKey({}, key);
    };
    /*Swift.(file)._CocoaDictionary.lookup(_:_CocoaDictionary.Index)*/
    /*Swift.(file)._DictionaryBuffer.lookup(_:Self.Index)*/
    _CocoaDictionary.prototype.lookup = function ($info, index) {
        var _this = this;
        preconditionFileLine({}, function () { return infix_61_61_61({}, index.storage.base.object, _this.object); }, function () { return "Invalid index"; }, '?3', '?3');
        var key = _cloneStruct(index.storage.allKeys.subscript$get({}, index._offset));
        var value = _cloneStruct(/*dynamic_member_ref_expr*/ index.storage.base.object({}, key));
        return { 0: key, 1: value };
    };
    /*Swift.(file)._CocoaDictionary.key(at:_CocoaDictionary.Index)*/
    /*Swift.(file)._DictionaryBuffer.key(at:Self.Index)*/
    _CocoaDictionary.prototype.keyAt = function ($info, index) {
        var _this = this;
        preconditionFileLine({}, function () { return infix_61_61_61({}, index.storage.base.object, _this.object); }, function () { return "Invalid index"; }, '?3', '?3');
        return index.key;
    };
    /*Swift.(file)._CocoaDictionary.value(at:_CocoaDictionary.Index)*/
    /*Swift.(file)._DictionaryBuffer.value(at:Self.Index)*/
    _CocoaDictionary.prototype.valueAt = function ($info, index) {
        var _this = this;
        preconditionFileLine({}, function () { return infix_61_61_61({}, index.storage.base.object, _this.object); }, function () { return "Invalid index"; }, '?3', '?3');
        var key = _cloneStruct(index.storage.allKeys.subscript$get({}, index._offset));
        return /*dynamic_member_ref_expr*/ index.storage.base.object({}, key);
    };
    /*Swift.(file)._CocoaDictionary.mapValues(_:(Value) throws -> T)*/
    /*Swift.(file)._CocoaDictionary.mapValues(_:(Value) throws -> T)*/
    _CocoaDictionary.prototype.mapValues = function ($info, transform) {
        var _this = this;
        var result = _create(_NativeDictionary, 'initCapacityInt', {}, _this.count);
        {
            var $generator = _this.makeIterator({});
            while (true) {
                var $ifLet0, cocoaKey_1, cocoaValue_2;
                if (!((($ifLet0 = (((_.tmp0 = $generator.next({})) != null) ? (_.tmp0) : null)) || true) && $ifLet0 != null && ((cocoaKey_1 = $ifLet0[0]) || true) && ((cocoaValue_2 = $ifLet0[1]) || true)))
                    break;
                var key = _forceBridgeFromObjectiveC({}, cocoaKey_1, ((function () { throw '!unclarifiedGeneric:Key'; })()));
                var value = _forceBridgeFromObjectiveC({}, cocoaValue_2, ((function () { throw '!unclarifiedGeneric:Value'; })()));
                result.insertNewKeyValue({ $setThis: function ($val) { return result = $val; } }, key, transform({}, value));
            }
        }
        ;
        return result;
    };
    /*Swift.(file)._CocoaDictionary.makeIterator()*/
    /*Swift.(file).Sequence.makeIterator()*/
    _CocoaDictionary.prototype.makeIterator = function ($info) {
        var _this = this;
        return _create(_CocoaDictionary.Iterator, 'init_CocoaDictionary', {}, _this);
    };
    _CocoaDictionary.prototype.init$vars = function () {
    };
    var _x, _y, _z;
    _CocoaDictionary.$struct = true;
    _CocoaDictionary.$infoAddress = '';
    _CocoaDictionary.Index = (_x = /** @class */ (function () {
            function class_21() {
            }
            /*Swift.(file)._CocoaDictionary.Index.storage*/
            class_21.prototype.storage$get = function () {
                throw 'unsupported variable Swift.(file)._CocoaDictionary.Index.storage in ' + this.constructor.name;
            };
            Object.defineProperty(class_21.prototype, "storage", {
                get: function () { return this.storage$get(); },
                enumerable: true,
                configurable: true
            });
            ;
            /*Swift.(file)._CocoaDictionary.Index.init(_:_CocoaDictionary.Index.Storage,offset:Int)*/
            /*Swift.(file)._CocoaDictionary.Index.init(_:_CocoaDictionary.Index.Storage,offset:Int)*/
            class_21.prototype.init_CocoaDictionaryIndexStorageOffsetInt = function ($info, storage, offset) {
                throw 'unsupported method Swift.(file)._CocoaDictionary.Index.init(_:_CocoaDictionary.Index.Storage,offset:Int) in ' + this.constructor.name;
            };
            /*Swift.(file)._CocoaDictionary.Index.handleBitPattern*/
            class_21.prototype.handleBitPattern$get = function () {
                var _this = this;
                return unsafeBitCastTo({}, _this.storage, UInt);
            };
            Object.defineProperty(class_21.prototype, "handleBitPattern", {
                get: function () { return this.handleBitPattern$get(); },
                enumerable: true,
                configurable: true
            });
            ;
            /*Swift.(file)._CocoaDictionary.Index.dictionary*/
            class_21.prototype.dictionary$get = function () {
                var _this = this;
                return _this.storage.base;
            };
            Object.defineProperty(class_21.prototype, "dictionary", {
                get: function () { return this.dictionary$get(); },
                enumerable: true,
                configurable: true
            });
            ;
            /*Swift.(file)._CocoaDictionary.Index.key*/
            class_21.prototype.key$get = function () {
                var _this = this;
                preconditionFileLine({}, function () { return Int.infix_60({}, _this._offset, _this.storage.allKeys.count); }, function () { return "Attempting to access Dictionary elements using an invalid index"; }, '?3', '?3');
                return _this.storage.allKeys.subscript$get({}, _this._offset);
            };
            Object.defineProperty(class_21.prototype, "key", {
                get: function () { return this.key$get(); },
                enumerable: true,
                configurable: true
            });
            ;
            /*Swift.(file)._CocoaDictionary.Index.age*/
            class_21.prototype.age$get = function () {
                var _this = this;
                return _HashTable.ageFor({}, _this.storage.base.object);
            };
            Object.defineProperty(class_21.prototype, "age", {
                get: function () { return this.age$get(); },
                enumerable: true,
                configurable: true
            });
            ;
            /*Swift.(file)._CocoaDictionary.Index.==infix(_:_CocoaDictionary.Index,_:_CocoaDictionary.Index)*/
            /*Swift.(file).Equatable.==infix(_:Self,_:Self)*/
            class_21.infix_61_61 = function ($info, lhs, rhs) {
                var _this = this;
                preconditionFileLine({}, function () { return infix_61_61_61({}, lhs.storage.base.object, rhs.storage.base.object); }, function () { return "Comparing indexes from different dictionaries"; }, '?3', '?3');
                return Int.infix_61_61({}, lhs._offset, rhs._offset);
            };
            /*Swift.(file)._CocoaDictionary.Index.<infix(_:_CocoaDictionary.Index,_:_CocoaDictionary.Index)*/
            /*Swift.(file).Comparable.<infix(_:Self,_:Self)*/
            class_21.infix_60 = function ($info, lhs, rhs) {
                var _this = this;
                preconditionFileLine({}, function () { return infix_61_61_61({}, lhs.storage.base.object, rhs.storage.base.object); }, function () { return "Comparing indexes from different dictionaries"; }, '?3', '?3');
                return Int.infix_60({}, lhs._offset, rhs._offset);
            };
            class_21.prototype.init$vars = function () {
            };
            return class_21;
        }()),
        _x.$struct = true,
        _x.$infoAddress = '',
        _x.Storage = (_y = /** @class */ (function () {
                function class_22() {
                }
                /*Swift.(file)._CocoaDictionary.Index.Storage.base*/
                class_22.prototype.base$get = function () {
                    throw 'unsupported variable Swift.(file)._CocoaDictionary.Index.Storage.base in ' + this.constructor.name;
                };
                Object.defineProperty(class_22.prototype, "base", {
                    get: function () { return this.base$get(); },
                    enumerable: true,
                    configurable: true
                });
                ;
                /*Swift.(file)._CocoaDictionary.Index.Storage.allKeys*/
                class_22.prototype.allKeys$get = function () {
                    throw 'unsupported variable Swift.(file)._CocoaDictionary.Index.Storage.allKeys in ' + this.constructor.name;
                };
                Object.defineProperty(class_22.prototype, "allKeys", {
                    get: function () { return this.allKeys$get(); },
                    enumerable: true,
                    configurable: true
                });
                ;
                /*Swift.(file)._CocoaDictionary.Index.Storage.init(_:_CocoaDictionary,_:_BridgingBuffer)*/
                /*Swift.(file)._CocoaDictionary.Index.Storage.init(_:_CocoaDictionary,_:_BridgingBuffer)*/
                class_22.prototype.init_CocoaDictionary_BridgingBuffer = function ($info, base, allKeys) {
                    throw 'unsupported method Swift.(file)._CocoaDictionary.Index.Storage.init(_:_CocoaDictionary,_:_BridgingBuffer) in ' + this.constructor.name;
                };
                class_22.prototype.init$vars = function () {
                };
                return class_22;
            }()),
            _y.$infoAddress = '',
            _y),
        _x);
    _CocoaDictionary.Iterator = (_z = /** @class */ (function () {
            function class_23() {
            }
            /*Swift.(file)._CocoaDictionary.Iterator.base*/
            class_23.prototype.base$get = function () {
                throw 'unsupported variable Swift.(file)._CocoaDictionary.Iterator.base in ' + this.constructor.name;
            };
            Object.defineProperty(class_23.prototype, "base", {
                get: function () { return this.base$get(); },
                enumerable: true,
                configurable: true
            });
            ;
            /*Swift.(file)._CocoaDictionary.Iterator.itemIndex*/
            class_23.prototype.itemIndex$get = function () {
                throw 'unsupported variable Swift.(file)._CocoaDictionary.Iterator.itemIndex in ' + this.constructor.name;
            };
            Object.defineProperty(class_23.prototype, "itemIndex", {
                get: function () { return this.itemIndex$get(); },
                enumerable: true,
                configurable: true
            });
            ;
            /*Swift.(file)._CocoaDictionary.Iterator.itemCount*/
            class_23.prototype.itemCount$get = function () {
                throw 'unsupported variable Swift.(file)._CocoaDictionary.Iterator.itemCount in ' + this.constructor.name;
            };
            Object.defineProperty(class_23.prototype, "itemCount", {
                get: function () { return this.itemCount$get(); },
                enumerable: true,
                configurable: true
            });
            ;
            /*Swift.(file)._CocoaDictionary.Iterator.init(_:_CocoaDictionary)*/
            /*Swift.(file)._CocoaDictionary.Iterator.init(_:_CocoaDictionary)*/
            class_23.prototype.init_CocoaDictionary = function ($info, base) {
                throw 'unsupported method Swift.(file)._CocoaDictionary.Iterator.init(_:_CocoaDictionary) in ' + this.constructor.name;
            };
            /*Swift.(file)._CocoaDictionary.Iterator.nextKey()*/
            /*Swift.(file)._CocoaDictionary.Iterator.nextKey()*/
            class_23.prototype.nextKey = function ($info) {
                var _this = this;
                if ((Int.infix_60({}, _this.itemIndex, 0))) {
                    return null;
                }
                ;
                var base = _cloneStruct(_this.base);
                if ((Int.infix_61_61({}, _this.itemIndex, _this.itemCount))) {
                    var stackBufCount = _this._fastEnumerationStackBuf.count;
                    _this.itemCount = /*dynamic_member_ref_expr*/ base.object({}, _this._fastEnumerationStatePtr, _create(UnsafeMutableRawPointer, 'initUnsafeMutablePointer', {}, _this._fastEnumerationStackBufPtr).assumingMemoryBoundTo({}, AnyObject), stackBufCount);
                    if ((Int.infix_61_61({}, _this.itemCount, 0))) {
                        _this.itemIndex = -1;
                        return null;
                    }
                    ;
                    _this.itemIndex = 0;
                }
                ;
                var itemsPtrUP = _cloneStruct(_create(UnsafeMutableRawPointer, 'initAutoreleasingUnsafeMutablePointer', {}, _this._fastEnumerationState.itemsPtr).assumingMemoryBoundTo({}, AnyObject));
                var itemsPtr = _create(_UnmanagedAnyObjectArray, 'initUnsafeMutablePointer', {}, itemsPtrUP);
                var key = _cloneStruct(itemsPtr.subscript$get({}, _this.itemIndex));
                Int.infix_43_61({}, { get: function () { return _this.itemIndex; }, set: function ($val) { return _this.itemIndex = $val; } }, 1);
                return key;
            };
            /*Swift.(file)._CocoaDictionary.Iterator.next()*/
            /*Swift.(file).IteratorProtocol.next()*/
            class_23.prototype.next = function ($info) {
                var _this = this;
                var $ifLet0, key_1;
                if (!((($ifLet0 = _this.nextKey({})) || true) && $ifLet0 != null && ((key_1 = $ifLet0) || true))) {
                    return null;
                }
                ;
                var value = _cloneStruct(/*dynamic_member_ref_expr*/ _this.base.object({}, key_1));
                return { 0: key_1, 1: value };
            };
            class_23.prototype.init$vars = function () {
            };
            return class_23;
        }()),
        _z.$infoAddress = '',
        _z);
    return _CocoaDictionary;
}());
if (typeof Equatable$implementation != 'undefined')
    _mixin(_CocoaDictionary.Index, Equatable$implementation, false);
if (typeof Comparable$implementation != 'undefined')
    _mixin(_CocoaDictionary.Index, Comparable$implementation, false);
if (typeof IteratorProtocol$implementation != 'undefined')
    _mixin(_CocoaDictionary.Iterator, IteratorProtocol$implementation, false);
if (typeof _DictionaryBuffer$implementation != 'undefined')
    _mixin(_CocoaDictionary, _DictionaryBuffer$implementation, false);
if (typeof Sequence$implementation != 'undefined')
    _mixin(_CocoaDictionary, Sequence$implementation, false);
var _RawDictionaryStorage = /** @class */ (function (_super) {
    __extends(_RawDictionaryStorage, _super);
    function _RawDictionaryStorage() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    /*Swift.(file)._RawDictionaryStorage.init(_doNotCallMe:())*/
    /*Swift.(file)._RawDictionaryStorage.init(_doNotCallMe:())*/
    _RawDictionaryStorage.prototype.init_doNotCallMetuple_type = function ($info, _doNotCallMe) {
        throw 'unsupported method Swift.(file)._RawDictionaryStorage.init(_doNotCallMe:()) in ' + this.constructor.name;
    };
    /*Swift.(file)._RawDictionaryStorage.init()*/
    /*Swift.(file).__SwiftNativeNSDictionary.init()*/
    _RawDictionaryStorage.prototype.init = function ($info) {
        throw 'unsupported method Swift.(file)._RawDictionaryStorage.init() in ' + this.constructor.name;
    };
    /*Swift.(file)._RawDictionaryStorage.empty*/
    _RawDictionaryStorage.empty$get = function () {
        throw 'unsupported variable Swift.(file)._RawDictionaryStorage.empty in ' + this.constructor.name;
    };
    Object.defineProperty(_RawDictionaryStorage, "empty", {
        get: function () { return this.empty$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    _RawDictionaryStorage.prototype.init$vars = function () {
        if (_super.prototype.init$vars)
            _super.prototype.init$vars.call(this);
    };
    _RawDictionaryStorage.$infoAddress = '';
    return _RawDictionaryStorage;
}(__SwiftNativeNSDictionary));
var _EmptyDictionarySingleton = /** @class */ (function (_super) {
    __extends(_EmptyDictionarySingleton, _super);
    function _EmptyDictionarySingleton() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    /*Swift.(file)._EmptyDictionarySingleton.init(_doNotCallMe:())*/
    /*Swift.(file)._RawDictionaryStorage.init(_doNotCallMe:())*/
    _EmptyDictionarySingleton.prototype.init_doNotCallMetuple_type = function ($info, _doNotCallMe) {
        throw 'unsupported method Swift.(file)._EmptyDictionarySingleton.init(_doNotCallMe:()) in ' + this.constructor.name;
    };
    /*Swift.(file)._EmptyDictionarySingleton.init(objects:UnsafePointer<AnyObject?>,forKeys:UnsafeRawPointer,count:Int)*/
    /*Swift.(file)._NSDictionaryCore.init(objects:UnsafePointer<AnyObject?>,forKeys:UnsafeRawPointer,count:Int)*/
    _EmptyDictionarySingleton.prototype.initObjectsUnsafePointerForKeysUnsafeRawPointerCountInt = function ($info, objects, forKeys, count) {
        throw 'unsupported method Swift.(file)._EmptyDictionarySingleton.init(objects:UnsafePointer<AnyObject?>,forKeys:UnsafeRawPointer,count:Int) in ' + this.constructor.name;
    };
    /*Swift.(file)._EmptyDictionarySingleton.copy(with:_SwiftNSZone?)*/
    /*Swift.(file)._NSDictionaryCore.copy(with:_SwiftNSZone?)*/
    /*Swift.(file)._NSCopying.copy(with:_SwiftNSZone?)*/
    _EmptyDictionarySingleton.prototype.copyWith = function ($info, zone) {
        throw 'unsupported method Swift.(file)._EmptyDictionarySingleton.copy(with:_SwiftNSZone?) in ' + this.constructor.name;
    };
    /*Swift.(file)._EmptyDictionarySingleton.count*/
    _EmptyDictionarySingleton.prototype.count$get = function () {
        var _this = this;
        return 0;
    };
    Object.defineProperty(_EmptyDictionarySingleton.prototype, "count", {
        get: function () { return this.count$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file)._EmptyDictionarySingleton.countByEnumerating(with:UnsafeMutablePointer<_SwiftNSFastEnumerationState>,objects:UnsafeMutablePointer<AnyObject>?,count:Int)*/
    /*Swift.(file)._NSDictionaryCore.countByEnumerating(with:UnsafeMutablePointer<_SwiftNSFastEnumerationState>,objects:UnsafeMutablePointer<AnyObject>?,count:Int)*/
    /*Swift.(file)._NSFastEnumeration.countByEnumerating(with:UnsafeMutablePointer<_SwiftNSFastEnumerationState>,objects:UnsafeMutablePointer<AnyObject>?,count:Int)*/
    _EmptyDictionarySingleton.prototype.countByEnumeratingWithObjectsCount = function ($info, state, objects, count) {
        throw 'unsupported method Swift.(file)._EmptyDictionarySingleton.countByEnumerating(with:UnsafeMutablePointer<_SwiftNSFastEnumerationState>,objects:UnsafeMutablePointer<AnyObject>?,count:Int) in ' + this.constructor.name;
    };
    /*Swift.(file)._EmptyDictionarySingleton.object(forKey:AnyObject)*/
    /*Swift.(file)._NSDictionaryCore.object(forKey:AnyObject)*/
    _EmptyDictionarySingleton.prototype.objectForKey = function ($info, aKey) {
        var _this = this;
        return null;
    };
    /*Swift.(file)._EmptyDictionarySingleton.keyEnumerator()*/
    /*Swift.(file)._NSDictionaryCore.keyEnumerator()*/
    _EmptyDictionarySingleton.prototype.keyEnumerator = function ($info) {
        var _this = this;
        return _create(_SwiftEmptyNSEnumerator, 'init', {});
    };
    /*Swift.(file)._EmptyDictionarySingleton.getObjects(_:UnsafeMutablePointer<AnyObject>?,andKeys:UnsafeMutablePointer<AnyObject>?,count:Int)*/
    /*Swift.(file)._NSDictionaryCore.getObjects(_:UnsafeMutablePointer<AnyObject>?,andKeys:UnsafeMutablePointer<AnyObject>?,count:Int)*/
    _EmptyDictionarySingleton.prototype.getObjectsAndKeysCount = function ($info, objects, keys, count) {
        var _this = this;
    };
    _EmptyDictionarySingleton.prototype.init$vars = function () {
        if (_super.prototype.init$vars)
            _super.prototype.init$vars.call(this);
    };
    _EmptyDictionarySingleton.$infoAddress = '';
    return _EmptyDictionarySingleton;
}(_RawDictionaryStorage));
if (typeof _NSDictionaryCore$implementation != 'undefined')
    _mixin(_EmptyDictionarySingleton, _NSDictionaryCore$implementation, false);
var _DictionaryStorage = /** @class */ (function (_super) {
    __extends(_DictionaryStorage, _super);
    function _DictionaryStorage() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    /*Swift.(file)._DictionaryStorage.init(_doNotCallMe:())*/
    /*Swift.(file)._RawDictionaryStorage.init(_doNotCallMe:())*/
    _DictionaryStorage.prototype.init_doNotCallMetuple_type = function ($info, _doNotCallMe) {
        throw 'unsupported method Swift.(file)._DictionaryStorage.init(_doNotCallMe:()) in ' + this.constructor.name;
    };
    /*Swift.(file)._DictionaryStorage.asNative*/
    _DictionaryStorage.prototype.asNative$get = function () {
        throw 'unsupported variable Swift.(file)._DictionaryStorage.asNative in ' + this.constructor.name;
    };
    Object.defineProperty(_DictionaryStorage.prototype, "asNative", {
        get: function () { return this.asNative$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file)._DictionaryStorage.init(objects:UnsafePointer<AnyObject?>,forKeys:UnsafeRawPointer,count:Int)*/
    /*Swift.(file)._NSDictionaryCore.init(objects:UnsafePointer<AnyObject?>,forKeys:UnsafeRawPointer,count:Int)*/
    _DictionaryStorage.prototype.initObjectsUnsafePointerForKeysUnsafeRawPointerCountInt = function ($info, objects, forKeys, count) {
        throw 'unsupported method Swift.(file)._DictionaryStorage.init(objects:UnsafePointer<AnyObject?>,forKeys:UnsafeRawPointer,count:Int) in ' + this.constructor.name;
    };
    /*Swift.(file)._DictionaryStorage.copy(with:_SwiftNSZone?)*/
    /*Swift.(file)._NSDictionaryCore.copy(with:_SwiftNSZone?)*/
    /*Swift.(file)._NSCopying.copy(with:_SwiftNSZone?)*/
    _DictionaryStorage.prototype.copyWith = function ($info, zone) {
        throw 'unsupported method Swift.(file)._DictionaryStorage.copy(with:_SwiftNSZone?) in ' + this.constructor.name;
    };
    /*Swift.(file)._DictionaryStorage.count*/
    _DictionaryStorage.prototype.count$get = function () {
        throw 'unsupported variable Swift.(file)._DictionaryStorage.count in ' + this.constructor.name;
    };
    Object.defineProperty(_DictionaryStorage.prototype, "count", {
        get: function () { return this.count$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file)._DictionaryStorage.keyEnumerator()*/
    /*Swift.(file)._NSDictionaryCore.keyEnumerator()*/
    _DictionaryStorage.prototype.keyEnumerator = function ($info) {
        throw 'unsupported method Swift.(file)._DictionaryStorage.keyEnumerator() in ' + this.constructor.name;
    };
    /*Swift.(file)._DictionaryStorage.countByEnumerating(with:UnsafeMutablePointer<_SwiftNSFastEnumerationState>,objects:UnsafeMutablePointer<AnyObject>?,count:Int)*/
    /*Swift.(file)._NSDictionaryCore.countByEnumerating(with:UnsafeMutablePointer<_SwiftNSFastEnumerationState>,objects:UnsafeMutablePointer<AnyObject>?,count:Int)*/
    /*Swift.(file)._NSFastEnumeration.countByEnumerating(with:UnsafeMutablePointer<_SwiftNSFastEnumerationState>,objects:UnsafeMutablePointer<AnyObject>?,count:Int)*/
    _DictionaryStorage.prototype.countByEnumeratingWithObjectsCount = function ($info, state, objects, count) {
        throw 'unsupported method Swift.(file)._DictionaryStorage.countByEnumerating(with:UnsafeMutablePointer<_SwiftNSFastEnumerationState>,objects:UnsafeMutablePointer<AnyObject>?,count:Int) in ' + this.constructor.name;
    };
    /*Swift.(file)._DictionaryStorage.object(forKey:AnyObject)*/
    /*Swift.(file)._NSDictionaryCore.object(forKey:AnyObject)*/
    _DictionaryStorage.prototype.objectForKey = function ($info, aKey) {
        throw 'unsupported method Swift.(file)._DictionaryStorage.object(forKey:AnyObject) in ' + this.constructor.name;
    };
    /*Swift.(file)._DictionaryStorage.getObjects(_:UnsafeMutablePointer<AnyObject>?,andKeys:UnsafeMutablePointer<AnyObject>?,count:Int)*/
    /*Swift.(file)._NSDictionaryCore.getObjects(_:UnsafeMutablePointer<AnyObject>?,andKeys:UnsafeMutablePointer<AnyObject>?,count:Int)*/
    _DictionaryStorage.prototype.getObjectsAndKeysCount = function ($info, objects, keys, count) {
        throw 'unsupported method Swift.(file)._DictionaryStorage.getObjects(_:UnsafeMutablePointer<AnyObject>?,andKeys:UnsafeMutablePointer<AnyObject>?,count:Int) in ' + this.constructor.name;
    };
    /*Swift.(file)._DictionaryStorage.copy(original:_RawDictionaryStorage)*/
    /*Swift.(file)._DictionaryStorage.copy(original:_RawDictionaryStorage)*/
    _DictionaryStorage.copyOriginal = function ($info, original) {
        var _this = this;
        return _this.allocateScaleAgeSeed({}, original._scale, original._age, original._seed);
    };
    /*Swift.(file)._DictionaryStorage.resize(original:_RawDictionaryStorage,capacity:Int,move:Bool)*/
    /*Swift.(file)._DictionaryStorage.resize(original:_RawDictionaryStorage,capacity:Int,move:Bool)*/
    _DictionaryStorage.resizeOriginalCapacityMove = function ($info, original, capacity, move) {
        var _this = this;
        var scale = _HashTable.scaleForCapacity({}, capacity);
        return _this.allocateScaleAgeSeed({}, scale, null, null);
    };
    /*Swift.(file)._DictionaryStorage.allocate(capacity:Int)*/
    /*Swift.(file)._DictionaryStorage.allocate(capacity:Int)*/
    _DictionaryStorage.allocateCapacity = function ($info, capacity) {
        var _this = this;
        var scale = _HashTable.scaleForCapacity({}, capacity);
        return _this.allocateScaleAgeSeed({}, scale, null, null);
    };
    /*Swift.(file)._DictionaryStorage.convert(_:_CocoaDictionary,capacity:Int)*/
    /*Swift.(file)._DictionaryStorage.convert(_:_CocoaDictionary,capacity:Int)*/
    _DictionaryStorage.convertCapacity = function ($info, cocoa, capacity) {
        throw 'unsupported method Swift.(file)._DictionaryStorage.convert(_:_CocoaDictionary,capacity:Int) in ' + this.constructor.name;
    };
    /*Swift.(file)._DictionaryStorage.allocate(scale:Int8,age:Int32?,seed:Int?)*/
    /*Swift.(file)._DictionaryStorage.allocate(scale:Int8,age:Int32?,seed:Int?)*/
    _DictionaryStorage.allocateScaleAgeSeed = function ($info, scale, age, seed) {
        throw 'unsupported method Swift.(file)._DictionaryStorage.allocate(scale:Int8,age:Int32?,seed:Int?) in ' + this.constructor.name;
    };
    _DictionaryStorage.prototype.init$vars = function () {
        if (_super.prototype.init$vars)
            _super.prototype.init$vars.call(this);
    };
    _DictionaryStorage.$infoAddress = '';
    return _DictionaryStorage;
}(_RawDictionaryStorage));
if (typeof _NSDictionaryCore$implementation != 'undefined')
    _mixin(_DictionaryStorage, _NSDictionaryCore$implementation, false);
var _FloatAnyHashableBox = /** @class */ (function () {
    function _FloatAnyHashableBox() {
    }
    /*Swift.(file)._FloatAnyHashableBox.init(_:_FloatAnyHashableBox.Base)*/
    /*Swift.(file)._FloatAnyHashableBox.init(_:_FloatAnyHashableBox.Base)*/
    _FloatAnyHashableBox.prototype.init_FloatAnyHashableBoxBase = function ($info, value) {
        throw 'unsupported method Swift.(file)._FloatAnyHashableBox.init(_:_FloatAnyHashableBox.Base) in ' + this.constructor.name;
    };
    _FloatAnyHashableBox.prototype.init$vars = function () {
    };
    _FloatAnyHashableBox.$struct = true;
    _FloatAnyHashableBox.$infoAddress = '';
    return _FloatAnyHashableBox;
}());
if (typeof _AnyHashableBox$implementation != 'undefined')
    _mixin(_FloatAnyHashableBox, _AnyHashableBox$implementation, false);
var _DoubleAnyHashableBox = /** @class */ (function () {
    function _DoubleAnyHashableBox() {
    }
    /*Swift.(file)._DoubleAnyHashableBox.init(_:_DoubleAnyHashableBox.Base)*/
    /*Swift.(file)._DoubleAnyHashableBox.init(_:_DoubleAnyHashableBox.Base)*/
    _DoubleAnyHashableBox.prototype.init_DoubleAnyHashableBoxBase = function ($info, value) {
        throw 'unsupported method Swift.(file)._DoubleAnyHashableBox.init(_:_DoubleAnyHashableBox.Base) in ' + this.constructor.name;
    };
    _DoubleAnyHashableBox.prototype.init$vars = function () {
    };
    _DoubleAnyHashableBox.$struct = true;
    _DoubleAnyHashableBox.$infoAddress = '';
    return _DoubleAnyHashableBox;
}());
if (typeof _AnyHashableBox$implementation != 'undefined')
    _mixin(_DoubleAnyHashableBox, _AnyHashableBox$implementation, false);
var _Float80AnyHashableBox = /** @class */ (function () {
    function _Float80AnyHashableBox() {
    }
    /*Swift.(file)._Float80AnyHashableBox.init(_:_Float80AnyHashableBox.Base)*/
    /*Swift.(file)._Float80AnyHashableBox.init(_:_Float80AnyHashableBox.Base)*/
    _Float80AnyHashableBox.prototype.init_Float80AnyHashableBoxBase = function ($info, value) {
        throw 'unsupported method Swift.(file)._Float80AnyHashableBox.init(_:_Float80AnyHashableBox.Base) in ' + this.constructor.name;
    };
    _Float80AnyHashableBox.prototype.init$vars = function () {
    };
    _Float80AnyHashableBox.$struct = true;
    _Float80AnyHashableBox.$infoAddress = '';
    return _Float80AnyHashableBox;
}());
if (typeof _AnyHashableBox$implementation != 'undefined')
    _mixin(_Float80AnyHashableBox, _AnyHashableBox$implementation, false);
var AnyHashable = /** @class */ (function () {
    function AnyHashable() {
    }
    /*Swift.(file).AnyHashable.init(_box:_AnyHashableBox)*/
    /*Swift.(file).AnyHashable.init(_box:_AnyHashableBox)*/
    AnyHashable.prototype.init_box_AnyHashableBox = function ($info, box) {
        var _this = this;
        _this._box = _cloneStruct(box);
        return;
    };
    /*Swift.(file).AnyHashable.init(_:H)*/
    /*Swift.(file).AnyHashable.init(_:H)*/
    AnyHashable.prototype.init = function ($info, base) {
        var _this = this;
        var $ifLet0, custom_1;
        if ((($ifLet0 = (((_.tmp0 = base) != null) ? (_.tmp0._toCustomAnyHashable({})) : null)) || true) && $ifLet0 != null && ((custom_1 = $ifLet0) || true)) {
            $info.$setThis(_this = _cloneStruct(_cloneStruct(custom_1)));
            return;
        }
        ;
        _this.init_box_AnyHashableBox({}, _create(_ConcreteHashableBox, 'init', {}, false));
        _makeAnyHashableUpcastingToHashableBaseTypeStoringResultInto({}, base, /**/ { get: function () { return _this; }, set: function ($val) { return $info.$setThis(_this = _cloneStruct($val)); } });
        return;
    };
    /*Swift.(file).AnyHashable.init(_usingDefaultRepresentationOf:H)*/
    /*Swift.(file).AnyHashable.init(_usingDefaultRepresentationOf:H)*/
    AnyHashable.prototype.init_usingDefaultRepresentationOf = function ($info, base) {
        var _this = this;
        _this._box = _cloneStruct(_create(_ConcreteHashableBox, 'init', {}, base));
        return;
    };
    /*Swift.(file).AnyHashable.base*/
    AnyHashable.prototype.base$get = function () {
        var _this = this;
        return _this._box._base;
    };
    Object.defineProperty(AnyHashable.prototype, "base", {
        get: function () { return this.base$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).AnyHashable.==infix(_:AnyHashable,_:AnyHashable)*/
    /*Swift.(file).Equatable.==infix(_:Self,_:Self)*/
    AnyHashable.infix_61_61 = function ($info, lhs, rhs) {
        var _this = this;
        return infix_63_63({}, lhs._box._canonicalBox._isEqualTo({}, rhs._box._canonicalBox), function () { return false; });
    };
    /*Swift.(file).AnyHashable.hashValue*/
    AnyHashable.prototype.hashValue$get = function () {
        var _this = this;
        return _this._box._canonicalBox._hashValue;
    };
    Object.defineProperty(AnyHashable.prototype, "hashValue", {
        get: function () { return this.hashValue$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).AnyHashable.hash(into:Hasher)*/
    /*Swift.(file).Hashable.hash(into:Hasher)*/
    AnyHashable.prototype.hashInto = function ($info, hasher$inout) {
        var _this = this;
        var hasher = hasher$inout.get();
        var $result = (function () {
            _this._box._canonicalBox._hashInto({}, { get: function () { return hasher; }, set: function ($val) { return hasher = $val; } });
        })();
        hasher$inout.set(hasher);
        return $result;
    };
    /*Swift.(file).AnyHashable.description*/
    AnyHashable.prototype.description$get = function () {
        var _this = this;
        return _create(String, 'initDescribing', {}, _this.base);
    };
    Object.defineProperty(AnyHashable.prototype, "description", {
        get: function () { return this.description$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).AnyHashable.debugDescription*/
    AnyHashable.prototype.debugDescription$get = function () {
        var _this = this;
        return String.infix_43({}, String.infix_43({}, "AnyHashable(", _create(String, 'initReflecting', {}, _this.base)), ")");
    };
    Object.defineProperty(AnyHashable.prototype, "debugDescription", {
        get: function () { return this.debugDescription$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).AnyHashable.customMirror*/
    AnyHashable.prototype.customMirror$get = function () {
        var _this = this;
        return _create(Mirror, 'initChildrenKeyValuePairsDisplayStyleOptionalAncestorRepresentationMirrorAncestorRepresentation', {}, _this, new Map([["value", _this.base]]), nil /*!default_value*/, generated /*!default_value*/);
    };
    Object.defineProperty(AnyHashable.prototype, "customMirror", {
        get: function () { return this.customMirror$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    AnyHashable.prototype.init$vars = function () {
    };
    AnyHashable.$struct = true;
    AnyHashable.$infoAddress = '';
    return AnyHashable;
}());
if (typeof Equatable$implementation != 'undefined')
    _mixin(AnyHashable, Equatable$implementation, false);
if (typeof Hashable$implementation != 'undefined')
    _mixin(AnyHashable, Hashable$implementation, false);
if (typeof CustomStringConvertible$implementation != 'undefined')
    _mixin(AnyHashable, CustomStringConvertible$implementation, false);
if (typeof CustomDebugStringConvertible$implementation != 'undefined')
    _mixin(AnyHashable, CustomDebugStringConvertible$implementation, false);
if (typeof CustomReflectable$implementation != 'undefined')
    _mixin(AnyHashable, CustomReflectable$implementation, false);
var _SwiftEmptyNSEnumerator = /** @class */ (function (_super) {
    __extends(_SwiftEmptyNSEnumerator, _super);
    function _SwiftEmptyNSEnumerator() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    /*Swift.(file)._SwiftEmptyNSEnumerator.init()*/
    /*Swift.(file).__SwiftNativeNSEnumerator.init()*/
    _SwiftEmptyNSEnumerator.prototype.init = function ($info) {
        throw 'unsupported method Swift.(file)._SwiftEmptyNSEnumerator.init() in ' + this.constructor.name;
    };
    /*Swift.(file)._SwiftEmptyNSEnumerator.nextObject()*/
    /*Swift.(file)._NSEnumerator.nextObject()*/
    _SwiftEmptyNSEnumerator.prototype.nextObject = function ($info) {
        throw 'unsupported method Swift.(file)._SwiftEmptyNSEnumerator.nextObject() in ' + this.constructor.name;
    };
    /*Swift.(file)._SwiftEmptyNSEnumerator.countByEnumerating(with:UnsafeMutablePointer<_SwiftNSFastEnumerationState>,objects:UnsafeMutablePointer<AnyObject>,count:Int)*/
    /*Swift.(file)._SwiftEmptyNSEnumerator.countByEnumerating(with:UnsafeMutablePointer<_SwiftNSFastEnumerationState>,objects:UnsafeMutablePointer<AnyObject>,count:Int)*/
    _SwiftEmptyNSEnumerator.prototype.countByEnumeratingWithObjectsCount = function ($info, state, objects, count) {
        throw 'unsupported method Swift.(file)._SwiftEmptyNSEnumerator.countByEnumerating(with:UnsafeMutablePointer<_SwiftNSFastEnumerationState>,objects:UnsafeMutablePointer<AnyObject>,count:Int) in ' + this.constructor.name;
    };
    _SwiftEmptyNSEnumerator.prototype.init$vars = function () {
        if (_super.prototype.init$vars)
            _super.prototype.init$vars.call(this);
    };
    _SwiftEmptyNSEnumerator.$infoAddress = '';
    return _SwiftEmptyNSEnumerator;
}(__SwiftNativeNSEnumerator));
if (typeof _NSEnumerator$implementation != 'undefined')
    _mixin(_SwiftEmptyNSEnumerator, _NSEnumerator$implementation, false);
var _BridgingHashBuffer = /** @class */ (function (_super) {
    __extends(_BridgingHashBuffer, _super);
    function _BridgingHashBuffer() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    /*Swift.(file)._BridgingHashBuffer.allocate(owner:AnyObject,hashTable:_HashTable)*/
    /*Swift.(file)._BridgingHashBuffer.allocate(owner:AnyObject,hashTable:_HashTable)*/
    _BridgingHashBuffer.allocateOwnerHashTable = function ($info, owner, hashTable) {
        throw 'unsupported method Swift.(file)._BridgingHashBuffer.allocate(owner:AnyObject,hashTable:_HashTable) in ' + this.constructor.name;
    };
    /*Swift.(file)._BridgingHashBuffer.subscript(_:_HashTable.Bucket)*/
    /*Swift.(file)._BridgingHashBuffer.subscript(_:_HashTable.Bucket)*/
    _BridgingHashBuffer.prototype.subscript$get = function ($info, bucket) {
        throw 'unsupported method Swift.(file)._BridgingHashBuffer.subscript(_:_HashTable.Bucket) in ' + this.constructor.name;
    };
    /*Swift.(file)._BridgingHashBuffer.initialize(at:_HashTable.Bucket,to:AnyObject)*/
    /*Swift.(file)._BridgingHashBuffer.initialize(at:_HashTable.Bucket,to:AnyObject)*/
    _BridgingHashBuffer.prototype.initializeAtTo = function ($info, bucket, object) {
        throw 'unsupported method Swift.(file)._BridgingHashBuffer.initialize(at:_HashTable.Bucket,to:AnyObject) in ' + this.constructor.name;
    };
    /*Swift.(file)._BridgingHashBuffer.init(_doNotCallMe:())*/
    /*Swift.(file).ManagedBuffer.init(_doNotCallMe:())*/
    _BridgingHashBuffer.prototype.init_doNotCallMetuple_type = function ($info, _doNotCallMe) {
        throw 'unsupported method Swift.(file)._BridgingHashBuffer.init(_doNotCallMe:()) in ' + this.constructor.name;
    };
    _BridgingHashBuffer.prototype.init$vars = function () {
        if (_super.prototype.init$vars)
            _super.prototype.init$vars.call(this);
    };
    var _0;
    _BridgingHashBuffer.$infoAddress = '';
    _BridgingHashBuffer.Header = (_0 = /** @class */ (function () {
            function class_24() {
            }
            /*Swift.(file)._BridgingHashBuffer.Header.owner*/
            class_24.prototype.owner$get = function () {
                throw 'unsupported variable Swift.(file)._BridgingHashBuffer.Header.owner in ' + this.constructor.name;
            };
            Object.defineProperty(class_24.prototype, "owner", {
                get: function () { return this.owner$get(); },
                enumerable: true,
                configurable: true
            });
            ;
            /*Swift.(file)._BridgingHashBuffer.Header.hashTable*/
            class_24.prototype.hashTable$get = function () {
                throw 'unsupported variable Swift.(file)._BridgingHashBuffer.Header.hashTable in ' + this.constructor.name;
            };
            Object.defineProperty(class_24.prototype, "hashTable", {
                get: function () { return this.hashTable$get(); },
                enumerable: true,
                configurable: true
            });
            ;
            /*Swift.(file)._BridgingHashBuffer.Header.init(owner:AnyObject,hashTable:_HashTable)*/
            /*Swift.(file)._BridgingHashBuffer.Header.init(owner:AnyObject,hashTable:_HashTable)*/
            class_24.prototype.initOwnerAnyObjectHashTable_HashTable = function ($info, owner, hashTable) {
                throw 'unsupported method Swift.(file)._BridgingHashBuffer.Header.init(owner:AnyObject,hashTable:_HashTable) in ' + this.constructor.name;
            };
            class_24.prototype.init$vars = function () {
            };
            return class_24;
        }()),
        _0.$struct = true,
        _0.$infoAddress = '',
        _0);
    return _BridgingHashBuffer;
}(ManagedBuffer));
var _HashTable = /** @class */ (function () {
    function _HashTable() {
    }
    /*Swift.(file)._HashTable.words*/
    _HashTable.prototype.words$get = function () {
        throw 'unsupported variable Swift.(file)._HashTable.words in ' + this.constructor.name;
    };
    Object.defineProperty(_HashTable.prototype, "words", {
        get: function () { return this.words$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file)._HashTable.bucketMask*/
    _HashTable.prototype.bucketMask$get = function () {
        throw 'unsupported variable Swift.(file)._HashTable.bucketMask in ' + this.constructor.name;
    };
    Object.defineProperty(_HashTable.prototype, "bucketMask", {
        get: function () { return this.bucketMask$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file)._HashTable.init(words:UnsafeMutablePointer<_HashTable.Word>,bucketCount:Int)*/
    /*Swift.(file)._HashTable.init(words:UnsafeMutablePointer<_HashTable.Word>,bucketCount:Int)*/
    _HashTable.prototype.initWordsUnsafeMutablePointerBucketCountInt = function ($info, words, bucketCount) {
        throw 'unsupported method Swift.(file)._HashTable.init(words:UnsafeMutablePointer<_HashTable.Word>,bucketCount:Int) in ' + this.constructor.name;
    };
    /*Swift.(file)._HashTable.bucketCount*/
    _HashTable.prototype.bucketCount$get = function () {
        throw 'unsupported variable Swift.(file)._HashTable.bucketCount in ' + this.constructor.name;
    };
    Object.defineProperty(_HashTable.prototype, "bucketCount", {
        get: function () { return this.bucketCount$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file)._HashTable.wordCount*/
    _HashTable.prototype.wordCount$get = function () {
        throw 'unsupported variable Swift.(file)._HashTable.wordCount in ' + this.constructor.name;
    };
    Object.defineProperty(_HashTable.prototype, "wordCount", {
        get: function () { return this.wordCount$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file)._HashTable.maxLoadFactor*/
    _HashTable.maxLoadFactor$get = function () {
        var _this = this;
        return Double.infix_47({}, 3, 4);
    };
    Object.defineProperty(_HashTable, "maxLoadFactor", {
        get: function () {
            return this.maxLoadFactor$get();
        },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file)._HashTable.capacity(forScale:Int8)*/
    /*Swift.(file)._HashTable.capacity(forScale:Int8)*/
    _HashTable.capacityForScale = function ($info, scale) {
        var _this = this;
        var bucketCount = Int.infix_38_60_60({}, 1, scale);
        return _create(Int, 'initDouble', {}, Double.infix_42({}, _create(Double, 'initInt', {}, bucketCount), _this.maxLoadFactor));
    };
    /*Swift.(file)._HashTable.scale(forCapacity:Int)*/
    /*Swift.(file)._HashTable.scale(forCapacity:Int)*/
    _HashTable.scaleForCapacity = function ($info, capacity) {
        var _this = this;
        var capacity = /*dot_syntax_base_ignored*/ max({}, capacity, 1);
        var minimumEntries = /*dot_syntax_base_ignored*/ max({}, _create(Int, 'initDouble', {}, Double.prototype.rounded.call(Double.infix_47({}, _create(Double, 'initInt', {}, capacity), _this.maxLoadFactor), {}, FloatingPointRoundingRule.up)), Int.infix_43({}, capacity, 1));
        var exponent = Int.infix_43({}, Int.prototype._binaryLogarithm.call(Int.infix_45({}, /*dot_syntax_base_ignored*/ max({}, minimumEntries, 2), 1), {}), 1);
        var scale = _create(Int8, 'initTruncatingIfNeeded', {}, exponent);
        return scale;
    };
    /*Swift.(file)._HashTable.age(for:AnyObject)*/
    /*Swift.(file)._HashTable.age(for:AnyObject)*/
    _HashTable.ageFor = function ($info, cocoa) {
        var _this = this;
        var hash = _create(ObjectIdentifier, 'initAnyObject', {}, cocoa).hashValue;
        return _create(Int32, 'initTruncatingIfNeeded', {}, hash);
    };
    /*Swift.(file)._HashTable.hashSeed(for:AnyObject,scale:Int8)*/
    /*Swift.(file)._HashTable.hashSeed(for:AnyObject,scale:Int8)*/
    _HashTable.hashSeedForScale = function ($info, object, scale) {
        var _this = this;
        if ((Hasher._isDeterministic)) {
            return _create(Int, 'initT', {}, scale);
        }
        ;
        return unsafeBitCastTo({}, object, Int);
    };
    /*Swift.(file)._HashTable.makeIterator()*/
    /*Swift.(file).Sequence.makeIterator()*/
    _HashTable.prototype.makeIterator = function ($info) {
        var _this = this;
        return _create(_HashTable.Iterator, 'init_HashTable', {}, _this);
    };
    /*Swift.(file)._HashTable.isValid(_:_HashTable.Bucket)*/
    /*Swift.(file)._HashTable.isValid(_:_HashTable.Bucket)*/
    _HashTable.prototype.isValid = function ($info, bucket) {
        var _this = this;
        return Bool.infix_38_38({}, Int.infix_62_61({}, bucket.offset, 0), function () { return Int.infix_60({}, bucket.offset, _this.bucketCount); });
    };
    /*Swift.(file)._HashTable.isOccupied(_:_HashTable.Bucket)*/
    /*Swift.(file)._HashTable.isOccupied(_:_HashTable.Bucket)*/
    _HashTable.prototype.isOccupied = function ($info, bucket) {
        var _this = this;
        return Bool.infix_38_38({}, _this.isValid({}, bucket), function () { return _this._isOccupied({}, bucket); });
    };
    /*Swift.(file)._HashTable.checkOccupied(_:_HashTable.Bucket)*/
    /*Swift.(file)._HashTable.checkOccupied(_:_HashTable.Bucket)*/
    _HashTable.prototype.checkOccupied = function ($info, bucket) {
        var _this = this;
        preconditionFileLine({}, function () { return _this.isOccupied({}, bucket); }, function () { return "Attempting to access Collection elements using an invalid Index"; }, '?3', '?3');
    };
    /*Swift.(file)._HashTable.occupiedBucket(after:_HashTable.Bucket)*/
    /*Swift.(file)._HashTable.occupiedBucket(after:_HashTable.Bucket)*/
    _HashTable.prototype.occupiedBucketAfter = function ($info, bucket) {
        var _this = this;
        var word = bucket.word;
        var $ifLet0, bit_1;
        if ((($ifLet0 = _this.words.subscript$get({}, word).intersectingElementsAbove({}, bucket.bit).minimum) || true) && $ifLet0 != null && ((bit_1 = $ifLet0) || true)) {
            return _create(_HashTable.Bucket, 'initWordIntBitInt', {}, word, bit_1);
        }
        ;
        return _this._firstOccupiedBucketFromWord({}, Int.infix_43({}, word, 1));
    };
    /*Swift.(file)._HashTable.startBucket*/
    _HashTable.prototype.startBucket$get = function () {
        var _this = this;
        return _this._firstOccupiedBucketFromWord({}, 0);
    };
    Object.defineProperty(_HashTable.prototype, "startBucket", {
        get: function () { return this.startBucket$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file)._HashTable.endBucket*/
    _HashTable.prototype.endBucket$get = function () {
        var _this = this;
        return _create(_HashTable.Bucket, 'initOffsetInt', {}, _this.bucketCount);
    };
    Object.defineProperty(_HashTable.prototype, "endBucket", {
        get: function () { return this.endBucket$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file)._HashTable.idealBucket(forHashValue:Int)*/
    /*Swift.(file)._HashTable.idealBucket(forHashValue:Int)*/
    _HashTable.prototype.idealBucketForHashValue = function ($info, hashValue) {
        var _this = this;
        return _create(_HashTable.Bucket, 'initOffsetInt', {}, Int.infix_38({}, hashValue, _this.bucketMask));
    };
    /*Swift.(file)._HashTable.bucket(wrappedAfter:_HashTable.Bucket)*/
    /*Swift.(file)._HashTable.bucket(wrappedAfter:_HashTable.Bucket)*/
    _HashTable.prototype.bucketWrappedAfter = function ($info, bucket) {
        var _this = this;
        return _create(_HashTable.Bucket, 'initOffsetInt', {}, Int.infix_38({}, Int.infix_38_43({}, bucket.offset, 1), _this.bucketMask));
    };
    /*Swift.(file)._HashTable.previousHole(before:_HashTable.Bucket)*/
    /*Swift.(file)._HashTable.previousHole(before:_HashTable.Bucket)*/
    _HashTable.prototype.previousHoleBefore = function ($info, bucket) {
        var _this = this;
        var word = bucket.word;
        var $ifLet0, bit_1;
        if ((($ifLet0 = _this.words.subscript$get({}, word).complement.intersectingElementsBelow({}, bucket.bit).maximum) || true) && $ifLet0 != null && ((bit_1 = $ifLet0) || true)) {
            return _create(_HashTable.Bucket, 'initWordIntBitInt', {}, word, bit_1);
        }
        ;
        var wrap = false;
        while (true) {
            if (!((true)))
                break;
            Int.infix_45_61({}, { get: function () { return word; }, set: function ($val) { return word = $val; } }, 1);
            if ((Int.infix_60({}, word, 0))) {
                preconditionFileLine({}, function () { return Bool.prefix_33({}, wrap); }, function () { return "Hash table has no holes"; }, '?3', '?3');
                wrap = true;
                word = Int.infix_45({}, _this.wordCount, 1);
            }
            ;
            var $ifLet2, bit_3;
            if ((($ifLet2 = _this.words.subscript$get({}, word).complement.maximum) || true) && $ifLet2 != null && ((bit_3 = $ifLet2) || true)) {
                return _create(_HashTable.Bucket, 'initWordIntBitInt', {}, word, bit_3);
            }
            ;
        }
    };
    /*Swift.(file)._HashTable.nextHole(atOrAfter:_HashTable.Bucket)*/
    /*Swift.(file)._HashTable.nextHole(atOrAfter:_HashTable.Bucket)*/
    _HashTable.prototype.nextHoleAtOrAfter = function ($info, bucket) {
        var _this = this;
        var word = bucket.word;
        var $ifLet0, bit_1;
        if ((($ifLet0 = _this.words.subscript$get({}, word).complement.subtractingElementsBelow({}, bucket.bit).minimum) || true) && $ifLet0 != null && ((bit_1 = $ifLet0) || true)) {
            return _create(_HashTable.Bucket, 'initWordIntBitInt', {}, word, bit_1);
        }
        ;
        var wrap = false;
        while (true) {
            if (!((true)))
                break;
            Int.infix_38_43_61({}, { get: function () { return word; }, set: function ($val) { return word = $val; } }, 1);
            if ((Int.infix_61_61({}, word, _this.wordCount))) {
                preconditionFileLine({}, function () { return Bool.prefix_33({}, wrap); }, function () { return "Hash table has no holes"; }, '?3', '?3');
                wrap = true;
                word = 0;
            }
            ;
            var $ifLet2, bit_3;
            if ((($ifLet2 = _this.words.subscript$get({}, word).complement.minimum) || true) && $ifLet2 != null && ((bit_3 = $ifLet2) || true)) {
                return _create(_HashTable.Bucket, 'initWordIntBitInt', {}, word, bit_3);
            }
            ;
        }
    };
    /*Swift.(file)._HashTable.copyContents(of:_HashTable)*/
    /*Swift.(file)._HashTable.copyContents(of:_HashTable)*/
    _HashTable.prototype.copyContentsOf = function ($info, other) {
        var _this = this;
        _this.words.assignFromCount({}, /*pointer_to_pointer*/ other.words, _this.wordCount);
    };
    /*Swift.(file)._HashTable.insertNew(hashValue:Int)*/
    /*Swift.(file)._HashTable.insertNew(hashValue:Int)*/
    _HashTable.prototype.insertNewHashValue = function ($info, hashValue) {
        var _this = this;
        var hole = _cloneStruct(_this.nextHoleAtOrAfter({}, _this.idealBucketForHashValue({}, hashValue)));
        _this.insert({}, hole);
        return hole;
    };
    /*Swift.(file)._HashTable.insert(_:_HashTable.Bucket)*/
    /*Swift.(file)._HashTable.insert(_:_HashTable.Bucket)*/
    _HashTable.prototype.insert = function ($info, bucket) {
        var _this = this;
        _this.words.subscript$get({}, bucket.word).uncheckedInsert({ $setThis: function ($val) { return _this.words.subscript$set({ $setThis: function ($val) { return _this.words = _cloneStruct($val); } }, $val, bucket.word); } }, bucket.bit);
    };
    /*Swift.(file)._HashTable.clear()*/
    /*Swift.(file)._HashTable.clear()*/
    _HashTable.prototype.clear = function ($info) {
        var _this = this;
        if ((Int.infix_60({}, _this.bucketCount, _HashTable.Word.capacity))) {
            _this.words.subscript$set({ $setThis: function ($val) { return _this.words = _cloneStruct($val); } }, _cloneStruct(_HashTable.Word.allBits.subtractingElementsBelow({}, _this.bucketCount)), 0);
        }
        else {
            _this.words.assignRepeatingCount({}, _HashTable.Word.empty, _this.wordCount);
        }
    };
    /*Swift.(file)._HashTable.delete(at:_HashTable.Bucket,with:D)*/
    /*Swift.(file)._HashTable.delete(at:_HashTable.Bucket,with:D)*/
    _HashTable.prototype.deleteAtWith = function ($info, bucket, delegate) {
        var _this = this;
        var hole = _cloneStruct(bucket);
        var candidate = _cloneStruct(_this.bucketWrappedAfter({}, hole));
        if (!((_this._isOccupied({}, candidate)))) {
            _this.words.subscript$get({}, hole.word).uncheckedRemove({ $setThis: function ($val) { return _this.words.subscript$set({ $setThis: function ($val) { return _this.words = _cloneStruct($val); } }, $val, hole.word); } }, hole.bit);
            return;
        }
        ;
        var start = _cloneStruct(_this.bucketWrappedAfter({}, _this.previousHoleBefore({}, bucket)));
        var _loop_1 = function () {
            if (!((_this._isOccupied({}, candidate))))
                return "break";
            var candidateHash = delegate.hashValueAt({}, candidate);
            var ideal = _cloneStruct(_this.idealBucketForHashValue({}, candidateHash));
            var c0 = _HashTable.Bucket.infix_62_61({}, ideal, start);
            var c1 = _HashTable.Bucket.infix_60_61({}, ideal, hole);
            if (((_HashTable.Bucket.infix_60_61({}, start, hole) ? Bool.infix_38_38({}, c0, function () { return c1; }) : Bool.infix_124_124({}, c0, function () { return c1; })))) {
                delegate.moveEntryFromTo({}, candidate, hole);
                hole = _cloneStruct(candidate);
            }
            ;
            candidate = _cloneStruct(_this.bucketWrappedAfter({}, candidate));
        };
        while (true) {
            var state_1 = _loop_1();
            if (state_1 === "break")
                break;
        }
        ;
        _this.words.subscript$get({}, hole.word).uncheckedRemove({ $setThis: function ($val) { return _this.words.subscript$set({ $setThis: function ($val) { return _this.words = _cloneStruct($val); } }, $val, hole.word); } }, hole.bit);
    };
    _HashTable.prototype.init$vars = function () {
    };
    var _1, _2, _3;
    _HashTable.$struct = true;
    _HashTable.$infoAddress = '';
    _HashTable.Bucket = (_1 = /** @class */ (function () {
            function class_25() {
            }
            /*Swift.(file)._HashTable.Bucket.offset*/
            class_25.prototype.offset$get = function () {
                throw 'unsupported variable Swift.(file)._HashTable.Bucket.offset in ' + this.constructor.name;
            };
            Object.defineProperty(class_25.prototype, "offset", {
                get: function () { return this.offset$get(); },
                enumerable: true,
                configurable: true
            });
            ;
            /*Swift.(file)._HashTable.Bucket.init(offset:Int)*/
            /*Swift.(file)._HashTable.Bucket.init(offset:Int)*/
            class_25.prototype.initOffsetInt = function ($info, offset) {
                throw 'unsupported method Swift.(file)._HashTable.Bucket.init(offset:Int) in ' + this.constructor.name;
            };
            /*Swift.(file)._HashTable.Bucket.init(word:Int,bit:Int)*/
            /*Swift.(file)._HashTable.Bucket.init(word:Int,bit:Int)*/
            class_25.prototype.initWordIntBitInt = function ($info, word, bit) {
                throw 'unsupported method Swift.(file)._HashTable.Bucket.init(word:Int,bit:Int) in ' + this.constructor.name;
            };
            /*Swift.(file)._HashTable.Bucket.word*/
            class_25.prototype.word$get = function () {
                throw 'unsupported variable Swift.(file)._HashTable.Bucket.word in ' + this.constructor.name;
            };
            Object.defineProperty(class_25.prototype, "word", {
                get: function () { return this.word$get(); },
                enumerable: true,
                configurable: true
            });
            ;
            /*Swift.(file)._HashTable.Bucket.bit*/
            class_25.prototype.bit$get = function () {
                throw 'unsupported variable Swift.(file)._HashTable.Bucket.bit in ' + this.constructor.name;
            };
            Object.defineProperty(class_25.prototype, "bit", {
                get: function () { return this.bit$get(); },
                enumerable: true,
                configurable: true
            });
            ;
            /*Swift.(file)._HashTable.Bucket.==infix(_:_HashTable.Bucket,_:_HashTable.Bucket)*/
            /*Swift.(file).Equatable.==infix(_:Self,_:Self)*/
            class_25.infix_61_61 = function ($info, lhs, rhs) {
                var _this = this;
                return Int.infix_61_61({}, lhs.offset, rhs.offset);
            };
            /*Swift.(file)._HashTable.Bucket.<infix(_:_HashTable.Bucket,_:_HashTable.Bucket)*/
            /*Swift.(file).Comparable.<infix(_:Self,_:Self)*/
            class_25.infix_60 = function ($info, lhs, rhs) {
                var _this = this;
                return Int.infix_60({}, lhs.offset, rhs.offset);
            };
            class_25.prototype.init$vars = function () {
            };
            return class_25;
        }()),
        _1.$struct = true,
        _1.$infoAddress = '',
        _1);
    _HashTable.Index = (_2 = /** @class */ (function () {
            function class_26() {
            }
            /*Swift.(file)._HashTable.Index.bucket*/
            class_26.prototype.bucket$get = function () {
                throw 'unsupported variable Swift.(file)._HashTable.Index.bucket in ' + this.constructor.name;
            };
            Object.defineProperty(class_26.prototype, "bucket", {
                get: function () { return this.bucket$get(); },
                enumerable: true,
                configurable: true
            });
            ;
            /*Swift.(file)._HashTable.Index.age*/
            class_26.prototype.age$get = function () {
                throw 'unsupported variable Swift.(file)._HashTable.Index.age in ' + this.constructor.name;
            };
            Object.defineProperty(class_26.prototype, "age", {
                get: function () { return this.age$get(); },
                enumerable: true,
                configurable: true
            });
            ;
            /*Swift.(file)._HashTable.Index.init(bucket:_HashTable.Bucket,age:Int32)*/
            /*Swift.(file)._HashTable.Index.init(bucket:_HashTable.Bucket,age:Int32)*/
            class_26.prototype.initBucket_HashTableBucketAgeInt32 = function ($info, bucket, age) {
                throw 'unsupported method Swift.(file)._HashTable.Index.init(bucket:_HashTable.Bucket,age:Int32) in ' + this.constructor.name;
            };
            /*Swift.(file)._HashTable.Index.==infix(_:_HashTable.Index,_:_HashTable.Index)*/
            /*Swift.(file).Equatable.==infix(_:Self,_:Self)*/
            class_26.infix_61_61 = function ($info, lhs, rhs) {
                var _this = this;
                preconditionFileLine({}, function () { return Int32.infix_61_61({}, lhs.age, rhs.age); }, function () { return "Can't compare indices belonging to different collections"; }, '?3', '?3');
                return _HashTable.Bucket.infix_61_61({}, lhs.bucket, rhs.bucket);
            };
            /*Swift.(file)._HashTable.Index.<infix(_:_HashTable.Index,_:_HashTable.Index)*/
            /*Swift.(file).Comparable.<infix(_:Self,_:Self)*/
            class_26.infix_60 = function ($info, lhs, rhs) {
                var _this = this;
                preconditionFileLine({}, function () { return Int32.infix_61_61({}, lhs.age, rhs.age); }, function () { return "Can't compare indices belonging to different collections"; }, '?3', '?3');
                return _HashTable.Bucket.infix_60({}, lhs.bucket, rhs.bucket);
            };
            class_26.prototype.init$vars = function () {
            };
            return class_26;
        }()),
        _2.$struct = true,
        _2.$infoAddress = '',
        _2);
    _HashTable.Iterator = (_3 = /** @class */ (function () {
            function class_27() {
            }
            /*Swift.(file)._HashTable.Iterator.hashTable*/
            class_27.prototype.hashTable$get = function () {
                throw 'unsupported variable Swift.(file)._HashTable.Iterator.hashTable in ' + this.constructor.name;
            };
            Object.defineProperty(class_27.prototype, "hashTable", {
                get: function () { return this.hashTable$get(); },
                enumerable: true,
                configurable: true
            });
            ;
            /*Swift.(file)._HashTable.Iterator.wordIndex*/
            class_27.prototype.wordIndex$get = function () {
                throw 'unsupported variable Swift.(file)._HashTable.Iterator.wordIndex in ' + this.constructor.name;
            };
            Object.defineProperty(class_27.prototype, "wordIndex", {
                get: function () { return this.wordIndex$get(); },
                enumerable: true,
                configurable: true
            });
            ;
            /*Swift.(file)._HashTable.Iterator.word*/
            class_27.prototype.word$get = function () {
                throw 'unsupported variable Swift.(file)._HashTable.Iterator.word in ' + this.constructor.name;
            };
            Object.defineProperty(class_27.prototype, "word", {
                get: function () { return this.word$get(); },
                enumerable: true,
                configurable: true
            });
            ;
            /*Swift.(file)._HashTable.Iterator.init(_:_HashTable)*/
            /*Swift.(file)._HashTable.Iterator.init(_:_HashTable)*/
            class_27.prototype.init_HashTable = function ($info, hashTable) {
                throw 'unsupported method Swift.(file)._HashTable.Iterator.init(_:_HashTable) in ' + this.constructor.name;
            };
            /*Swift.(file)._HashTable.Iterator.next()*/
            /*Swift.(file).IteratorProtocol.next()*/
            class_27.prototype.next = function ($info) {
                throw 'unsupported method Swift.(file)._HashTable.Iterator.next() in ' + this.constructor.name;
            };
            class_27.prototype.init$vars = function () {
            };
            return class_27;
        }()),
        _3.$struct = true,
        _3.$infoAddress = '',
        _3);
    return _HashTable;
}());
if (typeof Equatable$implementation != 'undefined')
    _mixin(_HashTable.Bucket, Equatable$implementation, false);
if (typeof Comparable$implementation != 'undefined')
    _mixin(_HashTable.Bucket, Comparable$implementation, false);
if (typeof Equatable$implementation != 'undefined')
    _mixin(_HashTable.Index, Equatable$implementation, false);
if (typeof Comparable$implementation != 'undefined')
    _mixin(_HashTable.Index, Comparable$implementation, false);
if (typeof IteratorProtocol$implementation != 'undefined')
    _mixin(_HashTable.Iterator, IteratorProtocol$implementation, false);
if (typeof Sequence$implementation != 'undefined')
    _mixin(_HashTable, Sequence$implementation, false);
var JoinedSequence = /** @class */ (function () {
    function JoinedSequence() {
    }
    /*Swift.(file).JoinedSequence.init(base:Base,separator:Separator)*/
    /*Swift.(file).JoinedSequence.init(base:Base,separator:Separator)*/
    JoinedSequence.prototype.initBaseSeparator = function ($info, base, separator) {
        var _this = this;
        _this._base = base;
        _this._separator = _create(ContiguousArray, 'initBuffer', {}, separator);
        return;
    };
    /*Swift.(file).JoinedSequence.makeIterator()*/
    /*Swift.(file).Sequence.makeIterator()*/
    JoinedSequence.prototype.makeIterator = function ($info) {
        var _this = this;
        return _create(JoinedSequence.Iterator, 'initBaseSeparator', {}, _this._base.makeIterator({}), _this._separator);
    };
    JoinedSequence.prototype.init$vars = function () {
    };
    var _4, _5;
    JoinedSequence.$struct = true;
    JoinedSequence.$infoAddress = '';
    JoinedSequence.Iterator = (_4 = /** @class */ (function () {
            function class_28() {
            }
            /*Swift.(file).JoinedSequence.Iterator.init(base:Base.Iterator,separator:Separator)*/
            /*Swift.(file).JoinedSequence.Iterator.init(base:Base.Iterator,separator:Separator)*/
            class_28.prototype.initBaseSeparator = function ($info, base, separator) {
                var _this = this;
                _this._base = base;
                _this._separatorData = _create(ContiguousArray, 'initBuffer', {}, separator);
                return;
            };
            /*Swift.(file).JoinedSequence.Iterator.next()*/
            /*Swift.(file).IteratorProtocol.next()*/
            class_28.prototype.next = function ($info) {
                var _this = this;
                while (true) {
                    if (!((true)))
                        break;
                    var $match = _this._state;
                    if ((($match.rawValue == JoinedSequence.Iterator._JoinIteratorState.start.rawValue))) {
                        var $ifLet0, nextSubSequence_1;
                        if ((($ifLet0 = _this._base.next({ $setThis: function ($val) { return _this._base = $val; } })) || true) && $ifLet0 != null && ((nextSubSequence_1 = $ifLet0) || true)) {
                            _this._inner = nextSubSequence_1.makeIterator({});
                            _this._state = JoinedSequence.Iterator._JoinIteratorState.generatingElements;
                        }
                        else {
                            _this._state = JoinedSequence.Iterator._JoinIteratorState.end;
                            return null;
                        }
                        ;
                    }
                    else if ((($match.rawValue == JoinedSequence.Iterator._JoinIteratorState.generatingElements.rawValue))) {
                        var result = _this._inner.next({ $setThis: function ($val) { return _this._inner = $val; } });
                        if ((_fastPath({}, Optional.wrappedNotEqualsOptionalNilComparisonType({}, result, null)))) {
                            return result;
                        }
                        ;
                        _this._inner = (((_.tmp0 = _this._base.next({ $setThis: function ($val) { return _this._base = $val; } })) != null) ? (_.tmp0.makeIterator({})) : null);
                        if ((Optional.wrappedEqualsOptionalNilComparisonType({}, _this._inner, null))) {
                            _this._state = JoinedSequence.Iterator._JoinIteratorState.end;
                            return null;
                        }
                        ;
                        if ((Bool.prefix_33({}, _this._separatorData.isEmpty))) {
                            _this._separator = _this._separatorData.makeIterator({});
                            _this._state = JoinedSequence.Iterator._JoinIteratorState.generatingSeparator;
                        }
                        ;
                    }
                    else if ((($match.rawValue == JoinedSequence.Iterator._JoinIteratorState.generatingSeparator.rawValue))) {
                        var result = _this._separator.next({ $setThis: function ($val) { return _this._separator = $val; } });
                        if ((_fastPath({}, Optional.wrappedNotEqualsOptionalNilComparisonType({}, result, null)))) {
                            return result;
                        }
                        ;
                        _this._state = JoinedSequence.Iterator._JoinIteratorState.generatingElements;
                    }
                    else if ((($match.rawValue == JoinedSequence.Iterator._JoinIteratorState.end.rawValue))) {
                        return null;
                    }
                    ;
                }
            };
            class_28.prototype.init$vars = function () {
            };
            return class_28;
        }()),
        _4.$struct = true,
        _4.$infoAddress = '',
        _4._JoinIteratorState = (_5 = /** @class */ (function () {
                function class_29() {
                }
                Object.defineProperty(class_29, "start", {
                    get: function () { return Object.assign(new JoinedSequence.Iterator._JoinIteratorState(), __assign({ rawValue: "start" }, Array.from(arguments).slice(1))); },
                    enumerable: true,
                    configurable: true
                });
                Object.defineProperty(class_29, "generatingElements", {
                    get: function () { return Object.assign(new JoinedSequence.Iterator._JoinIteratorState(), __assign({ rawValue: "generatingElements" }, Array.from(arguments).slice(1))); },
                    enumerable: true,
                    configurable: true
                });
                Object.defineProperty(class_29, "generatingSeparator", {
                    get: function () { return Object.assign(new JoinedSequence.Iterator._JoinIteratorState(), __assign({ rawValue: "generatingSeparator" }, Array.from(arguments).slice(1))); },
                    enumerable: true,
                    configurable: true
                });
                Object.defineProperty(class_29, "end", {
                    get: function () { return Object.assign(new JoinedSequence.Iterator._JoinIteratorState(), __assign({ rawValue: "end" }, Array.from(arguments).slice(1))); },
                    enumerable: true,
                    configurable: true
                });
                /*Swift.(file).JoinedSequence.Iterator._JoinIteratorState.==(_:JoinedSequence<Base>.Iterator._JoinIteratorState,_:JoinedSequence<Base>.Iterator._JoinIteratorState)*/
                /*Swift.(file).Equatable.==infix(_:Self,_:Self)*/
                class_29.infix_61_61 = function ($info, a, b) {
                    return a == b;
                };
                /*Swift.(file).JoinedSequence.Iterator._JoinIteratorState.hashValue*/
                class_29.prototype.hashValue$get = function () {
                    throw 'unsupported variable Swift.(file).JoinedSequence.Iterator._JoinIteratorState.hashValue in ' + this.constructor.name;
                };
                Object.defineProperty(class_29.prototype, "hashValue", {
                    get: function () { return this.hashValue$get(); },
                    enumerable: true,
                    configurable: true
                });
                ;
                /*Swift.(file).JoinedSequence.Iterator._JoinIteratorState.hash(into:Hasher)*/
                /*Swift.(file).Hashable.hash(into:Hasher)*/
                class_29.prototype.hashInto = function ($info, hasher$inout) {
                    throw 'unsupported method Swift.(file).JoinedSequence.Iterator._JoinIteratorState.hash(into:Hasher) in ' + this.constructor.name;
                };
                class_29.prototype.init$vars = function () {
                };
                return class_29;
            }()),
            _5.$infoAddress = '',
            _5),
        _4);
    return JoinedSequence;
}());
_mixin(JoinedSequence.Iterator._JoinIteratorState, _DefaultEnumImplementation, false);
if (typeof IteratorProtocol$implementation != 'undefined')
    _mixin(JoinedSequence.Iterator, IteratorProtocol$implementation, false);
if (typeof Sequence$implementation != 'undefined')
    _mixin(JoinedSequence, Sequence$implementation, false);
var AnyKeyPath = /** @class */ (function () {
    function AnyKeyPath() {
    }
    /*Swift.(file).AnyKeyPath.rootType*/
    AnyKeyPath.rootType$get = function () {
        var _this = this;
        return _this._rootAndValueType["0"];
    };
    Object.defineProperty(AnyKeyPath, "rootType", {
        get: function () {
            return this.rootType$get();
        },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).AnyKeyPath.valueType*/
    AnyKeyPath.valueType$get = function () {
        var _this = this;
        return _this._rootAndValueType["1"];
    };
    Object.defineProperty(AnyKeyPath, "valueType", {
        get: function () {
            return this.valueType$get();
        },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).AnyKeyPath.hashValue*/
    AnyKeyPath.prototype.hashValue$get = function () {
        var _this = this;
        return _hashValueFor({}, _this);
    };
    Object.defineProperty(AnyKeyPath.prototype, "hashValue", {
        get: function () { return this.hashValue$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).AnyKeyPath.hash(into:Hasher)*/
    /*Swift.(file).Hashable.hash(into:Hasher)*/
    AnyKeyPath.prototype.hashInto = function ($info, hasher$inout) {
        var _this = this;
        var hasher = hasher$inout.get();
        var $result = (function () {
            _create(ObjectIdentifier, 'initprotocol_composition_type', {}, AnyKeyPath).hashInto({}, { get: function () { return hasher; }, set: function ($val) { return hasher = $val; } });
            return _this.withBuffer({}, (function ($info, $0) {
                var buffer = _cloneStruct($0);
                if ((buffer.data.isEmpty)) {
                    return;
                }
                ;
                while (true) {
                    if (!((true)))
                        break;
                    var $tuple = buffer.next({ $setThis: function ($val) { return buffer = $val; } }), component = $tuple && $tuple[0], type = $tuple && $tuple[1];
                    hasher.combine({ $setThis: function ($val) { return hasher = $val; } }, component.value);
                    var $ifLet0, type_1;
                    if ((($ifLet0 = type) || true) && $ifLet0 != null && ((type_1 = $ifLet0) || true)) {
                        hasher.combine({ $setThis: function ($val) { return hasher = $val; } }, unsafeBitCastTo({}, type_1, Int));
                    }
                    else {
                        break;
                    }
                    ;
                }
                ;
            }));
        })();
        hasher$inout.set(hasher);
        return $result;
    };
    /*Swift.(file).AnyKeyPath.==infix(_:AnyKeyPath,_:AnyKeyPath)*/
    /*Swift.(file).Equatable.==infix(_:Self,_:Self)*/
    AnyKeyPath.infix_61_61 = function ($info, a, b) {
        var _this = this;
        if ((infix_61_61_61({}, a, b))) {
            return true;
        }
        ;
        if ((infix_33_61({}, AnyKeyPath, AnyKeyPath))) {
            return false;
        }
        ;
        return a.withBuffer({}, (function ($info, $0) {
            var aBuffer = _cloneStruct($0);
            return b.withBuffer({}, (function ($info, $0) {
                var bBuffer = _cloneStruct($0);
                if ((Bool.infix_33_61({}, aBuffer.hasReferencePrefix, bBuffer.hasReferencePrefix))) {
                    return false;
                }
                ;
                if ((aBuffer.data.isEmpty)) {
                    return bBuffer.data.isEmpty;
                }
                ;
                var _loop_2 = function () {
                    if (!((true)))
                        return "break";
                    var $tuple = aBuffer.next({ $setThis: function ($val) { return aBuffer = $val; } }), aComponent = $tuple && $tuple[0], aType = $tuple && $tuple[1];
                    var $tuple = bBuffer.next({ $setThis: function ($val) { return bBuffer = $val; } }), bComponent = $tuple && $tuple[0], bType = $tuple && $tuple[1];
                    if ((Bool.infix_124_124({}, Bool.infix_124_124({}, Bool.infix_33_61({}, aComponent.header.endOfReferencePrefix, bComponent.header.endOfReferencePrefix), function () { return KeyPathComponent.infix_33_61({}, aComponent.value, bComponent.value); }), function () { return infix_33_61({}, aType, bType); }))) {
                        return { value: false };
                    }
                    ;
                    if ((infix_61_61({}, aType, null))) {
                        return { value: true };
                    }
                    ;
                };
                while (true) {
                    var state_2 = _loop_2();
                    if (typeof state_2 === "object")
                        return state_2.value;
                    if (state_2 === "break")
                        break;
                }
                ;
            }));
        }));
    };
    /*Swift.(file).AnyKeyPath.init()*/
    /*Swift.(file).AnyKeyPath.init()*/
    AnyKeyPath.prototype.init = function ($info) {
        throw 'unsupported method Swift.(file).AnyKeyPath.init() in ' + this.constructor.name;
    };
    /*Swift.(file).AnyKeyPath.withBuffer(_:(KeyPathBuffer) throws -> T)*/
    /*Swift.(file).AnyKeyPath.withBuffer(_:(KeyPathBuffer) throws -> T)*/
    AnyKeyPath.prototype.withBuffer = function ($info, f) {
        throw 'unsupported method Swift.(file).AnyKeyPath.withBuffer(_:(KeyPathBuffer) throws -> T) in ' + this.constructor.name;
    };
    AnyKeyPath.prototype.init$vars = function () {
    };
    AnyKeyPath.$infoAddress = '';
    return AnyKeyPath;
}());
if (typeof Hashable$implementation != 'undefined')
    _mixin(AnyKeyPath, Hashable$implementation, false);
if (typeof _AppendKeyPath$implementation != 'undefined')
    _mixin(AnyKeyPath, _AppendKeyPath$implementation, false);
var PartialKeyPath = /** @class */ (function (_super) {
    __extends(PartialKeyPath, _super);
    function PartialKeyPath() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    /*Swift.(file).PartialKeyPath.init()*/
    /*Swift.(file).AnyKeyPath.init()*/
    PartialKeyPath.prototype.init = function ($info) {
        throw 'unsupported method Swift.(file).PartialKeyPath.init() in ' + this.constructor.name;
    };
    PartialKeyPath.prototype.init$vars = function () {
        if (_super.prototype.init$vars)
            _super.prototype.init$vars.call(this);
    };
    PartialKeyPath.$infoAddress = '';
    return PartialKeyPath;
}(AnyKeyPath));
var KeyPath = /** @class */ (function (_super) {
    __extends(KeyPath, _super);
    function KeyPath() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    /*Swift.(file).KeyPath.kind*/
    KeyPath.kind$get = function () {
        var _this = this;
        return KeyPath.Kind.readOnly;
    };
    Object.defineProperty(KeyPath, "kind", {
        get: function () {
            return this.kind$get();
        },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).KeyPath.appendedType(with:KeyPath<Value, AppendedValue>.Type)*/
    /*Swift.(file).KeyPath.appendedType(with:KeyPath<Value, AppendedValue>.Type)*/
    KeyPath.appendedTypeWith = function ($info, t) {
        var _this = this;
        var resultKind;
        var $match = { 0: _this.kind, 1: t.kind };
        if ((($match[1].rawValue == KeyPath.Kind.reference.rawValue))) {
            resultKind = KeyPath.Kind.reference;
        }
        else if ((($match[1].rawValue == KeyPath.Kind.value.rawValue))) {
            var x = $match[0];
            resultKind = x;
        }
        else if (((true))) {
            resultKind = KeyPath.Kind.readOnly;
        }
        ;
        var $match = resultKind;
        if ((($match.rawValue == KeyPath.Kind.readOnly.rawValue))) {
            return KeyPath;
        }
        else if ((($match.rawValue == KeyPath.Kind.value.rawValue))) {
            return WritableKeyPath;
        }
        else if ((($match.rawValue == KeyPath.Kind.reference.rawValue))) {
            return ReferenceWritableKeyPath;
        }
    };
    /*Swift.(file).KeyPath.init()*/
    /*Swift.(file).AnyKeyPath.init()*/
    KeyPath.prototype.init = function ($info) {
        throw 'unsupported method Swift.(file).KeyPath.init() in ' + this.constructor.name;
    };
    KeyPath.prototype.init$vars = function () {
        if (_super.prototype.init$vars)
            _super.prototype.init$vars.call(this);
    };
    KeyPath.$infoAddress = '';
    return KeyPath;
}(PartialKeyPath));
var WritableKeyPath = /** @class */ (function (_super) {
    __extends(WritableKeyPath, _super);
    function WritableKeyPath() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    /*Swift.(file).WritableKeyPath.kind*/
    WritableKeyPath.kind$get = function () {
        var _this = this;
        return KeyPath.Kind.readOnly;
    };
    Object.defineProperty(WritableKeyPath, "kind", {
        get: function () {
            return this.kind$get();
        },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).WritableKeyPath.init()*/
    /*Swift.(file).AnyKeyPath.init()*/
    WritableKeyPath.prototype.init = function ($info) {
        throw 'unsupported method Swift.(file).WritableKeyPath.init() in ' + this.constructor.name;
    };
    WritableKeyPath.prototype.init$vars = function () {
        if (_super.prototype.init$vars)
            _super.prototype.init$vars.call(this);
    };
    WritableKeyPath.$infoAddress = '';
    return WritableKeyPath;
}(KeyPath));
var ReferenceWritableKeyPath = /** @class */ (function (_super) {
    __extends(ReferenceWritableKeyPath, _super);
    function ReferenceWritableKeyPath() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    /*Swift.(file).ReferenceWritableKeyPath.kind*/
    ReferenceWritableKeyPath.kind$get = function () {
        var _this = this;
        return KeyPath.Kind.readOnly;
    };
    Object.defineProperty(ReferenceWritableKeyPath, "kind", {
        get: function () {
            return this.kind$get();
        },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).ReferenceWritableKeyPath.init()*/
    /*Swift.(file).AnyKeyPath.init()*/
    ReferenceWritableKeyPath.prototype.init = function ($info) {
        throw 'unsupported method Swift.(file).ReferenceWritableKeyPath.init() in ' + this.constructor.name;
    };
    ReferenceWritableKeyPath.prototype.init$vars = function () {
        if (_super.prototype.init$vars)
            _super.prototype.init$vars.call(this);
    };
    ReferenceWritableKeyPath.$infoAddress = '';
    return ReferenceWritableKeyPath;
}(WritableKeyPath));
var LazySequenceProtocol$implementation = /** @class */ (function () {
    function LazySequenceProtocol$implementation() {
    }
    /*Swift.(file).LazySequenceProtocol.drop(while:(Self.Elements.Element) -> Bool)*/
    /*Swift.(file).LazySequenceProtocol.drop(while:(Self.Elements.Element) -> Bool)*/
    LazySequenceProtocol$implementation.prototype.dropWhile = function ($info, predicate) {
        var _this = this;
        return _create(LazyDropWhileSequence, 'init_basePredicatefunction_type', {}, _this._elements, predicate);
    };
    /*Swift.(file).LazySequenceProtocol.filter(_:(Self.Elements.Element) -> Bool)*/
    /*Swift.(file).LazySequenceProtocol.filter(_:(Self.Elements.Element) -> Bool)*/
    LazySequenceProtocol$implementation.prototype.filterSwift = function ($info, isIncluded) {
        var _this = this;
        return _create(LazyFilterSequence, 'init_basefunction_type', {}, _this._elements, isIncluded);
    };
    /*Swift.(file).LazySequenceProtocol.flatMap(_:(Self.Elements.Element) -> SegmentOfResult)*/
    /*Swift.(file).LazySequenceProtocol.flatMap(_:(Self.Elements.Element) -> SegmentOfResult)*/
    LazySequenceProtocol$implementation.prototype.flatMap = function ($info, transform) {
        var _this = this;
        return _this.mapSwift({}, transform).joined({});
    };
    /*Swift.(file).LazySequenceProtocol.compactMap(_:(Self.Elements.Element) -> ElementOfResult?)*/
    /*Swift.(file).LazySequenceProtocol.compactMap(_:(Self.Elements.Element) -> ElementOfResult?)*/
    LazySequenceProtocol$implementation.prototype.compactMap = function ($info, transform) {
        var _this = this;
        return _this.mapSwift({}, transform).filterSwift({}, (function ($info, $0) { return Optional.wrappedNotEqualsOptionalNilComparisonType({}, $0, null); })).mapSwift({}, (function ($info, $0) { return $0; }));
    };
    /*Swift.(file).LazySequenceProtocol.joined()*/
    /*Swift.(file).LazySequenceProtocol.joined()*/
    LazySequenceProtocol$implementation.prototype.joined = function ($info) {
        var _this = this;
        return _create(FlattenSequence, 'init_base', {}, _this._elements).lazy;
    };
    /*Swift.(file).LazySequenceProtocol.lazy*/
    LazySequenceProtocol$implementation.prototype.lazy$get = function () {
        var _this = this;
        return _this._elements.lazy;
    };
    Object.defineProperty(LazySequenceProtocol$implementation.prototype, "lazy", {
        get: function () { return this.lazy$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).LazySequenceProtocol.lazy*/
    LazySequenceProtocol$implementation.prototype.lazy$get = function () {
        var _this = this;
        return _this._elements.lazy;
    };
    ;
    /*Swift.(file).LazySequenceProtocol.map(_:(Self.Element) -> U)*/
    /*Swift.(file).LazySequenceProtocol.map(_:(Self.Element) -> U)*/
    LazySequenceProtocol$implementation.prototype.mapSwift = function ($info, transform) {
        var _this = this;
        return _create(LazyMapSequence, 'init_baseTransformfunction_type', {}, _this._elements, transform);
    };
    /*Swift.(file).LazySequenceProtocol.prefix(while:(Self.Elements.Element) -> Bool)*/
    /*Swift.(file).LazySequenceProtocol.prefix(while:(Self.Elements.Element) -> Bool)*/
    LazySequenceProtocol$implementation.prototype.prefixWhile = function ($info, predicate) {
        var _this = this;
        return _create(LazyPrefixWhileSequence, 'init_basePredicatefunction_type', {}, _this._elements, predicate);
    };
    /*Swift.(file).LazySequenceProtocol.flatMap(_:(Self.Elements.Element) -> ElementOfResult?)*/
    /*Swift.(file).LazySequenceProtocol.flatMap(_:(Self.Elements.Element) -> ElementOfResult?)*/
    LazySequenceProtocol$implementation.prototype.flatMap = function ($info, transform) {
        var _this = this;
        return _this.compactMap({}, transform);
    };
    return LazySequenceProtocol$implementation;
}());
if (typeof Sequence$implementation != 'undefined')
    _mixin(LazySequenceProtocol$implementation, Sequence$implementation, false);
var MutableCollection$implementation = /** @class */ (function () {
    function MutableCollection$implementation() {
    }
    /*Swift.(file).MutableCollection.partition(by:(Self.Element) throws -> Bool)*/
    /*Swift.(file).MutableCollection.partition(by:(Self.Element) throws -> Bool)*/
    MutableCollection$implementation.prototype.partitionBy = function ($info, belongsInSecondPartition) {
        var _this = this;
        return _this._halfStablePartitionIsSuffixElement({ $setThis: function ($val) { return $info.$setThis(_this = _cloneStruct($val)); } }, belongsInSecondPartition);
    };
    /*Swift.(file).MutableCollection.partition(by:(Self.Element) throws -> Bool)*/
    /*Swift.(file).MutableCollection.partition(by:(Self.Element) throws -> Bool)*/
    MutableCollection$implementation.prototype.partitionBy = function ($info, belongsInSecondPartition) {
        var _this = this;
        return _this._halfStablePartitionIsSuffixElement({ $setThis: function ($val) { return $info.$setThis(_this = _cloneStruct($val)); } }, belongsInSecondPartition);
    };
    /*Swift.(file).MutableCollection.shuffle(using:T)*/
    /*Swift.(file).MutableCollection.shuffle(using:T)*/
    MutableCollection$implementation.prototype.shuffleUsing = function ($info, generator$inout) {
        var _this = this;
        var generator = generator$inout.get();
        var $result = (function () {
            if (!((Int.infix_62({}, _this.count, 1)))) {
                return;
            }
            ;
            var amount = _this.count;
            var currentIndex = _this.startIndex;
            while (true) {
                if (!((Int.infix_62({}, amount, 1))))
                    break;
                var random = Int.randomInUsing({}, Int.infix_46_46_60({}, 0, amount), { get: function () { return generator; }, set: function ($val) { return generator = $val; } });
                Int.infix_45_61({}, { get: function () { return amount; }, set: function ($val) { return amount = $val; } }, 1);
                _this.swapAt({ $setThis: function ($val) { return $info.$setThis(_this = _cloneStruct($val)); } }, currentIndex, _this.indexOffsetBy({}, currentIndex, random));
                _this.formIndexAfter({}, { get: function () { return currentIndex; }, set: function ($val) { return currentIndex = $val; } });
            }
            ;
        })();
        generator$inout.set(generator);
        return $result;
    };
    /*Swift.(file).MutableCollection.shuffle()*/
    /*Swift.(file).MutableCollection.shuffle()*/
    MutableCollection$implementation.prototype.shuffle = function ($info) {
        var _this = this;
        var g = _create(SystemRandomNumberGenerator, 'init', {});
        _this.shuffleUsing({ $setThis: function ($val) { return $info.$setThis(_this = _cloneStruct($val)); } }, { get: function () { return g; }, set: function ($val) { return g = $val; } });
    };
    /*Swift.(file).MutableCollection.withContiguousMutableStorageIfAvailable(_:(inout UnsafeMutableBufferPointer<Self.Element>) throws -> R)*/
    /*Swift.(file).MutableCollection.withContiguousMutableStorageIfAvailable(_:(inout UnsafeMutableBufferPointer<Self.Element>) throws -> R)*/
    MutableCollection$implementation.prototype.withContiguousMutableStorageIfAvailable = function ($info, body) {
        var _this = this;
        return null;
    };
    /*Swift.(file).MutableCollection.subscript(_:Range<Self.Index>)*/
    /*Swift.(file).MutableCollection.subscript(_:Range<Self.Index>)*/
    MutableCollection$implementation.prototype.subscriptRange$get = function ($info, bounds) {
        var _this = this;
        return _create(Slice, 'initBaseBoundsRange', {}, _this, bounds);
    }; /*Swift.(file).MutableCollection.subscript(_:Range<Self.Index>)*/
    /*Swift.(file).MutableCollection.subscript(_:Range<Self.Index>)*/
    MutableCollection$implementation.prototype.subscriptRange$set = function ($info, newValue, bounds) {
        var _this = this;
        _writeBackMutableSliceBoundsSlice({}, { get: function () { return _this; }, set: function ($val) { return $info.$setThis(_this = _cloneStruct($val)); } }, bounds, newValue);
    };
    /*Swift.(file).MutableCollection.swapAt(_:Self.Index,_:Self.Index)*/
    /*Swift.(file).MutableCollection.swapAt(_:Self.Index,_:Self.Index)*/
    MutableCollection$implementation.prototype.swapAt = function ($info, i, j) {
        var _this = this;
        if (!(((_.arg0 = i).constructor.infix_33_61({}, _.arg0, j)))) {
            return;
        }
        ;
        var tmp = _this.subscript$get({}, i);
        _this.subscript$set({ $setThis: function ($val) { return $info.$setThis(_this = _cloneStruct($val)); } }, _this.subscript$get({}, j), i);
        _this.subscript$set({ $setThis: function ($val) { return $info.$setThis(_this = _cloneStruct($val)); } }, tmp, j);
    };
    /*Swift.(file).MutableCollection.subscript(_:R)*/
    /*Swift.(file).MutableCollection.subscript(_:R)*/
    MutableCollection$implementation.prototype.subscriptRange$get = function ($info, r) {
        var _this = this;
        return _this.subscriptRange$get({}, r.relativeTo({}, _this));
    }; /*Swift.(file).MutableCollection.subscript(_:R)*/
    /*Swift.(file).MutableCollection.subscript(_:R)*/
    MutableCollection$implementation.prototype.subscriptRange$set = function ($info, newValue, r) {
        var _this = this;
        _this.subscriptRange$set({ $setThis: function ($val) { return $info.$setThis(_this = _cloneStruct($val)); } }, newValue, r.relativeTo({}, _this));
    };
    /*Swift.(file).MutableCollection.subscript(_:(UnboundedRange_) -> ())*/
    /*Swift.(file).MutableCollection.subscript(_:(UnboundedRange_) -> ())*/
    MutableCollection$implementation.prototype.subscriptUnboundedRange$get = function ($info, x) {
        var _this = this;
        return _this.subscriptRange$get({}, ((function () { throw '!unclarifiedGeneric:Self.Index'; })()).postfix_46_46_46({}, _this.startIndex));
    }; /*Swift.(file).MutableCollection.subscript(_:(UnboundedRange_) -> ())*/
    /*Swift.(file).MutableCollection.subscript(_:(UnboundedRange_) -> ())*/
    MutableCollection$implementation.prototype.subscriptUnboundedRange$set = function ($info, newValue, x) {
        var _this = this;
        _this.subscriptRange$set({ $setThis: function ($val) { return $info.$setThis(_this = _cloneStruct($val)); } }, newValue, ((function () { throw '!unclarifiedGeneric:Self.Index'; })()).postfix_46_46_46({}, _this.startIndex));
    };
    /*Swift.(file).MutableCollection.reverse()*/
    /*Swift.(file).MutableCollection.reverse()*/
    MutableCollection$implementation.prototype.reverse = function ($info) {
        var _this = this;
        if ((_this.isEmpty)) {
            return;
        }
        ;
        var f = _this.startIndex;
        var l = _this.indexBefore({}, _this.endIndex);
        while (true) {
            if (!(((_.arg0 = f).constructor.infix_60({}, _.arg0, l))))
                break;
            _this.swapAt({ $setThis: function ($val) { return $info.$setThis(_this = _cloneStruct($val)); } }, f, l);
            _this.formIndexAfter({}, { get: function () { return f; }, set: function ($val) { return f = $val; } });
            _this.formIndexBefore({}, { get: function () { return l; }, set: function ($val) { return l = $val; } });
        }
    };
    /*Swift.(file).MutableCollection.sort()*/
    /*Swift.(file).MutableCollection.sort()*/
    MutableCollection$implementation.prototype.sortSwift = function ($info) {
        var _this = this;
        _this.sortBy({ $setThis: function ($val) { return $info.$setThis(_this = _cloneStruct($val)); } }, this.first[0].constructor.infix_60);
    };
    /*Swift.(file).MutableCollection.sort(by:(Self.Element, Self.Element) throws -> Bool)*/
    /*Swift.(file).MutableCollection.sort(by:(Self.Element, Self.Element) throws -> Bool)*/
    MutableCollection$implementation.prototype.sortBy = function ($info, areInIncreasingOrder) {
        //TODO move to swift
        return this.sort(function (a, b) { return areInIncreasingOrder(null, a, b) ? -1 : 1; });
    };
    return MutableCollection$implementation;
}());
if (typeof Collection$implementation != 'undefined')
    _mixin(MutableCollection$implementation, Collection$implementation, false);
var _NativeDictionary = /** @class */ (function () {
    function _NativeDictionary() {
    }
    /*Swift.(file)._NativeDictionary.init()*/
    /*Swift.(file)._NativeDictionary.init()*/
    _NativeDictionary.prototype.init = function ($info) {
        throw 'unsupported method Swift.(file)._NativeDictionary.init() in ' + this.constructor.name;
    };
    /*Swift.(file)._NativeDictionary.init(_:_RawDictionaryStorage)*/
    /*Swift.(file)._NativeDictionary.init(_:_RawDictionaryStorage)*/
    _NativeDictionary.prototype.init_RawDictionaryStorage = function ($info, storage) {
        throw 'unsupported method Swift.(file)._NativeDictionary.init(_:_RawDictionaryStorage) in ' + this.constructor.name;
    };
    /*Swift.(file)._NativeDictionary.init(capacity:Int)*/
    /*Swift.(file)._NativeDictionary.init(capacity:Int)*/
    _NativeDictionary.prototype.initCapacityInt = function ($info, capacity) {
        throw 'unsupported method Swift.(file)._NativeDictionary.init(capacity:Int) in ' + this.constructor.name;
    };
    /*Swift.(file)._NativeDictionary.init(_:_CocoaDictionary)*/
    /*Swift.(file)._NativeDictionary.init(_:_CocoaDictionary)*/
    _NativeDictionary.prototype.init_CocoaDictionary = function ($info, cocoa) {
        throw 'unsupported method Swift.(file)._NativeDictionary.init(_:_CocoaDictionary) in ' + this.constructor.name;
    };
    /*Swift.(file)._NativeDictionary.init(_:_CocoaDictionary,capacity:Int)*/
    /*Swift.(file)._NativeDictionary.init(_:_CocoaDictionary,capacity:Int)*/
    _NativeDictionary.prototype.init_CocoaDictionaryCapacityInt = function ($info, cocoa, capacity) {
        throw 'unsupported method Swift.(file)._NativeDictionary.init(_:_CocoaDictionary,capacity:Int) in ' + this.constructor.name;
    };
    /*Swift.(file)._NativeDictionary.bridged()*/
    /*Swift.(file)._NativeDictionary.bridged()*/
    _NativeDictionary.prototype.bridged = function ($info) {
        throw 'unsupported method Swift.(file)._NativeDictionary.bridged() in ' + this.constructor.name;
    };
    /*Swift.(file)._NativeDictionary.init(_unsafeUninitializedCapacity:Int,allowingDuplicates:Bool,initializingWith:(UnsafeMutableBufferPointer<Key>, UnsafeMutableBufferPointer<Value>, inout Int) -> Void)*/
    /*Swift.(file)._NativeDictionary.init(_unsafeUninitializedCapacity:Int,allowingDuplicates:Bool,initializingWith:(UnsafeMutableBufferPointer<Key>, UnsafeMutableBufferPointer<Value>, inout Int) -> Void)*/
    _NativeDictionary.prototype.init_unsafeUninitializedCapacityIntAllowingDuplicatesBoolInitializingWithfunction_type = function ($info, capacity, allowingDuplicates, initializer) {
        throw 'unsupported method Swift.(file)._NativeDictionary.init(_unsafeUninitializedCapacity:Int,allowingDuplicates:Bool,initializingWith:(UnsafeMutableBufferPointer<Key>, UnsafeMutableBufferPointer<Value>, inout Int) -> Void) in ' + this.constructor.name;
    };
    /*Swift.(file)._NativeDictionary.capacity*/
    _NativeDictionary.prototype.capacity$get = function () {
        var _this = this;
        return _assumeNonNegative({}, _this._storage._capacity);
    };
    Object.defineProperty(_NativeDictionary.prototype, "capacity", {
        get: function () { return this.capacity$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file)._NativeDictionary.hashTable*/
    _NativeDictionary.prototype.hashTable$get = function () {
        var _this = this;
        return _this._storage._hashTable;
    };
    Object.defineProperty(_NativeDictionary.prototype, "hashTable", {
        get: function () { return this.hashTable$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file)._NativeDictionary.age*/
    _NativeDictionary.prototype.age$get = function () {
        var _this = this;
        return _this._storage._age;
    };
    Object.defineProperty(_NativeDictionary.prototype, "age", {
        get: function () { return this.age$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file)._NativeDictionary.invalidateIndices()*/
    /*Swift.(file)._NativeDictionary.invalidateIndices()*/
    _NativeDictionary.prototype.invalidateIndices = function ($info) {
        var _this = this;
        Int32.infix_38_43_61({}, { get: function () { return _this._storage._age; }, set: function ($val) { return _this._storage._age = $val; } }, 1);
    };
    /*Swift.(file)._NativeDictionary.uncheckedKey(at:_NativeDictionary<Key, Value>.Bucket)*/
    /*Swift.(file)._NativeDictionary.uncheckedKey(at:_NativeDictionary<Key, Value>.Bucket)*/
    _NativeDictionary.prototype.uncheckedKeyAt = function ($info, bucket) {
        throw 'unsupported method Swift.(file)._NativeDictionary.uncheckedKey(at:_NativeDictionary<Key, Value>.Bucket) in ' + this.constructor.name;
    };
    /*Swift.(file)._NativeDictionary.uncheckedValue(at:_NativeDictionary<Key, Value>.Bucket)*/
    /*Swift.(file)._NativeDictionary.uncheckedValue(at:_NativeDictionary<Key, Value>.Bucket)*/
    _NativeDictionary.prototype.uncheckedValueAt = function ($info, bucket) {
        throw 'unsupported method Swift.(file)._NativeDictionary.uncheckedValue(at:_NativeDictionary<Key, Value>.Bucket) in ' + this.constructor.name;
    };
    /*Swift.(file)._NativeDictionary.uncheckedInitialize(at:_NativeDictionary<Key, Value>.Bucket,toKey:Key,value:Value)*/
    /*Swift.(file)._NativeDictionary.uncheckedInitialize(at:_NativeDictionary<Key, Value>.Bucket,toKey:Key,value:Value)*/
    _NativeDictionary.prototype.uncheckedInitializeAtToKeyValue = function ($info, bucket, key, value) {
        throw 'unsupported method Swift.(file)._NativeDictionary.uncheckedInitialize(at:_NativeDictionary<Key, Value>.Bucket,toKey:Key,value:Value) in ' + this.constructor.name;
    };
    /*Swift.(file)._NativeDictionary.uncheckedDestroy(at:_NativeDictionary<Key, Value>.Bucket)*/
    /*Swift.(file)._NativeDictionary.uncheckedDestroy(at:_NativeDictionary<Key, Value>.Bucket)*/
    _NativeDictionary.prototype.uncheckedDestroyAt = function ($info, bucket) {
        throw 'unsupported method Swift.(file)._NativeDictionary.uncheckedDestroy(at:_NativeDictionary<Key, Value>.Bucket) in ' + this.constructor.name;
    };
    /*Swift.(file)._NativeDictionary.hashValue(for:Key)*/
    /*Swift.(file)._NativeDictionary.hashValue(for:Key)*/
    _NativeDictionary.prototype.hashValueFor = function ($info, key) {
        var _this = this;
        return key._rawHashValueSeed({}, _this._storage._seed);
    };
    /*Swift.(file)._NativeDictionary.find(_:Key)*/
    /*Swift.(file)._NativeDictionary.find(_:Key)*/
    _NativeDictionary.prototype.find = function ($info, key) {
        var _this = this;
        return _this.findHashValue({}, key, _this.hashValueFor({}, key));
    };
    /*Swift.(file)._NativeDictionary.find(_:Key,hashValue:Int)*/
    /*Swift.(file)._NativeDictionary.find(_:Key,hashValue:Int)*/
    _NativeDictionary.prototype.findHashValue = function ($info, key, hashValue) {
        var _this = this;
        var hashTable = _cloneStruct(_this.hashTable);
        var bucket = _cloneStruct(hashTable.idealBucketForHashValue({}, hashValue));
        while (true) {
            if (!((hashTable._isOccupied({}, bucket))))
                break;
            if (((_.arg0 = _this.uncheckedKeyAt({}, bucket)).constructor.infix_61_61({}, _.arg0, key))) {
                return { 0: bucket, 1: true };
            }
            ;
            bucket = _cloneStruct(hashTable.bucketWrappedAfter({}, bucket));
        }
        ;
        return { 0: bucket, 1: false };
    };
    /*Swift.(file)._NativeDictionary.resize(capacity:Int)*/
    /*Swift.(file)._NativeDictionary.resize(capacity:Int)*/
    _NativeDictionary.prototype.resizeCapacity = function ($info, capacity) {
        var _this = this;
        var capacity = /*dot_syntax_base_ignored*/ max({}, capacity, _this.capacity);
        var newStorage = _DictionaryStorage.resizeOriginalCapacityMove({}, _this._storage, capacity, true);
        var result = _create(_NativeDictionary, 'init_RawDictionaryStorage', {}, /*derived_to_base_expr*/ newStorage);
        if ((Int.infix_62({}, _this.count, 0))) {
            {
                var $bucket$generator_1 = _cloneStruct(_this.hashTable.makeIterator({}));
                while (true) {
                    var $ifLet0, bucket_1;
                    if (!((($ifLet0 = $bucket$generator_1.next({ $setThis: function ($val) { return $bucket$generator_1 = $val; } })) || true) && $ifLet0 != null && ((bucket_1 = $ifLet0) || true)))
                        break;
                    var key = UnsafeMutablePointer.infix_43({}, _this._keys, bucket_1.offset).move({});
                    var value = UnsafeMutablePointer.infix_43({}, _this._values, bucket_1.offset).move({});
                    result._unsafeInsertNewKeyValue({}, key, value);
                }
            }
            ;
            _this._storage._hashTable.clear({});
            _this._storage._count = 0;
        }
        ;
        _this._storage = result._storage;
    };
    /*Swift.(file)._NativeDictionary.copyAndResize(capacity:Int)*/
    /*Swift.(file)._NativeDictionary.copyAndResize(capacity:Int)*/
    _NativeDictionary.prototype.copyAndResizeCapacity = function ($info, capacity) {
        var _this = this;
        var capacity = /*dot_syntax_base_ignored*/ max({}, capacity, _this.capacity);
        var newStorage = _DictionaryStorage.resizeOriginalCapacityMove({}, _this._storage, capacity, false);
        var result = _create(_NativeDictionary, 'init_RawDictionaryStorage', {}, /*derived_to_base_expr*/ newStorage);
        if ((Int.infix_62({}, _this.count, 0))) {
            {
                var $bucket$generator_2 = _cloneStruct(_this.hashTable.makeIterator({}));
                while (true) {
                    var $ifLet0, bucket_1;
                    if (!((($ifLet0 = $bucket$generator_2.next({ $setThis: function ($val) { return $bucket$generator_2 = $val; } })) || true) && $ifLet0 != null && ((bucket_1 = $ifLet0) || true)))
                        break;
                    result._unsafeInsertNewKeyValue({}, _this.uncheckedKeyAt({}, bucket_1), _this.uncheckedValueAt({}, bucket_1));
                }
            }
            ;
        }
        ;
        _this._storage = result._storage;
    };
    /*Swift.(file)._NativeDictionary.copy()*/
    /*Swift.(file)._NativeDictionary.copy()*/
    _NativeDictionary.prototype.copy = function ($info) {
        var _this = this;
        var newStorage = _DictionaryStorage.copyOriginal({}, _this._storage);
        var result = _create(_NativeDictionary, 'init_RawDictionaryStorage', {}, /*derived_to_base_expr*/ newStorage);
        if ((Int.infix_62({}, _this.count, 0))) {
            result.hashTable.copyContentsOf({}, _this.hashTable);
            result._storage._count = _this.count;
            {
                var $bucket$generator_3 = _cloneStruct(_this.hashTable.makeIterator({}));
                while (true) {
                    var $ifLet0, bucket_1;
                    if (!((($ifLet0 = $bucket$generator_3.next({ $setThis: function ($val) { return $bucket$generator_3 = $val; } })) || true) && $ifLet0 != null && ((bucket_1 = $ifLet0) || true)))
                        break;
                    var key = _this.uncheckedKeyAt({}, bucket_1);
                    var value = _this.uncheckedValueAt({}, bucket_1);
                    result.uncheckedInitializeAtToKeyValue({}, bucket_1, key, value);
                }
            }
            ;
        }
        ;
        _this._storage = result._storage;
    };
    /*Swift.(file)._NativeDictionary.ensureUnique(isUnique:Bool,capacity:Int)*/
    /*Swift.(file)._NativeDictionary.ensureUnique(isUnique:Bool,capacity:Int)*/
    _NativeDictionary.prototype.ensureUniqueIsUniqueCapacity = function ($info, isUnique, capacity) {
        var _this = this;
        if ((_fastPath({}, Bool.infix_38_38({}, Int.infix_60_61({}, capacity, _this.capacity), function () { return isUnique; })))) {
            return false;
        }
        ;
        if ((isUnique)) {
            _this.resizeCapacity({ $setThis: function ($val) { return $info.$setThis(_this = _cloneStruct($val)); } }, capacity);
            return true;
        }
        ;
        if ((Int.infix_60_61({}, capacity, _this.capacity))) {
            _this.copy({ $setThis: function ($val) { return $info.$setThis(_this = _cloneStruct($val)); } });
            return false;
        }
        ;
        _this.copyAndResizeCapacity({ $setThis: function ($val) { return $info.$setThis(_this = _cloneStruct($val)); } }, capacity);
        return true;
    };
    /*Swift.(file)._NativeDictionary.reserveCapacity(_:Int,isUnique:Bool)*/
    /*Swift.(file)._NativeDictionary.reserveCapacity(_:Int,isUnique:Bool)*/
    _NativeDictionary.prototype.reserveCapacityIsUnique = function ($info, capacity, isUnique) {
        throw 'unsupported method Swift.(file)._NativeDictionary.reserveCapacity(_:Int,isUnique:Bool) in ' + this.constructor.name;
    };
    /*Swift.(file)._NativeDictionary.validatedBucket(for:_HashTable.Index)*/
    /*Swift.(file)._NativeDictionary.validatedBucket(for:_HashTable.Index)*/
    _NativeDictionary.prototype.validatedBucketFor = function ($info, index) {
        throw 'unsupported method Swift.(file)._NativeDictionary.validatedBucket(for:_HashTable.Index) in ' + this.constructor.name;
    };
    /*Swift.(file)._NativeDictionary.validatedBucket(for:Dictionary<Key, Value>.Index)*/
    /*Swift.(file)._NativeDictionary.validatedBucket(for:Dictionary<Key, Value>.Index)*/
    _NativeDictionary.prototype.validatedBucketFor = function ($info, index) {
        var _this = this;
        if (!((index._isNative))) {
            index._cocoaPath({});
            var cocoa = _cloneStruct(index._asCocoa);
            if ((Int32.infix_61_61({}, cocoa.age, _this.age))) {
                var key = _forceBridgeFromObjectiveC({}, cocoa.key, ((function () { throw '!unclarifiedGeneric:Key'; })()));
                var $tuple = _this.find({}, key), bucket = $tuple && $tuple[0], found = $tuple && $tuple[1];
                if ((found)) {
                    return bucket;
                }
                ;
            }
            ;
            preconditionFailureFileLine({}, function () { return "Attempting to access Dictionary elements using an invalid index"; }, '?3', '?3');
        }
        ;
        return _this.validatedBucketFor({}, index._asNative);
    };
    /*Swift.(file)._NativeDictionary.startIndex*/
    _NativeDictionary.prototype.startIndex$get = function () {
        var _this = this;
        var bucket = _cloneStruct(_this.hashTable.startBucket);
        return _create(_NativeDictionary.Index, 'init_native_HashTableIndex', {}, _create(_HashTable.Index, 'initBucket_HashTableBucketAgeInt32', {}, bucket, _this.age));
    };
    Object.defineProperty(_NativeDictionary.prototype, "startIndex", {
        get: function () { return this.startIndex$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file)._NativeDictionary.endIndex*/
    _NativeDictionary.prototype.endIndex$get = function () {
        var _this = this;
        var bucket = _cloneStruct(_this.hashTable.endBucket);
        return _create(_NativeDictionary.Index, 'init_native_HashTableIndex', {}, _create(_HashTable.Index, 'initBucket_HashTableBucketAgeInt32', {}, bucket, _this.age));
    };
    Object.defineProperty(_NativeDictionary.prototype, "endIndex", {
        get: function () { return this.endIndex$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file)._NativeDictionary.index(after:_NativeDictionary<Key, Value>.Index)*/
    /*Swift.(file)._DictionaryBuffer.index(after:Self.Index)*/
    _NativeDictionary.prototype.indexAfter = function ($info, index) {
        var _this = this;
        if (!((_fastPath({}, index._isNative)))) {
            var _1 = _cloneStruct(_this.validatedBucketFor({}, index));
            var i = _cloneStruct(index._asCocoa);
            return _create(_NativeDictionary.Index, 'init_cocoa_CocoaDictionaryIndex', {}, i.dictionary.indexAfter({}, i));
        }
        ;
        var bucket = _cloneStruct(_this.validatedBucketFor({}, index._asNative));
        var next = _cloneStruct(_this.hashTable.occupiedBucketAfter({}, bucket));
        return _create(_NativeDictionary.Index, 'init_native_HashTableIndex', {}, _create(_HashTable.Index, 'initBucket_HashTableBucketAgeInt32', {}, next, _this.age));
    };
    /*Swift.(file)._NativeDictionary.index(forKey:Key)*/
    /*Swift.(file)._DictionaryBuffer.index(forKey:Self.Key)*/
    _NativeDictionary.prototype.indexForKey = function ($info, key) {
        var _this = this;
        if ((Int.infix_61_61({}, _this.count, 0))) {
            return null;
        }
        ;
        var $tuple = _this.find({}, key), bucket = $tuple && $tuple[0], found = $tuple && $tuple[1];
        if (!((found))) {
            return null;
        }
        ;
        return _create(_NativeDictionary.Index, 'init_native_HashTableIndex', {}, _create(_HashTable.Index, 'initBucket_HashTableBucketAgeInt32', {}, bucket, _this.age));
    };
    /*Swift.(file)._NativeDictionary.count*/
    _NativeDictionary.prototype.count$get = function () {
        var _this = this;
        return _assumeNonNegative({}, _this._storage._count);
    };
    Object.defineProperty(_NativeDictionary.prototype, "count", {
        get: function () { return this.count$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file)._NativeDictionary.contains(_:Key)*/
    /*Swift.(file)._DictionaryBuffer.contains(_:Self.Key)*/
    _NativeDictionary.prototype.contains = function ($info, key) {
        var _this = this;
        return _this.find({}, key)["1"];
    };
    /*Swift.(file)._NativeDictionary.lookup(_:Key)*/
    /*Swift.(file)._DictionaryBuffer.lookup(_:Self.Key)*/
    _NativeDictionary.prototype.lookup = function ($info, key) {
        var _this = this;
        if ((Int.infix_61_61({}, _this.count, 0))) {
            return null;
        }
        ;
        var $tuple = _this.find({}, key), bucket = $tuple && $tuple[0], found = $tuple && $tuple[1];
        if (!((found))) {
            return null;
        }
        ;
        return _this.uncheckedValueAt({}, bucket);
    };
    /*Swift.(file)._NativeDictionary.lookup(_:_NativeDictionary<Key, Value>.Index)*/
    /*Swift.(file)._DictionaryBuffer.lookup(_:Self.Index)*/
    _NativeDictionary.prototype.lookup = function ($info, index) {
        var _this = this;
        var bucket = _cloneStruct(_this.validatedBucketFor({}, index));
        var key = _this.uncheckedKeyAt({}, bucket);
        var value = _this.uncheckedValueAt({}, bucket);
        return { 0: key, 1: value };
    };
    /*Swift.(file)._NativeDictionary.key(at:_NativeDictionary<Key, Value>.Index)*/
    /*Swift.(file)._DictionaryBuffer.key(at:Self.Index)*/
    _NativeDictionary.prototype.keyAt = function ($info, index) {
        var _this = this;
        var bucket = _cloneStruct(_this.validatedBucketFor({}, index));
        return _this.uncheckedKeyAt({}, bucket);
    };
    /*Swift.(file)._NativeDictionary.value(at:_NativeDictionary<Key, Value>.Index)*/
    /*Swift.(file)._DictionaryBuffer.value(at:Self.Index)*/
    _NativeDictionary.prototype.valueAt = function ($info, index) {
        var _this = this;
        var bucket = _cloneStruct(_this.validatedBucketFor({}, index));
        return _this.uncheckedValueAt({}, bucket);
    };
    /*Swift.(file)._NativeDictionary.subscript(_:Key,isUnique:Bool)*/
    /*Swift.(file)._NativeDictionary.subscript(_:Key,isUnique:Bool)*/
    _NativeDictionary.prototype.subscriptIsUnique$get = function ($info, key, isUnique) {
        var _this = this;
        return _this.lookup({}, key);
    };
    _NativeDictionary.prototype.subscriptIsUnique$_modify = function ($info, key, isUnique) {
        var _this = this;
        var $tuple = _this.mutatingFindIsUnique({ $setThis: function ($val) { return $info.$setThis(_this = _cloneStruct($val)); } }, key, isUnique), bucket = $tuple && $tuple[0], found = $tuple && $tuple[1];
        if ((found)) {
            var value_4 = UnsafeMutablePointer.infix_43({}, _this._values, bucket.offset).move({});
            var $defer_1 = function () {
                var $ifLet0, value_1;
                if ((($ifLet0 = value_4) || true) && $ifLet0 != null && ((value_1 = $ifLet0) || true)) {
                    UnsafeMutablePointer.infix_43({}, _this._values, bucket.offset).initializeTo({}, value_1);
                }
                else {
                    UnsafeMutablePointer.infix_43({}, _this._keys, bucket.offset).deinitializeCount({}, 1);
                    _this._deleteAt({}, bucket);
                }
                ;
            };
            var $result = (function () {
                try {
                    ;
                    /*yield*/ ;
                }
                catch ($error) {
                    $defer_1({});
                    throw $error;
                }
            })();
            $defer_1({});
            return $result;
        }
        else {
            var value_5 = null;
            var $defer_2 = function () {
                var $ifLet2, value_3;
                if ((($ifLet2 = value_5) || true) && $ifLet2 != null && ((value_3 = $ifLet2) || true)) {
                    _this._insertAtKeyValue({}, bucket, key, value_3);
                }
                ;
            };
            var $result = (function () {
                try {
                    ;
                    /*yield*/ ;
                }
                catch ($error) {
                    $defer_2({});
                    throw $error;
                }
            })();
            $defer_2({});
            return $result;
        }
    }; /*Swift.(file)._NativeDictionary.subscript(_:Key,isUnique:Bool)*/
    /*Swift.(file)._NativeDictionary.subscript(_:Key,isUnique:Bool)*/
    _NativeDictionary.prototype.subscriptIsUnique$_modify = function ($info, key, isUnique) {
        var _this = this;
        return _this.lookup({}, key);
    };
    _NativeDictionary.prototype.subscriptIsUnique$_modify = function ($info, key, isUnique) {
        var _this = this;
        var $tuple = _this.mutatingFindIsUnique({ $setThis: function ($val) { return $info.$setThis(_this = _cloneStruct($val)); } }, key, isUnique), bucket = $tuple && $tuple[0], found = $tuple && $tuple[1];
        if ((found)) {
            var value_6 = UnsafeMutablePointer.infix_43({}, _this._values, bucket.offset).move({});
            var $defer_3 = function () {
                var $ifLet0, value_1;
                if ((($ifLet0 = value_6) || true) && $ifLet0 != null && ((value_1 = $ifLet0) || true)) {
                    UnsafeMutablePointer.infix_43({}, _this._values, bucket.offset).initializeTo({}, value_1);
                }
                else {
                    UnsafeMutablePointer.infix_43({}, _this._keys, bucket.offset).deinitializeCount({}, 1);
                    _this._deleteAt({}, bucket);
                }
                ;
            };
            var $result = (function () {
                try {
                    ;
                    /*yield*/ ;
                }
                catch ($error) {
                    $defer_3({});
                    throw $error;
                }
            })();
            $defer_3({});
            return $result;
        }
        else {
            var value_7 = null;
            var $defer_4 = function () {
                var $ifLet2, value_3;
                if ((($ifLet2 = value_7) || true) && $ifLet2 != null && ((value_3 = $ifLet2) || true)) {
                    _this._insertAtKeyValue({}, bucket, key, value_3);
                }
                ;
            };
            var $result = (function () {
                try {
                    ;
                    /*yield*/ ;
                }
                catch ($error) {
                    $defer_4({});
                    throw $error;
                }
            })();
            $defer_4({});
            return $result;
        }
    };
    /*Swift.(file)._NativeDictionary.insertNew(key:Key,value:Value)*/
    /*Swift.(file)._NativeDictionary.insertNew(key:Key,value:Value)*/
    _NativeDictionary.prototype.insertNewKeyValue = function ($info, key, value) {
        var _this = this;
        _.discardAssignment = _this.ensureUniqueIsUniqueCapacity({ $setThis: function ($val) { return $info.$setThis(_this = _cloneStruct($val)); } }, true, Int.infix_43({}, _this.count, 1));
        _this._unsafeInsertNewKeyValue({}, key, value);
    };
    /*Swift.(file)._NativeDictionary.mutatingFind(_:Key,isUnique:Bool)*/
    /*Swift.(file)._NativeDictionary.mutatingFind(_:Key,isUnique:Bool)*/
    _NativeDictionary.prototype.mutatingFindIsUnique = function ($info, key, isUnique) {
        var _this = this;
        var $tuple = _this.find({}, key), bucket = $tuple && $tuple[0], found = $tuple && $tuple[1];
        var rehashed = _this.ensureUniqueIsUniqueCapacity({ $setThis: function ($val) { return $info.$setThis(_this = _cloneStruct($val)); } }, isUnique, Int.infix_43({}, _this.count, (found ? 0 : 1)));
        if (!((rehashed))) {
            return { 0: bucket, 1: found };
        }
        ;
        var $tuple = _this.find({}, key), b = $tuple && $tuple[0], f = $tuple && $tuple[1];
        if ((Bool.infix_33_61({}, f, found))) {
            KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS({}, ((function () { throw '!unclarifiedGeneric:Key'; })()));
        }
        ;
        return { 0: b, 1: found };
    };
    /*Swift.(file)._NativeDictionary.updateValue(_:Value,forKey:Key,isUnique:Bool)*/
    /*Swift.(file)._NativeDictionary.updateValue(_:Value,forKey:Key,isUnique:Bool)*/
    _NativeDictionary.prototype.updateValueForKeyIsUnique = function ($info, value, key, isUnique) {
        var _this = this;
        var $tuple = _this.mutatingFindIsUnique({ $setThis: function ($val) { return $info.$setThis(_this = _cloneStruct($val)); } }, key, isUnique), bucket = $tuple && $tuple[0], found = $tuple && $tuple[1];
        if ((found)) {
            var oldValue = UnsafeMutablePointer.infix_43({}, _this._values, bucket.offset).move({});
            UnsafeMutablePointer.infix_43({}, _this._values, bucket.offset).initializeTo({}, value);
            return oldValue;
        }
        ;
        _this._insertAtKeyValue({}, bucket, key, value);
        return null;
    };
    /*Swift.(file)._NativeDictionary.setValue(_:Value,forKey:Key,isUnique:Bool)*/
    /*Swift.(file)._NativeDictionary.setValue(_:Value,forKey:Key,isUnique:Bool)*/
    _NativeDictionary.prototype.setValueForKeyIsUnique = function ($info, value, key, isUnique) {
        var _this = this;
        var $tuple = _this.mutatingFindIsUnique({ $setThis: function ($val) { return $info.$setThis(_this = _cloneStruct($val)); } }, key, isUnique), bucket = $tuple && $tuple[0], found = $tuple && $tuple[1];
        if ((found)) {
            UnsafeMutablePointer.infix_43({}, _this._values, bucket.offset).pointee = value;
        }
        else {
            _this._insertAtKeyValue({}, bucket, key, value);
        }
    };
    /*Swift.(file)._NativeDictionary.swapValuesAt(_:_NativeDictionary<Key, Value>.Bucket,_:_NativeDictionary<Key, Value>.Bucket,isUnique:Bool)*/
    /*Swift.(file)._NativeDictionary.swapValuesAt(_:_NativeDictionary<Key, Value>.Bucket,_:_NativeDictionary<Key, Value>.Bucket,isUnique:Bool)*/
    _NativeDictionary.prototype.swapValuesAtIsUnique = function ($info, a, b, isUnique) {
        throw 'unsupported method Swift.(file)._NativeDictionary.swapValuesAt(_:_NativeDictionary<Key, Value>.Bucket,_:_NativeDictionary<Key, Value>.Bucket,isUnique:Bool) in ' + this.constructor.name;
    };
    /*Swift.(file)._NativeDictionary.isEqual(to:_NativeDictionary<Key, Value>)*/
    /*Swift.(file)._NativeDictionary.isEqual(to:_NativeDictionary<Key, Value>)*/
    _NativeDictionary.prototype.isEqualTo = function ($info, other) {
        var _this = this;
        if ((infix_61_61_61({}, _this._storage, other._storage))) {
            return true;
        }
        ;
        if ((Int.infix_33_61({}, _this.count, other.count))) {
            return false;
        }
        ;
        {
            var $generator_3 = _cloneStruct(_this.makeIterator({}));
            while (true) {
                var $ifLet0, key_1, value_2;
                if (!((($ifLet0 = (((_.tmp0 = $generator_3.next({ $setThis: function ($val) { return $generator_3 = $val; } })) != null) ? (_.tmp0) : null)) || true) && $ifLet0 != null && ((key_1 = $ifLet0[0]) || true) && ((value_2 = $ifLet0[1]) || true)))
                    break;
                var $tuple = other.find({}, key_1), bucket = $tuple && $tuple[0], found = $tuple && $tuple[1];
                if (!((found) && ((_.arg0 = other.uncheckedValueAt({}, bucket)).constructor.infix_61_61({}, _.arg0, value_2)))) {
                    return false;
                }
                ;
            }
        }
        ;
        return true;
    };
    /*Swift.(file)._NativeDictionary.isEqual(to:_CocoaDictionary)*/
    /*Swift.(file)._NativeDictionary.isEqual(to:_CocoaDictionary)*/
    _NativeDictionary.prototype.isEqualTo = function ($info, other) {
        throw 'unsupported method Swift.(file)._NativeDictionary.isEqual(to:_CocoaDictionary) in ' + this.constructor.name;
    };
    /*Swift.(file)._NativeDictionary.hashValue(at:_NativeDictionary<Key, Value>.Bucket)*/
    /*Swift.(file)._HashTableDelegate.hashValue(at:_HashTable.Bucket)*/
    _NativeDictionary.prototype.hashValueAt = function ($info, bucket) {
        throw 'unsupported method Swift.(file)._NativeDictionary.hashValue(at:_NativeDictionary<Key, Value>.Bucket) in ' + this.constructor.name;
    };
    /*Swift.(file)._NativeDictionary.moveEntry(from:_NativeDictionary<Key, Value>.Bucket,to:_NativeDictionary<Key, Value>.Bucket)*/
    /*Swift.(file)._HashTableDelegate.moveEntry(from:_HashTable.Bucket,to:_HashTable.Bucket)*/
    _NativeDictionary.prototype.moveEntryFromTo = function ($info, source, target) {
        throw 'unsupported method Swift.(file)._NativeDictionary.moveEntry(from:_NativeDictionary<Key, Value>.Bucket,to:_NativeDictionary<Key, Value>.Bucket) in ' + this.constructor.name;
    };
    /*Swift.(file)._NativeDictionary.swapEntry(_:_NativeDictionary<Key, Value>.Bucket,with:_NativeDictionary<Key, Value>.Bucket)*/
    /*Swift.(file)._NativeDictionary.swapEntry(_:_NativeDictionary<Key, Value>.Bucket,with:_NativeDictionary<Key, Value>.Bucket)*/
    _NativeDictionary.prototype.swapEntryWith = function ($info, left, right) {
        throw 'unsupported method Swift.(file)._NativeDictionary.swapEntry(_:_NativeDictionary<Key, Value>.Bucket,with:_NativeDictionary<Key, Value>.Bucket) in ' + this.constructor.name;
    };
    /*Swift.(file)._NativeDictionary.uncheckedRemove(at:_NativeDictionary<Key, Value>.Bucket,isUnique:Bool)*/
    /*Swift.(file)._NativeDictionary.uncheckedRemove(at:_NativeDictionary<Key, Value>.Bucket,isUnique:Bool)*/
    _NativeDictionary.prototype.uncheckedRemoveAtIsUnique = function ($info, bucket, isUnique) {
        throw 'unsupported method Swift.(file)._NativeDictionary.uncheckedRemove(at:_NativeDictionary<Key, Value>.Bucket,isUnique:Bool) in ' + this.constructor.name;
    };
    /*Swift.(file)._NativeDictionary.removeAll(isUnique:Bool)*/
    /*Swift.(file)._NativeDictionary.removeAll(isUnique:Bool)*/
    _NativeDictionary.prototype.removeAllIsUnique = function ($info, isUnique) {
        var _this = this;
        if (!((isUnique))) {
            var scale = _this._storage._scale;
            _this._storage = /*derived_to_base_expr*/ _DictionaryStorage.allocateScaleAgeSeed({}, scale, null, null);
            return;
        }
        ;
        {
            var $bucket$generator_4 = _cloneStruct(_this.hashTable.makeIterator({}));
            while (true) {
                var $ifLet0, bucket_1;
                if (!((($ifLet0 = $bucket$generator_4.next({ $setThis: function ($val) { return $bucket$generator_4 = $val; } })) || true) && $ifLet0 != null && ((bucket_1 = $ifLet0) || true)))
                    break;
                UnsafeMutablePointer.infix_43({}, _this._keys, bucket_1.offset).deinitializeCount({}, 1);
                UnsafeMutablePointer.infix_43({}, _this._values, bucket_1.offset).deinitializeCount({}, 1);
            }
        }
        ;
        _this.hashTable.clear({});
        _this._storage._count = 0;
        _this.invalidateIndices({});
    };
    /*Swift.(file)._NativeDictionary.mapValues(_:(Value) throws -> T)*/
    /*Swift.(file)._NativeDictionary.mapValues(_:(Value) throws -> T)*/
    _NativeDictionary.prototype.mapValues = function ($info, transform) {
        var _this = this;
        var resultStorage = _DictionaryStorage.copyOriginal({}, _this._storage);
        var result = _create(_NativeDictionary, 'init_RawDictionaryStorage', {}, /*derived_to_base_expr*/ resultStorage);
        {
            var $bucket$generator_5 = _cloneStruct(_this.hashTable.makeIterator({}));
            while (true) {
                var $ifLet0, bucket_1;
                if (!((($ifLet0 = $bucket$generator_5.next({ $setThis: function ($val) { return $bucket$generator_5 = $val; } })) || true) && $ifLet0 != null && ((bucket_1 = $ifLet0) || true)))
                    break;
                var key = _this.uncheckedKeyAt({}, bucket_1);
                var value = _this.uncheckedValueAt({}, bucket_1);
                result._insertAtKeyValue({}, bucket_1, key, transform({}, value));
            }
        }
        ;
        return result;
    };
    /*Swift.(file)._NativeDictionary.merge(_:S,isUnique:Bool,uniquingKeysWith:(Value, Value) throws -> Value)*/
    /*Swift.(file)._NativeDictionary.merge(_:S,isUnique:Bool,uniquingKeysWith:(Value, Value) throws -> Value)*/
    _NativeDictionary.prototype.mergeIsUniqueUniquingKeysWith = function ($info, keysAndValues, isUnique, combine) {
        var _this = this;
        var isUnique_dupl = isUnique;
        {
            var $generator_4 = keysAndValues.makeIterator({});
            var _loop_3 = function () {
                var $ifLet0, key_1, value_2;
                if (!((($ifLet0 = $generator_4.next({ $setThis: function ($val) { return $generator_4 = $val; } })) || true) && $ifLet0 != null && ((key_1 = $ifLet0[0]) || true) && ((value_2 = $ifLet0[1]) || true)))
                    return "break";
                var $tuple = _this.mutatingFindIsUnique({ $setThis: function ($val) { return $info.$setThis(_this = _cloneStruct($val)); } }, key_1, isUnique_dupl), bucket = $tuple && $tuple[0], found = $tuple && $tuple[1];
                isUnique_dupl = true;
                if ((found)) {
                    try {
                        var newValue = combine({}, _this.uncheckedValueAt({}, bucket), value_2);
                        _this._values.subscript$set({ $setThis: function ($val) { return _this._values = _cloneStruct($val); } }, newValue, bucket.offset);
                    }
                    catch (error) {
                        if ((error instanceof _MergeError && error.rawValue == _MergeError.keyCollision.rawValue)) {
                            fatalErrorFileLine({}, function () { return (("Duplicate values for key: '") + (key_1) + ("'")); }, '?3', '?3');
                        }
                        else
                            throw error;
                    }
                    ;
                }
                else {
                    _this._insertAtKeyValue({}, bucket, key_1, value_2);
                }
                ;
            };
            while (true) {
                var state_3 = _loop_3();
                if (state_3 === "break")
                    break;
            }
        }
    };
    /*Swift.(file)._NativeDictionary.init(grouping:S,by:(S.Element) throws -> Key)*/
    /*Swift.(file)._NativeDictionary.init(grouping:S,by:(S.Element) throws -> Key)*/
    _NativeDictionary.prototype.initGroupingByfunction_type = function ($info, values, keyForValue) {
        var _this = this;
        _this.init({});
        {
            var $value$generator_1 = values.makeIterator({});
            var _loop_4 = function () {
                var $ifLet0, value_1;
                if (!((($ifLet0 = $value$generator_1.next({ $setThis: function ($val) { return $value$generator_1 = $val; } })) || true) && $ifLet0 != null && ((value_1 = $ifLet0) || true)))
                    return "break";
                var key = keyForValue({}, value_1);
                var $tuple = _this.mutatingFindIsUnique({ $setThis: function ($val) { return $info.$setThis(_this = _cloneStruct($val)); } }, key, true), bucket = $tuple && $tuple[0], found = $tuple && $tuple[1];
                if ((found)) {
                    _this._values.subscript$get({}, bucket.offset).append({ $setThis: function ($val) { return _this._values.subscript$set({ $setThis: function ($val) { return _this._values = _cloneStruct($val); } }, $val, bucket.offset); } }, value_1);
                }
                else {
                    _this._insertAtKeyValue({}, bucket, key, _create(Array, 'initArrayLiteralArray', {}, [value_1]));
                }
                ;
            };
            while (true) {
                var state_4 = _loop_4();
                if (state_4 === "break")
                    break;
            }
        }
        ;
        return;
    };
    /*Swift.(file)._NativeDictionary.makeIterator()*/
    /*Swift.(file).Sequence.makeIterator()*/
    _NativeDictionary.prototype.makeIterator = function ($info) {
        var _this = this;
        return _create(_NativeDictionary.Iterator, 'init_NativeDictionary', {}, _this);
    };
    _NativeDictionary.prototype.init$vars = function () {
    };
    var _6;
    _NativeDictionary.$struct = true;
    _NativeDictionary.$infoAddress = '';
    _NativeDictionary.Iterator = (_6 = /** @class */ (function () {
            function class_30() {
            }
            /*Swift.(file)._NativeDictionary.Iterator.base*/
            class_30.prototype.base$get = function () {
                throw 'unsupported variable Swift.(file)._NativeDictionary.Iterator.base in ' + this.constructor.name;
            };
            Object.defineProperty(class_30.prototype, "base", {
                get: function () { return this.base$get(); },
                enumerable: true,
                configurable: true
            });
            ;
            /*Swift.(file)._NativeDictionary.Iterator.iterator*/
            class_30.prototype.iterator$get = function () {
                throw 'unsupported variable Swift.(file)._NativeDictionary.Iterator.iterator in ' + this.constructor.name;
            };
            Object.defineProperty(class_30.prototype, "iterator", {
                get: function () { return this.iterator$get(); },
                enumerable: true,
                configurable: true
            });
            ;
            /*Swift.(file)._NativeDictionary.Iterator.init(_:_NativeDictionary<Key, Value>)*/
            /*Swift.(file)._NativeDictionary.Iterator.init(_:_NativeDictionary<Key, Value>)*/
            class_30.prototype.init_NativeDictionary = function ($info, base) {
                throw 'unsupported method Swift.(file)._NativeDictionary.Iterator.init(_:_NativeDictionary<Key, Value>) in ' + this.constructor.name;
            };
            /*Swift.(file)._NativeDictionary.Iterator.nextKey()*/
            /*Swift.(file)._NativeDictionary.Iterator.nextKey()*/
            class_30.prototype.nextKey = function ($info) {
                var _this = this;
                var $ifLet0, index_1;
                if (!((($ifLet0 = _this.iterator.next({ $setThis: function ($val) { return _this.iterator = $val; } })) || true) && $ifLet0 != null && ((index_1 = $ifLet0) || true))) {
                    return null;
                }
                ;
                return _this.base.uncheckedKeyAt({}, index_1);
            };
            /*Swift.(file)._NativeDictionary.Iterator.nextValue()*/
            /*Swift.(file)._NativeDictionary.Iterator.nextValue()*/
            class_30.prototype.nextValue = function ($info) {
                var _this = this;
                var $ifLet0, index_1;
                if (!((($ifLet0 = _this.iterator.next({ $setThis: function ($val) { return _this.iterator = $val; } })) || true) && $ifLet0 != null && ((index_1 = $ifLet0) || true))) {
                    return null;
                }
                ;
                return _this.base.uncheckedValueAt({}, index_1);
            };
            /*Swift.(file)._NativeDictionary.Iterator.next()*/
            /*Swift.(file).IteratorProtocol.next()*/
            class_30.prototype.next = function ($info) {
                var _this = this;
                var $ifLet0, index_1;
                if (!((($ifLet0 = _this.iterator.next({ $setThis: function ($val) { return _this.iterator = $val; } })) || true) && $ifLet0 != null && ((index_1 = $ifLet0) || true))) {
                    return null;
                }
                ;
                var key = _this.base.uncheckedKeyAt({}, index_1);
                var value = _this.base.uncheckedValueAt({}, index_1);
                return { 0: key, 1: value };
            };
            class_30.prototype.init$vars = function () {
            };
            return class_30;
        }()),
        _6.$struct = true,
        _6.$infoAddress = '',
        _6);
    return _NativeDictionary;
}());
if (typeof IteratorProtocol$implementation != 'undefined')
    _mixin(_NativeDictionary.Iterator, IteratorProtocol$implementation, false);
if (typeof _DictionaryBuffer$implementation != 'undefined')
    _mixin(_NativeDictionary, _DictionaryBuffer$implementation, false);
if (typeof _HashTableDelegate$implementation != 'undefined')
    _mixin(_NativeDictionary, _HashTableDelegate$implementation, false);
if (typeof Sequence$implementation != 'undefined')
    _mixin(_NativeDictionary, Sequence$implementation, false);
var _NativeSet = /** @class */ (function () {
    function _NativeSet() {
    }
    /*Swift.(file)._NativeSet.init()*/
    /*Swift.(file)._NativeSet.init()*/
    _NativeSet.prototype.init = function ($info) {
        throw 'unsupported method Swift.(file)._NativeSet.init() in ' + this.constructor.name;
    };
    /*Swift.(file)._NativeSet.init(_:_RawSetStorage)*/
    /*Swift.(file)._NativeSet.init(_:_RawSetStorage)*/
    _NativeSet.prototype.init_RawSetStorage = function ($info, storage) {
        throw 'unsupported method Swift.(file)._NativeSet.init(_:_RawSetStorage) in ' + this.constructor.name;
    };
    /*Swift.(file)._NativeSet.init(capacity:Int)*/
    /*Swift.(file)._NativeSet.init(capacity:Int)*/
    _NativeSet.prototype.initCapacityInt = function ($info, capacity) {
        throw 'unsupported method Swift.(file)._NativeSet.init(capacity:Int) in ' + this.constructor.name;
    };
    /*Swift.(file)._NativeSet.init(_:_CocoaSet)*/
    /*Swift.(file)._NativeSet.init(_:_CocoaSet)*/
    _NativeSet.prototype.init_CocoaSet = function ($info, cocoa) {
        throw 'unsupported method Swift.(file)._NativeSet.init(_:_CocoaSet) in ' + this.constructor.name;
    };
    /*Swift.(file)._NativeSet.init(_:_CocoaSet,capacity:Int)*/
    /*Swift.(file)._NativeSet.init(_:_CocoaSet,capacity:Int)*/
    _NativeSet.prototype.init_CocoaSetCapacityInt = function ($info, cocoa, capacity) {
        throw 'unsupported method Swift.(file)._NativeSet.init(_:_CocoaSet,capacity:Int) in ' + this.constructor.name;
    };
    /*Swift.(file)._NativeSet.capacity*/
    _NativeSet.prototype.capacity$get = function () {
        var _this = this;
        return _assumeNonNegative({}, _this._storage._capacity);
    };
    Object.defineProperty(_NativeSet.prototype, "capacity", {
        get: function () { return this.capacity$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file)._NativeSet.hashTable*/
    _NativeSet.prototype.hashTable$get = function () {
        var _this = this;
        return _this._storage._hashTable;
    };
    Object.defineProperty(_NativeSet.prototype, "hashTable", {
        get: function () { return this.hashTable$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file)._NativeSet.age*/
    _NativeSet.prototype.age$get = function () {
        var _this = this;
        return _this._storage._age;
    };
    Object.defineProperty(_NativeSet.prototype, "age", {
        get: function () { return this.age$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file)._NativeSet.invalidateIndices()*/
    /*Swift.(file)._NativeSet.invalidateIndices()*/
    _NativeSet.prototype.invalidateIndices = function ($info) {
        var _this = this;
        Int32.infix_38_43_61({}, { get: function () { return _this._storage._age; }, set: function ($val) { return _this._storage._age = $val; } }, 1);
    };
    /*Swift.(file)._NativeSet.uncheckedElement(at:_NativeSet<Element>.Bucket)*/
    /*Swift.(file)._NativeSet.uncheckedElement(at:_NativeSet<Element>.Bucket)*/
    _NativeSet.prototype.uncheckedElementAt = function ($info, bucket) {
        throw 'unsupported method Swift.(file)._NativeSet.uncheckedElement(at:_NativeSet<Element>.Bucket) in ' + this.constructor.name;
    };
    /*Swift.(file)._NativeSet.uncheckedInitialize(at:_NativeSet<Element>.Bucket,to:Element)*/
    /*Swift.(file)._NativeSet.uncheckedInitialize(at:_NativeSet<Element>.Bucket,to:Element)*/
    _NativeSet.prototype.uncheckedInitializeAtTo = function ($info, bucket, _element) {
        throw 'unsupported method Swift.(file)._NativeSet.uncheckedInitialize(at:_NativeSet<Element>.Bucket,to:Element) in ' + this.constructor.name;
    };
    /*Swift.(file)._NativeSet.hashValue(for:Element)*/
    /*Swift.(file)._NativeSet.hashValue(for:Element)*/
    _NativeSet.prototype.hashValueFor = function ($info, _element) {
        var _this = this;
        return _element._rawHashValueSeed({}, _this._storage._seed);
    };
    /*Swift.(file)._NativeSet.find(_:Element)*/
    /*Swift.(file)._NativeSet.find(_:Element)*/
    _NativeSet.prototype.find = function ($info, _element) {
        var _this = this;
        return _this.findHashValue({}, _element, _this.hashValueFor({}, _element));
    };
    /*Swift.(file)._NativeSet.find(_:Element,hashValue:Int)*/
    /*Swift.(file)._NativeSet.find(_:Element,hashValue:Int)*/
    _NativeSet.prototype.findHashValue = function ($info, _element, hashValue) {
        var _this = this;
        var hashTable = _cloneStruct(_this.hashTable);
        var bucket = _cloneStruct(hashTable.idealBucketForHashValue({}, hashValue));
        while (true) {
            if (!((hashTable._isOccupied({}, bucket))))
                break;
            if (((_.arg0 = _this.uncheckedElementAt({}, bucket)).constructor.infix_61_61({}, _.arg0, _element))) {
                return { 0: bucket, 1: true };
            }
            ;
            bucket = _cloneStruct(hashTable.bucketWrappedAfter({}, bucket));
        }
        ;
        return { 0: bucket, 1: false };
    };
    /*Swift.(file)._NativeSet.resize(capacity:Int)*/
    /*Swift.(file)._NativeSet.resize(capacity:Int)*/
    _NativeSet.prototype.resizeCapacity = function ($info, capacity) {
        var _this = this;
        var capacity = /*dot_syntax_base_ignored*/ max({}, capacity, _this.capacity);
        var result = _create(_NativeSet, 'init_RawSetStorage', {}, /*derived_to_base_expr*/ _SetStorage.resizeOriginalCapacityMove({}, _this._storage, capacity, true));
        if ((Int.infix_62({}, _this.count, 0))) {
            {
                var $bucket$generator_6 = _cloneStruct(_this.hashTable.makeIterator({}));
                while (true) {
                    var $ifLet0, bucket_1;
                    if (!((($ifLet0 = $bucket$generator_6.next({ $setThis: function ($val) { return $bucket$generator_6 = $val; } })) || true) && $ifLet0 != null && ((bucket_1 = $ifLet0) || true)))
                        break;
                    var _element = UnsafeMutablePointer.infix_43({}, _this._elements, bucket_1.offset).move({});
                    result._unsafeInsertNew({}, _element);
                }
            }
            ;
            _this._storage._hashTable.clear({});
            _this._storage._count = 0;
        }
        ;
        _this._storage = result._storage;
    };
    /*Swift.(file)._NativeSet.copyAndResize(capacity:Int)*/
    /*Swift.(file)._NativeSet.copyAndResize(capacity:Int)*/
    _NativeSet.prototype.copyAndResizeCapacity = function ($info, capacity) {
        var _this = this;
        var capacity = /*dot_syntax_base_ignored*/ max({}, capacity, _this.capacity);
        var result = _create(_NativeSet, 'init_RawSetStorage', {}, /*derived_to_base_expr*/ _SetStorage.resizeOriginalCapacityMove({}, _this._storage, capacity, false));
        if ((Int.infix_62({}, _this.count, 0))) {
            {
                var $bucket$generator_7 = _cloneStruct(_this.hashTable.makeIterator({}));
                while (true) {
                    var $ifLet0, bucket_1;
                    if (!((($ifLet0 = $bucket$generator_7.next({ $setThis: function ($val) { return $bucket$generator_7 = $val; } })) || true) && $ifLet0 != null && ((bucket_1 = $ifLet0) || true)))
                        break;
                    result._unsafeInsertNew({}, _this.uncheckedElementAt({}, bucket_1));
                }
            }
            ;
        }
        ;
        _this._storage = result._storage;
    };
    /*Swift.(file)._NativeSet.copy()*/
    /*Swift.(file)._NativeSet.copy()*/
    _NativeSet.prototype.copy = function ($info) {
        var _this = this;
        var newStorage = _SetStorage.copyOriginal({}, _this._storage);
        var result = _create(_NativeSet, 'init_RawSetStorage', {}, /*derived_to_base_expr*/ newStorage);
        if ((Int.infix_62({}, _this.count, 0))) {
            result.hashTable.copyContentsOf({}, _this.hashTable);
            result._storage._count = _this.count;
            {
                var $bucket$generator_8 = _cloneStruct(_this.hashTable.makeIterator({}));
                while (true) {
                    var $ifLet0, bucket_1;
                    if (!((($ifLet0 = $bucket$generator_8.next({ $setThis: function ($val) { return $bucket$generator_8 = $val; } })) || true) && $ifLet0 != null && ((bucket_1 = $ifLet0) || true)))
                        break;
                    var _element = _this.uncheckedElementAt({}, bucket_1);
                    result.uncheckedInitializeAtTo({}, bucket_1, _element);
                }
            }
            ;
        }
        ;
        _this._storage = result._storage;
    };
    /*Swift.(file)._NativeSet.ensureUnique(isUnique:Bool,capacity:Int)*/
    /*Swift.(file)._NativeSet.ensureUnique(isUnique:Bool,capacity:Int)*/
    _NativeSet.prototype.ensureUniqueIsUniqueCapacity = function ($info, isUnique, capacity) {
        var _this = this;
        if ((_fastPath({}, Bool.infix_38_38({}, Int.infix_60_61({}, capacity, _this.capacity), function () { return isUnique; })))) {
            return false;
        }
        ;
        if ((isUnique)) {
            _this.resizeCapacity({ $setThis: function ($val) { return $info.$setThis(_this = _cloneStruct($val)); } }, capacity);
            return true;
        }
        ;
        if ((Int.infix_60_61({}, capacity, _this.capacity))) {
            _this.copy({ $setThis: function ($val) { return $info.$setThis(_this = _cloneStruct($val)); } });
            return false;
        }
        ;
        _this.copyAndResizeCapacity({ $setThis: function ($val) { return $info.$setThis(_this = _cloneStruct($val)); } }, capacity);
        return true;
    };
    /*Swift.(file)._NativeSet.reserveCapacity(_:Int,isUnique:Bool)*/
    /*Swift.(file)._NativeSet.reserveCapacity(_:Int,isUnique:Bool)*/
    _NativeSet.prototype.reserveCapacityIsUnique = function ($info, capacity, isUnique) {
        throw 'unsupported method Swift.(file)._NativeSet.reserveCapacity(_:Int,isUnique:Bool) in ' + this.constructor.name;
    };
    /*Swift.(file)._NativeSet.validatedBucket(for:_HashTable.Index)*/
    /*Swift.(file)._NativeSet.validatedBucket(for:_HashTable.Index)*/
    _NativeSet.prototype.validatedBucketFor = function ($info, index) {
        throw 'unsupported method Swift.(file)._NativeSet.validatedBucket(for:_HashTable.Index) in ' + this.constructor.name;
    };
    /*Swift.(file)._NativeSet.validatedBucket(for:Set<Element>.Index)*/
    /*Swift.(file)._NativeSet.validatedBucket(for:Set<Element>.Index)*/
    _NativeSet.prototype.validatedBucketFor = function ($info, index) {
        var _this = this;
        if (!((index._isNative))) {
            index._cocoaPath({});
            var cocoa = _cloneStruct(index._asCocoa);
            if ((Int32.infix_61_61({}, cocoa.age, _this.age))) {
                var _element = _forceBridgeFromObjectiveC({}, cocoa._element, ((function () { throw '!unclarifiedGeneric:Element'; })()));
                var $tuple = _this.find({}, _element), bucket = $tuple && $tuple[0], found = $tuple && $tuple[1];
                if ((found)) {
                    return bucket;
                }
                ;
            }
            ;
            preconditionFailureFileLine({}, function () { return "Attempting to access Set elements using an invalid index"; }, '?3', '?3');
        }
        ;
        return _this.validatedBucketFor({}, index._asNative);
    };
    /*Swift.(file)._NativeSet.startIndex*/
    _NativeSet.prototype.startIndex$get = function () {
        var _this = this;
        var bucket = _cloneStruct(_this.hashTable.startBucket);
        return _create(_NativeSet.Index, 'init_native_HashTableIndex', {}, _create(_HashTable.Index, 'initBucket_HashTableBucketAgeInt32', {}, bucket, _this.age));
    };
    Object.defineProperty(_NativeSet.prototype, "startIndex", {
        get: function () { return this.startIndex$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file)._NativeSet.endIndex*/
    _NativeSet.prototype.endIndex$get = function () {
        var _this = this;
        var bucket = _cloneStruct(_this.hashTable.endBucket);
        return _create(_NativeSet.Index, 'init_native_HashTableIndex', {}, _create(_HashTable.Index, 'initBucket_HashTableBucketAgeInt32', {}, bucket, _this.age));
    };
    Object.defineProperty(_NativeSet.prototype, "endIndex", {
        get: function () { return this.endIndex$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file)._NativeSet.index(after:_NativeSet<Element>.Index)*/
    /*Swift.(file)._SetBuffer.index(after:Self.Index)*/
    _NativeSet.prototype.indexAfter = function ($info, index) {
        var _this = this;
        var bucket = _cloneStruct(_this.validatedBucketFor({}, index._asNative));
        var next = _cloneStruct(_this.hashTable.occupiedBucketAfter({}, bucket));
        return _create(_NativeSet.Index, 'init_native_HashTableIndex', {}, _create(_HashTable.Index, 'initBucket_HashTableBucketAgeInt32', {}, next, _this.age));
    };
    /*Swift.(file)._NativeSet.index(for:Element)*/
    /*Swift.(file)._SetBuffer.index(for:Self.Element)*/
    _NativeSet.prototype.indexFor = function ($info, _element) {
        var _this = this;
        if ((Int.infix_61_61({}, _this.count, 0))) {
            return null;
        }
        ;
        var $tuple = _this.find({}, _element), bucket = $tuple && $tuple[0], found = $tuple && $tuple[1];
        if (!((found))) {
            return null;
        }
        ;
        return _create(_NativeSet.Index, 'init_native_HashTableIndex', {}, _create(_HashTable.Index, 'initBucket_HashTableBucketAgeInt32', {}, bucket, _this.age));
    };
    /*Swift.(file)._NativeSet.count*/
    _NativeSet.prototype.count$get = function () {
        var _this = this;
        return _assumeNonNegative({}, _this._storage._count);
    };
    Object.defineProperty(_NativeSet.prototype, "count", {
        get: function () { return this.count$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file)._NativeSet.contains(_:Element)*/
    /*Swift.(file)._SetBuffer.contains(_:Self.Element)*/
    _NativeSet.prototype.contains = function ($info, member) {
        var _this = this;
        if ((Int.infix_61_61({}, _this.count, 0))) {
            return false;
        }
        ;
        return _this.find({}, member)["1"];
    };
    /*Swift.(file)._NativeSet.element(at:_NativeSet<Element>.Index)*/
    /*Swift.(file)._SetBuffer.element(at:Self.Index)*/
    _NativeSet.prototype.elementAt = function ($info, index) {
        var _this = this;
        var bucket = _cloneStruct(_this.validatedBucketFor({}, index));
        return _this.uncheckedElementAt({}, bucket);
    };
    /*Swift.(file)._NativeSet.insertNew(_:Element,isUnique:Bool)*/
    /*Swift.(file)._NativeSet.insertNew(_:Element,isUnique:Bool)*/
    _NativeSet.prototype.insertNewIsUnique = function ($info, _element, isUnique) {
        var _this = this;
        _.discardAssignment = _this.ensureUniqueIsUniqueCapacity({ $setThis: function ($val) { return $info.$setThis(_this = _cloneStruct($val)); } }, isUnique, Int.infix_43({}, _this.count, 1));
        _this._unsafeInsertNew({}, _element);
    };
    /*Swift.(file)._NativeSet.insertNew(_:Element,at:_NativeSet<Element>.Bucket,isUnique:Bool)*/
    /*Swift.(file)._NativeSet.insertNew(_:Element,at:_NativeSet<Element>.Bucket,isUnique:Bool)*/
    _NativeSet.prototype.insertNewAtIsUnique = function ($info, _element, bucket, isUnique) {
        throw 'unsupported method Swift.(file)._NativeSet.insertNew(_:Element,at:_NativeSet<Element>.Bucket,isUnique:Bool) in ' + this.constructor.name;
    };
    /*Swift.(file)._NativeSet.update(with:Element,isUnique:Bool)*/
    /*Swift.(file)._NativeSet.update(with:Element,isUnique:Bool)*/
    _NativeSet.prototype.updateWithIsUnique = function ($info, _element, isUnique) {
        var _this = this;
        var $tuple = _this.find({}, _element), bucket = $tuple && $tuple[0], found = $tuple && $tuple[1];
        var rehashed = _this.ensureUniqueIsUniqueCapacity({ $setThis: function ($val) { return $info.$setThis(_this = _cloneStruct($val)); } }, isUnique, Int.infix_43({}, _this.count, (found ? 0 : 1)));
        if ((rehashed)) {
            var $tuple_2 = _this.find({}, _element), b = $tuple_2 && $tuple_2[0], f = $tuple_2 && $tuple_2[1];
            if ((Bool.infix_33_61({}, f, found))) {
                ELEMENT_TYPE_OF_SET_VIOLATES_HASHABLE_REQUIREMENTS({}, ((function () { throw '!unclarifiedGeneric:Element'; })()));
            }
            ;
            bucket = _cloneStruct(b);
        }
        ;
        if ((found)) {
            var old = UnsafeMutablePointer.infix_43({}, _this._elements, bucket.offset).move({});
            _this.uncheckedInitializeAtTo({}, bucket, _element);
            return old;
        }
        ;
        _this._unsafeInsertNewAt({}, _element, bucket);
        return null;
    };
    /*Swift.(file)._NativeSet.isEqual(to:_NativeSet<Element>)*/
    /*Swift.(file)._NativeSet.isEqual(to:_NativeSet<Element>)*/
    _NativeSet.prototype.isEqualTo = function ($info, other) {
        var _this = this;
        if ((infix_61_61_61({}, _this._storage, other._storage))) {
            return true;
        }
        ;
        if ((Int.infix_33_61({}, _this.count, other.count))) {
            return false;
        }
        ;
        {
            var $member$generator_1 = _cloneStruct(_this.makeIterator({}));
            while (true) {
                var $ifLet0, member_1;
                if (!((($ifLet0 = $member$generator_1.next({ $setThis: function ($val) { return $member$generator_1 = $val; } })) || true) && $ifLet0 != null && ((member_1 = $ifLet0) || true)))
                    break;
                if (!((other.find({}, member_1)["1"]))) {
                    return false;
                }
                ;
            }
        }
        ;
        return true;
    };
    /*Swift.(file)._NativeSet.isEqual(to:_CocoaSet)*/
    /*Swift.(file)._NativeSet.isEqual(to:_CocoaSet)*/
    _NativeSet.prototype.isEqualTo = function ($info, other) {
        throw 'unsupported method Swift.(file)._NativeSet.isEqual(to:_CocoaSet) in ' + this.constructor.name;
    };
    /*Swift.(file)._NativeSet.hashValue(at:_NativeSet<Element>.Bucket)*/
    /*Swift.(file)._HashTableDelegate.hashValue(at:_HashTable.Bucket)*/
    _NativeSet.prototype.hashValueAt = function ($info, bucket) {
        throw 'unsupported method Swift.(file)._NativeSet.hashValue(at:_NativeSet<Element>.Bucket) in ' + this.constructor.name;
    };
    /*Swift.(file)._NativeSet.moveEntry(from:_NativeSet<Element>.Bucket,to:_NativeSet<Element>.Bucket)*/
    /*Swift.(file)._HashTableDelegate.moveEntry(from:_HashTable.Bucket,to:_HashTable.Bucket)*/
    _NativeSet.prototype.moveEntryFromTo = function ($info, source, target) {
        throw 'unsupported method Swift.(file)._NativeSet.moveEntry(from:_NativeSet<Element>.Bucket,to:_NativeSet<Element>.Bucket) in ' + this.constructor.name;
    };
    /*Swift.(file)._NativeSet.uncheckedRemove(at:_NativeSet<Element>.Bucket,isUnique:Bool)*/
    /*Swift.(file)._NativeSet.uncheckedRemove(at:_NativeSet<Element>.Bucket,isUnique:Bool)*/
    _NativeSet.prototype.uncheckedRemoveAtIsUnique = function ($info, bucket, isUnique) {
        throw 'unsupported method Swift.(file)._NativeSet.uncheckedRemove(at:_NativeSet<Element>.Bucket,isUnique:Bool) in ' + this.constructor.name;
    };
    /*Swift.(file)._NativeSet.removeAll(isUnique:Bool)*/
    /*Swift.(file)._NativeSet.removeAll(isUnique:Bool)*/
    _NativeSet.prototype.removeAllIsUnique = function ($info, isUnique) {
        var _this = this;
        if (!((isUnique))) {
            var scale = _this._storage._scale;
            _this._storage = /*derived_to_base_expr*/ _SetStorage.allocateScaleAgeSeed({}, scale, null, null);
            return;
        }
        ;
        {
            var $bucket$generator_9 = _cloneStruct(_this.hashTable.makeIterator({}));
            while (true) {
                var $ifLet0, bucket_1;
                if (!((($ifLet0 = $bucket$generator_9.next({ $setThis: function ($val) { return $bucket$generator_9 = $val; } })) || true) && $ifLet0 != null && ((bucket_1 = $ifLet0) || true)))
                    break;
                UnsafeMutablePointer.infix_43({}, _this._elements, bucket_1.offset).deinitializeCount({}, 1);
            }
        }
        ;
        _this.hashTable.clear({});
        _this._storage._count = 0;
        _this.invalidateIndices({});
    };
    /*Swift.(file)._NativeSet.makeIterator()*/
    /*Swift.(file).Sequence.makeIterator()*/
    _NativeSet.prototype.makeIterator = function ($info) {
        var _this = this;
        return _create(_NativeSet.Iterator, 'init_NativeSet', {}, _this);
    };
    /*Swift.(file)._NativeSet.bridged()*/
    /*Swift.(file)._NativeSet.bridged()*/
    _NativeSet.prototype.bridged = function ($info) {
        throw 'unsupported method Swift.(file)._NativeSet.bridged() in ' + this.constructor.name;
    };
    _NativeSet.prototype.init$vars = function () {
    };
    var _7;
    _NativeSet.$struct = true;
    _NativeSet.$infoAddress = '';
    _NativeSet.Iterator = (_7 = /** @class */ (function () {
            function class_31() {
            }
            /*Swift.(file)._NativeSet.Iterator.base*/
            class_31.prototype.base$get = function () {
                throw 'unsupported variable Swift.(file)._NativeSet.Iterator.base in ' + this.constructor.name;
            };
            Object.defineProperty(class_31.prototype, "base", {
                get: function () { return this.base$get(); },
                enumerable: true,
                configurable: true
            });
            ;
            /*Swift.(file)._NativeSet.Iterator.iterator*/
            class_31.prototype.iterator$get = function () {
                throw 'unsupported variable Swift.(file)._NativeSet.Iterator.iterator in ' + this.constructor.name;
            };
            Object.defineProperty(class_31.prototype, "iterator", {
                get: function () { return this.iterator$get(); },
                enumerable: true,
                configurable: true
            });
            ;
            /*Swift.(file)._NativeSet.Iterator.init(_:_NativeSet<Element>)*/
            /*Swift.(file)._NativeSet.Iterator.init(_:_NativeSet<Element>)*/
            class_31.prototype.init_NativeSet = function ($info, base) {
                throw 'unsupported method Swift.(file)._NativeSet.Iterator.init(_:_NativeSet<Element>) in ' + this.constructor.name;
            };
            /*Swift.(file)._NativeSet.Iterator.next()*/
            /*Swift.(file).IteratorProtocol.next()*/
            class_31.prototype.next = function ($info) {
                var _this = this;
                var $ifLet0, index_1;
                if (!((($ifLet0 = _this.iterator.next({ $setThis: function ($val) { return _this.iterator = $val; } })) || true) && $ifLet0 != null && ((index_1 = $ifLet0) || true))) {
                    return null;
                }
                ;
                return _this.base.uncheckedElementAt({}, index_1);
            };
            class_31.prototype.init$vars = function () {
            };
            return class_31;
        }()),
        _7.$struct = true,
        _7.$infoAddress = '',
        _7);
    return _NativeSet;
}());
if (typeof IteratorProtocol$implementation != 'undefined')
    _mixin(_NativeSet.Iterator, IteratorProtocol$implementation, false);
if (typeof _SetBuffer$implementation != 'undefined')
    _mixin(_NativeSet, _SetBuffer$implementation, false);
if (typeof _HashTableDelegate$implementation != 'undefined')
    _mixin(_NativeSet, _HashTableDelegate$implementation, false);
if (typeof Sequence$implementation != 'undefined')
    _mixin(_NativeSet, Sequence$implementation, false);
var _NormalizedUTF8CodeUnitIterator = /** @class */ (function () {
    function _NormalizedUTF8CodeUnitIterator() {
    }
    /*Swift.(file)._NormalizedUTF8CodeUnitIterator.utf16Iterator*/
    _NormalizedUTF8CodeUnitIterator.prototype.utf16Iterator$get = function () {
        throw 'unsupported variable Swift.(file)._NormalizedUTF8CodeUnitIterator.utf16Iterator in ' + this.constructor.name;
    };
    Object.defineProperty(_NormalizedUTF8CodeUnitIterator.prototype, "utf16Iterator", {
        get: function () { return this.utf16Iterator$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file)._NormalizedUTF8CodeUnitIterator.utf8Buffer*/
    _NormalizedUTF8CodeUnitIterator.prototype.utf8Buffer$get = function () {
        throw 'unsupported variable Swift.(file)._NormalizedUTF8CodeUnitIterator.utf8Buffer in ' + this.constructor.name;
    };
    Object.defineProperty(_NormalizedUTF8CodeUnitIterator.prototype, "utf8Buffer", {
        get: function () { return this.utf8Buffer$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file)._NormalizedUTF8CodeUnitIterator.bufferIndex*/
    _NormalizedUTF8CodeUnitIterator.prototype.bufferIndex$get = function () {
        throw 'unsupported variable Swift.(file)._NormalizedUTF8CodeUnitIterator.bufferIndex in ' + this.constructor.name;
    };
    Object.defineProperty(_NormalizedUTF8CodeUnitIterator.prototype, "bufferIndex", {
        get: function () { return this.bufferIndex$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file)._NormalizedUTF8CodeUnitIterator.bufferCount*/
    _NormalizedUTF8CodeUnitIterator.prototype.bufferCount$get = function () {
        throw 'unsupported variable Swift.(file)._NormalizedUTF8CodeUnitIterator.bufferCount in ' + this.constructor.name;
    };
    Object.defineProperty(_NormalizedUTF8CodeUnitIterator.prototype, "bufferCount", {
        get: function () { return this.bufferCount$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file)._NormalizedUTF8CodeUnitIterator.init(foreign:_StringGuts,range:Range<String.Index>)*/
    /*Swift.(file)._NormalizedUTF8CodeUnitIterator.init(foreign:_StringGuts,range:Range<String.Index>)*/
    _NormalizedUTF8CodeUnitIterator.prototype.initForeign_StringGutsRangeRange = function ($info, guts, range) {
        throw 'unsupported method Swift.(file)._NormalizedUTF8CodeUnitIterator.init(foreign:_StringGuts,range:Range<String.Index>) in ' + this.constructor.name;
    };
    /*Swift.(file)._NormalizedUTF8CodeUnitIterator.init(_:UnsafeBufferPointer<UInt8>,range:Range<Int>)*/
    /*Swift.(file)._NormalizedUTF8CodeUnitIterator.init(_:UnsafeBufferPointer<UInt8>,range:Range<Int>)*/
    _NormalizedUTF8CodeUnitIterator.prototype.initUnsafeBufferPointerRangeRange = function ($info, buffer, range) {
        throw 'unsupported method Swift.(file)._NormalizedUTF8CodeUnitIterator.init(_:UnsafeBufferPointer<UInt8>,range:Range<Int>) in ' + this.constructor.name;
    };
    /*Swift.(file)._NormalizedUTF8CodeUnitIterator.next()*/
    /*Swift.(file).IteratorProtocol.next()*/
    _NormalizedUTF8CodeUnitIterator.prototype.next = function ($info) {
        throw 'unsupported method Swift.(file)._NormalizedUTF8CodeUnitIterator.next() in ' + this.constructor.name;
    };
    _NormalizedUTF8CodeUnitIterator.prototype.init$vars = function () {
    };
    _NormalizedUTF8CodeUnitIterator.$struct = true;
    _NormalizedUTF8CodeUnitIterator.$infoAddress = '';
    return _NormalizedUTF8CodeUnitIterator;
}());
if (typeof IteratorProtocol$implementation != 'undefined')
    _mixin(_NormalizedUTF8CodeUnitIterator, IteratorProtocol$implementation, false);
if (typeof Sequence$implementation != 'undefined')
    _mixin(_NormalizedUTF8CodeUnitIterator, Sequence$implementation, false);
var _NormalizedUTF16CodeUnitIterator = /** @class */ (function () {
    function _NormalizedUTF16CodeUnitIterator() {
    }
    /*Swift.(file)._NormalizedUTF16CodeUnitIterator.segmentBuffer*/
    _NormalizedUTF16CodeUnitIterator.prototype.segmentBuffer$get = function () {
        throw 'unsupported variable Swift.(file)._NormalizedUTF16CodeUnitIterator.segmentBuffer in ' + this.constructor.name;
    };
    Object.defineProperty(_NormalizedUTF16CodeUnitIterator.prototype, "segmentBuffer", {
        get: function () { return this.segmentBuffer$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file)._NormalizedUTF16CodeUnitIterator.normalizationBuffer*/
    _NormalizedUTF16CodeUnitIterator.prototype.normalizationBuffer$get = function () {
        throw 'unsupported variable Swift.(file)._NormalizedUTF16CodeUnitIterator.normalizationBuffer in ' + this.constructor.name;
    };
    Object.defineProperty(_NormalizedUTF16CodeUnitIterator.prototype, "normalizationBuffer", {
        get: function () { return this.normalizationBuffer$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file)._NormalizedUTF16CodeUnitIterator.segmentHeapBuffer*/
    _NormalizedUTF16CodeUnitIterator.prototype.segmentHeapBuffer$get = function () {
        throw 'unsupported variable Swift.(file)._NormalizedUTF16CodeUnitIterator.segmentHeapBuffer in ' + this.constructor.name;
    };
    Object.defineProperty(_NormalizedUTF16CodeUnitIterator.prototype, "segmentHeapBuffer", {
        get: function () { return this.segmentHeapBuffer$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file)._NormalizedUTF16CodeUnitIterator.normalizationHeapBuffer*/
    _NormalizedUTF16CodeUnitIterator.prototype.normalizationHeapBuffer$get = function () {
        throw 'unsupported variable Swift.(file)._NormalizedUTF16CodeUnitIterator.normalizationHeapBuffer in ' + this.constructor.name;
    };
    Object.defineProperty(_NormalizedUTF16CodeUnitIterator.prototype, "normalizationHeapBuffer", {
        get: function () { return this.normalizationHeapBuffer$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file)._NormalizedUTF16CodeUnitIterator.source*/
    _NormalizedUTF16CodeUnitIterator.prototype.source$get = function () {
        throw 'unsupported variable Swift.(file)._NormalizedUTF16CodeUnitIterator.source in ' + this.constructor.name;
    };
    Object.defineProperty(_NormalizedUTF16CodeUnitIterator.prototype, "source", {
        get: function () { return this.source$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file)._NormalizedUTF16CodeUnitIterator.segmentBufferIndex*/
    _NormalizedUTF16CodeUnitIterator.prototype.segmentBufferIndex$get = function () {
        throw 'unsupported variable Swift.(file)._NormalizedUTF16CodeUnitIterator.segmentBufferIndex in ' + this.constructor.name;
    };
    Object.defineProperty(_NormalizedUTF16CodeUnitIterator.prototype, "segmentBufferIndex", {
        get: function () { return this.segmentBufferIndex$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file)._NormalizedUTF16CodeUnitIterator.segmentBufferCount*/
    _NormalizedUTF16CodeUnitIterator.prototype.segmentBufferCount$get = function () {
        throw 'unsupported variable Swift.(file)._NormalizedUTF16CodeUnitIterator.segmentBufferCount in ' + this.constructor.name;
    };
    Object.defineProperty(_NormalizedUTF16CodeUnitIterator.prototype, "segmentBufferCount", {
        get: function () { return this.segmentBufferCount$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file)._NormalizedUTF16CodeUnitIterator.init(_:_StringGuts,_:Range<String.Index>)*/
    /*Swift.(file)._NormalizedUTF16CodeUnitIterator.init(_:_StringGuts,_:Range<String.Index>)*/
    _NormalizedUTF16CodeUnitIterator.prototype.init_StringGutsRange = function ($info, guts, range) {
        throw 'unsupported method Swift.(file)._NormalizedUTF16CodeUnitIterator.init(_:_StringGuts,_:Range<String.Index>) in ' + this.constructor.name;
    };
    /*Swift.(file)._NormalizedUTF16CodeUnitIterator.init(_:UnsafeBufferPointer<UInt8>,_:Range<Int>)*/
    /*Swift.(file)._NormalizedUTF16CodeUnitIterator.init(_:UnsafeBufferPointer<UInt8>,_:Range<Int>)*/
    _NormalizedUTF16CodeUnitIterator.prototype.initUnsafeBufferPointerRange = function ($info, buffer, range) {
        throw 'unsupported method Swift.(file)._NormalizedUTF16CodeUnitIterator.init(_:UnsafeBufferPointer<UInt8>,_:Range<Int>) in ' + this.constructor.name;
    };
    /*Swift.(file)._NormalizedUTF16CodeUnitIterator.next()*/
    /*Swift.(file).IteratorProtocol.next()*/
    _NormalizedUTF16CodeUnitIterator.prototype.next = function ($info) {
        throw 'unsupported method Swift.(file)._NormalizedUTF16CodeUnitIterator.next() in ' + this.constructor.name;
    };
    /*Swift.(file)._NormalizedUTF16CodeUnitIterator.normalizeFromSource()*/
    /*Swift.(file)._NormalizedUTF16CodeUnitIterator.normalizeFromSource()*/
    _NormalizedUTF16CodeUnitIterator.prototype.normalizeFromSource = function ($info) {
        throw 'unsupported method Swift.(file)._NormalizedUTF16CodeUnitIterator.normalizeFromSource() in ' + this.constructor.name;
    };
    /*Swift.(file)._NormalizedUTF16CodeUnitIterator.normalizeWithHeapBuffers(_:Int?)*/
    /*Swift.(file)._NormalizedUTF16CodeUnitIterator.normalizeWithHeapBuffers(_:Int?)*/
    _NormalizedUTF16CodeUnitIterator.prototype.normalizeWithHeapBuffers = function ($info, stackBufferCount) {
        throw 'unsupported method Swift.(file)._NormalizedUTF16CodeUnitIterator.normalizeWithHeapBuffers(_:Int?) in ' + this.constructor.name;
    };
    _NormalizedUTF16CodeUnitIterator.prototype.init$vars = function () {
    };
    var _8, _9;
    _NormalizedUTF16CodeUnitIterator.$struct = true;
    _NormalizedUTF16CodeUnitIterator.$infoAddress = '';
    _NormalizedUTF16CodeUnitIterator._UTF8BufferSource = (_8 = /** @class */ (function () {
            function class_32() {
            }
            /*Swift.(file)._NormalizedUTF16CodeUnitIterator._UTF8BufferSource.remaining*/
            class_32.prototype.remaining$get = function () {
                throw 'unsupported variable Swift.(file)._NormalizedUTF16CodeUnitIterator._UTF8BufferSource.remaining in ' + this.constructor.name;
            };
            Object.defineProperty(class_32.prototype, "remaining", {
                get: function () { return this.remaining$get(); },
                enumerable: true,
                configurable: true
            });
            ;
            /*Swift.(file)._NormalizedUTF16CodeUnitIterator._UTF8BufferSource.isEmpty*/
            class_32.prototype.isEmpty$get = function () {
                throw 'unsupported variable Swift.(file)._NormalizedUTF16CodeUnitIterator._UTF8BufferSource.isEmpty in ' + this.constructor.name;
            };
            Object.defineProperty(class_32.prototype, "isEmpty", {
                get: function () { return this.isEmpty$get(); },
                enumerable: true,
                configurable: true
            });
            ;
            /*Swift.(file)._NormalizedUTF16CodeUnitIterator._UTF8BufferSource.buffer*/
            class_32.prototype.buffer$get = function () {
                throw 'unsupported variable Swift.(file)._NormalizedUTF16CodeUnitIterator._UTF8BufferSource.buffer in ' + this.constructor.name;
            };
            Object.defineProperty(class_32.prototype, "buffer", {
                get: function () { return this.buffer$get(); },
                enumerable: true,
                configurable: true
            });
            ;
            /*Swift.(file)._NormalizedUTF16CodeUnitIterator._UTF8BufferSource.index*/
            class_32.prototype.index$get = function () {
                throw 'unsupported variable Swift.(file)._NormalizedUTF16CodeUnitIterator._UTF8BufferSource.index in ' + this.constructor.name;
            };
            Object.defineProperty(class_32.prototype, "index", {
                get: function () { return this.index$get(); },
                enumerable: true,
                configurable: true
            });
            ;
            /*Swift.(file)._NormalizedUTF16CodeUnitIterator._UTF8BufferSource.range*/
            class_32.prototype.range$get = function () {
                throw 'unsupported variable Swift.(file)._NormalizedUTF16CodeUnitIterator._UTF8BufferSource.range in ' + this.constructor.name;
            };
            Object.defineProperty(class_32.prototype, "range", {
                get: function () { return this.range$get(); },
                enumerable: true,
                configurable: true
            });
            ;
            /*Swift.(file)._NormalizedUTF16CodeUnitIterator._UTF8BufferSource.init(_:UnsafeBufferPointer<UInt8>,_:Range<Int>)*/
            /*Swift.(file)._NormalizedUTF16CodeUnitIterator._UTF8BufferSource.init(_:UnsafeBufferPointer<UInt8>,_:Range<Int>)*/
            class_32.prototype.initUnsafeBufferPointerRange = function ($info, buffer, range) {
                throw 'unsupported method Swift.(file)._NormalizedUTF16CodeUnitIterator._UTF8BufferSource.init(_:UnsafeBufferPointer<UInt8>,_:Range<Int>) in ' + this.constructor.name;
            };
            /*Swift.(file)._NormalizedUTF16CodeUnitIterator._UTF8BufferSource.tryFill(into:UnsafeMutableBufferPointer<UInt16>)*/
            /*Swift.(file)._SegmentSource.tryFill(into:UnsafeMutableBufferPointer<UInt16>)*/
            class_32.prototype.tryFillInto = function ($info, output) {
                throw 'unsupported method Swift.(file)._NormalizedUTF16CodeUnitIterator._UTF8BufferSource.tryFill(into:UnsafeMutableBufferPointer<UInt16>) in ' + this.constructor.name;
            };
            class_32.prototype.init$vars = function () {
            };
            return class_32;
        }()),
        _8.$struct = true,
        _8.$infoAddress = '',
        _8);
    _NormalizedUTF16CodeUnitIterator._ForeignStringGutsSource = (_9 = /** @class */ (function () {
            function class_33() {
            }
            /*Swift.(file)._NormalizedUTF16CodeUnitIterator._ForeignStringGutsSource.remaining*/
            class_33.prototype.remaining$get = function () {
                throw 'unsupported variable Swift.(file)._NormalizedUTF16CodeUnitIterator._ForeignStringGutsSource.remaining in ' + this.constructor.name;
            };
            Object.defineProperty(class_33.prototype, "remaining", {
                get: function () { return this.remaining$get(); },
                enumerable: true,
                configurable: true
            });
            ;
            /*Swift.(file)._NormalizedUTF16CodeUnitIterator._ForeignStringGutsSource.isEmpty*/
            class_33.prototype.isEmpty$get = function () {
                throw 'unsupported variable Swift.(file)._NormalizedUTF16CodeUnitIterator._ForeignStringGutsSource.isEmpty in ' + this.constructor.name;
            };
            Object.defineProperty(class_33.prototype, "isEmpty", {
                get: function () { return this.isEmpty$get(); },
                enumerable: true,
                configurable: true
            });
            ;
            /*Swift.(file)._NormalizedUTF16CodeUnitIterator._ForeignStringGutsSource.guts*/
            class_33.prototype.guts$get = function () {
                throw 'unsupported variable Swift.(file)._NormalizedUTF16CodeUnitIterator._ForeignStringGutsSource.guts in ' + this.constructor.name;
            };
            Object.defineProperty(class_33.prototype, "guts", {
                get: function () { return this.guts$get(); },
                enumerable: true,
                configurable: true
            });
            ;
            /*Swift.(file)._NormalizedUTF16CodeUnitIterator._ForeignStringGutsSource.index*/
            class_33.prototype.index$get = function () {
                throw 'unsupported variable Swift.(file)._NormalizedUTF16CodeUnitIterator._ForeignStringGutsSource.index in ' + this.constructor.name;
            };
            Object.defineProperty(class_33.prototype, "index", {
                get: function () { return this.index$get(); },
                enumerable: true,
                configurable: true
            });
            ;
            /*Swift.(file)._NormalizedUTF16CodeUnitIterator._ForeignStringGutsSource.range*/
            class_33.prototype.range$get = function () {
                throw 'unsupported variable Swift.(file)._NormalizedUTF16CodeUnitIterator._ForeignStringGutsSource.range in ' + this.constructor.name;
            };
            Object.defineProperty(class_33.prototype, "range", {
                get: function () { return this.range$get(); },
                enumerable: true,
                configurable: true
            });
            ;
            /*Swift.(file)._NormalizedUTF16CodeUnitIterator._ForeignStringGutsSource.init(_:_StringGuts,_:Range<String.Index>)*/
            /*Swift.(file)._NormalizedUTF16CodeUnitIterator._ForeignStringGutsSource.init(_:_StringGuts,_:Range<String.Index>)*/
            class_33.prototype.init_StringGutsRange = function ($info, guts, range) {
                throw 'unsupported method Swift.(file)._NormalizedUTF16CodeUnitIterator._ForeignStringGutsSource.init(_:_StringGuts,_:Range<String.Index>) in ' + this.constructor.name;
            };
            /*Swift.(file)._NormalizedUTF16CodeUnitIterator._ForeignStringGutsSource.tryFill(into:UnsafeMutableBufferPointer<UInt16>)*/
            /*Swift.(file)._SegmentSource.tryFill(into:UnsafeMutableBufferPointer<UInt16>)*/
            class_33.prototype.tryFillInto = function ($info, output) {
                throw 'unsupported method Swift.(file)._NormalizedUTF16CodeUnitIterator._ForeignStringGutsSource.tryFill(into:UnsafeMutableBufferPointer<UInt16>) in ' + this.constructor.name;
            };
            class_33.prototype.init$vars = function () {
            };
            return class_33;
        }()),
        _9.$struct = true,
        _9.$infoAddress = '',
        _9);
    return _NormalizedUTF16CodeUnitIterator;
}());
if (typeof _SegmentSource$implementation != 'undefined')
    _mixin(_NormalizedUTF16CodeUnitIterator._UTF8BufferSource, _SegmentSource$implementation, false);
if (typeof _SegmentSource$implementation != 'undefined')
    _mixin(_NormalizedUTF16CodeUnitIterator._ForeignStringGutsSource, _SegmentSource$implementation, false);
if (typeof IteratorProtocol$implementation != 'undefined')
    _mixin(_NormalizedUTF16CodeUnitIterator, IteratorProtocol$implementation, false);
var _NormalizedUTF8CodeUnitIterator_2 = /** @class */ (function () {
    function _NormalizedUTF8CodeUnitIterator_2() {
    }
    /*Swift.(file)._NormalizedUTF8CodeUnitIterator_2.outputBuffer*/
    _NormalizedUTF8CodeUnitIterator_2.prototype.outputBuffer$get = function () {
        throw 'unsupported variable Swift.(file)._NormalizedUTF8CodeUnitIterator_2.outputBuffer in ' + this.constructor.name;
    };
    Object.defineProperty(_NormalizedUTF8CodeUnitIterator_2.prototype, "outputBuffer", {
        get: function () { return this.outputBuffer$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file)._NormalizedUTF8CodeUnitIterator_2.outputPosition*/
    _NormalizedUTF8CodeUnitIterator_2.prototype.outputPosition$get = function () {
        throw 'unsupported variable Swift.(file)._NormalizedUTF8CodeUnitIterator_2.outputPosition in ' + this.constructor.name;
    };
    Object.defineProperty(_NormalizedUTF8CodeUnitIterator_2.prototype, "outputPosition", {
        get: function () { return this.outputPosition$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file)._NormalizedUTF8CodeUnitIterator_2.outputBufferCount*/
    _NormalizedUTF8CodeUnitIterator_2.prototype.outputBufferCount$get = function () {
        throw 'unsupported variable Swift.(file)._NormalizedUTF8CodeUnitIterator_2.outputBufferCount in ' + this.constructor.name;
    };
    Object.defineProperty(_NormalizedUTF8CodeUnitIterator_2.prototype, "outputBufferCount", {
        get: function () { return this.outputBufferCount$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file)._NormalizedUTF8CodeUnitIterator_2.gutsSlice*/
    _NormalizedUTF8CodeUnitIterator_2.prototype.gutsSlice$get = function () {
        throw 'unsupported variable Swift.(file)._NormalizedUTF8CodeUnitIterator_2.gutsSlice in ' + this.constructor.name;
    };
    Object.defineProperty(_NormalizedUTF8CodeUnitIterator_2.prototype, "gutsSlice", {
        get: function () { return this.gutsSlice$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file)._NormalizedUTF8CodeUnitIterator_2.readPosition*/
    _NormalizedUTF8CodeUnitIterator_2.prototype.readPosition$get = function () {
        throw 'unsupported variable Swift.(file)._NormalizedUTF8CodeUnitIterator_2.readPosition in ' + this.constructor.name;
    };
    Object.defineProperty(_NormalizedUTF8CodeUnitIterator_2.prototype, "readPosition", {
        get: function () { return this.readPosition$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file)._NormalizedUTF8CodeUnitIterator_2.init(_:_StringGutsSlice)*/
    /*Swift.(file)._NormalizedUTF8CodeUnitIterator_2.init(_:_StringGutsSlice)*/
    _NormalizedUTF8CodeUnitIterator_2.prototype.init_StringGutsSlice = function ($info, sliced) {
        throw 'unsupported method Swift.(file)._NormalizedUTF8CodeUnitIterator_2.init(_:_StringGutsSlice) in ' + this.constructor.name;
    };
    /*Swift.(file)._NormalizedUTF8CodeUnitIterator_2.next()*/
    /*Swift.(file).IteratorProtocol.next()*/
    _NormalizedUTF8CodeUnitIterator_2.prototype.next = function ($info) {
        throw 'unsupported method Swift.(file)._NormalizedUTF8CodeUnitIterator_2.next() in ' + this.constructor.name;
    };
    /*Swift.(file)._NormalizedUTF8CodeUnitIterator_2.outputBufferThreshold*/
    _NormalizedUTF8CodeUnitIterator_2.prototype.outputBufferThreshold$get = function () {
        var _this = this;
        return Int.infix_45({}, _this.outputBuffer.capacity, 4);
    };
    Object.defineProperty(_NormalizedUTF8CodeUnitIterator_2.prototype, "outputBufferThreshold", {
        get: function () { return this.outputBufferThreshold$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file)._NormalizedUTF8CodeUnitIterator_2.outputBufferEmpty*/
    _NormalizedUTF8CodeUnitIterator_2.prototype.outputBufferEmpty$get = function () {
        var _this = this;
        return Int.infix_61_61({}, _this.outputPosition, _this.outputBufferCount);
    };
    Object.defineProperty(_NormalizedUTF8CodeUnitIterator_2.prototype, "outputBufferEmpty", {
        get: function () { return this.outputBufferEmpty$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file)._NormalizedUTF8CodeUnitIterator_2.outputBufferFull*/
    _NormalizedUTF8CodeUnitIterator_2.prototype.outputBufferFull$get = function () {
        var _this = this;
        return Int.infix_62_61({}, _this.outputBufferCount, _this.outputBufferThreshold);
    };
    Object.defineProperty(_NormalizedUTF8CodeUnitIterator_2.prototype, "outputBufferFull", {
        get: function () { return this.outputBufferFull$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file)._NormalizedUTF8CodeUnitIterator_2.inputBufferEmpty*/
    _NormalizedUTF8CodeUnitIterator_2.prototype.inputBufferEmpty$get = function () {
        var _this = this;
        return _this.gutsSlice.range.isEmpty;
    };
    Object.defineProperty(_NormalizedUTF8CodeUnitIterator_2.prototype, "inputBufferEmpty", {
        get: function () { return this.inputBufferEmpty$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file)._NormalizedUTF8CodeUnitIterator_2.fastPathFill()*/
    /*Swift.(file)._NormalizedUTF8CodeUnitIterator_2.fastPathFill()*/
    _NormalizedUTF8CodeUnitIterator_2.prototype.fastPathFill = function ($info) {
        throw 'unsupported method Swift.(file)._NormalizedUTF8CodeUnitIterator_2.fastPathFill() in ' + this.constructor.name;
    };
    /*Swift.(file)._NormalizedUTF8CodeUnitIterator_2.fill()*/
    /*Swift.(file)._NormalizedUTF8CodeUnitIterator_2.fill()*/
    _NormalizedUTF8CodeUnitIterator_2.prototype.fill = function ($info) {
        var _this = this;
        var priorInputCount = _this.gutsSlice._offsetRange.count;
        _this.outputPosition = 0;
        var $tuple = _this.fastPathFill({ $setThis: function ($val) { return $info.$setThis(_this = _cloneStruct($val)); } }), inputCount = $tuple && $tuple[0], outputCount = $tuple && $tuple[1];
        _this.outputBufferCount = outputCount;
        if ((Int.infix_62({}, inputCount, 0))) {
            _this.gutsSlice._offsetRange = _create(Range, 'initUncheckedBoundstuple_type', {}, { 0: Int.infix_43({}, _this.gutsSlice._offsetRange.lowerBound, inputCount), 1: _this.gutsSlice._offsetRange.upperBound });
            return;
        }
        ;
        var remaining = _this.gutsSlice.withNFCCodeUnitsIterator({}, (function ($info, $0) {
            var nfc = _cloneStruct($0);
            while (true) {
                var $ifLet0, cu_1;
                if (!((Bool.prefix_33({}, _this.outputBufferFull)) && (($ifLet0 = nfc.next({ $setThis: function ($val) { return nfc = $val; } })) || true) && $ifLet0 != null && ((cu_1 = $ifLet0) || true)))
                    break;
                _this.outputBuffer.subscript$set({ $setThis: function ($val) { return _this.outputBuffer = $val; } }, cu_1, _this.outputBufferCount);
                Int.infix_38_43_61({}, { get: function () { return _this.outputBufferCount; }, set: function ($val) { return _this.outputBufferCount = $val; } }, 1);
            }
            ;
            return nfc.utf16Iterator.source.remaining;
        }));
        if ((Bool.prefix_33({}, Bool.infix_124_124({}, Int.infix_61_61({}, _this.outputBufferCount, 0), function () { return Int.infix_60({}, remaining, priorInputCount); })))) {
        }
        ;
        _this.gutsSlice._offsetRange = _create(Range, 'initUncheckedBoundstuple_type', {}, { 0: Int.infix_43({}, _this.gutsSlice._offsetRange.lowerBound, Int.infix_45({}, priorInputCount, remaining)), 1: _this.gutsSlice._offsetRange.upperBound });
    };
    /*Swift.(file)._NormalizedUTF8CodeUnitIterator_2.compare(with:_NormalizedUTF8CodeUnitIterator_2,expecting:_StringComparisonResult)*/
    /*Swift.(file)._NormalizedUTF8CodeUnitIterator_2.compare(with:_NormalizedUTF8CodeUnitIterator_2,expecting:_StringComparisonResult)*/
    _NormalizedUTF8CodeUnitIterator_2.prototype.compareWithExpecting = function ($info, other, expecting) {
        throw 'unsupported method Swift.(file)._NormalizedUTF8CodeUnitIterator_2.compare(with:_NormalizedUTF8CodeUnitIterator_2,expecting:_StringComparisonResult) in ' + this.constructor.name;
    };
    _NormalizedUTF8CodeUnitIterator_2.prototype.init$vars = function () {
    };
    _NormalizedUTF8CodeUnitIterator_2.$struct = true;
    _NormalizedUTF8CodeUnitIterator_2.$infoAddress = '';
    return _NormalizedUTF8CodeUnitIterator_2;
}());
if (typeof Sequence$implementation != 'undefined')
    _mixin(_NormalizedUTF8CodeUnitIterator_2, Sequence$implementation, false);
if (typeof IteratorProtocol$implementation != 'undefined')
    _mixin(_NormalizedUTF8CodeUnitIterator_2, IteratorProtocol$implementation, false);
var ObjectIdentifier = /** @class */ (function () {
    function ObjectIdentifier() {
    }
    /*Swift.(file).ObjectIdentifier.init(_:AnyObject)*/
    /*Swift.(file).ObjectIdentifier.init(_:AnyObject)*/
    ObjectIdentifier.prototype.initAnyObject = function ($info, x) {
        this._value = x;
    };
    /*Swift.(file).ObjectIdentifier.init(_:Any.Type)*/
    /*Swift.(file).ObjectIdentifier.init(_:Any.Type)*/
    ObjectIdentifier.prototype.initprotocol_composition_type = function ($info, x) {
        throw 'unsupported method Swift.(file).ObjectIdentifier.init(_:Any.Type) in ' + this.constructor.name;
    };
    /*Swift.(file).ObjectIdentifier.debugDescription*/
    ObjectIdentifier.prototype.debugDescription$get = function () {
        var _this = this;
        return (("ObjectIdentifier(") + (_rawPointerToString({}, _this._value)) + (")"));
    };
    Object.defineProperty(ObjectIdentifier.prototype, "debugDescription", {
        get: function () { return this.debugDescription$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).ObjectIdentifier.==infix(_:ObjectIdentifier,_:ObjectIdentifier)*/
    /*Swift.(file).Equatable.==infix(_:Self,_:Self)*/
    ObjectIdentifier.infix_61_61 = function ($info, x, y) {
        return x._value === y._value;
    };
    /*Swift.(file).ObjectIdentifier.<infix(_:ObjectIdentifier,_:ObjectIdentifier)*/
    /*Swift.(file).Comparable.<infix(_:Self,_:Self)*/
    ObjectIdentifier.infix_60 = function ($info, lhs, rhs) {
        var _this = this;
        return UInt.infix_60({}, _create(UInt, 'initBitPatternObjectIdentifier', {}, lhs), _create(UInt, 'initBitPatternObjectIdentifier', {}, rhs));
    };
    /*Swift.(file).ObjectIdentifier.hash(into:Hasher)*/
    /*Swift.(file).Hashable.hash(into:Hasher)*/
    ObjectIdentifier.prototype.hashInto = function ($info, hasher$inout) {
        throw 'unsupported method Swift.(file).ObjectIdentifier.hash(into:Hasher) in ' + this.constructor.name;
    };
    /*Swift.(file).ObjectIdentifier.hashValue*/
    ObjectIdentifier.prototype.hashValue$get = function () {
        throw 'unsupported variable Swift.(file).ObjectIdentifier.hashValue in ' + this.constructor.name;
    };
    Object.defineProperty(ObjectIdentifier.prototype, "hashValue", {
        get: function () { return this.hashValue$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    ObjectIdentifier.prototype.init$vars = function () {
    };
    ObjectIdentifier.$struct = true;
    ObjectIdentifier.$infoAddress = '';
    return ObjectIdentifier;
}());
if (typeof CustomDebugStringConvertible$implementation != 'undefined')
    _mixin(ObjectIdentifier, CustomDebugStringConvertible$implementation, false);
if (typeof Equatable$implementation != 'undefined')
    _mixin(ObjectIdentifier, Equatable$implementation, false);
if (typeof Comparable$implementation != 'undefined')
    _mixin(ObjectIdentifier, Comparable$implementation, false);
if (typeof Hashable$implementation != 'undefined')
    _mixin(ObjectIdentifier, Hashable$implementation, false);
var Optional = /** @class */ (function () {
    function Optional() {
    }
    Object.defineProperty(Optional, "none", {
        get: function () { return Object.assign(new Optional(), __assign({ rawValue: "none" }, Array.from(arguments).slice(1))); },
        enumerable: true,
        configurable: true
    });
    Optional.some = function () { return Object.assign(new Optional(), __assign({ rawValue: "some" }, Array.from(arguments).slice(1))); };
    /*Swift.(file).Optional.init(_:Wrapped)*/
    /*Swift.(file).Optional.init(_:Wrapped)*/
    Optional.prototype.init = function ($info, some) {
        var _this = this;
        $info.$setThis(_this = _cloneStruct(Optional.some({}, some)));
        return;
    };
    /*Swift.(file).Optional.map(_:(Wrapped) throws -> U)*/
    /*Swift.(file).Optional.map(_:(Wrapped) throws -> U)*/
    Optional.prototype.mapSwift = function ($info, transform) {
        var _this = this;
        var $match = _this;
        if ((($match != null))) {
            var y = $match;
            return Optional.some({}, transform({}, y));
        }
        else if ((($match == null))) {
            return null;
        }
    };
    /*Swift.(file).Optional.flatMap(_:(Wrapped) throws -> U?)*/
    /*Swift.(file).Optional.flatMap(_:(Wrapped) throws -> U?)*/
    Optional.prototype.flatMap = function ($info, transform) {
        var _this = this;
        var $match = _this;
        if ((($match != null))) {
            var y = $match;
            return transform({}, y);
        }
        else if ((($match == null))) {
            return null;
        }
    };
    /*Swift.(file).Optional.init(nilLiteral:())*/
    /*Swift.(file).ExpressibleByNilLiteral.init(nilLiteral:())*/
    Optional.prototype.initNilLiteraltuple_type = function ($info, nilLiteral) {
        var _this = this;
        $info.$setThis(_this = _cloneStruct(null));
        return;
    };
    /*Swift.(file).Optional.unsafelyUnwrapped*/
    Optional.prototype.unsafelyUnwrapped$get = function () {
        var _this = this;
        var $ifLet0, x_1;
        if ((($ifLet0 = _this) || true) && $ifLet0 != null && ((x_1 = $ifLet0) || true)) {
            return x_1;
        }
        ;
        preconditionFailureFileLine({}, function () { return "unsafelyUnwrapped of nil optional"; }, '?3', '?3');
    };
    Object.defineProperty(Optional.prototype, "unsafelyUnwrapped", {
        get: function () { return this.unsafelyUnwrapped$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).Optional.encode(to:Encoder)*/
    /*Swift.(file).Encodable.encode(to:Encoder)*/
    Optional.prototype.encodeTo = function ($info, encoder) {
        throw 'unsupported method Swift.(file).Optional.encode(to:Encoder) in ' + this.constructor.name;
    };
    /*Swift.(file).Optional.init(from:Decoder)*/
    /*Swift.(file).Decodable.init(from:Decoder)*/
    Optional.prototype.initFromDecoder = function ($info, decoder) {
        throw 'unsupported method Swift.(file).Optional.init(from:Decoder) in ' + this.constructor.name;
    };
    /*Swift.(file).Optional.debugDescription*/
    Optional.prototype.debugDescription$get = function () {
        var _this = this;
        var $match = _this;
        if ((($match != null))) {
            var value = $match;
            var result_2 = "Optional(";
            debugPrintSeparatorTerminatorTo({}, _create(Array, 'initBuffer', {}, [value]), " " /*!default_value*/, "", { get: function () { return result_2; }, set: function ($val) { return result_2 = $val; } });
            String.infix_43_61({}, { get: function () { return result_2; }, set: function ($val) { return result_2 = $val; } }, ")");
            return result_2;
        }
        else if ((($match == null))) {
            return "nil";
        }
    };
    Object.defineProperty(Optional.prototype, "debugDescription", {
        get: function () { return this.debugDescription$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).Optional.customMirror*/
    Optional.prototype.customMirror$get = function () {
        var _this = this;
        var $match = _this;
        if ((($match != null))) {
            var value = $match;
            return _create(Mirror, 'initChildrenKeyValuePairsDisplayStyleOptionalAncestorRepresentationMirrorAncestorRepresentation', {}, _this, new Map([["some", value]]), Mirror.DisplayStyle.optional, generated /*!default_value*/);
        }
        else if ((($match == null))) {
            return _create(Mirror, 'initChildrenKeyValuePairsDisplayStyleOptionalAncestorRepresentationMirrorAncestorRepresentation', {}, _this, new Map([]), Mirror.DisplayStyle.optional, generated /*!default_value*/);
        }
    };
    Object.defineProperty(Optional.prototype, "customMirror", {
        get: function () { return this.customMirror$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).Optional.==infix(_:Wrapped?,_:Wrapped?)*/
    /*Swift.(file).Equatable.==infix(_:Self,_:Self)*/
    Optional.infix_61_61 = function ($info, lhs, rhs) {
        var _this = this;
        var $match = { 0: lhs, 1: rhs };
        if ((($match[0] != null && $match[1] != null))) {
            var l = $match[0];
            var r = $match[1];
            return (_.arg0 = l).constructor.infix_61_61({}, _.arg0, r);
        }
        else if ((($match[0] == null && $match[1] == null))) {
            return true;
        }
        else if (((true))) {
            return false;
        }
    };
    /*Swift.(file).Optional.hash(into:Hasher)*/
    /*Swift.(file).Hashable.hash(into:Hasher)*/
    Optional.prototype.hashInto = function ($info, hasher$inout) {
        var _this = this;
        var hasher = hasher$inout.get();
        var $result = (function () {
            var $match = _this;
            if ((($match == null))) {
                hasher.combine({ $setThis: function ($val) { return hasher = $val; } }, 0);
            }
            else if ((($match != null))) {
                var wrapped = $match;
                hasher.combine({ $setThis: function ($val) { return hasher = $val; } }, 1);
                hasher.combine({ $setThis: function ($val) { return hasher = $val; } }, wrapped);
            }
            ;
        })();
        hasher$inout.set(hasher);
        return $result;
    };
    /*Swift.(file).Optional.hashValue*/
    Optional.prototype.hashValue$get = function () {
        throw 'unsupported variable Swift.(file).Optional.hashValue in ' + this.constructor.name;
    };
    Object.defineProperty(Optional.prototype, "hashValue", {
        get: function () { return this.hashValue$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).Optional.~=infix(_:_OptionalNilComparisonType,_:Wrapped?)*/
    /*Swift.(file).Optional.~=infix(_:_OptionalNilComparisonType,_:Wrapped?)*/
    Optional.infix_126_61 = function ($info, lhs, rhs) {
        var _this = this;
        var $match = rhs;
        if ((($match != null))) {
            return false;
        }
        else if ((($match == null))) {
            return true;
        }
    };
    /*Swift.(file).Optional.==infix(_:Wrapped?,_:_OptionalNilComparisonType)*/
    /*Swift.(file).Optional.==infix(_:Wrapped?,_:_OptionalNilComparisonType)*/
    Optional.wrappedEqualsOptionalNilComparisonType = function ($info, lhs, rhs) {
        var _this = this;
        var $match = lhs;
        if ((($match != null))) {
            return false;
        }
        else if ((($match == null))) {
            return true;
        }
    };
    /*Swift.(file).Optional.!=infix(_:Wrapped?,_:_OptionalNilComparisonType)*/
    /*Swift.(file).Optional.!=infix(_:Wrapped?,_:_OptionalNilComparisonType)*/
    Optional.wrappedNotEqualsOptionalNilComparisonType = function ($info, lhs, rhs) {
        var _this = this;
        var $match = lhs;
        if ((($match != null))) {
            return true;
        }
        else if ((($match == null))) {
            return false;
        }
    };
    /*Swift.(file).Optional.==infix(_:_OptionalNilComparisonType,_:Wrapped?)*/
    /*Swift.(file).Optional.==infix(_:_OptionalNilComparisonType,_:Wrapped?)*/
    Optional.optionalNilComparisonTypeEqualsWrapped = function ($info, lhs, rhs) {
        var _this = this;
        var $match = rhs;
        if ((($match != null))) {
            return false;
        }
        else if ((($match == null))) {
            return true;
        }
    };
    /*Swift.(file).Optional.!=infix(_:_OptionalNilComparisonType,_:Wrapped?)*/
    /*Swift.(file).Optional.!=infix(_:_OptionalNilComparisonType,_:Wrapped?)*/
    Optional.optionalNilComparisonTypeNotEqualsWrapped = function ($info, lhs, rhs) {
        var _this = this;
        var $match = rhs;
        if ((($match != null))) {
            return true;
        }
        else if ((($match == null))) {
            return false;
        }
    };
    Optional.prototype.init$vars = function () {
    };
    Optional.$infoAddress = '';
    return Optional;
}());
if (typeof ExpressibleByNilLiteral$implementation != 'undefined')
    _mixin(Optional, ExpressibleByNilLiteral$implementation, false);
if (typeof Encodable$implementation != 'undefined')
    _mixin(Optional, Encodable$implementation, false);
if (typeof Decodable$implementation != 'undefined')
    _mixin(Optional, Decodable$implementation, false);
if (typeof CustomDebugStringConvertible$implementation != 'undefined')
    _mixin(Optional, CustomDebugStringConvertible$implementation, false);
if (typeof CustomReflectable$implementation != 'undefined')
    _mixin(Optional, CustomReflectable$implementation, false);
if (typeof Equatable$implementation != 'undefined')
    _mixin(Optional, Equatable$implementation, false);
if (typeof Hashable$implementation != 'undefined')
    _mixin(Optional, Hashable$implementation, false);
if (typeof _ObjectiveCBridgeable$implementation != 'undefined')
    _mixin(Optional, _ObjectiveCBridgeable$implementation, false);
_mixin(Optional, _DefaultEnumImplementation, false);
var OptionSet$implementation = /** @class */ (function () {
    function OptionSet$implementation() {
    }
    /*Swift.(file).OptionSet.union(_:Self)*/
    /*Swift.(file).OptionSet.union(_:Self)*/
    OptionSet$implementation.prototype.union = function ($info, other) {
        var _this = this;
        var r = _create(_this.constructor, 'initRawValue', {}, _this.rawValue);
        r.formUnion({ $setThis: function ($val) { return r = $val; } }, other);
        return r;
    };
    /*Swift.(file).OptionSet.intersection(_:Self)*/
    /*Swift.(file).OptionSet.intersection(_:Self)*/
    OptionSet$implementation.prototype.intersection = function ($info, other) {
        var _this = this;
        var r = _create(_this.constructor, 'initRawValue', {}, _this.rawValue);
        r.formIntersection({ $setThis: function ($val) { return r = $val; } }, other);
        return r;
    };
    /*Swift.(file).OptionSet.symmetricDifference(_:Self)*/
    /*Swift.(file).OptionSet.symmetricDifference(_:Self)*/
    OptionSet$implementation.prototype.symmetricDifference = function ($info, other) {
        var _this = this;
        var r = _create(_this.constructor, 'initRawValue', {}, _this.rawValue);
        r.formSymmetricDifference({ $setThis: function ($val) { return r = $val; } }, other);
        return r;
    };
    /*Swift.(file).OptionSet.contains(_:Self)*/
    /*Swift.(file).OptionSet.contains(_:Self)*/
    OptionSet$implementation.prototype.contains = function ($info, member) {
        var _this = this;
        return _this.isSupersetOf({}, member);
    };
    /*Swift.(file).OptionSet.insert(_:Self.Element)*/
    /*Swift.(file).OptionSet.insert(_:Self.Element)*/
    OptionSet$implementation.prototype.insert = function ($info, newMember) {
        var _this = this;
        var oldMember = _this.intersection({}, newMember);
        var shouldInsert = (_.arg0 = oldMember).constructor.infix_33_61({}, _.arg0, newMember);
        var result = { 0: shouldInsert, 1: (shouldInsert ? newMember : oldMember) };
        if ((shouldInsert)) {
            _this.formUnion({ $setThis: function ($val) { return $info.$setThis(_this = _cloneStruct($val)); } }, newMember);
        }
        ;
        return result;
    };
    /*Swift.(file).OptionSet.remove(_:Self.Element)*/
    /*Swift.(file).OptionSet.remove(_:Self.Element)*/
    OptionSet$implementation.prototype.remove = function ($info, member) {
        var _this = this;
        var r = (_this.isSupersetOf({}, member) ? _create(Optional, 'init', {}, member) : null);
        _this.subtract({ $setThis: function ($val) { return $info.$setThis(_this = _cloneStruct($val)); } }, member);
        return r;
    };
    /*Swift.(file).OptionSet.update(with:Self.Element)*/
    /*Swift.(file).OptionSet.update(with:Self.Element)*/
    OptionSet$implementation.prototype.updateWith = function ($info, newMember) {
        var _this = this;
        var r = _this.intersection({}, newMember);
        _this.formUnion({ $setThis: function ($val) { return $info.$setThis(_this = _cloneStruct($val)); } }, newMember);
        return (r.isEmpty ? null : r);
    };
    /*Swift.(file).OptionSet.init()*/
    /*Swift.(file).OptionSet.init()*/
    OptionSet$implementation.prototype.init = function ($info) {
        var _this = this;
        _this.initRawValue({}, _create(((function () { throw '!unclarifiedGeneric:Self.RawValue'; })()), 'initIntegerLiteral', {}, 0));
        return;
    };
    /*Swift.(file).OptionSet.formUnion(_:Self)*/
    /*Swift.(file).OptionSet.formUnion(_:Self)*/
    OptionSet$implementation.prototype.formUnion = function ($info, other) {
        var _this = this;
        $info.$setThis(_this = _cloneStruct(_create(_this.constructor, 'initRawValue', {}, ((function () { throw '!unclarifiedGeneric:Self.RawValue'; })()).infix_124({}, _this.rawValue, other.rawValue))));
    };
    /*Swift.(file).OptionSet.formIntersection(_:Self)*/
    /*Swift.(file).OptionSet.formIntersection(_:Self)*/
    OptionSet$implementation.prototype.formIntersection = function ($info, other) {
        var _this = this;
        $info.$setThis(_this = _cloneStruct(_create(_this.constructor, 'initRawValue', {}, ((function () { throw '!unclarifiedGeneric:Self.RawValue'; })()).infix_38({}, _this.rawValue, other.rawValue))));
    };
    /*Swift.(file).OptionSet.formSymmetricDifference(_:Self)*/
    /*Swift.(file).OptionSet.formSymmetricDifference(_:Self)*/
    OptionSet$implementation.prototype.formSymmetricDifference = function ($info, other) {
        var _this = this;
        $info.$setThis(_this = _cloneStruct(_create(_this.constructor, 'initRawValue', {}, ((function () { throw '!unclarifiedGeneric:Self.RawValue'; })()).infix_94({}, _this.rawValue, other.rawValue))));
    };
    return OptionSet$implementation;
}());
if (typeof SetAlgebra$implementation != 'undefined')
    _mixin(OptionSet$implementation, SetAlgebra$implementation, false);
if (typeof RawRepresentable$implementation != 'undefined')
    _mixin(OptionSet$implementation, RawRepresentable$implementation, false);
var Never = /** @class */ (function () {
    function Never() {
    }
    /*Swift.(file).Never.==(_:Never,_:Never)*/
    /*Swift.(file).Equatable.==infix(_:Self,_:Self)*/
    Never.infix_61_61 = function ($info, a, b) {
        return a == b;
    };
    /*Swift.(file).Never.<infix(_:Never,_:Never)*/
    /*Swift.(file).Comparable.<infix(_:Self,_:Self)*/
    Never.infix_60 = function ($info, lhs, rhs) {
        var _this = this;
    };
    /*Swift.(file).Never.hashValue*/
    Never.prototype.hashValue$get = function () {
        throw 'unsupported variable Swift.(file).Never.hashValue in ' + this.constructor.name;
    };
    Object.defineProperty(Never.prototype, "hashValue", {
        get: function () { return this.hashValue$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).Never.hash(into:Hasher)*/
    /*Swift.(file).Hashable.hash(into:Hasher)*/
    Never.prototype.hashInto = function ($info, hasher$inout) {
        throw 'unsupported method Swift.(file).Never.hash(into:Hasher) in ' + this.constructor.name;
    };
    Never.prototype.init$vars = function () {
    };
    Never.$infoAddress = '';
    return Never;
}());
if (typeof Error$implementation != 'undefined')
    _mixin(Never, Error$implementation, false);
if (typeof Equatable$implementation != 'undefined')
    _mixin(Never, Equatable$implementation, false);
if (typeof Comparable$implementation != 'undefined')
    _mixin(Never, Comparable$implementation, false);
if (typeof Hashable$implementation != 'undefined')
    _mixin(Never, Hashable$implementation, false);
_mixin(Never, _DefaultEnumImplementation, false);
var PartialRangeFrom = /** @class */ (function () {
    function PartialRangeFrom() {
    }
    /*Swift.(file).PartialRangeFrom.lowerBound*/
    PartialRangeFrom.prototype.lowerBound$get = function () {
        throw 'unsupported variable Swift.(file).PartialRangeFrom.lowerBound in ' + this.constructor.name;
    };
    Object.defineProperty(PartialRangeFrom.prototype, "lowerBound", {
        get: function () { return this.lowerBound$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).PartialRangeFrom.init(_:Bound)*/
    /*Swift.(file).PartialRangeFrom.init(_:Bound)*/
    PartialRangeFrom.prototype.init = function ($info, lowerBound) {
        throw 'unsupported method Swift.(file).PartialRangeFrom.init(_:Bound) in ' + this.constructor.name;
    };
    /*Swift.(file).PartialRangeFrom.relative(to:C)*/
    /*Swift.(file).RangeExpression.relative(to:C)*/
    PartialRangeFrom.prototype.relativeTo = function ($info, collection) {
        var _this = this;
        return (_.arg0 = _this.lowerBound).constructor.infix_46_46_60({}, _.arg0, collection.endIndex);
    };
    /*Swift.(file).PartialRangeFrom.contains(_:Bound)*/
    /*Swift.(file).RangeExpression.contains(_:Self.Bound)*/
    PartialRangeFrom.prototype.contains = function ($info, _element) {
        var _this = this;
        return (_.arg0 = _this.lowerBound).constructor.infix_60_61({}, _.arg0, _element);
    };
    /*Swift.(file).PartialRangeFrom.makeIterator()*/
    /*Swift.(file).Sequence.makeIterator()*/
    PartialRangeFrom.prototype.makeIterator = function ($info) {
        var _this = this;
        return _create(PartialRangeFrom.Iterator, 'init_current', {}, _this.lowerBound);
    };
    PartialRangeFrom.prototype.init$vars = function () {
    };
    var _10;
    PartialRangeFrom.$struct = true;
    PartialRangeFrom.$infoAddress = '';
    PartialRangeFrom.Iterator = (_10 = /** @class */ (function () {
            function class_34() {
            }
            /*Swift.(file).PartialRangeFrom.Iterator.init(_current:Bound)*/
            /*Swift.(file).PartialRangeFrom.Iterator.init(_current:Bound)*/
            class_34.prototype.init_current = function ($info, _current) {
                var _this = this;
                _this._current = _current;
                return;
            };
            /*Swift.(file).PartialRangeFrom.Iterator.next()*/
            /*Swift.(file).IteratorProtocol.next()*/
            class_34.prototype.next = function ($info) {
                var _this = this;
                var $defer = function () {
                    _this._current = _this._current.advancedBy({}, _create(Int, 'initIntegerLiteral', {}, 1));
                };
                var $result = (function () {
                    try {
                        ;
                        return _this._current;
                    }
                    catch ($error) {
                        $defer({});
                        throw $error;
                    }
                })();
                $defer({});
                return $result;
            };
            class_34.prototype.init$vars = function () {
            };
            return class_34;
        }()),
        _10.$struct = true,
        _10.$infoAddress = '',
        _10);
    return PartialRangeFrom;
}());
if (typeof IteratorProtocol$implementation != 'undefined')
    _mixin(PartialRangeFrom.Iterator, IteratorProtocol$implementation, false);
if (typeof RangeExpression$implementation != 'undefined')
    _mixin(PartialRangeFrom, RangeExpression$implementation, false);
if (typeof Sequence$implementation != 'undefined')
    _mixin(PartialRangeFrom, Sequence$implementation, false);
var RangeReplaceableCollection$implementation = /** @class */ (function () {
    function RangeReplaceableCollection$implementation() {
    }
    /*Swift.(file).RangeReplaceableCollection.init(repeating:Self.Element,count:Int)*/
    /*Swift.(file).RangeReplaceableCollection.init(repeating:Self.Element,count:Int)*/
    RangeReplaceableCollection$implementation.prototype.initRepeatingCountInt = function ($info, repeatedValue, count) {
        var _this = this;
        _this.init({});
        if ((Int.infix_33_61({}, count, 0))) {
            var _elements = _create(Repeated, 'init_repeatingCountInt', {}, repeatedValue, count);
            _this.appendContentsOf({ $setThis: function ($val) { return $info.$setThis(_this = _cloneStruct($val)); } }, _elements);
        }
        ;
        return;
    };
    /*Swift.(file).RangeReplaceableCollection.init(_:S)*/
    /*Swift.(file).RangeReplaceableCollection.init(_:S)*/
    RangeReplaceableCollection$implementation.prototype.initBuffer = function ($info, _elements) {
        var _this = this;
        _this.init({});
        _this.appendContentsOf({ $setThis: function ($val) { return $info.$setThis(_this = _cloneStruct($val)); } }, _elements);
        return;
    };
    /*Swift.(file).RangeReplaceableCollection.append(_:Self.Element)*/
    /*Swift.(file).RangeReplaceableCollection.append(_:Self.Element)*/
    RangeReplaceableCollection$implementation.prototype.append = function ($info, newElement) {
        var _this = this;
        _this.insertAt({ $setThis: function ($val) { return $info.$setThis(_this = _cloneStruct($val)); } }, newElement, _this.endIndex);
    };
    /*Swift.(file).RangeReplaceableCollection.append(contentsOf:S)*/
    /*Swift.(file).RangeReplaceableCollection.append(contentsOf:S)*/
    RangeReplaceableCollection$implementation.prototype.appendContentsOf = function ($info, newElements) {
        var _this = this;
        var approximateCapacity = Int.infix_43({}, _this.count, numericCast({ T: Int, U: Int }, newElements.underestimatedCount));
        {
            var $element$generator_9 = newElements.makeIterator({});
            while (true) {
                var $ifLet0, _element_1;
                if (!((($ifLet0 = $element$generator_9.next({ $setThis: function ($val) { return $element$generator_9 = $val; } })) || true) && $ifLet0 != null && ((_element_1 = $ifLet0) || true)))
                    break;
                _this.append({ $setThis: function ($val) { return $info.$setThis(_this = _cloneStruct($val)); } }, _element_1);
            }
        }
    };
    /*Swift.(file).RangeReplaceableCollection.insert(_:Self.Element,at:Self.Index)*/
    /*Swift.(file).RangeReplaceableCollection.insert(_:Self.Element,at:Self.Index)*/
    RangeReplaceableCollection$implementation.prototype.insertAt = function ($info, newElement, i) {
        var _this = this;
        _this.replaceSubrangeWith({ $setThis: function ($val) { return $info.$setThis(_this = _cloneStruct($val)); } }, (_.arg0 = i).constructor.infix_46_46_60({}, _.arg0, i), _create(CollectionOfOne, 'init', {}, newElement));
    };
    /*Swift.(file).RangeReplaceableCollection.insert(contentsOf:C,at:Self.Index)*/
    /*Swift.(file).RangeReplaceableCollection.insert(contentsOf:C,at:Self.Index)*/
    RangeReplaceableCollection$implementation.prototype.insertContentsOfAt = function ($info, newElements, i) {
        var _this = this;
        _this.replaceSubrangeWith({ $setThis: function ($val) { return $info.$setThis(_this = _cloneStruct($val)); } }, (_.arg0 = i).constructor.infix_46_46_60({}, _.arg0, i), newElements);
    };
    /*Swift.(file).RangeReplaceableCollection.remove(at:Self.Index)*/
    /*Swift.(file).RangeReplaceableCollection.remove(at:Self.Index)*/
    RangeReplaceableCollection$implementation.prototype.removeAt = function ($info, position) {
        var _this = this;
        preconditionFileLine({}, function () { return Bool.prefix_33({}, _this.isEmpty); }, function () { return "Can't remove from an empty collection"; }, '?3', '?3');
        var result = _this.subscript$get({}, position);
        _this.replaceSubrangeWith({ $setThis: function ($val) { return $info.$setThis(_this = _cloneStruct($val)); } }, (_.arg0 = position).constructor.infix_46_46_60({}, _.arg0, _this.indexAfter({}, position)), _create(EmptyCollection, 'init', {}));
        return result;
    };
    /*Swift.(file).RangeReplaceableCollection.removeSubrange(_:Range<Self.Index>)*/
    /*Swift.(file).RangeReplaceableCollection.removeSubrange(_:Range<Self.Index>)*/
    RangeReplaceableCollection$implementation.prototype.removeSubrangeRange = function ($info, bounds) {
        var _this = this;
        _this.replaceSubrangeWith({ $setThis: function ($val) { return $info.$setThis(_this = _cloneStruct($val)); } }, bounds, _create(EmptyCollection, 'init', {}));
    };
    /*Swift.(file).RangeReplaceableCollection.removeFirst(_:Int)*/
    /*Swift.(file).RangeReplaceableCollection.removeFirst(_:Int)*/
    RangeReplaceableCollection$implementation.prototype.removeFirstMultiple = function ($info, k) {
        var _this = this;
        if ((Int.infix_61_61({}, k, 0))) {
            return;
        }
        ;
        preconditionFileLine({}, function () { return Int.infix_62_61({}, k, 0); }, function () { return "Number of elements to remove should be non-negative"; }, '?3', '?3');
        preconditionFileLine({}, function () { return Int.infix_62_61({}, _this.count, k); }, function () { return "Can't remove more items from a collection than it has"; }, '?3', '?3');
        var end = _this.indexOffsetBy({}, _this.startIndex, k);
        _this.removeSubrangeRange({ $setThis: function ($val) { return $info.$setThis(_this = _cloneStruct($val)); } }, (_.arg0 = _this.startIndex).constructor.infix_46_46_60({}, _.arg0, end));
    };
    /*Swift.(file).RangeReplaceableCollection.removeFirst()*/
    /*Swift.(file).RangeReplaceableCollection.removeFirst()*/
    RangeReplaceableCollection$implementation.prototype.removeFirst = function ($info) {
        var _this = this;
        preconditionFileLine({}, function () { return Bool.prefix_33({}, _this.isEmpty); }, function () { return "Can't remove first element from an empty collection"; }, '?3', '?3');
        var firstElement = _this.first;
        _this.removeFirstMultiple({ $setThis: function ($val) { return $info.$setThis(_this = _cloneStruct($val)); } }, 1);
        return firstElement;
    };
    /*Swift.(file).RangeReplaceableCollection.removeAll(keepingCapacity:Bool)*/
    /*Swift.(file).RangeReplaceableCollection.removeAll(keepingCapacity:Bool)*/
    RangeReplaceableCollection$implementation.prototype.removeAllKeepingCapacity = function ($info, keepCapacity) {
        var _this = this;
        if ((Bool.prefix_33({}, keepCapacity))) {
            $info.$setThis(_this = _cloneStruct(_create(_this.constructor, 'init', {})));
        }
        else {
            _this.replaceSubrangeWith({ $setThis: function ($val) { return $info.$setThis(_this = _cloneStruct($val)); } }, (_.arg0 = _this.startIndex).constructor.infix_46_46_60({}, _.arg0, _this.endIndex), _create(EmptyCollection, 'init', {}));
        }
    };
    /*Swift.(file).RangeReplaceableCollection.reserveCapacity(_:Int)*/
    /*Swift.(file).RangeReplaceableCollection.reserveCapacity(_:Int)*/
    RangeReplaceableCollection$implementation.prototype.reserveCapacity = function ($info, n) {
    };
    /*Swift.(file).RangeReplaceableCollection.removeFirst()*/
    /*Swift.(file).RangeReplaceableCollection.removeFirst()*/
    RangeReplaceableCollection$implementation.prototype.removeFirst = function ($info) {
        var _this = this;
        preconditionFileLine({}, function () { return Bool.prefix_33({}, _this.isEmpty); }, function () { return "Can't remove first element from an empty collection"; }, '?3', '?3');
        var firstElement = _this.first;
        _this.removeFirstMultiple({ $setThis: function ($val) { return $info.$setThis(_this = _cloneStruct($val)); } }, 1);
        return firstElement;
    };
    /*Swift.(file).RangeReplaceableCollection.removeFirst(_:Int)*/
    /*Swift.(file).RangeReplaceableCollection.removeFirst(_:Int)*/
    RangeReplaceableCollection$implementation.prototype.removeFirstMultiple = function ($info, k) {
        var _this = this;
        if ((Int.infix_61_61({}, k, 0))) {
            return;
        }
        ;
        preconditionFileLine({}, function () { return Int.infix_62_61({}, k, 0); }, function () { return "Number of elements to remove should be non-negative"; }, '?3', '?3');
        preconditionFileLine({}, function () { return Int.infix_62_61({}, _this.count, k); }, function () { return "Can't remove more items from a collection than it has"; }, '?3', '?3');
        var end = _this.indexOffsetBy({}, _this.startIndex, k);
        _this.removeSubrangeRange({ $setThis: function ($val) { return $info.$setThis(_this = _cloneStruct($val)); } }, (_.arg0 = _this.startIndex).constructor.infix_46_46_60({}, _.arg0, end));
    };
    /*Swift.(file).RangeReplaceableCollection.replaceSubrange(_:R,with:C)*/
    /*Swift.(file).RangeReplaceableCollection.replaceSubrange(_:R,with:C)*/
    RangeReplaceableCollection$implementation.prototype.replaceSubrangeWith = function ($info, subrange, newElements) {
        var _this = this;
        _this.replaceSubrangeWith({ $setThis: function ($val) { return $info.$setThis(_this = _cloneStruct($val)); } }, subrange.relativeTo({}, _this), newElements);
    };
    /*Swift.(file).RangeReplaceableCollection.removeSubrange(_:R)*/
    /*Swift.(file).RangeReplaceableCollection.removeSubrange(_:R)*/
    RangeReplaceableCollection$implementation.prototype.removeSubrange = function ($info, bounds) {
        var _this = this;
        _this.removeSubrangeRange({ $setThis: function ($val) { return $info.$setThis(_this = _cloneStruct($val)); } }, bounds.relativeTo({}, _this));
    };
    /*Swift.(file).RangeReplaceableCollection.popLast()*/
    /*Swift.(file).RangeReplaceableCollection.popLast()*/
    RangeReplaceableCollection$implementation.prototype.popLast = function ($info) {
        var _this = this;
        if ((_this.isEmpty)) {
            return null;
        }
        ;
        return _this.removeAt({ $setThis: function ($val) { return $info.$setThis(_this = _cloneStruct($val)); } }, _this.indexBefore({}, _this.endIndex));
    };
    /*Swift.(file).RangeReplaceableCollection.removeLast()*/
    /*Swift.(file).RangeReplaceableCollection.removeLast()*/
    RangeReplaceableCollection$implementation.prototype.removeLast = function ($info) {
        var _this = this;
        preconditionFileLine({}, function () { return Bool.prefix_33({}, _this.isEmpty); }, function () { return "Can't remove last element from an empty collection"; }, '?3', '?3');
        return _this.removeAt({ $setThis: function ($val) { return $info.$setThis(_this = _cloneStruct($val)); } }, _this.indexBefore({}, _this.endIndex));
    };
    /*Swift.(file).RangeReplaceableCollection.removeLast(_:Int)*/
    /*Swift.(file).RangeReplaceableCollection.removeLast(_:Int)*/
    RangeReplaceableCollection$implementation.prototype.removeLastMultiple = function ($info, k) {
        throw 'unsupported method Swift.(file).RangeReplaceableCollection.removeLast(_:Int) in ' + this.constructor.name;
    };
    /*Swift.(file).RangeReplaceableCollection.popLast()*/
    /*Swift.(file).RangeReplaceableCollection.popLast()*/
    RangeReplaceableCollection$implementation.prototype.popLast = function ($info) {
        var _this = this;
        if ((_this.isEmpty)) {
            return null;
        }
        ;
        return _this.removeAt({ $setThis: function ($val) { return $info.$setThis(_this = _cloneStruct($val)); } }, _this.indexBefore({}, _this.endIndex));
    };
    /*Swift.(file).RangeReplaceableCollection.removeLast()*/
    /*Swift.(file).RangeReplaceableCollection.removeLast()*/
    RangeReplaceableCollection$implementation.prototype.removeLast = function ($info) {
        var _this = this;
        preconditionFileLine({}, function () { return Bool.prefix_33({}, _this.isEmpty); }, function () { return "Can't remove last element from an empty collection"; }, '?3', '?3');
        return _this.removeAt({ $setThis: function ($val) { return $info.$setThis(_this = _cloneStruct($val)); } }, _this.indexBefore({}, _this.endIndex));
    };
    /*Swift.(file).RangeReplaceableCollection.removeLast(_:Int)*/
    /*Swift.(file).RangeReplaceableCollection.removeLast(_:Int)*/
    RangeReplaceableCollection$implementation.prototype.removeLastMultiple = function ($info, k) {
        throw 'unsupported method Swift.(file).RangeReplaceableCollection.removeLast(_:Int) in ' + this.constructor.name;
    };
    /*Swift.(file).RangeReplaceableCollection.+infix(_:Self,_:Other)*/
    /*Swift.(file).RangeReplaceableCollection.+infix(_:Self,_:Other)*/
    RangeReplaceableCollection$implementation.infix_43 = function ($info, lhs, rhs) {
        var _this = this;
        var lhs_dupl = lhs;
        lhs_dupl.appendContentsOf({ $setThis: function ($val) { return lhs_dupl = $val; } }, rhs);
        return lhs_dupl;
    };
    /*Swift.(file).RangeReplaceableCollection.+infix(_:Other,_:Self)*/
    /*Swift.(file).RangeReplaceableCollection.+infix(_:Other,_:Self)*/
    RangeReplaceableCollection$implementation.infix_43 = function ($info, lhs, rhs) {
        var _this = this;
        var result = _create(_this, 'init', {});
        result.appendContentsOf({ $setThis: function ($val) { return result = $val; } }, lhs);
        result.appendContentsOf({ $setThis: function ($val) { return result = $val; } }, rhs);
        return result;
    };
    /*Swift.(file).RangeReplaceableCollection.+=infix(_:Self,_:Other)*/
    /*Swift.(file).RangeReplaceableCollection.+=infix(_:Self,_:Other)*/
    RangeReplaceableCollection$implementation.infix_43_61 = function ($info, lhs$inout, rhs) {
        var _this = this;
        var lhs = lhs$inout.get();
        var $result = (function () {
            lhs.appendContentsOf({ $setThis: function ($val) { return lhs = $val; } }, rhs);
        })();
        lhs$inout.set(lhs);
        return $result;
    };
    /*Swift.(file).RangeReplaceableCollection.+infix(_:Self,_:Other)*/
    /*Swift.(file).RangeReplaceableCollection.+infix(_:Self,_:Other)*/
    RangeReplaceableCollection$implementation.infix_43 = function ($info, lhs, rhs) {
        var _this = this;
        var lhs_dupl = lhs;
        lhs_dupl.appendContentsOf({ $setThis: function ($val) { return lhs_dupl = $val; } }, rhs);
        return lhs_dupl;
    };
    /*Swift.(file).RangeReplaceableCollection.filter(_:(Self.Element) throws -> Bool)*/
    /*Swift.(file).RangeReplaceableCollection.filter(_:(Self.Element) throws -> Bool)*/
    RangeReplaceableCollection$implementation.prototype.filterSwift = function ($info, isIncluded) {
        var _this = this;
        return _create(_this.constructor, 'initBuffer', {}, _this.lazy.filterSwift({}, isIncluded));
    };
    /*Swift.(file).RangeReplaceableCollection.removeAll(where:(Self.Element) throws -> Bool)*/
    /*Swift.(file).RangeReplaceableCollection.removeAll(where:(Self.Element) throws -> Bool)*/
    RangeReplaceableCollection$implementation.prototype.removeAllWhere = function ($info, shouldBeRemoved) {
        var _this = this;
        var suffixStart = _this._halfStablePartitionIsSuffixElement({ $setThis: function ($val) { return $info.$setThis(_this = _cloneStruct($val)); } }, shouldBeRemoved);
        _this.removeSubrange({ $setThis: function ($val) { return $info.$setThis(_this = _cloneStruct($val)); } }, ((function () { throw '!unclarifiedGeneric:Self.Index'; })()).postfix_46_46_46({}, suffixStart));
    };
    /*Swift.(file).RangeReplaceableCollection.removeAll(where:(Self.Element) throws -> Bool)*/
    /*Swift.(file).RangeReplaceableCollection.removeAll(where:(Self.Element) throws -> Bool)*/
    RangeReplaceableCollection$implementation.prototype.removeAllWhere = function ($info, shouldBeRemoved) {
        var _this = this;
        var suffixStart = _this._halfStablePartitionIsSuffixElement({ $setThis: function ($val) { return $info.$setThis(_this = _cloneStruct($val)); } }, shouldBeRemoved);
        _this.removeSubrange({ $setThis: function ($val) { return $info.$setThis(_this = _cloneStruct($val)); } }, ((function () { throw '!unclarifiedGeneric:Self.Index'; })()).postfix_46_46_46({}, suffixStart));
    };
    return RangeReplaceableCollection$implementation;
}());
if (typeof Collection$implementation != 'undefined')
    _mixin(RangeReplaceableCollection$implementation, Collection$implementation, false);
var MIO_Mixin_Set = /** @class */ (function () {
    function MIO_Mixin_Set() {
    }
    /*Swift.(file).Set.init(minimumCapacity:Int)*/
    /*Swift.(file).Set.init(minimumCapacity:Int)*/
    MIO_Mixin_Set.prototype.initMinimumCapacityInt = function ($info, minimumCapacity) {
        throw 'unsupported method Swift.(file).Set.init(minimumCapacity:Int) in ' + this.constructor.name;
    };
    /*Swift.(file).Set.init(_native:_NativeSet<Element>)*/
    /*Swift.(file).Set.init(_native:_NativeSet<Element>)*/
    MIO_Mixin_Set.prototype.init_native_NativeSet = function ($info, _native) {
        throw 'unsupported method Swift.(file).Set.init(_native:_NativeSet<Element>) in ' + this.constructor.name;
    };
    /*Swift.(file).Set.init(_cocoa:_CocoaSet)*/
    /*Swift.(file).Set.init(_cocoa:_CocoaSet)*/
    MIO_Mixin_Set.prototype.init_cocoa_CocoaSet = function ($info, _cocoa) {
        throw 'unsupported method Swift.(file).Set.init(_cocoa:_CocoaSet) in ' + this.constructor.name;
    };
    /*Swift.(file).Set.init(_immutableCocoaSet:AnyObject)*/
    /*Swift.(file).Set.init(_immutableCocoaSet:AnyObject)*/
    MIO_Mixin_Set.prototype.init_immutableCocoaSetAnyObject = function ($info, _immutableCocoaSet) {
        throw 'unsupported method Swift.(file).Set.init(_immutableCocoaSet:AnyObject) in ' + this.constructor.name;
    };
    /*Swift.(file).Set.encode(to:Encoder)*/
    /*Swift.(file).Encodable.encode(to:Encoder)*/
    MIO_Mixin_Set.prototype.encodeTo = function ($info, encoder) {
        throw 'unsupported method Swift.(file).Set.encode(to:Encoder) in ' + this.constructor.name;
    };
    /*Swift.(file).Set.init(from:Decoder)*/
    /*Swift.(file).Decodable.init(from:Decoder)*/
    MIO_Mixin_Set.prototype.initFromDecoder = function ($info, decoder) {
        throw 'unsupported method Swift.(file).Set.init(from:Decoder) in ' + this.constructor.name;
    };
    /*Swift.(file).Set.init(arrayLiteral:[Element])*/
    /*Swift.(file).ExpressibleByArrayLiteral.init(arrayLiteral:[Self.ArrayLiteralElement])*/
    MIO_Mixin_Set.prototype.initArrayLiteralArray = function ($info, _elements) {
        return new Set(_elements);
    };
    /*Swift.(file).Set.makeIterator()*/
    /*Swift.(file).Sequence.makeIterator()*/
    /*Swift.(file).Collection.makeIterator()*/
    MIO_Mixin_Set.prototype.makeIterator = function ($info) {
        var _this = this;
        return _this;
    };
    /*Swift.(file).Set.contains(_:Element)*/
    /*Swift.(file).SetAlgebra.contains(_:Self.Element)*/
    MIO_Mixin_Set.prototype.contains = function ($info, member) {
        throw 'unsupported method Swift.(file).Set.contains(_:Element) in ' + this.constructor.name;
    };
    /*Swift.(file).Set.filter(_:(Element) throws -> Bool)*/
    /*Swift.(file).Set.filter(_:(Element) throws -> Bool)*/
    MIO_Mixin_Set.prototype.filterSwift = function ($info, isIncluded) {
        throw 'unsupported method Swift.(file).Set.filter(_:(Element) throws -> Bool) in ' + this.constructor.name;
    };
    /*Swift.(file).Set.startIndex*/
    MIO_Mixin_Set.prototype.startIndex$get = function () {
        throw 'unsupported variable Swift.(file).Set.startIndex in ' + this.constructor.name;
    };
    Object.defineProperty(MIO_Mixin_Set.prototype, "startIndex", {
        get: function () { return this.startIndex$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).Set.endIndex*/
    MIO_Mixin_Set.prototype.endIndex$get = function () {
        throw 'unsupported variable Swift.(file).Set.endIndex in ' + this.constructor.name;
    };
    Object.defineProperty(MIO_Mixin_Set.prototype, "endIndex", {
        get: function () { return this.endIndex$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).Set.subscript(_:Set<Element>.Index)*/
    /*Swift.(file).Collection.subscript(_:Self.Index)*/
    MIO_Mixin_Set.prototype.subscript$get = function ($info, position) {
        throw 'unsupported method Swift.(file).Set.subscript(_:Set<Element>.Index) in ' + this.constructor.name;
    };
    /*Swift.(file).Set.index(after:Set<Element>.Index)*/
    /*Swift.(file).Collection.index(after:Self.Index)*/
    MIO_Mixin_Set.prototype.indexAfter = function ($info, i) {
        throw 'unsupported method Swift.(file).Set.index(after:Set<Element>.Index) in ' + this.constructor.name;
    };
    /*Swift.(file).Set.formIndex(after:Set<Element>.Index)*/
    /*Swift.(file).Collection.formIndex(after:Self.Index)*/
    MIO_Mixin_Set.prototype.formIndexAfter = function ($info, i$inout) {
        var _this = this;
        var i = i$inout.get();
        var $result = (function () {
            i = _this.indexAfter({}, i);
        })();
        i$inout.set(i);
        return $result;
    };
    /*Swift.(file).Set.firstIndex(of:Element)*/
    /*Swift.(file).Set.firstIndex(of:Element)*/
    MIO_Mixin_Set.prototype.firstIndexOf = function ($info, member) {
        throw 'unsupported method Swift.(file).Set.firstIndex(of:Element) in ' + this.constructor.name;
    };
    /*Swift.(file).Set.count*/
    MIO_Mixin_Set.prototype.count$get = function () {
        return this.size;
    };
    Object.defineProperty(MIO_Mixin_Set.prototype, "count", {
        get: function () { return this.count$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).Set.isEmpty*/
    MIO_Mixin_Set.prototype.isEmpty$get = function () {
        var _this = this;
        return (_.arg0 = _this.startIndex).constructor.infix_61_61({}, _.arg0, _this.endIndex);
    };
    Object.defineProperty(MIO_Mixin_Set.prototype, "isEmpty", {
        get: function () { return this.isEmpty$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).Set.==infix(_:Set<Element>,_:Set<Element>)*/
    /*Swift.(file).Equatable.==infix(_:Self,_:Self)*/
    MIO_Mixin_Set.infix_61_61 = function ($info, lhs, rhs) {
        return lhs == rhs;
    };
    /*Swift.(file).Set.hash(into:Hasher)*/
    /*Swift.(file).Hashable.hash(into:Hasher)*/
    MIO_Mixin_Set.prototype.hashInto = function ($info, hasher$inout) {
        throw 'unsupported method Swift.(file).Set.hash(into:Hasher) in ' + this.constructor.name;
    };
    /*Swift.(file).Set.hashValue*/
    MIO_Mixin_Set.prototype.hashValue$get = function () {
        throw 'unsupported variable Swift.(file).Set.hashValue in ' + this.constructor.name;
    };
    Object.defineProperty(MIO_Mixin_Set.prototype, "hashValue", {
        get: function () { return this.hashValue$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).Set.insert(_:Element)*/
    /*Swift.(file).SetAlgebra.insert(_:Self.Element)*/
    MIO_Mixin_Set.prototype.insert = function ($info, newMember) {
        this.add(_cloneStruct(newMember));
    };
    /*Swift.(file).Set.update(with:Element)*/
    /*Swift.(file).SetAlgebra.update(with:Self.Element)*/
    MIO_Mixin_Set.prototype.updateWith = function ($info, newMember) {
        throw 'unsupported method Swift.(file).Set.update(with:Element) in ' + this.constructor.name;
    };
    /*Swift.(file).Set.remove(_:Element)*/
    /*Swift.(file).SetAlgebra.remove(_:Self.Element)*/
    MIO_Mixin_Set.prototype.remove = function ($info, member) {
        throw 'unsupported method Swift.(file).Set.remove(_:Element) in ' + this.constructor.name;
    };
    /*Swift.(file).Set.remove(at:Set<Element>.Index)*/
    /*Swift.(file).Set.remove(at:Set<Element>.Index)*/
    MIO_Mixin_Set.prototype.removeAt = function ($info, position) {
        throw 'unsupported method Swift.(file).Set.remove(at:Set<Element>.Index) in ' + this.constructor.name;
    };
    /*Swift.(file).Set.removeAll(keepingCapacity:Bool)*/
    /*Swift.(file).Set.removeAll(keepingCapacity:Bool)*/
    MIO_Mixin_Set.prototype.removeAllKeepingCapacity = function ($info, keepCapacity) {
        throw 'unsupported method Swift.(file).Set.removeAll(keepingCapacity:Bool) in ' + this.constructor.name;
    };
    /*Swift.(file).Set.removeFirst()*/
    /*Swift.(file).Set.removeFirst()*/
    MIO_Mixin_Set.prototype.removeFirst = function ($info) {
        throw 'unsupported method Swift.(file).Set.removeFirst() in ' + this.constructor.name;
    };
    /*Swift.(file).Set.init()*/
    /*Swift.(file).SetAlgebra.init()*/
    MIO_Mixin_Set.prototype.init = function ($info) {
        return new Set();
    };
    /*Swift.(file).Set.init(_:Source)*/
    /*Swift.(file).SetAlgebra.init(_:S)*/
    MIO_Mixin_Set.prototype.initSource = function ($info, sequence) {
        return new Set(sequence);
    };
    /*Swift.(file).Set.isSubset(of:S)*/
    /*Swift.(file).Set.isSubset(of:S)*/
    MIO_Mixin_Set.prototype.isSubsetOf = function ($info, possibleSuperset) {
        throw 'unsupported method Swift.(file).Set.isSubset(of:S) in ' + this.constructor.name;
    };
    /*Swift.(file).Set.isStrictSubset(of:S)*/
    /*Swift.(file).Set.isStrictSubset(of:S)*/
    MIO_Mixin_Set.prototype.isStrictSubsetOf = function ($info, possibleStrictSuperset) {
        throw 'unsupported method Swift.(file).Set.isStrictSubset(of:S) in ' + this.constructor.name;
    };
    /*Swift.(file).Set.isSuperset(of:S)*/
    /*Swift.(file).Set.isSuperset(of:S)*/
    MIO_Mixin_Set.prototype.isSupersetOf = function ($info, possibleSubset) {
        throw 'unsupported method Swift.(file).Set.isSuperset(of:S) in ' + this.constructor.name;
    };
    /*Swift.(file).Set.isStrictSuperset(of:S)*/
    /*Swift.(file).Set.isStrictSuperset(of:S)*/
    MIO_Mixin_Set.prototype.isStrictSupersetOf = function ($info, possibleStrictSubset) {
        throw 'unsupported method Swift.(file).Set.isStrictSuperset(of:S) in ' + this.constructor.name;
    };
    /*Swift.(file).Set.isDisjoint(with:S)*/
    /*Swift.(file).Set.isDisjoint(with:S)*/
    MIO_Mixin_Set.prototype.isDisjointWith = function ($info, other) {
        throw 'unsupported method Swift.(file).Set.isDisjoint(with:S) in ' + this.constructor.name;
    };
    /*Swift.(file).Set.union(_:S)*/
    /*Swift.(file).SetAlgebra.union(_:Self)*/
    MIO_Mixin_Set.prototype.union = function ($info, other) {
        throw 'unsupported method Swift.(file).Set.union(_:S) in ' + this.constructor.name;
    };
    /*Swift.(file).Set.formUnion(_:S)*/
    /*Swift.(file).SetAlgebra.formUnion(_:Self)*/
    MIO_Mixin_Set.prototype.formUnion = function ($info, other) {
        throw 'unsupported method Swift.(file).Set.formUnion(_:S) in ' + this.constructor.name;
    };
    /*Swift.(file).Set.subtracting(_:S)*/
    /*Swift.(file).Set.subtracting(_:S)*/
    MIO_Mixin_Set.prototype.subtracting = function ($info, other) {
        throw 'unsupported method Swift.(file).Set.subtracting(_:S) in ' + this.constructor.name;
    };
    /*Swift.(file).Set.subtract(_:S)*/
    /*Swift.(file).Set.subtract(_:S)*/
    MIO_Mixin_Set.prototype.subtract = function ($info, other) {
        throw 'unsupported method Swift.(file).Set.subtract(_:S) in ' + this.constructor.name;
    };
    /*Swift.(file).Set.intersection(_:S)*/
    /*Swift.(file).Set.intersection(_:S)*/
    MIO_Mixin_Set.prototype.intersection = function ($info, other) {
        throw 'unsupported method Swift.(file).Set.intersection(_:S) in ' + this.constructor.name;
    };
    /*Swift.(file).Set.formIntersection(_:S)*/
    /*Swift.(file).SetAlgebra.formIntersection(_:Self)*/
    MIO_Mixin_Set.prototype.formIntersection = function ($info, other) {
        throw 'unsupported method Swift.(file).Set.formIntersection(_:S) in ' + this.constructor.name;
    };
    /*Swift.(file).Set.symmetricDifference(_:S)*/
    /*Swift.(file).SetAlgebra.symmetricDifference(_:Self)*/
    MIO_Mixin_Set.prototype.symmetricDifference = function ($info, other) {
        throw 'unsupported method Swift.(file).Set.symmetricDifference(_:S) in ' + this.constructor.name;
    };
    /*Swift.(file).Set.formSymmetricDifference(_:S)*/
    /*Swift.(file).Set.formSymmetricDifference(_:S)*/
    MIO_Mixin_Set.prototype.formSymmetricDifference = function ($info, other) {
        throw 'unsupported method Swift.(file).Set.formSymmetricDifference(_:S) in ' + this.constructor.name;
    };
    /*Swift.(file).Set.description*/
    MIO_Mixin_Set.prototype.description$get = function () {
        throw 'unsupported variable Swift.(file).Set.description in ' + this.constructor.name;
    };
    Object.defineProperty(MIO_Mixin_Set.prototype, "description", {
        get: function () { return this.description$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).Set.debugDescription*/
    MIO_Mixin_Set.prototype.debugDescription$get = function () {
        throw 'unsupported variable Swift.(file).Set.debugDescription in ' + this.constructor.name;
    };
    Object.defineProperty(MIO_Mixin_Set.prototype, "debugDescription", {
        get: function () { return this.debugDescription$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).Set.subtract(_:Set<Element>)*/
    /*Swift.(file).SetAlgebra.subtract(_:Self)*/
    MIO_Mixin_Set.prototype.subtract = function ($info, other) {
        var _this = this;
        _this.formIntersection({ $setThis: function ($val) { return $info.$setThis(_this = _cloneStruct($val)); } }, _this.symmetricDifference({}, other));
    };
    /*Swift.(file).Set.isSubset(of:Set<Element>)*/
    /*Swift.(file).SetAlgebra.isSubset(of:Self)*/
    MIO_Mixin_Set.prototype.isSubsetOf = function ($info, other) {
        var _this = this;
        return (_.arg0 = _this.intersection({}, other)).constructor.infix_61_61({}, _.arg0, _this);
    };
    /*Swift.(file).Set.isSuperset(of:Set<Element>)*/
    /*Swift.(file).SetAlgebra.isSuperset(of:Self)*/
    MIO_Mixin_Set.prototype.isSupersetOf = function ($info, other) {
        var _this = this;
        return other.isSubsetOf({}, _this);
    };
    /*Swift.(file).Set.isDisjoint(with:Set<Element>)*/
    /*Swift.(file).SetAlgebra.isDisjoint(with:Self)*/
    MIO_Mixin_Set.prototype.isDisjointWith = function ($info, other) {
        var _this = this;
        return _this.intersection({}, other).isEmpty;
    };
    /*Swift.(file).Set.subtracting(_:Set<Element>)*/
    /*Swift.(file).SetAlgebra.subtracting(_:Self)*/
    MIO_Mixin_Set.prototype.subtracting = function ($info, other) {
        var _this = this;
        return _this.intersection({}, _this.symmetricDifference({}, other));
    };
    /*Swift.(file).Set.isStrictSuperset(of:Set<Element>)*/
    /*Swift.(file).Set.isStrictSuperset(of:Set<Element>)*/
    MIO_Mixin_Set.prototype.isStrictSupersetOf = function ($info, other) {
        throw 'unsupported method Swift.(file).Set.isStrictSuperset(of:Set<Element>) in ' + this.constructor.name;
    };
    /*Swift.(file).Set.isStrictSubset(of:Set<Element>)*/
    /*Swift.(file).Set.isStrictSubset(of:Set<Element>)*/
    MIO_Mixin_Set.prototype.isStrictSubsetOf = function ($info, other) {
        throw 'unsupported method Swift.(file).Set.isStrictSubset(of:Set<Element>) in ' + this.constructor.name;
    };
    /*Swift.(file).Set.intersection(_:Set<Element>)*/
    /*Swift.(file).SetAlgebra.intersection(_:Self)*/
    MIO_Mixin_Set.prototype.intersection = function ($info, other) {
        throw 'unsupported method Swift.(file).Set.intersection(_:Set<Element>) in ' + this.constructor.name;
    };
    /*Swift.(file).Set.formSymmetricDifference(_:Set<Element>)*/
    /*Swift.(file).SetAlgebra.formSymmetricDifference(_:Self)*/
    MIO_Mixin_Set.prototype.formSymmetricDifference = function ($info, other) {
        throw 'unsupported method Swift.(file).Set.formSymmetricDifference(_:Set<Element>) in ' + this.constructor.name;
    };
    /*Swift.(file).Set.customMirror*/
    MIO_Mixin_Set.prototype.customMirror$get = function () {
        throw 'unsupported variable Swift.(file).Set.customMirror in ' + this.constructor.name;
    };
    Object.defineProperty(MIO_Mixin_Set.prototype, "customMirror", {
        get: function () { return this.customMirror$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).Set.popFirst()*/
    /*Swift.(file).Set.popFirst()*/
    MIO_Mixin_Set.prototype.popFirst = function ($info) {
        throw 'unsupported method Swift.(file).Set.popFirst() in ' + this.constructor.name;
    };
    /*Swift.(file).Set.capacity*/
    MIO_Mixin_Set.prototype.capacity$get = function () {
        throw 'unsupported variable Swift.(file).Set.capacity in ' + this.constructor.name;
    };
    Object.defineProperty(MIO_Mixin_Set.prototype, "capacity", {
        get: function () { return this.capacity$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).Set.reserveCapacity(_:Int)*/
    /*Swift.(file).Set.reserveCapacity(_:Int)*/
    MIO_Mixin_Set.prototype.reserveCapacity = function ($info, minimumCapacity) {
        throw 'unsupported method Swift.(file).Set.reserveCapacity(_:Int) in ' + this.constructor.name;
    };
    /*Swift.(file).Set.insert(_:ConcreteElement)*/
    /*Swift.(file).Set.insert(_:ConcreteElement)*/
    MIO_Mixin_Set.prototype.insertConcreteElement = function ($info, newMember) {
        var _this = this;
        var $tuple = _this.insert({ $setThis: function ($val) { return $info.$setThis(_this = _cloneStruct($val)); } }, _create(AnyHashable, 'init', {}, newMember)), inserted = $tuple && $tuple[0], memberAfterInsert = $tuple && $tuple[1];
        return { 0: inserted, 1: memberAfterInsert.base };
    };
    /*Swift.(file).Set.update(with:ConcreteElement)*/
    /*Swift.(file).Set.update(with:ConcreteElement)*/
    MIO_Mixin_Set.prototype.updateWith = function ($info, newMember) {
        var _this = this;
        return _this.updateWith({ $setThis: function ($val) { return $info.$setThis(_this = _cloneStruct($val)); } }, _create(AnyHashable, 'init', {}, newMember)).mapSwift({}, (function ($info, $0) { return $0.base; }));
    };
    /*Swift.(file).Set.remove(_:ConcreteElement)*/
    /*Swift.(file).Set.remove(_:ConcreteElement)*/
    MIO_Mixin_Set.prototype.remove = function ($info, member) {
        var _this = this;
        return _this.remove({ $setThis: function ($val) { return $info.$setThis(_this = _cloneStruct($val)); } }, _create(AnyHashable, 'init', {}, member)).mapSwift({}, (function ($info, $0) { return $0.base; }));
    };
    MIO_Mixin_Set.prototype.init$vars = function () {
    };
    var _11, _12, _13, _14, _15;
    MIO_Mixin_Set.$struct = true;
    MIO_Mixin_Set.$mixin = true;
    MIO_Mixin_Set.$infoAddress = '';
    MIO_Mixin_Set.Index = (_11 = /** @class */ (function () {
            function class_35() {
            }
            /*Swift.(file).Set.Index.init(_variant:Set<Element>.Index._Variant)*/
            /*Swift.(file).Set.Index.init(_variant:Set<Element>.Index._Variant)*/
            class_35.prototype.init_variantSetIndex_Variant = function ($info, _variant) {
                throw 'unsupported method Swift.(file).Set.Index.init(_variant:Set<Element>.Index._Variant) in ' + this.constructor.name;
            };
            /*Swift.(file).Set.Index.init(_native:_HashTable.Index)*/
            /*Swift.(file).Set.Index.init(_native:_HashTable.Index)*/
            class_35.prototype.init_native_HashTableIndex = function ($info, index) {
                throw 'unsupported method Swift.(file).Set.Index.init(_native:_HashTable.Index) in ' + this.constructor.name;
            };
            /*Swift.(file).Set.Index.init(_cocoa:_CocoaSet.Index)*/
            /*Swift.(file).Set.Index.init(_cocoa:_CocoaSet.Index)*/
            class_35.prototype.init_cocoa_CocoaSetIndex = function ($info, index) {
                throw 'unsupported method Swift.(file).Set.Index.init(_cocoa:_CocoaSet.Index) in ' + this.constructor.name;
            };
            /*Swift.(file).Set.Index.==infix(_:Set<Element>.Index,_:Set<Element>.Index)*/
            /*Swift.(file).Equatable.==infix(_:Self,_:Self)*/
            class_35.infix_61_61 = function ($info, lhs, rhs) {
                return lhs == rhs;
            };
            /*Swift.(file).Set.Index.<infix(_:Set<Element>.Index,_:Set<Element>.Index)*/
            /*Swift.(file).Comparable.<infix(_:Self,_:Self)*/
            class_35.infix_60 = function ($info, lhs, rhs) {
                return lhs < rhs;
            };
            /*Swift.(file).Set.Index.hash(into:Hasher)*/
            /*Swift.(file).Hashable.hash(into:Hasher)*/
            class_35.prototype.hashInto = function ($info, hasher$inout) {
                throw 'unsupported method Swift.(file).Set.Index.hash(into:Hasher) in ' + this.constructor.name;
            };
            /*Swift.(file).Set.Index.hashValue*/
            class_35.prototype.hashValue$get = function () {
                throw 'unsupported variable Swift.(file).Set.Index.hashValue in ' + this.constructor.name;
            };
            Object.defineProperty(class_35.prototype, "hashValue", {
                get: function () { return this.hashValue$get(); },
                enumerable: true,
                configurable: true
            });
            ;
            class_35.prototype.init$vars = function () {
            };
            return class_35;
        }()),
        _11.$struct = true,
        _11.$infoAddress = '',
        _11._Variant = (_12 = /** @class */ (function () {
                function class_36() {
                }
                class_36._native = function () { return Object.assign(new MIO_Mixin_Set.Index._Variant(), __assign({ rawValue: "_native" }, Array.from(arguments).slice(1))); };
                class_36.cocoa = function () { return Object.assign(new MIO_Mixin_Set.Index._Variant(), __assign({ rawValue: "cocoa" }, Array.from(arguments).slice(1))); };
                class_36.prototype.init$vars = function () {
                };
                return class_36;
            }()),
            _12.$infoAddress = '',
            _12),
        _11);
    MIO_Mixin_Set.Iterator = (_13 = /** @class */ (function () {
            function class_37() {
            }
            /*Swift.(file).Set.Iterator.init(_variant:Set<Element>.Iterator._Variant)*/
            /*Swift.(file).Set.Iterator.init(_variant:Set<Element>.Iterator._Variant)*/
            class_37.prototype.init_variantSetIterator_Variant = function ($info, _variant) {
                throw 'unsupported method Swift.(file).Set.Iterator.init(_variant:Set<Element>.Iterator._Variant) in ' + this.constructor.name;
            };
            /*Swift.(file).Set.Iterator.init(_native:_NativeSet<Set<Element>.Iterator.Element>.Iterator)*/
            /*Swift.(file).Set.Iterator.init(_native:_NativeSet<Set<Element>.Iterator.Element>.Iterator)*/
            class_37.prototype.init_native_NativeSetIterator = function ($info, _native) {
                throw 'unsupported method Swift.(file).Set.Iterator.init(_native:_NativeSet<Set<Element>.Iterator.Element>.Iterator) in ' + this.constructor.name;
            };
            /*Swift.(file).Set.Iterator.init(_cocoa:_CocoaSet.Iterator)*/
            /*Swift.(file).Set.Iterator.init(_cocoa:_CocoaSet.Iterator)*/
            class_37.prototype.init_cocoa_CocoaSetIterator = function ($info, _cocoa) {
                throw 'unsupported method Swift.(file).Set.Iterator.init(_cocoa:_CocoaSet.Iterator) in ' + this.constructor.name;
            };
            /*Swift.(file).Set.Iterator.next()*/
            /*Swift.(file).IteratorProtocol.next()*/
            class_37.prototype.next = function ($info) {
                throw 'unsupported method Swift.(file).Set.Iterator.next() in ' + this.constructor.name;
            };
            /*Swift.(file).Set.Iterator.customMirror*/
            class_37.prototype.customMirror$get = function () {
                throw 'unsupported variable Swift.(file).Set.Iterator.customMirror in ' + this.constructor.name;
            };
            Object.defineProperty(class_37.prototype, "customMirror", {
                get: function () { return this.customMirror$get(); },
                enumerable: true,
                configurable: true
            });
            ;
            class_37.prototype.init$vars = function () {
            };
            return class_37;
        }()),
        _13.$struct = true,
        _13.$infoAddress = '',
        _13._Variant = (_14 = /** @class */ (function () {
                function class_38() {
                }
                class_38._native = function () { return Object.assign(new MIO_Mixin_Set.Iterator._Variant(), __assign({ rawValue: "_native" }, Array.from(arguments).slice(1))); };
                class_38.cocoa = function () { return Object.assign(new MIO_Mixin_Set.Iterator._Variant(), __assign({ rawValue: "cocoa" }, Array.from(arguments).slice(1))); };
                class_38.prototype.init$vars = function () {
                };
                return class_38;
            }()),
            _14.$infoAddress = '',
            _14),
        _13);
    MIO_Mixin_Set._Variant = (_15 = /** @class */ (function () {
            function class_39() {
            }
            /*Swift.(file).Set._Variant.object*/
            class_39.prototype.object$get = function () {
                throw 'unsupported variable Swift.(file).Set._Variant.object in ' + this.constructor.name;
            };
            Object.defineProperty(class_39.prototype, "object", {
                get: function () { return this.object$get(); },
                enumerable: true,
                configurable: true
            });
            ;
            /*Swift.(file).Set._Variant.init(dummy:())*/
            /*Swift.(file).Set._Variant.init(dummy:())*/
            class_39.prototype.initDummytuple_type = function ($info, dummy) {
                throw 'unsupported method Swift.(file).Set._Variant.init(dummy:()) in ' + this.constructor.name;
            };
            /*Swift.(file).Set._Variant.init(native:_NativeSet<Element>)*/
            /*Swift.(file).Set._Variant.init(native:_NativeSet<Element>)*/
            class_39.prototype.initNative_NativeSet = function ($info, _native) {
                throw 'unsupported method Swift.(file).Set._Variant.init(native:_NativeSet<Element>) in ' + this.constructor.name;
            };
            /*Swift.(file).Set._Variant.init(cocoa:_CocoaSet)*/
            /*Swift.(file).Set._Variant.init(cocoa:_CocoaSet)*/
            class_39.prototype.initCocoa_CocoaSet = function ($info, cocoa) {
                throw 'unsupported method Swift.(file).Set._Variant.init(cocoa:_CocoaSet) in ' + this.constructor.name;
            };
            /*Swift.(file).Set._Variant.guaranteedNative*/
            class_39.prototype.guaranteedNative$get = function () {
                throw 'unsupported variable Swift.(file).Set._Variant.guaranteedNative in ' + this.constructor.name;
            };
            Object.defineProperty(class_39.prototype, "guaranteedNative", {
                get: function () { return this.guaranteedNative$get(); },
                enumerable: true,
                configurable: true
            });
            ;
            /*Swift.(file).Set._Variant.isUniquelyReferenced()*/
            /*Swift.(file).Set._Variant.isUniquelyReferenced()*/
            class_39.prototype.isUniquelyReferenced = function ($info) {
                throw 'unsupported method Swift.(file).Set._Variant.isUniquelyReferenced() in ' + this.constructor.name;
            };
            /*Swift.(file).Set._Variant.isNative*/
            class_39.prototype.isNative$get = function () {
                throw 'unsupported variable Swift.(file).Set._Variant.isNative in ' + this.constructor.name;
            };
            Object.defineProperty(class_39.prototype, "isNative", {
                get: function () { return this.isNative$get(); },
                enumerable: true,
                configurable: true
            });
            ;
            /*Swift.(file).Set._Variant.asNative*/
            class_39.prototype.asNative$get = function () {
                throw 'unsupported variable Swift.(file).Set._Variant.asNative in ' + this.constructor.name;
            };
            Object.defineProperty(class_39.prototype, "asNative", {
                get: function () { return this.asNative$get(); },
                enumerable: true,
                configurable: true
            });
            ;
            /*Swift.(file).Set._Variant.asCocoa*/
            class_39.prototype.asCocoa$get = function () {
                throw 'unsupported variable Swift.(file).Set._Variant.asCocoa in ' + this.constructor.name;
            };
            Object.defineProperty(class_39.prototype, "asCocoa", {
                get: function () { return this.asCocoa$get(); },
                enumerable: true,
                configurable: true
            });
            ;
            /*Swift.(file).Set._Variant.reserveCapacity(_:Int)*/
            /*Swift.(file).Set._Variant.reserveCapacity(_:Int)*/
            class_39.prototype.reserveCapacity = function ($info, capacity) {
                throw 'unsupported method Swift.(file).Set._Variant.reserveCapacity(_:Int) in ' + this.constructor.name;
            };
            /*Swift.(file).Set._Variant.capacity*/
            class_39.prototype.capacity$get = function () {
                throw 'unsupported variable Swift.(file).Set._Variant.capacity in ' + this.constructor.name;
            };
            Object.defineProperty(class_39.prototype, "capacity", {
                get: function () { return this.capacity$get(); },
                enumerable: true,
                configurable: true
            });
            ;
            /*Swift.(file).Set._Variant.startIndex*/
            class_39.prototype.startIndex$get = function () {
                throw 'unsupported variable Swift.(file).Set._Variant.startIndex in ' + this.constructor.name;
            };
            Object.defineProperty(class_39.prototype, "startIndex", {
                get: function () { return this.startIndex$get(); },
                enumerable: true,
                configurable: true
            });
            ;
            /*Swift.(file).Set._Variant.endIndex*/
            class_39.prototype.endIndex$get = function () {
                throw 'unsupported variable Swift.(file).Set._Variant.endIndex in ' + this.constructor.name;
            };
            Object.defineProperty(class_39.prototype, "endIndex", {
                get: function () { return this.endIndex$get(); },
                enumerable: true,
                configurable: true
            });
            ;
            /*Swift.(file).Set._Variant.index(after:Set<Element>._Variant.Index)*/
            /*Swift.(file)._SetBuffer.index(after:Self.Index)*/
            class_39.prototype.indexAfter = function ($info, index) {
                throw 'unsupported method Swift.(file).Set._Variant.index(after:Set<Element>._Variant.Index) in ' + this.constructor.name;
            };
            /*Swift.(file).Set._Variant.formIndex(after:Set<Element>._Variant.Index)*/
            /*Swift.(file).Set._Variant.formIndex(after:Set<Element>._Variant.Index)*/
            class_39.prototype.formIndexAfter = function ($info, index$inout) {
                throw 'unsupported method Swift.(file).Set._Variant.formIndex(after:Set<Element>._Variant.Index) in ' + this.constructor.name;
            };
            /*Swift.(file).Set._Variant.index(for:Element)*/
            /*Swift.(file)._SetBuffer.index(for:Self.Element)*/
            class_39.prototype.indexFor = function ($info, _element) {
                throw 'unsupported method Swift.(file).Set._Variant.index(for:Element) in ' + this.constructor.name;
            };
            /*Swift.(file).Set._Variant.count*/
            class_39.prototype.count$get = function () {
                throw 'unsupported variable Swift.(file).Set._Variant.count in ' + this.constructor.name;
            };
            Object.defineProperty(class_39.prototype, "count", {
                get: function () { return this.count$get(); },
                enumerable: true,
                configurable: true
            });
            ;
            /*Swift.(file).Set._Variant.contains(_:Element)*/
            /*Swift.(file)._SetBuffer.contains(_:Self.Element)*/
            class_39.prototype.contains = function ($info, member) {
                throw 'unsupported method Swift.(file).Set._Variant.contains(_:Element) in ' + this.constructor.name;
            };
            /*Swift.(file).Set._Variant.element(at:Set<Element>._Variant.Index)*/
            /*Swift.(file)._SetBuffer.element(at:Self.Index)*/
            class_39.prototype.elementAt = function ($info, index) {
                throw 'unsupported method Swift.(file).Set._Variant.element(at:Set<Element>._Variant.Index) in ' + this.constructor.name;
            };
            /*Swift.(file).Set._Variant.update(with:Element)*/
            /*Swift.(file).Set._Variant.update(with:Element)*/
            class_39.prototype.updateWith = function ($info, value) {
                throw 'unsupported method Swift.(file).Set._Variant.update(with:Element) in ' + this.constructor.name;
            };
            /*Swift.(file).Set._Variant.insert(_:Element)*/
            /*Swift.(file).Set._Variant.insert(_:Element)*/
            class_39.prototype.insert = function ($info, _element) {
                throw 'unsupported method Swift.(file).Set._Variant.insert(_:Element) in ' + this.constructor.name;
            };
            /*Swift.(file).Set._Variant.remove(at:Set<Element>._Variant.Index)*/
            /*Swift.(file).Set._Variant.remove(at:Set<Element>._Variant.Index)*/
            class_39.prototype.removeAt = function ($info, index) {
                throw 'unsupported method Swift.(file).Set._Variant.remove(at:Set<Element>._Variant.Index) in ' + this.constructor.name;
            };
            /*Swift.(file).Set._Variant.remove(_:Element)*/
            /*Swift.(file).Set._Variant.remove(_:Element)*/
            class_39.prototype.remove = function ($info, member) {
                throw 'unsupported method Swift.(file).Set._Variant.remove(_:Element) in ' + this.constructor.name;
            };
            /*Swift.(file).Set._Variant.removeAll(keepingCapacity:Bool)*/
            /*Swift.(file).Set._Variant.removeAll(keepingCapacity:Bool)*/
            class_39.prototype.removeAllKeepingCapacity = function ($info, keepCapacity) {
                throw 'unsupported method Swift.(file).Set._Variant.removeAll(keepingCapacity:Bool) in ' + this.constructor.name;
            };
            /*Swift.(file).Set._Variant.makeIterator()*/
            /*Swift.(file).Set._Variant.makeIterator()*/
            class_39.prototype.makeIterator = function ($info) {
                throw 'unsupported method Swift.(file).Set._Variant.makeIterator() in ' + this.constructor.name;
            };
            class_39.prototype.init$vars = function () {
            };
            return class_39;
        }()),
        _15.$struct = true,
        _15.$infoAddress = '',
        _15);
    return MIO_Mixin_Set;
}());
_mixin(MIO_Mixin_Set.Index._Variant, _DefaultEnumImplementation, false);
if (typeof Equatable$implementation != 'undefined')
    _mixin(MIO_Mixin_Set.Index, Equatable$implementation, false);
if (typeof Comparable$implementation != 'undefined')
    _mixin(MIO_Mixin_Set.Index, Comparable$implementation, false);
if (typeof Hashable$implementation != 'undefined')
    _mixin(MIO_Mixin_Set.Index, Hashable$implementation, false);
_mixin(MIO_Mixin_Set.Iterator._Variant, _DefaultEnumImplementation, false);
if (typeof IteratorProtocol$implementation != 'undefined')
    _mixin(MIO_Mixin_Set.Iterator, IteratorProtocol$implementation, false);
if (typeof CustomReflectable$implementation != 'undefined')
    _mixin(MIO_Mixin_Set.Iterator, CustomReflectable$implementation, false);
if (typeof _SetBuffer$implementation != 'undefined')
    _mixin(MIO_Mixin_Set._Variant, _SetBuffer$implementation, false);
if (typeof Encodable$implementation != 'undefined')
    _mixin(MIO_Mixin_Set, Encodable$implementation, false);
if (typeof Decodable$implementation != 'undefined')
    _mixin(MIO_Mixin_Set, Decodable$implementation, false);
if (typeof ExpressibleByArrayLiteral$implementation != 'undefined')
    _mixin(MIO_Mixin_Set, ExpressibleByArrayLiteral$implementation, false);
if (typeof Sequence$implementation != 'undefined')
    _mixin(MIO_Mixin_Set, Sequence$implementation, false);
if (typeof Collection$implementation != 'undefined')
    _mixin(MIO_Mixin_Set, Collection$implementation, false);
if (typeof Equatable$implementation != 'undefined')
    _mixin(MIO_Mixin_Set, Equatable$implementation, false);
if (typeof Hashable$implementation != 'undefined')
    _mixin(MIO_Mixin_Set, Hashable$implementation, false);
if (typeof _HasCustomAnyHashableRepresentation$implementation != 'undefined')
    _mixin(MIO_Mixin_Set, _HasCustomAnyHashableRepresentation$implementation, false);
if (typeof SetAlgebra$implementation != 'undefined')
    _mixin(MIO_Mixin_Set, SetAlgebra$implementation, false);
if (typeof CustomStringConvertible$implementation != 'undefined')
    _mixin(MIO_Mixin_Set, CustomStringConvertible$implementation, false);
if (typeof CustomDebugStringConvertible$implementation != 'undefined')
    _mixin(MIO_Mixin_Set, CustomDebugStringConvertible$implementation, false);
if (typeof CustomReflectable$implementation != 'undefined')
    _mixin(MIO_Mixin_Set, CustomReflectable$implementation, false);
_mixin(Set, MIO_Mixin_Set, true);
var _SwiftSetNSEnumerator = /** @class */ (function (_super) {
    __extends(_SwiftSetNSEnumerator, _super);
    function _SwiftSetNSEnumerator() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    /*Swift.(file)._SwiftSetNSEnumerator.base*/
    _SwiftSetNSEnumerator.prototype.base$get = function () {
        throw 'unsupported variable Swift.(file)._SwiftSetNSEnumerator.base in ' + this.constructor.name;
    };
    Object.defineProperty(_SwiftSetNSEnumerator.prototype, "base", {
        get: function () { return this.base$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file)._SwiftSetNSEnumerator.bridgedElements*/
    _SwiftSetNSEnumerator.prototype.bridgedElements$get = function () {
        throw 'unsupported variable Swift.(file)._SwiftSetNSEnumerator.bridgedElements in ' + this.constructor.name;
    };
    Object.defineProperty(_SwiftSetNSEnumerator.prototype, "bridgedElements", {
        get: function () { return this.bridgedElements$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file)._SwiftSetNSEnumerator.nextBucket*/
    _SwiftSetNSEnumerator.prototype.nextBucket$get = function () {
        throw 'unsupported variable Swift.(file)._SwiftSetNSEnumerator.nextBucket in ' + this.constructor.name;
    };
    Object.defineProperty(_SwiftSetNSEnumerator.prototype, "nextBucket", {
        get: function () { return this.nextBucket$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file)._SwiftSetNSEnumerator.endBucket*/
    _SwiftSetNSEnumerator.prototype.endBucket$get = function () {
        throw 'unsupported variable Swift.(file)._SwiftSetNSEnumerator.endBucket in ' + this.constructor.name;
    };
    Object.defineProperty(_SwiftSetNSEnumerator.prototype, "endBucket", {
        get: function () { return this.endBucket$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file)._SwiftSetNSEnumerator.init()*/
    /*Swift.(file).__SwiftNativeNSEnumerator.init()*/
    _SwiftSetNSEnumerator.prototype.init = function ($info) {
        throw 'unsupported method Swift.(file)._SwiftSetNSEnumerator.init() in ' + this.constructor.name;
    };
    /*Swift.(file)._SwiftSetNSEnumerator.init(_:_NativeSet<Element>)*/
    /*Swift.(file)._SwiftSetNSEnumerator.init(_:_NativeSet<Element>)*/
    _SwiftSetNSEnumerator.prototype.init_NativeSet = function ($info, base) {
        throw 'unsupported method Swift.(file)._SwiftSetNSEnumerator.init(_:_NativeSet<Element>) in ' + this.constructor.name;
    };
    /*Swift.(file)._SwiftSetNSEnumerator.init(_:_SwiftDeferredNSSet<Element>)*/
    /*Swift.(file)._SwiftSetNSEnumerator.init(_:_SwiftDeferredNSSet<Element>)*/
    _SwiftSetNSEnumerator.prototype.init_SwiftDeferredNSSet = function ($info, deferred) {
        throw 'unsupported method Swift.(file)._SwiftSetNSEnumerator.init(_:_SwiftDeferredNSSet<Element>) in ' + this.constructor.name;
    };
    /*Swift.(file)._SwiftSetNSEnumerator.bridgedElement(at:_HashTable.Bucket)*/
    /*Swift.(file)._SwiftSetNSEnumerator.bridgedElement(at:_HashTable.Bucket)*/
    _SwiftSetNSEnumerator.prototype.bridgedElementAt = function ($info, bucket) {
        throw 'unsupported method Swift.(file)._SwiftSetNSEnumerator.bridgedElement(at:_HashTable.Bucket) in ' + this.constructor.name;
    };
    /*Swift.(file)._SwiftSetNSEnumerator.nextObject()*/
    /*Swift.(file)._NSEnumerator.nextObject()*/
    _SwiftSetNSEnumerator.prototype.nextObject = function ($info) {
        throw 'unsupported method Swift.(file)._SwiftSetNSEnumerator.nextObject() in ' + this.constructor.name;
    };
    /*Swift.(file)._SwiftSetNSEnumerator.countByEnumerating(with:UnsafeMutablePointer<_SwiftNSFastEnumerationState>,objects:UnsafeMutablePointer<AnyObject>,count:Int)*/
    /*Swift.(file)._SwiftSetNSEnumerator.countByEnumerating(with:UnsafeMutablePointer<_SwiftNSFastEnumerationState>,objects:UnsafeMutablePointer<AnyObject>,count:Int)*/
    _SwiftSetNSEnumerator.prototype.countByEnumeratingWithObjectsCount = function ($info, state, objects, count) {
        throw 'unsupported method Swift.(file)._SwiftSetNSEnumerator.countByEnumerating(with:UnsafeMutablePointer<_SwiftNSFastEnumerationState>,objects:UnsafeMutablePointer<AnyObject>,count:Int) in ' + this.constructor.name;
    };
    _SwiftSetNSEnumerator.prototype.init$vars = function () {
        if (_super.prototype.init$vars)
            _super.prototype.init$vars.call(this);
    };
    _SwiftSetNSEnumerator.$infoAddress = '';
    return _SwiftSetNSEnumerator;
}(__SwiftNativeNSEnumerator));
if (typeof _NSEnumerator$implementation != 'undefined')
    _mixin(_SwiftSetNSEnumerator, _NSEnumerator$implementation, false);
var _SwiftDeferredNSSet = /** @class */ (function (_super) {
    __extends(_SwiftDeferredNSSet, _super);
    function _SwiftDeferredNSSet() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    /*Swift.(file)._SwiftDeferredNSSet.init(_:_NativeSet<Element>)*/
    /*Swift.(file)._SwiftDeferredNSSet.init(_:_NativeSet<Element>)*/
    _SwiftDeferredNSSet.prototype.init_NativeSet = function ($info, _native) {
        throw 'unsupported method Swift.(file)._SwiftDeferredNSSet.init(_:_NativeSet<Element>) in ' + this.constructor.name;
    };
    /*Swift.(file)._SwiftDeferredNSSet.bridgeElements()*/
    /*Swift.(file)._SwiftDeferredNSSet.bridgeElements()*/
    _SwiftDeferredNSSet.prototype.bridgeElements = function ($info) {
        throw 'unsupported method Swift.(file)._SwiftDeferredNSSet.bridgeElements() in ' + this.constructor.name;
    };
    /*Swift.(file)._SwiftDeferredNSSet.init(objects:UnsafePointer<AnyObject?>,count:Int)*/
    /*Swift.(file)._NSSetCore.init(objects:UnsafePointer<AnyObject?>,count:Int)*/
    _SwiftDeferredNSSet.prototype.initObjectsUnsafePointerCountInt = function ($info, objects, count) {
        throw 'unsupported method Swift.(file)._SwiftDeferredNSSet.init(objects:UnsafePointer<AnyObject?>,count:Int) in ' + this.constructor.name;
    };
    /*Swift.(file)._SwiftDeferredNSSet.copy(with:_SwiftNSZone?)*/
    /*Swift.(file)._NSSetCore.copy(with:_SwiftNSZone?)*/
    /*Swift.(file)._NSCopying.copy(with:_SwiftNSZone?)*/
    _SwiftDeferredNSSet.prototype.copyWith = function ($info, zone) {
        throw 'unsupported method Swift.(file)._SwiftDeferredNSSet.copy(with:_SwiftNSZone?) in ' + this.constructor.name;
    };
    /*Swift.(file)._SwiftDeferredNSSet.member(_:AnyObject)*/
    /*Swift.(file)._NSSetCore.member(_:AnyObject)*/
    _SwiftDeferredNSSet.prototype.member = function ($info, object) {
        throw 'unsupported method Swift.(file)._SwiftDeferredNSSet.member(_:AnyObject) in ' + this.constructor.name;
    };
    /*Swift.(file)._SwiftDeferredNSSet.objectEnumerator()*/
    /*Swift.(file)._NSSetCore.objectEnumerator()*/
    _SwiftDeferredNSSet.prototype.objectEnumerator = function ($info) {
        throw 'unsupported method Swift.(file)._SwiftDeferredNSSet.objectEnumerator() in ' + this.constructor.name;
    };
    /*Swift.(file)._SwiftDeferredNSSet.count*/
    _SwiftDeferredNSSet.prototype.count$get = function () {
        throw 'unsupported variable Swift.(file)._SwiftDeferredNSSet.count in ' + this.constructor.name;
    };
    Object.defineProperty(_SwiftDeferredNSSet.prototype, "count", {
        get: function () { return this.count$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file)._SwiftDeferredNSSet.countByEnumerating(with:UnsafeMutablePointer<_SwiftNSFastEnumerationState>,objects:UnsafeMutablePointer<AnyObject>?,count:Int)*/
    /*Swift.(file)._NSSetCore.countByEnumerating(with:UnsafeMutablePointer<_SwiftNSFastEnumerationState>,objects:UnsafeMutablePointer<AnyObject>?,count:Int)*/
    /*Swift.(file)._NSFastEnumeration.countByEnumerating(with:UnsafeMutablePointer<_SwiftNSFastEnumerationState>,objects:UnsafeMutablePointer<AnyObject>?,count:Int)*/
    _SwiftDeferredNSSet.prototype.countByEnumeratingWithObjectsCount = function ($info, state, objects, count) {
        throw 'unsupported method Swift.(file)._SwiftDeferredNSSet.countByEnumerating(with:UnsafeMutablePointer<_SwiftNSFastEnumerationState>,objects:UnsafeMutablePointer<AnyObject>?,count:Int) in ' + this.constructor.name;
    };
    /*Swift.(file)._SwiftDeferredNSSet.init()*/
    /*Swift.(file).__SwiftNativeNSSet.init()*/
    _SwiftDeferredNSSet.prototype.init = function ($info) {
        throw 'unsupported method Swift.(file)._SwiftDeferredNSSet.init() in ' + this.constructor.name;
    };
    _SwiftDeferredNSSet.prototype.init$vars = function () {
        if (_super.prototype.init$vars)
            _super.prototype.init$vars.call(this);
    };
    _SwiftDeferredNSSet.$infoAddress = '';
    return _SwiftDeferredNSSet;
}(__SwiftNativeNSSet));
if (typeof _NSSetCore$implementation != 'undefined')
    _mixin(_SwiftDeferredNSSet, _NSSetCore$implementation, false);
var _CocoaSet = /** @class */ (function () {
    function _CocoaSet() {
    }
    /*Swift.(file)._CocoaSet.object*/
    _CocoaSet.prototype.object$get = function () {
        throw 'unsupported variable Swift.(file)._CocoaSet.object in ' + this.constructor.name;
    };
    Object.defineProperty(_CocoaSet.prototype, "object", {
        get: function () { return this.object$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file)._CocoaSet.init(_:AnyObject)*/
    /*Swift.(file)._CocoaSet.init(_:AnyObject)*/
    _CocoaSet.prototype.initAnyObject = function ($info, object) {
        throw 'unsupported method Swift.(file)._CocoaSet.init(_:AnyObject) in ' + this.constructor.name;
    };
    /*Swift.(file)._CocoaSet.member(for:_CocoaSet.Index)*/
    /*Swift.(file)._CocoaSet.member(for:_CocoaSet.Index)*/
    _CocoaSet.prototype.memberFor = function ($info, index) {
        var _this = this;
        return index._element;
    };
    /*Swift.(file)._CocoaSet.member(for:AnyObject)*/
    /*Swift.(file)._CocoaSet.member(for:AnyObject)*/
    _CocoaSet.prototype.memberFor = function ($info, _element) {
        var _this = this;
        var nss = _cloneStruct(unsafeBitCastTo({}, _this.object, _NSSet));
        return nss.member({}, _element);
    };
    /*Swift.(file)._CocoaSet.isEqual(to:_CocoaSet)*/
    /*Swift.(file)._CocoaSet.isEqual(to:_CocoaSet)*/
    _CocoaSet.prototype.isEqualTo = function ($info, other) {
        var _this = this;
        return _stdlib_NSObject_isEqual({}, _this.object, other.object);
    };
    /*Swift.(file)._CocoaSet.startIndex*/
    _CocoaSet.prototype.startIndex$get = function () {
        var _this = this;
        var allKeys = _cloneStruct(_stdlib_NSSet_allObjects({}, _this.object));
        return _create(_CocoaSet.Index, 'init_CocoaSetIndexStorageOffsetInt', {}, _create(_CocoaSet.Index.Storage, 'init_CocoaSet_BridgingBuffer', {}, _this, allKeys), 0);
    };
    Object.defineProperty(_CocoaSet.prototype, "startIndex", {
        get: function () { return this.startIndex$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file)._CocoaSet.endIndex*/
    _CocoaSet.prototype.endIndex$get = function () {
        var _this = this;
        var allKeys = _cloneStruct(_stdlib_NSSet_allObjects({}, _this.object));
        return _create(_CocoaSet.Index, 'init_CocoaSetIndexStorageOffsetInt', {}, _create(_CocoaSet.Index.Storage, 'init_CocoaSet_BridgingBuffer', {}, _this, allKeys), allKeys.count);
    };
    Object.defineProperty(_CocoaSet.prototype, "endIndex", {
        get: function () { return this.endIndex$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file)._CocoaSet.index(after:_CocoaSet.Index)*/
    /*Swift.(file)._SetBuffer.index(after:Self.Index)*/
    _CocoaSet.prototype.indexAfter = function ($info, index) {
        var _this = this;
        _this.validate({}, index);
        var result = _cloneStruct(index);
        Int.infix_43_61({}, { get: function () { return result._offset; }, set: function ($val) { return result._offset = $val; } }, 1);
        return result;
    };
    /*Swift.(file)._CocoaSet.validate(_:_CocoaSet.Index)*/
    /*Swift.(file)._CocoaSet.validate(_:_CocoaSet.Index)*/
    _CocoaSet.prototype.validate = function ($info, index) {
        var _this = this;
        preconditionFileLine({}, function () { return infix_61_61_61({}, index.storage.base.object, _this.object); }, function () { return "Invalid index"; }, '?3', '?3');
        preconditionFileLine({}, function () { return Int.infix_60({}, index._offset, index.storage.allKeys.count); }, function () { return "Attempt to access endIndex"; }, '?3', '?3');
    };
    /*Swift.(file)._CocoaSet.formIndex(after:_CocoaSet.Index,isUnique:Bool)*/
    /*Swift.(file)._CocoaSet.formIndex(after:_CocoaSet.Index,isUnique:Bool)*/
    _CocoaSet.prototype.formIndexAfterIsUnique = function ($info, index$inout, isUnique) {
        var _this = this;
        var index = index$inout.get();
        var $result = (function () {
            _this.validate({}, index);
            Int.infix_43_61({}, { get: function () { return index._offset; }, set: function ($val) { return index._offset = $val; } }, 1);
        })();
        index$inout.set(index);
        return $result;
    };
    /*Swift.(file)._CocoaSet.index(for:AnyObject)*/
    /*Swift.(file)._SetBuffer.index(for:Self.Element)*/
    _CocoaSet.prototype.indexFor = function ($info, _element) {
        throw 'unsupported method Swift.(file)._CocoaSet.index(for:AnyObject) in ' + this.constructor.name;
    };
    /*Swift.(file)._CocoaSet.count*/
    _CocoaSet.prototype.count$get = function () {
        var _this = this;
        var nss = _cloneStruct(unsafeBitCastTo({}, _this.object, _NSSet));
        return nss.count;
    };
    Object.defineProperty(_CocoaSet.prototype, "count", {
        get: function () { return this.count$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file)._CocoaSet.contains(_:AnyObject)*/
    /*Swift.(file)._SetBuffer.contains(_:Self.Element)*/
    _CocoaSet.prototype.contains = function ($info, _element) {
        var _this = this;
        var nss = _cloneStruct(unsafeBitCastTo({}, _this.object, _NSSet));
        return Optional.wrappedNotEqualsOptionalNilComparisonType({}, nss.member({}, _element), null);
    };
    /*Swift.(file)._CocoaSet.element(at:_CocoaSet.Index)*/
    /*Swift.(file)._SetBuffer.element(at:Self.Index)*/
    _CocoaSet.prototype.elementAt = function ($info, i) {
        var _this = this;
        var _element = i._element;
        return _element;
    };
    /*Swift.(file)._CocoaSet.makeIterator()*/
    /*Swift.(file).Sequence.makeIterator()*/
    _CocoaSet.prototype.makeIterator = function ($info) {
        var _this = this;
        return _create(_CocoaSet.Iterator, 'init_CocoaSet', {}, _this);
    };
    _CocoaSet.prototype.init$vars = function () {
    };
    var _16, _17, _18;
    _CocoaSet.$struct = true;
    _CocoaSet.$infoAddress = '';
    _CocoaSet.Index = (_16 = /** @class */ (function () {
            function class_40() {
            }
            /*Swift.(file)._CocoaSet.Index.storage*/
            class_40.prototype.storage$get = function () {
                throw 'unsupported variable Swift.(file)._CocoaSet.Index.storage in ' + this.constructor.name;
            };
            Object.defineProperty(class_40.prototype, "storage", {
                get: function () { return this.storage$get(); },
                enumerable: true,
                configurable: true
            });
            ;
            /*Swift.(file)._CocoaSet.Index.init(_:_CocoaSet.Index.Storage,offset:Int)*/
            /*Swift.(file)._CocoaSet.Index.init(_:_CocoaSet.Index.Storage,offset:Int)*/
            class_40.prototype.init_CocoaSetIndexStorageOffsetInt = function ($info, storage, offset) {
                throw 'unsupported method Swift.(file)._CocoaSet.Index.init(_:_CocoaSet.Index.Storage,offset:Int) in ' + this.constructor.name;
            };
            /*Swift.(file)._CocoaSet.Index.handleBitPattern*/
            class_40.prototype.handleBitPattern$get = function () {
                var _this = this;
                return unsafeBitCastTo({}, _this.storage, UInt);
            };
            Object.defineProperty(class_40.prototype, "handleBitPattern", {
                get: function () { return this.handleBitPattern$get(); },
                enumerable: true,
                configurable: true
            });
            ;
            /*Swift.(file)._CocoaSet.Index.age*/
            class_40.prototype.age$get = function () {
                var _this = this;
                return _HashTable.ageFor({}, _this.storage.base.object);
            };
            Object.defineProperty(class_40.prototype, "age", {
                get: function () { return this.age$get(); },
                enumerable: true,
                configurable: true
            });
            ;
            /*Swift.(file)._CocoaSet.Index.==infix(_:_CocoaSet.Index,_:_CocoaSet.Index)*/
            /*Swift.(file).Equatable.==infix(_:Self,_:Self)*/
            class_40.infix_61_61 = function ($info, lhs, rhs) {
                var _this = this;
                preconditionFileLine({}, function () { return infix_61_61_61({}, lhs.storage.base.object, rhs.storage.base.object); }, function () { return "Comparing indexes from different sets"; }, '?3', '?3');
                return Int.infix_61_61({}, lhs._offset, rhs._offset);
            };
            /*Swift.(file)._CocoaSet.Index.<infix(_:_CocoaSet.Index,_:_CocoaSet.Index)*/
            /*Swift.(file).Comparable.<infix(_:Self,_:Self)*/
            class_40.infix_60 = function ($info, lhs, rhs) {
                var _this = this;
                preconditionFileLine({}, function () { return infix_61_61_61({}, lhs.storage.base.object, rhs.storage.base.object); }, function () { return "Comparing indexes from different sets"; }, '?3', '?3');
                return Int.infix_60({}, lhs._offset, rhs._offset);
            };
            class_40.prototype.init$vars = function () {
            };
            return class_40;
        }()),
        _16.$struct = true,
        _16.$infoAddress = '',
        _16.Storage = (_17 = /** @class */ (function () {
                function class_41() {
                }
                /*Swift.(file)._CocoaSet.Index.Storage.base*/
                class_41.prototype.base$get = function () {
                    throw 'unsupported variable Swift.(file)._CocoaSet.Index.Storage.base in ' + this.constructor.name;
                };
                Object.defineProperty(class_41.prototype, "base", {
                    get: function () { return this.base$get(); },
                    enumerable: true,
                    configurable: true
                });
                ;
                /*Swift.(file)._CocoaSet.Index.Storage.allKeys*/
                class_41.prototype.allKeys$get = function () {
                    throw 'unsupported variable Swift.(file)._CocoaSet.Index.Storage.allKeys in ' + this.constructor.name;
                };
                Object.defineProperty(class_41.prototype, "allKeys", {
                    get: function () { return this.allKeys$get(); },
                    enumerable: true,
                    configurable: true
                });
                ;
                /*Swift.(file)._CocoaSet.Index.Storage.init(_:_CocoaSet,_:_BridgingBuffer)*/
                /*Swift.(file)._CocoaSet.Index.Storage.init(_:_CocoaSet,_:_BridgingBuffer)*/
                class_41.prototype.init_CocoaSet_BridgingBuffer = function ($info, base, allKeys) {
                    throw 'unsupported method Swift.(file)._CocoaSet.Index.Storage.init(_:_CocoaSet,_:_BridgingBuffer) in ' + this.constructor.name;
                };
                class_41.prototype.init$vars = function () {
                };
                return class_41;
            }()),
            _17.$infoAddress = '',
            _17),
        _16);
    _CocoaSet.Iterator = (_18 = /** @class */ (function () {
            function class_42() {
            }
            /*Swift.(file)._CocoaSet.Iterator.base*/
            class_42.prototype.base$get = function () {
                throw 'unsupported variable Swift.(file)._CocoaSet.Iterator.base in ' + this.constructor.name;
            };
            Object.defineProperty(class_42.prototype, "base", {
                get: function () { return this.base$get(); },
                enumerable: true,
                configurable: true
            });
            ;
            /*Swift.(file)._CocoaSet.Iterator.itemIndex*/
            class_42.prototype.itemIndex$get = function () {
                throw 'unsupported variable Swift.(file)._CocoaSet.Iterator.itemIndex in ' + this.constructor.name;
            };
            Object.defineProperty(class_42.prototype, "itemIndex", {
                get: function () { return this.itemIndex$get(); },
                enumerable: true,
                configurable: true
            });
            ;
            /*Swift.(file)._CocoaSet.Iterator.itemCount*/
            class_42.prototype.itemCount$get = function () {
                throw 'unsupported variable Swift.(file)._CocoaSet.Iterator.itemCount in ' + this.constructor.name;
            };
            Object.defineProperty(class_42.prototype, "itemCount", {
                get: function () { return this.itemCount$get(); },
                enumerable: true,
                configurable: true
            });
            ;
            /*Swift.(file)._CocoaSet.Iterator.init(_:_CocoaSet)*/
            /*Swift.(file)._CocoaSet.Iterator.init(_:_CocoaSet)*/
            class_42.prototype.init_CocoaSet = function ($info, base) {
                throw 'unsupported method Swift.(file)._CocoaSet.Iterator.init(_:_CocoaSet) in ' + this.constructor.name;
            };
            /*Swift.(file)._CocoaSet.Iterator.next()*/
            /*Swift.(file).IteratorProtocol.next()*/
            class_42.prototype.next = function ($info) {
                var _this = this;
                if ((Int.infix_60({}, _this.itemIndex, 0))) {
                    return null;
                }
                ;
                var base = _cloneStruct(_this.base);
                if ((Int.infix_61_61({}, _this.itemIndex, _this.itemCount))) {
                    var stackBufCount = _this._fastEnumerationStackBuf.count;
                    _this.itemCount = /*dynamic_member_ref_expr*/ base.object({}, _this._fastEnumerationStatePtr, _create(UnsafeMutableRawPointer, 'initUnsafeMutablePointer', {}, _this._fastEnumerationStackBufPtr).assumingMemoryBoundTo({}, AnyObject), stackBufCount);
                    if ((Int.infix_61_61({}, _this.itemCount, 0))) {
                        _this.itemIndex = -1;
                        return null;
                    }
                    ;
                    _this.itemIndex = 0;
                }
                ;
                var itemsPtrUP = _cloneStruct(_create(UnsafeMutableRawPointer, 'initAutoreleasingUnsafeMutablePointer', {}, _this._fastEnumerationState.itemsPtr).assumingMemoryBoundTo({}, AnyObject));
                var itemsPtr = _create(_UnmanagedAnyObjectArray, 'initUnsafeMutablePointer', {}, itemsPtrUP);
                var key = _cloneStruct(itemsPtr.subscript$get({}, _this.itemIndex));
                Int.infix_43_61({}, { get: function () { return _this.itemIndex; }, set: function ($val) { return _this.itemIndex = $val; } }, 1);
                return key;
            };
            class_42.prototype.init$vars = function () {
            };
            return class_42;
        }()),
        _18.$infoAddress = '',
        _18);
    return _CocoaSet;
}());
if (typeof Equatable$implementation != 'undefined')
    _mixin(_CocoaSet.Index, Equatable$implementation, false);
if (typeof Comparable$implementation != 'undefined')
    _mixin(_CocoaSet.Index, Comparable$implementation, false);
if (typeof IteratorProtocol$implementation != 'undefined')
    _mixin(_CocoaSet.Iterator, IteratorProtocol$implementation, false);
if (typeof _SetBuffer$implementation != 'undefined')
    _mixin(_CocoaSet, _SetBuffer$implementation, false);
if (typeof Sequence$implementation != 'undefined')
    _mixin(_CocoaSet, Sequence$implementation, false);
var _EmptySetSingleton = /** @class */ (function (_super) {
    __extends(_EmptySetSingleton, _super);
    function _EmptySetSingleton() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    /*Swift.(file)._EmptySetSingleton.init(_doNotCallMe:())*/
    /*Swift.(file)._RawSetStorage.init(_doNotCallMe:())*/
    _EmptySetSingleton.prototype.init_doNotCallMetuple_type = function ($info, _doNotCallMe) {
        throw 'unsupported method Swift.(file)._EmptySetSingleton.init(_doNotCallMe:()) in ' + this.constructor.name;
    };
    /*Swift.(file)._EmptySetSingleton.init(objects:UnsafePointer<AnyObject?>,count:Int)*/
    /*Swift.(file)._NSSetCore.init(objects:UnsafePointer<AnyObject?>,count:Int)*/
    _EmptySetSingleton.prototype.initObjectsUnsafePointerCountInt = function ($info, objects, count) {
        throw 'unsupported method Swift.(file)._EmptySetSingleton.init(objects:UnsafePointer<AnyObject?>,count:Int) in ' + this.constructor.name;
    };
    /*Swift.(file)._EmptySetSingleton.copy(with:_SwiftNSZone?)*/
    /*Swift.(file)._NSSetCore.copy(with:_SwiftNSZone?)*/
    /*Swift.(file)._NSCopying.copy(with:_SwiftNSZone?)*/
    _EmptySetSingleton.prototype.copyWith = function ($info, zone) {
        throw 'unsupported method Swift.(file)._EmptySetSingleton.copy(with:_SwiftNSZone?) in ' + this.constructor.name;
    };
    /*Swift.(file)._EmptySetSingleton.count*/
    _EmptySetSingleton.prototype.count$get = function () {
        var _this = this;
        return 0;
    };
    Object.defineProperty(_EmptySetSingleton.prototype, "count", {
        get: function () { return this.count$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file)._EmptySetSingleton.member(_:AnyObject)*/
    /*Swift.(file)._NSSetCore.member(_:AnyObject)*/
    _EmptySetSingleton.prototype.member = function ($info, object) {
        var _this = this;
        return null;
    };
    /*Swift.(file)._EmptySetSingleton.objectEnumerator()*/
    /*Swift.(file)._NSSetCore.objectEnumerator()*/
    _EmptySetSingleton.prototype.objectEnumerator = function ($info) {
        var _this = this;
        return _create(_SwiftEmptyNSEnumerator, 'init', {});
    };
    /*Swift.(file)._EmptySetSingleton.countByEnumerating(with:UnsafeMutablePointer<_SwiftNSFastEnumerationState>,objects:UnsafeMutablePointer<AnyObject>?,count:Int)*/
    /*Swift.(file)._NSSetCore.countByEnumerating(with:UnsafeMutablePointer<_SwiftNSFastEnumerationState>,objects:UnsafeMutablePointer<AnyObject>?,count:Int)*/
    /*Swift.(file)._NSFastEnumeration.countByEnumerating(with:UnsafeMutablePointer<_SwiftNSFastEnumerationState>,objects:UnsafeMutablePointer<AnyObject>?,count:Int)*/
    _EmptySetSingleton.prototype.countByEnumeratingWithObjectsCount = function ($info, state, objects, count) {
        throw 'unsupported method Swift.(file)._EmptySetSingleton.countByEnumerating(with:UnsafeMutablePointer<_SwiftNSFastEnumerationState>,objects:UnsafeMutablePointer<AnyObject>?,count:Int) in ' + this.constructor.name;
    };
    _EmptySetSingleton.prototype.init$vars = function () {
        if (_super.prototype.init$vars)
            _super.prototype.init$vars.call(this);
    };
    _EmptySetSingleton.$infoAddress = '';
    return _EmptySetSingleton;
}(_RawSetStorage));
if (typeof _NSSetCore$implementation != 'undefined')
    _mixin(_EmptySetSingleton, _NSSetCore$implementation, false);
var _SetStorage = /** @class */ (function (_super) {
    __extends(_SetStorage, _super);
    function _SetStorage() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    /*Swift.(file)._SetStorage.init(_doNotCallMe:())*/
    /*Swift.(file)._RawSetStorage.init(_doNotCallMe:())*/
    _SetStorage.prototype.init_doNotCallMetuple_type = function ($info, _doNotCallMe) {
        throw 'unsupported method Swift.(file)._SetStorage.init(_doNotCallMe:()) in ' + this.constructor.name;
    };
    /*Swift.(file)._SetStorage.asNative*/
    _SetStorage.prototype.asNative$get = function () {
        throw 'unsupported variable Swift.(file)._SetStorage.asNative in ' + this.constructor.name;
    };
    Object.defineProperty(_SetStorage.prototype, "asNative", {
        get: function () { return this.asNative$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file)._SetStorage.init(objects:UnsafePointer<AnyObject?>,count:Int)*/
    /*Swift.(file)._NSSetCore.init(objects:UnsafePointer<AnyObject?>,count:Int)*/
    _SetStorage.prototype.initObjectsUnsafePointerCountInt = function ($info, objects, count) {
        throw 'unsupported method Swift.(file)._SetStorage.init(objects:UnsafePointer<AnyObject?>,count:Int) in ' + this.constructor.name;
    };
    /*Swift.(file)._SetStorage.copy(with:_SwiftNSZone?)*/
    /*Swift.(file)._NSSetCore.copy(with:_SwiftNSZone?)*/
    /*Swift.(file)._NSCopying.copy(with:_SwiftNSZone?)*/
    _SetStorage.prototype.copyWith = function ($info, zone) {
        throw 'unsupported method Swift.(file)._SetStorage.copy(with:_SwiftNSZone?) in ' + this.constructor.name;
    };
    /*Swift.(file)._SetStorage.count*/
    _SetStorage.prototype.count$get = function () {
        throw 'unsupported variable Swift.(file)._SetStorage.count in ' + this.constructor.name;
    };
    Object.defineProperty(_SetStorage.prototype, "count", {
        get: function () { return this.count$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file)._SetStorage.objectEnumerator()*/
    /*Swift.(file)._NSSetCore.objectEnumerator()*/
    _SetStorage.prototype.objectEnumerator = function ($info) {
        throw 'unsupported method Swift.(file)._SetStorage.objectEnumerator() in ' + this.constructor.name;
    };
    /*Swift.(file)._SetStorage.countByEnumerating(with:UnsafeMutablePointer<_SwiftNSFastEnumerationState>,objects:UnsafeMutablePointer<AnyObject>?,count:Int)*/
    /*Swift.(file)._NSSetCore.countByEnumerating(with:UnsafeMutablePointer<_SwiftNSFastEnumerationState>,objects:UnsafeMutablePointer<AnyObject>?,count:Int)*/
    /*Swift.(file)._NSFastEnumeration.countByEnumerating(with:UnsafeMutablePointer<_SwiftNSFastEnumerationState>,objects:UnsafeMutablePointer<AnyObject>?,count:Int)*/
    _SetStorage.prototype.countByEnumeratingWithObjectsCount = function ($info, state, objects, count) {
        throw 'unsupported method Swift.(file)._SetStorage.countByEnumerating(with:UnsafeMutablePointer<_SwiftNSFastEnumerationState>,objects:UnsafeMutablePointer<AnyObject>?,count:Int) in ' + this.constructor.name;
    };
    /*Swift.(file)._SetStorage.member(_:AnyObject)*/
    /*Swift.(file)._NSSetCore.member(_:AnyObject)*/
    _SetStorage.prototype.member = function ($info, object) {
        throw 'unsupported method Swift.(file)._SetStorage.member(_:AnyObject) in ' + this.constructor.name;
    };
    /*Swift.(file)._SetStorage.copy(original:_RawSetStorage)*/
    /*Swift.(file)._SetStorage.copy(original:_RawSetStorage)*/
    _SetStorage.copyOriginal = function ($info, original) {
        var _this = this;
        return _SetStorage.allocateScaleAgeSeed({}, original._scale, original._age, original._seed);
    };
    /*Swift.(file)._SetStorage.resize(original:_RawSetStorage,capacity:Int,move:Bool)*/
    /*Swift.(file)._SetStorage.resize(original:_RawSetStorage,capacity:Int,move:Bool)*/
    _SetStorage.resizeOriginalCapacityMove = function ($info, original, capacity, move) {
        var _this = this;
        var scale = _HashTable.scaleForCapacity({}, capacity);
        return _this.allocateScaleAgeSeed({}, scale, null, null);
    };
    /*Swift.(file)._SetStorage.allocate(capacity:Int)*/
    /*Swift.(file)._SetStorage.allocate(capacity:Int)*/
    _SetStorage.allocateCapacity = function ($info, capacity) {
        var _this = this;
        var scale = _HashTable.scaleForCapacity({}, capacity);
        return _this.allocateScaleAgeSeed({}, scale, null, null);
    };
    /*Swift.(file)._SetStorage.convert(_:_CocoaSet,capacity:Int)*/
    /*Swift.(file)._SetStorage.convert(_:_CocoaSet,capacity:Int)*/
    _SetStorage.convertCapacity = function ($info, cocoa, capacity) {
        throw 'unsupported method Swift.(file)._SetStorage.convert(_:_CocoaSet,capacity:Int) in ' + this.constructor.name;
    };
    /*Swift.(file)._SetStorage.allocate(scale:Int8,age:Int32?,seed:Int?)*/
    /*Swift.(file)._SetStorage.allocate(scale:Int8,age:Int32?,seed:Int?)*/
    _SetStorage.allocateScaleAgeSeed = function ($info, scale, age, seed) {
        throw 'unsupported method Swift.(file)._SetStorage.allocate(scale:Int8,age:Int32?,seed:Int?) in ' + this.constructor.name;
    };
    _SetStorage.prototype.init$vars = function () {
        if (_super.prototype.init$vars)
            _super.prototype.init$vars.call(this);
    };
    _SetStorage.$infoAddress = '';
    return _SetStorage;
}(_RawSetStorage));
if (typeof _NSSetCore$implementation != 'undefined')
    _mixin(_SetStorage, _NSSetCore$implementation, false);
var StaticString = /** @class */ (function () {
    function StaticString() {
    }
    /*Swift.(file).StaticString.utf8Start*/
    StaticString.prototype.utf8Start$get = function () {
        var _this = this;
        preconditionFileLine({}, function () { return _this.hasPointerRepresentation; }, function () { return "StaticString should have pointer representation"; }, '?3', '?3');
        return _create(UnsafePointer, 'initBitPatternUInt', {}, _create(UInt, 'initWord', {}, _this._startPtrOrData));
    };
    Object.defineProperty(StaticString.prototype, "utf8Start", {
        get: function () { return this.utf8Start$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).StaticString.unicodeScalar*/
    StaticString.prototype.unicodeScalar$get = function () {
        var _this = this;
        preconditionFileLine({}, function () { return Bool.prefix_33({}, _this.hasPointerRepresentation); }, function () { return "StaticString should have Unicode scalar representation"; }, '?3', '?3');
        return _create(Unicode.Scalar, 'initUInt32', {}, _create(UInt32, 'initT', {}, _create(UInt, 'initWord', {}, _this._startPtrOrData)));
    };
    Object.defineProperty(StaticString.prototype, "unicodeScalar", {
        get: function () { return this.unicodeScalar$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).StaticString.utf8CodeUnitCount*/
    StaticString.prototype.utf8CodeUnitCount$get = function () {
        var _this = this;
        preconditionFileLine({}, function () { return _this.hasPointerRepresentation; }, function () { return "StaticString should have pointer representation"; }, '?3', '?3');
        return _create(Int, 'initWord', {}, _this._utf8CodeUnitCount);
    };
    Object.defineProperty(StaticString.prototype, "utf8CodeUnitCount", {
        get: function () { return this.utf8CodeUnitCount$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).StaticString.hasPointerRepresentation*/
    StaticString.prototype.hasPointerRepresentation$get = function () {
        var _this = this;
        return UInt8.infix_61_61({}, UInt8.infix_38({}, _create(UInt8, 'initInt8', {}, _this._flags), 0x1), 0);
    };
    Object.defineProperty(StaticString.prototype, "hasPointerRepresentation", {
        get: function () { return this.hasPointerRepresentation$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).StaticString.isASCII*/
    StaticString.prototype.isASCII$get = function () {
        var _this = this;
        return UInt8.infix_33_61({}, UInt8.infix_38({}, _create(UInt8, 'initInt8', {}, _this._flags), 0x2), 0);
    };
    Object.defineProperty(StaticString.prototype, "isASCII", {
        get: function () { return this.isASCII$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).StaticString.withUTF8Buffer(_:(UnsafeBufferPointer<UInt8>) -> R)*/
    /*Swift.(file).StaticString.withUTF8Buffer(_:(UnsafeBufferPointer<UInt8>) -> R)*/
    StaticString.prototype.withUTF8Buffer = function ($info, body) {
        throw 'unsupported method Swift.(file).StaticString.withUTF8Buffer(_:(UnsafeBufferPointer<UInt8>) -> R) in ' + this.constructor.name;
    };
    /*Swift.(file).StaticString.init()*/
    /*Swift.(file).StaticString.init()*/
    StaticString.prototype.init = function ($info) {
        var _this = this;
        $info.$setThis(_this = _cloneStruct(_cloneStruct("")));
        return;
    };
    /*Swift.(file).StaticString.init(_start:RawPointer,utf8CodeUnitCount:Word,isASCII:Int1)*/
    /*Swift.(file).StaticString.init(_start:RawPointer,utf8CodeUnitCount:Word,isASCII:Int1)*/
    StaticString.prototype.init_startRawPointerUtf8CodeUnitCountWordIsASCIIInt1 = function ($info, _start, utf8CodeUnitCount, isASCII) {
        throw 'unsupported method Swift.(file).StaticString.init(_start:RawPointer,utf8CodeUnitCount:Word,isASCII:Int1) in ' + this.constructor.name;
    };
    /*Swift.(file).StaticString.init(unicodeScalar:Int32)*/
    /*Swift.(file).StaticString.init(unicodeScalar:Int32)*/
    StaticString.prototype.initUnicodeScalarInt32 = function ($info, unicodeScalar) {
        throw 'unsupported method Swift.(file).StaticString.init(unicodeScalar:Int32) in ' + this.constructor.name;
    };
    /*Swift.(file).StaticString.init(_builtinUnicodeScalarLiteral:Int32)*/
    /*Swift.(file)._ExpressibleByBuiltinUnicodeScalarLiteral.init(_builtinUnicodeScalarLiteral:Int32)*/
    StaticString.prototype.init_builtinUnicodeScalarLiteralInt32 = function ($info, value) {
        throw 'unsupported method Swift.(file).StaticString.init(_builtinUnicodeScalarLiteral:Int32) in ' + this.constructor.name;
    };
    /*Swift.(file).StaticString.init(unicodeScalarLiteral:StaticString)*/
    /*Swift.(file).ExpressibleByUnicodeScalarLiteral.init(unicodeScalarLiteral:Self.UnicodeScalarLiteralType)*/
    StaticString.prototype.initUnicodeScalarLiteral = function ($info, value) {
        var _this = this;
        $info.$setThis(_this = _cloneStruct(_cloneStruct(value)));
        return;
    };
    /*Swift.(file).StaticString.init(_builtinExtendedGraphemeClusterLiteral:RawPointer,utf8CodeUnitCount:Word,isASCII:Int1)*/
    /*Swift.(file)._ExpressibleByBuiltinExtendedGraphemeClusterLiteral.init(_builtinExtendedGraphemeClusterLiteral:RawPointer,utf8CodeUnitCount:Word,isASCII:Int1)*/
    StaticString.prototype.init_builtinExtendedGraphemeClusterLiteralRawPointerUtf8CodeUnitCountWordIsASCIIInt1 = function ($info, start, utf8CodeUnitCount, isASCII) {
        throw 'unsupported method Swift.(file).StaticString.init(_builtinExtendedGraphemeClusterLiteral:RawPointer,utf8CodeUnitCount:Word,isASCII:Int1) in ' + this.constructor.name;
    };
    /*Swift.(file).StaticString.init(extendedGraphemeClusterLiteral:StaticString)*/
    /*Swift.(file).ExpressibleByExtendedGraphemeClusterLiteral.init(extendedGraphemeClusterLiteral:Self.ExtendedGraphemeClusterLiteralType)*/
    StaticString.prototype.initExtendedGraphemeClusterLiteral = function ($info, value) {
        var _this = this;
        $info.$setThis(_this = _cloneStruct(_cloneStruct(value)));
        return;
    };
    /*Swift.(file).StaticString.init(_builtinStringLiteral:RawPointer,utf8CodeUnitCount:Word,isASCII:Int1)*/
    /*Swift.(file)._ExpressibleByBuiltinStringLiteral.init(_builtinStringLiteral:RawPointer,utf8CodeUnitCount:Word,isASCII:Int1)*/
    StaticString.prototype.init_builtinStringLiteralRawPointerUtf8CodeUnitCountWordIsASCIIInt1 = function ($info, start, utf8CodeUnitCount, isASCII) {
        throw 'unsupported method Swift.(file).StaticString.init(_builtinStringLiteral:RawPointer,utf8CodeUnitCount:Word,isASCII:Int1) in ' + this.constructor.name;
    };
    /*Swift.(file).StaticString.init(stringLiteral:StaticString)*/
    /*Swift.(file).ExpressibleByStringLiteral.init(stringLiteral:Self.StringLiteralType)*/
    StaticString.prototype.initStringLiteral = function ($info, value) {
        var _this = this;
        $info.$setThis(_this = _cloneStruct(_cloneStruct(value)));
        return;
    };
    /*Swift.(file).StaticString.description*/
    StaticString.prototype.description$get = function () {
        var _this = this;
        return _this.withUTF8Buffer({}, (function ($info, $0) { return String._uncheckedFromUTF8({}, $0); }));
    };
    Object.defineProperty(StaticString.prototype, "description", {
        get: function () { return this.description$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).StaticString.debugDescription*/
    StaticString.prototype.debugDescription$get = function () {
        var _this = this;
        return _this.description.debugDescription;
    };
    Object.defineProperty(StaticString.prototype, "debugDescription", {
        get: function () { return this.debugDescription$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).StaticString.customMirror*/
    StaticString.prototype.customMirror$get = function () {
        var _this = this;
        return _create(Mirror, 'initReflectingprotocol_composition_type', {}, _this.description);
    };
    Object.defineProperty(StaticString.prototype, "customMirror", {
        get: function () { return this.customMirror$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    StaticString.prototype.init$vars = function () {
    };
    StaticString.$struct = true;
    StaticString.$infoAddress = '';
    return StaticString;
}());
if (typeof _ExpressibleByBuiltinUnicodeScalarLiteral$implementation != 'undefined')
    _mixin(StaticString, _ExpressibleByBuiltinUnicodeScalarLiteral$implementation, false);
if (typeof _ExpressibleByBuiltinExtendedGraphemeClusterLiteral$implementation != 'undefined')
    _mixin(StaticString, _ExpressibleByBuiltinExtendedGraphemeClusterLiteral$implementation, false);
if (typeof _ExpressibleByBuiltinStringLiteral$implementation != 'undefined')
    _mixin(StaticString, _ExpressibleByBuiltinStringLiteral$implementation, false);
if (typeof ExpressibleByUnicodeScalarLiteral$implementation != 'undefined')
    _mixin(StaticString, ExpressibleByUnicodeScalarLiteral$implementation, false);
if (typeof ExpressibleByExtendedGraphemeClusterLiteral$implementation != 'undefined')
    _mixin(StaticString, ExpressibleByExtendedGraphemeClusterLiteral$implementation, false);
if (typeof ExpressibleByStringLiteral$implementation != 'undefined')
    _mixin(StaticString, ExpressibleByStringLiteral$implementation, false);
if (typeof CustomStringConvertible$implementation != 'undefined')
    _mixin(StaticString, CustomStringConvertible$implementation, false);
if (typeof CustomDebugStringConvertible$implementation != 'undefined')
    _mixin(StaticString, CustomDebugStringConvertible$implementation, false);
if (typeof CustomReflectable$implementation != 'undefined')
    _mixin(StaticString, CustomReflectable$implementation, false);
var Strideable$implementation = /** @class */ (function () {
    function Strideable$implementation() {
    }
    /*Swift.(file).Strideable.+infix(_:Self,_:Self.Stride)*/
    /*Swift.(file).Strideable.+infix(_:Self,_:Self.Stride)*/
    Strideable$implementation.infix_43 = function ($info, lhs, rhs) {
        var _this = this;
        return lhs.advancedBy({}, rhs);
    };
    /*Swift.(file).Strideable.+infix(_:Self.Stride,_:Self)*/
    /*Swift.(file).Strideable.+infix(_:Self.Stride,_:Self)*/
    Strideable$implementation.infix_43 = function ($info, lhs, rhs) {
        var _this = this;
        return rhs.advancedBy({}, lhs);
    };
    /*Swift.(file).Strideable.-infix(_:Self,_:Self.Stride)*/
    /*Swift.(file).Strideable.-infix(_:Self,_:Self.Stride)*/
    Strideable$implementation.infix_45 = function ($info, lhs, rhs) {
        var _this = this;
        return lhs.advancedBy({}, ((function () { throw '!unclarifiedGeneric:Self.Stride'; })()).prefix_45({}, rhs));
    };
    /*Swift.(file).Strideable.-infix(_:Self,_:Self)*/
    /*Swift.(file).Strideable.-infix(_:Self,_:Self)*/
    Strideable$implementation.infix_45 = function ($info, lhs, rhs) {
        var _this = this;
        return rhs.distanceTo({}, lhs);
    };
    /*Swift.(file).Strideable.+=infix(_:Self,_:Self.Stride)*/
    /*Swift.(file).Strideable.+=infix(_:Self,_:Self.Stride)*/
    Strideable$implementation.infix_43_61 = function ($info, lhs$inout, rhs) {
        var _this = this;
        var lhs = lhs$inout.get();
        var $result = (function () {
            lhs = lhs.advancedBy({}, rhs);
        })();
        lhs$inout.set(lhs);
        return $result;
    };
    /*Swift.(file).Strideable.-=infix(_:Self,_:Self.Stride)*/
    /*Swift.(file).Strideable.-=infix(_:Self,_:Self.Stride)*/
    Strideable$implementation.infix_45_61 = function ($info, lhs$inout, rhs) {
        var _this = this;
        var lhs = lhs$inout.get();
        var $result = (function () {
            lhs = lhs.advancedBy({}, ((function () { throw '!unclarifiedGeneric:Self.Stride'; })()).prefix_45({}, rhs));
        })();
        lhs$inout.set(lhs);
        return $result;
    };
    /*Swift.(file).Strideable.<infix(_:Self,_:Self)*/
    /*Swift.(file).Strideable.<infix(_:Self,_:Self)*/
    Strideable$implementation.infix_60 = function ($info, x, y) {
        var _this = this;
        return ((function () { throw '!unclarifiedGeneric:Self.Stride'; })()).infix_62({}, x.distanceTo({}, y), _create(((function () { throw '!unclarifiedGeneric:Self.Stride'; })()), 'initIntegerLiteral', {}, 0));
    };
    /*Swift.(file).Strideable.==infix(_:Self,_:Self)*/
    /*Swift.(file).Strideable.==infix(_:Self,_:Self)*/
    Strideable$implementation.infix_61_61 = function ($info, x, y) {
        var _this = this;
        return ((function () { throw '!unclarifiedGeneric:Self.Stride'; })()).infix_61_61({}, x.distanceTo({}, y), _create(((function () { throw '!unclarifiedGeneric:Self.Stride'; })()), 'initIntegerLiteral', {}, 0));
    };
    return Strideable$implementation;
}());
if (typeof Comparable$implementation != 'undefined')
    _mixin(Strideable$implementation, Comparable$implementation, false);
var StrideTo = /** @class */ (function () {
    function StrideTo() {
    }
    /*Swift.(file).StrideTo.init(_start:Element,end:Element,stride:Element.Stride)*/
    /*Swift.(file).StrideTo.init(_start:Element,end:Element,stride:Element.Stride)*/
    StrideTo.prototype.init_startEndStride = function ($info, _start, end, stride) {
        throw 'unsupported method Swift.(file).StrideTo.init(_start:Element,end:Element,stride:Element.Stride) in ' + this.constructor.name;
    };
    /*Swift.(file).StrideTo.makeIterator()*/
    /*Swift.(file).Sequence.makeIterator()*/
    StrideTo.prototype.makeIterator = function ($info) {
        var _this = this;
        return _create(StrideToIterator, 'init_startEndStride', {}, _this._start, _this._end, _this._stride);
    };
    /*Swift.(file).StrideTo.underestimatedCount*/
    StrideTo.prototype.underestimatedCount$get = function () {
        var _this = this;
        var it = _cloneStruct(_this.makeIterator({}));
        var count = 0;
        while (true) {
            if (!((Optional.wrappedNotEqualsOptionalNilComparisonType({}, it.next({ $setThis: function ($val) { return it = $val; } }), null))))
                break;
            Int.infix_43_61({}, { get: function () { return count; }, set: function ($val) { return count = $val; } }, 1);
        }
        ;
        return count;
    };
    Object.defineProperty(StrideTo.prototype, "underestimatedCount", {
        get: function () { return this.underestimatedCount$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).StrideTo.customMirror*/
    StrideTo.prototype.customMirror$get = function () {
        var _this = this;
        return _create(Mirror, 'initChildrenKeyValuePairsDisplayStyleOptionalAncestorRepresentationMirrorAncestorRepresentation', {}, _this, new Map([["from", _this._start], ["to", _this._end], ["by", _this._stride]]), nil /*!default_value*/, generated /*!default_value*/);
    };
    Object.defineProperty(StrideTo.prototype, "customMirror", {
        get: function () { return this.customMirror$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    StrideTo.prototype.init$vars = function () {
    };
    StrideTo.$struct = true;
    StrideTo.$infoAddress = '';
    return StrideTo;
}());
if (typeof Sequence$implementation != 'undefined')
    _mixin(StrideTo, Sequence$implementation, false);
if (typeof CustomReflectable$implementation != 'undefined')
    _mixin(StrideTo, CustomReflectable$implementation, false);
var StrideThrough = /** @class */ (function () {
    function StrideThrough() {
    }
    /*Swift.(file).StrideThrough.init(_start:Element,end:Element,stride:Element.Stride)*/
    /*Swift.(file).StrideThrough.init(_start:Element,end:Element,stride:Element.Stride)*/
    StrideThrough.prototype.init_startEndStride = function ($info, _start, end, stride) {
    };
    /*Swift.(file).StrideThrough.makeIterator()*/
    /*Swift.(file).Sequence.makeIterator()*/
    StrideThrough.prototype.makeIterator = function ($info) {
        var _this = this;
        return _create(StrideThroughIterator, 'init_startEndStride', {}, _this._start, _this._end, _this._stride);
    };
    /*Swift.(file).StrideThrough.underestimatedCount*/
    StrideThrough.prototype.underestimatedCount$get = function () {
        var _this = this;
        var it = _cloneStruct(_this.makeIterator({}));
        var count = 0;
        while (true) {
            if (!((Optional.wrappedNotEqualsOptionalNilComparisonType({}, it.next({ $setThis: function ($val) { return it = $val; } }), null))))
                break;
            Int.infix_43_61({}, { get: function () { return count; }, set: function ($val) { return count = $val; } }, 1);
        }
        ;
        return count;
    };
    Object.defineProperty(StrideThrough.prototype, "underestimatedCount", {
        get: function () { return this.underestimatedCount$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).StrideThrough.customMirror*/
    StrideThrough.prototype.customMirror$get = function () {
        var _this = this;
        return _create(Mirror, 'initChildrenKeyValuePairsDisplayStyleOptionalAncestorRepresentationMirrorAncestorRepresentation', {}, _this, new Map([["from", _this._start], ["through", _this._end], ["by", _this._stride]]), nil /*!default_value*/, generated /*!default_value*/);
    };
    Object.defineProperty(StrideThrough.prototype, "customMirror", {
        get: function () { return this.customMirror$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    StrideThrough.prototype.init$vars = function () {
    };
    StrideThrough.$struct = true;
    StrideThrough.$infoAddress = '';
    return StrideThrough;
}());
if (typeof Sequence$implementation != 'undefined')
    _mixin(StrideThrough, Sequence$implementation, false);
if (typeof CustomReflectable$implementation != 'undefined')
    _mixin(StrideThrough, CustomReflectable$implementation, false);
var AnyIndex = /** @class */ (function () {
    function AnyIndex() {
    }
    /*Swift.(file).AnyIndex.init(_:BaseIndex)*/
    /*Swift.(file).AnyIndex.init(_:BaseIndex)*/
    AnyIndex.prototype.init = function ($info, base) {
        throw 'unsupported method Swift.(file).AnyIndex.init(_:BaseIndex) in ' + this.constructor.name;
    };
    /*Swift.(file).AnyIndex.init(_box:_AnyIndexBox)*/
    /*Swift.(file).AnyIndex.init(_box:_AnyIndexBox)*/
    AnyIndex.prototype.init_box_AnyIndexBox = function ($info, _box) {
        throw 'unsupported method Swift.(file).AnyIndex.init(_box:_AnyIndexBox) in ' + this.constructor.name;
    };
    /*Swift.(file).AnyIndex.==infix(_:AnyIndex,_:AnyIndex)*/
    /*Swift.(file).Equatable.==infix(_:Self,_:Self)*/
    AnyIndex.infix_61_61 = function ($info, lhs, rhs) {
        return lhs == rhs;
    };
    /*Swift.(file).AnyIndex.<infix(_:AnyIndex,_:AnyIndex)*/
    /*Swift.(file).Comparable.<infix(_:Self,_:Self)*/
    AnyIndex.infix_60 = function ($info, lhs, rhs) {
        return lhs < rhs;
    };
    AnyIndex.prototype.init$vars = function () {
    };
    AnyIndex.$struct = true;
    AnyIndex.$infoAddress = '';
    return AnyIndex;
}());
if (typeof Comparable$implementation != 'undefined')
    _mixin(AnyIndex, Comparable$implementation, false);
var _AnyCollectionProtocol$implementation = /** @class */ (function () {
    function _AnyCollectionProtocol$implementation() {
    }
    return _AnyCollectionProtocol$implementation;
}());
if (typeof Collection$implementation != 'undefined')
    _mixin(_AnyCollectionProtocol$implementation, Collection$implementation, false);
var AnyCollection = /** @class */ (function () {
    function AnyCollection() {
    }
    /*Swift.(file).AnyCollection.init(_box:_AnyCollectionBox<Element>)*/
    /*Swift.(file).AnyCollection.init(_box:_AnyCollectionBox<Element>)*/
    AnyCollection.prototype.init_box_AnyCollectionBox = function ($info, _box) {
        throw 'unsupported method Swift.(file).AnyCollection.init(_box:_AnyCollectionBox<Element>) in ' + this.constructor.name;
    };
    /*Swift.(file).AnyCollection.makeIterator()*/
    /*Swift.(file).Collection.makeIterator()*/
    /*Swift.(file).Sequence.makeIterator()*/
    AnyCollection.prototype.makeIterator = function ($info) {
        var _this = this;
        return _create(IndexingIterator, 'init_elements', {}, _this);
    };
    /*Swift.(file).AnyCollection.dropLast(_:Int)*/
    /*Swift.(file).AnyCollection.dropLast(_:Int)*/
    AnyCollection.prototype.dropLast = function ($info, n) {
        throw 'unsupported method Swift.(file).AnyCollection.dropLast(_:Int) in ' + this.constructor.name;
    };
    /*Swift.(file).AnyCollection.prefix(while:(Element) throws -> Bool)*/
    /*Swift.(file).AnyCollection.prefix(while:(Element) throws -> Bool)*/
    AnyCollection.prototype.prefixWhile = function ($info, predicate) {
        throw 'unsupported method Swift.(file).AnyCollection.prefix(while:(Element) throws -> Bool) in ' + this.constructor.name;
    };
    /*Swift.(file).AnyCollection.suffix(_:Int)*/
    /*Swift.(file).AnyCollection.suffix(_:Int)*/
    AnyCollection.prototype.suffix = function ($info, maxLength) {
        throw 'unsupported method Swift.(file).AnyCollection.suffix(_:Int) in ' + this.constructor.name;
    };
    /*Swift.(file).AnyCollection.underestimatedCount*/
    AnyCollection.prototype.underestimatedCount$get = function () {
        var _this = this;
        return 0;
    };
    Object.defineProperty(AnyCollection.prototype, "underestimatedCount", {
        get: function () { return this.underestimatedCount$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).AnyCollection.map(_:(Element) throws -> T)*/
    /*Swift.(file).AnyCollection.map(_:(Element) throws -> T)*/
    AnyCollection.prototype.mapSwift = function ($info, transform) {
        throw 'unsupported method Swift.(file).AnyCollection.map(_:(Element) throws -> T) in ' + this.constructor.name;
    };
    /*Swift.(file).AnyCollection.filter(_:(Element) throws -> Bool)*/
    /*Swift.(file).AnyCollection.filter(_:(Element) throws -> Bool)*/
    AnyCollection.prototype.filterSwift = function ($info, isIncluded) {
        throw 'unsupported method Swift.(file).AnyCollection.filter(_:(Element) throws -> Bool) in ' + this.constructor.name;
    };
    /*Swift.(file).AnyCollection.forEach(_:(Element) throws -> Void)*/
    /*Swift.(file).AnyCollection.forEach(_:(Element) throws -> Void)*/
    AnyCollection.prototype.forEachSwift = function ($info, body) {
        throw 'unsupported method Swift.(file).AnyCollection.forEach(_:(Element) throws -> Void) in ' + this.constructor.name;
    };
    /*Swift.(file).AnyCollection.drop(while:(Element) throws -> Bool)*/
    /*Swift.(file).AnyCollection.drop(while:(Element) throws -> Bool)*/
    AnyCollection.prototype.dropWhile = function ($info, predicate) {
        throw 'unsupported method Swift.(file).AnyCollection.drop(while:(Element) throws -> Bool) in ' + this.constructor.name;
    };
    /*Swift.(file).AnyCollection.dropFirst(_:Int)*/
    /*Swift.(file).AnyCollection.dropFirst(_:Int)*/
    AnyCollection.prototype.dropFirst = function ($info, n) {
        throw 'unsupported method Swift.(file).AnyCollection.dropFirst(_:Int) in ' + this.constructor.name;
    };
    /*Swift.(file).AnyCollection.prefix(_:Int)*/
    /*Swift.(file).AnyCollection.prefix(_:Int)*/
    AnyCollection.prototype.prefix = function ($info, maxLength) {
        throw 'unsupported method Swift.(file).AnyCollection.prefix(_:Int) in ' + this.constructor.name;
    };
    /*Swift.(file).AnyCollection.init(_:C)*/
    /*Swift.(file).AnyCollection.init(_:C)*/
    AnyCollection.prototype.init = function ($info, base) {
        throw 'unsupported method Swift.(file).AnyCollection.init(_:C) in ' + this.constructor.name;
    };
    /*Swift.(file).AnyCollection.init(_:AnyCollection<Element>)*/
    /*Swift.(file).AnyCollection.init(_:AnyCollection<Element>)*/
    AnyCollection.prototype.initAnyCollection = function ($info, other) {
        throw 'unsupported method Swift.(file).AnyCollection.init(_:AnyCollection<Element>) in ' + this.constructor.name;
    };
    /*Swift.(file).AnyCollection.init(_:C)*/
    /*Swift.(file).AnyCollection.init(_:C)*/
    AnyCollection.prototype.init = function ($info, base) {
        throw 'unsupported method Swift.(file).AnyCollection.init(_:C) in ' + this.constructor.name;
    };
    /*Swift.(file).AnyCollection.init(_:AnyBidirectionalCollection<Element>)*/
    /*Swift.(file).AnyCollection.init(_:AnyBidirectionalCollection<Element>)*/
    AnyCollection.prototype.initAnyBidirectionalCollection = function ($info, other) {
        throw 'unsupported method Swift.(file).AnyCollection.init(_:AnyBidirectionalCollection<Element>) in ' + this.constructor.name;
    };
    /*Swift.(file).AnyCollection.init(_:C)*/
    /*Swift.(file).AnyCollection.init(_:C)*/
    AnyCollection.prototype.init = function ($info, base) {
        throw 'unsupported method Swift.(file).AnyCollection.init(_:C) in ' + this.constructor.name;
    };
    /*Swift.(file).AnyCollection.init(_:AnyRandomAccessCollection<Element>)*/
    /*Swift.(file).AnyCollection.init(_:AnyRandomAccessCollection<Element>)*/
    AnyCollection.prototype.initAnyRandomAccessCollection = function ($info, other) {
        throw 'unsupported method Swift.(file).AnyCollection.init(_:AnyRandomAccessCollection<Element>) in ' + this.constructor.name;
    };
    /*Swift.(file).AnyCollection.startIndex*/
    AnyCollection.prototype.startIndex$get = function () {
        throw 'unsupported variable Swift.(file).AnyCollection.startIndex in ' + this.constructor.name;
    };
    Object.defineProperty(AnyCollection.prototype, "startIndex", {
        get: function () { return this.startIndex$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).AnyCollection.endIndex*/
    AnyCollection.prototype.endIndex$get = function () {
        throw 'unsupported variable Swift.(file).AnyCollection.endIndex in ' + this.constructor.name;
    };
    Object.defineProperty(AnyCollection.prototype, "endIndex", {
        get: function () { return this.endIndex$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).AnyCollection.subscript(_:AnyCollection<Element>.Index)*/
    /*Swift.(file).Collection.subscript(_:Self.Index)*/
    AnyCollection.prototype.subscript$get = function ($info, position) {
        throw 'unsupported method Swift.(file).AnyCollection.subscript(_:AnyCollection<Element>.Index) in ' + this.constructor.name;
    };
    /*Swift.(file).AnyCollection.subscript(_:Range<AnyCollection<Element>.Index>)*/
    /*Swift.(file).Collection.subscript(_:Range<Self.Index>)*/
    AnyCollection.prototype.subscriptRange$get = function ($info, bounds) {
        var _this = this;
        return _create(Slice, 'initBaseBoundsRange', {}, _this, bounds);
    };
    /*Swift.(file).AnyCollection.index(after:AnyCollection<Element>.Index)*/
    /*Swift.(file).Collection.index(after:Self.Index)*/
    AnyCollection.prototype.indexAfter = function ($info, i) {
        throw 'unsupported method Swift.(file).AnyCollection.index(after:AnyCollection<Element>.Index) in ' + this.constructor.name;
    };
    /*Swift.(file).AnyCollection.formIndex(after:AnyCollection<Element>.Index)*/
    /*Swift.(file).Collection.formIndex(after:Self.Index)*/
    AnyCollection.prototype.formIndexAfter = function ($info, i$inout) {
        var _this = this;
        var i = i$inout.get();
        var $result = (function () {
            i = _this.indexAfter({}, i);
        })();
        i$inout.set(i);
        return $result;
    };
    /*Swift.(file).AnyCollection.index(_:AnyCollection<Element>.Index,offsetBy:Int)*/
    /*Swift.(file).Collection.index(_:Self.Index,offsetBy:Int)*/
    AnyCollection.prototype.indexOffsetBy = function ($info, i, n) {
        var _this = this;
        return _this._advanceForwardBy({}, i, distance);
    };
    /*Swift.(file).AnyCollection.index(_:AnyCollection<Element>.Index,offsetBy:Int,limitedBy:AnyCollection<Element>.Index)*/
    /*Swift.(file).Collection.index(_:Self.Index,offsetBy:Int,limitedBy:Self.Index)*/
    AnyCollection.prototype.indexOffsetByLimitedBy = function ($info, i, n, limit) {
        var _this = this;
        return _this._advanceForwardByLimitedBy({}, i, distance, limit);
    };
    /*Swift.(file).AnyCollection.formIndex(_:AnyCollection<Element>.Index,offsetBy:Int)*/
    /*Swift.(file).AnyCollection.formIndex(_:AnyCollection<Element>.Index,offsetBy:Int)*/
    AnyCollection.prototype.formIndexOffsetBy = function ($info, i$inout, n) {
        throw 'unsupported method Swift.(file).AnyCollection.formIndex(_:AnyCollection<Element>.Index,offsetBy:Int) in ' + this.constructor.name;
    };
    /*Swift.(file).AnyCollection.formIndex(_:AnyCollection<Element>.Index,offsetBy:Int,limitedBy:AnyCollection<Element>.Index)*/
    /*Swift.(file).AnyCollection.formIndex(_:AnyCollection<Element>.Index,offsetBy:Int,limitedBy:AnyCollection<Element>.Index)*/
    AnyCollection.prototype.formIndexOffsetByLimitedBy = function ($info, i$inout, n, limit) {
        throw 'unsupported method Swift.(file).AnyCollection.formIndex(_:AnyCollection<Element>.Index,offsetBy:Int,limitedBy:AnyCollection<Element>.Index) in ' + this.constructor.name;
    };
    /*Swift.(file).AnyCollection.distance(from:AnyCollection<Element>.Index,to:AnyCollection<Element>.Index)*/
    /*Swift.(file).Collection.distance(from:Self.Index,to:Self.Index)*/
    AnyCollection.prototype.distanceFromTo = function ($info, start, end) {
        var _this = this;
        preconditionFileLine({}, function () { return (_.arg0 = start).constructor.infix_60_61({}, _.arg0, end); }, function () { return "Only BidirectionalCollections can have end come before start"; }, '?3', '?3');
        var start_dupl = start;
        var count = 0;
        while (true) {
            if (!(((_.arg1 = start_dupl).constructor.infix_33_61({}, _.arg1, end))))
                break;
            count = Int.infix_43({}, count, 1);
            _this.formIndexAfter({}, { get: function () { return start_dupl; }, set: function ($val) { return start_dupl = $val; } });
        }
        ;
        return count;
    };
    /*Swift.(file).AnyCollection.count*/
    AnyCollection.prototype.count$get = function () {
        var _this = this;
        return _this.distanceFromTo({}, _this.startIndex, _this.endIndex);
    };
    Object.defineProperty(AnyCollection.prototype, "count", {
        get: function () { return this.count$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    AnyCollection.prototype.init$vars = function () {
    };
    AnyCollection.$struct = true;
    AnyCollection.$infoAddress = '';
    return AnyCollection;
}());
if (typeof Collection$implementation != 'undefined')
    _mixin(AnyCollection, Collection$implementation, false);
if (typeof _AnyCollectionProtocol$implementation != 'undefined')
    _mixin(AnyCollection, _AnyCollectionProtocol$implementation, false);
var Mirror = /** @class */ (function () {
    function Mirror() {
    }
    /*Swift.(file).Mirror.init(reflecting:Any)*/
    /*Swift.(file).Mirror.init(reflecting:Any)*/
    Mirror.prototype.initReflectingprotocol_composition_type = function ($info, subject) {
        throw 'unsupported method Swift.(file).Mirror.init(reflecting:Any) in ' + this.constructor.name;
    };
    /*Swift.(file).Mirror.init(_:Subject,children:C,displayStyle:Mirror.DisplayStyle?,ancestorRepresentation:Mirror.AncestorRepresentation)*/
    /*Swift.(file).Mirror.init(_:Subject,children:C,displayStyle:Mirror.DisplayStyle?,ancestorRepresentation:Mirror.AncestorRepresentation)*/
    Mirror.prototype.initChildrenDisplayStyleOptionalAncestorRepresentationMirrorAncestorRepresentation = function ($info, subject, children, displayStyle, ancestorRepresentation) {
        throw 'unsupported method Swift.(file).Mirror.init(_:Subject,children:C,displayStyle:Mirror.DisplayStyle?,ancestorRepresentation:Mirror.AncestorRepresentation) in ' + this.constructor.name;
    };
    /*Swift.(file).Mirror.init(_:Subject,unlabeledChildren:C,displayStyle:Mirror.DisplayStyle?,ancestorRepresentation:Mirror.AncestorRepresentation)*/
    /*Swift.(file).Mirror.init(_:Subject,unlabeledChildren:C,displayStyle:Mirror.DisplayStyle?,ancestorRepresentation:Mirror.AncestorRepresentation)*/
    Mirror.prototype.initUnlabeledChildrenDisplayStyleOptionalAncestorRepresentationMirrorAncestorRepresentation = function ($info, subject, unlabeledChildren, displayStyle, ancestorRepresentation) {
        throw 'unsupported method Swift.(file).Mirror.init(_:Subject,unlabeledChildren:C,displayStyle:Mirror.DisplayStyle?,ancestorRepresentation:Mirror.AncestorRepresentation) in ' + this.constructor.name;
    };
    /*Swift.(file).Mirror.init(_:Subject,children:KeyValuePairs<String, Any>,displayStyle:Mirror.DisplayStyle?,ancestorRepresentation:Mirror.AncestorRepresentation)*/
    /*Swift.(file).Mirror.init(_:Subject,children:KeyValuePairs<String, Any>,displayStyle:Mirror.DisplayStyle?,ancestorRepresentation:Mirror.AncestorRepresentation)*/
    Mirror.prototype.initChildrenKeyValuePairsDisplayStyleOptionalAncestorRepresentationMirrorAncestorRepresentation = function ($info, subject, children, displayStyle, ancestorRepresentation) {
        throw 'unsupported method Swift.(file).Mirror.init(_:Subject,children:KeyValuePairs<String, Any>,displayStyle:Mirror.DisplayStyle?,ancestorRepresentation:Mirror.AncestorRepresentation) in ' + this.constructor.name;
    };
    /*Swift.(file).Mirror.subjectType*/
    Mirror.prototype.subjectType$get = function () {
        throw 'unsupported variable Swift.(file).Mirror.subjectType in ' + this.constructor.name;
    };
    Object.defineProperty(Mirror.prototype, "subjectType", {
        get: function () { return this.subjectType$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).Mirror.children*/
    Mirror.prototype.children$get = function () {
        throw 'unsupported variable Swift.(file).Mirror.children in ' + this.constructor.name;
    };
    Object.defineProperty(Mirror.prototype, "children", {
        get: function () { return this.children$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).Mirror.displayStyle*/
    Mirror.prototype.displayStyle$get = function () {
        throw 'unsupported variable Swift.(file).Mirror.displayStyle in ' + this.constructor.name;
    };
    Object.defineProperty(Mirror.prototype, "displayStyle", {
        get: function () { return this.displayStyle$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).Mirror.superclassMirror*/
    Mirror.prototype.superclassMirror$get = function () {
        throw 'unsupported variable Swift.(file).Mirror.superclassMirror in ' + this.constructor.name;
    };
    Object.defineProperty(Mirror.prototype, "superclassMirror", {
        get: function () { return this.superclassMirror$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).Mirror.init(internalReflecting:Any,subjectType:Any.Type?,customAncestor:Mirror?)*/
    /*Swift.(file).Mirror.init(internalReflecting:Any,subjectType:Any.Type?,customAncestor:Mirror?)*/
    Mirror.prototype.initInternalReflectingprotocol_composition_typeSubjectTypeOptionalCustomAncestorOptional = function ($info, subject, subjectType, customAncestor) {
        throw 'unsupported method Swift.(file).Mirror.init(internalReflecting:Any,subjectType:Any.Type?,customAncestor:Mirror?) in ' + this.constructor.name;
    };
    /*Swift.(file).Mirror.quickLookObject(_:Any)*/
    /*Swift.(file).Mirror.quickLookObject(_:Any)*/
    Mirror.quickLookObject = function ($info, subject) {
        var _this = this;
        var object = _getQuickLookObject({}, subject);
        return object.flatMap({}, _getClassPlaygroundQuickLook);
    };
    /*Swift.(file).Mirror.descendant(_:MirrorPath,_:[MirrorPath])*/
    /*Swift.(file).Mirror.descendant(_:MirrorPath,_:[MirrorPath])*/
    Mirror.prototype.descendant = function ($info, first, rest) {
        throw 'unsupported method Swift.(file).Mirror.descendant(_:MirrorPath,_:[MirrorPath]) in ' + this.constructor.name;
    };
    /*Swift.(file).Mirror.description*/
    Mirror.prototype.description$get = function () {
        throw 'unsupported variable Swift.(file).Mirror.description in ' + this.constructor.name;
    };
    Object.defineProperty(Mirror.prototype, "description", {
        get: function () { return this.description$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).Mirror.customMirror*/
    Mirror.prototype.customMirror$get = function () {
        throw 'unsupported variable Swift.(file).Mirror.customMirror in ' + this.constructor.name;
    };
    Object.defineProperty(Mirror.prototype, "customMirror", {
        get: function () { return this.customMirror$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    Mirror.prototype.init$vars = function () {
    };
    var _19, _20, _21, _22;
    Mirror.$struct = true;
    Mirror.$infoAddress = '';
    Mirror._DefaultDescendantRepresentation = (_19 = /** @class */ (function () {
            function class_43() {
            }
            Object.defineProperty(class_43, "generated", {
                get: function () { return Object.assign(new Mirror._DefaultDescendantRepresentation(), __assign({ rawValue: "generated" }, Array.from(arguments).slice(1))); },
                enumerable: true,
                configurable: true
            });
            Object.defineProperty(class_43, "suppressed", {
                get: function () { return Object.assign(new Mirror._DefaultDescendantRepresentation(), __assign({ rawValue: "suppressed" }, Array.from(arguments).slice(1))); },
                enumerable: true,
                configurable: true
            });
            /*Swift.(file).Mirror._DefaultDescendantRepresentation.==(_:Mirror._DefaultDescendantRepresentation,_:Mirror._DefaultDescendantRepresentation)*/
            /*Swift.(file).Equatable.==infix(_:Self,_:Self)*/
            class_43.infix_61_61 = function ($info, a, b) {
                return a == b;
            };
            /*Swift.(file).Mirror._DefaultDescendantRepresentation.hashValue*/
            class_43.prototype.hashValue$get = function () {
                throw 'unsupported variable Swift.(file).Mirror._DefaultDescendantRepresentation.hashValue in ' + this.constructor.name;
            };
            Object.defineProperty(class_43.prototype, "hashValue", {
                get: function () { return this.hashValue$get(); },
                enumerable: true,
                configurable: true
            });
            ;
            /*Swift.(file).Mirror._DefaultDescendantRepresentation.hash(into:Hasher)*/
            /*Swift.(file).Hashable.hash(into:Hasher)*/
            class_43.prototype.hashInto = function ($info, hasher$inout) {
                throw 'unsupported method Swift.(file).Mirror._DefaultDescendantRepresentation.hash(into:Hasher) in ' + this.constructor.name;
            };
            class_43.prototype.init$vars = function () {
            };
            return class_43;
        }()),
        _19.$infoAddress = '',
        _19);
    Mirror.AncestorRepresentation = (_20 = /** @class */ (function () {
            function class_44() {
            }
            Object.defineProperty(class_44, "generated", {
                get: function () { return Object.assign(new Mirror.AncestorRepresentation(), __assign({ rawValue: "generated" }, Array.from(arguments).slice(1))); },
                enumerable: true,
                configurable: true
            });
            class_44.customized = function () { return Object.assign(new Mirror.AncestorRepresentation(), __assign({ rawValue: "customized" }, Array.from(arguments).slice(1))); };
            Object.defineProperty(class_44, "suppressed", {
                get: function () { return Object.assign(new Mirror.AncestorRepresentation(), __assign({ rawValue: "suppressed" }, Array.from(arguments).slice(1))); },
                enumerable: true,
                configurable: true
            });
            class_44.prototype.init$vars = function () {
            };
            return class_44;
        }()),
        _20.$infoAddress = '',
        _20);
    Mirror.DisplayStyle = (_21 = /** @class */ (function () {
            function class_45() {
            }
            Object.defineProperty(class_45, "struct", {
                get: function () { return Object.assign(new Mirror.DisplayStyle(), __assign({ rawValue: "struct" }, Array.from(arguments).slice(1))); },
                enumerable: true,
                configurable: true
            });
            Object.defineProperty(class_45, "_class", {
                get: function () { return Object.assign(new Mirror.DisplayStyle(), __assign({ rawValue: "_class" }, Array.from(arguments).slice(1))); },
                enumerable: true,
                configurable: true
            });
            Object.defineProperty(class_45, "enum", {
                get: function () { return Object.assign(new Mirror.DisplayStyle(), __assign({ rawValue: "enum" }, Array.from(arguments).slice(1))); },
                enumerable: true,
                configurable: true
            });
            Object.defineProperty(class_45, "tuple", {
                get: function () { return Object.assign(new Mirror.DisplayStyle(), __assign({ rawValue: "tuple" }, Array.from(arguments).slice(1))); },
                enumerable: true,
                configurable: true
            });
            Object.defineProperty(class_45, "optional", {
                get: function () { return Object.assign(new Mirror.DisplayStyle(), __assign({ rawValue: "optional" }, Array.from(arguments).slice(1))); },
                enumerable: true,
                configurable: true
            });
            Object.defineProperty(class_45, "collection", {
                get: function () { return Object.assign(new Mirror.DisplayStyle(), __assign({ rawValue: "collection" }, Array.from(arguments).slice(1))); },
                enumerable: true,
                configurable: true
            });
            Object.defineProperty(class_45, "dictionary", {
                get: function () { return Object.assign(new Mirror.DisplayStyle(), __assign({ rawValue: "dictionary" }, Array.from(arguments).slice(1))); },
                enumerable: true,
                configurable: true
            });
            Object.defineProperty(class_45, "set", {
                get: function () { return Object.assign(new Mirror.DisplayStyle(), __assign({ rawValue: "set" }, Array.from(arguments).slice(1))); },
                enumerable: true,
                configurable: true
            });
            /*Swift.(file).Mirror.DisplayStyle.==(_:Mirror.DisplayStyle,_:Mirror.DisplayStyle)*/
            /*Swift.(file).Equatable.==infix(_:Self,_:Self)*/
            class_45.infix_61_61 = function ($info, a, b) {
                return a == b;
            };
            /*Swift.(file).Mirror.DisplayStyle.hashValue*/
            class_45.prototype.hashValue$get = function () {
                throw 'unsupported variable Swift.(file).Mirror.DisplayStyle.hashValue in ' + this.constructor.name;
            };
            Object.defineProperty(class_45.prototype, "hashValue", {
                get: function () { return this.hashValue$get(); },
                enumerable: true,
                configurable: true
            });
            ;
            /*Swift.(file).Mirror.DisplayStyle.hash(into:Hasher)*/
            /*Swift.(file).Hashable.hash(into:Hasher)*/
            class_45.prototype.hashInto = function ($info, hasher$inout) {
                throw 'unsupported method Swift.(file).Mirror.DisplayStyle.hash(into:Hasher) in ' + this.constructor.name;
            };
            class_45.prototype.init$vars = function () {
            };
            return class_45;
        }()),
        _21.$infoAddress = '',
        _21);
    Mirror._Dummy = (_22 = /** @class */ (function () {
            function class_46() {
            }
            /*Swift.(file).Mirror._Dummy.init(mirror:Mirror)*/
            /*Swift.(file).Mirror._Dummy.init(mirror:Mirror)*/
            class_46.prototype.initMirrorMirror = function ($info, mirror) {
                throw 'unsupported method Swift.(file).Mirror._Dummy.init(mirror:Mirror) in ' + this.constructor.name;
            };
            /*Swift.(file).Mirror._Dummy.mirror*/
            class_46.prototype.mirror$get = function () {
                throw 'unsupported variable Swift.(file).Mirror._Dummy.mirror in ' + this.constructor.name;
            };
            Object.defineProperty(class_46.prototype, "mirror", {
                get: function () { return this.mirror$get(); },
                enumerable: true,
                configurable: true
            });
            ;
            /*Swift.(file).Mirror._Dummy.customMirror*/
            class_46.prototype.customMirror$get = function () {
                throw 'unsupported variable Swift.(file).Mirror._Dummy.customMirror in ' + this.constructor.name;
            };
            Object.defineProperty(class_46.prototype, "customMirror", {
                get: function () { return this.customMirror$get(); },
                enumerable: true,
                configurable: true
            });
            ;
            class_46.prototype.init$vars = function () {
            };
            return class_46;
        }()),
        _22.$struct = true,
        _22.$infoAddress = '',
        _22);
    return Mirror;
}());
_mixin(Mirror._DefaultDescendantRepresentation, _DefaultEnumImplementation, false);
_mixin(Mirror.AncestorRepresentation, _DefaultEnumImplementation, false);
_mixin(Mirror.DisplayStyle, _DefaultEnumImplementation, false);
if (typeof CustomReflectable$implementation != 'undefined')
    _mixin(Mirror._Dummy, CustomReflectable$implementation, false);
if (typeof CustomStringConvertible$implementation != 'undefined')
    _mixin(Mirror, CustomStringConvertible$implementation, false);
if (typeof CustomReflectable$implementation != 'undefined')
    _mixin(Mirror, CustomReflectable$implementation, false);
var _ArrayProtocol$implementation = /** @class */ (function () {
    function _ArrayProtocol$implementation() {
    }
    /*Swift.(file)._ArrayProtocol.filter(_:(Self.Element) throws -> Bool)*/
    /*Swift.(file)._ArrayProtocol.filter(_:(Self.Element) throws -> Bool)*/
    _ArrayProtocol$implementation.prototype.filterSwift = function ($info, isIncluded) {
        var _this = this;
        var result = _create(Array, 'init', {});
        var iterator = _cloneStruct(_this.makeIterator({}));
        while (true) {
            var $ifLet0, _element_1;
            if (!((($ifLet0 = iterator.next({ $setThis: function ($val) { return iterator = $val; } })) || true) && $ifLet0 != null && ((_element_1 = $ifLet0) || true)))
                break;
            if ((isIncluded({}, _element_1))) {
                result.append({ $setThis: function ($val) { return result = $val; } }, _element_1);
            }
            ;
        }
        ;
        return _create(Array, 'initBuffer', {}, result);
    };
    return _ArrayProtocol$implementation;
}());
if (typeof RangeReplaceableCollection$implementation != 'undefined')
    _mixin(_ArrayProtocol$implementation, RangeReplaceableCollection$implementation, false);
if (typeof ExpressibleByArrayLiteral$implementation != 'undefined')
    _mixin(_ArrayProtocol$implementation, ExpressibleByArrayLiteral$implementation, false);
var BidirectionalCollection$implementation = /** @class */ (function () {
    function BidirectionalCollection$implementation() {
    }
    /*Swift.(file).BidirectionalCollection.formIndex(before:Self.Index)*/
    /*Swift.(file).BidirectionalCollection.formIndex(before:Self.Index)*/
    BidirectionalCollection$implementation.prototype.formIndexBefore = function ($info, i$inout) {
        var _this = this;
        var i = i$inout.get();
        var $result = (function () {
            i = _this.indexBefore({}, i);
        })();
        i$inout.set(i);
        return $result;
    };
    /*Swift.(file).BidirectionalCollection.index(_:Self.Index,offsetBy:Int)*/
    /*Swift.(file).BidirectionalCollection.index(_:Self.Index,offsetBy:Int)*/
    BidirectionalCollection$implementation.prototype.indexOffsetBy = function ($info, i, distance) {
        var _this = this;
        return _this._indexOffsetBy({}, i, distance);
    };
    /*Swift.(file).BidirectionalCollection.index(_:Self.Index,offsetBy:Int,limitedBy:Self.Index)*/
    /*Swift.(file).BidirectionalCollection.index(_:Self.Index,offsetBy:Int,limitedBy:Self.Index)*/
    BidirectionalCollection$implementation.prototype.indexOffsetByLimitedBy = function ($info, i, distance, limit) {
        var _this = this;
        return _this._indexOffsetByLimitedBy({}, i, distance, limit);
    };
    /*Swift.(file).BidirectionalCollection.distance(from:Self.Index,to:Self.Index)*/
    /*Swift.(file).BidirectionalCollection.distance(from:Self.Index,to:Self.Index)*/
    BidirectionalCollection$implementation.prototype.distanceFromTo = function ($info, start, end) {
        var _this = this;
        return _this._distanceFromTo({}, start, end);
    };
    /*Swift.(file).BidirectionalCollection.popLast()*/
    /*Swift.(file).BidirectionalCollection.popLast()*/
    BidirectionalCollection$implementation.prototype.popLast = function ($info) {
        var _this = this;
        if (!((Bool.prefix_33({}, _this.isEmpty)))) {
            return null;
        }
        ;
        var _element = _this.last;
        $info.$setThis(_this = _cloneStruct(_this.subscriptRange$get({}, (_.arg0 = _this.startIndex).constructor.infix_46_46_60({}, _.arg0, _this.indexBefore({}, _this.endIndex)))));
        return _element;
    };
    /*Swift.(file).BidirectionalCollection.removeLast()*/
    /*Swift.(file).BidirectionalCollection.removeLast()*/
    BidirectionalCollection$implementation.prototype.removeLast = function ($info) {
        var _this = this;
        var _element = _this.last;
        $info.$setThis(_this = _cloneStruct(_this.subscriptRange$get({}, (_.arg0 = _this.startIndex).constructor.infix_46_46_60({}, _.arg0, _this.indexBefore({}, _this.endIndex)))));
        return _element;
    };
    /*Swift.(file).BidirectionalCollection.removeLast(_:Int)*/
    /*Swift.(file).BidirectionalCollection.removeLast(_:Int)*/
    BidirectionalCollection$implementation.prototype.removeLast = function ($info, k) {
        var _this = this;
        if ((Int.infix_61_61({}, k, 0))) {
            return;
        }
        ;
        preconditionFileLine({}, function () { return Int.infix_62_61({}, k, 0); }, function () { return "Number of elements to remove should be non-negative"; }, '?3', '?3');
        preconditionFileLine({}, function () { return Int.infix_62_61({}, _this.count, k); }, function () { return "Can't remove more items from a collection than it contains"; }, '?3', '?3');
        $info.$setThis(_this = _cloneStruct(_this.subscriptRange$get({}, (_.arg0 = _this.startIndex).constructor.infix_46_46_60({}, _.arg0, _this.indexOffsetBy({}, _this.endIndex, Int.prefix_45({}, k))))));
    };
    /*Swift.(file).BidirectionalCollection.dropLast(_:Int)*/
    /*Swift.(file).BidirectionalCollection.dropLast(_:Int)*/
    BidirectionalCollection$implementation.prototype.dropLast = function ($info, k) {
        var _this = this;
        preconditionFileLine({}, function () { return Int.infix_62_61({}, k, 0); }, function () { return "Can't drop a negative number of elements from a collection"; }, '?3', '?3');
        var end = infix_63_63({}, _this.indexOffsetByLimitedBy({}, _this.endIndex, Int.prefix_45({}, k), _this.startIndex), function () { return _this.startIndex; });
        return _this.subscriptRange$get({}, (_.arg0 = _this.startIndex).constructor.infix_46_46_60({}, _.arg0, end));
    };
    /*Swift.(file).BidirectionalCollection.suffix(_:Int)*/
    /*Swift.(file).BidirectionalCollection.suffix(_:Int)*/
    BidirectionalCollection$implementation.prototype.suffix = function ($info, maxLength) {
        var _this = this;
        preconditionFileLine({}, function () { return Int.infix_62_61({}, maxLength, 0); }, function () { return "Can't take a suffix of negative length from a collection"; }, '?3', '?3');
        var start = infix_63_63({}, _this.indexOffsetByLimitedBy({}, _this.endIndex, Int.prefix_45({}, maxLength), _this.startIndex), function () { return _this.startIndex; });
        return _this.subscriptRange$get({}, (_.arg0 = start).constructor.infix_46_46_60({}, _.arg0, _this.endIndex));
    };
    /*Swift.(file).BidirectionalCollection.last*/
    BidirectionalCollection$implementation.prototype.last$get = function () {
        var _this = this;
        return (_this.isEmpty ? null : _this.subscript$get({}, _this.indexBefore({}, _this.endIndex)));
    };
    Object.defineProperty(BidirectionalCollection$implementation.prototype, "last", {
        get: function () { return this.last$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).BidirectionalCollection.last(where:(Self.Element) throws -> Bool)*/
    /*Swift.(file).BidirectionalCollection.last(where:(Self.Element) throws -> Bool)*/
    BidirectionalCollection$implementation.prototype.lastWhere = function ($info, predicate) {
        var _this = this;
        return _this.lastIndexWhere({}, predicate).mapSwift({}, (function ($info, $0) { return _this.subscript$get({}, $0); }));
    };
    /*Swift.(file).BidirectionalCollection.lastIndex(where:(Self.Element) throws -> Bool)*/
    /*Swift.(file).BidirectionalCollection.lastIndex(where:(Self.Element) throws -> Bool)*/
    BidirectionalCollection$implementation.prototype.lastIndexWhere = function ($info, predicate) {
        var _this = this;
        var i = _this.endIndex;
        while (true) {
            if (!(((_.arg0 = i).constructor.infix_33_61({}, _.arg0, _this.startIndex))))
                break;
            _this.formIndexBefore({}, { get: function () { return i; }, set: function ($val) { return i = $val; } });
            if ((predicate({}, _this.subscript$get({}, i)))) {
                return i;
            }
            ;
        }
        ;
        return null;
    };
    /*Swift.(file).BidirectionalCollection.lastIndex(of:Self.Element)*/
    /*Swift.(file).BidirectionalCollection.lastIndex(of:Self.Element)*/
    BidirectionalCollection$implementation.prototype.lastIndexOfSwift = function ($info, _element) {
        var _this = this;
        var $ifLet0, result_1;
        if ((($ifLet0 = _this._customLastIndexOfEquatableElement({}, _element)) || true) && $ifLet0 != null && ((result_1 = $ifLet0) || true)) {
            return result_1;
        }
        ;
        return _this.lastIndexWhere({}, (function ($info, $0) { return (_.arg0 = $0).constructor.infix_61_61({}, _.arg0, _element); }));
    };
    /*Swift.(file).BidirectionalCollection.reversed()*/
    /*Swift.(file).BidirectionalCollection.reversed()*/
    BidirectionalCollection$implementation.prototype.reversed = function ($info) {
        var _this = this;
        return _create(ReversedCollection, 'init_base', {}, _this);
    };
    /*Swift.(file).BidirectionalCollection.joined(separator:String)*/
    /*Swift.(file).BidirectionalCollection.joined(separator:String)*/
    BidirectionalCollection$implementation.prototype.joinedSeparator = function ($info, separator) {
        var _this = this;
        var result = "";
        if ((separator.isEmpty)) {
            {
                var $x$generator_2 = _this.makeIterator({});
                while (true) {
                    var $ifLet0, x_1;
                    if (!((($ifLet0 = $x$generator_2.next({ $setThis: function ($val) { return $x$generator_2 = $val; } })) || true) && $ifLet0 != null && ((x_1 = $ifLet0) || true)))
                        break;
                    result.append({ $setThis: function ($val) { return result = $val; } }, _create(String, 'initString', {}, x_1));
                }
            }
            ;
            return result;
        }
        ;
        var iter = _this.makeIterator({});
        var $ifLet2, first_3;
        if ((($ifLet2 = iter.next({ $setThis: function ($val) { return iter = $val; } })) || true) && $ifLet2 != null && ((first_3 = $ifLet2) || true)) {
            result.append({ $setThis: function ($val) { return result = $val; } }, _create(String, 'initString', {}, first_3));
            while (true) {
                var $ifLet4, next_5;
                if (!((($ifLet4 = iter.next({ $setThis: function ($val) { return iter = $val; } })) || true) && $ifLet4 != null && ((next_5 = $ifLet4) || true)))
                    break;
                result.append({ $setThis: function ($val) { return result = $val; } }, separator);
                result.append({ $setThis: function ($val) { return result = $val; } }, _create(String, 'initString', {}, next_5));
            }
            ;
        }
        ;
        return result;
    };
    return BidirectionalCollection$implementation;
}());
if (typeof Collection$implementation != 'undefined')
    _mixin(BidirectionalCollection$implementation, Collection$implementation, false);
var Character = /** @class */ (function () {
    function Character() {
    }
    /*Swift.(file).Character.init(unchecked:String)*/
    /*Swift.(file).Character.init(unchecked:String)*/
    Character.prototype.initUncheckedString = function ($info, str) {
        return str;
    };
    /*Swift.(file).Character.utf8*/
    Character.prototype.utf8$get = function () {
        var _this = this;
        return _this.utf8;
    };
    Object.defineProperty(Character.prototype, "utf8", {
        get: function () { return this.utf8$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).Character.utf16*/
    Character.prototype.utf16$get = function () {
        var _this = this;
        return _this.utf16;
    };
    Object.defineProperty(Character.prototype, "utf16", {
        get: function () { return this.utf16$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).Character.unicodeScalars*/
    Character.prototype.unicodeScalars$get = function () {
        var _this = this;
        return _this.unicodeScalars;
    };
    Object.defineProperty(Character.prototype, "unicodeScalars", {
        get: function () { return this.unicodeScalars$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).Character.init(_:Unicode.Scalar)*/
    /*Swift.(file).Character.init(_:Unicode.Scalar)*/
    Character.prototype.initUnicodeScalar = function ($info, content) {
        var _this = this;
        _this.initUncheckedString({}, _create(String, 'initUnicodeScalar', {}, content));
        return;
    };
    /*Swift.(file).Character.init(_builtinUnicodeScalarLiteral:Int32)*/
    /*Swift.(file)._ExpressibleByBuiltinUnicodeScalarLiteral.init(_builtinUnicodeScalarLiteral:Int32)*/
    Character.prototype.init_builtinUnicodeScalarLiteralInt32 = function ($info, value) {
        throw 'unsupported method Swift.(file).Character.init(_builtinUnicodeScalarLiteral:Int32) in ' + this.constructor.name;
    };
    /*Swift.(file).Character.init(_builtinExtendedGraphemeClusterLiteral:RawPointer,utf8CodeUnitCount:Word,isASCII:Int1)*/
    /*Swift.(file)._ExpressibleByBuiltinExtendedGraphemeClusterLiteral.init(_builtinExtendedGraphemeClusterLiteral:RawPointer,utf8CodeUnitCount:Word,isASCII:Int1)*/
    Character.prototype.init_builtinExtendedGraphemeClusterLiteralRawPointerUtf8CodeUnitCountWordIsASCIIInt1 = function ($info, start, utf8CodeUnitCount, isASCII) {
        throw 'unsupported method Swift.(file).Character.init(_builtinExtendedGraphemeClusterLiteral:RawPointer,utf8CodeUnitCount:Word,isASCII:Int1) in ' + this.constructor.name;
    };
    /*Swift.(file).Character.init(extendedGraphemeClusterLiteral:Character)*/
    /*Swift.(file).ExpressibleByExtendedGraphemeClusterLiteral.init(extendedGraphemeClusterLiteral:Self.ExtendedGraphemeClusterLiteralType)*/
    Character.prototype.initExtendedGraphemeClusterLiteral = function ($info, value) {
        var _this = this;
        _this.initUncheckedString({}, value);
        return;
    };
    /*Swift.(file).Character.init(_:String)*/
    /*Swift.(file).LosslessStringConvertible.init(_:String)*/
    Character.prototype.initString = function ($info, s) {
        var _this = this;
        preconditionFileLine({}, function () { return Bool.prefix_33({}, s.isEmpty); }, function () { return "Can't form a Character from an empty String"; }, '?3', '?3');
        preconditionFileLine({}, function () { return String.Index.infix_61_61({}, s.indexAfter({}, s.startIndex), s.endIndex); }, function () { return "Can't form a Character from a String containing more than one extended grapheme cluster"; }, '?3', '?3');
        _this.initUncheckedString({}, s);
        return;
    };
    /*Swift.(file).Character.description*/
    Character.prototype.description$get = function () {
        var _this = this;
        return _this;
    };
    Object.defineProperty(Character.prototype, "description", {
        get: function () { return this.description$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).Character.debugDescription*/
    Character.prototype.debugDescription$get = function () {
        var _this = this;
        return _this.debugDescription;
    };
    Object.defineProperty(Character.prototype, "debugDescription", {
        get: function () { return this.debugDescription$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).Character.==infix(_:Character,_:Character)*/
    /*Swift.(file).Equatable.==infix(_:Self,_:Self)*/
    Character.infix_61_61 = function ($info, lhs, rhs) {
        var _this = this;
        return String.infix_61_61({}, lhs, rhs);
    };
    /*Swift.(file).Character.<infix(_:Character,_:Character)*/
    /*Swift.(file).Comparable.<infix(_:Self,_:Self)*/
    Character.infix_60 = function ($info, lhs, rhs) {
        var _this = this;
        return String.infix_60({}, lhs, rhs);
    };
    /*Swift.(file).Character.hash(into:Hasher)*/
    /*Swift.(file).Hashable.hash(into:Hasher)*/
    Character.prototype.hashInto = function ($info, hasher$inout) {
        var _this = this;
        var hasher = hasher$inout.get();
        var $result = (function () {
            _this.hashInto({}, { get: function () { return hasher; }, set: function ($val) { return hasher = $val; } });
        })();
        hasher$inout.set(hasher);
        return $result;
    };
    /*Swift.(file).Character.hashValue*/
    Character.prototype.hashValue$get = function () {
        throw 'unsupported variable Swift.(file).Character.hashValue in ' + this.constructor.name;
    };
    Object.defineProperty(Character.prototype, "hashValue", {
        get: function () { return this.hashValue$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).Character.customMirror*/
    Character.prototype.customMirror$get = function () {
        throw 'unsupported variable Swift.(file).Character.customMirror in ' + this.constructor.name;
    };
    Object.defineProperty(Character.prototype, "customMirror", {
        get: function () { return this.customMirror$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).Character.customPlaygroundQuickLook*/
    Character.prototype.customPlaygroundQuickLook$get = function () {
        throw 'unsupported variable Swift.(file).Character.customPlaygroundQuickLook in ' + this.constructor.name;
    };
    Object.defineProperty(Character.prototype, "customPlaygroundQuickLook", {
        get: function () { return this.customPlaygroundQuickLook$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).Character.write(to:Target)*/
    /*Swift.(file).TextOutputStreamable.write(to:Target)*/
    Character.prototype.writeTo = function ($info, target$inout) {
        var _this = this;
        var target = target$inout.get();
        var $result = (function () {
            target.write({ $setThis: function ($val) { return target = $val; } }, _create(String, 'initCharacter', {}, _this));
        })();
        target$inout.set(target);
        return $result;
    };
    /*Swift.(file).Character.isASCII*/
    Character.prototype.isASCII$get = function () {
        var _this = this;
        return Optional.wrappedNotEqualsOptionalNilComparisonType({}, _this.asciiValue, null);
    };
    Object.defineProperty(Character.prototype, "isASCII", {
        get: function () { return this.isASCII$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).Character.asciiValue*/
    Character.prototype.asciiValue$get = function () {
        var _this = this;
        if ((_slowPath({}, Character.infix_61_61({}, _this, "\r\n")))) {
            return 0x000A;
        }
        ;
        if ((_slowPath({}, Bool.infix_124_124({}, Bool.prefix_33({}, _this._isSingleScalar), function () { return UInt32.infix_62_61({}, _this._firstScalar.value, 0x80); })))) {
            return null;
        }
        ;
        return _create(UInt8, 'initT', {}, _this._firstScalar.value);
    };
    Object.defineProperty(Character.prototype, "asciiValue", {
        get: function () { return this.asciiValue$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).Character.isWhitespace*/
    Character.prototype.isWhitespace$get = function () {
        var _this = this;
        return _this._firstScalar.properties.isWhitespace;
    };
    Object.defineProperty(Character.prototype, "isWhitespace", {
        get: function () { return this.isWhitespace$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).Character.isNewline*/
    Character.prototype.isNewline$get = function () {
        var _this = this;
        var $match = _this._firstScalar.value;
        if ((((ClosedRange.infix_126_61({}, UInt32.infix_46_46_46({}, 0x000A, 0x000D), $match))))) {
            return true;
        }
        else if ((((infix_126_61({}, 0x0085, $match))))) {
            return true;
        }
        else if ((((infix_126_61({}, 0x2028, $match))))) {
            return true;
        }
        else if ((((infix_126_61({}, 0x2029, $match))))) {
            return true;
        }
        else if (((true))) {
            return false;
        }
    };
    Object.defineProperty(Character.prototype, "isNewline", {
        get: function () { return this.isNewline$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).Character.isNumber*/
    Character.prototype.isNumber$get = function () {
        var _this = this;
        return Optional.wrappedNotEqualsOptionalNilComparisonType({}, _this._firstScalar.properties.numericType, null);
    };
    Object.defineProperty(Character.prototype, "isNumber", {
        get: function () { return this.isNumber$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).Character.isWholeNumber*/
    Character.prototype.isWholeNumber$get = function () {
        var _this = this;
        return Optional.wrappedNotEqualsOptionalNilComparisonType({}, _this.wholeNumberValue, null);
    };
    Object.defineProperty(Character.prototype, "isWholeNumber", {
        get: function () { return this.isWholeNumber$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).Character.wholeNumberValue*/
    Character.prototype.wholeNumberValue$get = function () {
        var _this = this;
        if (!((_this._isSingleScalar))) {
            return null;
        }
        ;
        var $ifLet0, value_1;
        if (!((($ifLet0 = _this._firstScalar.properties.numericValue) || true) && $ifLet0 != null && ((value_1 = $ifLet0) || true))) {
            return null;
        }
        ;
        return _create(Int, 'initExactlyDouble', {}, value_1);
    };
    Object.defineProperty(Character.prototype, "wholeNumberValue", {
        get: function () { return this.wholeNumberValue$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).Character.isHexDigit*/
    Character.prototype.isHexDigit$get = function () {
        var _this = this;
        return Optional.wrappedNotEqualsOptionalNilComparisonType({}, _this.hexDigitValue, null);
    };
    Object.defineProperty(Character.prototype, "isHexDigit", {
        get: function () { return this.isHexDigit$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).Character.hexDigitValue*/
    Character.prototype.hexDigitValue$get = function () {
        var _this = this;
        if (!((_this._isSingleScalar))) {
            return null;
        }
        ;
        var value = _this._firstScalar.value;
        var $match = value;
        if ((((ClosedRange.infix_126_61({}, UInt32.infix_46_46_46({}, 0x0030, 0x0039), $match))))) {
            return _create(Int, 'initT', {}, UInt32.infix_38_45({}, value, 0x0030));
        }
        else if ((((ClosedRange.infix_126_61({}, UInt32.infix_46_46_46({}, 0x0041, 0x0046), $match))))) {
            return _create(Int, 'initT', {}, UInt32.infix_38_45({}, UInt32.infix_38_43({}, value, 10), 0x0041));
        }
        else if ((((ClosedRange.infix_126_61({}, UInt32.infix_46_46_46({}, 0x0061, 0x0066), $match))))) {
            return _create(Int, 'initT', {}, UInt32.infix_38_45({}, UInt32.infix_38_43({}, value, 10), 0x0061));
        }
        else if ((((ClosedRange.infix_126_61({}, UInt32.infix_46_46_46({}, 0xFF10, 0xFF19), $match))))) {
            return _create(Int, 'initT', {}, UInt32.infix_38_45({}, value, 0xFF10));
        }
        else if ((((ClosedRange.infix_126_61({}, UInt32.infix_46_46_46({}, 0xFF21, 0xFF26), $match))))) {
            return _create(Int, 'initT', {}, UInt32.infix_38_45({}, UInt32.infix_38_43({}, value, 10), 0xFF21));
        }
        else if ((((ClosedRange.infix_126_61({}, UInt32.infix_46_46_46({}, 0xFF41, 0xFF46), $match))))) {
            return _create(Int, 'initT', {}, UInt32.infix_38_45({}, UInt32.infix_38_43({}, value, 10), 0xFF41));
        }
        else if (((true))) {
            return null;
        }
    };
    Object.defineProperty(Character.prototype, "hexDigitValue", {
        get: function () { return this.hexDigitValue$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).Character.isLetter*/
    Character.prototype.isLetter$get = function () {
        var _this = this;
        return _this._firstScalar.properties.isAlphabetic;
    };
    Object.defineProperty(Character.prototype, "isLetter", {
        get: function () { return this.isLetter$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).Character.uppercased()*/
    /*Swift.(file).Character.uppercased()*/
    Character.prototype.uppercased = function ($info) {
        var _this = this;
        return _create(String, 'initCharacter', {}, _this).uppercased({});
    };
    /*Swift.(file).Character.lowercased()*/
    /*Swift.(file).Character.lowercased()*/
    Character.prototype.lowercased = function ($info) {
        var _this = this;
        return _create(String, 'initCharacter', {}, _this).lowercased({});
    };
    /*Swift.(file).Character.isUppercase*/
    Character.prototype.isUppercase$get = function () {
        var _this = this;
        if ((_fastPath({}, Bool.infix_38_38({}, _this._isSingleScalar, function () { return _this._firstScalar.properties.isUppercase; })))) {
            return true;
        }
        ;
        return Bool.infix_38_38({}, _this._isUppercased, function () { return _this.isCased; });
    };
    Object.defineProperty(Character.prototype, "isUppercase", {
        get: function () { return this.isUppercase$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).Character.isLowercase*/
    Character.prototype.isLowercase$get = function () {
        var _this = this;
        if ((_fastPath({}, Bool.infix_38_38({}, _this._isSingleScalar, function () { return _this._firstScalar.properties.isLowercase; })))) {
            return true;
        }
        ;
        return Bool.infix_38_38({}, _this._isLowercased, function () { return _this.isCased; });
    };
    Object.defineProperty(Character.prototype, "isLowercase", {
        get: function () { return this.isLowercase$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).Character.isCased*/
    Character.prototype.isCased$get = function () {
        var _this = this;
        if ((_fastPath({}, Bool.infix_38_38({}, _this._isSingleScalar, function () { return _this._firstScalar.properties.isCased; })))) {
            return true;
        }
        ;
        return Bool.infix_124_124({}, Bool.prefix_33({}, _this._isUppercased), function () { return Bool.prefix_33({}, _this._isLowercased); });
    };
    Object.defineProperty(Character.prototype, "isCased", {
        get: function () { return this.isCased$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).Character.isSymbol*/
    Character.prototype.isSymbol$get = function () {
        var _this = this;
        return _this._firstScalar.properties.generalCategory._isSymbol;
    };
    Object.defineProperty(Character.prototype, "isSymbol", {
        get: function () { return this.isSymbol$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).Character.isMathSymbol*/
    Character.prototype.isMathSymbol$get = function () {
        var _this = this;
        return _this._firstScalar.properties.isMath;
    };
    Object.defineProperty(Character.prototype, "isMathSymbol", {
        get: function () { return this.isMathSymbol$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).Character.isCurrencySymbol*/
    Character.prototype.isCurrencySymbol$get = function () {
        var _this = this;
        return Unicode.GeneralCategory.infix_61_61({}, _this._firstScalar.properties.generalCategory, Unicode.GeneralCategory.currencySymbol);
    };
    Object.defineProperty(Character.prototype, "isCurrencySymbol", {
        get: function () { return this.isCurrencySymbol$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).Character.isPunctuation*/
    Character.prototype.isPunctuation$get = function () {
        var _this = this;
        return _this._firstScalar.properties.generalCategory._isPunctuation;
    };
    Object.defineProperty(Character.prototype, "isPunctuation", {
        get: function () { return this.isPunctuation$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    Character.prototype.init$vars = function () {
    };
    Character.$struct = true;
    Character.$infoAddress = '';
    return Character;
}());
if (typeof _ExpressibleByBuiltinExtendedGraphemeClusterLiteral$implementation != 'undefined')
    _mixin(Character, _ExpressibleByBuiltinExtendedGraphemeClusterLiteral$implementation, false);
if (typeof ExpressibleByExtendedGraphemeClusterLiteral$implementation != 'undefined')
    _mixin(Character, ExpressibleByExtendedGraphemeClusterLiteral$implementation, false);
if (typeof CustomStringConvertible$implementation != 'undefined')
    _mixin(Character, CustomStringConvertible$implementation, false);
if (typeof LosslessStringConvertible$implementation != 'undefined')
    _mixin(Character, LosslessStringConvertible$implementation, false);
if (typeof CustomDebugStringConvertible$implementation != 'undefined')
    _mixin(Character, CustomDebugStringConvertible$implementation, false);
if (typeof Equatable$implementation != 'undefined')
    _mixin(Character, Equatable$implementation, false);
if (typeof Comparable$implementation != 'undefined')
    _mixin(Character, Comparable$implementation, false);
if (typeof Hashable$implementation != 'undefined')
    _mixin(Character, Hashable$implementation, false);
if (typeof CustomReflectable$implementation != 'undefined')
    _mixin(Character, CustomReflectable$implementation, false);
if (typeof _CustomPlaygroundQuickLookable$implementation != 'undefined')
    _mixin(Character, _CustomPlaygroundQuickLookable$implementation, false);
if (typeof TextOutputStreamable$implementation != 'undefined')
    _mixin(Character, TextOutputStreamable$implementation, false);
var MIO_Mixin_Dictionary = /** @class */ (function () {
    function MIO_Mixin_Dictionary() {
    }
    MIO_Mixin_Dictionary.prototype.cloneStructFill = function ($info, obj) {
        var _this_1 = this;
        obj.forEach(function (val, prop) { return _this_1.set(prop, _cloneStruct(val)); });
    };
    /*Swift.(file).Dictionary.init(_native:_NativeDictionary<Key, Value>)*/
    /*Swift.(file).Dictionary.init(_native:_NativeDictionary<Key, Value>)*/
    MIO_Mixin_Dictionary.prototype.init_native_NativeDictionary = function ($info, _native) {
        throw 'unsupported method Swift.(file).Dictionary.init(_native:_NativeDictionary<Key, Value>) in ' + this.constructor.name;
    };
    /*Swift.(file).Dictionary.init(_cocoa:_CocoaDictionary)*/
    /*Swift.(file).Dictionary.init(_cocoa:_CocoaDictionary)*/
    MIO_Mixin_Dictionary.prototype.init_cocoa_CocoaDictionary = function ($info, _cocoa) {
        throw 'unsupported method Swift.(file).Dictionary.init(_cocoa:_CocoaDictionary) in ' + this.constructor.name;
    };
    /*Swift.(file).Dictionary.init(_immutableCocoaDictionary:AnyObject)*/
    /*Swift.(file).Dictionary.init(_immutableCocoaDictionary:AnyObject)*/
    MIO_Mixin_Dictionary.prototype.init_immutableCocoaDictionaryAnyObject = function ($info, _immutableCocoaDictionary) {
        throw 'unsupported method Swift.(file).Dictionary.init(_immutableCocoaDictionary:AnyObject) in ' + this.constructor.name;
    };
    /*Swift.(file).Dictionary.init()*/
    /*Swift.(file).Dictionary.init()*/
    MIO_Mixin_Dictionary.prototype.init = function ($info) {
        return new Map();
    };
    /*Swift.(file).Dictionary.init(minimumCapacity:Int)*/
    /*Swift.(file).Dictionary.init(minimumCapacity:Int)*/
    MIO_Mixin_Dictionary.prototype.initMinimumCapacityInt = function ($info, minimumCapacity) {
        throw 'unsupported method Swift.(file).Dictionary.init(minimumCapacity:Int) in ' + this.constructor.name;
    };
    /*Swift.(file).Dictionary.init(uniqueKeysWithValues:S)*/
    /*Swift.(file).Dictionary.init(uniqueKeysWithValues:S)*/
    MIO_Mixin_Dictionary.prototype.initUniqueKeysWithValues = function ($info, keysAndValues) {
        var _this = this;
        var $ifLet0, d_1;
        if ((($ifLet0 = keysAndValues) || true) && $ifLet0 != null && ((d_1 = $ifLet0) || true)) {
            return _cloneStruct(_cloneStruct(d_1));
            return;
        }
        ;
        var _native = _create(_NativeDictionary, 'initCapacityInt', {}, keysAndValues.underestimatedCount);
        _native.mergeIsUniqueUniquingKeysWith({ $setThis: function ($val) { return _native = $val; } }, keysAndValues, true, (function ($info, _, _) {
            throw _MergeError.keyCollision;
        }));
        _this.init_native_NativeDictionary({}, _native);
        return;
    };
    /*Swift.(file).Dictionary.init(_:S,uniquingKeysWith:(Value, Value) throws -> Value)*/
    /*Swift.(file).Dictionary.init(_:S,uniquingKeysWith:(Value, Value) throws -> Value)*/
    MIO_Mixin_Dictionary.prototype.initUniquingKeysWithfunction_type = function ($info, keysAndValues, combine) {
        var _this = this;
        var _native = _create(_NativeDictionary, 'initCapacityInt', {}, keysAndValues.underestimatedCount);
        _native.mergeIsUniqueUniquingKeysWith({ $setThis: function ($val) { return _native = $val; } }, keysAndValues, true, combine);
        _this.init_native_NativeDictionary({}, _native);
        return;
    };
    /*Swift.(file).Dictionary.init(grouping:S,by:(S.Element) throws -> Key)*/
    /*Swift.(file).Dictionary.init(grouping:S,by:(S.Element) throws -> Key)*/
    MIO_Mixin_Dictionary.prototype.initGroupingByfunction_type = function ($info, values, keyForValue) {
        var _this = this;
        _this.init_native_NativeDictionary({}, _create(_NativeDictionary, 'initGroupingByfunction_type', {}, values, keyForValue));
        return;
    };
    /*Swift.(file).Dictionary.encode(to:Encoder)*/
    /*Swift.(file).Encodable.encode(to:Encoder)*/
    MIO_Mixin_Dictionary.prototype.encodeTo = function ($info, encoder) {
        throw 'unsupported method Swift.(file).Dictionary.encode(to:Encoder) in ' + this.constructor.name;
    };
    /*Swift.(file).Dictionary.init(from:Decoder)*/
    /*Swift.(file).Decodable.init(from:Decoder)*/
    MIO_Mixin_Dictionary.prototype.initFromDecoder = function ($info, decoder) {
        throw 'unsupported method Swift.(file).Dictionary.init(from:Decoder) in ' + this.constructor.name;
    };
    /*Swift.(file).Dictionary.makeIterator()*/
    /*Swift.(file).Sequence.makeIterator()*/
    /*Swift.(file).Collection.makeIterator()*/
    MIO_Mixin_Dictionary.prototype.makeIterator = function ($info) {
        var _this_1 = this;
        //TODO use _create for Array
        //TODO change SwiftIterator because now only Dictionary is using it to use js Map.iterator (much faster)
        //TODO preferably move to Swift and use the proper Iterator (then remove SwiftIterator.js too)
        //WRAP_OPTIONALS
        //return new SwiftIterator((current) => _injectIntoOptional(Array.from(this)[current]))
        //!WRAP_OPTIONALS
        return new SwiftIterator(function (current) { return Array.from(_this_1)[current]; });
    };
    /*Swift.(file).Dictionary.filter(_:(Dictionary<Key, Value>.Element) throws -> Bool)*/
    /*Swift.(file).Dictionary.filter(_:(Dictionary<Key, Value>.Element) throws -> Bool)*/
    MIO_Mixin_Dictionary.prototype.filterSwift = function ($info, isIncluded) {
        var _this = this;
        var result = _create(Dictionary, 'init', {});
        {
            var $element$generator_10 = _cloneStruct(_this.makeIterator({}));
            while (true) {
                var $ifLet0, _element_1;
                if (!((($ifLet0 = $element$generator_10.next({ $setThis: function ($val) { return $element$generator_10 = $val; } })) || true) && $ifLet0 != null && ((_element_1 = $ifLet0) || true)))
                    break;
                if ((isIncluded({}, _element_1))) {
                    result.subscript$set({ $setThis: function ($val) { return result = $val; } }, _element_1["1"], _element_1["0"]);
                }
                ;
            }
        }
        ;
        return result;
    };
    /*Swift.(file).Dictionary.startIndex*/
    MIO_Mixin_Dictionary.prototype.startIndex$get = function () {
        throw 'unsupported variable Swift.(file).Dictionary.startIndex in ' + this.constructor.name;
    };
    Object.defineProperty(MIO_Mixin_Dictionary.prototype, "startIndex", {
        get: function () { return this.startIndex$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).Dictionary.endIndex*/
    MIO_Mixin_Dictionary.prototype.endIndex$get = function () {
        throw 'unsupported variable Swift.(file).Dictionary.endIndex in ' + this.constructor.name;
    };
    Object.defineProperty(MIO_Mixin_Dictionary.prototype, "endIndex", {
        get: function () { return this.endIndex$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).Dictionary.index(after:Dictionary<Key, Value>.Index)*/
    /*Swift.(file).Collection.index(after:Self.Index)*/
    MIO_Mixin_Dictionary.prototype.indexAfter = function ($info, i) {
        throw 'unsupported method Swift.(file).Dictionary.index(after:Dictionary<Key, Value>.Index) in ' + this.constructor.name;
    };
    /*Swift.(file).Dictionary.formIndex(after:Dictionary<Key, Value>.Index)*/
    /*Swift.(file).Collection.formIndex(after:Self.Index)*/
    MIO_Mixin_Dictionary.prototype.formIndexAfter = function ($info, i$inout) {
        var _this = this;
        var i = i$inout.get();
        var $result = (function () {
            i = _this.indexAfter({}, i);
        })();
        i$inout.set(i);
        return $result;
    };
    /*Swift.(file).Dictionary.index(forKey:Key)*/
    /*Swift.(file).Dictionary.index(forKey:Key)*/
    MIO_Mixin_Dictionary.prototype.indexForKey = function ($info, key) {
        throw 'unsupported method Swift.(file).Dictionary.index(forKey:Key) in ' + this.constructor.name;
    };
    /*Swift.(file).Dictionary.subscript(_:Dictionary<Key, Value>.Index)*/
    /*Swift.(file).Collection.subscript(_:Self.Index)*/
    MIO_Mixin_Dictionary.prototype.subscript$get = function ($info, position) {
        //WRAP_OPTIONALS
        //if(this.has(position)) return Optional.some({}, this.get(position))
        //return Optional.none
        //!WRAP_OPTIONALS
        return this.get(position);
    };
    /*Swift.(file).Dictionary.count*/
    MIO_Mixin_Dictionary.prototype.count$get = function () {
        return this.size;
    };
    Object.defineProperty(MIO_Mixin_Dictionary.prototype, "count", {
        get: function () { return this.count$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).Dictionary.isEmpty*/
    MIO_Mixin_Dictionary.prototype.isEmpty$get = function () {
        var _this = this;
        return (_.arg0 = _this.startIndex).constructor.infix_61_61({}, _.arg0, _this.endIndex);
    };
    Object.defineProperty(MIO_Mixin_Dictionary.prototype, "isEmpty", {
        get: function () { return this.isEmpty$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).Dictionary.subscript(_:Key)*/
    /*Swift.(file).Dictionary.subscript(_:Key)*/
    MIO_Mixin_Dictionary.prototype.subscript$get = function ($info, key) {
        //WRAP_OPTIONALS
        //if(this.has(key)) return Optional.some({}, this.get(key))
        //return Optional.none
        //!WRAP_OPTIONALS
        return this.get(key);
    }; /*Swift.(file).Dictionary.subscript(_:Key)*/
    /*Swift.(file).Dictionary.subscript(_:Key)*/
    MIO_Mixin_Dictionary.prototype.subscript$set = function ($info, newValue, key) {
        //WRAP_OPTIONALS
        //if(newValue.rawValue === 'none') this.delete(key)
        //!WRAP_OPTIONALS
        if (newValue == null)
            this["delete"](key);
        else
            this.set(key, _cloneStruct(newValue[0]));
    }; /*Swift.(file).Dictionary.subscript(_:Key)*/
    /*Swift.(file).Dictionary.subscript(_:Key)*/
    MIO_Mixin_Dictionary.prototype.subscript$_modify = function ($info, key) {
        //WRAP_OPTIONALS
        //if(this.has(key)) return Optional.some({}, this.get(key))
        //return Optional.none
        //!WRAP_OPTIONALS
        return this.get(key);
    };
    /*Swift.(file).Dictionary.init(dictionaryLiteral:[(Key, Value)])*/
    /*Swift.(file).ExpressibleByDictionaryLiteral.init(dictionaryLiteral:[(Self.Key, Self.Value)])*/
    MIO_Mixin_Dictionary.prototype.initDictionaryLiteralArray = function ($info, _elements) {
        throw 'unsupported method Swift.(file).Dictionary.init(dictionaryLiteral:[(Key, Value)]) in ' + this.constructor.name;
    };
    /*Swift.(file).Dictionary.subscript(_:Key,default:() -> Value)*/
    /*Swift.(file).Dictionary.subscript(_:Key,default:() -> Value)*/
    MIO_Mixin_Dictionary.prototype.subscriptDefault$get = function ($info, key, defaultValue) {
        throw 'unsupported method Swift.(file).Dictionary.subscript(_:Key,default:() -> Value) in ' + this.constructor.name;
    }; /*Swift.(file).Dictionary.subscript(_:Key,default:() -> Value)*/
    /*Swift.(file).Dictionary.subscript(_:Key,default:() -> Value)*/
    MIO_Mixin_Dictionary.prototype.subscriptDefault$_modify = function ($info, key, defaultValue) {
        throw 'unsupported method Swift.(file).Dictionary.subscript(_:Key,default:() -> Value) in ' + this.constructor.name;
    };
    /*Swift.(file).Dictionary.mapValues(_:(Value) throws -> T)*/
    /*Swift.(file).Dictionary.mapValues(_:(Value) throws -> T)*/
    MIO_Mixin_Dictionary.prototype.mapValues = function ($info, transform) {
        throw 'unsupported method Swift.(file).Dictionary.mapValues(_:(Value) throws -> T) in ' + this.constructor.name;
    };
    /*Swift.(file).Dictionary.compactMapValues(_:(Value) throws -> T?)*/
    /*Swift.(file).Dictionary.compactMapValues(_:(Value) throws -> T?)*/
    MIO_Mixin_Dictionary.prototype.compactMapValues = function ($info, transform) {
        throw 'unsupported method Swift.(file).Dictionary.compactMapValues(_:(Value) throws -> T?) in ' + this.constructor.name;
    };
    /*Swift.(file).Dictionary.updateValue(_:Value,forKey:Key)*/
    /*Swift.(file).Dictionary.updateValue(_:Value,forKey:Key)*/
    MIO_Mixin_Dictionary.prototype.updateValueForKey = function ($info, value, key) {
        throw 'unsupported method Swift.(file).Dictionary.updateValue(_:Value,forKey:Key) in ' + this.constructor.name;
    };
    /*Swift.(file).Dictionary.merge(_:S,uniquingKeysWith:(Value, Value) throws -> Value)*/
    /*Swift.(file).Dictionary.merge(_:S,uniquingKeysWith:(Value, Value) throws -> Value)*/
    MIO_Mixin_Dictionary.prototype.mergeUniquingKeysWith = function ($info, other, combine) {
        throw 'unsupported method Swift.(file).Dictionary.merge(_:S,uniquingKeysWith:(Value, Value) throws -> Value) in ' + this.constructor.name;
    };
    /*Swift.(file).Dictionary.merge(_:[Key : Value],uniquingKeysWith:(Value, Value) throws -> Value)*/
    /*Swift.(file).Dictionary.merge(_:[Key : Value],uniquingKeysWith:(Value, Value) throws -> Value)*/
    MIO_Mixin_Dictionary.prototype.mergeUniquingKeysWith = function ($info, other, combine) {
        throw 'unsupported method Swift.(file).Dictionary.merge(_:[Key : Value],uniquingKeysWith:(Value, Value) throws -> Value) in ' + this.constructor.name;
    };
    /*Swift.(file).Dictionary.merging(_:S,uniquingKeysWith:(Value, Value) throws -> Value)*/
    /*Swift.(file).Dictionary.merging(_:S,uniquingKeysWith:(Value, Value) throws -> Value)*/
    MIO_Mixin_Dictionary.prototype.mergingUniquingKeysWith = function ($info, other, combine) {
        throw 'unsupported method Swift.(file).Dictionary.merging(_:S,uniquingKeysWith:(Value, Value) throws -> Value) in ' + this.constructor.name;
    };
    /*Swift.(file).Dictionary.merging(_:[Key : Value],uniquingKeysWith:(Value, Value) throws -> Value)*/
    /*Swift.(file).Dictionary.merging(_:[Key : Value],uniquingKeysWith:(Value, Value) throws -> Value)*/
    MIO_Mixin_Dictionary.prototype.mergingUniquingKeysWith = function ($info, other, combine) {
        throw 'unsupported method Swift.(file).Dictionary.merging(_:[Key : Value],uniquingKeysWith:(Value, Value) throws -> Value) in ' + this.constructor.name;
    };
    /*Swift.(file).Dictionary.remove(at:Dictionary<Key, Value>.Index)*/
    /*Swift.(file).Dictionary.remove(at:Dictionary<Key, Value>.Index)*/
    MIO_Mixin_Dictionary.prototype.removeAt = function ($info, index) {
        throw 'unsupported method Swift.(file).Dictionary.remove(at:Dictionary<Key, Value>.Index) in ' + this.constructor.name;
    };
    /*Swift.(file).Dictionary.removeValue(forKey:Key)*/
    /*Swift.(file).Dictionary.removeValue(forKey:Key)*/
    MIO_Mixin_Dictionary.prototype.removeValueForKey = function ($info, key) {
        throw 'unsupported method Swift.(file).Dictionary.removeValue(forKey:Key) in ' + this.constructor.name;
    };
    /*Swift.(file).Dictionary.removeAll(keepingCapacity:Bool)*/
    /*Swift.(file).Dictionary.removeAll(keepingCapacity:Bool)*/
    MIO_Mixin_Dictionary.prototype.removeAllKeepingCapacity = function ($info, keepCapacity) {
        throw 'unsupported method Swift.(file).Dictionary.removeAll(keepingCapacity:Bool) in ' + this.constructor.name;
    };
    /*Swift.(file).Dictionary.keys*/
    MIO_Mixin_Dictionary.prototype.keys$get = function () {
        throw 'unsupported variable Swift.(file).Dictionary.keys in ' + this.constructor.name;
    };
    Object.defineProperty(MIO_Mixin_Dictionary.prototype, "keys", {
        get: function () { return this.keys$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).Dictionary.values*/
    MIO_Mixin_Dictionary.prototype.values$get = function () {
        throw 'unsupported variable Swift.(file).Dictionary.values in ' + this.constructor.name;
    };
    Object.defineProperty(MIO_Mixin_Dictionary.prototype, "values", {
        get: function () { return this.values$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).Dictionary.==infix(_:[Key : Value],_:[Key : Value])*/
    /*Swift.(file).Equatable.==infix(_:Self,_:Self)*/
    MIO_Mixin_Dictionary.infix_61_61 = function ($info, lhs, rhs) {
        return lhs == rhs;
    };
    /*Swift.(file).Dictionary.hash(into:Hasher)*/
    /*Swift.(file).Hashable.hash(into:Hasher)*/
    MIO_Mixin_Dictionary.prototype.hashInto = function ($info, hasher$inout) {
        throw 'unsupported method Swift.(file).Dictionary.hash(into:Hasher) in ' + this.constructor.name;
    };
    /*Swift.(file).Dictionary.hashValue*/
    MIO_Mixin_Dictionary.prototype.hashValue$get = function () {
        throw 'unsupported variable Swift.(file).Dictionary.hashValue in ' + this.constructor.name;
    };
    Object.defineProperty(MIO_Mixin_Dictionary.prototype, "hashValue", {
        get: function () { return this.hashValue$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).Dictionary.description*/
    MIO_Mixin_Dictionary.prototype.description$get = function () {
        throw 'unsupported variable Swift.(file).Dictionary.description in ' + this.constructor.name;
    };
    Object.defineProperty(MIO_Mixin_Dictionary.prototype, "description", {
        get: function () { return this.description$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).Dictionary.debugDescription*/
    MIO_Mixin_Dictionary.prototype.debugDescription$get = function () {
        throw 'unsupported variable Swift.(file).Dictionary.debugDescription in ' + this.constructor.name;
    };
    Object.defineProperty(MIO_Mixin_Dictionary.prototype, "debugDescription", {
        get: function () { return this.debugDescription$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).Dictionary.customMirror*/
    MIO_Mixin_Dictionary.prototype.customMirror$get = function () {
        throw 'unsupported variable Swift.(file).Dictionary.customMirror in ' + this.constructor.name;
    };
    Object.defineProperty(MIO_Mixin_Dictionary.prototype, "customMirror", {
        get: function () { return this.customMirror$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).Dictionary.popFirst()*/
    /*Swift.(file).Dictionary.popFirst()*/
    MIO_Mixin_Dictionary.prototype.popFirst = function ($info) {
        throw 'unsupported method Swift.(file).Dictionary.popFirst() in ' + this.constructor.name;
    };
    /*Swift.(file).Dictionary.capacity*/
    MIO_Mixin_Dictionary.prototype.capacity$get = function () {
        throw 'unsupported variable Swift.(file).Dictionary.capacity in ' + this.constructor.name;
    };
    Object.defineProperty(MIO_Mixin_Dictionary.prototype, "capacity", {
        get: function () { return this.capacity$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).Dictionary.reserveCapacity(_:Int)*/
    /*Swift.(file).Dictionary.reserveCapacity(_:Int)*/
    MIO_Mixin_Dictionary.prototype.reserveCapacity = function ($info, minimumCapacity) {
        throw 'unsupported method Swift.(file).Dictionary.reserveCapacity(_:Int) in ' + this.constructor.name;
    };
    /*Swift.(file).Dictionary.init(_unsafeUninitializedCapacity:Int,allowingDuplicates:Bool,initializingWith:(UnsafeMutableBufferPointer<Key>, UnsafeMutableBufferPointer<Value>, inout Int) -> Void)*/
    /*Swift.(file).Dictionary.init(_unsafeUninitializedCapacity:Int,allowingDuplicates:Bool,initializingWith:(UnsafeMutableBufferPointer<Key>, UnsafeMutableBufferPointer<Value>, inout Int) -> Void)*/
    MIO_Mixin_Dictionary.prototype.init_unsafeUninitializedCapacityIntAllowingDuplicatesBoolInitializingWithfunction_type = function ($info, capacity, allowingDuplicates, initializer) {
        var _this = this;
        _this.init_native_NativeDictionary({}, _create(_NativeDictionary, 'init_unsafeUninitializedCapacityIntAllowingDuplicatesBoolInitializingWithfunction_type', {}, capacity, allowingDuplicates, initializer));
        return;
    };
    MIO_Mixin_Dictionary.prototype.init$vars = function () {
    };
    var _23, _24, _25, _26, _27, _28, _29, _30, _31;
    MIO_Mixin_Dictionary.$struct = true;
    MIO_Mixin_Dictionary.$mixin = true;
    MIO_Mixin_Dictionary.$infoAddress = '';
    MIO_Mixin_Dictionary.Keys = (_23 = /** @class */ (function () {
            function class_47() {
            }
            /*Swift.(file).Dictionary.Keys.init(_dictionary:Dictionary<Key, Value>)*/
            /*Swift.(file).Dictionary.Keys.init(_dictionary:Dictionary<Key, Value>)*/
            class_47.prototype.init_dictionaryDictionary = function ($info, _dictionary) {
                throw 'unsupported method Swift.(file).Dictionary.Keys.init(_dictionary:Dictionary<Key, Value>) in ' + this.constructor.name;
            };
            /*Swift.(file).Dictionary.Keys.startIndex*/
            class_47.prototype.startIndex$get = function () {
                throw 'unsupported variable Swift.(file).Dictionary.Keys.startIndex in ' + this.constructor.name;
            };
            Object.defineProperty(class_47.prototype, "startIndex", {
                get: function () { return this.startIndex$get(); },
                enumerable: true,
                configurable: true
            });
            ;
            /*Swift.(file).Dictionary.Keys.endIndex*/
            class_47.prototype.endIndex$get = function () {
                throw 'unsupported variable Swift.(file).Dictionary.Keys.endIndex in ' + this.constructor.name;
            };
            Object.defineProperty(class_47.prototype, "endIndex", {
                get: function () { return this.endIndex$get(); },
                enumerable: true,
                configurable: true
            });
            ;
            /*Swift.(file).Dictionary.Keys.index(after:Dictionary<Key, Value>.Index)*/
            /*Swift.(file).Collection.index(after:Self.Index)*/
            class_47.prototype.indexAfter = function ($info, i) {
                throw 'unsupported method Swift.(file).Dictionary.Keys.index(after:Dictionary<Key, Value>.Index) in ' + this.constructor.name;
            };
            /*Swift.(file).Dictionary.Keys.formIndex(after:Dictionary<Key, Value>.Index)*/
            /*Swift.(file).Collection.formIndex(after:Self.Index)*/
            class_47.prototype.formIndexAfter = function ($info, i$inout) {
                var _this = this;
                var i = i$inout.get();
                var $result = (function () {
                    i = _this.indexAfter({}, i);
                })();
                i$inout.set(i);
                return $result;
            };
            /*Swift.(file).Dictionary.Keys.subscript(_:Dictionary<Key, Value>.Index)*/
            /*Swift.(file).Collection.subscript(_:Self.Index)*/
            class_47.prototype.subscript$get = function ($info, position) {
                throw 'unsupported method Swift.(file).Dictionary.Keys.subscript(_:Dictionary<Key, Value>.Index) in ' + this.constructor.name;
            };
            /*Swift.(file).Dictionary.Keys.count*/
            class_47.prototype.count$get = function () {
                var _this = this;
                return _this.distanceFromTo({}, _this.startIndex, _this.endIndex);
            };
            Object.defineProperty(class_47.prototype, "count", {
                get: function () { return this.count$get(); },
                enumerable: true,
                configurable: true
            });
            ;
            /*Swift.(file).Dictionary.Keys.isEmpty*/
            class_47.prototype.isEmpty$get = function () {
                var _this = this;
                return (_.arg0 = _this.startIndex).constructor.infix_61_61({}, _.arg0, _this.endIndex);
            };
            Object.defineProperty(class_47.prototype, "isEmpty", {
                get: function () { return this.isEmpty$get(); },
                enumerable: true,
                configurable: true
            });
            ;
            /*Swift.(file).Dictionary.Keys.==infix(_:Dictionary<Key, Value>.Keys,_:Dictionary<Key, Value>.Keys)*/
            /*Swift.(file).Equatable.==infix(_:Self,_:Self)*/
            class_47.infix_61_61 = function ($info, lhs, rhs) {
                return lhs == rhs;
            };
            /*Swift.(file).Dictionary.Keys.description*/
            class_47.prototype.description$get = function () {
                throw 'unsupported variable Swift.(file).Dictionary.Keys.description in ' + this.constructor.name;
            };
            Object.defineProperty(class_47.prototype, "description", {
                get: function () { return this.description$get(); },
                enumerable: true,
                configurable: true
            });
            ;
            /*Swift.(file).Dictionary.Keys.debugDescription*/
            class_47.prototype.debugDescription$get = function () {
                throw 'unsupported variable Swift.(file).Dictionary.Keys.debugDescription in ' + this.constructor.name;
            };
            Object.defineProperty(class_47.prototype, "debugDescription", {
                get: function () { return this.debugDescription$get(); },
                enumerable: true,
                configurable: true
            });
            ;
            /*Swift.(file).Dictionary.Keys.makeIterator()*/
            /*Swift.(file).Collection.makeIterator()*/
            /*Swift.(file).Sequence.makeIterator()*/
            class_47.prototype.makeIterator = function ($info) {
                var _this = this;
                return _create(IndexingIterator, 'init_elements', {}, _this);
            };
            class_47.prototype.init$vars = function () {
            };
            return class_47;
        }()),
        _23.$struct = true,
        _23.$infoAddress = '',
        _23.Iterator = (_24 = /** @class */ (function () {
                function class_48() {
                }
                /*Swift.(file).Dictionary.Keys.Iterator.init(_:Dictionary<Key, Value>.Iterator)*/
                /*Swift.(file).Dictionary.Keys.Iterator.init(_:Dictionary<Key, Value>.Iterator)*/
                class_48.prototype.initDictionaryIterator = function ($info, base) {
                    throw 'unsupported method Swift.(file).Dictionary.Keys.Iterator.init(_:Dictionary<Key, Value>.Iterator) in ' + this.constructor.name;
                };
                /*Swift.(file).Dictionary.Keys.Iterator.next()*/
                /*Swift.(file).IteratorProtocol.next()*/
                class_48.prototype.next = function ($info) {
                    throw 'unsupported method Swift.(file).Dictionary.Keys.Iterator.next() in ' + this.constructor.name;
                };
                class_48.prototype.init$vars = function () {
                };
                return class_48;
            }()),
            _24.$struct = true,
            _24.$infoAddress = '',
            _24),
        _23);
    MIO_Mixin_Dictionary.Values = (_25 = /** @class */ (function () {
            function class_49() {
            }
            /*Swift.(file).Dictionary.Values.init(_variant:Dictionary<Key, Value>._Variant)*/
            /*Swift.(file).Dictionary.Values.init(_variant:Dictionary<Key, Value>._Variant)*/
            class_49.prototype.init_variantDictionary_Variant = function ($info, _variant) {
                throw 'unsupported method Swift.(file).Dictionary.Values.init(_variant:Dictionary<Key, Value>._Variant) in ' + this.constructor.name;
            };
            /*Swift.(file).Dictionary.Values.init(_dictionary:Dictionary<Key, Value>)*/
            /*Swift.(file).Dictionary.Values.init(_dictionary:Dictionary<Key, Value>)*/
            class_49.prototype.init_dictionaryDictionary = function ($info, _dictionary) {
                throw 'unsupported method Swift.(file).Dictionary.Values.init(_dictionary:Dictionary<Key, Value>) in ' + this.constructor.name;
            };
            /*Swift.(file).Dictionary.Values.startIndex*/
            class_49.prototype.startIndex$get = function () {
                throw 'unsupported variable Swift.(file).Dictionary.Values.startIndex in ' + this.constructor.name;
            };
            Object.defineProperty(class_49.prototype, "startIndex", {
                get: function () { return this.startIndex$get(); },
                enumerable: true,
                configurable: true
            });
            ;
            /*Swift.(file).Dictionary.Values.endIndex*/
            class_49.prototype.endIndex$get = function () {
                throw 'unsupported variable Swift.(file).Dictionary.Values.endIndex in ' + this.constructor.name;
            };
            Object.defineProperty(class_49.prototype, "endIndex", {
                get: function () { return this.endIndex$get(); },
                enumerable: true,
                configurable: true
            });
            ;
            /*Swift.(file).Dictionary.Values.index(after:Dictionary<Key, Value>.Index)*/
            /*Swift.(file).Collection.index(after:Self.Index)*/
            class_49.prototype.indexAfter = function ($info, i) {
                throw 'unsupported method Swift.(file).Dictionary.Values.index(after:Dictionary<Key, Value>.Index) in ' + this.constructor.name;
            };
            /*Swift.(file).Dictionary.Values.formIndex(after:Dictionary<Key, Value>.Index)*/
            /*Swift.(file).Collection.formIndex(after:Self.Index)*/
            class_49.prototype.formIndexAfter = function ($info, i$inout) {
                var _this = this;
                var i = i$inout.get();
                var $result = (function () {
                    i = _this.indexAfter({}, i);
                })();
                i$inout.set(i);
                return $result;
            };
            /*Swift.(file).Dictionary.Values.subscript(_:Dictionary<Key, Value>.Index)*/
            /*Swift.(file).MutableCollection.subscript(_:Self.Index)*/
            /*Swift.(file).Collection.subscript(_:Self.Index)*/
            class_49.prototype.subscript$get = function ($info, position) {
                throw 'unsupported method Swift.(file).Dictionary.Values.subscript(_:Dictionary<Key, Value>.Index) in ' + this.constructor.name;
            }; /*Swift.(file).Dictionary.Values.subscript(_:Dictionary<Key, Value>.Index)*/
            /*Swift.(file).MutableCollection.subscript(_:Self.Index)*/
            /*Swift.(file).Collection.subscript(_:Self.Index)*/
            class_49.prototype.subscript$_modify = function ($info, position) {
                throw 'unsupported method Swift.(file).Dictionary.Values.subscript(_:Dictionary<Key, Value>.Index) in ' + this.constructor.name;
            };
            /*Swift.(file).Dictionary.Values.count*/
            class_49.prototype.count$get = function () {
                var _this = this;
                return _this.distanceFromTo({}, _this.startIndex, _this.endIndex);
            };
            Object.defineProperty(class_49.prototype, "count", {
                get: function () { return this.count$get(); },
                enumerable: true,
                configurable: true
            });
            ;
            /*Swift.(file).Dictionary.Values.isEmpty*/
            class_49.prototype.isEmpty$get = function () {
                var _this = this;
                return (_.arg0 = _this.startIndex).constructor.infix_61_61({}, _.arg0, _this.endIndex);
            };
            Object.defineProperty(class_49.prototype, "isEmpty", {
                get: function () { return this.isEmpty$get(); },
                enumerable: true,
                configurable: true
            });
            ;
            /*Swift.(file).Dictionary.Values.description*/
            class_49.prototype.description$get = function () {
                throw 'unsupported variable Swift.(file).Dictionary.Values.description in ' + this.constructor.name;
            };
            Object.defineProperty(class_49.prototype, "description", {
                get: function () { return this.description$get(); },
                enumerable: true,
                configurable: true
            });
            ;
            /*Swift.(file).Dictionary.Values.debugDescription*/
            class_49.prototype.debugDescription$get = function () {
                throw 'unsupported variable Swift.(file).Dictionary.Values.debugDescription in ' + this.constructor.name;
            };
            Object.defineProperty(class_49.prototype, "debugDescription", {
                get: function () { return this.debugDescription$get(); },
                enumerable: true,
                configurable: true
            });
            ;
            /*Swift.(file).Dictionary.Values.swapAt(_:Dictionary<Key, Value>.Index,_:Dictionary<Key, Value>.Index)*/
            /*Swift.(file).MutableCollection.swapAt(_:Self.Index,_:Self.Index)*/
            class_49.prototype.swapAt = function ($info, i, j) {
                var _this = this;
                if (!(((_.arg0 = i).constructor.infix_33_61({}, _.arg0, j)))) {
                    return;
                }
                ;
                var tmp = _this.subscript$get({}, i);
                _this.subscript$set({ $setThis: function ($val) { return $info.$setThis(_this = _cloneStruct($val)); } }, _this.subscript$get({}, j), i);
                _this.subscript$set({ $setThis: function ($val) { return $info.$setThis(_this = _cloneStruct($val)); } }, tmp, j);
            };
            /*Swift.(file).Dictionary.Values.makeIterator()*/
            /*Swift.(file).Collection.makeIterator()*/
            /*Swift.(file).Sequence.makeIterator()*/
            class_49.prototype.makeIterator = function ($info) {
                var _this = this;
                return _create(IndexingIterator, 'init_elements', {}, _this);
            };
            class_49.prototype.init$vars = function () {
            };
            return class_49;
        }()),
        _25.$struct = true,
        _25.$infoAddress = '',
        _25.Iterator = (_26 = /** @class */ (function () {
                function class_50() {
                }
                /*Swift.(file).Dictionary.Values.Iterator.init(_:Dictionary<Key, Value>.Iterator)*/
                /*Swift.(file).Dictionary.Values.Iterator.init(_:Dictionary<Key, Value>.Iterator)*/
                class_50.prototype.initDictionaryIterator = function ($info, base) {
                    throw 'unsupported method Swift.(file).Dictionary.Values.Iterator.init(_:Dictionary<Key, Value>.Iterator) in ' + this.constructor.name;
                };
                /*Swift.(file).Dictionary.Values.Iterator.next()*/
                /*Swift.(file).IteratorProtocol.next()*/
                class_50.prototype.next = function ($info) {
                    throw 'unsupported method Swift.(file).Dictionary.Values.Iterator.next() in ' + this.constructor.name;
                };
                class_50.prototype.init$vars = function () {
                };
                return class_50;
            }()),
            _26.$struct = true,
            _26.$infoAddress = '',
            _26),
        _25);
    MIO_Mixin_Dictionary.Index = (_27 = /** @class */ (function () {
            function class_51() {
            }
            /*Swift.(file).Dictionary.Index.init(_variant:Dictionary<Key, Value>.Index._Variant)*/
            /*Swift.(file).Dictionary.Index.init(_variant:Dictionary<Key, Value>.Index._Variant)*/
            class_51.prototype.init_variantDictionaryIndex_Variant = function ($info, _variant) {
                throw 'unsupported method Swift.(file).Dictionary.Index.init(_variant:Dictionary<Key, Value>.Index._Variant) in ' + this.constructor.name;
            };
            /*Swift.(file).Dictionary.Index.init(_native:_HashTable.Index)*/
            /*Swift.(file).Dictionary.Index.init(_native:_HashTable.Index)*/
            class_51.prototype.init_native_HashTableIndex = function ($info, index) {
                throw 'unsupported method Swift.(file).Dictionary.Index.init(_native:_HashTable.Index) in ' + this.constructor.name;
            };
            /*Swift.(file).Dictionary.Index.init(_cocoa:_CocoaDictionary.Index)*/
            /*Swift.(file).Dictionary.Index.init(_cocoa:_CocoaDictionary.Index)*/
            class_51.prototype.init_cocoa_CocoaDictionaryIndex = function ($info, index) {
                throw 'unsupported method Swift.(file).Dictionary.Index.init(_cocoa:_CocoaDictionary.Index) in ' + this.constructor.name;
            };
            /*Swift.(file).Dictionary.Index.==infix(_:Dictionary<Key, Value>.Index,_:Dictionary<Key, Value>.Index)*/
            /*Swift.(file).Equatable.==infix(_:Self,_:Self)*/
            class_51.infix_61_61 = function ($info, lhs, rhs) {
                return lhs == rhs;
            };
            /*Swift.(file).Dictionary.Index.<infix(_:Dictionary<Key, Value>.Index,_:Dictionary<Key, Value>.Index)*/
            /*Swift.(file).Comparable.<infix(_:Self,_:Self)*/
            class_51.infix_60 = function ($info, lhs, rhs) {
                return lhs < rhs;
            };
            /*Swift.(file).Dictionary.Index.hash(into:Hasher)*/
            /*Swift.(file).Hashable.hash(into:Hasher)*/
            class_51.prototype.hashInto = function ($info, hasher$inout) {
                throw 'unsupported method Swift.(file).Dictionary.Index.hash(into:Hasher) in ' + this.constructor.name;
            };
            /*Swift.(file).Dictionary.Index.hashValue*/
            class_51.prototype.hashValue$get = function () {
                throw 'unsupported variable Swift.(file).Dictionary.Index.hashValue in ' + this.constructor.name;
            };
            Object.defineProperty(class_51.prototype, "hashValue", {
                get: function () { return this.hashValue$get(); },
                enumerable: true,
                configurable: true
            });
            ;
            class_51.prototype.init$vars = function () {
            };
            return class_51;
        }()),
        _27.$struct = true,
        _27.$infoAddress = '',
        _27._Variant = (_28 = /** @class */ (function () {
                function class_52() {
                }
                class_52._native = function () { return Object.assign(new MIO_Mixin_Dictionary.Index._Variant(), __assign({ rawValue: "_native" }, Array.from(arguments).slice(1))); };
                class_52.cocoa = function () { return Object.assign(new MIO_Mixin_Dictionary.Index._Variant(), __assign({ rawValue: "cocoa" }, Array.from(arguments).slice(1))); };
                class_52.prototype.init$vars = function () {
                };
                return class_52;
            }()),
            _28.$infoAddress = '',
            _28),
        _27);
    MIO_Mixin_Dictionary.Iterator = (_29 = /** @class */ (function () {
            function class_53() {
            }
            /*Swift.(file).Dictionary.Iterator.init(_variant:Dictionary<Key, Value>.Iterator._Variant)*/
            /*Swift.(file).Dictionary.Iterator.init(_variant:Dictionary<Key, Value>.Iterator._Variant)*/
            class_53.prototype.init_variantDictionaryIterator_Variant = function ($info, _variant) {
                throw 'unsupported method Swift.(file).Dictionary.Iterator.init(_variant:Dictionary<Key, Value>.Iterator._Variant) in ' + this.constructor.name;
            };
            /*Swift.(file).Dictionary.Iterator.init(_native:_NativeDictionary<Key, Value>.Iterator)*/
            /*Swift.(file).Dictionary.Iterator.init(_native:_NativeDictionary<Key, Value>.Iterator)*/
            class_53.prototype.init_native_NativeDictionaryIterator = function ($info, _native) {
                throw 'unsupported method Swift.(file).Dictionary.Iterator.init(_native:_NativeDictionary<Key, Value>.Iterator) in ' + this.constructor.name;
            };
            /*Swift.(file).Dictionary.Iterator.init(_cocoa:_CocoaDictionary.Iterator)*/
            /*Swift.(file).Dictionary.Iterator.init(_cocoa:_CocoaDictionary.Iterator)*/
            class_53.prototype.init_cocoa_CocoaDictionaryIterator = function ($info, _cocoa) {
                throw 'unsupported method Swift.(file).Dictionary.Iterator.init(_cocoa:_CocoaDictionary.Iterator) in ' + this.constructor.name;
            };
            /*Swift.(file).Dictionary.Iterator.next()*/
            /*Swift.(file).IteratorProtocol.next()*/
            class_53.prototype.next = function ($info) {
                throw 'unsupported method Swift.(file).Dictionary.Iterator.next() in ' + this.constructor.name;
            };
            /*Swift.(file).Dictionary.Iterator.customMirror*/
            class_53.prototype.customMirror$get = function () {
                throw 'unsupported variable Swift.(file).Dictionary.Iterator.customMirror in ' + this.constructor.name;
            };
            Object.defineProperty(class_53.prototype, "customMirror", {
                get: function () { return this.customMirror$get(); },
                enumerable: true,
                configurable: true
            });
            ;
            class_53.prototype.init$vars = function () {
            };
            return class_53;
        }()),
        _29.$struct = true,
        _29.$infoAddress = '',
        _29._Variant = (_30 = /** @class */ (function () {
                function class_54() {
                }
                class_54._native = function () { return Object.assign(new MIO_Mixin_Dictionary.Iterator._Variant(), __assign({ rawValue: "_native" }, Array.from(arguments).slice(1))); };
                class_54.cocoa = function () { return Object.assign(new MIO_Mixin_Dictionary.Iterator._Variant(), __assign({ rawValue: "cocoa" }, Array.from(arguments).slice(1))); };
                class_54.prototype.init$vars = function () {
                };
                return class_54;
            }()),
            _30.$infoAddress = '',
            _30),
        _29);
    MIO_Mixin_Dictionary._Variant = (_31 = /** @class */ (function () {
            function class_55() {
            }
            /*Swift.(file).Dictionary._Variant.object*/
            class_55.prototype.object$get = function () {
                throw 'unsupported variable Swift.(file).Dictionary._Variant.object in ' + this.constructor.name;
            };
            Object.defineProperty(class_55.prototype, "object", {
                get: function () { return this.object$get(); },
                enumerable: true,
                configurable: true
            });
            ;
            /*Swift.(file).Dictionary._Variant.init(native:_NativeDictionary<Key, Value>)*/
            /*Swift.(file).Dictionary._Variant.init(native:_NativeDictionary<Key, Value>)*/
            class_55.prototype.initNative_NativeDictionary = function ($info, _native) {
                throw 'unsupported method Swift.(file).Dictionary._Variant.init(native:_NativeDictionary<Key, Value>) in ' + this.constructor.name;
            };
            /*Swift.(file).Dictionary._Variant.init(dummy:Void)*/
            /*Swift.(file).Dictionary._Variant.init(dummy:Void)*/
            class_55.prototype.initDummyVoid = function ($info, dummy) {
                throw 'unsupported method Swift.(file).Dictionary._Variant.init(dummy:Void) in ' + this.constructor.name;
            };
            /*Swift.(file).Dictionary._Variant.init(cocoa:_CocoaDictionary)*/
            /*Swift.(file).Dictionary._Variant.init(cocoa:_CocoaDictionary)*/
            class_55.prototype.initCocoa_CocoaDictionary = function ($info, cocoa) {
                throw 'unsupported method Swift.(file).Dictionary._Variant.init(cocoa:_CocoaDictionary) in ' + this.constructor.name;
            };
            /*Swift.(file).Dictionary._Variant.guaranteedNative*/
            class_55.prototype.guaranteedNative$get = function () {
                throw 'unsupported variable Swift.(file).Dictionary._Variant.guaranteedNative in ' + this.constructor.name;
            };
            Object.defineProperty(class_55.prototype, "guaranteedNative", {
                get: function () { return this.guaranteedNative$get(); },
                enumerable: true,
                configurable: true
            });
            ;
            /*Swift.(file).Dictionary._Variant.isUniquelyReferenced()*/
            /*Swift.(file).Dictionary._Variant.isUniquelyReferenced()*/
            class_55.prototype.isUniquelyReferenced = function ($info) {
                throw 'unsupported method Swift.(file).Dictionary._Variant.isUniquelyReferenced() in ' + this.constructor.name;
            };
            /*Swift.(file).Dictionary._Variant.isNative*/
            class_55.prototype.isNative$get = function () {
                throw 'unsupported variable Swift.(file).Dictionary._Variant.isNative in ' + this.constructor.name;
            };
            Object.defineProperty(class_55.prototype, "isNative", {
                get: function () { return this.isNative$get(); },
                enumerable: true,
                configurable: true
            });
            ;
            /*Swift.(file).Dictionary._Variant.asNative*/
            class_55.prototype.asNative$get = function () {
                throw 'unsupported variable Swift.(file).Dictionary._Variant.asNative in ' + this.constructor.name;
            };
            Object.defineProperty(class_55.prototype, "asNative", {
                get: function () { return this.asNative$get(); },
                enumerable: true,
                configurable: true
            });
            ;
            /*Swift.(file).Dictionary._Variant.asCocoa*/
            class_55.prototype.asCocoa$get = function () {
                throw 'unsupported variable Swift.(file).Dictionary._Variant.asCocoa in ' + this.constructor.name;
            };
            Object.defineProperty(class_55.prototype, "asCocoa", {
                get: function () { return this.asCocoa$get(); },
                enumerable: true,
                configurable: true
            });
            ;
            /*Swift.(file).Dictionary._Variant.reserveCapacity(_:Int)*/
            /*Swift.(file).Dictionary._Variant.reserveCapacity(_:Int)*/
            class_55.prototype.reserveCapacity = function ($info, capacity) {
                throw 'unsupported method Swift.(file).Dictionary._Variant.reserveCapacity(_:Int) in ' + this.constructor.name;
            };
            /*Swift.(file).Dictionary._Variant.capacity*/
            class_55.prototype.capacity$get = function () {
                throw 'unsupported variable Swift.(file).Dictionary._Variant.capacity in ' + this.constructor.name;
            };
            Object.defineProperty(class_55.prototype, "capacity", {
                get: function () { return this.capacity$get(); },
                enumerable: true,
                configurable: true
            });
            ;
            /*Swift.(file).Dictionary._Variant.startIndex*/
            class_55.prototype.startIndex$get = function () {
                throw 'unsupported variable Swift.(file).Dictionary._Variant.startIndex in ' + this.constructor.name;
            };
            Object.defineProperty(class_55.prototype, "startIndex", {
                get: function () { return this.startIndex$get(); },
                enumerable: true,
                configurable: true
            });
            ;
            /*Swift.(file).Dictionary._Variant.endIndex*/
            class_55.prototype.endIndex$get = function () {
                throw 'unsupported variable Swift.(file).Dictionary._Variant.endIndex in ' + this.constructor.name;
            };
            Object.defineProperty(class_55.prototype, "endIndex", {
                get: function () { return this.endIndex$get(); },
                enumerable: true,
                configurable: true
            });
            ;
            /*Swift.(file).Dictionary._Variant.index(after:Dictionary<Key, Value>._Variant.Index)*/
            /*Swift.(file)._DictionaryBuffer.index(after:Self.Index)*/
            class_55.prototype.indexAfter = function ($info, index) {
                throw 'unsupported method Swift.(file).Dictionary._Variant.index(after:Dictionary<Key, Value>._Variant.Index) in ' + this.constructor.name;
            };
            /*Swift.(file).Dictionary._Variant.formIndex(after:Dictionary<Key, Value>._Variant.Index)*/
            /*Swift.(file).Dictionary._Variant.formIndex(after:Dictionary<Key, Value>._Variant.Index)*/
            class_55.prototype.formIndexAfter = function ($info, index$inout) {
                throw 'unsupported method Swift.(file).Dictionary._Variant.formIndex(after:Dictionary<Key, Value>._Variant.Index) in ' + this.constructor.name;
            };
            /*Swift.(file).Dictionary._Variant.index(forKey:Key)*/
            /*Swift.(file)._DictionaryBuffer.index(forKey:Self.Key)*/
            class_55.prototype.indexForKey = function ($info, key) {
                throw 'unsupported method Swift.(file).Dictionary._Variant.index(forKey:Key) in ' + this.constructor.name;
            };
            /*Swift.(file).Dictionary._Variant.count*/
            class_55.prototype.count$get = function () {
                throw 'unsupported variable Swift.(file).Dictionary._Variant.count in ' + this.constructor.name;
            };
            Object.defineProperty(class_55.prototype, "count", {
                get: function () { return this.count$get(); },
                enumerable: true,
                configurable: true
            });
            ;
            /*Swift.(file).Dictionary._Variant.contains(_:Key)*/
            /*Swift.(file)._DictionaryBuffer.contains(_:Self.Key)*/
            class_55.prototype.contains = function ($info, key) {
                throw 'unsupported method Swift.(file).Dictionary._Variant.contains(_:Key) in ' + this.constructor.name;
            };
            /*Swift.(file).Dictionary._Variant.lookup(_:Key)*/
            /*Swift.(file)._DictionaryBuffer.lookup(_:Self.Key)*/
            class_55.prototype.lookup = function ($info, key) {
                throw 'unsupported method Swift.(file).Dictionary._Variant.lookup(_:Key) in ' + this.constructor.name;
            };
            /*Swift.(file).Dictionary._Variant.lookup(_:Dictionary<Key, Value>._Variant.Index)*/
            /*Swift.(file)._DictionaryBuffer.lookup(_:Self.Index)*/
            class_55.prototype.lookup = function ($info, index) {
                throw 'unsupported method Swift.(file).Dictionary._Variant.lookup(_:Dictionary<Key, Value>._Variant.Index) in ' + this.constructor.name;
            };
            /*Swift.(file).Dictionary._Variant.key(at:Dictionary<Key, Value>._Variant.Index)*/
            /*Swift.(file)._DictionaryBuffer.key(at:Self.Index)*/
            class_55.prototype.keyAt = function ($info, index) {
                throw 'unsupported method Swift.(file).Dictionary._Variant.key(at:Dictionary<Key, Value>._Variant.Index) in ' + this.constructor.name;
            };
            /*Swift.(file).Dictionary._Variant.value(at:Dictionary<Key, Value>._Variant.Index)*/
            /*Swift.(file)._DictionaryBuffer.value(at:Self.Index)*/
            class_55.prototype.valueAt = function ($info, index) {
                throw 'unsupported method Swift.(file).Dictionary._Variant.value(at:Dictionary<Key, Value>._Variant.Index) in ' + this.constructor.name;
            };
            /*Swift.(file).Dictionary._Variant.subscript(_:Key)*/
            /*Swift.(file).Dictionary._Variant.subscript(_:Key)*/
            class_55.prototype.subscript$get = function ($info, key) {
                throw 'unsupported method Swift.(file).Dictionary._Variant.subscript(_:Key) in ' + this.constructor.name;
            }; /*Swift.(file).Dictionary._Variant.subscript(_:Key)*/
            /*Swift.(file).Dictionary._Variant.subscript(_:Key)*/
            class_55.prototype.subscript$_modify = function ($info, key) {
                throw 'unsupported method Swift.(file).Dictionary._Variant.subscript(_:Key) in ' + this.constructor.name;
            };
            /*Swift.(file).Dictionary._Variant.mutatingFind(_:Key)*/
            /*Swift.(file).Dictionary._Variant.mutatingFind(_:Key)*/
            class_55.prototype.mutatingFind = function ($info, key) {
                throw 'unsupported method Swift.(file).Dictionary._Variant.mutatingFind(_:Key) in ' + this.constructor.name;
            };
            /*Swift.(file).Dictionary._Variant.ensureUniqueNative()*/
            /*Swift.(file).Dictionary._Variant.ensureUniqueNative()*/
            class_55.prototype.ensureUniqueNative = function ($info) {
                throw 'unsupported method Swift.(file).Dictionary._Variant.ensureUniqueNative() in ' + this.constructor.name;
            };
            /*Swift.(file).Dictionary._Variant.updateValue(_:Value,forKey:Key)*/
            /*Swift.(file).Dictionary._Variant.updateValue(_:Value,forKey:Key)*/
            class_55.prototype.updateValueForKey = function ($info, value, key) {
                throw 'unsupported method Swift.(file).Dictionary._Variant.updateValue(_:Value,forKey:Key) in ' + this.constructor.name;
            };
            /*Swift.(file).Dictionary._Variant.setValue(_:Value,forKey:Key)*/
            /*Swift.(file).Dictionary._Variant.setValue(_:Value,forKey:Key)*/
            class_55.prototype.setValueForKey = function ($info, value, key) {
                throw 'unsupported method Swift.(file).Dictionary._Variant.setValue(_:Value,forKey:Key) in ' + this.constructor.name;
            };
            /*Swift.(file).Dictionary._Variant.remove(at:Dictionary<Key, Value>._Variant.Index)*/
            /*Swift.(file).Dictionary._Variant.remove(at:Dictionary<Key, Value>._Variant.Index)*/
            class_55.prototype.removeAt = function ($info, index) {
                throw 'unsupported method Swift.(file).Dictionary._Variant.remove(at:Dictionary<Key, Value>._Variant.Index) in ' + this.constructor.name;
            };
            /*Swift.(file).Dictionary._Variant.removeValue(forKey:Key)*/
            /*Swift.(file).Dictionary._Variant.removeValue(forKey:Key)*/
            class_55.prototype.removeValueForKey = function ($info, key) {
                throw 'unsupported method Swift.(file).Dictionary._Variant.removeValue(forKey:Key) in ' + this.constructor.name;
            };
            /*Swift.(file).Dictionary._Variant.removeAll(keepingCapacity:Bool)*/
            /*Swift.(file).Dictionary._Variant.removeAll(keepingCapacity:Bool)*/
            class_55.prototype.removeAllKeepingCapacity = function ($info, keepCapacity) {
                throw 'unsupported method Swift.(file).Dictionary._Variant.removeAll(keepingCapacity:Bool) in ' + this.constructor.name;
            };
            /*Swift.(file).Dictionary._Variant.makeIterator()*/
            /*Swift.(file).Dictionary._Variant.makeIterator()*/
            class_55.prototype.makeIterator = function ($info) {
                throw 'unsupported method Swift.(file).Dictionary._Variant.makeIterator() in ' + this.constructor.name;
            };
            /*Swift.(file).Dictionary._Variant.mapValues(_:(Value) throws -> T)*/
            /*Swift.(file).Dictionary._Variant.mapValues(_:(Value) throws -> T)*/
            class_55.prototype.mapValues = function ($info, transform) {
                throw 'unsupported method Swift.(file).Dictionary._Variant.mapValues(_:(Value) throws -> T) in ' + this.constructor.name;
            };
            /*Swift.(file).Dictionary._Variant.merge(_:S,uniquingKeysWith:(Value, Value) throws -> Value)*/
            /*Swift.(file).Dictionary._Variant.merge(_:S,uniquingKeysWith:(Value, Value) throws -> Value)*/
            class_55.prototype.mergeUniquingKeysWith = function ($info, keysAndValues, combine) {
                throw 'unsupported method Swift.(file).Dictionary._Variant.merge(_:S,uniquingKeysWith:(Value, Value) throws -> Value) in ' + this.constructor.name;
            };
            class_55.prototype.init$vars = function () {
            };
            return class_55;
        }()),
        _31.$struct = true,
        _31.$infoAddress = '',
        _31);
    return MIO_Mixin_Dictionary;
}());
if (typeof IteratorProtocol$implementation != 'undefined')
    _mixin(MIO_Mixin_Dictionary.Keys.Iterator, IteratorProtocol$implementation, false);
if (typeof Collection$implementation != 'undefined')
    _mixin(MIO_Mixin_Dictionary.Keys, Collection$implementation, false);
if (typeof Equatable$implementation != 'undefined')
    _mixin(MIO_Mixin_Dictionary.Keys, Equatable$implementation, false);
if (typeof CustomStringConvertible$implementation != 'undefined')
    _mixin(MIO_Mixin_Dictionary.Keys, CustomStringConvertible$implementation, false);
if (typeof CustomDebugStringConvertible$implementation != 'undefined')
    _mixin(MIO_Mixin_Dictionary.Keys, CustomDebugStringConvertible$implementation, false);
if (typeof IteratorProtocol$implementation != 'undefined')
    _mixin(MIO_Mixin_Dictionary.Values.Iterator, IteratorProtocol$implementation, false);
if (typeof MutableCollection$implementation != 'undefined')
    _mixin(MIO_Mixin_Dictionary.Values, MutableCollection$implementation, false);
if (typeof CustomStringConvertible$implementation != 'undefined')
    _mixin(MIO_Mixin_Dictionary.Values, CustomStringConvertible$implementation, false);
if (typeof CustomDebugStringConvertible$implementation != 'undefined')
    _mixin(MIO_Mixin_Dictionary.Values, CustomDebugStringConvertible$implementation, false);
_mixin(MIO_Mixin_Dictionary.Index._Variant, _DefaultEnumImplementation, false);
if (typeof Equatable$implementation != 'undefined')
    _mixin(MIO_Mixin_Dictionary.Index, Equatable$implementation, false);
if (typeof Comparable$implementation != 'undefined')
    _mixin(MIO_Mixin_Dictionary.Index, Comparable$implementation, false);
if (typeof Hashable$implementation != 'undefined')
    _mixin(MIO_Mixin_Dictionary.Index, Hashable$implementation, false);
_mixin(MIO_Mixin_Dictionary.Iterator._Variant, _DefaultEnumImplementation, false);
if (typeof IteratorProtocol$implementation != 'undefined')
    _mixin(MIO_Mixin_Dictionary.Iterator, IteratorProtocol$implementation, false);
if (typeof CustomReflectable$implementation != 'undefined')
    _mixin(MIO_Mixin_Dictionary.Iterator, CustomReflectable$implementation, false);
if (typeof _DictionaryBuffer$implementation != 'undefined')
    _mixin(MIO_Mixin_Dictionary._Variant, _DictionaryBuffer$implementation, false);
if (typeof Encodable$implementation != 'undefined')
    _mixin(MIO_Mixin_Dictionary, Encodable$implementation, false);
if (typeof Decodable$implementation != 'undefined')
    _mixin(MIO_Mixin_Dictionary, Decodable$implementation, false);
if (typeof Sequence$implementation != 'undefined')
    _mixin(MIO_Mixin_Dictionary, Sequence$implementation, false);
if (typeof Collection$implementation != 'undefined')
    _mixin(MIO_Mixin_Dictionary, Collection$implementation, false);
if (typeof ExpressibleByDictionaryLiteral$implementation != 'undefined')
    _mixin(MIO_Mixin_Dictionary, ExpressibleByDictionaryLiteral$implementation, false);
if (typeof Equatable$implementation != 'undefined')
    _mixin(MIO_Mixin_Dictionary, Equatable$implementation, false);
if (typeof Hashable$implementation != 'undefined')
    _mixin(MIO_Mixin_Dictionary, Hashable$implementation, false);
if (typeof _HasCustomAnyHashableRepresentation$implementation != 'undefined')
    _mixin(MIO_Mixin_Dictionary, _HasCustomAnyHashableRepresentation$implementation, false);
if (typeof CustomStringConvertible$implementation != 'undefined')
    _mixin(MIO_Mixin_Dictionary, CustomStringConvertible$implementation, false);
if (typeof CustomDebugStringConvertible$implementation != 'undefined')
    _mixin(MIO_Mixin_Dictionary, CustomDebugStringConvertible$implementation, false);
if (typeof CustomReflectable$implementation != 'undefined')
    _mixin(MIO_Mixin_Dictionary, CustomReflectable$implementation, false);
_mixin(Map, MIO_Mixin_Dictionary, true);
var Dictionary = /** @class */ (function () {
    function Dictionary() {
    }
    return Dictionary;
}());
_mixin(Dictionary, MIO_Mixin_Dictionary, true);
var FlattenSequence = /** @class */ (function () {
    function FlattenSequence() {
    }
    /*Swift.(file).FlattenSequence.init(_base:Base)*/
    /*Swift.(file).FlattenSequence.init(_base:Base)*/
    FlattenSequence.prototype.init_base = function ($info, _base) {
        var _this = this;
        _this._base = _base;
        return;
    };
    /*Swift.(file).FlattenSequence.makeIterator()*/
    /*Swift.(file).Sequence.makeIterator()*/
    /*Swift.(file).Collection.makeIterator()*/
    FlattenSequence.prototype.makeIterator = function ($info) {
        var _this = this;
        return _create(FlattenSequence.Iterator, 'init_base', {}, _this._base.makeIterator({}));
    };
    /*Swift.(file).FlattenSequence.startIndex*/
    FlattenSequence.prototype.startIndex$get = function () {
        throw 'unsupported variable Swift.(file).FlattenSequence.startIndex in ' + this.constructor.name;
    };
    Object.defineProperty(FlattenSequence.prototype, "startIndex", {
        get: function () { return this.startIndex$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).FlattenSequence.endIndex*/
    FlattenSequence.prototype.endIndex$get = function () {
        throw 'unsupported variable Swift.(file).FlattenSequence.endIndex in ' + this.constructor.name;
    };
    Object.defineProperty(FlattenSequence.prototype, "endIndex", {
        get: function () { return this.endIndex$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).FlattenSequence.index(after:FlattenSequence<Base>.Index)*/
    /*Swift.(file).Collection.index(after:Self.Index)*/
    /*Swift.(file).BidirectionalCollection.index(after:Self.Index)*/
    FlattenSequence.prototype.indexAfter = function ($info, i) {
        throw 'unsupported method Swift.(file).FlattenSequence.index(after:FlattenSequence<Base>.Index) in ' + this.constructor.name;
    };
    /*Swift.(file).FlattenSequence.formIndex(after:FlattenSequence<Base>.Index)*/
    /*Swift.(file).Collection.formIndex(after:Self.Index)*/
    /*Swift.(file).BidirectionalCollection.formIndex(after:Self.Index)*/
    FlattenSequence.prototype.formIndexAfter = function ($info, i$inout) {
        var _this = this;
        var i = i$inout.get();
        var $result = (function () {
            i = _this.indexAfter({}, i);
        })();
        i$inout.set(i);
        return $result;
    };
    /*Swift.(file).FlattenSequence.distance(from:FlattenSequence<Base>.Index,to:FlattenSequence<Base>.Index)*/
    /*Swift.(file).Collection.distance(from:Self.Index,to:Self.Index)*/
    /*Swift.(file).BidirectionalCollection.distance(from:Self.Index,to:Self.Index)*/
    FlattenSequence.prototype.distanceFromTo = function ($info, start, end) {
        var _this = this;
        preconditionFileLine({}, function () { return (_.arg0 = start).constructor.infix_60_61({}, _.arg0, end); }, function () { return "Only BidirectionalCollections can have end come before start"; }, '?3', '?3');
        var start_dupl = start;
        var count = 0;
        while (true) {
            if (!(((_.arg1 = start_dupl).constructor.infix_33_61({}, _.arg1, end))))
                break;
            count = Int.infix_43({}, count, 1);
            _this.formIndexAfter({}, { get: function () { return start_dupl; }, set: function ($val) { return start_dupl = $val; } });
        }
        ;
        return count;
    };
    /*Swift.(file).FlattenSequence.index(_:FlattenSequence<Base>.Index,offsetBy:Int)*/
    /*Swift.(file).Collection.index(_:Self.Index,offsetBy:Int)*/
    /*Swift.(file).BidirectionalCollection.index(_:Self.Index,offsetBy:Int)*/
    FlattenSequence.prototype.indexOffsetBy = function ($info, i, n) {
        var _this = this;
        return _this._advanceForwardBy({}, i, distance);
    };
    /*Swift.(file).FlattenSequence.formIndex(_:FlattenSequence<Base>.Index,offsetBy:Int)*/
    /*Swift.(file).FlattenSequence.formIndex(_:FlattenSequence<Base>.Index,offsetBy:Int)*/
    FlattenSequence.prototype.formIndexOffsetBy = function ($info, i$inout, n) {
        throw 'unsupported method Swift.(file).FlattenSequence.formIndex(_:FlattenSequence<Base>.Index,offsetBy:Int) in ' + this.constructor.name;
    };
    /*Swift.(file).FlattenSequence.index(_:FlattenSequence<Base>.Index,offsetBy:Int,limitedBy:FlattenSequence<Base>.Index)*/
    /*Swift.(file).Collection.index(_:Self.Index,offsetBy:Int,limitedBy:Self.Index)*/
    /*Swift.(file).BidirectionalCollection.index(_:Self.Index,offsetBy:Int,limitedBy:Self.Index)*/
    FlattenSequence.prototype.indexOffsetByLimitedBy = function ($info, i, n, limit) {
        var _this = this;
        return _this._advanceForwardByLimitedBy({}, i, distance, limit);
    };
    /*Swift.(file).FlattenSequence.formIndex(_:FlattenSequence<Base>.Index,offsetBy:Int,limitedBy:FlattenSequence<Base>.Index)*/
    /*Swift.(file).FlattenSequence.formIndex(_:FlattenSequence<Base>.Index,offsetBy:Int,limitedBy:FlattenSequence<Base>.Index)*/
    FlattenSequence.prototype.formIndexOffsetByLimitedBy = function ($info, i$inout, n, limit) {
        throw 'unsupported method Swift.(file).FlattenSequence.formIndex(_:FlattenSequence<Base>.Index,offsetBy:Int,limitedBy:FlattenSequence<Base>.Index) in ' + this.constructor.name;
    };
    /*Swift.(file).FlattenSequence.subscript(_:FlattenSequence<Base>.Index)*/
    /*Swift.(file).Collection.subscript(_:Self.Index)*/
    /*Swift.(file).BidirectionalCollection.subscript(_:Self.Index)*/
    FlattenSequence.prototype.subscript$get = function ($info, position) {
        throw 'unsupported method Swift.(file).FlattenSequence.subscript(_:FlattenSequence<Base>.Index) in ' + this.constructor.name;
    };
    /*Swift.(file).FlattenSequence.subscript(_:Range<FlattenSequence<Base>.Index>)*/
    /*Swift.(file).Collection.subscript(_:Range<Self.Index>)*/
    /*Swift.(file).BidirectionalCollection.subscript(_:Range<Self.Index>)*/
    FlattenSequence.prototype.subscriptRange$get = function ($info, bounds) {
        var _this = this;
        return _create(Slice, 'initBaseBoundsRange', {}, _this, bounds);
    };
    /*Swift.(file).FlattenSequence.index(before:FlattenSequence<Base>.Index)*/
    /*Swift.(file).BidirectionalCollection.index(before:Self.Index)*/
    FlattenSequence.prototype.indexBefore = function ($info, i) {
        throw 'unsupported method Swift.(file).FlattenSequence.index(before:FlattenSequence<Base>.Index) in ' + this.constructor.name;
    };
    /*Swift.(file).FlattenSequence.formIndex(before:FlattenSequence<Base>.Index)*/
    /*Swift.(file).BidirectionalCollection.formIndex(before:Self.Index)*/
    FlattenSequence.prototype.formIndexBefore = function ($info, i$inout) {
        var _this = this;
        var i = i$inout.get();
        var $result = (function () {
            i = _this.indexBefore({}, i);
        })();
        i$inout.set(i);
        return $result;
    };
    FlattenSequence.prototype.init$vars = function () {
    };
    var _32, _33;
    FlattenSequence.$struct = true;
    FlattenSequence.$infoAddress = '';
    FlattenSequence.Iterator = (_32 = /** @class */ (function () {
            function class_56() {
            }
            /*Swift.(file).FlattenSequence.Iterator.init(_base:Base.Iterator)*/
            /*Swift.(file).FlattenSequence.Iterator.init(_base:Base.Iterator)*/
            class_56.prototype.init_base = function ($info, _base) {
                var _this = this;
                _this._base = _base;
                return;
            };
            /*Swift.(file).FlattenSequence.Iterator.next()*/
            /*Swift.(file).IteratorProtocol.next()*/
            class_56.prototype.next = function ($info) {
                var _this = this;
                do {
                    if ((_fastPath({}, Optional.wrappedNotEqualsOptionalNilComparisonType({}, _this._inner, null)))) {
                        var ret = _this._inner.next({ $setThis: function ($val) { return _this._inner = $val; } });
                        if ((_fastPath({}, Optional.wrappedNotEqualsOptionalNilComparisonType({}, ret, null)))) {
                            return ret;
                        }
                        ;
                    }
                    ;
                    var s = _this._base.next({ $setThis: function ($val) { return _this._base = $val; } });
                    if ((_slowPath({}, Optional.wrappedEqualsOptionalNilComparisonType({}, s, null)))) {
                        return null;
                    }
                    ;
                    _this._inner = s.makeIterator({});
                } while (true);
            };
            class_56.prototype.init$vars = function () {
            };
            return class_56;
        }()),
        _32.$struct = true,
        _32.$infoAddress = '',
        _32);
    FlattenSequence.Index = (_33 = /** @class */ (function () {
            function class_57() {
            }
            /*Swift.(file).FlattenSequence.Index.init(_:Base.Index,_:Base.Element.Index?)*/
            /*Swift.(file).FlattenSequence.Index.init(_:Base.Index,_:Base.Element.Index?)*/
            class_57.prototype.initOptional = function ($info, _outer, inner) {
                throw 'unsupported method Swift.(file).FlattenSequence.Index.init(_:Base.Index,_:Base.Element.Index?) in ' + this.constructor.name;
            };
            /*Swift.(file).FlattenSequence.Index.==infix(_:FlattenCollection<Base>.Index,_:FlattenCollection<Base>.Index)*/
            /*Swift.(file).Equatable.==infix(_:Self,_:Self)*/
            class_57.infix_61_61 = function ($info, lhs, rhs) {
                var _this = this;
                return Bool.infix_38_38({}, (_.arg0 = lhs._outer).constructor.infix_61_61({}, _.arg0, rhs._outer), function () { return Optional.infix_61_61({}, lhs._inner, rhs._inner); });
            };
            /*Swift.(file).FlattenSequence.Index.<infix(_:FlattenCollection<Base>.Index,_:FlattenCollection<Base>.Index)*/
            /*Swift.(file).Comparable.<infix(_:Self,_:Self)*/
            class_57.infix_60 = function ($info, lhs, rhs) {
                var _this = this;
                if (((_.arg0 = lhs._outer).constructor.infix_33_61({}, _.arg0, rhs._outer))) {
                    return (_.arg1 = lhs._outer).constructor.infix_60({}, _.arg1, rhs._outer);
                }
                ;
                var $ifLet0, lhsInner_1;
                var $ifLet2, rhsInner_3;
                if ((($ifLet0 = lhs._inner) || true) && $ifLet0 != null && ((lhsInner_1 = $ifLet0) || true) && (($ifLet2 = rhs._inner) || true) && $ifLet2 != null && ((rhsInner_3 = $ifLet2) || true)) {
                    return (_.arg2 = lhsInner_1).constructor.infix_60({}, _.arg2, rhsInner_3);
                }
                ;
                preconditionFileLine({}, function () { return Bool.infix_38_38({}, Optional.wrappedEqualsOptionalNilComparisonType({}, lhs._inner, null), function () { return Optional.wrappedEqualsOptionalNilComparisonType({}, rhs._inner, null); }); }, function () { return String(); } /*!default_value*/, '?3', '?3');
                return false;
            };
            /*Swift.(file).FlattenSequence.Index.hash(into:Hasher)*/
            /*Swift.(file).Hashable.hash(into:Hasher)*/
            class_57.prototype.hashInto = function ($info, hasher$inout) {
                var _this = this;
                var hasher = hasher$inout.get();
                var $result = (function () {
                    hasher.combine({ $setThis: function ($val) { return hasher = $val; } }, _this._outer);
                    hasher.combine({ $setThis: function ($val) { return hasher = $val; } }, _this._inner);
                })();
                hasher$inout.set(hasher);
                return $result;
            };
            /*Swift.(file).FlattenSequence.Index.hashValue*/
            class_57.prototype.hashValue$get = function () {
                throw 'unsupported variable Swift.(file).FlattenSequence.Index.hashValue in ' + this.constructor.name;
            };
            Object.defineProperty(class_57.prototype, "hashValue", {
                get: function () { return this.hashValue$get(); },
                enumerable: true,
                configurable: true
            });
            ;
            class_57.prototype.init$vars = function () {
            };
            return class_57;
        }()),
        _33.$struct = true,
        _33.$infoAddress = '',
        _33);
    return FlattenSequence;
}());
if (typeof IteratorProtocol$implementation != 'undefined')
    _mixin(FlattenSequence.Iterator, IteratorProtocol$implementation, false);
if (typeof Sequence$implementation != 'undefined')
    _mixin(FlattenSequence.Iterator, Sequence$implementation, false);
if (typeof Equatable$implementation != 'undefined')
    _mixin(FlattenSequence.Index, Equatable$implementation, false);
if (typeof Comparable$implementation != 'undefined')
    _mixin(FlattenSequence.Index, Comparable$implementation, false);
if (typeof Hashable$implementation != 'undefined')
    _mixin(FlattenSequence.Index, Hashable$implementation, false);
if (typeof Sequence$implementation != 'undefined')
    _mixin(FlattenSequence, Sequence$implementation, false);
if (typeof Collection$implementation != 'undefined')
    _mixin(FlattenSequence, Collection$implementation, false);
if (typeof BidirectionalCollection$implementation != 'undefined')
    _mixin(FlattenSequence, BidirectionalCollection$implementation, false);
var FloatingPoint$implementation = /** @class */ (function () {
    function FloatingPoint$implementation() {
    }
    /*Swift.(file).FloatingPoint.==infix(_:Self,_:Self)*/
    /*Swift.(file).FloatingPoint.==infix(_:Self,_:Self)*/
    FloatingPoint$implementation.infix_61_61 = function ($info, lhs, rhs) {
        return lhs == rhs;
    };
    /*Swift.(file).FloatingPoint.<infix(_:Self,_:Self)*/
    /*Swift.(file).FloatingPoint.<infix(_:Self,_:Self)*/
    FloatingPoint$implementation.infix_60 = function ($info, lhs, rhs) {
        return lhs < rhs;
    };
    /*Swift.(file).FloatingPoint.<=infix(_:Self,_:Self)*/
    /*Swift.(file).FloatingPoint.<=infix(_:Self,_:Self)*/
    FloatingPoint$implementation.infix_60_61 = function ($info, lhs, rhs) {
        return lhs <= rhs;
    };
    /*Swift.(file).FloatingPoint.>infix(_:Self,_:Self)*/
    /*Swift.(file).FloatingPoint.>infix(_:Self,_:Self)*/
    FloatingPoint$implementation.infix_62 = function ($info, lhs, rhs) {
        return lhs > rhs;
    };
    /*Swift.(file).FloatingPoint.>=infix(_:Self,_:Self)*/
    /*Swift.(file).FloatingPoint.>=infix(_:Self,_:Self)*/
    FloatingPoint$implementation.infix_62_61 = function ($info, lhs, rhs) {
        return lhs >= rhs;
    };
    /*Swift.(file).FloatingPoint.ulpOfOne*/
    FloatingPoint$implementation.ulpOfOne$get = function () {
        var _this = this;
        return _create(_this, 'initIntegerLiteral', {}, 1).ulp;
    };
    Object.defineProperty(FloatingPoint$implementation, "ulpOfOne", {
        get: function () {
            return this.ulpOfOne$get();
        },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).FloatingPoint.rounded(_:FloatingPointRoundingRule)*/
    /*Swift.(file).FloatingPoint.rounded(_:FloatingPointRoundingRule)*/
    FloatingPoint$implementation.prototype.rounded = function ($info, rule) {
        var _this = this;
        var lhs = _this;
        lhs.round({ $setThis: function ($val) { return lhs = $val; } }, rule);
        return lhs;
    };
    /*Swift.(file).FloatingPoint.rounded()*/
    /*Swift.(file).FloatingPoint.rounded()*/
    FloatingPoint$implementation.prototype.rounded = function ($info) {
        var _this = this;
        return _this.constructor.prototype.rounded.call(_this, {}, FloatingPointRoundingRule.toNearestOrAwayFromZero);
    };
    /*Swift.(file).FloatingPoint.round()*/
    /*Swift.(file).FloatingPoint.round()*/
    FloatingPoint$implementation.prototype.round = function ($info) {
        var _this = this;
        _this.round({ $setThis: function ($val) { return $info.$setThis(_this = _cloneStruct($val)); } }, FloatingPointRoundingRule.toNearestOrAwayFromZero);
    };
    /*Swift.(file).FloatingPoint.nextDown*/
    FloatingPoint$implementation.prototype.nextDown$get = function () {
        var _this = this;
        return _this.constructor.prefix_45({}, _this.constructor.prefix_45({}, _this).nextUp);
    };
    Object.defineProperty(FloatingPoint$implementation.prototype, "nextDown", {
        get: function () { return this.nextDown$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).FloatingPoint.truncatingRemainder(dividingBy:Self)*/
    /*Swift.(file).FloatingPoint.truncatingRemainder(dividingBy:Self)*/
    FloatingPoint$implementation.prototype.truncatingRemainderDividingBy = function ($info, other) {
        var _this = this;
        var lhs = _this;
        lhs.formTruncatingRemainderDividingBy({ $setThis: function ($val) { return lhs = $val; } }, other);
        return lhs;
    };
    /*Swift.(file).FloatingPoint.remainder(dividingBy:Self)*/
    /*Swift.(file).FloatingPoint.remainder(dividingBy:Self)*/
    FloatingPoint$implementation.prototype.remainderDividingBy = function ($info, other) {
        var _this = this;
        var lhs = _this;
        lhs.formRemainderDividingBy({ $setThis: function ($val) { return lhs = $val; } }, other);
        return lhs;
    };
    /*Swift.(file).FloatingPoint.squareRoot()*/
    /*Swift.(file).FloatingPoint.squareRoot()*/
    FloatingPoint$implementation.prototype.squareRoot = function ($info) {
        var _this = this;
        var lhs = _this;
        lhs.formSquareRoot({ $setThis: function ($val) { return lhs = $val; } });
        return lhs;
    };
    /*Swift.(file).FloatingPoint.addingProduct(_:Self,_:Self)*/
    /*Swift.(file).FloatingPoint.addingProduct(_:Self,_:Self)*/
    FloatingPoint$implementation.prototype.addingProduct = function ($info, lhs, rhs) {
        var _this = this;
        var addend = _this;
        addend.addProduct({ $setThis: function ($val) { return addend = $val; } }, lhs, rhs);
        return addend;
    };
    /*Swift.(file).FloatingPoint.minimum(_:Self,_:Self)*/
    /*Swift.(file).FloatingPoint.minimum(_:Self,_:Self)*/
    FloatingPoint$implementation.minimum = function ($info, x, y) {
        var _this = this;
        if ((Bool.infix_124_124({}, _this.prototype.isSignalingNaN$get.call(x), function () { return _this.prototype.isSignalingNaN$get.call(y); }))) {
            return _this.infix_43({}, x, y);
        }
        ;
        if ((Bool.infix_124_124({}, _this.infix_60_61({}, x, y), function () { return _this.prototype._isNaN$get.call(y); }))) {
            return x;
        }
        ;
        return y;
    };
    /*Swift.(file).FloatingPoint.maximum(_:Self,_:Self)*/
    /*Swift.(file).FloatingPoint.maximum(_:Self,_:Self)*/
    FloatingPoint$implementation.maximum = function ($info, x, y) {
        var _this = this;
        if ((Bool.infix_124_124({}, _this.prototype.isSignalingNaN$get.call(x), function () { return _this.prototype.isSignalingNaN$get.call(y); }))) {
            return _this.infix_43({}, x, y);
        }
        ;
        if ((Bool.infix_124_124({}, _this.infix_62({}, x, y), function () { return _this.prototype._isNaN$get.call(y); }))) {
            return x;
        }
        ;
        return y;
    };
    /*Swift.(file).FloatingPoint.minimumMagnitude(_:Self,_:Self)*/
    /*Swift.(file).FloatingPoint.minimumMagnitude(_:Self,_:Self)*/
    FloatingPoint$implementation.minimumMagnitude = function ($info, x, y) {
        var _this = this;
        if ((Bool.infix_124_124({}, _this.prototype.isSignalingNaN$get.call(x), function () { return _this.prototype.isSignalingNaN$get.call(y); }))) {
            return _this.infix_43({}, x, y);
        }
        ;
        if ((Bool.infix_124_124({}, _this.infix_60_61({}, _this.prototype.magnitude$get.call(x), _this.prototype.magnitude$get.call(y)), function () { return _this.prototype._isNaN$get.call(y); }))) {
            return x;
        }
        ;
        return y;
    };
    /*Swift.(file).FloatingPoint.maximumMagnitude(_:Self,_:Self)*/
    /*Swift.(file).FloatingPoint.maximumMagnitude(_:Self,_:Self)*/
    FloatingPoint$implementation.maximumMagnitude = function ($info, x, y) {
        var _this = this;
        if ((Bool.infix_124_124({}, _this.prototype.isSignalingNaN$get.call(x), function () { return _this.prototype.isSignalingNaN$get.call(y); }))) {
            return _this.infix_43({}, x, y);
        }
        ;
        if ((Bool.infix_124_124({}, _this.infix_62({}, _this.prototype.magnitude$get.call(x), _this.prototype.magnitude$get.call(y)), function () { return _this.prototype._isNaN$get.call(y); }))) {
            return x;
        }
        ;
        return y;
    };
    /*Swift.(file).FloatingPoint.floatingPointClass*/
    FloatingPoint$implementation.prototype.floatingPointClass$get = function () {
        var _this = this;
        if ((_this.constructor.prototype.isSignalingNaN$get.call(_this))) {
            return FloatingPointClassification.signalingNaN;
        }
        ;
        if ((_this.constructor.prototype._isNaN$get.call(_this))) {
            return FloatingPointClassification.quietNaN;
        }
        ;
        if ((_this.constructor.prototype.isInfinite$get.call(_this))) {
            return (FloatingPointSign.infix_61_61({}, _this.constructor.prototype.sign$get.call(_this), FloatingPointSign.minus) ? FloatingPointClassification.negativeInfinity : FloatingPointClassification.positiveInfinity);
        }
        ;
        if ((_this.constructor.prototype.isNormal$get.call(_this))) {
            return (FloatingPointSign.infix_61_61({}, _this.constructor.prototype.sign$get.call(_this), FloatingPointSign.minus) ? FloatingPointClassification.negativeNormal : FloatingPointClassification.positiveNormal);
        }
        ;
        if ((_this.constructor.prototype.isSubnormal$get.call(_this))) {
            return (FloatingPointSign.infix_61_61({}, _this.constructor.prototype.sign$get.call(_this), FloatingPointSign.minus) ? FloatingPointClassification.negativeSubnormal : FloatingPointClassification.positiveSubnormal);
        }
        ;
        return (FloatingPointSign.infix_61_61({}, _this.constructor.prototype.sign$get.call(_this), FloatingPointSign.minus) ? FloatingPointClassification.negativeZero : FloatingPointClassification.positiveZero);
    };
    Object.defineProperty(FloatingPoint$implementation.prototype, "floatingPointClass", {
        get: function () { return this.floatingPointClass$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    return FloatingPoint$implementation;
}());
if (typeof SignedNumeric$implementation != 'undefined')
    _mixin(FloatingPoint$implementation, SignedNumeric$implementation, false);
if (typeof Strideable$implementation != 'undefined')
    _mixin(FloatingPoint$implementation, Strideable$implementation, false);
if (typeof Hashable$implementation != 'undefined')
    _mixin(FloatingPoint$implementation, Hashable$implementation, false);
var BinaryFloatingPoint$implementation = /** @class */ (function () {
    function BinaryFloatingPoint$implementation() {
    }
    /*Swift.(file).BinaryFloatingPoint.radix*/
    BinaryFloatingPoint$implementation.radix$get = function () {
        var _this = this;
        return 2;
    };
    Object.defineProperty(BinaryFloatingPoint$implementation, "radix", {
        get: function () {
            return this.radix$get();
        },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).BinaryFloatingPoint.init(signOf:Self,magnitudeOf:Self)*/
    /*Swift.(file).BinaryFloatingPoint.init(signOf:Self,magnitudeOf:Self)*/
    BinaryFloatingPoint$implementation.prototype.initSignOfMagnitudeOf = function ($info, signOf, magnitudeOf) {
        var _this = this;
        _this.initSignFloatingPointSignExponentBitPatternSignificandBitPattern({}, _this.constructor.prototype.sign$get.call(signOf), _this.constructor.prototype.exponentBitPattern$get.call(magnitudeOf), _this.constructor.prototype.significandBitPattern$get.call(magnitudeOf));
        return;
    };
    /*Swift.(file).BinaryFloatingPoint.init(_:Source)*/
    /*Swift.(file).BinaryFloatingPoint.init(_:Source)*/
    BinaryFloatingPoint$implementation.prototype.initSource = function ($info, value) {
        var _this = this;
        return _cloneStruct(_this.constructor._convertFrom({}, value)["0"]);
        return;
    };
    /*Swift.(file).BinaryFloatingPoint.init(exactly:Source)*/
    /*Swift.(file).BinaryFloatingPoint.init(exactly:Source)*/
    BinaryFloatingPoint$implementation.prototype.initExactly = function ($info, value) {
        var _this = this;
        var $tuple = _this.constructor._convertFrom({}, value), value_ = $tuple && $tuple[0], exact = $tuple && $tuple[1];
        if (!((exact))) {
            return (this.$failed = true);
        }
        ;
        return _cloneStruct(value_);
        return;
    };
    /*Swift.(file).BinaryFloatingPoint.isTotallyOrdered(belowOrEqualTo:Self)*/
    /*Swift.(file).BinaryFloatingPoint.isTotallyOrdered(belowOrEqualTo:Self)*/
    BinaryFloatingPoint$implementation.prototype.isTotallyOrderedBelowOrEqualTo = function ($info, other) {
        var _this = this;
        if ((_this.constructor.infix_60({}, _this, other))) {
            return true;
        }
        ;
        if ((_this.constructor.infix_62({}, other, _this))) {
            return false;
        }
        ;
        if ((FloatingPointSign.infix_33_61({}, _this.constructor.prototype.sign$get.call(_this), _this.constructor.prototype.sign$get.call(other)))) {
            return FloatingPointSign.infix_61_61({}, _this.constructor.prototype.sign$get.call(_this), FloatingPointSign.minus);
        }
        ;
        if ((((function () { throw '!unclarifiedGeneric:Self.RawExponent'; })()).infix_62({}, _this.constructor.prototype.exponentBitPattern$get.call(_this), _this.constructor.prototype.exponentBitPattern$get.call(other)))) {
            return FloatingPointSign.infix_61_61({}, _this.constructor.prototype.sign$get.call(_this), FloatingPointSign.minus);
        }
        ;
        if ((((function () { throw '!unclarifiedGeneric:Self.RawExponent'; })()).infix_60({}, _this.constructor.prototype.exponentBitPattern$get.call(_this), _this.constructor.prototype.exponentBitPattern$get.call(other)))) {
            return FloatingPointSign.infix_61_61({}, _this.constructor.prototype.sign$get.call(_this), FloatingPointSign.plus);
        }
        ;
        if ((((function () { throw '!unclarifiedGeneric:Self.RawSignificand'; })()).infix_62({}, _this.constructor.prototype.significandBitPattern$get.call(_this), _this.constructor.prototype.significandBitPattern$get.call(other)))) {
            return FloatingPointSign.infix_61_61({}, _this.constructor.prototype.sign$get.call(_this), FloatingPointSign.minus);
        }
        ;
        if ((((function () { throw '!unclarifiedGeneric:Self.RawSignificand'; })()).infix_60({}, _this.constructor.prototype.significandBitPattern$get.call(_this), _this.constructor.prototype.significandBitPattern$get.call(other)))) {
            return FloatingPointSign.infix_61_61({}, _this.constructor.prototype.sign$get.call(_this), FloatingPointSign.plus);
        }
        ;
        return true;
    };
    /*Swift.(file).BinaryFloatingPoint.init(_:Source)*/
    /*Swift.(file).BinaryFloatingPoint.init(_:Source)*/
    BinaryFloatingPoint$implementation.prototype.initSource = function ($info, value) {
        var _this = this;
        return _cloneStruct(_this.constructor._convertFrom({}, value)["0"]);
        return;
    };
    /*Swift.(file).BinaryFloatingPoint.init(exactly:Source)*/
    /*Swift.(file).BinaryFloatingPoint.init(exactly:Source)*/
    BinaryFloatingPoint$implementation.prototype.initExactly = function ($info, value) {
        var _this = this;
        var $tuple = _this.constructor._convertFrom({}, value), value_ = $tuple && $tuple[0], exact = $tuple && $tuple[1];
        if (!((exact))) {
            return (this.$failed = true);
        }
        ;
        return _cloneStruct(value_);
        return;
    };
    /*Swift.(file).BinaryFloatingPoint.random(in:Range<Self>,using:T)*/
    /*Swift.(file).BinaryFloatingPoint.random(in:Range<Self>,using:T)*/
    BinaryFloatingPoint$implementation.randomInUsing = function ($info, range, generator$inout) {
        var _this = this;
        var generator = generator$inout.get();
        var $result = (function () {
            preconditionFileLine({}, function () { return Bool.prefix_33({}, range.isEmpty); }, function () { return "Can't get random value with an empty range"; }, '?3', '?3');
            var delta = _this.infix_45({}, range.upperBound, range.lowerBound);
            preconditionFileLine({}, function () { return _this.prototype._isFinite$get.call(delta); }, function () { return "There is no uniform distribution on an infinite range"; }, '?3', '?3');
            var rand;
            if ((Int.infix_61_61({}, ((function () { throw '!unclarifiedGeneric:Self.RawSignificand'; })()).bitWidth, Int.infix_43({}, _this.significandBitCount, 1)))) {
                rand = generator.next({ $setThis: function ($val) { return generator = $val; } });
            }
            else {
                var significandCount = Int.infix_43({}, _this.significandBitCount, 1);
                var maxSignificand = ((function () { throw '!unclarifiedGeneric:Self.RawSignificand'; })()).infix_60_60({}, _create(((function () { throw '!unclarifiedGeneric:Self.RawSignificand'; })()), 'initIntegerLiteral', {}, 1), significandCount);
                rand = ((function () { throw '!unclarifiedGeneric:Self.RawSignificand'; })()).infix_38({}, generator.next({ $setThis: function ($val) { return generator = $val; } }), ((function () { throw '!unclarifiedGeneric:Self.RawSignificand'; })()).infix_45({}, maxSignificand, _create(((function () { throw '!unclarifiedGeneric:Self.RawSignificand'; })()), 'initIntegerLiteral', {}, 1)));
            }
            ;
            var unitRandom = _this.infix_42({}, _create(_this, 'initSource', {}, rand), _this.infix_47({}, _this.ulpOfOne, _create(_this, 'initIntegerLiteral', {}, 2)));
            var randFloat = _this.infix_43({}, _this.infix_42({}, delta, unitRandom), range.lowerBound);
            if ((_this.infix_61_61({}, randFloat, range.upperBound))) {
                return _this.randomInUsing({}, range, { get: function () { return generator; }, set: function ($val) { return generator = $val; } });
            }
            ;
            return randFloat;
        })();
        generator$inout.set(generator);
        return $result;
    };
    /*Swift.(file).BinaryFloatingPoint.random(in:Range<Self>)*/
    /*Swift.(file).BinaryFloatingPoint.random(in:Range<Self>)*/
    BinaryFloatingPoint$implementation.randomIn = function ($info, range) {
        var _this = this;
        var g = _create(SystemRandomNumberGenerator, 'init', {});
        return _this.randomInUsing({}, range, { get: function () { return g; }, set: function ($val) { return g = $val; } });
    };
    /*Swift.(file).BinaryFloatingPoint.random(in:ClosedRange<Self>,using:T)*/
    /*Swift.(file).BinaryFloatingPoint.random(in:ClosedRange<Self>,using:T)*/
    BinaryFloatingPoint$implementation.randomInUsing = function ($info, range, generator$inout) {
        var _this = this;
        var generator = generator$inout.get();
        var $result = (function () {
            preconditionFileLine({}, function () { return Bool.prefix_33({}, range.isEmpty); }, function () { return "Can't get random value with an empty range"; }, '?3', '?3');
            var delta = _this.infix_45({}, range.upperBound, range.lowerBound);
            preconditionFileLine({}, function () { return _this.prototype._isFinite$get.call(delta); }, function () { return "There is no uniform distribution on an infinite range"; }, '?3', '?3');
            var rand;
            if ((Int.infix_61_61({}, ((function () { throw '!unclarifiedGeneric:Self.RawSignificand'; })()).bitWidth, Int.infix_43({}, _this.significandBitCount, 1)))) {
                rand = generator.next({ $setThis: function ($val) { return generator = $val; } });
                var tmp_1 = UInt8.infix_38({}, generator.next({ $setThis: function ($val) { return generator = $val; } }), 1);
                if ((Bool.infix_38_38({}, ((function () { throw '!unclarifiedGeneric:Self.RawSignificand'; })()).infix_61_61({}, rand, ((function () { throw '!unclarifiedGeneric:Self.RawSignificand'; })()).max), function () { return UInt8.infix_61_61({}, tmp_1, 1); }))) {
                    return range.upperBound;
                }
                ;
            }
            else {
                var significandCount = Int.infix_43({}, _this.significandBitCount, 1);
                var maxSignificand = ((function () { throw '!unclarifiedGeneric:Self.RawSignificand'; })()).infix_60_60({}, _create(((function () { throw '!unclarifiedGeneric:Self.RawSignificand'; })()), 'initIntegerLiteral', {}, 1), significandCount);
                rand = generator.nextUpperBound({ $setThis: function ($val) { return generator = $val; } }, ((function () { throw '!unclarifiedGeneric:Self.RawSignificand'; })()).infix_43({}, maxSignificand, _create(((function () { throw '!unclarifiedGeneric:Self.RawSignificand'; })()), 'initIntegerLiteral', {}, 1)));
                if ((((function () { throw '!unclarifiedGeneric:Self.RawSignificand'; })()).infix_61_61({}, rand, maxSignificand))) {
                    return range.upperBound;
                }
                ;
            }
            ;
            var unitRandom = _this.infix_42({}, _create(_this, 'initSource', {}, rand), _this.infix_47({}, _this.ulpOfOne, _create(_this, 'initIntegerLiteral', {}, 2)));
            var randFloat = _this.infix_43({}, _this.infix_42({}, delta, unitRandom), range.lowerBound);
            return randFloat;
        })();
        generator$inout.set(generator);
        return $result;
    };
    /*Swift.(file).BinaryFloatingPoint.random(in:ClosedRange<Self>)*/
    /*Swift.(file).BinaryFloatingPoint.random(in:ClosedRange<Self>)*/
    BinaryFloatingPoint$implementation.randomIn = function ($info, range) {
        var _this = this;
        var g = _create(SystemRandomNumberGenerator, 'init', {});
        return _this.randomInUsing({}, range, { get: function () { return g; }, set: function ($val) { return g = $val; } });
    };
    BinaryFloatingPoint$implementation._convertFrom = function ($info, number) {
        return { 0: number, 1: true /*exact*/ };
    };
    BinaryFloatingPoint$implementation.initExactly$failable = true;
    BinaryFloatingPoint$implementation.initExactly$failable = true;
    return BinaryFloatingPoint$implementation;
}());
if (typeof FloatingPoint$implementation != 'undefined')
    _mixin(BinaryFloatingPoint$implementation, FloatingPoint$implementation, false);
if (typeof ExpressibleByFloatLiteral$implementation != 'undefined')
    _mixin(BinaryFloatingPoint$implementation, ExpressibleByFloatLiteral$implementation, false);
var MIO_Mixin_Float = /** @class */ (function () {
    function MIO_Mixin_Float() {
    }
    /*Swift.(file).Float.init()*/
    /*Swift.(file).Float.init()*/
    MIO_Mixin_Float.prototype.init = function ($info) {
        throw 'unsupported method Swift.(file).Float.init() in ' + this.constructor.name;
    };
    /*Swift.(file).Float.init(_:FPIEEE32)*/
    /*Swift.(file).Float.init(_:FPIEEE32)*/
    MIO_Mixin_Float.prototype.initFPIEEE32 = function ($info, _value) {
        throw 'unsupported method Swift.(file).Float.init(_:FPIEEE32) in ' + this.constructor.name;
    };
    /*Swift.(file).Float.init(from:Decoder)*/
    /*Swift.(file).Decodable.init(from:Decoder)*/
    MIO_Mixin_Float.prototype.initFromDecoder = function ($info, decoder) {
        throw 'unsupported method Swift.(file).Float.init(from:Decoder) in ' + this.constructor.name;
    };
    /*Swift.(file).Float.encode(to:Encoder)*/
    /*Swift.(file).Encodable.encode(to:Encoder)*/
    MIO_Mixin_Float.prototype.encodeTo = function ($info, encoder) {
        throw 'unsupported method Swift.(file).Float.encode(to:Encoder) in ' + this.constructor.name;
    };
    /*Swift.(file).Float.init(_:S)*/
    /*Swift.(file).LosslessStringConvertible.init(_:String)*/
    MIO_Mixin_Float.prototype.initString = function ($info, _text) {
        throw 'unsupported method Swift.(file).Float.init(_:S) in ' + this.constructor.name;
    };
    /*Swift.(file).Float.description*/
    MIO_Mixin_Float.prototype.description$get = function () {
        var result = this.toString();
        if (!result.includes('.'))
            result += '.0';
        return result;
    };
    Object.defineProperty(MIO_Mixin_Float.prototype, "description", {
        get: function () { return this.description$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).Float.debugDescription*/
    MIO_Mixin_Float.prototype.debugDescription$get = function () {
        throw 'unsupported variable Swift.(file).Float.debugDescription in ' + this.constructor.name;
    };
    Object.defineProperty(MIO_Mixin_Float.prototype, "debugDescription", {
        get: function () { return this.debugDescription$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).Float.write(to:Target)*/
    /*Swift.(file).TextOutputStreamable.write(to:Target)*/
    MIO_Mixin_Float.prototype.writeTo = function ($info, target$inout) {
        throw 'unsupported method Swift.(file).Float.write(to:Target) in ' + this.constructor.name;
    };
    /*Swift.(file).Float.exponentBitCount*/
    MIO_Mixin_Float.exponentBitCount$get = function () {
        throw 'unsupported variable Swift.(file).Float.exponentBitCount in ' + this.constructor.name;
    };
    Object.defineProperty(MIO_Mixin_Float, "exponentBitCount", {
        get: function () { return this.exponentBitCount$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).Float.significandBitCount*/
    MIO_Mixin_Float.significandBitCount$get = function () {
        throw 'unsupported variable Swift.(file).Float.significandBitCount in ' + this.constructor.name;
    };
    Object.defineProperty(MIO_Mixin_Float, "significandBitCount", {
        get: function () { return this.significandBitCount$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).Float.bitPattern*/
    MIO_Mixin_Float.prototype.bitPattern$get = function () {
        throw 'unsupported variable Swift.(file).Float.bitPattern in ' + this.constructor.name;
    };
    Object.defineProperty(MIO_Mixin_Float.prototype, "bitPattern", {
        get: function () { return this.bitPattern$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).Float.init(bitPattern:UInt32)*/
    /*Swift.(file).Float.init(bitPattern:UInt32)*/
    MIO_Mixin_Float.prototype.initBitPatternUInt32 = function ($info, bitPattern) {
        throw 'unsupported method Swift.(file).Float.init(bitPattern:UInt32) in ' + this.constructor.name;
    };
    /*Swift.(file).Float.sign*/
    MIO_Mixin_Float.prototype.sign$get = function () {
        throw 'unsupported variable Swift.(file).Float.sign in ' + this.constructor.name;
    };
    Object.defineProperty(MIO_Mixin_Float.prototype, "sign", {
        get: function () { return this.sign$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).Float.isSignMinus*/
    MIO_Mixin_Float.prototype.isSignMinus$get = function () {
        throw 'unsupported variable Swift.(file).Float.isSignMinus in ' + this.constructor.name;
    };
    Object.defineProperty(MIO_Mixin_Float.prototype, "isSignMinus", {
        get: function () { return this.isSignMinus$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).Float.exponentBitPattern*/
    MIO_Mixin_Float.prototype.exponentBitPattern$get = function () {
        throw 'unsupported variable Swift.(file).Float.exponentBitPattern in ' + this.constructor.name;
    };
    Object.defineProperty(MIO_Mixin_Float.prototype, "exponentBitPattern", {
        get: function () { return this.exponentBitPattern$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).Float.significandBitPattern*/
    MIO_Mixin_Float.prototype.significandBitPattern$get = function () {
        throw 'unsupported variable Swift.(file).Float.significandBitPattern in ' + this.constructor.name;
    };
    Object.defineProperty(MIO_Mixin_Float.prototype, "significandBitPattern", {
        get: function () { return this.significandBitPattern$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).Float.init(sign:FloatingPointSign,exponentBitPattern:UInt,significandBitPattern:UInt32)*/
    /*Swift.(file).BinaryFloatingPoint.init(sign:FloatingPointSign,exponentBitPattern:Self.RawExponent,significandBitPattern:Self.RawSignificand)*/
    MIO_Mixin_Float.prototype.initSignFloatingPointSignExponentBitPatternSignificandBitPattern = function ($info, sign, exponentBitPattern, significandBitPattern) {
        throw 'unsupported method Swift.(file).Float.init(sign:FloatingPointSign,exponentBitPattern:UInt,significandBitPattern:UInt32) in ' + this.constructor.name;
    };
    /*Swift.(file).Float.isCanonical*/
    MIO_Mixin_Float.prototype.isCanonical$get = function () {
        throw 'unsupported variable Swift.(file).Float.isCanonical in ' + this.constructor.name;
    };
    Object.defineProperty(MIO_Mixin_Float.prototype, "isCanonical", {
        get: function () { return this.isCanonical$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).Float.infinity*/
    MIO_Mixin_Float.infinity$get = function () {
        throw 'unsupported variable Swift.(file).Float.infinity in ' + this.constructor.name;
    };
    Object.defineProperty(MIO_Mixin_Float, "infinity", {
        get: function () { return this.infinity$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).Float.nan*/
    MIO_Mixin_Float.nan$get = function () {
        throw 'unsupported variable Swift.(file).Float.nan in ' + this.constructor.name;
    };
    Object.defineProperty(MIO_Mixin_Float, "nan", {
        get: function () { return this.nan$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).Float.signalingNaN*/
    MIO_Mixin_Float.signalingNaN$get = function () {
        throw 'unsupported variable Swift.(file).Float.signalingNaN in ' + this.constructor.name;
    };
    Object.defineProperty(MIO_Mixin_Float, "signalingNaN", {
        get: function () { return this.signalingNaN$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).Float.quietNaN*/
    MIO_Mixin_Float.quietNaN$get = function () {
        throw 'unsupported variable Swift.(file).Float.quietNaN in ' + this.constructor.name;
    };
    Object.defineProperty(MIO_Mixin_Float, "quietNaN", {
        get: function () { return this.quietNaN$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).Float.greatestFiniteMagnitude*/
    MIO_Mixin_Float.greatestFiniteMagnitude$get = function () {
        throw 'unsupported variable Swift.(file).Float.greatestFiniteMagnitude in ' + this.constructor.name;
    };
    Object.defineProperty(MIO_Mixin_Float, "greatestFiniteMagnitude", {
        get: function () { return this.greatestFiniteMagnitude$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).Float.pi*/
    MIO_Mixin_Float.pi$get = function () {
        throw 'unsupported variable Swift.(file).Float.pi in ' + this.constructor.name;
    };
    Object.defineProperty(MIO_Mixin_Float, "pi", {
        get: function () { return this.pi$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).Float.ulp*/
    MIO_Mixin_Float.prototype.ulp$get = function () {
        throw 'unsupported variable Swift.(file).Float.ulp in ' + this.constructor.name;
    };
    Object.defineProperty(MIO_Mixin_Float.prototype, "ulp", {
        get: function () { return this.ulp$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).Float.leastNormalMagnitude*/
    MIO_Mixin_Float.leastNormalMagnitude$get = function () {
        throw 'unsupported variable Swift.(file).Float.leastNormalMagnitude in ' + this.constructor.name;
    };
    Object.defineProperty(MIO_Mixin_Float, "leastNormalMagnitude", {
        get: function () { return this.leastNormalMagnitude$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).Float.leastNonzeroMagnitude*/
    MIO_Mixin_Float.leastNonzeroMagnitude$get = function () {
        throw 'unsupported variable Swift.(file).Float.leastNonzeroMagnitude in ' + this.constructor.name;
    };
    Object.defineProperty(MIO_Mixin_Float, "leastNonzeroMagnitude", {
        get: function () { return this.leastNonzeroMagnitude$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).Float.ulpOfOne*/
    MIO_Mixin_Float.ulpOfOne$get = function () {
        var _this = this;
        return _create(_this, 'initIntegerLiteral', {}, 1).ulp;
    };
    Object.defineProperty(MIO_Mixin_Float, "ulpOfOne", {
        get: function () {
            return this.ulpOfOne$get();
        },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).Float.exponent*/
    MIO_Mixin_Float.prototype.exponent$get = function () {
        throw 'unsupported variable Swift.(file).Float.exponent in ' + this.constructor.name;
    };
    Object.defineProperty(MIO_Mixin_Float.prototype, "exponent", {
        get: function () { return this.exponent$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).Float.significand*/
    MIO_Mixin_Float.prototype.significand$get = function () {
        throw 'unsupported variable Swift.(file).Float.significand in ' + this.constructor.name;
    };
    Object.defineProperty(MIO_Mixin_Float.prototype, "significand", {
        get: function () { return this.significand$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).Float.init(sign:FloatingPointSign,exponent:Int,significand:Float)*/
    /*Swift.(file).FloatingPoint.init(sign:FloatingPointSign,exponent:Self.Exponent,significand:Self)*/
    MIO_Mixin_Float.prototype.initSignFloatingPointSignExponentSignificand = function ($info, sign, exponent, significand) {
        throw 'unsupported method Swift.(file).Float.init(sign:FloatingPointSign,exponent:Int,significand:Float) in ' + this.constructor.name;
    };
    /*Swift.(file).Float.init(nan:Float.RawSignificand,signaling:Bool)*/
    /*Swift.(file).Float.init(nan:Float.RawSignificand,signaling:Bool)*/
    MIO_Mixin_Float.prototype.initNanFloatRawSignificandSignalingBool = function ($info, payload, signaling) {
        throw 'unsupported method Swift.(file).Float.init(nan:Float.RawSignificand,signaling:Bool) in ' + this.constructor.name;
    };
    /*Swift.(file).Float.nextUp*/
    MIO_Mixin_Float.prototype.nextUp$get = function () {
        throw 'unsupported variable Swift.(file).Float.nextUp in ' + this.constructor.name;
    };
    Object.defineProperty(MIO_Mixin_Float.prototype, "nextUp", {
        get: function () { return this.nextUp$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).Float.round(_:FloatingPointRoundingRule)*/
    /*Swift.(file).FloatingPoint.round(_:FloatingPointRoundingRule)*/
    MIO_Mixin_Float.prototype.round = function ($info, rule) {
        throw 'unsupported method Swift.(file).Float.round(_:FloatingPointRoundingRule) in ' + this.constructor.name;
    };
    /*Swift.(file).Float.negate()*/
    /*Swift.(file).FloatingPoint.negate()*/
    /*Swift.(file).SignedNumeric.negate()*/
    MIO_Mixin_Float.prototype.negate = function ($info) {
        $info.$setThis(-this);
    };
    /*Swift.(file).Float.+=infix(_:Float,_:Float)*/
    /*Swift.(file).FloatingPoint.+=infix(_:Self,_:Self)*/
    /*Swift.(file).AdditiveArithmetic.+=infix(_:Self,_:Self)*/
    MIO_Mixin_Float.infix_43_61 = function ($info, lhs$inout, rhs) {
        lhs$inout.set(lhs$inout.get() + rhs);
    };
    /*Swift.(file).Float.-=infix(_:Float,_:Float)*/
    /*Swift.(file).FloatingPoint.-=infix(_:Self,_:Self)*/
    /*Swift.(file).AdditiveArithmetic.-=infix(_:Self,_:Self)*/
    MIO_Mixin_Float.infix_45_61 = function ($info, lhs$inout, rhs) {
        lhs$inout.set(lhs$inout.get() - rhs);
    };
    /*Swift.(file).Float.*=infix(_:Float,_:Float)*/
    /*Swift.(file).FloatingPoint.*=infix(_:Self,_:Self)*/
    /*Swift.(file).Numeric.*=infix(_:Self,_:Self)*/
    MIO_Mixin_Float.infix_42_61 = function ($info, lhs$inout, rhs) {
        lhs$inout.set(lhs$inout.get() * rhs);
    };
    /*Swift.(file).Float./=infix(_:Float,_:Float)*/
    /*Swift.(file).FloatingPoint./=infix(_:Self,_:Self)*/
    MIO_Mixin_Float.infix_47_61 = function ($info, lhs$inout, rhs) {
        lhs$inout.set(lhs$inout.get() / rhs);
    };
    /*Swift.(file).Float.formRemainder(dividingBy:Float)*/
    /*Swift.(file).FloatingPoint.formRemainder(dividingBy:Self)*/
    MIO_Mixin_Float.prototype.formRemainderDividingBy = function ($info, other) {
        throw 'unsupported method Swift.(file).Float.formRemainder(dividingBy:Float) in ' + this.constructor.name;
    };
    /*Swift.(file).Float.formTruncatingRemainder(dividingBy:Float)*/
    /*Swift.(file).FloatingPoint.formTruncatingRemainder(dividingBy:Self)*/
    MIO_Mixin_Float.prototype.formTruncatingRemainderDividingBy = function ($info, other) {
        throw 'unsupported method Swift.(file).Float.formTruncatingRemainder(dividingBy:Float) in ' + this.constructor.name;
    };
    /*Swift.(file).Float.formSquareRoot()*/
    /*Swift.(file).FloatingPoint.formSquareRoot()*/
    MIO_Mixin_Float.prototype.formSquareRoot = function ($info) {
        throw 'unsupported method Swift.(file).Float.formSquareRoot() in ' + this.constructor.name;
    };
    /*Swift.(file).Float.addProduct(_:Float,_:Float)*/
    /*Swift.(file).FloatingPoint.addProduct(_:Self,_:Self)*/
    MIO_Mixin_Float.prototype.addProduct = function ($info, lhs, rhs) {
        throw 'unsupported method Swift.(file).Float.addProduct(_:Float,_:Float) in ' + this.constructor.name;
    };
    /*Swift.(file).Float.isEqual(to:Float)*/
    /*Swift.(file).FloatingPoint.isEqual(to:Self)*/
    MIO_Mixin_Float.prototype.isEqualTo = function ($info, other) {
        throw 'unsupported method Swift.(file).Float.isEqual(to:Float) in ' + this.constructor.name;
    };
    /*Swift.(file).Float.isLess(than:Float)*/
    /*Swift.(file).FloatingPoint.isLess(than:Self)*/
    MIO_Mixin_Float.prototype.isLessThan = function ($info, other) {
        throw 'unsupported method Swift.(file).Float.isLess(than:Float) in ' + this.constructor.name;
    };
    /*Swift.(file).Float.isLessThanOrEqualTo(_:Float)*/
    /*Swift.(file).FloatingPoint.isLessThanOrEqualTo(_:Self)*/
    MIO_Mixin_Float.prototype.isLessThanOrEqualTo = function ($info, other) {
        throw 'unsupported method Swift.(file).Float.isLessThanOrEqualTo(_:Float) in ' + this.constructor.name;
    };
    /*Swift.(file).Float.isNormal*/
    MIO_Mixin_Float.prototype.isNormal$get = function () {
        throw 'unsupported variable Swift.(file).Float.isNormal in ' + this.constructor.name;
    };
    Object.defineProperty(MIO_Mixin_Float.prototype, "isNormal", {
        get: function () { return this.isNormal$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).Float.isZero*/
    MIO_Mixin_Float.prototype.isZero$get = function () {
        throw 'unsupported variable Swift.(file).Float.isZero in ' + this.constructor.name;
    };
    Object.defineProperty(MIO_Mixin_Float.prototype, "isZero", {
        get: function () { return this.isZero$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).Float.isSubnormal*/
    MIO_Mixin_Float.prototype.isSubnormal$get = function () {
        throw 'unsupported variable Swift.(file).Float.isSubnormal in ' + this.constructor.name;
    };
    Object.defineProperty(MIO_Mixin_Float.prototype, "isSubnormal", {
        get: function () { return this.isSubnormal$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).Float.isInfinite*/
    MIO_Mixin_Float.prototype.isInfinite$get = function () {
        throw 'unsupported variable Swift.(file).Float.isInfinite in ' + this.constructor.name;
    };
    Object.defineProperty(MIO_Mixin_Float.prototype, "isInfinite", {
        get: function () { return this.isInfinite$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).Float.isSignalingNaN*/
    MIO_Mixin_Float.prototype.isSignalingNaN$get = function () {
        throw 'unsupported variable Swift.(file).Float.isSignalingNaN in ' + this.constructor.name;
    };
    Object.defineProperty(MIO_Mixin_Float.prototype, "isSignalingNaN", {
        get: function () { return this.isSignalingNaN$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).Float.binade*/
    MIO_Mixin_Float.prototype.binade$get = function () {
        throw 'unsupported variable Swift.(file).Float.binade in ' + this.constructor.name;
    };
    Object.defineProperty(MIO_Mixin_Float.prototype, "binade", {
        get: function () { return this.binade$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).Float.significandWidth*/
    MIO_Mixin_Float.prototype.significandWidth$get = function () {
        throw 'unsupported variable Swift.(file).Float.significandWidth in ' + this.constructor.name;
    };
    Object.defineProperty(MIO_Mixin_Float.prototype, "significandWidth", {
        get: function () { return this.significandWidth$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).Float.init(floatLiteral:Float)*/
    /*Swift.(file).ExpressibleByFloatLiteral.init(floatLiteral:Self.FloatLiteralType)*/
    MIO_Mixin_Float.prototype.initFloatLiteral = function ($info, value) {
        throw 'unsupported method Swift.(file).Float.init(floatLiteral:Float) in ' + this.constructor.name;
    };
    /*Swift.(file).Float.init(_builtinIntegerLiteral:IntLiteral)*/
    /*Swift.(file)._ExpressibleByBuiltinIntegerLiteral.init(_builtinIntegerLiteral:IntLiteral)*/
    MIO_Mixin_Float.prototype.init_builtinIntegerLiteralIntLiteral = function ($info, value) {
        throw 'unsupported method Swift.(file).Float.init(_builtinIntegerLiteral:IntLiteral) in ' + this.constructor.name;
    };
    /*Swift.(file).Float.init(integerLiteral:Int64)*/
    /*Swift.(file).ExpressibleByIntegerLiteral.init(integerLiteral:Self.IntegerLiteralType)*/
    MIO_Mixin_Float.prototype.initIntegerLiteral = function ($info, value) {
        throw 'unsupported method Swift.(file).Float.init(integerLiteral:Int64) in ' + this.constructor.name;
    };
    /*Swift.(file).Float.init(_builtinFloatLiteral:FPIEEE80)*/
    /*Swift.(file)._ExpressibleByBuiltinFloatLiteral.init(_builtinFloatLiteral:_MaxBuiltinFloatType)*/
    MIO_Mixin_Float.prototype.init_builtinFloatLiteral_MaxBuiltinFloatType = function ($info, value) {
        throw 'unsupported method Swift.(file).Float.init(_builtinFloatLiteral:FPIEEE80) in ' + this.constructor.name;
    };
    /*Swift.(file).Float.hash(into:Hasher)*/
    /*Swift.(file).Hashable.hash(into:Hasher)*/
    MIO_Mixin_Float.prototype.hashInto = function ($info, hasher$inout) {
        throw 'unsupported method Swift.(file).Float.hash(into:Hasher) in ' + this.constructor.name;
    };
    /*Swift.(file).Float.hashValue*/
    MIO_Mixin_Float.prototype.hashValue$get = function () {
        throw 'unsupported variable Swift.(file).Float.hashValue in ' + this.constructor.name;
    };
    Object.defineProperty(MIO_Mixin_Float.prototype, "hashValue", {
        get: function () { return this.hashValue$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).Float.magnitude*/
    MIO_Mixin_Float.prototype.magnitude$get = function () {
        throw 'unsupported variable Swift.(file).Float.magnitude in ' + this.constructor.name;
    };
    Object.defineProperty(MIO_Mixin_Float.prototype, "magnitude", {
        get: function () { return this.magnitude$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).Float.-prefix(_:Float)*/
    /*Swift.(file).FloatingPoint.-prefix(_:Self)*/
    /*Swift.(file).SignedNumeric.-prefix(_:Self)*/
    MIO_Mixin_Float.prefix_45 = function ($info, x) {
        return -x;
    };
    /*Swift.(file).Float.init(_:Int)*/
    /*Swift.(file).FloatingPoint.init(_:Int)*/
    MIO_Mixin_Float.prototype.initInt = function ($info, v) {
        throw 'unsupported method Swift.(file).Float.init(_:Int) in ' + this.constructor.name;
    };
    /*Swift.(file).Float.init(_:Float)*/
    /*Swift.(file).BinaryFloatingPoint.init(_:Float)*/
    MIO_Mixin_Float.prototype.initFloat = function ($info, other) {
        throw 'unsupported method Swift.(file).Float.init(_:Float) in ' + this.constructor.name;
    };
    /*Swift.(file).Float.init(exactly:Float)*/
    /*Swift.(file).Float.init(exactly:Float)*/
    MIO_Mixin_Float.prototype.initExactlyFloat = function ($info, other) {
        throw 'unsupported method Swift.(file).Float.init(exactly:Float) in ' + this.constructor.name;
    };
    /*Swift.(file).Float.init(_:Double)*/
    /*Swift.(file).BinaryFloatingPoint.init(_:Double)*/
    MIO_Mixin_Float.prototype.initDouble = function ($info, other) {
        throw 'unsupported method Swift.(file).Float.init(_:Double) in ' + this.constructor.name;
    };
    /*Swift.(file).Float.init(exactly:Double)*/
    /*Swift.(file).Float.init(exactly:Double)*/
    MIO_Mixin_Float.prototype.initExactlyDouble = function ($info, other) {
        throw 'unsupported method Swift.(file).Float.init(exactly:Double) in ' + this.constructor.name;
    };
    /*Swift.(file).Float.init(_:Float80)*/
    /*Swift.(file).BinaryFloatingPoint.init(_:Float80)*/
    MIO_Mixin_Float.prototype.initFloat80 = function ($info, other) {
        throw 'unsupported method Swift.(file).Float.init(_:Float80) in ' + this.constructor.name;
    };
    /*Swift.(file).Float.init(exactly:Float80)*/
    /*Swift.(file).Float.init(exactly:Float80)*/
    MIO_Mixin_Float.prototype.initExactlyFloat80 = function ($info, other) {
        throw 'unsupported method Swift.(file).Float.init(exactly:Float80) in ' + this.constructor.name;
    };
    /*Swift.(file).Float.+infix(_:Float,_:Float)*/
    /*Swift.(file).FloatingPoint.+infix(_:Self,_:Self)*/
    /*Swift.(file).AdditiveArithmetic.+infix(_:Self,_:Self)*/
    MIO_Mixin_Float.infix_43 = function ($info, lhs, rhs) {
        return lhs + rhs;
    };
    /*Swift.(file).Float.-infix(_:Float,_:Float)*/
    /*Swift.(file).FloatingPoint.-infix(_:Self,_:Self)*/
    /*Swift.(file).AdditiveArithmetic.-infix(_:Self,_:Self)*/
    MIO_Mixin_Float.infix_45 = function ($info, lhs, rhs) {
        return lhs - rhs;
    };
    /*Swift.(file).Float.*infix(_:Float,_:Float)*/
    /*Swift.(file).FloatingPoint.*infix(_:Self,_:Self)*/
    /*Swift.(file).Numeric.*infix(_:Self,_:Self)*/
    MIO_Mixin_Float.infix_42 = function ($info, lhs, rhs) {
        return lhs * rhs;
    };
    /*Swift.(file).Float./infix(_:Float,_:Float)*/
    /*Swift.(file).FloatingPoint./infix(_:Self,_:Self)*/
    MIO_Mixin_Float.infix_47 = function ($info, lhs, rhs) {
        return lhs / rhs;
    };
    /*Swift.(file).Float.distance(to:Float)*/
    /*Swift.(file).Strideable.distance(to:Self)*/
    MIO_Mixin_Float.prototype.distanceTo = function ($info, other) {
        throw 'unsupported method Swift.(file).Float.distance(to:Float) in ' + this.constructor.name;
    };
    /*Swift.(file).Float.advanced(by:Float)*/
    /*Swift.(file).Strideable.advanced(by:Self.Stride)*/
    MIO_Mixin_Float.prototype.advancedBy = function ($info, amount) {
        throw 'unsupported method Swift.(file).Float.advanced(by:Float) in ' + this.constructor.name;
    };
    /*Swift.(file).Float.customMirror*/
    MIO_Mixin_Float.prototype.customMirror$get = function () {
        throw 'unsupported variable Swift.(file).Float.customMirror in ' + this.constructor.name;
    };
    Object.defineProperty(MIO_Mixin_Float.prototype, "customMirror", {
        get: function () { return this.customMirror$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).Float.customPlaygroundQuickLook*/
    MIO_Mixin_Float.prototype.customPlaygroundQuickLook$get = function () {
        throw 'unsupported variable Swift.(file).Float.customPlaygroundQuickLook in ' + this.constructor.name;
    };
    Object.defineProperty(MIO_Mixin_Float.prototype, "customPlaygroundQuickLook", {
        get: function () { return this.customPlaygroundQuickLook$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    MIO_Mixin_Float.prototype.init$vars = function () {
    };
    var _34, _35, _36, _37, _38, _39;
    MIO_Mixin_Float.$struct = true;
    MIO_Mixin_Float.$mixin = true;
    MIO_Mixin_Float.$infoAddress = '';
    MIO_Mixin_Float.initString$failable = true;
    MIO_Mixin_Float.initExactlyFloat$failable = true;
    MIO_Mixin_Float.initExactlyDouble$failable = true;
    MIO_Mixin_Float.initExactlyFloat80$failable = true;
    MIO_Mixin_Float.SIMD2Storage = (_34 = /** @class */ (function () {
            function class_58() {
            }
            /*Swift.(file).Float.SIMD2Storage.scalarCount*/
            class_58.prototype.scalarCount$get = function () {
                throw 'unsupported variable Swift.(file).Float.SIMD2Storage.scalarCount in ' + this.constructor.name;
            };
            Object.defineProperty(class_58.prototype, "scalarCount", {
                get: function () { return this.scalarCount$get(); },
                enumerable: true,
                configurable: true
            });
            ;
            /*Swift.(file).Float.SIMD2Storage.init()*/
            /*Swift.(file).SIMDStorage.init()*/
            class_58.prototype.init = function ($info) {
                throw 'unsupported method Swift.(file).Float.SIMD2Storage.init() in ' + this.constructor.name;
            };
            /*Swift.(file).Float.SIMD2Storage.subscript(_:Int)*/
            /*Swift.(file).SIMDStorage.subscript(_:Int)*/
            class_58.prototype.subscript$get = function ($info, index) {
                throw 'unsupported method Swift.(file).Float.SIMD2Storage.subscript(_:Int) in ' + this.constructor.name;
            }; /*Swift.(file).Float.SIMD2Storage.subscript(_:Int)*/
            /*Swift.(file).SIMDStorage.subscript(_:Int)*/
            class_58.prototype.subscript$set = function ($info, newValue, index) {
                throw 'unsupported method Swift.(file).Float.SIMD2Storage.subscript(_:Int) in ' + this.constructor.name;
            };
            class_58.prototype.init$vars = function () {
            };
            return class_58;
        }()),
        _34.$struct = true,
        _34.$infoAddress = '',
        _34);
    MIO_Mixin_Float.SIMD4Storage = (_35 = /** @class */ (function () {
            function class_59() {
            }
            /*Swift.(file).Float.SIMD4Storage.scalarCount*/
            class_59.prototype.scalarCount$get = function () {
                throw 'unsupported variable Swift.(file).Float.SIMD4Storage.scalarCount in ' + this.constructor.name;
            };
            Object.defineProperty(class_59.prototype, "scalarCount", {
                get: function () { return this.scalarCount$get(); },
                enumerable: true,
                configurable: true
            });
            ;
            /*Swift.(file).Float.SIMD4Storage.init()*/
            /*Swift.(file).SIMDStorage.init()*/
            class_59.prototype.init = function ($info) {
                throw 'unsupported method Swift.(file).Float.SIMD4Storage.init() in ' + this.constructor.name;
            };
            /*Swift.(file).Float.SIMD4Storage.subscript(_:Int)*/
            /*Swift.(file).SIMDStorage.subscript(_:Int)*/
            class_59.prototype.subscript$get = function ($info, index) {
                throw 'unsupported method Swift.(file).Float.SIMD4Storage.subscript(_:Int) in ' + this.constructor.name;
            }; /*Swift.(file).Float.SIMD4Storage.subscript(_:Int)*/
            /*Swift.(file).SIMDStorage.subscript(_:Int)*/
            class_59.prototype.subscript$set = function ($info, newValue, index) {
                throw 'unsupported method Swift.(file).Float.SIMD4Storage.subscript(_:Int) in ' + this.constructor.name;
            };
            class_59.prototype.init$vars = function () {
            };
            return class_59;
        }()),
        _35.$struct = true,
        _35.$infoAddress = '',
        _35);
    MIO_Mixin_Float.SIMD8Storage = (_36 = /** @class */ (function () {
            function class_60() {
            }
            /*Swift.(file).Float.SIMD8Storage.scalarCount*/
            class_60.prototype.scalarCount$get = function () {
                throw 'unsupported variable Swift.(file).Float.SIMD8Storage.scalarCount in ' + this.constructor.name;
            };
            Object.defineProperty(class_60.prototype, "scalarCount", {
                get: function () { return this.scalarCount$get(); },
                enumerable: true,
                configurable: true
            });
            ;
            /*Swift.(file).Float.SIMD8Storage.init()*/
            /*Swift.(file).SIMDStorage.init()*/
            class_60.prototype.init = function ($info) {
                throw 'unsupported method Swift.(file).Float.SIMD8Storage.init() in ' + this.constructor.name;
            };
            /*Swift.(file).Float.SIMD8Storage.subscript(_:Int)*/
            /*Swift.(file).SIMDStorage.subscript(_:Int)*/
            class_60.prototype.subscript$get = function ($info, index) {
                throw 'unsupported method Swift.(file).Float.SIMD8Storage.subscript(_:Int) in ' + this.constructor.name;
            }; /*Swift.(file).Float.SIMD8Storage.subscript(_:Int)*/
            /*Swift.(file).SIMDStorage.subscript(_:Int)*/
            class_60.prototype.subscript$set = function ($info, newValue, index) {
                throw 'unsupported method Swift.(file).Float.SIMD8Storage.subscript(_:Int) in ' + this.constructor.name;
            };
            class_60.prototype.init$vars = function () {
            };
            return class_60;
        }()),
        _36.$struct = true,
        _36.$infoAddress = '',
        _36);
    MIO_Mixin_Float.SIMD16Storage = (_37 = /** @class */ (function () {
            function class_61() {
            }
            /*Swift.(file).Float.SIMD16Storage.scalarCount*/
            class_61.prototype.scalarCount$get = function () {
                throw 'unsupported variable Swift.(file).Float.SIMD16Storage.scalarCount in ' + this.constructor.name;
            };
            Object.defineProperty(class_61.prototype, "scalarCount", {
                get: function () { return this.scalarCount$get(); },
                enumerable: true,
                configurable: true
            });
            ;
            /*Swift.(file).Float.SIMD16Storage.init()*/
            /*Swift.(file).SIMDStorage.init()*/
            class_61.prototype.init = function ($info) {
                throw 'unsupported method Swift.(file).Float.SIMD16Storage.init() in ' + this.constructor.name;
            };
            /*Swift.(file).Float.SIMD16Storage.subscript(_:Int)*/
            /*Swift.(file).SIMDStorage.subscript(_:Int)*/
            class_61.prototype.subscript$get = function ($info, index) {
                throw 'unsupported method Swift.(file).Float.SIMD16Storage.subscript(_:Int) in ' + this.constructor.name;
            }; /*Swift.(file).Float.SIMD16Storage.subscript(_:Int)*/
            /*Swift.(file).SIMDStorage.subscript(_:Int)*/
            class_61.prototype.subscript$set = function ($info, newValue, index) {
                throw 'unsupported method Swift.(file).Float.SIMD16Storage.subscript(_:Int) in ' + this.constructor.name;
            };
            class_61.prototype.init$vars = function () {
            };
            return class_61;
        }()),
        _37.$struct = true,
        _37.$infoAddress = '',
        _37);
    MIO_Mixin_Float.SIMD32Storage = (_38 = /** @class */ (function () {
            function class_62() {
            }
            /*Swift.(file).Float.SIMD32Storage.scalarCount*/
            class_62.prototype.scalarCount$get = function () {
                throw 'unsupported variable Swift.(file).Float.SIMD32Storage.scalarCount in ' + this.constructor.name;
            };
            Object.defineProperty(class_62.prototype, "scalarCount", {
                get: function () { return this.scalarCount$get(); },
                enumerable: true,
                configurable: true
            });
            ;
            /*Swift.(file).Float.SIMD32Storage.init()*/
            /*Swift.(file).SIMDStorage.init()*/
            class_62.prototype.init = function ($info) {
                throw 'unsupported method Swift.(file).Float.SIMD32Storage.init() in ' + this.constructor.name;
            };
            /*Swift.(file).Float.SIMD32Storage.subscript(_:Int)*/
            /*Swift.(file).SIMDStorage.subscript(_:Int)*/
            class_62.prototype.subscript$get = function ($info, index) {
                throw 'unsupported method Swift.(file).Float.SIMD32Storage.subscript(_:Int) in ' + this.constructor.name;
            }; /*Swift.(file).Float.SIMD32Storage.subscript(_:Int)*/
            /*Swift.(file).SIMDStorage.subscript(_:Int)*/
            class_62.prototype.subscript$set = function ($info, newValue, index) {
                throw 'unsupported method Swift.(file).Float.SIMD32Storage.subscript(_:Int) in ' + this.constructor.name;
            };
            class_62.prototype.init$vars = function () {
            };
            return class_62;
        }()),
        _38.$struct = true,
        _38.$infoAddress = '',
        _38);
    MIO_Mixin_Float.SIMD64Storage = (_39 = /** @class */ (function () {
            function class_63() {
            }
            /*Swift.(file).Float.SIMD64Storage.scalarCount*/
            class_63.prototype.scalarCount$get = function () {
                throw 'unsupported variable Swift.(file).Float.SIMD64Storage.scalarCount in ' + this.constructor.name;
            };
            Object.defineProperty(class_63.prototype, "scalarCount", {
                get: function () { return this.scalarCount$get(); },
                enumerable: true,
                configurable: true
            });
            ;
            /*Swift.(file).Float.SIMD64Storage.init()*/
            /*Swift.(file).SIMDStorage.init()*/
            class_63.prototype.init = function ($info) {
                throw 'unsupported method Swift.(file).Float.SIMD64Storage.init() in ' + this.constructor.name;
            };
            /*Swift.(file).Float.SIMD64Storage.subscript(_:Int)*/
            /*Swift.(file).SIMDStorage.subscript(_:Int)*/
            class_63.prototype.subscript$get = function ($info, index) {
                throw 'unsupported method Swift.(file).Float.SIMD64Storage.subscript(_:Int) in ' + this.constructor.name;
            }; /*Swift.(file).Float.SIMD64Storage.subscript(_:Int)*/
            /*Swift.(file).SIMDStorage.subscript(_:Int)*/
            class_63.prototype.subscript$set = function ($info, newValue, index) {
                throw 'unsupported method Swift.(file).Float.SIMD64Storage.subscript(_:Int) in ' + this.constructor.name;
            };
            class_63.prototype.init$vars = function () {
            };
            return class_63;
        }()),
        _39.$struct = true,
        _39.$infoAddress = '',
        _39);
    return MIO_Mixin_Float;
}());
if (typeof SIMDStorage$implementation != 'undefined')
    _mixin(MIO_Mixin_Float.SIMD2Storage, SIMDStorage$implementation, false);
if (typeof SIMDStorage$implementation != 'undefined')
    _mixin(MIO_Mixin_Float.SIMD4Storage, SIMDStorage$implementation, false);
if (typeof SIMDStorage$implementation != 'undefined')
    _mixin(MIO_Mixin_Float.SIMD8Storage, SIMDStorage$implementation, false);
if (typeof SIMDStorage$implementation != 'undefined')
    _mixin(MIO_Mixin_Float.SIMD16Storage, SIMDStorage$implementation, false);
if (typeof SIMDStorage$implementation != 'undefined')
    _mixin(MIO_Mixin_Float.SIMD32Storage, SIMDStorage$implementation, false);
if (typeof SIMDStorage$implementation != 'undefined')
    _mixin(MIO_Mixin_Float.SIMD64Storage, SIMDStorage$implementation, false);
if (typeof Codable$implementation != 'undefined')
    _mixin(MIO_Mixin_Float, Codable$implementation, false);
if (typeof LosslessStringConvertible$implementation != 'undefined')
    _mixin(MIO_Mixin_Float, LosslessStringConvertible$implementation, false);
if (typeof CustomStringConvertible$implementation != 'undefined')
    _mixin(MIO_Mixin_Float, CustomStringConvertible$implementation, false);
if (typeof CustomDebugStringConvertible$implementation != 'undefined')
    _mixin(MIO_Mixin_Float, CustomDebugStringConvertible$implementation, false);
if (typeof TextOutputStreamable$implementation != 'undefined')
    _mixin(MIO_Mixin_Float, TextOutputStreamable$implementation, false);
if (typeof BinaryFloatingPoint$implementation != 'undefined')
    _mixin(MIO_Mixin_Float, BinaryFloatingPoint$implementation, false);
if (typeof _ExpressibleByBuiltinIntegerLiteral$implementation != 'undefined')
    _mixin(MIO_Mixin_Float, _ExpressibleByBuiltinIntegerLiteral$implementation, false);
if (typeof ExpressibleByIntegerLiteral$implementation != 'undefined')
    _mixin(MIO_Mixin_Float, ExpressibleByIntegerLiteral$implementation, false);
if (typeof _ExpressibleByBuiltinFloatLiteral$implementation != 'undefined')
    _mixin(MIO_Mixin_Float, _ExpressibleByBuiltinFloatLiteral$implementation, false);
if (typeof Hashable$implementation != 'undefined')
    _mixin(MIO_Mixin_Float, Hashable$implementation, false);
if (typeof _HasCustomAnyHashableRepresentation$implementation != 'undefined')
    _mixin(MIO_Mixin_Float, _HasCustomAnyHashableRepresentation$implementation, false);
if (typeof Strideable$implementation != 'undefined')
    _mixin(MIO_Mixin_Float, Strideable$implementation, false);
if (typeof CustomReflectable$implementation != 'undefined')
    _mixin(MIO_Mixin_Float, CustomReflectable$implementation, false);
if (typeof _CustomPlaygroundQuickLookable$implementation != 'undefined')
    _mixin(MIO_Mixin_Float, _CustomPlaygroundQuickLookable$implementation, false);
if (typeof SIMDScalar$implementation != 'undefined')
    _mixin(MIO_Mixin_Float, SIMDScalar$implementation, false);
if (typeof _CVarArgPassedAsDouble$implementation != 'undefined')
    _mixin(MIO_Mixin_Float, _CVarArgPassedAsDouble$implementation, false);
if (typeof _CVarArgAligned$implementation != 'undefined')
    _mixin(MIO_Mixin_Float, _CVarArgAligned$implementation, false);
_mixin(Number, MIO_Mixin_Float, true);
var Float = /** @class */ (function () {
    function Float() {
    }
    return Float;
}());
_mixin(Float, MIO_Mixin_Float, true);
var MIO_Mixin_Double = /** @class */ (function () {
    function MIO_Mixin_Double() {
    }
    /*Swift.(file).Double.init()*/
    /*Swift.(file).Double.init()*/
    MIO_Mixin_Double.prototype.init = function ($info) {
        throw 'unsupported method Swift.(file).Double.init() in ' + this.constructor.name;
    };
    /*Swift.(file).Double.init(_:FPIEEE64)*/
    /*Swift.(file).Double.init(_:FPIEEE64)*/
    MIO_Mixin_Double.prototype.initFPIEEE64 = function ($info, _value) {
        throw 'unsupported method Swift.(file).Double.init(_:FPIEEE64) in ' + this.constructor.name;
    };
    /*Swift.(file).Double.init(from:Decoder)*/
    /*Swift.(file).Decodable.init(from:Decoder)*/
    MIO_Mixin_Double.prototype.initFromDecoder = function ($info, decoder) {
        throw 'unsupported method Swift.(file).Double.init(from:Decoder) in ' + this.constructor.name;
    };
    /*Swift.(file).Double.encode(to:Encoder)*/
    /*Swift.(file).Encodable.encode(to:Encoder)*/
    MIO_Mixin_Double.prototype.encodeTo = function ($info, encoder) {
        throw 'unsupported method Swift.(file).Double.encode(to:Encoder) in ' + this.constructor.name;
    };
    /*Swift.(file).Double.init(_:S)*/
    /*Swift.(file).LosslessStringConvertible.init(_:String)*/
    MIO_Mixin_Double.prototype.initString = function ($info, _text) {
        throw 'unsupported method Swift.(file).Double.init(_:S) in ' + this.constructor.name;
    };
    /*Swift.(file).Double.description*/
    MIO_Mixin_Double.prototype.description$get = function () {
        var result = this.toString();
        if (!result.includes('.'))
            result += '.0';
        return result;
    };
    Object.defineProperty(MIO_Mixin_Double.prototype, "description", {
        get: function () { return this.description$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).Double.debugDescription*/
    MIO_Mixin_Double.prototype.debugDescription$get = function () {
        throw 'unsupported variable Swift.(file).Double.debugDescription in ' + this.constructor.name;
    };
    Object.defineProperty(MIO_Mixin_Double.prototype, "debugDescription", {
        get: function () { return this.debugDescription$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).Double.write(to:Target)*/
    /*Swift.(file).TextOutputStreamable.write(to:Target)*/
    MIO_Mixin_Double.prototype.writeTo = function ($info, target$inout) {
        throw 'unsupported method Swift.(file).Double.write(to:Target) in ' + this.constructor.name;
    };
    /*Swift.(file).Double.exponentBitCount*/
    MIO_Mixin_Double.exponentBitCount$get = function () {
        throw 'unsupported variable Swift.(file).Double.exponentBitCount in ' + this.constructor.name;
    };
    Object.defineProperty(MIO_Mixin_Double, "exponentBitCount", {
        get: function () { return this.exponentBitCount$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).Double.significandBitCount*/
    MIO_Mixin_Double.significandBitCount$get = function () {
        throw 'unsupported variable Swift.(file).Double.significandBitCount in ' + this.constructor.name;
    };
    Object.defineProperty(MIO_Mixin_Double, "significandBitCount", {
        get: function () { return this.significandBitCount$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).Double.bitPattern*/
    MIO_Mixin_Double.prototype.bitPattern$get = function () {
        throw 'unsupported variable Swift.(file).Double.bitPattern in ' + this.constructor.name;
    };
    Object.defineProperty(MIO_Mixin_Double.prototype, "bitPattern", {
        get: function () { return this.bitPattern$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).Double.init(bitPattern:UInt64)*/
    /*Swift.(file).Double.init(bitPattern:UInt64)*/
    MIO_Mixin_Double.prototype.initBitPatternUInt64 = function ($info, bitPattern) {
        throw 'unsupported method Swift.(file).Double.init(bitPattern:UInt64) in ' + this.constructor.name;
    };
    /*Swift.(file).Double.sign*/
    MIO_Mixin_Double.prototype.sign$get = function () {
        throw 'unsupported variable Swift.(file).Double.sign in ' + this.constructor.name;
    };
    Object.defineProperty(MIO_Mixin_Double.prototype, "sign", {
        get: function () { return this.sign$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).Double.isSignMinus*/
    MIO_Mixin_Double.prototype.isSignMinus$get = function () {
        throw 'unsupported variable Swift.(file).Double.isSignMinus in ' + this.constructor.name;
    };
    Object.defineProperty(MIO_Mixin_Double.prototype, "isSignMinus", {
        get: function () { return this.isSignMinus$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).Double.exponentBitPattern*/
    MIO_Mixin_Double.prototype.exponentBitPattern$get = function () {
        throw 'unsupported variable Swift.(file).Double.exponentBitPattern in ' + this.constructor.name;
    };
    Object.defineProperty(MIO_Mixin_Double.prototype, "exponentBitPattern", {
        get: function () { return this.exponentBitPattern$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).Double.significandBitPattern*/
    MIO_Mixin_Double.prototype.significandBitPattern$get = function () {
        throw 'unsupported variable Swift.(file).Double.significandBitPattern in ' + this.constructor.name;
    };
    Object.defineProperty(MIO_Mixin_Double.prototype, "significandBitPattern", {
        get: function () { return this.significandBitPattern$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).Double.init(sign:FloatingPointSign,exponentBitPattern:UInt,significandBitPattern:UInt64)*/
    /*Swift.(file).BinaryFloatingPoint.init(sign:FloatingPointSign,exponentBitPattern:Self.RawExponent,significandBitPattern:Self.RawSignificand)*/
    MIO_Mixin_Double.prototype.initSignFloatingPointSignExponentBitPatternSignificandBitPattern = function ($info, sign, exponentBitPattern, significandBitPattern) {
        throw 'unsupported method Swift.(file).Double.init(sign:FloatingPointSign,exponentBitPattern:UInt,significandBitPattern:UInt64) in ' + this.constructor.name;
    };
    /*Swift.(file).Double.isCanonical*/
    MIO_Mixin_Double.prototype.isCanonical$get = function () {
        throw 'unsupported variable Swift.(file).Double.isCanonical in ' + this.constructor.name;
    };
    Object.defineProperty(MIO_Mixin_Double.prototype, "isCanonical", {
        get: function () { return this.isCanonical$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).Double.infinity*/
    MIO_Mixin_Double.infinity$get = function () {
        return Infinity;
    };
    Object.defineProperty(MIO_Mixin_Double, "infinity", {
        get: function () { return this.infinity$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).Double.nan*/
    MIO_Mixin_Double.nan$get = function () {
        throw 'unsupported variable Swift.(file).Double.nan in ' + this.constructor.name;
    };
    Object.defineProperty(MIO_Mixin_Double, "nan", {
        get: function () { return this.nan$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).Double.signalingNaN*/
    MIO_Mixin_Double.signalingNaN$get = function () {
        throw 'unsupported variable Swift.(file).Double.signalingNaN in ' + this.constructor.name;
    };
    Object.defineProperty(MIO_Mixin_Double, "signalingNaN", {
        get: function () { return this.signalingNaN$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).Double.quietNaN*/
    MIO_Mixin_Double.quietNaN$get = function () {
        throw 'unsupported variable Swift.(file).Double.quietNaN in ' + this.constructor.name;
    };
    Object.defineProperty(MIO_Mixin_Double, "quietNaN", {
        get: function () { return this.quietNaN$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).Double.greatestFiniteMagnitude*/
    MIO_Mixin_Double.greatestFiniteMagnitude$get = function () {
        return Number.MAX_VALUE;
    };
    Object.defineProperty(MIO_Mixin_Double, "greatestFiniteMagnitude", {
        get: function () { return this.greatestFiniteMagnitude$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).Double.pi*/
    MIO_Mixin_Double.pi$get = function () {
        throw 'unsupported variable Swift.(file).Double.pi in ' + this.constructor.name;
    };
    Object.defineProperty(MIO_Mixin_Double, "pi", {
        get: function () { return this.pi$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).Double.ulp*/
    MIO_Mixin_Double.prototype.ulp$get = function () {
        throw 'unsupported variable Swift.(file).Double.ulp in ' + this.constructor.name;
    };
    Object.defineProperty(MIO_Mixin_Double.prototype, "ulp", {
        get: function () { return this.ulp$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).Double.leastNormalMagnitude*/
    MIO_Mixin_Double.leastNormalMagnitude$get = function () {
        throw 'unsupported variable Swift.(file).Double.leastNormalMagnitude in ' + this.constructor.name;
    };
    Object.defineProperty(MIO_Mixin_Double, "leastNormalMagnitude", {
        get: function () { return this.leastNormalMagnitude$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).Double.leastNonzeroMagnitude*/
    MIO_Mixin_Double.leastNonzeroMagnitude$get = function () {
        throw 'unsupported variable Swift.(file).Double.leastNonzeroMagnitude in ' + this.constructor.name;
    };
    Object.defineProperty(MIO_Mixin_Double, "leastNonzeroMagnitude", {
        get: function () { return this.leastNonzeroMagnitude$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).Double.ulpOfOne*/
    MIO_Mixin_Double.ulpOfOne$get = function () {
        var _this = this;
        return _create(_this, 'initIntegerLiteral', {}, 1).ulp;
    };
    Object.defineProperty(MIO_Mixin_Double, "ulpOfOne", {
        get: function () {
            return this.ulpOfOne$get();
        },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).Double.exponent*/
    MIO_Mixin_Double.prototype.exponent$get = function () {
        throw 'unsupported variable Swift.(file).Double.exponent in ' + this.constructor.name;
    };
    Object.defineProperty(MIO_Mixin_Double.prototype, "exponent", {
        get: function () { return this.exponent$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).Double.significand*/
    MIO_Mixin_Double.prototype.significand$get = function () {
        throw 'unsupported variable Swift.(file).Double.significand in ' + this.constructor.name;
    };
    Object.defineProperty(MIO_Mixin_Double.prototype, "significand", {
        get: function () { return this.significand$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).Double.init(sign:FloatingPointSign,exponent:Int,significand:Double)*/
    /*Swift.(file).FloatingPoint.init(sign:FloatingPointSign,exponent:Self.Exponent,significand:Self)*/
    MIO_Mixin_Double.prototype.initSignFloatingPointSignExponentSignificand = function ($info, sign, exponent, significand) {
        throw 'unsupported method Swift.(file).Double.init(sign:FloatingPointSign,exponent:Int,significand:Double) in ' + this.constructor.name;
    };
    /*Swift.(file).Double.init(nan:Double.RawSignificand,signaling:Bool)*/
    /*Swift.(file).Double.init(nan:Double.RawSignificand,signaling:Bool)*/
    MIO_Mixin_Double.prototype.initNanDoubleRawSignificandSignalingBool = function ($info, payload, signaling) {
        throw 'unsupported method Swift.(file).Double.init(nan:Double.RawSignificand,signaling:Bool) in ' + this.constructor.name;
    };
    /*Swift.(file).Double.nextUp*/
    MIO_Mixin_Double.prototype.nextUp$get = function () {
        throw 'unsupported variable Swift.(file).Double.nextUp in ' + this.constructor.name;
    };
    Object.defineProperty(MIO_Mixin_Double.prototype, "nextUp", {
        get: function () { return this.nextUp$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).Double.round(_:FloatingPointRoundingRule)*/
    /*Swift.(file).FloatingPoint.round(_:FloatingPointRoundingRule)*/
    MIO_Mixin_Double.prototype.round = function ($info, rule) {
        throw 'unsupported method Swift.(file).Double.round(_:FloatingPointRoundingRule) in ' + this.constructor.name;
    };
    /*Swift.(file).Double.negate()*/
    /*Swift.(file).FloatingPoint.negate()*/
    /*Swift.(file).SignedNumeric.negate()*/
    MIO_Mixin_Double.prototype.negate = function ($info) {
        $info.$setThis(-this);
    };
    /*Swift.(file).Double.+=infix(_:Double,_:Double)*/
    /*Swift.(file).FloatingPoint.+=infix(_:Self,_:Self)*/
    /*Swift.(file).AdditiveArithmetic.+=infix(_:Self,_:Self)*/
    MIO_Mixin_Double.infix_43_61 = function ($info, lhs$inout, rhs) {
        lhs$inout.set(lhs$inout.get() + rhs);
    };
    /*Swift.(file).Double.-=infix(_:Double,_:Double)*/
    /*Swift.(file).FloatingPoint.-=infix(_:Self,_:Self)*/
    /*Swift.(file).AdditiveArithmetic.-=infix(_:Self,_:Self)*/
    MIO_Mixin_Double.infix_45_61 = function ($info, lhs$inout, rhs) {
        lhs$inout.set(lhs$inout.get() - rhs);
    };
    /*Swift.(file).Double.*=infix(_:Double,_:Double)*/
    /*Swift.(file).FloatingPoint.*=infix(_:Self,_:Self)*/
    /*Swift.(file).Numeric.*=infix(_:Self,_:Self)*/
    MIO_Mixin_Double.infix_42_61 = function ($info, lhs$inout, rhs) {
        lhs$inout.set(lhs$inout.get() * rhs);
    };
    /*Swift.(file).Double./=infix(_:Double,_:Double)*/
    /*Swift.(file).FloatingPoint./=infix(_:Self,_:Self)*/
    MIO_Mixin_Double.infix_47_61 = function ($info, lhs$inout, rhs) {
        lhs$inout.set(lhs$inout.get() / rhs);
    };
    /*Swift.(file).Double.formRemainder(dividingBy:Double)*/
    /*Swift.(file).FloatingPoint.formRemainder(dividingBy:Self)*/
    MIO_Mixin_Double.prototype.formRemainderDividingBy = function ($info, other) {
        throw 'unsupported method Swift.(file).Double.formRemainder(dividingBy:Double) in ' + this.constructor.name;
    };
    /*Swift.(file).Double.formTruncatingRemainder(dividingBy:Double)*/
    /*Swift.(file).FloatingPoint.formTruncatingRemainder(dividingBy:Self)*/
    MIO_Mixin_Double.prototype.formTruncatingRemainderDividingBy = function ($info, other) {
        throw 'unsupported method Swift.(file).Double.formTruncatingRemainder(dividingBy:Double) in ' + this.constructor.name;
    };
    /*Swift.(file).Double.formSquareRoot()*/
    /*Swift.(file).FloatingPoint.formSquareRoot()*/
    MIO_Mixin_Double.prototype.formSquareRoot = function ($info) {
        throw 'unsupported method Swift.(file).Double.formSquareRoot() in ' + this.constructor.name;
    };
    /*Swift.(file).Double.addProduct(_:Double,_:Double)*/
    /*Swift.(file).FloatingPoint.addProduct(_:Self,_:Self)*/
    MIO_Mixin_Double.prototype.addProduct = function ($info, lhs, rhs) {
        throw 'unsupported method Swift.(file).Double.addProduct(_:Double,_:Double) in ' + this.constructor.name;
    };
    /*Swift.(file).Double.isEqual(to:Double)*/
    /*Swift.(file).FloatingPoint.isEqual(to:Self)*/
    MIO_Mixin_Double.prototype.isEqualTo = function ($info, other) {
        throw 'unsupported method Swift.(file).Double.isEqual(to:Double) in ' + this.constructor.name;
    };
    /*Swift.(file).Double.isLess(than:Double)*/
    /*Swift.(file).FloatingPoint.isLess(than:Self)*/
    MIO_Mixin_Double.prototype.isLessThan = function ($info, other) {
        throw 'unsupported method Swift.(file).Double.isLess(than:Double) in ' + this.constructor.name;
    };
    /*Swift.(file).Double.isLessThanOrEqualTo(_:Double)*/
    /*Swift.(file).FloatingPoint.isLessThanOrEqualTo(_:Self)*/
    MIO_Mixin_Double.prototype.isLessThanOrEqualTo = function ($info, other) {
        throw 'unsupported method Swift.(file).Double.isLessThanOrEqualTo(_:Double) in ' + this.constructor.name;
    };
    /*Swift.(file).Double.isNormal*/
    MIO_Mixin_Double.prototype.isNormal$get = function () {
        throw 'unsupported variable Swift.(file).Double.isNormal in ' + this.constructor.name;
    };
    Object.defineProperty(MIO_Mixin_Double.prototype, "isNormal", {
        get: function () { return this.isNormal$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).Double.isZero*/
    MIO_Mixin_Double.prototype.isZero$get = function () {
        throw 'unsupported variable Swift.(file).Double.isZero in ' + this.constructor.name;
    };
    Object.defineProperty(MIO_Mixin_Double.prototype, "isZero", {
        get: function () { return this.isZero$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).Double.isSubnormal*/
    MIO_Mixin_Double.prototype.isSubnormal$get = function () {
        throw 'unsupported variable Swift.(file).Double.isSubnormal in ' + this.constructor.name;
    };
    Object.defineProperty(MIO_Mixin_Double.prototype, "isSubnormal", {
        get: function () { return this.isSubnormal$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).Double.isInfinite*/
    MIO_Mixin_Double.prototype.isInfinite$get = function () {
        throw 'unsupported variable Swift.(file).Double.isInfinite in ' + this.constructor.name;
    };
    Object.defineProperty(MIO_Mixin_Double.prototype, "isInfinite", {
        get: function () { return this.isInfinite$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).Double.isSignalingNaN*/
    MIO_Mixin_Double.prototype.isSignalingNaN$get = function () {
        throw 'unsupported variable Swift.(file).Double.isSignalingNaN in ' + this.constructor.name;
    };
    Object.defineProperty(MIO_Mixin_Double.prototype, "isSignalingNaN", {
        get: function () { return this.isSignalingNaN$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).Double.binade*/
    MIO_Mixin_Double.prototype.binade$get = function () {
        throw 'unsupported variable Swift.(file).Double.binade in ' + this.constructor.name;
    };
    Object.defineProperty(MIO_Mixin_Double.prototype, "binade", {
        get: function () { return this.binade$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).Double.significandWidth*/
    MIO_Mixin_Double.prototype.significandWidth$get = function () {
        throw 'unsupported variable Swift.(file).Double.significandWidth in ' + this.constructor.name;
    };
    Object.defineProperty(MIO_Mixin_Double.prototype, "significandWidth", {
        get: function () { return this.significandWidth$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).Double.init(floatLiteral:Double)*/
    /*Swift.(file).ExpressibleByFloatLiteral.init(floatLiteral:Self.FloatLiteralType)*/
    MIO_Mixin_Double.prototype.initFloatLiteral = function ($info, value) {
        throw 'unsupported method Swift.(file).Double.init(floatLiteral:Double) in ' + this.constructor.name;
    };
    /*Swift.(file).Double.init(_builtinIntegerLiteral:IntLiteral)*/
    /*Swift.(file)._ExpressibleByBuiltinIntegerLiteral.init(_builtinIntegerLiteral:IntLiteral)*/
    MIO_Mixin_Double.prototype.init_builtinIntegerLiteralIntLiteral = function ($info, value) {
        throw 'unsupported method Swift.(file).Double.init(_builtinIntegerLiteral:IntLiteral) in ' + this.constructor.name;
    };
    /*Swift.(file).Double.init(integerLiteral:Int64)*/
    /*Swift.(file).ExpressibleByIntegerLiteral.init(integerLiteral:Self.IntegerLiteralType)*/
    MIO_Mixin_Double.prototype.initIntegerLiteral = function ($info, value) {
        throw 'unsupported method Swift.(file).Double.init(integerLiteral:Int64) in ' + this.constructor.name;
    };
    /*Swift.(file).Double.init(_builtinFloatLiteral:FPIEEE80)*/
    /*Swift.(file)._ExpressibleByBuiltinFloatLiteral.init(_builtinFloatLiteral:_MaxBuiltinFloatType)*/
    MIO_Mixin_Double.prototype.init_builtinFloatLiteral_MaxBuiltinFloatType = function ($info, value) {
        throw 'unsupported method Swift.(file).Double.init(_builtinFloatLiteral:FPIEEE80) in ' + this.constructor.name;
    };
    /*Swift.(file).Double.hash(into:Hasher)*/
    /*Swift.(file).Hashable.hash(into:Hasher)*/
    MIO_Mixin_Double.prototype.hashInto = function ($info, hasher$inout) {
        throw 'unsupported method Swift.(file).Double.hash(into:Hasher) in ' + this.constructor.name;
    };
    /*Swift.(file).Double.hashValue*/
    MIO_Mixin_Double.prototype.hashValue$get = function () {
        throw 'unsupported variable Swift.(file).Double.hashValue in ' + this.constructor.name;
    };
    Object.defineProperty(MIO_Mixin_Double.prototype, "hashValue", {
        get: function () { return this.hashValue$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).Double.magnitude*/
    MIO_Mixin_Double.prototype.magnitude$get = function () {
        throw 'unsupported variable Swift.(file).Double.magnitude in ' + this.constructor.name;
    };
    Object.defineProperty(MIO_Mixin_Double.prototype, "magnitude", {
        get: function () { return this.magnitude$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).Double.-prefix(_:Double)*/
    /*Swift.(file).FloatingPoint.-prefix(_:Self)*/
    /*Swift.(file).SignedNumeric.-prefix(_:Self)*/
    MIO_Mixin_Double.prefix_45 = function ($info, x) {
        return -x;
    };
    /*Swift.(file).Double.init(_:Int)*/
    /*Swift.(file).FloatingPoint.init(_:Int)*/
    MIO_Mixin_Double.prototype.initInt = function ($info, v) {
        return v;
    };
    /*Swift.(file).Double.init(_:Float)*/
    /*Swift.(file).BinaryFloatingPoint.init(_:Float)*/
    MIO_Mixin_Double.prototype.initFloat = function ($info, other) {
        throw 'unsupported method Swift.(file).Double.init(_:Float) in ' + this.constructor.name;
    };
    /*Swift.(file).Double.init(exactly:Float)*/
    /*Swift.(file).Double.init(exactly:Float)*/
    MIO_Mixin_Double.prototype.initExactlyFloat = function ($info, other) {
        throw 'unsupported method Swift.(file).Double.init(exactly:Float) in ' + this.constructor.name;
    };
    /*Swift.(file).Double.init(_:Double)*/
    /*Swift.(file).BinaryFloatingPoint.init(_:Double)*/
    MIO_Mixin_Double.prototype.initDouble = function ($info, other) {
        throw 'unsupported method Swift.(file).Double.init(_:Double) in ' + this.constructor.name;
    };
    /*Swift.(file).Double.init(exactly:Double)*/
    /*Swift.(file).Double.init(exactly:Double)*/
    MIO_Mixin_Double.prototype.initExactlyDouble = function ($info, other) {
        throw 'unsupported method Swift.(file).Double.init(exactly:Double) in ' + this.constructor.name;
    };
    /*Swift.(file).Double.init(_:Float80)*/
    /*Swift.(file).BinaryFloatingPoint.init(_:Float80)*/
    MIO_Mixin_Double.prototype.initFloat80 = function ($info, other) {
        throw 'unsupported method Swift.(file).Double.init(_:Float80) in ' + this.constructor.name;
    };
    /*Swift.(file).Double.init(exactly:Float80)*/
    /*Swift.(file).Double.init(exactly:Float80)*/
    MIO_Mixin_Double.prototype.initExactlyFloat80 = function ($info, other) {
        throw 'unsupported method Swift.(file).Double.init(exactly:Float80) in ' + this.constructor.name;
    };
    /*Swift.(file).Double.+infix(_:Double,_:Double)*/
    /*Swift.(file).FloatingPoint.+infix(_:Self,_:Self)*/
    /*Swift.(file).AdditiveArithmetic.+infix(_:Self,_:Self)*/
    MIO_Mixin_Double.infix_43 = function ($info, lhs, rhs) {
        return lhs + rhs;
    };
    /*Swift.(file).Double.-infix(_:Double,_:Double)*/
    /*Swift.(file).FloatingPoint.-infix(_:Self,_:Self)*/
    /*Swift.(file).AdditiveArithmetic.-infix(_:Self,_:Self)*/
    MIO_Mixin_Double.infix_45 = function ($info, lhs, rhs) {
        return lhs - rhs;
    };
    /*Swift.(file).Double.*infix(_:Double,_:Double)*/
    /*Swift.(file).FloatingPoint.*infix(_:Self,_:Self)*/
    /*Swift.(file).Numeric.*infix(_:Self,_:Self)*/
    MIO_Mixin_Double.infix_42 = function ($info, lhs, rhs) {
        return lhs * rhs;
    };
    /*Swift.(file).Double./infix(_:Double,_:Double)*/
    /*Swift.(file).FloatingPoint./infix(_:Self,_:Self)*/
    MIO_Mixin_Double.infix_47 = function ($info, lhs, rhs) {
        return lhs / rhs;
    };
    /*Swift.(file).Double.distance(to:Double)*/
    /*Swift.(file).Strideable.distance(to:Self)*/
    MIO_Mixin_Double.prototype.distanceTo = function ($info, other) {
        throw 'unsupported method Swift.(file).Double.distance(to:Double) in ' + this.constructor.name;
    };
    /*Swift.(file).Double.advanced(by:Double)*/
    /*Swift.(file).Strideable.advanced(by:Self.Stride)*/
    MIO_Mixin_Double.prototype.advancedBy = function ($info, amount) {
        throw 'unsupported method Swift.(file).Double.advanced(by:Double) in ' + this.constructor.name;
    };
    /*Swift.(file).Double.customMirror*/
    MIO_Mixin_Double.prototype.customMirror$get = function () {
        throw 'unsupported variable Swift.(file).Double.customMirror in ' + this.constructor.name;
    };
    Object.defineProperty(MIO_Mixin_Double.prototype, "customMirror", {
        get: function () { return this.customMirror$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).Double.customPlaygroundQuickLook*/
    MIO_Mixin_Double.prototype.customPlaygroundQuickLook$get = function () {
        throw 'unsupported variable Swift.(file).Double.customPlaygroundQuickLook in ' + this.constructor.name;
    };
    Object.defineProperty(MIO_Mixin_Double.prototype, "customPlaygroundQuickLook", {
        get: function () { return this.customPlaygroundQuickLook$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    MIO_Mixin_Double.prototype.init$vars = function () {
    };
    var _40, _41, _42, _43, _44, _45;
    MIO_Mixin_Double.$struct = true;
    MIO_Mixin_Double.$mixin = true;
    MIO_Mixin_Double.$infoAddress = '';
    MIO_Mixin_Double.initString$failable = true;
    MIO_Mixin_Double.initExactlyFloat$failable = true;
    MIO_Mixin_Double.initExactlyDouble$failable = true;
    MIO_Mixin_Double.initExactlyFloat80$failable = true;
    MIO_Mixin_Double.SIMD2Storage = (_40 = /** @class */ (function () {
            function class_64() {
            }
            /*Swift.(file).Double.SIMD2Storage.scalarCount*/
            class_64.prototype.scalarCount$get = function () {
                throw 'unsupported variable Swift.(file).Double.SIMD2Storage.scalarCount in ' + this.constructor.name;
            };
            Object.defineProperty(class_64.prototype, "scalarCount", {
                get: function () { return this.scalarCount$get(); },
                enumerable: true,
                configurable: true
            });
            ;
            /*Swift.(file).Double.SIMD2Storage.init()*/
            /*Swift.(file).SIMDStorage.init()*/
            class_64.prototype.init = function ($info) {
                throw 'unsupported method Swift.(file).Double.SIMD2Storage.init() in ' + this.constructor.name;
            };
            /*Swift.(file).Double.SIMD2Storage.subscript(_:Int)*/
            /*Swift.(file).SIMDStorage.subscript(_:Int)*/
            class_64.prototype.subscript$get = function ($info, index) {
                throw 'unsupported method Swift.(file).Double.SIMD2Storage.subscript(_:Int) in ' + this.constructor.name;
            }; /*Swift.(file).Double.SIMD2Storage.subscript(_:Int)*/
            /*Swift.(file).SIMDStorage.subscript(_:Int)*/
            class_64.prototype.subscript$set = function ($info, newValue, index) {
                throw 'unsupported method Swift.(file).Double.SIMD2Storage.subscript(_:Int) in ' + this.constructor.name;
            };
            class_64.prototype.init$vars = function () {
            };
            return class_64;
        }()),
        _40.$struct = true,
        _40.$infoAddress = '',
        _40);
    MIO_Mixin_Double.SIMD4Storage = (_41 = /** @class */ (function () {
            function class_65() {
            }
            /*Swift.(file).Double.SIMD4Storage.scalarCount*/
            class_65.prototype.scalarCount$get = function () {
                throw 'unsupported variable Swift.(file).Double.SIMD4Storage.scalarCount in ' + this.constructor.name;
            };
            Object.defineProperty(class_65.prototype, "scalarCount", {
                get: function () { return this.scalarCount$get(); },
                enumerable: true,
                configurable: true
            });
            ;
            /*Swift.(file).Double.SIMD4Storage.init()*/
            /*Swift.(file).SIMDStorage.init()*/
            class_65.prototype.init = function ($info) {
                throw 'unsupported method Swift.(file).Double.SIMD4Storage.init() in ' + this.constructor.name;
            };
            /*Swift.(file).Double.SIMD4Storage.subscript(_:Int)*/
            /*Swift.(file).SIMDStorage.subscript(_:Int)*/
            class_65.prototype.subscript$get = function ($info, index) {
                throw 'unsupported method Swift.(file).Double.SIMD4Storage.subscript(_:Int) in ' + this.constructor.name;
            }; /*Swift.(file).Double.SIMD4Storage.subscript(_:Int)*/
            /*Swift.(file).SIMDStorage.subscript(_:Int)*/
            class_65.prototype.subscript$set = function ($info, newValue, index) {
                throw 'unsupported method Swift.(file).Double.SIMD4Storage.subscript(_:Int) in ' + this.constructor.name;
            };
            class_65.prototype.init$vars = function () {
            };
            return class_65;
        }()),
        _41.$struct = true,
        _41.$infoAddress = '',
        _41);
    MIO_Mixin_Double.SIMD8Storage = (_42 = /** @class */ (function () {
            function class_66() {
            }
            /*Swift.(file).Double.SIMD8Storage.scalarCount*/
            class_66.prototype.scalarCount$get = function () {
                throw 'unsupported variable Swift.(file).Double.SIMD8Storage.scalarCount in ' + this.constructor.name;
            };
            Object.defineProperty(class_66.prototype, "scalarCount", {
                get: function () { return this.scalarCount$get(); },
                enumerable: true,
                configurable: true
            });
            ;
            /*Swift.(file).Double.SIMD8Storage.init()*/
            /*Swift.(file).SIMDStorage.init()*/
            class_66.prototype.init = function ($info) {
                throw 'unsupported method Swift.(file).Double.SIMD8Storage.init() in ' + this.constructor.name;
            };
            /*Swift.(file).Double.SIMD8Storage.subscript(_:Int)*/
            /*Swift.(file).SIMDStorage.subscript(_:Int)*/
            class_66.prototype.subscript$get = function ($info, index) {
                throw 'unsupported method Swift.(file).Double.SIMD8Storage.subscript(_:Int) in ' + this.constructor.name;
            }; /*Swift.(file).Double.SIMD8Storage.subscript(_:Int)*/
            /*Swift.(file).SIMDStorage.subscript(_:Int)*/
            class_66.prototype.subscript$set = function ($info, newValue, index) {
                throw 'unsupported method Swift.(file).Double.SIMD8Storage.subscript(_:Int) in ' + this.constructor.name;
            };
            class_66.prototype.init$vars = function () {
            };
            return class_66;
        }()),
        _42.$struct = true,
        _42.$infoAddress = '',
        _42);
    MIO_Mixin_Double.SIMD16Storage = (_43 = /** @class */ (function () {
            function class_67() {
            }
            /*Swift.(file).Double.SIMD16Storage.scalarCount*/
            class_67.prototype.scalarCount$get = function () {
                throw 'unsupported variable Swift.(file).Double.SIMD16Storage.scalarCount in ' + this.constructor.name;
            };
            Object.defineProperty(class_67.prototype, "scalarCount", {
                get: function () { return this.scalarCount$get(); },
                enumerable: true,
                configurable: true
            });
            ;
            /*Swift.(file).Double.SIMD16Storage.init()*/
            /*Swift.(file).SIMDStorage.init()*/
            class_67.prototype.init = function ($info) {
                throw 'unsupported method Swift.(file).Double.SIMD16Storage.init() in ' + this.constructor.name;
            };
            /*Swift.(file).Double.SIMD16Storage.subscript(_:Int)*/
            /*Swift.(file).SIMDStorage.subscript(_:Int)*/
            class_67.prototype.subscript$get = function ($info, index) {
                throw 'unsupported method Swift.(file).Double.SIMD16Storage.subscript(_:Int) in ' + this.constructor.name;
            }; /*Swift.(file).Double.SIMD16Storage.subscript(_:Int)*/
            /*Swift.(file).SIMDStorage.subscript(_:Int)*/
            class_67.prototype.subscript$set = function ($info, newValue, index) {
                throw 'unsupported method Swift.(file).Double.SIMD16Storage.subscript(_:Int) in ' + this.constructor.name;
            };
            class_67.prototype.init$vars = function () {
            };
            return class_67;
        }()),
        _43.$struct = true,
        _43.$infoAddress = '',
        _43);
    MIO_Mixin_Double.SIMD32Storage = (_44 = /** @class */ (function () {
            function class_68() {
            }
            /*Swift.(file).Double.SIMD32Storage.scalarCount*/
            class_68.prototype.scalarCount$get = function () {
                throw 'unsupported variable Swift.(file).Double.SIMD32Storage.scalarCount in ' + this.constructor.name;
            };
            Object.defineProperty(class_68.prototype, "scalarCount", {
                get: function () { return this.scalarCount$get(); },
                enumerable: true,
                configurable: true
            });
            ;
            /*Swift.(file).Double.SIMD32Storage.init()*/
            /*Swift.(file).SIMDStorage.init()*/
            class_68.prototype.init = function ($info) {
                throw 'unsupported method Swift.(file).Double.SIMD32Storage.init() in ' + this.constructor.name;
            };
            /*Swift.(file).Double.SIMD32Storage.subscript(_:Int)*/
            /*Swift.(file).SIMDStorage.subscript(_:Int)*/
            class_68.prototype.subscript$get = function ($info, index) {
                throw 'unsupported method Swift.(file).Double.SIMD32Storage.subscript(_:Int) in ' + this.constructor.name;
            }; /*Swift.(file).Double.SIMD32Storage.subscript(_:Int)*/
            /*Swift.(file).SIMDStorage.subscript(_:Int)*/
            class_68.prototype.subscript$set = function ($info, newValue, index) {
                throw 'unsupported method Swift.(file).Double.SIMD32Storage.subscript(_:Int) in ' + this.constructor.name;
            };
            class_68.prototype.init$vars = function () {
            };
            return class_68;
        }()),
        _44.$struct = true,
        _44.$infoAddress = '',
        _44);
    MIO_Mixin_Double.SIMD64Storage = (_45 = /** @class */ (function () {
            function class_69() {
            }
            /*Swift.(file).Double.SIMD64Storage.scalarCount*/
            class_69.prototype.scalarCount$get = function () {
                throw 'unsupported variable Swift.(file).Double.SIMD64Storage.scalarCount in ' + this.constructor.name;
            };
            Object.defineProperty(class_69.prototype, "scalarCount", {
                get: function () { return this.scalarCount$get(); },
                enumerable: true,
                configurable: true
            });
            ;
            /*Swift.(file).Double.SIMD64Storage.init()*/
            /*Swift.(file).SIMDStorage.init()*/
            class_69.prototype.init = function ($info) {
                throw 'unsupported method Swift.(file).Double.SIMD64Storage.init() in ' + this.constructor.name;
            };
            /*Swift.(file).Double.SIMD64Storage.subscript(_:Int)*/
            /*Swift.(file).SIMDStorage.subscript(_:Int)*/
            class_69.prototype.subscript$get = function ($info, index) {
                throw 'unsupported method Swift.(file).Double.SIMD64Storage.subscript(_:Int) in ' + this.constructor.name;
            }; /*Swift.(file).Double.SIMD64Storage.subscript(_:Int)*/
            /*Swift.(file).SIMDStorage.subscript(_:Int)*/
            class_69.prototype.subscript$set = function ($info, newValue, index) {
                throw 'unsupported method Swift.(file).Double.SIMD64Storage.subscript(_:Int) in ' + this.constructor.name;
            };
            class_69.prototype.init$vars = function () {
            };
            return class_69;
        }()),
        _45.$struct = true,
        _45.$infoAddress = '',
        _45);
    return MIO_Mixin_Double;
}());
if (typeof SIMDStorage$implementation != 'undefined')
    _mixin(MIO_Mixin_Double.SIMD2Storage, SIMDStorage$implementation, false);
if (typeof SIMDStorage$implementation != 'undefined')
    _mixin(MIO_Mixin_Double.SIMD4Storage, SIMDStorage$implementation, false);
if (typeof SIMDStorage$implementation != 'undefined')
    _mixin(MIO_Mixin_Double.SIMD8Storage, SIMDStorage$implementation, false);
if (typeof SIMDStorage$implementation != 'undefined')
    _mixin(MIO_Mixin_Double.SIMD16Storage, SIMDStorage$implementation, false);
if (typeof SIMDStorage$implementation != 'undefined')
    _mixin(MIO_Mixin_Double.SIMD32Storage, SIMDStorage$implementation, false);
if (typeof SIMDStorage$implementation != 'undefined')
    _mixin(MIO_Mixin_Double.SIMD64Storage, SIMDStorage$implementation, false);
if (typeof Codable$implementation != 'undefined')
    _mixin(MIO_Mixin_Double, Codable$implementation, false);
if (typeof LosslessStringConvertible$implementation != 'undefined')
    _mixin(MIO_Mixin_Double, LosslessStringConvertible$implementation, false);
if (typeof CustomStringConvertible$implementation != 'undefined')
    _mixin(MIO_Mixin_Double, CustomStringConvertible$implementation, false);
if (typeof CustomDebugStringConvertible$implementation != 'undefined')
    _mixin(MIO_Mixin_Double, CustomDebugStringConvertible$implementation, false);
if (typeof TextOutputStreamable$implementation != 'undefined')
    _mixin(MIO_Mixin_Double, TextOutputStreamable$implementation, false);
if (typeof BinaryFloatingPoint$implementation != 'undefined')
    _mixin(MIO_Mixin_Double, BinaryFloatingPoint$implementation, false);
if (typeof _ExpressibleByBuiltinIntegerLiteral$implementation != 'undefined')
    _mixin(MIO_Mixin_Double, _ExpressibleByBuiltinIntegerLiteral$implementation, false);
if (typeof ExpressibleByIntegerLiteral$implementation != 'undefined')
    _mixin(MIO_Mixin_Double, ExpressibleByIntegerLiteral$implementation, false);
if (typeof _ExpressibleByBuiltinFloatLiteral$implementation != 'undefined')
    _mixin(MIO_Mixin_Double, _ExpressibleByBuiltinFloatLiteral$implementation, false);
if (typeof Hashable$implementation != 'undefined')
    _mixin(MIO_Mixin_Double, Hashable$implementation, false);
if (typeof _HasCustomAnyHashableRepresentation$implementation != 'undefined')
    _mixin(MIO_Mixin_Double, _HasCustomAnyHashableRepresentation$implementation, false);
if (typeof Strideable$implementation != 'undefined')
    _mixin(MIO_Mixin_Double, Strideable$implementation, false);
if (typeof CustomReflectable$implementation != 'undefined')
    _mixin(MIO_Mixin_Double, CustomReflectable$implementation, false);
if (typeof _CustomPlaygroundQuickLookable$implementation != 'undefined')
    _mixin(MIO_Mixin_Double, _CustomPlaygroundQuickLookable$implementation, false);
if (typeof SIMDScalar$implementation != 'undefined')
    _mixin(MIO_Mixin_Double, SIMDScalar$implementation, false);
if (typeof _CVarArgPassedAsDouble$implementation != 'undefined')
    _mixin(MIO_Mixin_Double, _CVarArgPassedAsDouble$implementation, false);
if (typeof _CVarArgAligned$implementation != 'undefined')
    _mixin(MIO_Mixin_Double, _CVarArgAligned$implementation, false);
_mixin(Number, MIO_Mixin_Double, true);
var Double = /** @class */ (function () {
    function Double() {
    }
    return Double;
}());
_mixin(Double, MIO_Mixin_Double, true);
var MIO_Mixin_Float80 = /** @class */ (function () {
    function MIO_Mixin_Float80() {
    }
    /*Swift.(file).Float80.init()*/
    /*Swift.(file).Float80.init()*/
    MIO_Mixin_Float80.prototype.init = function ($info) {
        throw 'unsupported method Swift.(file).Float80.init() in ' + this.constructor.name;
    };
    /*Swift.(file).Float80.init(_:FPIEEE80)*/
    /*Swift.(file).Float80.init(_:FPIEEE80)*/
    MIO_Mixin_Float80.prototype.initFPIEEE80 = function ($info, _value) {
        throw 'unsupported method Swift.(file).Float80.init(_:FPIEEE80) in ' + this.constructor.name;
    };
    /*Swift.(file).Float80.init(_:S)*/
    /*Swift.(file).LosslessStringConvertible.init(_:String)*/
    MIO_Mixin_Float80.prototype.initString = function ($info, _text) {
        throw 'unsupported method Swift.(file).Float80.init(_:S) in ' + this.constructor.name;
    };
    /*Swift.(file).Float80.description*/
    MIO_Mixin_Float80.prototype.description$get = function () {
        var result = this.toString();
        if (!result.includes('.'))
            result += '.0';
        return result;
    };
    Object.defineProperty(MIO_Mixin_Float80.prototype, "description", {
        get: function () { return this.description$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).Float80.debugDescription*/
    MIO_Mixin_Float80.prototype.debugDescription$get = function () {
        throw 'unsupported variable Swift.(file).Float80.debugDescription in ' + this.constructor.name;
    };
    Object.defineProperty(MIO_Mixin_Float80.prototype, "debugDescription", {
        get: function () { return this.debugDescription$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).Float80.write(to:Target)*/
    /*Swift.(file).TextOutputStreamable.write(to:Target)*/
    MIO_Mixin_Float80.prototype.writeTo = function ($info, target$inout) {
        throw 'unsupported method Swift.(file).Float80.write(to:Target) in ' + this.constructor.name;
    };
    /*Swift.(file).Float80.exponentBitCount*/
    MIO_Mixin_Float80.exponentBitCount$get = function () {
        throw 'unsupported variable Swift.(file).Float80.exponentBitCount in ' + this.constructor.name;
    };
    Object.defineProperty(MIO_Mixin_Float80, "exponentBitCount", {
        get: function () { return this.exponentBitCount$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).Float80.significandBitCount*/
    MIO_Mixin_Float80.significandBitCount$get = function () {
        throw 'unsupported variable Swift.(file).Float80.significandBitCount in ' + this.constructor.name;
    };
    Object.defineProperty(MIO_Mixin_Float80, "significandBitCount", {
        get: function () { return this.significandBitCount$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).Float80.sign*/
    MIO_Mixin_Float80.prototype.sign$get = function () {
        throw 'unsupported variable Swift.(file).Float80.sign in ' + this.constructor.name;
    };
    Object.defineProperty(MIO_Mixin_Float80.prototype, "sign", {
        get: function () { return this.sign$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).Float80.exponentBitPattern*/
    MIO_Mixin_Float80.prototype.exponentBitPattern$get = function () {
        throw 'unsupported variable Swift.(file).Float80.exponentBitPattern in ' + this.constructor.name;
    };
    Object.defineProperty(MIO_Mixin_Float80.prototype, "exponentBitPattern", {
        get: function () { return this.exponentBitPattern$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).Float80.significandBitPattern*/
    MIO_Mixin_Float80.prototype.significandBitPattern$get = function () {
        throw 'unsupported variable Swift.(file).Float80.significandBitPattern in ' + this.constructor.name;
    };
    Object.defineProperty(MIO_Mixin_Float80.prototype, "significandBitPattern", {
        get: function () { return this.significandBitPattern$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).Float80.init(sign:FloatingPointSign,exponentBitPattern:UInt,significandBitPattern:UInt64)*/
    /*Swift.(file).BinaryFloatingPoint.init(sign:FloatingPointSign,exponentBitPattern:Self.RawExponent,significandBitPattern:Self.RawSignificand)*/
    MIO_Mixin_Float80.prototype.initSignFloatingPointSignExponentBitPatternSignificandBitPattern = function ($info, sign, exponentBitPattern, significandBitPattern) {
        throw 'unsupported method Swift.(file).Float80.init(sign:FloatingPointSign,exponentBitPattern:UInt,significandBitPattern:UInt64) in ' + this.constructor.name;
    };
    /*Swift.(file).Float80.isCanonical*/
    MIO_Mixin_Float80.prototype.isCanonical$get = function () {
        throw 'unsupported variable Swift.(file).Float80.isCanonical in ' + this.constructor.name;
    };
    Object.defineProperty(MIO_Mixin_Float80.prototype, "isCanonical", {
        get: function () { return this.isCanonical$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).Float80.infinity*/
    MIO_Mixin_Float80.infinity$get = function () {
        throw 'unsupported variable Swift.(file).Float80.infinity in ' + this.constructor.name;
    };
    Object.defineProperty(MIO_Mixin_Float80, "infinity", {
        get: function () { return this.infinity$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).Float80.nan*/
    MIO_Mixin_Float80.nan$get = function () {
        throw 'unsupported variable Swift.(file).Float80.nan in ' + this.constructor.name;
    };
    Object.defineProperty(MIO_Mixin_Float80, "nan", {
        get: function () { return this.nan$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).Float80.signalingNaN*/
    MIO_Mixin_Float80.signalingNaN$get = function () {
        throw 'unsupported variable Swift.(file).Float80.signalingNaN in ' + this.constructor.name;
    };
    Object.defineProperty(MIO_Mixin_Float80, "signalingNaN", {
        get: function () { return this.signalingNaN$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).Float80.quietNaN*/
    MIO_Mixin_Float80.quietNaN$get = function () {
        throw 'unsupported variable Swift.(file).Float80.quietNaN in ' + this.constructor.name;
    };
    Object.defineProperty(MIO_Mixin_Float80, "quietNaN", {
        get: function () { return this.quietNaN$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).Float80.greatestFiniteMagnitude*/
    MIO_Mixin_Float80.greatestFiniteMagnitude$get = function () {
        throw 'unsupported variable Swift.(file).Float80.greatestFiniteMagnitude in ' + this.constructor.name;
    };
    Object.defineProperty(MIO_Mixin_Float80, "greatestFiniteMagnitude", {
        get: function () { return this.greatestFiniteMagnitude$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).Float80.pi*/
    MIO_Mixin_Float80.pi$get = function () {
        throw 'unsupported variable Swift.(file).Float80.pi in ' + this.constructor.name;
    };
    Object.defineProperty(MIO_Mixin_Float80, "pi", {
        get: function () { return this.pi$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).Float80.ulp*/
    MIO_Mixin_Float80.prototype.ulp$get = function () {
        throw 'unsupported variable Swift.(file).Float80.ulp in ' + this.constructor.name;
    };
    Object.defineProperty(MIO_Mixin_Float80.prototype, "ulp", {
        get: function () { return this.ulp$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).Float80.leastNormalMagnitude*/
    MIO_Mixin_Float80.leastNormalMagnitude$get = function () {
        throw 'unsupported variable Swift.(file).Float80.leastNormalMagnitude in ' + this.constructor.name;
    };
    Object.defineProperty(MIO_Mixin_Float80, "leastNormalMagnitude", {
        get: function () { return this.leastNormalMagnitude$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).Float80.leastNonzeroMagnitude*/
    MIO_Mixin_Float80.leastNonzeroMagnitude$get = function () {
        throw 'unsupported variable Swift.(file).Float80.leastNonzeroMagnitude in ' + this.constructor.name;
    };
    Object.defineProperty(MIO_Mixin_Float80, "leastNonzeroMagnitude", {
        get: function () { return this.leastNonzeroMagnitude$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).Float80.ulpOfOne*/
    MIO_Mixin_Float80.ulpOfOne$get = function () {
        var _this = this;
        return _create(_this, 'initIntegerLiteral', {}, 1).ulp;
    };
    Object.defineProperty(MIO_Mixin_Float80, "ulpOfOne", {
        get: function () {
            return this.ulpOfOne$get();
        },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).Float80.exponent*/
    MIO_Mixin_Float80.prototype.exponent$get = function () {
        throw 'unsupported variable Swift.(file).Float80.exponent in ' + this.constructor.name;
    };
    Object.defineProperty(MIO_Mixin_Float80.prototype, "exponent", {
        get: function () { return this.exponent$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).Float80.significand*/
    MIO_Mixin_Float80.prototype.significand$get = function () {
        throw 'unsupported variable Swift.(file).Float80.significand in ' + this.constructor.name;
    };
    Object.defineProperty(MIO_Mixin_Float80.prototype, "significand", {
        get: function () { return this.significand$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).Float80.init(sign:FloatingPointSign,exponent:Int,significand:Float80)*/
    /*Swift.(file).FloatingPoint.init(sign:FloatingPointSign,exponent:Self.Exponent,significand:Self)*/
    MIO_Mixin_Float80.prototype.initSignFloatingPointSignExponentSignificand = function ($info, sign, exponent, significand) {
        throw 'unsupported method Swift.(file).Float80.init(sign:FloatingPointSign,exponent:Int,significand:Float80) in ' + this.constructor.name;
    };
    /*Swift.(file).Float80.init(nan:Float80.RawSignificand,signaling:Bool)*/
    /*Swift.(file).Float80.init(nan:Float80.RawSignificand,signaling:Bool)*/
    MIO_Mixin_Float80.prototype.initNanFloat80RawSignificandSignalingBool = function ($info, payload, signaling) {
        throw 'unsupported method Swift.(file).Float80.init(nan:Float80.RawSignificand,signaling:Bool) in ' + this.constructor.name;
    };
    /*Swift.(file).Float80.nextUp*/
    MIO_Mixin_Float80.prototype.nextUp$get = function () {
        throw 'unsupported variable Swift.(file).Float80.nextUp in ' + this.constructor.name;
    };
    Object.defineProperty(MIO_Mixin_Float80.prototype, "nextUp", {
        get: function () { return this.nextUp$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).Float80.round(_:FloatingPointRoundingRule)*/
    /*Swift.(file).FloatingPoint.round(_:FloatingPointRoundingRule)*/
    MIO_Mixin_Float80.prototype.round = function ($info, rule) {
        throw 'unsupported method Swift.(file).Float80.round(_:FloatingPointRoundingRule) in ' + this.constructor.name;
    };
    /*Swift.(file).Float80.negate()*/
    /*Swift.(file).FloatingPoint.negate()*/
    /*Swift.(file).SignedNumeric.negate()*/
    MIO_Mixin_Float80.prototype.negate = function ($info) {
        $info.$setThis(-this);
    };
    /*Swift.(file).Float80.+=infix(_:Float80,_:Float80)*/
    /*Swift.(file).FloatingPoint.+=infix(_:Self,_:Self)*/
    /*Swift.(file).AdditiveArithmetic.+=infix(_:Self,_:Self)*/
    MIO_Mixin_Float80.infix_43_61 = function ($info, lhs$inout, rhs) {
        lhs$inout.set(lhs$inout.get() + rhs);
    };
    /*Swift.(file).Float80.-=infix(_:Float80,_:Float80)*/
    /*Swift.(file).FloatingPoint.-=infix(_:Self,_:Self)*/
    /*Swift.(file).AdditiveArithmetic.-=infix(_:Self,_:Self)*/
    MIO_Mixin_Float80.infix_45_61 = function ($info, lhs$inout, rhs) {
        lhs$inout.set(lhs$inout.get() - rhs);
    };
    /*Swift.(file).Float80.*=infix(_:Float80,_:Float80)*/
    /*Swift.(file).FloatingPoint.*=infix(_:Self,_:Self)*/
    /*Swift.(file).Numeric.*=infix(_:Self,_:Self)*/
    MIO_Mixin_Float80.infix_42_61 = function ($info, lhs$inout, rhs) {
        lhs$inout.set(lhs$inout.get() * rhs);
    };
    /*Swift.(file).Float80./=infix(_:Float80,_:Float80)*/
    /*Swift.(file).FloatingPoint./=infix(_:Self,_:Self)*/
    MIO_Mixin_Float80.infix_47_61 = function ($info, lhs$inout, rhs) {
        lhs$inout.set(lhs$inout.get() / rhs);
    };
    /*Swift.(file).Float80.formRemainder(dividingBy:Float80)*/
    /*Swift.(file).FloatingPoint.formRemainder(dividingBy:Self)*/
    MIO_Mixin_Float80.prototype.formRemainderDividingBy = function ($info, other) {
        throw 'unsupported method Swift.(file).Float80.formRemainder(dividingBy:Float80) in ' + this.constructor.name;
    };
    /*Swift.(file).Float80.formTruncatingRemainder(dividingBy:Float80)*/
    /*Swift.(file).FloatingPoint.formTruncatingRemainder(dividingBy:Self)*/
    MIO_Mixin_Float80.prototype.formTruncatingRemainderDividingBy = function ($info, other) {
        throw 'unsupported method Swift.(file).Float80.formTruncatingRemainder(dividingBy:Float80) in ' + this.constructor.name;
    };
    /*Swift.(file).Float80.formSquareRoot()*/
    /*Swift.(file).FloatingPoint.formSquareRoot()*/
    MIO_Mixin_Float80.prototype.formSquareRoot = function ($info) {
        throw 'unsupported method Swift.(file).Float80.formSquareRoot() in ' + this.constructor.name;
    };
    /*Swift.(file).Float80.addProduct(_:Float80,_:Float80)*/
    /*Swift.(file).FloatingPoint.addProduct(_:Self,_:Self)*/
    MIO_Mixin_Float80.prototype.addProduct = function ($info, lhs, rhs) {
        throw 'unsupported method Swift.(file).Float80.addProduct(_:Float80,_:Float80) in ' + this.constructor.name;
    };
    /*Swift.(file).Float80.isEqual(to:Float80)*/
    /*Swift.(file).FloatingPoint.isEqual(to:Self)*/
    MIO_Mixin_Float80.prototype.isEqualTo = function ($info, other) {
        throw 'unsupported method Swift.(file).Float80.isEqual(to:Float80) in ' + this.constructor.name;
    };
    /*Swift.(file).Float80.isLess(than:Float80)*/
    /*Swift.(file).FloatingPoint.isLess(than:Self)*/
    MIO_Mixin_Float80.prototype.isLessThan = function ($info, other) {
        throw 'unsupported method Swift.(file).Float80.isLess(than:Float80) in ' + this.constructor.name;
    };
    /*Swift.(file).Float80.isLessThanOrEqualTo(_:Float80)*/
    /*Swift.(file).FloatingPoint.isLessThanOrEqualTo(_:Self)*/
    MIO_Mixin_Float80.prototype.isLessThanOrEqualTo = function ($info, other) {
        throw 'unsupported method Swift.(file).Float80.isLessThanOrEqualTo(_:Float80) in ' + this.constructor.name;
    };
    /*Swift.(file).Float80.isNormal*/
    MIO_Mixin_Float80.prototype.isNormal$get = function () {
        throw 'unsupported variable Swift.(file).Float80.isNormal in ' + this.constructor.name;
    };
    Object.defineProperty(MIO_Mixin_Float80.prototype, "isNormal", {
        get: function () { return this.isNormal$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).Float80.isZero*/
    MIO_Mixin_Float80.prototype.isZero$get = function () {
        throw 'unsupported variable Swift.(file).Float80.isZero in ' + this.constructor.name;
    };
    Object.defineProperty(MIO_Mixin_Float80.prototype, "isZero", {
        get: function () { return this.isZero$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).Float80.isSubnormal*/
    MIO_Mixin_Float80.prototype.isSubnormal$get = function () {
        throw 'unsupported variable Swift.(file).Float80.isSubnormal in ' + this.constructor.name;
    };
    Object.defineProperty(MIO_Mixin_Float80.prototype, "isSubnormal", {
        get: function () { return this.isSubnormal$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).Float80.isInfinite*/
    MIO_Mixin_Float80.prototype.isInfinite$get = function () {
        throw 'unsupported variable Swift.(file).Float80.isInfinite in ' + this.constructor.name;
    };
    Object.defineProperty(MIO_Mixin_Float80.prototype, "isInfinite", {
        get: function () { return this.isInfinite$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).Float80.isSignalingNaN*/
    MIO_Mixin_Float80.prototype.isSignalingNaN$get = function () {
        throw 'unsupported variable Swift.(file).Float80.isSignalingNaN in ' + this.constructor.name;
    };
    Object.defineProperty(MIO_Mixin_Float80.prototype, "isSignalingNaN", {
        get: function () { return this.isSignalingNaN$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).Float80.binade*/
    MIO_Mixin_Float80.prototype.binade$get = function () {
        throw 'unsupported variable Swift.(file).Float80.binade in ' + this.constructor.name;
    };
    Object.defineProperty(MIO_Mixin_Float80.prototype, "binade", {
        get: function () { return this.binade$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).Float80.significandWidth*/
    MIO_Mixin_Float80.prototype.significandWidth$get = function () {
        throw 'unsupported variable Swift.(file).Float80.significandWidth in ' + this.constructor.name;
    };
    Object.defineProperty(MIO_Mixin_Float80.prototype, "significandWidth", {
        get: function () { return this.significandWidth$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).Float80.init(floatLiteral:Float80)*/
    /*Swift.(file).ExpressibleByFloatLiteral.init(floatLiteral:Self.FloatLiteralType)*/
    MIO_Mixin_Float80.prototype.initFloatLiteral = function ($info, value) {
        throw 'unsupported method Swift.(file).Float80.init(floatLiteral:Float80) in ' + this.constructor.name;
    };
    /*Swift.(file).Float80.init(_builtinIntegerLiteral:IntLiteral)*/
    /*Swift.(file)._ExpressibleByBuiltinIntegerLiteral.init(_builtinIntegerLiteral:IntLiteral)*/
    MIO_Mixin_Float80.prototype.init_builtinIntegerLiteralIntLiteral = function ($info, value) {
        throw 'unsupported method Swift.(file).Float80.init(_builtinIntegerLiteral:IntLiteral) in ' + this.constructor.name;
    };
    /*Swift.(file).Float80.init(integerLiteral:Int64)*/
    /*Swift.(file).ExpressibleByIntegerLiteral.init(integerLiteral:Self.IntegerLiteralType)*/
    MIO_Mixin_Float80.prototype.initIntegerLiteral = function ($info, value) {
        throw 'unsupported method Swift.(file).Float80.init(integerLiteral:Int64) in ' + this.constructor.name;
    };
    /*Swift.(file).Float80.init(_builtinFloatLiteral:FPIEEE80)*/
    /*Swift.(file)._ExpressibleByBuiltinFloatLiteral.init(_builtinFloatLiteral:_MaxBuiltinFloatType)*/
    MIO_Mixin_Float80.prototype.init_builtinFloatLiteral_MaxBuiltinFloatType = function ($info, value) {
        throw 'unsupported method Swift.(file).Float80.init(_builtinFloatLiteral:FPIEEE80) in ' + this.constructor.name;
    };
    /*Swift.(file).Float80.hash(into:Hasher)*/
    /*Swift.(file).Hashable.hash(into:Hasher)*/
    MIO_Mixin_Float80.prototype.hashInto = function ($info, hasher$inout) {
        throw 'unsupported method Swift.(file).Float80.hash(into:Hasher) in ' + this.constructor.name;
    };
    /*Swift.(file).Float80.hashValue*/
    MIO_Mixin_Float80.prototype.hashValue$get = function () {
        throw 'unsupported variable Swift.(file).Float80.hashValue in ' + this.constructor.name;
    };
    Object.defineProperty(MIO_Mixin_Float80.prototype, "hashValue", {
        get: function () { return this.hashValue$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).Float80.magnitude*/
    MIO_Mixin_Float80.prototype.magnitude$get = function () {
        throw 'unsupported variable Swift.(file).Float80.magnitude in ' + this.constructor.name;
    };
    Object.defineProperty(MIO_Mixin_Float80.prototype, "magnitude", {
        get: function () { return this.magnitude$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).Float80.-prefix(_:Float80)*/
    /*Swift.(file).FloatingPoint.-prefix(_:Self)*/
    /*Swift.(file).SignedNumeric.-prefix(_:Self)*/
    MIO_Mixin_Float80.prefix_45 = function ($info, x) {
        return -x;
    };
    /*Swift.(file).Float80.init(_:Int)*/
    /*Swift.(file).FloatingPoint.init(_:Int)*/
    MIO_Mixin_Float80.prototype.initInt = function ($info, v) {
        throw 'unsupported method Swift.(file).Float80.init(_:Int) in ' + this.constructor.name;
    };
    /*Swift.(file).Float80.init(_:Float)*/
    /*Swift.(file).BinaryFloatingPoint.init(_:Float)*/
    MIO_Mixin_Float80.prototype.initFloat = function ($info, other) {
        throw 'unsupported method Swift.(file).Float80.init(_:Float) in ' + this.constructor.name;
    };
    /*Swift.(file).Float80.init(exactly:Float)*/
    /*Swift.(file).Float80.init(exactly:Float)*/
    MIO_Mixin_Float80.prototype.initExactlyFloat = function ($info, other) {
        throw 'unsupported method Swift.(file).Float80.init(exactly:Float) in ' + this.constructor.name;
    };
    /*Swift.(file).Float80.init(_:Double)*/
    /*Swift.(file).BinaryFloatingPoint.init(_:Double)*/
    MIO_Mixin_Float80.prototype.initDouble = function ($info, other) {
        throw 'unsupported method Swift.(file).Float80.init(_:Double) in ' + this.constructor.name;
    };
    /*Swift.(file).Float80.init(exactly:Double)*/
    /*Swift.(file).Float80.init(exactly:Double)*/
    MIO_Mixin_Float80.prototype.initExactlyDouble = function ($info, other) {
        throw 'unsupported method Swift.(file).Float80.init(exactly:Double) in ' + this.constructor.name;
    };
    /*Swift.(file).Float80.init(_:Float80)*/
    /*Swift.(file).BinaryFloatingPoint.init(_:Float80)*/
    MIO_Mixin_Float80.prototype.initFloat80 = function ($info, other) {
        throw 'unsupported method Swift.(file).Float80.init(_:Float80) in ' + this.constructor.name;
    };
    /*Swift.(file).Float80.init(exactly:Float80)*/
    /*Swift.(file).Float80.init(exactly:Float80)*/
    MIO_Mixin_Float80.prototype.initExactlyFloat80 = function ($info, other) {
        throw 'unsupported method Swift.(file).Float80.init(exactly:Float80) in ' + this.constructor.name;
    };
    /*Swift.(file).Float80.+infix(_:Float80,_:Float80)*/
    /*Swift.(file).FloatingPoint.+infix(_:Self,_:Self)*/
    /*Swift.(file).AdditiveArithmetic.+infix(_:Self,_:Self)*/
    MIO_Mixin_Float80.infix_43 = function ($info, lhs, rhs) {
        return lhs + rhs;
    };
    /*Swift.(file).Float80.-infix(_:Float80,_:Float80)*/
    /*Swift.(file).FloatingPoint.-infix(_:Self,_:Self)*/
    /*Swift.(file).AdditiveArithmetic.-infix(_:Self,_:Self)*/
    MIO_Mixin_Float80.infix_45 = function ($info, lhs, rhs) {
        return lhs - rhs;
    };
    /*Swift.(file).Float80.*infix(_:Float80,_:Float80)*/
    /*Swift.(file).FloatingPoint.*infix(_:Self,_:Self)*/
    /*Swift.(file).Numeric.*infix(_:Self,_:Self)*/
    MIO_Mixin_Float80.infix_42 = function ($info, lhs, rhs) {
        return lhs * rhs;
    };
    /*Swift.(file).Float80./infix(_:Float80,_:Float80)*/
    /*Swift.(file).FloatingPoint./infix(_:Self,_:Self)*/
    MIO_Mixin_Float80.infix_47 = function ($info, lhs, rhs) {
        return lhs / rhs;
    };
    /*Swift.(file).Float80.distance(to:Float80)*/
    /*Swift.(file).Strideable.distance(to:Self)*/
    MIO_Mixin_Float80.prototype.distanceTo = function ($info, other) {
        throw 'unsupported method Swift.(file).Float80.distance(to:Float80) in ' + this.constructor.name;
    };
    /*Swift.(file).Float80.advanced(by:Float80)*/
    /*Swift.(file).Strideable.advanced(by:Self.Stride)*/
    MIO_Mixin_Float80.prototype.advancedBy = function ($info, amount) {
        throw 'unsupported method Swift.(file).Float80.advanced(by:Float80) in ' + this.constructor.name;
    };
    /*Swift.(file).Float80.customMirror*/
    MIO_Mixin_Float80.prototype.customMirror$get = function () {
        throw 'unsupported variable Swift.(file).Float80.customMirror in ' + this.constructor.name;
    };
    Object.defineProperty(MIO_Mixin_Float80.prototype, "customMirror", {
        get: function () { return this.customMirror$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    MIO_Mixin_Float80.prototype.init$vars = function () {
    };
    var _46;
    MIO_Mixin_Float80.$struct = true;
    MIO_Mixin_Float80.$mixin = true;
    MIO_Mixin_Float80.$infoAddress = '';
    MIO_Mixin_Float80.initString$failable = true;
    MIO_Mixin_Float80._Representation = (_46 = /** @class */ (function () {
            function class_70() {
            }
            /*Swift.(file).Float80._Representation.explicitSignificand*/
            class_70.prototype.explicitSignificand$get = function () {
                throw 'unsupported variable Swift.(file).Float80._Representation.explicitSignificand in ' + this.constructor.name;
            };
            Object.defineProperty(class_70.prototype, "explicitSignificand", {
                get: function () { return this.explicitSignificand$get(); },
                enumerable: true,
                configurable: true
            });
            ;
            /*Swift.(file).Float80._Representation.signAndExponent*/
            class_70.prototype.signAndExponent$get = function () {
                throw 'unsupported variable Swift.(file).Float80._Representation.signAndExponent in ' + this.constructor.name;
            };
            Object.defineProperty(class_70.prototype, "signAndExponent", {
                get: function () { return this.signAndExponent$get(); },
                enumerable: true,
                configurable: true
            });
            ;
            /*Swift.(file).Float80._Representation.sign*/
            class_70.prototype.sign$get = function () {
                throw 'unsupported variable Swift.(file).Float80._Representation.sign in ' + this.constructor.name;
            };
            Object.defineProperty(class_70.prototype, "sign", {
                get: function () { return this.sign$get(); },
                enumerable: true,
                configurable: true
            });
            ;
            /*Swift.(file).Float80._Representation.exponentBitPattern*/
            class_70.prototype.exponentBitPattern$get = function () {
                throw 'unsupported variable Swift.(file).Float80._Representation.exponentBitPattern in ' + this.constructor.name;
            };
            Object.defineProperty(class_70.prototype, "exponentBitPattern", {
                get: function () { return this.exponentBitPattern$get(); },
                enumerable: true,
                configurable: true
            });
            ;
            /*Swift.(file).Float80._Representation.init(explicitSignificand:UInt64,signAndExponent:UInt16)*/
            /*Swift.(file).Float80._Representation.init(explicitSignificand:UInt64,signAndExponent:UInt16)*/
            class_70.prototype.initExplicitSignificandUInt64SignAndExponentUInt16 = function ($info, explicitSignificand, signAndExponent) {
                throw 'unsupported method Swift.(file).Float80._Representation.init(explicitSignificand:UInt64,signAndExponent:UInt16) in ' + this.constructor.name;
            };
            class_70.prototype.init$vars = function () {
            };
            return class_70;
        }()),
        _46.$struct = true,
        _46.$infoAddress = '',
        _46);
    MIO_Mixin_Float80.initExactlyFloat$failable = true;
    MIO_Mixin_Float80.initExactlyDouble$failable = true;
    MIO_Mixin_Float80.initExactlyFloat80$failable = true;
    return MIO_Mixin_Float80;
}());
if (typeof LosslessStringConvertible$implementation != 'undefined')
    _mixin(MIO_Mixin_Float80, LosslessStringConvertible$implementation, false);
if (typeof CustomStringConvertible$implementation != 'undefined')
    _mixin(MIO_Mixin_Float80, CustomStringConvertible$implementation, false);
if (typeof CustomDebugStringConvertible$implementation != 'undefined')
    _mixin(MIO_Mixin_Float80, CustomDebugStringConvertible$implementation, false);
if (typeof TextOutputStreamable$implementation != 'undefined')
    _mixin(MIO_Mixin_Float80, TextOutputStreamable$implementation, false);
if (typeof BinaryFloatingPoint$implementation != 'undefined')
    _mixin(MIO_Mixin_Float80, BinaryFloatingPoint$implementation, false);
if (typeof _ExpressibleByBuiltinIntegerLiteral$implementation != 'undefined')
    _mixin(MIO_Mixin_Float80, _ExpressibleByBuiltinIntegerLiteral$implementation, false);
if (typeof ExpressibleByIntegerLiteral$implementation != 'undefined')
    _mixin(MIO_Mixin_Float80, ExpressibleByIntegerLiteral$implementation, false);
if (typeof _ExpressibleByBuiltinFloatLiteral$implementation != 'undefined')
    _mixin(MIO_Mixin_Float80, _ExpressibleByBuiltinFloatLiteral$implementation, false);
if (typeof Hashable$implementation != 'undefined')
    _mixin(MIO_Mixin_Float80, Hashable$implementation, false);
if (typeof _HasCustomAnyHashableRepresentation$implementation != 'undefined')
    _mixin(MIO_Mixin_Float80, _HasCustomAnyHashableRepresentation$implementation, false);
if (typeof Strideable$implementation != 'undefined')
    _mixin(MIO_Mixin_Float80, Strideable$implementation, false);
if (typeof CustomReflectable$implementation != 'undefined')
    _mixin(MIO_Mixin_Float80, CustomReflectable$implementation, false);
if (typeof CVarArg$implementation != 'undefined')
    _mixin(MIO_Mixin_Float80, CVarArg$implementation, false);
if (typeof _CVarArgAligned$implementation != 'undefined')
    _mixin(MIO_Mixin_Float80, _CVarArgAligned$implementation, false);
_mixin(Number, MIO_Mixin_Float80, true);
var Float80 = /** @class */ (function () {
    function Float80() {
    }
    return Float80;
}());
_mixin(Float80, MIO_Mixin_Float80, true);
var BinaryInteger$implementation = /** @class */ (function () {
    function BinaryInteger$implementation() {
    }
    /*Swift.(file).BinaryInteger.init()*/
    /*Swift.(file).BinaryInteger.init()*/
    BinaryInteger$implementation.prototype.init = function ($info) {
        var _this = this;
        return _cloneStruct(_create(_this.constructor, 'initIntegerLiteral', {}, 0));
        return;
    };
    /*Swift.(file).BinaryInteger.signum()*/
    /*Swift.(file).BinaryInteger.signum()*/
    BinaryInteger$implementation.prototype.signum = function ($info) {
        var _this = this;
        return _this.constructor.infix_45({}, (_this.constructor.infix_62({}, _this, _create(_this.constructor, 'initIntegerLiteral', {}, 0)) ? _create(_this.constructor, 'initIntegerLiteral', {}, 1) : _create(_this.constructor, 'initIntegerLiteral', {}, 0)), (_this.constructor.infix_60({}, _this, _create(_this.constructor, 'initIntegerLiteral', {}, 0)) ? _create(_this.constructor, 'initIntegerLiteral', {}, 1) : _create(_this.constructor, 'initIntegerLiteral', {}, 0)));
    };
    /*Swift.(file).BinaryInteger.quotientAndRemainder(dividingBy:Self)*/
    /*Swift.(file).BinaryInteger.quotientAndRemainder(dividingBy:Self)*/
    BinaryInteger$implementation.prototype.quotientAndRemainderDividingBy = function ($info, rhs) {
        var _this = this;
        return { 0: _this.constructor.infix_47({}, _this, rhs), 1: _this.constructor.infix_37({}, _this, rhs) };
    };
    /*Swift.(file).BinaryInteger.isMultiple(of:Self)*/
    /*Swift.(file).BinaryInteger.isMultiple(of:Self)*/
    BinaryInteger$implementation.prototype.isMultipleOf = function ($info, other) {
        var _this = this;
        if ((_this.constructor.infix_61_61({}, other, 0))) {
            return _this.constructor.infix_61_61({}, _this, 0);
        }
        ;
        return ((function () { throw '!unclarifiedGeneric:Self.Magnitude'; })()).infix_61_61({}, ((function () { throw '!unclarifiedGeneric:Self.Magnitude'; })()).infix_37({}, _this.constructor.prototype.magnitude$get.call(_this), _this.constructor.prototype.magnitude$get.call(other)), 0);
    };
    /*Swift.(file).BinaryInteger.&infix(_:Self,_:Self)*/
    /*Swift.(file).BinaryInteger.&infix(_:Self,_:Self)*/
    BinaryInteger$implementation.infix_38 = function ($info, lhs, rhs) {
        return lhs & rhs;
    };
    /*Swift.(file).BinaryInteger.|infix(_:Self,_:Self)*/
    /*Swift.(file).BinaryInteger.|infix(_:Self,_:Self)*/
    BinaryInteger$implementation.infix_124 = function ($info, lhs, rhs) {
        return lhs | rhs;
    };
    /*Swift.(file).BinaryInteger.^infix(_:Self,_:Self)*/
    /*Swift.(file).BinaryInteger.^infix(_:Self,_:Self)*/
    BinaryInteger$implementation.infix_94 = function ($info, lhs, rhs) {
        return lhs ^ rhs;
    };
    /*Swift.(file).BinaryInteger.>>infix(_:Self,_:RHS)*/
    /*Swift.(file).BinaryInteger.>>infix(_:Self,_:RHS)*/
    BinaryInteger$implementation.infix_62_62 = function ($info, lhs, rhs) {
        return lhs >> rhs;
    };
    /*Swift.(file).BinaryInteger.<<infix(_:Self,_:RHS)*/
    /*Swift.(file).BinaryInteger.<<infix(_:Self,_:RHS)*/
    BinaryInteger$implementation.infix_60_60 = function ($info, lhs, rhs) {
        return lhs << rhs;
    };
    /*Swift.(file).BinaryInteger.description*/
    BinaryInteger$implementation.prototype.description$get = function () {
        return this.toString();
    };
    Object.defineProperty(BinaryInteger$implementation.prototype, "description", {
        get: function () { return this.description$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).BinaryInteger.distance(to:Self)*/
    /*Swift.(file).BinaryInteger.distance(to:Self)*/
    BinaryInteger$implementation.prototype.distanceTo = function ($info, other) {
        var _this = this;
        if ((Bool.prefix_33({}, _this.constructor.isSigned))) {
            if ((_this.constructor.infix_62({}, _this, other))) {
                var $ifLet0, result_1;
                if ((($ifLet0 = _create(Int, 'initExactly', {}, _this.constructor.infix_45({}, _this, other))) || true) && $ifLet0 != null && ((result_1 = $ifLet0) || true)) {
                    return Int.prefix_45({}, result_1);
                }
                ;
            }
            else {
                var $ifLet2, result_3;
                if ((($ifLet2 = _create(Int, 'initExactly', {}, _this.constructor.infix_45({}, other, _this))) || true) && $ifLet2 != null && ((result_3 = $ifLet2) || true)) {
                    return result_3;
                }
                ;
            }
            ;
        }
        else {
            var isNegative = _this.constructor.infix_60({}, _this, _create(_this.constructor, 'initIntegerLiteral', {}, 0));
            if ((Bool.infix_61_61({}, isNegative, _this.constructor.infix_60({}, other, _create(_this.constructor, 'initIntegerLiteral', {}, 0))))) {
                var $ifLet4, result_5;
                if ((($ifLet4 = _create(Int, 'initExactly', {}, _this.constructor.infix_45({}, other, _this))) || true) && $ifLet4 != null && ((result_5 = $ifLet4) || true)) {
                    return result_5;
                }
                ;
            }
            else {
                var $ifLet6, result_7;
                if ((($ifLet6 = _create(Int, 'initExactly', {}, ((function () { throw '!unclarifiedGeneric:Self.Magnitude'; })()).infix_43({}, _this.constructor.prototype.magnitude$get.call(_this), _this.constructor.prototype.magnitude$get.call(other)))) || true) && $ifLet6 != null && ((result_7 = $ifLet6) || true)) {
                    return (isNegative ? result_7 : Int.prefix_45({}, result_7));
                }
                ;
            }
            ;
        }
        ;
        preconditionFailureFileLine({}, function () { return "Distance is not representable in Int"; }, '?3', '?3');
    };
    /*Swift.(file).BinaryInteger.advanced(by:Int)*/
    /*Swift.(file).BinaryInteger.advanced(by:Int)*/
    BinaryInteger$implementation.prototype.advancedBy = function ($info, n) {
        var _this = this;
        if ((Bool.prefix_33({}, _this.constructor.isSigned))) {
            return (Int.infix_60({}, n, 0) ? _this.constructor.infix_45({}, _this, _create(_this.constructor, 'initT', {}, Int.prefix_45({}, n))) : _this.constructor.infix_43({}, _this, _create(_this.constructor, 'initT', {}, n)));
        }
        ;
        if ((Bool.infix_61_61({}, _this.constructor.infix_60({}, _this, _create(_this.constructor, 'initIntegerLiteral', {}, 0)), Int.infix_60({}, n, _create(_this.constructor, 'initIntegerLiteral', {}, 0))))) {
            return _this.constructor.infix_43({}, _this, _create(_this.constructor, 'initT', {}, n));
        }
        ;
        return (((function () { throw '!unclarifiedGeneric:Self.Magnitude'; })()).infix_60({}, _this.constructor.prototype.magnitude$get.call(_this), Int.prototype.magnitude$get.call(n)) ? _create(_this.constructor, 'initT', {}, Int.infix_43({}, _create(Int, 'initT', {}, _this), n)) : _this.constructor.infix_43({}, _this, _create(_this.constructor, 'initT', {}, n)));
    };
    /*Swift.(file).BinaryInteger.==infix(_:Self,_:Other)*/
    /*Swift.(file).BinaryInteger.==infix(_:Self,_:Other)*/
    BinaryInteger$implementation.infix_61_61 = function ($info, lhs, rhs) {
        return lhs == rhs;
    };
    /*Swift.(file).BinaryInteger.!=infix(_:Self,_:Other)*/
    /*Swift.(file).BinaryInteger.!=infix(_:Self,_:Other)*/
    BinaryInteger$implementation.infix_33_61 = function ($info, lhs, rhs) {
        return lhs != rhs;
    };
    /*Swift.(file).BinaryInteger.<infix(_:Self,_:Other)*/
    /*Swift.(file).BinaryInteger.<infix(_:Self,_:Other)*/
    BinaryInteger$implementation.infix_60 = function ($info, lhs, rhs) {
        return lhs < rhs;
    };
    /*Swift.(file).BinaryInteger.<=infix(_:Self,_:Other)*/
    /*Swift.(file).BinaryInteger.<=infix(_:Self,_:Other)*/
    BinaryInteger$implementation.infix_60_61 = function ($info, lhs, rhs) {
        return lhs <= rhs;
    };
    /*Swift.(file).BinaryInteger.>=infix(_:Self,_:Other)*/
    /*Swift.(file).BinaryInteger.>=infix(_:Self,_:Other)*/
    BinaryInteger$implementation.infix_62_61 = function ($info, lhs, rhs) {
        return lhs >= rhs;
    };
    /*Swift.(file).BinaryInteger.>infix(_:Self,_:Other)*/
    /*Swift.(file).BinaryInteger.>infix(_:Self,_:Other)*/
    BinaryInteger$implementation.infix_62 = function ($info, lhs, rhs) {
        return lhs > rhs;
    };
    /*Swift.(file).BinaryInteger.!=infix(_:Self,_:Self)*/
    /*Swift.(file).BinaryInteger.!=infix(_:Self,_:Self)*/
    BinaryInteger$implementation.infix_33_61 = function ($info, lhs, rhs) {
        return lhs != rhs;
    };
    /*Swift.(file).BinaryInteger.<=infix(_:Self,_:Self)*/
    /*Swift.(file).BinaryInteger.<=infix(_:Self,_:Self)*/
    BinaryInteger$implementation.infix_60_61 = function ($info, lhs, rhs) {
        return lhs <= rhs;
    };
    /*Swift.(file).BinaryInteger.>=infix(_:Self,_:Self)*/
    /*Swift.(file).BinaryInteger.>=infix(_:Self,_:Self)*/
    BinaryInteger$implementation.infix_62_61 = function ($info, lhs, rhs) {
        return lhs >= rhs;
    };
    /*Swift.(file).BinaryInteger.>infix(_:Self,_:Self)*/
    /*Swift.(file).BinaryInteger.>infix(_:Self,_:Self)*/
    BinaryInteger$implementation.infix_62 = function ($info, lhs, rhs) {
        return lhs > rhs;
    };
    /*Swift.(file).BinaryInteger.addWithOverflow(_:Self,_:Self)*/
    /*Swift.(file).BinaryInteger.addWithOverflow(_:Self,_:Self)*/
    BinaryInteger$implementation.addWithOverflow = function ($info, lhs, rhs) {
        var _this = this;
        fatalErrorFileLine({}, function () { return "Unavailable"; }, '?3', '?3');
    };
    /*Swift.(file).BinaryInteger.subtractWithOverflow(_:Self,_:Self)*/
    /*Swift.(file).BinaryInteger.subtractWithOverflow(_:Self,_:Self)*/
    BinaryInteger$implementation.subtractWithOverflow = function ($info, lhs, rhs) {
        var _this = this;
        fatalErrorFileLine({}, function () { return "Unavailable"; }, '?3', '?3');
    };
    /*Swift.(file).BinaryInteger.multiplyWithOverflow(_:Self,_:Self)*/
    /*Swift.(file).BinaryInteger.multiplyWithOverflow(_:Self,_:Self)*/
    BinaryInteger$implementation.multiplyWithOverflow = function ($info, lhs, rhs) {
        var _this = this;
        fatalErrorFileLine({}, function () { return "Unavailable"; }, '?3', '?3');
    };
    /*Swift.(file).BinaryInteger.divideWithOverflow(_:Self,_:Self)*/
    /*Swift.(file).BinaryInteger.divideWithOverflow(_:Self,_:Self)*/
    BinaryInteger$implementation.divideWithOverflow = function ($info, lhs, rhs) {
        var _this = this;
        fatalErrorFileLine({}, function () { return "Unavailable"; }, '?3', '?3');
    };
    /*Swift.(file).BinaryInteger.remainderWithOverflow(_:Self,_:Self)*/
    /*Swift.(file).BinaryInteger.remainderWithOverflow(_:Self,_:Self)*/
    BinaryInteger$implementation.remainderWithOverflow = function ($info, lhs, rhs) {
        var _this = this;
        fatalErrorFileLine({}, function () { return "Unavailable"; }, '?3', '?3');
    };
    //not sure why missing; it's there in generated-by-step-2.txt
    BinaryInteger$implementation.prototype.initT = function ($info, from) {
        return from;
    };
    return BinaryInteger$implementation;
}());
if (typeof Hashable$implementation != 'undefined')
    _mixin(BinaryInteger$implementation, Hashable$implementation, false);
if (typeof Numeric$implementation != 'undefined')
    _mixin(BinaryInteger$implementation, Numeric$implementation, false);
if (typeof CustomStringConvertible$implementation != 'undefined')
    _mixin(BinaryInteger$implementation, CustomStringConvertible$implementation, false);
if (typeof Strideable$implementation != 'undefined')
    _mixin(BinaryInteger$implementation, Strideable$implementation, false);
var FixedWidthInteger$implementation = /** @class */ (function () {
    function FixedWidthInteger$implementation() {
    }
    /*Swift.(file).FixedWidthInteger.init(_:S,radix:Int)*/
    /*Swift.(file).FixedWidthInteger.init(_:S,radix:Int)*/
    FixedWidthInteger$implementation.prototype.initRadixInt = function ($info, _text, radix) {
        var result = parseInt(_text);
        //WRAP_OPTIONALS
        //if(isNaN(result)) return Optional.none
        //return Optional.some({}, result)
        //!WRAP_OPTIONALS
        if (isNaN(result))
            return null;
        return result;
    };
    /*Swift.(file).FixedWidthInteger.init(_:String)*/
    /*Swift.(file).FixedWidthInteger.init(_:String)*/
    FixedWidthInteger$implementation.prototype.initString = function ($info, description) {
        var _this = this;
        _this.initRadixInt({}, description, 10);
        return;
    };
    /*Swift.(file).FixedWidthInteger.bitWidth*/
    FixedWidthInteger$implementation.prototype.bitWidth$get = function () {
        var _this = this;
        return _this.constructor.bitWidth;
    };
    Object.defineProperty(FixedWidthInteger$implementation.prototype, "bitWidth", {
        get: function () { return this.bitWidth$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).FixedWidthInteger.init(littleEndian:Self)*/
    /*Swift.(file).FixedWidthInteger.init(littleEndian:Self)*/
    FixedWidthInteger$implementation.prototype.initLittleEndian = function ($info, value) {
        var _this = this;
        return _cloneStruct(value);
        return;
    };
    /*Swift.(file).FixedWidthInteger.init(bigEndian:Self)*/
    /*Swift.(file).FixedWidthInteger.init(bigEndian:Self)*/
    FixedWidthInteger$implementation.prototype.initBigEndian = function ($info, value) {
        var _this = this;
        return _cloneStruct(_this.constructor.prototype.byteSwapped$get.call(value));
        return;
    };
    /*Swift.(file).FixedWidthInteger.littleEndian*/
    FixedWidthInteger$implementation.prototype.littleEndian$get = function () {
        var _this = this;
        return _this;
    };
    Object.defineProperty(FixedWidthInteger$implementation.prototype, "littleEndian", {
        get: function () { return this.littleEndian$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).FixedWidthInteger.bigEndian*/
    FixedWidthInteger$implementation.prototype.bigEndian$get = function () {
        var _this = this;
        return _this.constructor.prototype.byteSwapped$get.call(_this);
    };
    Object.defineProperty(FixedWidthInteger$implementation.prototype, "bigEndian", {
        get: function () { return this.bigEndian$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).FixedWidthInteger.&>>infix(_:Self,_:Self)*/
    /*Swift.(file).FixedWidthInteger.&>>infix(_:Self,_:Self)*/
    FixedWidthInteger$implementation.infix_38_62_62 = function ($info, lhs, rhs) {
        return lhs >> rhs;
    };
    /*Swift.(file).FixedWidthInteger.&>>infix(_:Self,_:Other)*/
    /*Swift.(file).FixedWidthInteger.&>>infix(_:Self,_:Other)*/
    FixedWidthInteger$implementation.infix_38_62_62 = function ($info, lhs, rhs) {
        return lhs >> rhs;
    };
    /*Swift.(file).FixedWidthInteger.&>>=infix(_:Self,_:Other)*/
    /*Swift.(file).FixedWidthInteger.&>>=infix(_:Self,_:Other)*/
    FixedWidthInteger$implementation.infix_38_62_62_61 = function ($info, lhs$inout, rhs) {
        lhs$inout.set(lhs$inout.get() >> rhs);
    };
    /*Swift.(file).FixedWidthInteger.&<<infix(_:Self,_:Self)*/
    /*Swift.(file).FixedWidthInteger.&<<infix(_:Self,_:Self)*/
    FixedWidthInteger$implementation.infix_38_60_60 = function ($info, lhs, rhs) {
        return lhs << rhs;
    };
    /*Swift.(file).FixedWidthInteger.&<<infix(_:Self,_:Other)*/
    /*Swift.(file).FixedWidthInteger.&<<infix(_:Self,_:Other)*/
    FixedWidthInteger$implementation.infix_38_60_60 = function ($info, lhs, rhs) {
        return lhs << rhs;
    };
    /*Swift.(file).FixedWidthInteger.&<<=infix(_:Self,_:Other)*/
    /*Swift.(file).FixedWidthInteger.&<<=infix(_:Self,_:Other)*/
    FixedWidthInteger$implementation.infix_38_60_60_61 = function ($info, lhs$inout, rhs) {
        lhs$inout.set(lhs$inout.get() << rhs);
    };
    /*Swift.(file).FixedWidthInteger.random(in:Range<Self>,using:T)*/
    /*Swift.(file).FixedWidthInteger.random(in:Range<Self>,using:T)*/
    FixedWidthInteger$implementation.randomInUsing = function ($info, range, generator$inout) {
        var _this = this;
        var generator = generator$inout.get();
        var $result = (function () {
            preconditionFileLine({}, function () { return Bool.prefix_33({}, range.isEmpty); }, function () { return "Can't get random value with an empty range"; }, '?3', '?3');
            var delta = _create(((function () { throw '!unclarifiedGeneric:Self.Magnitude'; })()), 'initTruncatingIfNeeded', {}, _this.infix_38_45({}, range.upperBound, range.lowerBound));
            return _create(_this, 'initTruncatingIfNeeded', {}, ((function () { throw '!unclarifiedGeneric:Self.Magnitude'; })()).infix_38_43({}, _create(((function () { throw '!unclarifiedGeneric:Self.Magnitude'; })()), 'initTruncatingIfNeeded', {}, range.lowerBound), generator.nextUpperBound({ $setThis: function ($val) { return generator = $val; } }, delta)));
        })();
        generator$inout.set(generator);
        return $result;
    };
    /*Swift.(file).FixedWidthInteger.random(in:Range<Self>)*/
    /*Swift.(file).FixedWidthInteger.random(in:Range<Self>)*/
    FixedWidthInteger$implementation.randomIn = function ($info, range) {
        var _this = this;
        var g = _create(SystemRandomNumberGenerator, 'init', {});
        return _this.randomInUsing({}, range, { get: function () { return g; }, set: function ($val) { return g = $val; } });
    };
    /*Swift.(file).FixedWidthInteger.random(in:ClosedRange<Self>,using:T)*/
    /*Swift.(file).FixedWidthInteger.random(in:ClosedRange<Self>,using:T)*/
    FixedWidthInteger$implementation.randomInUsing = function ($info, range, generator$inout) {
        var _this = this;
        var generator = generator$inout.get();
        var $result = (function () {
            preconditionFileLine({}, function () { return Bool.prefix_33({}, range.isEmpty); }, function () { return "Can't get random value with an empty range"; }, '?3', '?3');
            var delta = _create(((function () { throw '!unclarifiedGeneric:Self.Magnitude'; })()), 'initTruncatingIfNeeded', {}, _this.infix_38_45({}, range.upperBound, range.lowerBound));
            if ((((function () { throw '!unclarifiedGeneric:Self.Magnitude'; })()).infix_61_61({}, delta, ((function () { throw '!unclarifiedGeneric:Self.Magnitude'; })()).max))) {
                return _create(_this, 'initTruncatingIfNeeded', {}, generator.next({ $setThis: function ($val) { return generator = $val; } }));
            }
            ;
            ((function () { throw '!unclarifiedGeneric:Self.Magnitude'; })()).infix_43_61({}, { get: function () { return delta; }, set: function ($val) { return delta = $val; } }, _create(((function () { throw '!unclarifiedGeneric:Self.Magnitude'; })()), 'initIntegerLiteral', {}, 1));
            return _create(_this, 'initTruncatingIfNeeded', {}, ((function () { throw '!unclarifiedGeneric:Self.Magnitude'; })()).infix_38_43({}, _create(((function () { throw '!unclarifiedGeneric:Self.Magnitude'; })()), 'initTruncatingIfNeeded', {}, range.lowerBound), generator.nextUpperBound({ $setThis: function ($val) { return generator = $val; } }, delta)));
        })();
        generator$inout.set(generator);
        return $result;
    };
    /*Swift.(file).FixedWidthInteger.random(in:ClosedRange<Self>)*/
    /*Swift.(file).FixedWidthInteger.random(in:ClosedRange<Self>)*/
    FixedWidthInteger$implementation.randomIn = function ($info, range) {
        var _this = this;
        var g = _create(SystemRandomNumberGenerator, 'init', {});
        return _this.randomInUsing({}, range, { get: function () { return g; }, set: function ($val) { return g = $val; } });
    };
    /*Swift.(file).FixedWidthInteger.~prefix(_:Self)*/
    /*Swift.(file).FixedWidthInteger.~prefix(_:Self)*/
    FixedWidthInteger$implementation.prefix_126 = function ($info, x) {
        return ~x;
    };
    /*Swift.(file).FixedWidthInteger.>>infix(_:Self,_:Other)*/
    /*Swift.(file).FixedWidthInteger.>>infix(_:Self,_:Other)*/
    FixedWidthInteger$implementation.infix_62_62 = function ($info, lhs, rhs) {
        return lhs >> rhs;
    };
    /*Swift.(file).FixedWidthInteger.>>=infix(_:Self,_:Other)*/
    /*Swift.(file).FixedWidthInteger.>>=infix(_:Self,_:Other)*/
    FixedWidthInteger$implementation.infix_62_62_61 = function ($info, lhs$inout, rhs) {
        lhs$inout.set(lhs$inout.get() >> rhs);
    };
    /*Swift.(file).FixedWidthInteger.<<infix(_:Self,_:Other)*/
    /*Swift.(file).FixedWidthInteger.<<infix(_:Self,_:Other)*/
    FixedWidthInteger$implementation.infix_60_60 = function ($info, lhs, rhs) {
        return lhs << rhs;
    };
    /*Swift.(file).FixedWidthInteger.<<=infix(_:Self,_:Other)*/
    /*Swift.(file).FixedWidthInteger.<<=infix(_:Self,_:Other)*/
    FixedWidthInteger$implementation.infix_60_60_61 = function ($info, lhs$inout, rhs) {
        lhs$inout.set(lhs$inout.get() << rhs);
    };
    /*Swift.(file).FixedWidthInteger.init(_:T)*/
    /*Swift.(file).FixedWidthInteger.init(_:T)*/
    FixedWidthInteger$implementation.prototype.initT = function ($info, source) {
        var _this = this;
        var $ifLet0, value_1;
        if (!((($ifLet0 = _this.constructor._convertFrom({}, source)["0"]) || true) && $ifLet0 != null && ((value_1 = $ifLet0) || true))) {
            fatalErrorFileLine({}, function () { return (("") + (((function () { throw '!unclarifiedGeneric:T'; })())) + (" value cannot be converted to ") + (_this.constructor) + (" because it is outside the representable range")); }, '?3', '?3');
        }
        ;
        return _cloneStruct(value_1);
        return;
    };
    /*Swift.(file).FixedWidthInteger.init(exactly:T)*/
    /*Swift.(file).FixedWidthInteger.init(exactly:T)*/
    FixedWidthInteger$implementation.prototype.initExactly = function ($info, source) {
        var _this = this;
        var $tuple = _this.constructor._convertFrom({}, source), temporary = $tuple && $tuple[0], exact = $tuple && $tuple[1];
        var $ifLet0, value_1;
        if (!((exact) && (($ifLet0 = temporary) || true) && $ifLet0 != null && ((value_1 = $ifLet0) || true))) {
            return (this.$failed = true);
        }
        ;
        return _cloneStruct(value_1);
        return;
    };
    /*Swift.(file).FixedWidthInteger.init(clamping:Other)*/
    /*Swift.(file).FixedWidthInteger.init(clamping:Other)*/
    FixedWidthInteger$implementation.prototype.initClamping = function ($info, source) {
        var _this = this;
        if ((_slowPath({}, ((function () { throw '!unclarifiedGeneric:Other'; })()).infix_60({}, source, _this.constructor.min)))) {
            return _cloneStruct(_this.constructor.min);
        }
        else {
            if ((_slowPath({}, ((function () { throw '!unclarifiedGeneric:Other'; })()).infix_62({}, source, _this.constructor.max)))) {
                return _cloneStruct(_this.constructor.max);
            }
            else {
                return _cloneStruct(_create(_this.constructor, 'initTruncatingIfNeeded', {}, source));
            }
        }
        ;
        return;
    };
    /*Swift.(file).FixedWidthInteger.init(truncatingIfNeeded:T)*/
    /*Swift.(file).FixedWidthInteger.init(truncatingIfNeeded:T)*/
    FixedWidthInteger$implementation.prototype.initTruncatingIfNeeded = function ($info, source) {
        var _this = this;
        if ((Int.infix_60_61({}, _this.constructor.bitWidth, Int.bitWidth))) {
            return _cloneStruct(_create(_this.constructor, 'init_truncatingBitsUInt', {}, ((function () { throw '!unclarifiedGeneric:T'; })()).prototype._lowWord$get.call(source)));
        }
        else {
            var neg = ((function () { throw '!unclarifiedGeneric:T'; })()).infix_60({}, source, _create(((function () { throw '!unclarifiedGeneric:T'; })()), 'initIntegerLiteral', {}, 0));
            var result_4 = (neg ? _this.constructor.prefix_126({}, _create(_this.constructor, 'initIntegerLiteral', {}, 0)) : _create(_this.constructor, 'initIntegerLiteral', {}, 0));
            var shift_1 = _create(_this.constructor, 'initIntegerLiteral', {}, 0);
            var width = _create(_this.constructor, 'init_truncatingBitsUInt', {}, Int.prototype._lowWord$get.call(_this.constructor.bitWidth));
            {
                var $word$generator_1 = ((function () { throw '!unclarifiedGeneric:T'; })()).prototype.words$get.call(source).makeIterator({});
                while (true) {
                    var $ifLet0, word_1;
                    if (!((($ifLet0 = $word$generator_1.next({ $setThis: function ($val) { return $word$generator_1 = $val; } })) || true) && $ifLet0 != null && ((word_1 = $ifLet0) || true)))
                        break;
                    if (!((_this.constructor.infix_60({}, shift_1, width)))) {
                        break;
                    }
                    ;
                    _this.constructor.infix_94_61({}, { get: function () { return result_4; }, set: function ($val) { return result_4 = $val; } }, _this.constructor.infix_38_60_60({}, _create(_this.constructor, 'init_truncatingBitsUInt', {}, (neg ? UInt.prefix_126({}, word_1) : word_1)), shift_1));
                    _this.constructor.infix_43_61({}, { get: function () { return shift_1; }, set: function ($val) { return shift_1 = $val; } }, _create(_this.constructor, 'init_truncatingBitsUInt', {}, Int.prototype._lowWord$get.call(Int.bitWidth)));
                }
            }
            ;
            return _cloneStruct(result_4);
        }
        ;
        return;
    };
    /*Swift.(file).FixedWidthInteger.&+infix(_:Self,_:Self)*/
    /*Swift.(file).FixedWidthInteger.&+infix(_:Self,_:Self)*/
    FixedWidthInteger$implementation.infix_38_43 = function ($info, lhs, rhs) {
        return lhs + rhs;
    };
    /*Swift.(file).FixedWidthInteger.&+=infix(_:Self,_:Self)*/
    /*Swift.(file).FixedWidthInteger.&+=infix(_:Self,_:Self)*/
    FixedWidthInteger$implementation.infix_38_43_61 = function ($info, lhs$inout, rhs) {
        return lhs$inout += rhs;
    };
    /*Swift.(file).FixedWidthInteger.&-infix(_:Self,_:Self)*/
    /*Swift.(file).FixedWidthInteger.&-infix(_:Self,_:Self)*/
    FixedWidthInteger$implementation.infix_38_45 = function ($info, lhs, rhs) {
        return lhs - rhs;
    };
    /*Swift.(file).FixedWidthInteger.&-=infix(_:Self,_:Self)*/
    /*Swift.(file).FixedWidthInteger.&-=infix(_:Self,_:Self)*/
    FixedWidthInteger$implementation.infix_38_45_61 = function ($info, lhs$inout, rhs) {
        return lhs$inout -= rhs;
    };
    /*Swift.(file).FixedWidthInteger.&*infix(_:Self,_:Self)*/
    /*Swift.(file).FixedWidthInteger.&*infix(_:Self,_:Self)*/
    FixedWidthInteger$implementation.infix_38_42 = function ($info, lhs, rhs) {
        return lhs * rhs;
    };
    /*Swift.(file).FixedWidthInteger.&*=infix(_:Self,_:Self)*/
    /*Swift.(file).FixedWidthInteger.&*=infix(_:Self,_:Self)*/
    FixedWidthInteger$implementation.infix_38_42_61 = function ($info, lhs$inout, rhs) {
        return lhs$inout *= rhs;
    };
    /*Swift.(file).FixedWidthInteger.>>infix(_:Self,_:Self)*/
    /*Swift.(file).FixedWidthInteger.>>infix(_:Self,_:Self)*/
    FixedWidthInteger$implementation.infix_62_62 = function ($info, lhs, rhs) {
        return lhs >> rhs;
    };
    /*Swift.(file).FixedWidthInteger.>>=infix(_:Self,_:Self)*/
    /*Swift.(file).FixedWidthInteger.>>=infix(_:Self,_:Self)*/
    FixedWidthInteger$implementation.infix_62_62_61 = function ($info, lhs$inout, rhs) {
        lhs$inout.set(lhs$inout.get() >> rhs);
    };
    /*Swift.(file).FixedWidthInteger.<<infix(_:Self,_:Self)*/
    /*Swift.(file).FixedWidthInteger.<<infix(_:Self,_:Self)*/
    FixedWidthInteger$implementation.infix_60_60 = function ($info, lhs, rhs) {
        return lhs << rhs;
    };
    /*Swift.(file).FixedWidthInteger.<<=infix(_:Self,_:Self)*/
    /*Swift.(file).FixedWidthInteger.<<=infix(_:Self,_:Self)*/
    FixedWidthInteger$implementation.infix_60_60_61 = function ($info, lhs$inout, rhs) {
        lhs$inout.set(lhs$inout.get() << rhs);
    };
    /*Swift.(file).FixedWidthInteger.addWithOverflow(_:Self,_:Self)*/
    /*Swift.(file).FixedWidthInteger.addWithOverflow(_:Self,_:Self)*/
    FixedWidthInteger$implementation.addWithOverflow = function ($info, lhs, rhs) {
        var _this = this;
        var $tuple = _this.prototype.addingReportingOverflow.call(lhs, {}, rhs), partialValue = $tuple && $tuple[0], overflow = $tuple && $tuple[1];
        return { 0: partialValue, 1: overflow };
    };
    /*Swift.(file).FixedWidthInteger.subtractWithOverflow(_:Self,_:Self)*/
    /*Swift.(file).FixedWidthInteger.subtractWithOverflow(_:Self,_:Self)*/
    FixedWidthInteger$implementation.subtractWithOverflow = function ($info, lhs, rhs) {
        var _this = this;
        var $tuple = _this.prototype.subtractingReportingOverflow.call(lhs, {}, rhs), partialValue = $tuple && $tuple[0], overflow = $tuple && $tuple[1];
        return { 0: partialValue, 1: overflow };
    };
    /*Swift.(file).FixedWidthInteger.multiplyWithOverflow(_:Self,_:Self)*/
    /*Swift.(file).FixedWidthInteger.multiplyWithOverflow(_:Self,_:Self)*/
    FixedWidthInteger$implementation.multiplyWithOverflow = function ($info, lhs, rhs) {
        var _this = this;
        var $tuple = _this.prototype.multipliedReportingOverflowBy.call(lhs, {}, rhs), partialValue = $tuple && $tuple[0], overflow = $tuple && $tuple[1];
        return { 0: partialValue, 1: overflow };
    };
    /*Swift.(file).FixedWidthInteger.divideWithOverflow(_:Self,_:Self)*/
    /*Swift.(file).FixedWidthInteger.divideWithOverflow(_:Self,_:Self)*/
    FixedWidthInteger$implementation.divideWithOverflow = function ($info, lhs, rhs) {
        var _this = this;
        var $tuple = _this.prototype.dividedReportingOverflowBy.call(lhs, {}, rhs), partialValue = $tuple && $tuple[0], overflow = $tuple && $tuple[1];
        return { 0: partialValue, 1: overflow };
    };
    /*Swift.(file).FixedWidthInteger.remainderWithOverflow(_:Self,_:Self)*/
    /*Swift.(file).FixedWidthInteger.remainderWithOverflow(_:Self,_:Self)*/
    FixedWidthInteger$implementation.remainderWithOverflow = function ($info, lhs, rhs) {
        var _this = this;
        var $tuple = _this.prototype.remainderReportingOverflowDividingBy.call(lhs, {}, rhs), partialValue = $tuple && $tuple[0], overflow = $tuple && $tuple[1];
        return { 0: partialValue, 1: overflow };
    };
    FixedWidthInteger$implementation._convertFrom = function ($info, number) {
        //WRAP_OPTIONAL
        //    return {0: _injectIntoOptional(number), 1: true/*exact*/}
        //!WRAP_OPTIONAL
        return { 0: number, 1: true /*exact*/ };
    };
    FixedWidthInteger$implementation.initRadixInt$failable = true;
    FixedWidthInteger$implementation.initString$failable = true;
    FixedWidthInteger$implementation.initExactly$failable = true;
    return FixedWidthInteger$implementation;
}());
if (typeof BinaryInteger$implementation != 'undefined')
    _mixin(FixedWidthInteger$implementation, BinaryInteger$implementation, false);
if (typeof LosslessStringConvertible$implementation != 'undefined')
    _mixin(FixedWidthInteger$implementation, LosslessStringConvertible$implementation, false);
var UnsignedInteger$implementation = /** @class */ (function () {
    function UnsignedInteger$implementation() {
    }
    /*Swift.(file).UnsignedInteger.magnitude*/
    UnsignedInteger$implementation.prototype.magnitude$get = function () {
        var _this = this;
        return _this;
    };
    Object.defineProperty(UnsignedInteger$implementation.prototype, "magnitude", {
        get: function () { return this.magnitude$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).UnsignedInteger.isSigned*/
    UnsignedInteger$implementation.isSigned$get = function () {
        var _this = this;
        return false;
    };
    Object.defineProperty(UnsignedInteger$implementation, "isSigned", {
        get: function () {
            return this.isSigned$get();
        },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).UnsignedInteger.init(_:T)*/
    /*Swift.(file).UnsignedInteger.init(_:T)*/
    UnsignedInteger$implementation.prototype.initT = function ($info, source) {
        var _this = this;
        if ((((function () { throw '!unclarifiedGeneric:T'; })()).isSigned)) {
            preconditionFileLine({}, function () { return ((function () { throw '!unclarifiedGeneric:T'; })()).infix_62_61({}, source, _create(((function () { throw '!unclarifiedGeneric:T'; })()), 'initIntegerLiteral', {}, 0)); }, function () { return "Negative value is not representable"; }, '?3', '?3');
        }
        ;
        if ((Int.infix_62_61({}, ((function () { throw '!unclarifiedGeneric:T'; })()).prototype.bitWidth$get.call(source), _this.constructor.bitWidth))) {
            preconditionFileLine({}, function () { return ((function () { throw '!unclarifiedGeneric:T'; })()).infix_60_61({}, source, _this.constructor.max); }, function () { return "Not enough bits to represent the passed value"; }, '?3', '?3');
        }
        ;
        _this.initTruncatingIfNeeded({}, source);
        return;
    };
    /*Swift.(file).UnsignedInteger.init(exactly:T)*/
    /*Swift.(file).UnsignedInteger.init(exactly:T)*/
    UnsignedInteger$implementation.prototype.initExactly = function ($info, source) {
        var _this = this;
        if ((Bool.infix_38_38({}, ((function () { throw '!unclarifiedGeneric:T'; })()).isSigned, function () { return ((function () { throw '!unclarifiedGeneric:T'; })()).infix_60({}, source, _create(((function () { throw '!unclarifiedGeneric:T'; })()), 'initIntegerLiteral', {}, 0)); }))) {
            return (this.$failed = true);
        }
        ;
        if ((Bool.infix_38_38({}, Int.infix_62_61({}, ((function () { throw '!unclarifiedGeneric:T'; })()).prototype.bitWidth$get.call(source), _this.constructor.bitWidth), function () { return ((function () { throw '!unclarifiedGeneric:T'; })()).infix_62({}, source, _this.constructor.max); }))) {
            return (this.$failed = true);
        }
        ;
        _this.initTruncatingIfNeeded({}, source);
        return;
    };
    /*Swift.(file).UnsignedInteger.max*/
    UnsignedInteger$implementation.max$get = function () {
        return Number.MAX_SAFE_INTEGER;
    };
    Object.defineProperty(UnsignedInteger$implementation, "max", {
        get: function () { return this.max$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).UnsignedInteger.min*/
    UnsignedInteger$implementation.min$get = function () {
        var _this = this;
        return _create(_this, 'initIntegerLiteral', {}, 0);
    };
    Object.defineProperty(UnsignedInteger$implementation, "min", {
        get: function () {
            return this.min$get();
        },
        enumerable: true,
        configurable: true
    });
    ;
    UnsignedInteger$implementation.initExactly$failable = true;
    return UnsignedInteger$implementation;
}());
if (typeof BinaryInteger$implementation != 'undefined')
    _mixin(UnsignedInteger$implementation, BinaryInteger$implementation, false);
var SignedInteger$implementation = /** @class */ (function () {
    function SignedInteger$implementation() {
    }
    /*Swift.(file).SignedInteger.isSigned*/
    SignedInteger$implementation.isSigned$get = function () {
        var _this = this;
        return true;
    };
    Object.defineProperty(SignedInteger$implementation, "isSigned", {
        get: function () {
            return this.isSigned$get();
        },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).SignedInteger.init(_:T)*/
    /*Swift.(file).SignedInteger.init(_:T)*/
    SignedInteger$implementation.prototype.initT = function ($info, source) {
        var _this = this;
        if ((Bool.infix_38_38({}, ((function () { throw '!unclarifiedGeneric:T'; })()).isSigned, function () { return Int.infix_62({}, ((function () { throw '!unclarifiedGeneric:T'; })()).prototype.bitWidth$get.call(source), _this.constructor.bitWidth); }))) {
            preconditionFileLine({}, function () { return ((function () { throw '!unclarifiedGeneric:T'; })()).infix_62_61({}, source, _this.constructor.min); }, function () { return "Not enough bits to represent a signed value"; }, '?3', '?3');
        }
        ;
        if ((Bool.infix_124_124({}, Int.infix_62({}, ((function () { throw '!unclarifiedGeneric:T'; })()).prototype.bitWidth$get.call(source), _this.constructor.bitWidth), function () { return Bool.infix_38_38({}, Int.infix_61_61({}, ((function () { throw '!unclarifiedGeneric:T'; })()).prototype.bitWidth$get.call(source), _this.constructor.bitWidth), function () { return Bool.prefix_33({}, ((function () { throw '!unclarifiedGeneric:T'; })()).isSigned); }); }))) {
            preconditionFileLine({}, function () { return ((function () { throw '!unclarifiedGeneric:T'; })()).infix_60_61({}, source, _this.constructor.max); }, function () { return "Not enough bits to represent the passed value"; }, '?3', '?3');
        }
        ;
        _this.initTruncatingIfNeeded({}, source);
        return;
    };
    /*Swift.(file).SignedInteger.init(exactly:T)*/
    /*Swift.(file).SignedInteger.init(exactly:T)*/
    SignedInteger$implementation.prototype.initExactly = function ($info, source) {
        var _this = this;
        if ((Bool.infix_38_38({}, Bool.infix_38_38({}, ((function () { throw '!unclarifiedGeneric:T'; })()).isSigned, function () { return Int.infix_62({}, ((function () { throw '!unclarifiedGeneric:T'; })()).prototype.bitWidth$get.call(source), _this.constructor.bitWidth); }), function () { return ((function () { throw '!unclarifiedGeneric:T'; })()).infix_60({}, source, _this.constructor.min); }))) {
            return (this.$failed = true);
        }
        ;
        if ((Bool.infix_38_38({}, Bool.infix_124_124({}, Int.infix_62({}, ((function () { throw '!unclarifiedGeneric:T'; })()).prototype.bitWidth$get.call(source), _this.constructor.bitWidth), function () { return Bool.infix_38_38({}, Int.infix_61_61({}, ((function () { throw '!unclarifiedGeneric:T'; })()).prototype.bitWidth$get.call(source), _this.constructor.bitWidth), function () { return Bool.prefix_33({}, ((function () { throw '!unclarifiedGeneric:T'; })()).isSigned); }); }), function () { return ((function () { throw '!unclarifiedGeneric:T'; })()).infix_62({}, source, _this.constructor.max); }))) {
            return (this.$failed = true);
        }
        ;
        _this.initTruncatingIfNeeded({}, source);
        return;
    };
    /*Swift.(file).SignedInteger.max*/
    SignedInteger$implementation.max$get = function () {
        var _this = this;
        return _this.prefix_126({}, _this.min);
    };
    Object.defineProperty(SignedInteger$implementation, "max", {
        get: function () {
            return this.max$get();
        },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).SignedInteger.min*/
    SignedInteger$implementation.min$get = function () {
        var _this = this;
        return _this.infix_38_60_60({}, _create(_this, 'initIntegerLiteral', {}, -1), _this._highBitIndex);
    };
    Object.defineProperty(SignedInteger$implementation, "min", {
        get: function () {
            return this.min$get();
        },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).SignedInteger.isMultiple(of:Self)*/
    /*Swift.(file).SignedInteger.isMultiple(of:Self)*/
    SignedInteger$implementation.prototype.isMultipleOf = function ($info, other) {
        var _this = this;
        if ((_this.constructor.infix_61_61({}, other, 0))) {
            return _this.constructor.infix_61_61({}, _this, 0);
        }
        ;
        if ((_this.constructor.infix_61_61({}, other, -1))) {
            return true;
        }
        ;
        return _this.constructor.infix_61_61({}, _this.constructor.infix_37({}, _this, other), 0);
    };
    /*Swift.(file).SignedInteger.&+infix(_:Self,_:Self)*/
    /*Swift.(file).SignedInteger.&+infix(_:Self,_:Self)*/
    SignedInteger$implementation.infix_38_43 = function ($info, lhs, rhs) {
        return lhs + rhs;
    };
    /*Swift.(file).SignedInteger.&-infix(_:Self,_:Self)*/
    /*Swift.(file).SignedInteger.&-infix(_:Self,_:Self)*/
    SignedInteger$implementation.infix_38_45 = function ($info, lhs, rhs) {
        return lhs - rhs;
    };
    /*Swift.(file).SignedInteger.&+infix(_:Self,_:Self)*/
    /*Swift.(file).SignedInteger.&+infix(_:Self,_:Self)*/
    SignedInteger$implementation.infix_38_43 = function ($info, lhs, rhs) {
        return lhs + rhs;
    };
    /*Swift.(file).SignedInteger.&-infix(_:Self,_:Self)*/
    /*Swift.(file).SignedInteger.&-infix(_:Self,_:Self)*/
    SignedInteger$implementation.infix_38_45 = function ($info, lhs, rhs) {
        return lhs - rhs;
    };
    SignedInteger$implementation.initExactly$failable = true;
    return SignedInteger$implementation;
}());
if (typeof BinaryInteger$implementation != 'undefined')
    _mixin(SignedInteger$implementation, BinaryInteger$implementation, false);
if (typeof SignedNumeric$implementation != 'undefined')
    _mixin(SignedInteger$implementation, SignedNumeric$implementation, false);
var LazyCollectionProtocol$implementation = /** @class */ (function () {
    function LazyCollectionProtocol$implementation() {
    }
    /*Swift.(file).LazyCollectionProtocol.lazy*/
    LazyCollectionProtocol$implementation.prototype.lazy$get = function () {
        var _this = this;
        return _this._elements.lazy;
    };
    Object.defineProperty(LazyCollectionProtocol$implementation.prototype, "lazy", {
        get: function () { return this.lazy$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).LazyCollectionProtocol.lazy*/
    LazyCollectionProtocol$implementation.prototype.lazy$get = function () {
        var _this = this;
        return _this._elements.lazy;
    };
    ;
    return LazyCollectionProtocol$implementation;
}());
if (typeof Collection$implementation != 'undefined')
    _mixin(LazyCollectionProtocol$implementation, Collection$implementation, false);
if (typeof LazySequenceProtocol$implementation != 'undefined')
    _mixin(LazyCollectionProtocol$implementation, LazySequenceProtocol$implementation, false);
var _Pointer$implementation = /** @class */ (function () {
    function _Pointer$implementation() {
    }
    /*Swift.(file)._Pointer.init(_:OpaquePointer)*/
    /*Swift.(file)._Pointer.init(_:OpaquePointer)*/
    _Pointer$implementation.prototype.initOpaquePointer = function ($info, from) {
        var _this = this;
        _this.initRawPointer({}, from._rawValue);
        return;
    };
    /*Swift.(file)._Pointer.init(_:OpaquePointer?)*/
    /*Swift.(file)._Pointer.init(_:OpaquePointer?)*/
    _Pointer$implementation.prototype.initOptional = function ($info, from) {
        var _this = this;
        var $ifLet0, unwrapped_1;
        if (!((($ifLet0 = from) || true) && $ifLet0 != null && ((unwrapped_1 = $ifLet0) || true))) {
            return (this.$failed = true);
        }
        ;
        _this.initOpaquePointer({}, unwrapped_1);
        return;
    };
    /*Swift.(file)._Pointer.init(bitPattern:Int)*/
    /*Swift.(file)._Pointer.init(bitPattern:Int)*/
    _Pointer$implementation.prototype.initBitPatternInt = function ($info, bitPattern) {
        throw 'unsupported method Swift.(file)._Pointer.init(bitPattern:Int) in ' + this.constructor.name;
    };
    /*Swift.(file)._Pointer.init(bitPattern:UInt)*/
    /*Swift.(file)._Pointer.init(bitPattern:UInt)*/
    _Pointer$implementation.prototype.initBitPatternUInt = function ($info, bitPattern) {
        throw 'unsupported method Swift.(file)._Pointer.init(bitPattern:UInt) in ' + this.constructor.name;
    };
    /*Swift.(file)._Pointer.init(_:Self)*/
    /*Swift.(file)._Pointer.init(_:Self)*/
    _Pointer$implementation.prototype.init = function ($info, other) {
        var _this = this;
        _this.initRawPointer({}, other._rawValue);
        return;
    };
    /*Swift.(file)._Pointer.init(_:Self?)*/
    /*Swift.(file)._Pointer.init(_:Self?)*/
    _Pointer$implementation.prototype.initOptional = function ($info, other) {
        var _this = this;
        var $ifLet0, unwrapped_1;
        if (!((($ifLet0 = other) || true) && $ifLet0 != null && ((unwrapped_1 = $ifLet0) || true))) {
            return (this.$failed = true);
        }
        ;
        _this.initRawPointer({}, unwrapped_1._rawValue);
        return;
    };
    /*Swift.(file)._Pointer.init(_:UnsafeMutablePointer<T>)*/
    /*Swift.(file)._Pointer.init(_:UnsafeMutablePointer<T>)*/
    _Pointer$implementation.prototype.initUnsafeMutablePointer = function ($info, other) {
        var _this = this;
        _this.initRawPointer({}, other._rawValue);
        return;
    };
    /*Swift.(file)._Pointer.init(_:UnsafeMutablePointer<T>?)*/
    /*Swift.(file)._Pointer.init(_:UnsafeMutablePointer<T>?)*/
    _Pointer$implementation.prototype.initOptional = function ($info, other) {
        var _this = this;
        var $ifLet0, unwrapped_1;
        if (!((($ifLet0 = other) || true) && $ifLet0 != null && ((unwrapped_1 = $ifLet0) || true))) {
            return (this.$failed = true);
        }
        ;
        _this.initUnsafeMutablePointer({}, unwrapped_1);
        return;
    };
    /*Swift.(file)._Pointer.==infix(_:Self,_:Self)*/
    /*Swift.(file)._Pointer.==infix(_:Self,_:Self)*/
    _Pointer$implementation.infix_61_61 = function ($info, lhs, rhs) {
        return lhs == rhs;
    };
    /*Swift.(file)._Pointer.<infix(_:Self,_:Self)*/
    /*Swift.(file)._Pointer.<infix(_:Self,_:Self)*/
    _Pointer$implementation.infix_60 = function ($info, lhs, rhs) {
        return lhs < rhs;
    };
    /*Swift.(file)._Pointer.successor()*/
    /*Swift.(file)._Pointer.successor()*/
    _Pointer$implementation.prototype.successor = function ($info) {
        var _this = this;
        return _this.advancedBy({}, 1);
    };
    /*Swift.(file)._Pointer.predecessor()*/
    /*Swift.(file)._Pointer.predecessor()*/
    _Pointer$implementation.prototype.predecessor = function ($info) {
        var _this = this;
        return _this.advancedBy({}, -1);
    };
    /*Swift.(file)._Pointer.distance(to:Self)*/
    /*Swift.(file)._Pointer.distance(to:Self)*/
    _Pointer$implementation.prototype.distanceTo = function ($info, end) {
        throw 'unsupported method Swift.(file)._Pointer.distance(to:Self) in ' + this.constructor.name;
    };
    /*Swift.(file)._Pointer.advanced(by:Int)*/
    /*Swift.(file)._Pointer.advanced(by:Int)*/
    _Pointer$implementation.prototype.advancedBy = function ($info, n) {
        throw 'unsupported method Swift.(file)._Pointer.advanced(by:Int) in ' + this.constructor.name;
    };
    /*Swift.(file)._Pointer.hash(into:Hasher)*/
    /*Swift.(file)._Pointer.hash(into:Hasher)*/
    _Pointer$implementation.prototype.hashInto = function ($info, hasher$inout) {
        var _this = this;
        var hasher = hasher$inout.get();
        var $result = (function () {
            hasher.combine({ $setThis: function ($val) { return hasher = $val; } }, _create(UInt, 'initBitPatternOptional', {}, _this));
        })();
        hasher$inout.set(hasher);
        return $result;
    };
    /*Swift.(file)._Pointer.debugDescription*/
    _Pointer$implementation.prototype.debugDescription$get = function () {
        var _this = this;
        return _rawPointerToString({}, _this._rawValue);
    };
    Object.defineProperty(_Pointer$implementation.prototype, "debugDescription", {
        get: function () { return this.debugDescription$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file)._Pointer.customMirror*/
    _Pointer$implementation.prototype.customMirror$get = function () {
        throw 'unsupported variable Swift.(file)._Pointer.customMirror in ' + this.constructor.name;
    };
    Object.defineProperty(_Pointer$implementation.prototype, "customMirror", {
        get: function () { return this.customMirror$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    _Pointer$implementation.initOptional$failable = true;
    _Pointer$implementation.initBitPatternInt$failable = true;
    _Pointer$implementation.initBitPatternUInt$failable = true;
    _Pointer$implementation.initOptional$failable = true;
    _Pointer$implementation.initOptional$failable = true;
    return _Pointer$implementation;
}());
if (typeof Hashable$implementation != 'undefined')
    _mixin(_Pointer$implementation, Hashable$implementation, false);
if (typeof Strideable$implementation != 'undefined')
    _mixin(_Pointer$implementation, Strideable$implementation, false);
if (typeof CustomDebugStringConvertible$implementation != 'undefined')
    _mixin(_Pointer$implementation, CustomDebugStringConvertible$implementation, false);
if (typeof CustomReflectable$implementation != 'undefined')
    _mixin(_Pointer$implementation, CustomReflectable$implementation, false);
var LazyPrefixWhileSequence = /** @class */ (function () {
    function LazyPrefixWhileSequence() {
    }
    /*Swift.(file).LazyPrefixWhileSequence.init(_base:Base,predicate:(LazyPrefixWhileSequence<Base>.Element) -> Bool)*/
    /*Swift.(file).LazyPrefixWhileSequence.init(_base:Base,predicate:(LazyPrefixWhileSequence<Base>.Element) -> Bool)*/
    LazyPrefixWhileSequence.prototype.init_basePredicatefunction_type = function ($info, _base, predicate) {
        throw 'unsupported method Swift.(file).LazyPrefixWhileSequence.init(_base:Base,predicate:(LazyPrefixWhileSequence<Base>.Element) -> Bool) in ' + this.constructor.name;
    };
    /*Swift.(file).LazyPrefixWhileSequence.makeIterator()*/
    /*Swift.(file).Sequence.makeIterator()*/
    /*Swift.(file).Collection.makeIterator()*/
    LazyPrefixWhileSequence.prototype.makeIterator = function ($info) {
        var _this = this;
        return _create(LazyPrefixWhileSequence.Iterator, 'init_basePredicatefunction_type', {}, _this._base.makeIterator({}), _this._predicate);
    };
    /*Swift.(file).LazyPrefixWhileSequence.startIndex*/
    LazyPrefixWhileSequence.prototype.startIndex$get = function () {
        throw 'unsupported variable Swift.(file).LazyPrefixWhileSequence.startIndex in ' + this.constructor.name;
    };
    Object.defineProperty(LazyPrefixWhileSequence.prototype, "startIndex", {
        get: function () { return this.startIndex$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).LazyPrefixWhileSequence.endIndex*/
    LazyPrefixWhileSequence.prototype.endIndex$get = function () {
        throw 'unsupported variable Swift.(file).LazyPrefixWhileSequence.endIndex in ' + this.constructor.name;
    };
    Object.defineProperty(LazyPrefixWhileSequence.prototype, "endIndex", {
        get: function () { return this.endIndex$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).LazyPrefixWhileSequence.index(after:LazyPrefixWhileSequence<Base>.Index)*/
    /*Swift.(file).Collection.index(after:Self.Index)*/
    /*Swift.(file).BidirectionalCollection.index(after:Self.Index)*/
    LazyPrefixWhileSequence.prototype.indexAfter = function ($info, i) {
        throw 'unsupported method Swift.(file).LazyPrefixWhileSequence.index(after:LazyPrefixWhileSequence<Base>.Index) in ' + this.constructor.name;
    };
    /*Swift.(file).LazyPrefixWhileSequence.subscript(_:LazyPrefixWhileSequence<Base>.Index)*/
    /*Swift.(file).Collection.subscript(_:Self.Index)*/
    /*Swift.(file).BidirectionalCollection.subscript(_:Self.Index)*/
    LazyPrefixWhileSequence.prototype.subscript$get = function ($info, position) {
        throw 'unsupported method Swift.(file).LazyPrefixWhileSequence.subscript(_:LazyPrefixWhileSequence<Base>.Index) in ' + this.constructor.name;
    };
    /*Swift.(file).LazyPrefixWhileSequence.index(before:LazyPrefixWhileSequence<Base>.Index)*/
    /*Swift.(file).BidirectionalCollection.index(before:Self.Index)*/
    LazyPrefixWhileSequence.prototype.indexBefore = function ($info, i) {
        throw 'unsupported method Swift.(file).LazyPrefixWhileSequence.index(before:LazyPrefixWhileSequence<Base>.Index) in ' + this.constructor.name;
    };
    LazyPrefixWhileSequence.prototype.init$vars = function () {
    };
    var _47, _48, _49;
    LazyPrefixWhileSequence.$struct = true;
    LazyPrefixWhileSequence.$infoAddress = '';
    LazyPrefixWhileSequence.Iterator = (_47 = /** @class */ (function () {
            function class_71() {
            }
            /*Swift.(file).LazyPrefixWhileSequence.Iterator.init(_base:Base.Iterator,predicate:(LazyPrefixWhileSequence<Base>.Iterator.Element) -> Bool)*/
            /*Swift.(file).LazyPrefixWhileSequence.Iterator.init(_base:Base.Iterator,predicate:(LazyPrefixWhileSequence<Base>.Iterator.Element) -> Bool)*/
            class_71.prototype.init_basePredicatefunction_type = function ($info, _base, predicate) {
                throw 'unsupported method Swift.(file).LazyPrefixWhileSequence.Iterator.init(_base:Base.Iterator,predicate:(LazyPrefixWhileSequence<Base>.Iterator.Element) -> Bool) in ' + this.constructor.name;
            };
            /*Swift.(file).LazyPrefixWhileSequence.Iterator.next()*/
            /*Swift.(file).IteratorProtocol.next()*/
            class_71.prototype.next = function ($info) {
                var _this = this;
                var $ifLet0, nextElement_1;
                if ((Bool.prefix_33({}, _this._predicateHasFailed)) && (($ifLet0 = _this._base.next({ $setThis: function ($val) { return _this._base = $val; } })) || true) && $ifLet0 != null && ((nextElement_1 = $ifLet0) || true)) {
                    if ((_this._predicate({}, nextElement_1))) {
                        return nextElement_1;
                    }
                    else {
                        _this._predicateHasFailed = true;
                    }
                    ;
                }
                ;
                return null;
            };
            class_71.prototype.init$vars = function () {
            };
            return class_71;
        }()),
        _47.$struct = true,
        _47.$infoAddress = '',
        _47);
    LazyPrefixWhileSequence._IndexRepresentation = (_48 = /** @class */ (function () {
            function class_72() {
            }
            class_72.index = function () { return Object.assign(new LazyPrefixWhileSequence._IndexRepresentation(), __assign({ rawValue: "index" }, Array.from(arguments).slice(1))); };
            Object.defineProperty(class_72, "pastEnd", {
                get: function () { return Object.assign(new LazyPrefixWhileSequence._IndexRepresentation(), __assign({ rawValue: "pastEnd" }, Array.from(arguments).slice(1))); },
                enumerable: true,
                configurable: true
            });
            class_72.prototype.init$vars = function () {
            };
            return class_72;
        }()),
        _48.$infoAddress = '',
        _48);
    LazyPrefixWhileSequence.Index = (_49 = /** @class */ (function () {
            function class_73() {
            }
            /*Swift.(file).LazyPrefixWhileSequence.Index.init(_:Base.Index)*/
            /*Swift.(file).LazyPrefixWhileSequence.Index.init(_:Base.Index)*/
            class_73.prototype.init = function ($info, i) {
                throw 'unsupported method Swift.(file).LazyPrefixWhileSequence.Index.init(_:Base.Index) in ' + this.constructor.name;
            };
            /*Swift.(file).LazyPrefixWhileSequence.Index.init(endOf:Base)*/
            /*Swift.(file).LazyPrefixWhileSequence.Index.init(endOf:Base)*/
            class_73.prototype.initEndOf = function ($info, endOf) {
                throw 'unsupported method Swift.(file).LazyPrefixWhileSequence.Index.init(endOf:Base) in ' + this.constructor.name;
            };
            /*Swift.(file).LazyPrefixWhileSequence.Index.==infix(_:LazyPrefixWhileCollection<Base>.Index,_:LazyPrefixWhileCollection<Base>.Index)*/
            /*Swift.(file).Equatable.==infix(_:Self,_:Self)*/
            class_73.infix_61_61 = function ($info, lhs, rhs) {
                var _this = this;
                var $match = { 0: lhs._value, 1: rhs._value };
                if ((($match[0].rawValue == LazyPrefixWhileSequence._IndexRepresentation.index().rawValue && $match[1].rawValue == LazyPrefixWhileSequence._IndexRepresentation.index().rawValue))) {
                    var l = $match[0][0];
                    var r = $match[1][0];
                    return ((function () { throw '!unclarifiedGeneric:Base.Index'; })()).infix_61_61({}, l, r);
                }
                else if ((($match[0].rawValue == LazyPrefixWhileSequence._IndexRepresentation.pastEnd.rawValue && $match[1].rawValue == LazyPrefixWhileSequence._IndexRepresentation.pastEnd.rawValue))) {
                    return true;
                }
                else if ((($match[0].rawValue == LazyPrefixWhileSequence._IndexRepresentation.pastEnd.rawValue && $match[1].rawValue == LazyPrefixWhileSequence._IndexRepresentation.index().rawValue) || ($match[0].rawValue == LazyPrefixWhileSequence._IndexRepresentation.index().rawValue && $match[1].rawValue == LazyPrefixWhileSequence._IndexRepresentation.pastEnd.rawValue))) {
                    return false;
                }
            };
            /*Swift.(file).LazyPrefixWhileSequence.Index.<infix(_:LazyPrefixWhileCollection<Base>.Index,_:LazyPrefixWhileCollection<Base>.Index)*/
            /*Swift.(file).Comparable.<infix(_:Self,_:Self)*/
            class_73.infix_60 = function ($info, lhs, rhs) {
                var _this = this;
                var $match = { 0: lhs._value, 1: rhs._value };
                if ((($match[0].rawValue == LazyPrefixWhileSequence._IndexRepresentation.index().rawValue && $match[1].rawValue == LazyPrefixWhileSequence._IndexRepresentation.index().rawValue))) {
                    var l = $match[0][0];
                    var r = $match[1][0];
                    return ((function () { throw '!unclarifiedGeneric:Base.Index'; })()).infix_60({}, l, r);
                }
                else if ((($match[0].rawValue == LazyPrefixWhileSequence._IndexRepresentation.index().rawValue && $match[1].rawValue == LazyPrefixWhileSequence._IndexRepresentation.pastEnd.rawValue))) {
                    return true;
                }
                else if ((($match[0].rawValue == LazyPrefixWhileSequence._IndexRepresentation.pastEnd.rawValue))) {
                    return false;
                }
            };
            /*Swift.(file).LazyPrefixWhileSequence.Index.hash(into:Hasher)*/
            /*Swift.(file).Hashable.hash(into:Hasher)*/
            class_73.prototype.hashInto = function ($info, hasher$inout) {
                var _this = this;
                var hasher = hasher$inout.get();
                var $result = (function () {
                    var $match = _this._value;
                    if ((($match.rawValue == LazyPrefixWhileSequence._IndexRepresentation.index().rawValue))) {
                        var value = $match[0];
                        hasher.combine({ $setThis: function ($val) { return hasher = $val; } }, value);
                    }
                    else if ((($match.rawValue == LazyPrefixWhileSequence._IndexRepresentation.pastEnd.rawValue))) {
                        hasher.combine({ $setThis: function ($val) { return hasher = $val; } }, Int.max);
                    }
                    ;
                })();
                hasher$inout.set(hasher);
                return $result;
            };
            /*Swift.(file).LazyPrefixWhileSequence.Index.hashValue*/
            class_73.prototype.hashValue$get = function () {
                throw 'unsupported variable Swift.(file).LazyPrefixWhileSequence.Index.hashValue in ' + this.constructor.name;
            };
            Object.defineProperty(class_73.prototype, "hashValue", {
                get: function () { return this.hashValue$get(); },
                enumerable: true,
                configurable: true
            });
            ;
            class_73.prototype.init$vars = function () {
            };
            return class_73;
        }()),
        _49.$struct = true,
        _49.$infoAddress = '',
        _49);
    return LazyPrefixWhileSequence;
}());
if (typeof IteratorProtocol$implementation != 'undefined')
    _mixin(LazyPrefixWhileSequence.Iterator, IteratorProtocol$implementation, false);
if (typeof Sequence$implementation != 'undefined')
    _mixin(LazyPrefixWhileSequence.Iterator, Sequence$implementation, false);
_mixin(LazyPrefixWhileSequence._IndexRepresentation, _DefaultEnumImplementation, false);
if (typeof Comparable$implementation != 'undefined')
    _mixin(LazyPrefixWhileSequence.Index, Comparable$implementation, false);
if (typeof Hashable$implementation != 'undefined')
    _mixin(LazyPrefixWhileSequence.Index, Hashable$implementation, false);
if (typeof Sequence$implementation != 'undefined')
    _mixin(LazyPrefixWhileSequence, Sequence$implementation, false);
if (typeof LazySequenceProtocol$implementation != 'undefined')
    _mixin(LazyPrefixWhileSequence, LazySequenceProtocol$implementation, false);
if (typeof Collection$implementation != 'undefined')
    _mixin(LazyPrefixWhileSequence, Collection$implementation, false);
if (typeof LazyCollectionProtocol$implementation != 'undefined')
    _mixin(LazyPrefixWhileSequence, LazyCollectionProtocol$implementation, false);
if (typeof BidirectionalCollection$implementation != 'undefined')
    _mixin(LazyPrefixWhileSequence, BidirectionalCollection$implementation, false);
var RandomAccessCollection$implementation = /** @class */ (function () {
    function RandomAccessCollection$implementation() {
    }
    /*Swift.(file).RandomAccessCollection.index(_:Self.Index,offsetBy:Int,limitedBy:Self.Index)*/
    /*Swift.(file).RandomAccessCollection.index(_:Self.Index,offsetBy:Int,limitedBy:Self.Index)*/
    RandomAccessCollection$implementation.prototype.indexOffsetByLimitedBy = function ($info, i, distance, limit) {
        var _this = this;
        var l = _this.distanceFromTo({}, i, limit);
        if (((Int.infix_62({}, distance, 0) ? Bool.infix_38_38({}, Int.infix_62_61({}, l, 0), function () { return Int.infix_60({}, l, distance); }) : Bool.infix_38_38({}, Int.infix_60_61({}, l, 0), function () { return Int.infix_60({}, distance, l); })))) {
            return null;
        }
        ;
        return _this.indexOffsetBy({}, i, distance);
    };
    /*Swift.(file).RandomAccessCollection.indices*/
    RandomAccessCollection$implementation.prototype.indices$get = function () {
        var _this = this;
        return (_.arg0 = _this.startIndex).constructor.infix_46_46_60({}, _.arg0, _this.endIndex);
    };
    Object.defineProperty(RandomAccessCollection$implementation.prototype, "indices", {
        get: function () { return this.indices$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).RandomAccessCollection.index(after:Self.Index)*/
    /*Swift.(file).RandomAccessCollection.index(after:Self.Index)*/
    RandomAccessCollection$implementation.prototype.indexAfter = function ($info, i) {
        throw 'unsupported method Swift.(file).RandomAccessCollection.index(after:Self.Index) in ' + this.constructor.name;
    };
    /*Swift.(file).RandomAccessCollection.index(before:Self.Index)*/
    /*Swift.(file).RandomAccessCollection.index(before:Self.Index)*/
    RandomAccessCollection$implementation.prototype.indexBefore = function ($info, i) {
        throw 'unsupported method Swift.(file).RandomAccessCollection.index(before:Self.Index) in ' + this.constructor.name;
    };
    /*Swift.(file).RandomAccessCollection.index(_:Self.Index,offsetBy:Self.Index.Stride)*/
    /*Swift.(file).RandomAccessCollection.index(_:Self.Index,offsetBy:Self.Index.Stride)*/
    RandomAccessCollection$implementation.prototype.indexOffsetBy = function ($info, i, distance) {
        throw 'unsupported method Swift.(file).RandomAccessCollection.index(_:Self.Index,offsetBy:Self.Index.Stride) in ' + this.constructor.name;
    };
    /*Swift.(file).RandomAccessCollection.distance(from:Self.Index,to:Self.Index)*/
    /*Swift.(file).RandomAccessCollection.distance(from:Self.Index,to:Self.Index)*/
    RandomAccessCollection$implementation.prototype.distanceFromTo = function ($info, start, end) {
        throw 'unsupported method Swift.(file).RandomAccessCollection.distance(from:Self.Index,to:Self.Index) in ' + this.constructor.name;
    };
    return RandomAccessCollection$implementation;
}());
if (typeof BidirectionalCollection$implementation != 'undefined')
    _mixin(RandomAccessCollection$implementation, BidirectionalCollection$implementation, false);
var Range = /** @class */ (function () {
    function Range() {
    }
    /*Swift.(file).Range.lowerBound*/
    Range.prototype.lowerBound$get = function () {
        return this.lowerBound$internal;
    };
    Object.defineProperty(Range.prototype, "lowerBound", {
        get: function () { return this.lowerBound$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).Range.upperBound*/
    Range.prototype.upperBound$get = function () {
        return this.upperBound$internal;
    };
    Object.defineProperty(Range.prototype, "upperBound", {
        get: function () { return this.upperBound$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).Range.init(uncheckedBounds:(lower: Bound, upper: Bound))*/
    /*Swift.(file).Range.init(uncheckedBounds:(lower: Bound, upper: Bound))*/
    Range.prototype.initUncheckedBoundstuple_type = function ($info, bounds) {
        this.lowerBound$internal = bounds[0];
        this.upperBound$internal = bounds[1];
    };
    /*Swift.(file).Range.contains(_:Bound)*/
    /*Swift.(file).RangeExpression.contains(_:Self.Bound)*/
    Range.prototype.contains = function ($info, _element) {
        var _this = this;
        return Bool.infix_38_38({}, (_.arg0 = _this.lowerBound).constructor.infix_60_61({}, _.arg0, _element), function () { return (_.arg1 = _element).constructor.infix_60({}, _.arg1, _this.upperBound); });
    };
    /*Swift.(file).Range.isEmpty*/
    Range.prototype.isEmpty$get = function () {
        var _this = this;
        return (_.arg0 = _this.lowerBound).constructor.infix_61_61({}, _.arg0, _this.upperBound);
    };
    Object.defineProperty(Range.prototype, "isEmpty", {
        get: function () { return this.isEmpty$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).Range.startIndex*/
    Range.prototype.startIndex$get = function () {
        var _this = this;
        return _this.lowerBound;
    };
    Object.defineProperty(Range.prototype, "startIndex", {
        get: function () { return this.startIndex$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).Range.endIndex*/
    Range.prototype.endIndex$get = function () {
        var _this = this;
        return _this.upperBound;
    };
    Object.defineProperty(Range.prototype, "endIndex", {
        get: function () { return this.endIndex$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).Range.index(after:Range<Bound>.Index)*/
    /*Swift.(file).RandomAccessCollection.index(after:Self.Index)*/
    /*Swift.(file).Collection.index(after:Self.Index)*/
    /*Swift.(file).BidirectionalCollection.index(after:Self.Index)*/
    Range.prototype.indexAfter = function ($info, i) {
        var _this = this;
        return i.advancedBy({}, _create(Int, 'initIntegerLiteral', {}, 1));
    };
    /*Swift.(file).Range.index(before:Range<Bound>.Index)*/
    /*Swift.(file).RandomAccessCollection.index(before:Self.Index)*/
    /*Swift.(file).BidirectionalCollection.index(before:Self.Index)*/
    Range.prototype.indexBefore = function ($info, i) {
        var _this = this;
        preconditionFileLine({}, function () { return (_.arg0 = i).constructor.infix_62({}, _.arg0, _this.lowerBound); }, function () { return String(); } /*!default_value*/, '?3', '?3');
        preconditionFileLine({}, function () { return (_.arg1 = i).constructor.infix_60_61({}, _.arg1, _this.upperBound); }, function () { return String(); } /*!default_value*/, '?3', '?3');
        return i.advancedBy({}, _create(Int, 'initIntegerLiteral', {}, -1));
    };
    /*Swift.(file).Range.index(_:Range<Bound>.Index,offsetBy:Int)*/
    /*Swift.(file).RandomAccessCollection.index(_:Self.Index,offsetBy:Int)*/
    /*Swift.(file).Collection.index(_:Self.Index,offsetBy:Int)*/
    /*Swift.(file).BidirectionalCollection.index(_:Self.Index,offsetBy:Int)*/
    Range.prototype.indexOffsetBy = function ($info, i, n) {
        var _this = this;
        var r = i.advancedBy({}, numericCast({ T: Int, U: ((function () { throw '!unclarifiedGeneric:Bound.Stride'; })()) }, n));
        preconditionFileLine({}, function () { return (_.arg0 = r).constructor.infix_62_61({}, _.arg0, _this.lowerBound); }, function () { return String(); } /*!default_value*/, '?3', '?3');
        preconditionFileLine({}, function () { return (_.arg1 = r).constructor.infix_60_61({}, _.arg1, _this.upperBound); }, function () { return String(); } /*!default_value*/, '?3', '?3');
        return r;
    };
    /*Swift.(file).Range.distance(from:Range<Bound>.Index,to:Range<Bound>.Index)*/
    /*Swift.(file).RandomAccessCollection.distance(from:Self.Index,to:Self.Index)*/
    /*Swift.(file).Collection.distance(from:Self.Index,to:Self.Index)*/
    /*Swift.(file).BidirectionalCollection.distance(from:Self.Index,to:Self.Index)*/
    Range.prototype.distanceFromTo = function ($info, start, end) {
        var _this = this;
        return numericCast({ T: ((function () { throw '!unclarifiedGeneric:Bound.Stride'; })()), U: Int }, start.distanceTo({}, end));
    };
    /*Swift.(file).Range.subscript(_:Range<Range<Bound>.Index>)*/
    /*Swift.(file).RandomAccessCollection.subscript(_:Range<Self.Index>)*/
    /*Swift.(file).Collection.subscript(_:Range<Self.Index>)*/
    /*Swift.(file).BidirectionalCollection.subscript(_:Range<Self.Index>)*/
    Range.prototype.subscriptRange$get = function ($info, bounds) {
        var _this = this;
        return bounds;
    };
    /*Swift.(file).Range.indices*/
    Range.prototype.indices$get = function () {
        var _this = this;
        return _this;
    };
    Object.defineProperty(Range.prototype, "indices", {
        get: function () { return this.indices$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).Range.subscript(_:Range<Bound>.Index)*/
    /*Swift.(file).RandomAccessCollection.subscript(_:Self.Index)*/
    /*Swift.(file).Collection.subscript(_:Self.Index)*/
    /*Swift.(file).BidirectionalCollection.subscript(_:Self.Index)*/
    Range.prototype.subscript$get = function ($info, position) {
        var _this = this;
        preconditionFileLine({}, function () { return _this.contains({}, position); }, function () { return "Index out of range"; }, '?3', '?3');
        return position;
    };
    /*Swift.(file).Range.init(_:ClosedRange<Bound>)*/
    /*Swift.(file).Range.init(_:ClosedRange<Bound>)*/
    Range.prototype.initClosedRange = function ($info, other) {
        var _this = this;
        var upperBound = other.upperBound.advancedBy({}, _create(Int, 'initIntegerLiteral', {}, 1));
        _this.initUncheckedBoundstuple_type({}, { 0: other.lowerBound, 1: upperBound });
        return;
    };
    /*Swift.(file).Range.relative(to:C)*/
    /*Swift.(file).RangeExpression.relative(to:C)*/
    Range.prototype.relativeTo = function ($info, collection) {
        var _this = this;
        return _create(Range, 'initUncheckedBoundstuple_type', {}, { 0: _this.lowerBound, 1: _this.upperBound });
    };
    /*Swift.(file).Range.clamped(to:Range<Bound>)*/
    /*Swift.(file).Range.clamped(to:Range<Bound>)*/
    Range.prototype.clampedTo = function ($info, limits) {
        var _this = this;
        var lower = ((_.arg0 = limits.lowerBound).constructor.infix_62({}, _.arg0, _this.lowerBound) ? limits.lowerBound : ((_.arg1 = limits.upperBound).constructor.infix_60({}, _.arg1, _this.lowerBound) ? limits.upperBound : _this.lowerBound));
        var upper = ((_.arg2 = limits.upperBound).constructor.infix_60({}, _.arg2, _this.upperBound) ? limits.upperBound : ((_.arg3 = limits.lowerBound).constructor.infix_62({}, _.arg3, _this.upperBound) ? limits.lowerBound : _this.upperBound));
        return _create(Range, 'initUncheckedBoundstuple_type', {}, { 0: lower, 1: upper });
    };
    /*Swift.(file).Range.description*/
    Range.prototype.description$get = function () {
        var _this = this;
        return (("") + (_this.lowerBound) + ("..<") + (_this.upperBound) + (""));
    };
    Object.defineProperty(Range.prototype, "description", {
        get: function () { return this.description$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).Range.debugDescription*/
    Range.prototype.debugDescription$get = function () {
        var _this = this;
        return String.infix_43({}, (("Range(") + (_create(String, 'initReflecting', {}, _this.lowerBound)) + ("")), (("..<") + (_create(String, 'initReflecting', {}, _this.upperBound)) + (")")));
    };
    Object.defineProperty(Range.prototype, "debugDescription", {
        get: function () { return this.debugDescription$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).Range.customMirror*/
    Range.prototype.customMirror$get = function () {
        var _this = this;
        return _create(Mirror, 'initChildrenKeyValuePairsDisplayStyleOptionalAncestorRepresentationMirrorAncestorRepresentation', {}, _this, new Map([["lowerBound", _this.lowerBound], ["upperBound", _this.upperBound]]), nil /*!default_value*/, generated /*!default_value*/);
    };
    Object.defineProperty(Range.prototype, "customMirror", {
        get: function () { return this.customMirror$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).Range.==infix(_:Range<Bound>,_:Range<Bound>)*/
    /*Swift.(file).Equatable.==infix(_:Self,_:Self)*/
    Range.infix_61_61 = function ($info, lhs, rhs) {
        var _this = this;
        return Bool.infix_38_38({}, (_.arg0 = lhs.lowerBound).constructor.infix_61_61({}, _.arg0, rhs.lowerBound), function () { return (_.arg1 = lhs.upperBound).constructor.infix_61_61({}, _.arg1, rhs.upperBound); });
    };
    /*Swift.(file).Range.hash(into:Hasher)*/
    /*Swift.(file).Hashable.hash(into:Hasher)*/
    Range.prototype.hashInto = function ($info, hasher$inout) {
        var _this = this;
        var hasher = hasher$inout.get();
        var $result = (function () {
            hasher.combine({ $setThis: function ($val) { return hasher = $val; } }, _this.lowerBound);
            hasher.combine({ $setThis: function ($val) { return hasher = $val; } }, _this.upperBound);
        })();
        hasher$inout.set(hasher);
        return $result;
    };
    /*Swift.(file).Range.hashValue*/
    Range.prototype.hashValue$get = function () {
        throw 'unsupported variable Swift.(file).Range.hashValue in ' + this.constructor.name;
    };
    Object.defineProperty(Range.prototype, "hashValue", {
        get: function () { return this.hashValue$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).Range.overlaps(_:Range<Bound>)*/
    /*Swift.(file).Range.overlaps(_:Range<Bound>)*/
    Range.prototype.overlaps = function ($info, other) {
        var _this = this;
        return Bool.infix_124_124({}, Bool.infix_38_38({}, Bool.prefix_33({}, other.isEmpty), function () { return _this.contains({}, other.lowerBound); }), function () { return Bool.infix_38_38({}, Bool.prefix_33({}, _this.isEmpty), function () { return other.contains({}, _this.lowerBound); }); });
    };
    /*Swift.(file).Range.overlaps(_:ClosedRange<Bound>)*/
    /*Swift.(file).Range.overlaps(_:ClosedRange<Bound>)*/
    Range.prototype.overlaps = function ($info, other) {
        var _this = this;
        return Bool.infix_124_124({}, _this.contains({}, other.lowerBound), function () { return Bool.infix_38_38({}, Bool.prefix_33({}, _this.isEmpty), function () { return other.contains({}, _this.lowerBound); }); });
    };
    /*Swift.(file).Range.init(_:Range<Bound>)*/
    /*Swift.(file).Range.init(_:Range<Bound>)*/
    Range.prototype.initRange = function ($info, other) {
        var _this = this;
        $info.$setThis(_this = _cloneStruct(_cloneStruct(other)));
        return;
    };
    Range.prototype.init$vars = function () {
    };
    Range.$struct = true;
    Range.$infoAddress = '';
    return Range;
}());
if (typeof Sequence$implementation != 'undefined')
    _mixin(Range, Sequence$implementation, false);
if (typeof Collection$implementation != 'undefined')
    _mixin(Range, Collection$implementation, false);
if (typeof BidirectionalCollection$implementation != 'undefined')
    _mixin(Range, BidirectionalCollection$implementation, false);
if (typeof RandomAccessCollection$implementation != 'undefined')
    _mixin(Range, RandomAccessCollection$implementation, false);
if (typeof RangeExpression$implementation != 'undefined')
    _mixin(Range, RangeExpression$implementation, false);
if (typeof CustomStringConvertible$implementation != 'undefined')
    _mixin(Range, CustomStringConvertible$implementation, false);
if (typeof CustomDebugStringConvertible$implementation != 'undefined')
    _mixin(Range, CustomDebugStringConvertible$implementation, false);
if (typeof CustomReflectable$implementation != 'undefined')
    _mixin(Range, CustomReflectable$implementation, false);
if (typeof Equatable$implementation != 'undefined')
    _mixin(Range, Equatable$implementation, false);
if (typeof Hashable$implementation != 'undefined')
    _mixin(Range, Hashable$implementation, false);
var Repeated = /** @class */ (function () {
    function Repeated() {
    }
    /*Swift.(file).Repeated.count*/
    Repeated.prototype.count$get = function () {
        var _this = this;
        return _this.distanceFromTo({}, _this.startIndex, _this.endIndex);
    };
    Object.defineProperty(Repeated.prototype, "count", {
        get: function () { return this.count$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).Repeated.repeatedValue*/
    Repeated.prototype.repeatedValue$get = function () {
        throw 'unsupported variable Swift.(file).Repeated.repeatedValue in ' + this.constructor.name;
    };
    Object.defineProperty(Repeated.prototype, "repeatedValue", {
        get: function () { return this.repeatedValue$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).Repeated.init(count:Int,repeatedValue:Element)*/
    /*Swift.(file).Repeated.init(count:Int,repeatedValue:Element)*/
    Repeated.prototype.initCountIntRepeatedValue = function ($info, count, repeatedValue) {
        throw 'unsupported method Swift.(file).Repeated.init(count:Int,repeatedValue:Element) in ' + this.constructor.name;
    };
    /*Swift.(file).Repeated.init(_repeating:Element,count:Int)*/
    /*Swift.(file).Repeated.init(_repeating:Element,count:Int)*/
    Repeated.prototype.init_repeatingCountInt = function ($info, repeatedValue, count) {
        throw 'unsupported method Swift.(file).Repeated.init(_repeating:Element,count:Int) in ' + this.constructor.name;
    };
    /*Swift.(file).Repeated.startIndex*/
    Repeated.prototype.startIndex$get = function () {
        var _this = this;
        return 0;
    };
    Object.defineProperty(Repeated.prototype, "startIndex", {
        get: function () { return this.startIndex$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).Repeated.endIndex*/
    Repeated.prototype.endIndex$get = function () {
        var _this = this;
        return _this.count;
    };
    Object.defineProperty(Repeated.prototype, "endIndex", {
        get: function () { return this.endIndex$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).Repeated.subscript(_:Int)*/
    /*Swift.(file).RandomAccessCollection.subscript(_:Self.Index)*/
    /*Swift.(file).BidirectionalCollection.subscript(_:Self.Index)*/
    /*Swift.(file).Collection.subscript(_:Self.Index)*/
    Repeated.prototype.subscript$get = function ($info, position) {
        var _this = this;
        preconditionFileLine({}, function () { return Bool.infix_38_38({}, Int.infix_62_61({}, position, 0), function () { return Int.infix_60({}, position, _this.count); }); }, function () { return "Index out of range"; }, '?3', '?3');
        return _this.repeatedValue;
    };
    Repeated.prototype.init$vars = function () {
    };
    Repeated.$struct = true;
    Repeated.$infoAddress = '';
    return Repeated;
}());
if (typeof RandomAccessCollection$implementation != 'undefined')
    _mixin(Repeated, RandomAccessCollection$implementation, false);
var ReversedCollection = /** @class */ (function () {
    function ReversedCollection() {
    }
    /*Swift.(file).ReversedCollection.init(_base:Base)*/
    /*Swift.(file).ReversedCollection.init(_base:Base)*/
    ReversedCollection.prototype.init_base = function ($info, _base) {
        throw 'unsupported method Swift.(file).ReversedCollection.init(_base:Base) in ' + this.constructor.name;
    };
    /*Swift.(file).ReversedCollection.makeIterator()*/
    /*Swift.(file).Sequence.makeIterator()*/
    /*Swift.(file).Collection.makeIterator()*/
    ReversedCollection.prototype.makeIterator = function ($info) {
        var _this = this;
        return _create(ReversedCollection.Iterator, 'init_base', {}, _this._base);
    };
    /*Swift.(file).ReversedCollection.startIndex*/
    ReversedCollection.prototype.startIndex$get = function () {
        var _this = this;
        return _create(ReversedCollection.Index, 'init', {}, _this._base.endIndex);
    };
    Object.defineProperty(ReversedCollection.prototype, "startIndex", {
        get: function () { return this.startIndex$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).ReversedCollection.endIndex*/
    ReversedCollection.prototype.endIndex$get = function () {
        var _this = this;
        return _create(ReversedCollection.Index, 'init', {}, _this._base.startIndex);
    };
    Object.defineProperty(ReversedCollection.prototype, "endIndex", {
        get: function () { return this.endIndex$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).ReversedCollection.index(after:ReversedCollection<Base>.Index)*/
    /*Swift.(file).BidirectionalCollection.index(after:Self.Index)*/
    /*Swift.(file).Collection.index(after:Self.Index)*/
    /*Swift.(file).RandomAccessCollection.index(after:Self.Index)*/
    ReversedCollection.prototype.indexAfter = function ($info, i) {
        var _this = this;
        return _create(ReversedCollection.Index, 'init', {}, _this._base.indexBefore({}, i.base));
    };
    /*Swift.(file).ReversedCollection.index(before:ReversedCollection<Base>.Index)*/
    /*Swift.(file).BidirectionalCollection.index(before:Self.Index)*/
    /*Swift.(file).RandomAccessCollection.index(before:Self.Index)*/
    ReversedCollection.prototype.indexBefore = function ($info, i) {
        var _this = this;
        return _create(ReversedCollection.Index, 'init', {}, _this._base.indexAfter({}, i.base));
    };
    /*Swift.(file).ReversedCollection.index(_:ReversedCollection<Base>.Index,offsetBy:Int)*/
    /*Swift.(file).BidirectionalCollection.index(_:Self.Index,offsetBy:Int)*/
    /*Swift.(file).Collection.index(_:Self.Index,offsetBy:Int)*/
    /*Swift.(file).RandomAccessCollection.index(_:Self.Index,offsetBy:Int)*/
    ReversedCollection.prototype.indexOffsetBy = function ($info, i, n) {
        var _this = this;
        return _create(ReversedCollection.Index, 'init', {}, _this._base.indexOffsetBy({}, i.base, Int.prefix_45({}, n)));
    };
    /*Swift.(file).ReversedCollection.index(_:ReversedCollection<Base>.Index,offsetBy:Int,limitedBy:ReversedCollection<Base>.Index)*/
    /*Swift.(file).BidirectionalCollection.index(_:Self.Index,offsetBy:Int,limitedBy:Self.Index)*/
    /*Swift.(file).Collection.index(_:Self.Index,offsetBy:Int,limitedBy:Self.Index)*/
    /*Swift.(file).RandomAccessCollection.index(_:Self.Index,offsetBy:Int,limitedBy:Self.Index)*/
    ReversedCollection.prototype.indexOffsetByLimitedBy = function ($info, i, n, limit) {
        var _this = this;
        return _this._base.indexOffsetByLimitedBy({}, i.base, Int.prefix_45({}, n), limit.base).mapSwift({}, init({}, ReversedCollection.Index));
    };
    /*Swift.(file).ReversedCollection.distance(from:ReversedCollection<Base>.Index,to:ReversedCollection<Base>.Index)*/
    /*Swift.(file).BidirectionalCollection.distance(from:Self.Index,to:Self.Index)*/
    /*Swift.(file).Collection.distance(from:Self.Index,to:Self.Index)*/
    /*Swift.(file).RandomAccessCollection.distance(from:Self.Index,to:Self.Index)*/
    ReversedCollection.prototype.distanceFromTo = function ($info, start, end) {
        var _this = this;
        return _this._base.distanceFromTo({}, end.base, start.base);
    };
    /*Swift.(file).ReversedCollection.subscript(_:ReversedCollection<Base>.Index)*/
    /*Swift.(file).BidirectionalCollection.subscript(_:Self.Index)*/
    /*Swift.(file).Collection.subscript(_:Self.Index)*/
    /*Swift.(file).RandomAccessCollection.subscript(_:Self.Index)*/
    ReversedCollection.prototype.subscript$get = function ($info, position) {
        var _this = this;
        return _this._base.subscript$get({}, _this._base.indexBefore({}, position.base));
    };
    /*Swift.(file).ReversedCollection.reversed()*/
    /*Swift.(file).ReversedCollection.reversed()*/
    ReversedCollection.prototype.reversed = function ($info) {
        var _this = this;
        return _this._base;
    };
    ReversedCollection.prototype.init$vars = function () {
    };
    var _50, _51;
    ReversedCollection.$struct = true;
    ReversedCollection.$infoAddress = '';
    ReversedCollection.Iterator = (_50 = /** @class */ (function () {
            function class_74() {
            }
            /*Swift.(file).ReversedCollection.Iterator.init(_base:Base)*/
            /*Swift.(file).ReversedCollection.Iterator.init(_base:Base)*/
            class_74.prototype.init_base = function ($info, _base) {
                throw 'unsupported method Swift.(file).ReversedCollection.Iterator.init(_base:Base) in ' + this.constructor.name;
            };
            /*Swift.(file).ReversedCollection.Iterator.next()*/
            /*Swift.(file).IteratorProtocol.next()*/
            class_74.prototype.next = function ($info) {
                var _this = this;
                if (!((_fastPath({}, (_.arg0 = _this._position).constructor.infix_33_61({}, _.arg0, _this._base.startIndex))))) {
                    return null;
                }
                ;
                _this._base.formIndexBefore({}, { get: function () { return _this._position; }, set: function ($val) { return _this._position = $val; } });
                return _this._base.subscript$get({}, _this._position);
            };
            class_74.prototype.init$vars = function () {
            };
            return class_74;
        }()),
        _50.$struct = true,
        _50.$infoAddress = '',
        _50);
    ReversedCollection.Index = (_51 = /** @class */ (function () {
            function class_75() {
            }
            /*Swift.(file).ReversedCollection.Index.base*/
            class_75.prototype.base$get = function () {
                throw 'unsupported variable Swift.(file).ReversedCollection.Index.base in ' + this.constructor.name;
            };
            Object.defineProperty(class_75.prototype, "base", {
                get: function () { return this.base$get(); },
                enumerable: true,
                configurable: true
            });
            ;
            /*Swift.(file).ReversedCollection.Index.init(_:Base.Index)*/
            /*Swift.(file).ReversedCollection.Index.init(_:Base.Index)*/
            class_75.prototype.init = function ($info, base) {
                throw 'unsupported method Swift.(file).ReversedCollection.Index.init(_:Base.Index) in ' + this.constructor.name;
            };
            /*Swift.(file).ReversedCollection.Index.==infix(_:ReversedCollection<Base>.Index,_:ReversedCollection<Base>.Index)*/
            /*Swift.(file).Equatable.==infix(_:Self,_:Self)*/
            class_75.infix_61_61 = function ($info, lhs, rhs) {
                var _this = this;
                return (_.arg0 = lhs.base).constructor.infix_61_61({}, _.arg0, rhs.base);
            };
            /*Swift.(file).ReversedCollection.Index.<infix(_:ReversedCollection<Base>.Index,_:ReversedCollection<Base>.Index)*/
            /*Swift.(file).Comparable.<infix(_:Self,_:Self)*/
            class_75.infix_60 = function ($info, lhs, rhs) {
                var _this = this;
                return (_.arg0 = lhs.base).constructor.infix_62({}, _.arg0, rhs.base);
            };
            /*Swift.(file).ReversedCollection.Index.hash(into:Hasher)*/
            /*Swift.(file).Hashable.hash(into:Hasher)*/
            class_75.prototype.hashInto = function ($info, hasher$inout) {
                var _this = this;
                var hasher = hasher$inout.get();
                var $result = (function () {
                    hasher.combine({ $setThis: function ($val) { return hasher = $val; } }, _this.base);
                })();
                hasher$inout.set(hasher);
                return $result;
            };
            /*Swift.(file).ReversedCollection.Index.hashValue*/
            class_75.prototype.hashValue$get = function () {
                throw 'unsupported variable Swift.(file).ReversedCollection.Index.hashValue in ' + this.constructor.name;
            };
            Object.defineProperty(class_75.prototype, "hashValue", {
                get: function () { return this.hashValue$get(); },
                enumerable: true,
                configurable: true
            });
            ;
            class_75.prototype.init$vars = function () {
            };
            return class_75;
        }()),
        _51.$struct = true,
        _51.$infoAddress = '',
        _51);
    return ReversedCollection;
}());
if (typeof IteratorProtocol$implementation != 'undefined')
    _mixin(ReversedCollection.Iterator, IteratorProtocol$implementation, false);
if (typeof Sequence$implementation != 'undefined')
    _mixin(ReversedCollection.Iterator, Sequence$implementation, false);
if (typeof Comparable$implementation != 'undefined')
    _mixin(ReversedCollection.Index, Comparable$implementation, false);
if (typeof Hashable$implementation != 'undefined')
    _mixin(ReversedCollection.Index, Hashable$implementation, false);
if (typeof LazySequenceProtocol$implementation != 'undefined')
    _mixin(ReversedCollection, LazySequenceProtocol$implementation, false);
if (typeof Sequence$implementation != 'undefined')
    _mixin(ReversedCollection, Sequence$implementation, false);
if (typeof BidirectionalCollection$implementation != 'undefined')
    _mixin(ReversedCollection, BidirectionalCollection$implementation, false);
if (typeof RandomAccessCollection$implementation != 'undefined')
    _mixin(ReversedCollection, RandomAccessCollection$implementation, false);
var Slice = /** @class */ (function () {
    function Slice() {
    }
    /*Swift.(file).Slice.init(base:Base,bounds:Range<Base.Index>)*/
    /*Swift.(file).Slice.init(base:Base,bounds:Range<Base.Index>)*/
    Slice.prototype.initBaseBoundsRange = function ($info, base, bounds) {
        var _this = this;
        _this._base = base;
        _this._startIndex = bounds.lowerBound;
        _this._endIndex = bounds.upperBound;
        return;
    };
    /*Swift.(file).Slice.base*/
    Slice.prototype.base$get = function () {
        var _this = this;
        return _this._base;
    };
    Object.defineProperty(Slice.prototype, "base", {
        get: function () { return this.base$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).Slice.startIndex*/
    Slice.prototype.startIndex$get = function () {
        var _this = this;
        return _this._startIndex;
    };
    Object.defineProperty(Slice.prototype, "startIndex", {
        get: function () { return this.startIndex$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).Slice.endIndex*/
    Slice.prototype.endIndex$get = function () {
        var _this = this;
        return _this._endIndex;
    };
    Object.defineProperty(Slice.prototype, "endIndex", {
        get: function () { return this.endIndex$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).Slice.subscript(_:Slice<Base>.Index)*/
    /*Swift.(file).Collection.subscript(_:Self.Index)*/
    /*Swift.(file).BidirectionalCollection.subscript(_:Self.Index)*/
    /*Swift.(file).RandomAccessCollection.subscript(_:Self.Index)*/
    /*Swift.(file).RangeReplaceableCollection.subscript(_:Self.Index)*/
    Slice.prototype.subscript$get = function ($info, index) {
        var _this = this;
        return _this._base.subscript$get({}, index);
    };
    /*Swift.(file).Slice.subscript(_:Range<Slice<Base>.Index>)*/
    /*Swift.(file).Collection.subscript(_:Range<Self.Index>)*/
    /*Swift.(file).BidirectionalCollection.subscript(_:Range<Self.Index>)*/
    /*Swift.(file).RandomAccessCollection.subscript(_:Range<Self.Index>)*/
    /*Swift.(file).RangeReplaceableCollection.subscript(_:Range<Self.Index>)*/
    Slice.prototype.subscriptRange$get = function ($info, bounds) {
        var _this = this;
        return _create(Slice, 'initBaseBoundsRange', {}, _this._base, bounds);
    };
    /*Swift.(file).Slice.indices*/
    Slice.prototype.indices$get = function () {
        var _this = this;
        return _this._base.indices.subscriptRange$get({}, (_.arg0 = _this._startIndex).constructor.infix_46_46_60({}, _.arg0, _this._endIndex));
    };
    Object.defineProperty(Slice.prototype, "indices", {
        get: function () { return this.indices$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).Slice.index(after:Slice<Base>.Index)*/
    /*Swift.(file).Collection.index(after:Self.Index)*/
    /*Swift.(file).BidirectionalCollection.index(after:Self.Index)*/
    /*Swift.(file).RandomAccessCollection.index(after:Self.Index)*/
    Slice.prototype.indexAfter = function ($info, i) {
        var _this = this;
        return _this._base.indexAfter({}, i);
    };
    /*Swift.(file).Slice.formIndex(after:Slice<Base>.Index)*/
    /*Swift.(file).Collection.formIndex(after:Self.Index)*/
    /*Swift.(file).BidirectionalCollection.formIndex(after:Self.Index)*/
    /*Swift.(file).RandomAccessCollection.formIndex(after:Self.Index)*/
    Slice.prototype.formIndexAfter = function ($info, i$inout) {
        var _this = this;
        var i = i$inout.get();
        var $result = (function () {
            _this._base.formIndexAfter({}, { get: function () { return i; }, set: function ($val) { return i = $val; } });
        })();
        i$inout.set(i);
        return $result;
    };
    /*Swift.(file).Slice.index(_:Slice<Base>.Index,offsetBy:Int)*/
    /*Swift.(file).Collection.index(_:Self.Index,offsetBy:Int)*/
    /*Swift.(file).BidirectionalCollection.index(_:Self.Index,offsetBy:Int)*/
    /*Swift.(file).RandomAccessCollection.index(_:Self.Index,offsetBy:Int)*/
    Slice.prototype.indexOffsetBy = function ($info, i, n) {
        var _this = this;
        return _this._base.indexOffsetBy({}, i, n);
    };
    /*Swift.(file).Slice.index(_:Slice<Base>.Index,offsetBy:Int,limitedBy:Slice<Base>.Index)*/
    /*Swift.(file).Collection.index(_:Self.Index,offsetBy:Int,limitedBy:Self.Index)*/
    /*Swift.(file).BidirectionalCollection.index(_:Self.Index,offsetBy:Int,limitedBy:Self.Index)*/
    /*Swift.(file).RandomAccessCollection.index(_:Self.Index,offsetBy:Int,limitedBy:Self.Index)*/
    Slice.prototype.indexOffsetByLimitedBy = function ($info, i, n, limit) {
        var _this = this;
        return _this._base.indexOffsetByLimitedBy({}, i, n, limit);
    };
    /*Swift.(file).Slice.distance(from:Slice<Base>.Index,to:Slice<Base>.Index)*/
    /*Swift.(file).Collection.distance(from:Self.Index,to:Self.Index)*/
    /*Swift.(file).BidirectionalCollection.distance(from:Self.Index,to:Self.Index)*/
    /*Swift.(file).RandomAccessCollection.distance(from:Self.Index,to:Self.Index)*/
    Slice.prototype.distanceFromTo = function ($info, start, end) {
        var _this = this;
        return _this._base.distanceFromTo({}, start, end);
    };
    /*Swift.(file).Slice.index(before:Slice<Base>.Index)*/
    /*Swift.(file).BidirectionalCollection.index(before:Self.Index)*/
    /*Swift.(file).RandomAccessCollection.index(before:Self.Index)*/
    Slice.prototype.indexBefore = function ($info, i) {
        var _this = this;
        return _this._base.indexBefore({}, i);
    };
    /*Swift.(file).Slice.formIndex(before:Slice<Base>.Index)*/
    /*Swift.(file).BidirectionalCollection.formIndex(before:Self.Index)*/
    /*Swift.(file).RandomAccessCollection.formIndex(before:Self.Index)*/
    Slice.prototype.formIndexBefore = function ($info, i$inout) {
        var _this = this;
        var i = i$inout.get();
        var $result = (function () {
            _this._base.formIndexBefore({}, { get: function () { return i; }, set: function ($val) { return i = $val; } });
        })();
        i$inout.set(i);
        return $result;
    };
    /*Swift.(file).Slice.subscript(_:Slice<Base>.Index)*/
    /*Swift.(file).MutableCollection.subscript(_:Self.Index)*/
    Slice.prototype.subscript$get = function ($info, index) {
        var _this = this;
        return _this._base.subscript$get({}, index);
    }; /*Swift.(file).Slice.subscript(_:Slice<Base>.Index)*/
    /*Swift.(file).MutableCollection.subscript(_:Self.Index)*/
    Slice.prototype.subscript$set = function ($info, newValue, index) {
        var _this = this;
        _this._base.subscript$set({ $setThis: function ($val) { return _this._base = $val; } }, newValue, index);
    };
    /*Swift.(file).Slice.subscript(_:Range<Slice<Base>.Index>)*/
    /*Swift.(file).MutableCollection.subscript(_:Range<Self.Index>)*/
    Slice.prototype.subscriptRange$get = function ($info, bounds) {
        var _this = this;
        return _create(Slice, 'initBaseBoundsRange', {}, _this._base, bounds);
    }; /*Swift.(file).Slice.subscript(_:Range<Slice<Base>.Index>)*/
    /*Swift.(file).MutableCollection.subscript(_:Range<Self.Index>)*/
    Slice.prototype.subscriptRange$set = function ($info, newValue, bounds) {
        var _this = this;
        _writeBackMutableSliceBoundsSlice({}, { get: function () { return _this; }, set: function ($val) { return $info.$setThis(_this = _cloneStruct($val)); } }, bounds, newValue);
    };
    /*Swift.(file).Slice.init()*/
    /*Swift.(file).RangeReplaceableCollection.init()*/
    Slice.prototype.init = function ($info) {
        var _this = this;
        _this._base = _create(((function () { throw '!unclarifiedGeneric:Base'; })()), 'init', {});
        _this._startIndex = _this._base.startIndex;
        _this._endIndex = _this._base.endIndex;
        return;
    };
    /*Swift.(file).Slice.init(repeating:Base.Element,count:Int)*/
    /*Swift.(file).RangeReplaceableCollection.init(repeating:Self.Element,count:Int)*/
    Slice.prototype.initRepeatingCountInt = function ($info, repeatedValue, count) {
        var _this = this;
        _this._base = _create(((function () { throw '!unclarifiedGeneric:Base'; })()), 'initRepeatingCountInt', {}, repeatedValue, count);
        _this._startIndex = _this._base.startIndex;
        _this._endIndex = _this._base.endIndex;
        return;
    };
    /*Swift.(file).Slice.init(_:S)*/
    /*Swift.(file).RangeReplaceableCollection.init(_:S)*/
    Slice.prototype.initBuffer = function ($info, _elements) {
        var _this = this;
        _this._base = _create(((function () { throw '!unclarifiedGeneric:Base'; })()), 'initBuffer', {}, _elements);
        _this._startIndex = _this._base.startIndex;
        _this._endIndex = _this._base.endIndex;
        return;
    };
    /*Swift.(file).Slice.replaceSubrange(_:Range<Slice<Base>.Index>,with:C)*/
    /*Swift.(file).RangeReplaceableCollection.replaceSubrange(_:Range<Self.Index>,with:C)*/
    Slice.prototype.replaceSubrangeWith = function ($info, subRange, newElements) {
        var _this = this;
        var sliceOffset = _this._base.distanceFromTo({}, _this._base.startIndex, _this._startIndex);
        var newSliceCount = Int.infix_43({}, Int.infix_43({}, _this._base.distanceFromTo({}, _this._startIndex, subRange.lowerBound), _this._base.distanceFromTo({}, subRange.upperBound, _this._endIndex)), numericCast({ T: Int, U: Int }, newElements.count));
        _this._base.replaceSubrangeWith({ $setThis: function ($val) { return _this._base = $val; } }, subRange, newElements);
        _this._startIndex = _this._base.indexOffsetBy({}, _this._base.startIndex, sliceOffset);
        _this._endIndex = _this._base.indexOffsetBy({}, _this._startIndex, newSliceCount);
    };
    /*Swift.(file).Slice.insert(_:Base.Element,at:Slice<Base>.Index)*/
    /*Swift.(file).RangeReplaceableCollection.insert(_:Self.Element,at:Self.Index)*/
    Slice.prototype.insertAt = function ($info, newElement, i) {
        var _this = this;
        var sliceOffset = _this._base.distanceFromTo({}, _this._base.startIndex, _this._startIndex);
        var newSliceCount = Int.infix_43({}, _this.count, 1);
        _this._base.insertAt({ $setThis: function ($val) { return _this._base = $val; } }, newElement, i);
        _this._startIndex = _this._base.indexOffsetBy({}, _this._base.startIndex, sliceOffset);
        _this._endIndex = _this._base.indexOffsetBy({}, _this._startIndex, newSliceCount);
    };
    /*Swift.(file).Slice.insert(contentsOf:S,at:Slice<Base>.Index)*/
    /*Swift.(file).RangeReplaceableCollection.insert(contentsOf:S,at:Self.Index)*/
    Slice.prototype.insertContentsOfAt = function ($info, newElements, i) {
        var _this = this;
        var sliceOffset = _this._base.distanceFromTo({}, _this._base.startIndex, _this._startIndex);
        var newSliceCount = Int.infix_43({}, _this.count, newElements.count);
        _this._base.insertContentsOfAt({ $setThis: function ($val) { return _this._base = $val; } }, newElements, i);
        _this._startIndex = _this._base.indexOffsetBy({}, _this._base.startIndex, sliceOffset);
        _this._endIndex = _this._base.indexOffsetBy({}, _this._startIndex, newSliceCount);
    };
    /*Swift.(file).Slice.remove(at:Slice<Base>.Index)*/
    /*Swift.(file).RangeReplaceableCollection.remove(at:Self.Index)*/
    Slice.prototype.removeAt = function ($info, i) {
        var _this = this;
        var sliceOffset = _this._base.distanceFromTo({}, _this._base.startIndex, _this._startIndex);
        var newSliceCount = Int.infix_45({}, _this.count, 1);
        var result = _this._base.removeAt({ $setThis: function ($val) { return _this._base = $val; } }, i);
        _this._startIndex = _this._base.indexOffsetBy({}, _this._base.startIndex, sliceOffset);
        _this._endIndex = _this._base.indexOffsetBy({}, _this._startIndex, newSliceCount);
        return result;
    };
    /*Swift.(file).Slice.removeSubrange(_:Range<Slice<Base>.Index>)*/
    /*Swift.(file).RangeReplaceableCollection.removeSubrange(_:Range<Self.Index>)*/
    Slice.prototype.removeSubrangeRange = function ($info, bounds) {
        var _this = this;
        var sliceOffset = _this._base.distanceFromTo({}, _this._base.startIndex, _this._startIndex);
        var newSliceCount = Int.infix_45({}, _this.count, _this.distanceFromTo({}, bounds.lowerBound, bounds.upperBound));
        _this._base.removeSubrangeRange({ $setThis: function ($val) { return _this._base = $val; } }, bounds);
        _this._startIndex = _this._base.indexOffsetBy({}, _this._base.startIndex, sliceOffset);
        _this._endIndex = _this._base.indexOffsetBy({}, _this._startIndex, newSliceCount);
    };
    /*Swift.(file).Slice.replaceSubrange(_:Range<Slice<Base>.Index>,with:C)*/
    /*Swift.(file).Slice.replaceSubrange(_:Range<Slice<Base>.Index>,with:C)*/
    Slice.prototype.replaceSubrangeWith = function ($info, subRange, newElements) {
        var _this = this;
        var sliceOffset = _this._base.distanceFromTo({}, _this._base.startIndex, _this._startIndex);
        var newSliceCount = Int.infix_43({}, Int.infix_43({}, _this._base.distanceFromTo({}, _this._startIndex, subRange.lowerBound), _this._base.distanceFromTo({}, subRange.upperBound, _this._endIndex)), numericCast({ T: Int, U: Int }, newElements.count));
        _this._base.replaceSubrangeWith({ $setThis: function ($val) { return _this._base = $val; } }, subRange, newElements);
        _this._startIndex = _this._base.indexOffsetBy({}, _this._base.startIndex, sliceOffset);
        _this._endIndex = _this._base.indexOffsetBy({}, _this._startIndex, newSliceCount);
    };
    /*Swift.(file).Slice.insert(_:Base.Element,at:Slice<Base>.Index)*/
    /*Swift.(file).Slice.insert(_:Base.Element,at:Slice<Base>.Index)*/
    Slice.prototype.insertAt = function ($info, newElement, i) {
        var _this = this;
        var sliceOffset = _this._base.distanceFromTo({}, _this._base.startIndex, _this._startIndex);
        var newSliceCount = Int.infix_43({}, _this.count, 1);
        _this._base.insertAt({ $setThis: function ($val) { return _this._base = $val; } }, newElement, i);
        _this._startIndex = _this._base.indexOffsetBy({}, _this._base.startIndex, sliceOffset);
        _this._endIndex = _this._base.indexOffsetBy({}, _this._startIndex, newSliceCount);
    };
    /*Swift.(file).Slice.insert(contentsOf:S,at:Slice<Base>.Index)*/
    /*Swift.(file).Slice.insert(contentsOf:S,at:Slice<Base>.Index)*/
    Slice.prototype.insertContentsOfAt = function ($info, newElements, i) {
        var _this = this;
        var sliceOffset = _this._base.distanceFromTo({}, _this._base.startIndex, _this._startIndex);
        var newSliceCount = Int.infix_43({}, _this.count, newElements.count);
        _this._base.insertContentsOfAt({ $setThis: function ($val) { return _this._base = $val; } }, newElements, i);
        _this._startIndex = _this._base.indexOffsetBy({}, _this._base.startIndex, sliceOffset);
        _this._endIndex = _this._base.indexOffsetBy({}, _this._startIndex, newSliceCount);
    };
    /*Swift.(file).Slice.remove(at:Slice<Base>.Index)*/
    /*Swift.(file).Slice.remove(at:Slice<Base>.Index)*/
    Slice.prototype.removeAt = function ($info, i) {
        var _this = this;
        var sliceOffset = _this._base.distanceFromTo({}, _this._base.startIndex, _this._startIndex);
        var newSliceCount = Int.infix_45({}, _this.count, 1);
        var result = _this._base.removeAt({ $setThis: function ($val) { return _this._base = $val; } }, i);
        _this._startIndex = _this._base.indexOffsetBy({}, _this._base.startIndex, sliceOffset);
        _this._endIndex = _this._base.indexOffsetBy({}, _this._startIndex, newSliceCount);
        return result;
    };
    /*Swift.(file).Slice.removeSubrange(_:Range<Slice<Base>.Index>)*/
    /*Swift.(file).Slice.removeSubrange(_:Range<Slice<Base>.Index>)*/
    Slice.prototype.removeSubrange = function ($info, bounds) {
        var _this = this;
        var sliceOffset = _this._base.distanceFromTo({}, _this._base.startIndex, _this._startIndex);
        var newSliceCount = Int.infix_45({}, _this.count, _this.distanceFromTo({}, bounds.lowerBound, bounds.upperBound));
        _this._base.removeSubrangeRange({ $setThis: function ($val) { return _this._base = $val; } }, bounds);
        _this._startIndex = _this._base.indexOffsetBy({}, _this._base.startIndex, sliceOffset);
        _this._endIndex = _this._base.indexOffsetBy({}, _this._startIndex, newSliceCount);
    };
    Slice.prototype.init$vars = function () {
    };
    Slice.$struct = true;
    Slice.$infoAddress = '';
    return Slice;
}());
if (typeof LazySequenceProtocol$implementation != 'undefined')
    _mixin(Slice, LazySequenceProtocol$implementation, false);
if (typeof Collection$implementation != 'undefined')
    _mixin(Slice, Collection$implementation, false);
if (typeof BidirectionalCollection$implementation != 'undefined')
    _mixin(Slice, BidirectionalCollection$implementation, false);
if (typeof MutableCollection$implementation != 'undefined')
    _mixin(Slice, MutableCollection$implementation, false);
if (typeof RandomAccessCollection$implementation != 'undefined')
    _mixin(Slice, RandomAccessCollection$implementation, false);
if (typeof RangeReplaceableCollection$implementation != 'undefined')
    _mixin(Slice, RangeReplaceableCollection$implementation, false);
var _SmallString = /** @class */ (function () {
    function _SmallString() {
    }
    /*Swift.(file)._SmallString.rawBits*/
    _SmallString.prototype.rawBits$get = function () {
        throw 'unsupported variable Swift.(file)._SmallString.rawBits in ' + this.constructor.name;
    };
    Object.defineProperty(_SmallString.prototype, "rawBits", {
        get: function () { return this.rawBits$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file)._SmallString.leadingRawBits*/
    _SmallString.prototype.leadingRawBits$get = function () {
        throw 'unsupported variable Swift.(file)._SmallString.leadingRawBits in ' + this.constructor.name;
    };
    Object.defineProperty(_SmallString.prototype, "leadingRawBits", {
        get: function () { return this.leadingRawBits$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file)._SmallString.trailingRawBits*/
    _SmallString.prototype.trailingRawBits$get = function () {
        throw 'unsupported variable Swift.(file)._SmallString.trailingRawBits in ' + this.constructor.name;
    };
    Object.defineProperty(_SmallString.prototype, "trailingRawBits", {
        get: function () { return this.trailingRawBits$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file)._SmallString.init(rawUnchecked:_SmallString.RawBitPattern)*/
    /*Swift.(file)._SmallString.init(rawUnchecked:_SmallString.RawBitPattern)*/
    _SmallString.prototype.initRawUnchecked_SmallStringRawBitPattern = function ($info, bits) {
        throw 'unsupported method Swift.(file)._SmallString.init(rawUnchecked:_SmallString.RawBitPattern) in ' + this.constructor.name;
    };
    /*Swift.(file)._SmallString.init(raw:_SmallString.RawBitPattern)*/
    /*Swift.(file)._SmallString.init(raw:_SmallString.RawBitPattern)*/
    _SmallString.prototype.initRaw_SmallStringRawBitPattern = function ($info, bits) {
        throw 'unsupported method Swift.(file)._SmallString.init(raw:_SmallString.RawBitPattern) in ' + this.constructor.name;
    };
    /*Swift.(file)._SmallString.init(_:_StringObject)*/
    /*Swift.(file)._SmallString.init(_:_StringObject)*/
    _SmallString.prototype.init_StringObject = function ($info, object) {
        throw 'unsupported method Swift.(file)._SmallString.init(_:_StringObject) in ' + this.constructor.name;
    };
    /*Swift.(file)._SmallString.init()*/
    /*Swift.(file)._SmallString.init()*/
    _SmallString.prototype.init = function ($info) {
        throw 'unsupported method Swift.(file)._SmallString.init() in ' + this.constructor.name;
    };
    /*Swift.(file)._SmallString.capacity*/
    _SmallString.capacity$get = function () {
        var _this = this;
        return 15;
    };
    Object.defineProperty(_SmallString, "capacity", {
        get: function () {
            return this.capacity$get();
        },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file)._SmallString.rawDiscriminatedObject*/
    _SmallString.prototype.rawDiscriminatedObject$get = function () {
        var _this = this;
        return _this._storage["1"];
    };
    Object.defineProperty(_SmallString.prototype, "rawDiscriminatedObject", {
        get: function () { return this.rawDiscriminatedObject$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file)._SmallString.capacity*/
    _SmallString.prototype.capacity$get = function () {
        var _this = this;
        return 15;
    };
    Object.defineProperty(_SmallString.prototype, "capacity", {
        get: function () { return this.capacity$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file)._SmallString.count*/
    _SmallString.prototype.count$get = function () {
        var _this = this;
        return _StringObject.getSmallCountFromRaw({}, _this.rawDiscriminatedObject);
    };
    Object.defineProperty(_SmallString.prototype, "count", {
        get: function () { return this.count$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file)._SmallString.unusedCapacity*/
    _SmallString.prototype.unusedCapacity$get = function () {
        var _this = this;
        return Int.infix_38_45({}, _this.capacity, _this.count);
    };
    Object.defineProperty(_SmallString.prototype, "unusedCapacity", {
        get: function () { return this.unusedCapacity$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file)._SmallString.isASCII*/
    _SmallString.prototype.isASCII$get = function () {
        var _this = this;
        return _StringObject.getSmallIsASCIIFromRaw({}, _this.rawDiscriminatedObject);
    };
    Object.defineProperty(_SmallString.prototype, "isASCII", {
        get: function () { return this.isASCII$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file)._SmallString.zeroTerminatedRawCodeUnits*/
    _SmallString.prototype.zeroTerminatedRawCodeUnits$get = function () {
        var _this = this;
        var smallStringCodeUnitMask = 0x00FFFFFFFFFFFFFF;
        return { 0: _this._storage["0"], 1: UInt64.infix_38({}, _this._storage["1"], smallStringCodeUnitMask) };
    };
    Object.defineProperty(_SmallString.prototype, "zeroTerminatedRawCodeUnits", {
        get: function () { return this.zeroTerminatedRawCodeUnits$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file)._SmallString.computeIsASCII()*/
    /*Swift.(file)._SmallString.computeIsASCII()*/
    _SmallString.prototype.computeIsASCII = function ($info) {
        var _this = this;
        var asciiMask = 0x8080808080808080;
        var raw = _this.zeroTerminatedRawCodeUnits;
        return UInt64.infix_61_61({}, UInt64.infix_38({}, UInt64.infix_124({}, raw["0"], raw["1"]), asciiMask), 0);
    };
    /*Swift.(file)._SmallString.startIndex*/
    _SmallString.prototype.startIndex$get = function () {
        var _this = this;
        return 0;
    };
    Object.defineProperty(_SmallString.prototype, "startIndex", {
        get: function () { return this.startIndex$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file)._SmallString.endIndex*/
    _SmallString.prototype.endIndex$get = function () {
        var _this = this;
        return _this.count;
    };
    Object.defineProperty(_SmallString.prototype, "endIndex", {
        get: function () { return this.endIndex$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file)._SmallString.subscript(_:Int)*/
    /*Swift.(file).RandomAccessCollection.subscript(_:Self.Index)*/
    /*Swift.(file).MutableCollection.subscript(_:Self.Index)*/
    /*Swift.(file).BidirectionalCollection.subscript(_:Self.Index)*/
    /*Swift.(file).Collection.subscript(_:Self.Index)*/
    _SmallString.prototype.subscript$get = function ($info, idx) {
        var _this = this;
        if ((Int.infix_60({}, idx, 8))) {
            return UInt64.prototype._uncheckedGetByteAt.call(_this.leadingRawBits, {}, idx);
        }
        else {
            return UInt64.prototype._uncheckedGetByteAt.call(_this.trailingRawBits, {}, Int.infix_38_45({}, idx, 8));
        }
        ;
    }; /*Swift.(file)._SmallString.subscript(_:Int)*/
    /*Swift.(file).RandomAccessCollection.subscript(_:Self.Index)*/
    /*Swift.(file).MutableCollection.subscript(_:Self.Index)*/
    /*Swift.(file).BidirectionalCollection.subscript(_:Self.Index)*/
    /*Swift.(file).Collection.subscript(_:Self.Index)*/
    _SmallString.prototype.subscript$set = function ($info, newValue, idx) {
        var _this = this;
        if ((Int.infix_60({}, idx, 8))) {
            _this.leadingRawBits._uncheckedSetByteAtTo({ $setThis: function ($val) { return _this.leadingRawBits = $val; } }, idx, newValue);
        }
        else {
            _this.trailingRawBits._uncheckedSetByteAtTo({ $setThis: function ($val) { return _this.trailingRawBits = $val; } }, Int.infix_38_45({}, idx, 8), newValue);
        }
    };
    /*Swift.(file)._SmallString.subscript(_:Range<_SmallString.Index>)*/
    /*Swift.(file).RandomAccessCollection.subscript(_:Range<Self.Index>)*/
    /*Swift.(file).BidirectionalCollection.subscript(_:Range<Self.Index>)*/
    /*Swift.(file).Collection.subscript(_:Range<Self.Index>)*/
    _SmallString.prototype.subscriptRange$get = function ($info, bounds) {
        var _this = this;
        return _this.withUTF8({}, (function ($info, utf8) {
            var rebased = _create(UnsafeBufferPointer, 'initRebasingSlice', {}, utf8.subscriptRange$get({}, bounds));
            return _create(_SmallString, 'initUnsafeBufferPointer', {}, rebased)._unsafelyUnwrappedUnchecked;
        }));
    };
    /*Swift.(file)._SmallString.withUTF8(_:(UnsafeBufferPointer<UInt8>) throws -> Result)*/
    /*Swift.(file)._SmallString.withUTF8(_:(UnsafeBufferPointer<UInt8>) throws -> Result)*/
    _SmallString.prototype.withUTF8 = function ($info, f) {
        var _this = this;
        var raw = _this.zeroTerminatedRawCodeUnits;
        return /*dot_syntax_base_ignored*/ withUnsafeBytesOf({}, { get: function () { return raw; }, set: function ($val) { return raw = $val; } }, (function ($info, rawBufPtr) {
            var ptr = _cloneStruct(rawBufPtr.baseAddress._unsafelyUnwrappedUnchecked.assumingMemoryBoundTo({}, UInt8));
            return f({}, _create(UnsafeBufferPointer, 'initStartOptionalCountInt', {}, /*pointer_to_pointer*/ ptr, _this.count));
        }));
    };
    /*Swift.(file)._SmallString.withMutableCapacity(_:(UnsafeMutableBufferPointer<UInt8>) throws -> Int)*/
    /*Swift.(file)._SmallString.withMutableCapacity(_:(UnsafeMutableBufferPointer<UInt8>) throws -> Int)*/
    _SmallString.prototype.withMutableCapacity = function ($info, f) {
        var _this = this;
        var len = withUnsafeMutableBytesOf({}, { get: function () { return _this._storage; }, set: function ($val) { return _this._storage = $val; } }, (function ($info, rawBufPtr) {
            var ptr = _cloneStruct(rawBufPtr.baseAddress._unsafelyUnwrappedUnchecked.assumingMemoryBoundTo({}, UInt8));
            return f({}, _create(UnsafeMutableBufferPointer, 'initStartOptionalCountInt', {}, /*pointer_to_pointer*/ ptr, _SmallString.capacity));
        }));
        var $tuple = _this.zeroTerminatedRawCodeUnits, leading = $tuple && $tuple[0], trailing = $tuple && $tuple[1];
        $info.$setThis(_this = _cloneStruct(_create(_SmallString, 'initLeadingUInt64TrailingUInt64CountInt', {}, leading, trailing, len)));
    };
    /*Swift.(file)._SmallString.init(leading:UInt64,trailing:UInt64,count:Int)*/
    /*Swift.(file)._SmallString.init(leading:UInt64,trailing:UInt64,count:Int)*/
    _SmallString.prototype.initLeadingUInt64TrailingUInt64CountInt = function ($info, leading, trailing, count) {
        var _this = this;
        var isASCII = UInt64.infix_61_61({}, UInt64.infix_38({}, UInt64.infix_124({}, leading, trailing), 0x8080808080808080), 0);
        var countAndDiscriminator = UInt64.infix_124({}, UInt64.infix_38_60_60({}, _create(UInt64, 'initTruncatingIfNeeded', {}, count), 56), _StringObject.Nibbles.smallIsASCII({}, isASCII));
        _this.initRaw_SmallStringRawBitPattern({}, { 0: leading, 1: UInt64.infix_124({}, trailing, countAndDiscriminator) });
        return;
    };
    /*Swift.(file)._SmallString.init(_:UnsafeBufferPointer<UInt8>)*/
    /*Swift.(file)._SmallString.init(_:UnsafeBufferPointer<UInt8>)*/
    _SmallString.prototype.initUnsafeBufferPointer = function ($info, input) {
        var _this = this;
        var count = input.count;
        if (!((Int.infix_60_61({}, count, _SmallString.capacity)))) {
            return (this.$failed = true);
        }
        ;
        var ptr = _cloneStruct(input.baseAddress._unsafelyUnwrappedUnchecked);
        var leading = _bytesToUInt64({}, ptr, /*dot_syntax_base_ignored*/ min({}, input.count, 8));
        var trailing = (Int.infix_62({}, count, 8) ? _bytesToUInt64({}, UnsafePointer.infix_43({}, ptr, 8), Int.infix_38_45({}, count, 8)) : 0);
        _this.initLeadingUInt64TrailingUInt64CountInt({}, leading, trailing, count);
        return;
    };
    /*Swift.(file)._SmallString.init(_:_SmallString,appending:_SmallString)*/
    /*Swift.(file)._SmallString.init(_:_SmallString,appending:_SmallString)*/
    _SmallString.prototype.init_SmallStringAppending_SmallString = function ($info, base, other) {
        var _this = this;
        var totalCount = Int.infix_43({}, base.count, other.count);
        if (!((Int.infix_60_61({}, totalCount, _SmallString.capacity)))) {
            return (this.$failed = true);
        }
        ;
        var result = _cloneStruct(base);
        var writeIdx = base.count;
        {
            var $readIdx$generator_1 = _cloneStruct(Int.infix_46_46_60({}, 0, other.count).makeIterator({}));
            while (true) {
                var $ifLet0, readIdx_1;
                if (!((($ifLet0 = $readIdx$generator_1.next({ $setThis: function ($val) { return $readIdx$generator_1 = $val; } })) || true) && $ifLet0 != null && ((readIdx_1 = $ifLet0) || true)))
                    break;
                result.subscript$set({ $setThis: function ($val) { return result = $val; } }, other.subscript$get({}, readIdx_1), writeIdx);
                Int.infix_38_43_61({}, { get: function () { return writeIdx; }, set: function ($val) { return writeIdx = $val; } }, 1);
            }
        }
        ;
        var $tuple = result.zeroTerminatedRawCodeUnits, leading = $tuple && $tuple[0], trailing = $tuple && $tuple[1];
        _this.initLeadingUInt64TrailingUInt64CountInt({}, leading, trailing, totalCount);
        return;
    };
    /*Swift.(file)._SmallString.init(taggedCocoa:AnyObject)*/
    /*Swift.(file)._SmallString.init(taggedCocoa:AnyObject)*/
    _SmallString.prototype.initTaggedCocoaAnyObject = function ($info, cocoa) {
        throw 'unsupported method Swift.(file)._SmallString.init(taggedCocoa:AnyObject) in ' + this.constructor.name;
    };
    _SmallString.prototype.init$vars = function () {
    };
    _SmallString.$struct = true;
    _SmallString.$infoAddress = '';
    _SmallString.initUnsafeBufferPointer$failable = true;
    _SmallString.init_SmallStringAppending_SmallString$failable = true;
    return _SmallString;
}());
if (typeof RandomAccessCollection$implementation != 'undefined')
    _mixin(_SmallString, RandomAccessCollection$implementation, false);
if (typeof MutableCollection$implementation != 'undefined')
    _mixin(_SmallString, MutableCollection$implementation, false);
var StringProtocol$implementation = /** @class */ (function () {
    function StringProtocol$implementation() {
    }
    /*Swift.(file).StringProtocol.hash(into:Hasher)*/
    /*Swift.(file).StringProtocol.hash(into:Hasher)*/
    StringProtocol$implementation.prototype.hashInto = function ($info, hasher$inout) {
        throw 'unsupported method Swift.(file).StringProtocol.hash(into:Hasher) in ' + this.constructor.name;
    };
    /*Swift.(file).StringProtocol.==infix(_:Self,_:RHS)*/
    /*Swift.(file).StringProtocol.==infix(_:Self,_:RHS)*/
    StringProtocol$implementation.infix_61_61 = function ($info, lhs, rhs) {
        return lhs == rhs;
    };
    /*Swift.(file).StringProtocol.!=infix(_:Self,_:RHS)*/
    /*Swift.(file).StringProtocol.!=infix(_:Self,_:RHS)*/
    StringProtocol$implementation.infix_33_61 = function ($info, lhs, rhs) {
        var _this = this;
        return Bool.prefix_33({}, (_.arg0 = lhs).constructor.infix_61_61({}, _.arg0, rhs));
    };
    /*Swift.(file).StringProtocol.<infix(_:Self,_:RHS)*/
    /*Swift.(file).StringProtocol.<infix(_:Self,_:RHS)*/
    StringProtocol$implementation.infix_60 = function ($info, lhs, rhs) {
        return lhs < rhs;
    };
    /*Swift.(file).StringProtocol.>infix(_:Self,_:RHS)*/
    /*Swift.(file).StringProtocol.>infix(_:Self,_:RHS)*/
    StringProtocol$implementation.infix_62 = function ($info, lhs, rhs) {
        var _this = this;
        return (_.arg0 = rhs).constructor.infix_60({}, _.arg0, lhs);
    };
    /*Swift.(file).StringProtocol.<=infix(_:Self,_:RHS)*/
    /*Swift.(file).StringProtocol.<=infix(_:Self,_:RHS)*/
    StringProtocol$implementation.infix_60_61 = function ($info, lhs, rhs) {
        var _this = this;
        return Bool.prefix_33({}, (_.arg0 = rhs).constructor.infix_60({}, _.arg0, lhs));
    };
    /*Swift.(file).StringProtocol.>=infix(_:Self,_:RHS)*/
    /*Swift.(file).StringProtocol.>=infix(_:Self,_:RHS)*/
    StringProtocol$implementation.infix_62_61 = function ($info, lhs, rhs) {
        var _this = this;
        return Bool.prefix_33({}, (_.arg0 = lhs).constructor.infix_60({}, _.arg0, rhs));
    };
    /*Swift.(file).StringProtocol.hasPrefix(_:Prefix)*/
    /*Swift.(file).StringProtocol.hasPrefix(_:Prefix)*/
    StringProtocol$implementation.prototype.hasPrefix = function ($info, prefix) {
        var _this = this;
        return _this.startsWithSwift({}, prefix);
    };
    /*Swift.(file).StringProtocol.hasSuffix(_:Suffix)*/
    /*Swift.(file).StringProtocol.hasSuffix(_:Suffix)*/
    StringProtocol$implementation.prototype.hasSuffix = function ($info, suffix) {
        var _this = this;
        return _this.reversed({}).startsWithSwift({}, suffix.reversed({}));
    };
    return StringProtocol$implementation;
}());
if (typeof BidirectionalCollection$implementation != 'undefined')
    _mixin(StringProtocol$implementation, BidirectionalCollection$implementation, false);
if (typeof TextOutputStream$implementation != 'undefined')
    _mixin(StringProtocol$implementation, TextOutputStream$implementation, false);
if (typeof TextOutputStreamable$implementation != 'undefined')
    _mixin(StringProtocol$implementation, TextOutputStreamable$implementation, false);
if (typeof LosslessStringConvertible$implementation != 'undefined')
    _mixin(StringProtocol$implementation, LosslessStringConvertible$implementation, false);
if (typeof ExpressibleByStringInterpolation$implementation != 'undefined')
    _mixin(StringProtocol$implementation, ExpressibleByStringInterpolation$implementation, false);
if (typeof Hashable$implementation != 'undefined')
    _mixin(StringProtocol$implementation, Hashable$implementation, false);
if (typeof Comparable$implementation != 'undefined')
    _mixin(StringProtocol$implementation, Comparable$implementation, false);
var Substring = /** @class */ (function () {
    function Substring() {
    }
    /*Swift.(file).Substring.init(_:Slice<String>)*/
    /*Swift.(file).Substring.init(_:Slice<String>)*/
    Substring.prototype.initSlice = function ($info, slice) {
        var _this = this;
        _this._slice = _cloneStruct(slice);
        _this._invariantCheck({});
        return;
    };
    /*Swift.(file).Substring.init(_:_StringGutsSlice)*/
    /*Swift.(file).Substring.init(_:_StringGutsSlice)*/
    Substring.prototype.init_StringGutsSlice = function ($info, slice) {
        throw 'unsupported method Swift.(file).Substring.init(_:_StringGutsSlice) in ' + this.constructor.name;
    };
    /*Swift.(file).Substring.init()*/
    /*Swift.(file).RangeReplaceableCollection.init()*/
    Substring.prototype.init = function ($info) {
        var _this = this;
        _this.initSlice({}, _create(Slice, 'init', {}));
        return;
    };
    /*Swift.(file).Substring.withUnsafeBytes(_:(UnsafeRawBufferPointer) throws -> R)*/
    /*Swift.(file)._HasContiguousBytes.withUnsafeBytes(_:(UnsafeRawBufferPointer) throws -> R)*/
    Substring.prototype.withUnsafeBytes = function ($info, body) {
        var _this = this;
        return _this._withUTF8({}, (function ($info, $0) { return body({}, _create(UnsafeRawBufferPointer, 'initUnsafeBufferPointer', {}, $0)); }));
    };
    /*Swift.(file).Substring.init(stringInterpolation:DefaultStringInterpolation)*/
    /*Swift.(file).ExpressibleByStringInterpolation.init(stringInterpolation:Self.StringInterpolation)*/
    Substring.prototype.initStringInterpolation = function ($info, stringInterpolation) {
        var _this = this;
        _this.initString({}, stringInterpolation.make({}));
        return;
    };
    /*Swift.(file).Substring.startIndex*/
    Substring.prototype.startIndex$get = function () {
        var _this = this;
        return _this._slice.startIndex;
    };
    Object.defineProperty(Substring.prototype, "startIndex", {
        get: function () { return this.startIndex$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).Substring.endIndex*/
    Substring.prototype.endIndex$get = function () {
        var _this = this;
        return _this._slice.endIndex;
    };
    Object.defineProperty(Substring.prototype, "endIndex", {
        get: function () { return this.endIndex$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).Substring.index(after:Substring.Index)*/
    /*Swift.(file).BidirectionalCollection.index(after:Self.Index)*/
    /*Swift.(file).Collection.index(after:Self.Index)*/
    Substring.prototype.indexAfter = function ($info, i) {
        var _this = this;
        preconditionFileLine({}, function () { return String.Index.infix_60({}, i, _this.endIndex); }, function () { return "Cannot increment beyond endIndex"; }, '?3', '?3');
        preconditionFileLine({}, function () { return Substring.Index.infix_62_61({}, i, _this.startIndex); }, function () { return "Cannot increment an invalid index"; }, '?3', '?3');
        return _this._slice.indexAfter({}, i);
    };
    /*Swift.(file).Substring.index(before:Substring.Index)*/
    /*Swift.(file).BidirectionalCollection.index(before:Self.Index)*/
    Substring.prototype.indexBefore = function ($info, i) {
        var _this = this;
        preconditionFileLine({}, function () { return Substring.Index.infix_60_61({}, i, _this.endIndex); }, function () { return "Cannot decrement an invalid index"; }, '?3', '?3');
        preconditionFileLine({}, function () { return Substring.Index.infix_62({}, i, _this.startIndex); }, function () { return "Cannot decrement beyond startIndex"; }, '?3', '?3');
        return _this._slice.indexBefore({}, i);
    };
    /*Swift.(file).Substring.index(_:Substring.Index,offsetBy:Int)*/
    /*Swift.(file).BidirectionalCollection.index(_:Self.Index,offsetBy:Int)*/
    /*Swift.(file).Collection.index(_:Self.Index,offsetBy:Int)*/
    Substring.prototype.indexOffsetBy = function ($info, i, n) {
        var _this = this;
        var result = _cloneStruct(_this._slice.indexOffsetBy({}, i, n));
        preconditionFileLine({}, function () { return String.Index.infix_46_46_46({}, _this._slice._startIndex, _this._slice.endIndex).contains({}, result); }, function () { return "Operation results in an invalid index"; }, '?3', '?3');
        return result;
    };
    /*Swift.(file).Substring.index(_:Substring.Index,offsetBy:Int,limitedBy:Substring.Index)*/
    /*Swift.(file).BidirectionalCollection.index(_:Self.Index,offsetBy:Int,limitedBy:Self.Index)*/
    /*Swift.(file).Collection.index(_:Self.Index,offsetBy:Int,limitedBy:Self.Index)*/
    Substring.prototype.indexOffsetByLimitedBy = function ($info, i, n, limit) {
        var _this = this;
        var result = _this._slice.indexOffsetByLimitedBy({}, i, n, limit);
        preconditionFileLine({}, function () { return infix_63_63({}, result.mapSwift({}, (function ($info, $0) { return String.Index.infix_46_46_46({}, _this._slice._startIndex, _this._slice.endIndex).contains({}, $0); })), function () { return true; }); }, function () { return "Operation results in an invalid index"; }, '?3', '?3');
        return result;
    };
    /*Swift.(file).Substring.distance(from:Substring.Index,to:Substring.Index)*/
    /*Swift.(file).BidirectionalCollection.distance(from:Self.Index,to:Self.Index)*/
    /*Swift.(file).Collection.distance(from:Self.Index,to:Self.Index)*/
    Substring.prototype.distanceFromTo = function ($info, start, end) {
        var _this = this;
        return _this._slice.distanceFromTo({}, start, end);
    };
    /*Swift.(file).Substring.subscript(_:Substring.Index)*/
    /*Swift.(file).BidirectionalCollection.subscript(_:Self.Index)*/
    /*Swift.(file).Collection.subscript(_:Self.Index)*/
    /*Swift.(file).RangeReplaceableCollection.subscript(_:Self.Index)*/
    Substring.prototype.subscript$get = function ($info, i) {
        var _this = this;
        return _this._slice.subscript$get({}, i);
    };
    /*Swift.(file).Substring.replaceSubrange(_:Range<Substring.Index>,with:C)*/
    /*Swift.(file).RangeReplaceableCollection.replaceSubrange(_:Range<Self.Index>,with:C)*/
    Substring.prototype.replaceSubrangeWith = function ($info, bounds, newElements) {
        var _this = this;
        _this._slice.replaceSubrangeWith({ $setThis: function ($val) { return _this._slice = $val; } }, bounds, newElements);
    };
    /*Swift.(file).Substring.replaceSubrange(_:Range<Substring.Index>,with:Substring)*/
    /*Swift.(file).Substring.replaceSubrange(_:Range<Substring.Index>,with:Substring)*/
    Substring.prototype.replaceSubrangeWith = function ($info, bounds, newElements) {
        var _this = this;
        _this.replaceSubrangeWith({ $setThis: function ($val) { return $info.$setThis(_this = _cloneStruct($val)); } }, bounds, newElements._slice);
    };
    /*Swift.(file).Substring.init(decoding:C,as:Encoding.Type)*/
    /*Swift.(file).StringProtocol.init(decoding:C,as:Encoding.Type)*/
    Substring.prototype.initDecodingAs = function ($info, codeUnits, sourceEncoding) {
        var _this = this;
        _this.initString({}, _create(String, 'initDecodingAs', {}, codeUnits, sourceEncoding));
        return;
    };
    /*Swift.(file).Substring.init(cString:UnsafePointer<CChar>)*/
    /*Swift.(file).StringProtocol.init(cString:UnsafePointer<CChar>)*/
    Substring.prototype.initCStringUnsafePointer = function ($info, nullTerminatedUTF8) {
        var _this = this;
        _this.initString({}, _create(String, 'initCStringUnsafePointer', {}, nullTerminatedUTF8));
        return;
    };
    /*Swift.(file).Substring.init(decodingCString:UnsafePointer<Encoding.CodeUnit>,as:Encoding.Type)*/
    /*Swift.(file).StringProtocol.init(decodingCString:UnsafePointer<Encoding.CodeUnit>,as:Encoding.Type)*/
    Substring.prototype.initDecodingCStringUnsafePointerAs = function ($info, nullTerminatedCodeUnits, sourceEncoding) {
        var _this = this;
        _this.initString({}, _create(String, 'initDecodingCStringUnsafePointerAs', {}, nullTerminatedCodeUnits, sourceEncoding));
        return;
    };
    /*Swift.(file).Substring.withCString(_:(UnsafePointer<CChar>) throws -> Result)*/
    /*Swift.(file).StringProtocol.withCString(_:(UnsafePointer<CChar>) throws -> Result)*/
    Substring.prototype.withCString = function ($info, body) {
        var _this = this;
        return _create(String, 'initSubstring', {}, _this).withCString({}, body);
    };
    /*Swift.(file).Substring.withCString(encodedAs:TargetEncoding.Type,_:(UnsafePointer<TargetEncoding.CodeUnit>) throws -> Result)*/
    /*Swift.(file).StringProtocol.withCString(encodedAs:Encoding.Type,_:(UnsafePointer<Encoding.CodeUnit>) throws -> Result)*/
    Substring.prototype.withCStringEncodedAs = function ($info, targetEncoding, body) {
        var _this = this;
        return _create(String, 'initSubstring', {}, _this).withCStringEncodedAs({}, targetEncoding, body);
    };
    /*Swift.(file).Substring.hashValue*/
    Substring.prototype.hashValue$get = function () {
        throw 'unsupported variable Swift.(file).Substring.hashValue in ' + this.constructor.name;
    };
    Object.defineProperty(Substring.prototype, "hashValue", {
        get: function () { return this.hashValue$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).Substring.customMirror*/
    Substring.prototype.customMirror$get = function () {
        var _this = this;
        return _create(String, 'initSubstring', {}, _this).customMirror;
    };
    Object.defineProperty(Substring.prototype, "customMirror", {
        get: function () { return this.customMirror$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).Substring.description*/
    Substring.prototype.description$get = function () {
        var _this = this;
        return _create(String, 'initSubstring', {}, _this);
    };
    Object.defineProperty(Substring.prototype, "description", {
        get: function () { return this.description$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).Substring.debugDescription*/
    Substring.prototype.debugDescription$get = function () {
        var _this = this;
        return _create(String, 'initSubstring', {}, _this).debugDescription;
    };
    Object.defineProperty(Substring.prototype, "debugDescription", {
        get: function () { return this.debugDescription$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).Substring.init(_:String)*/
    /*Swift.(file).LosslessStringConvertible.init(_:String)*/
    Substring.prototype.initString = function ($info, content) {
        var _this = this;
        $info.$setThis(_this = _cloneStruct(_cloneStruct(content.subscriptUnboundedRange$get({}, UnboundedRange_.postfix_46_46_46))));
        return;
    };
    /*Swift.(file).Substring.utf8*/
    Substring.prototype.utf8$get = function () {
        var _this = this;
        return _this._wholeString.utf8.subscriptRange$get({}, String.UTF8View.Index.infix_46_46_60({}, _this.startIndex, _this.endIndex));
    };
    Object.defineProperty(Substring.prototype, "utf8", {
        get: function () { return this.utf8$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).Substring.init(_:Substring.UTF8View)*/
    /*Swift.(file).Substring.init(_:Substring.UTF8View)*/
    Substring.prototype.initSubstringUTF8View = function ($info, content) {
        throw 'unsupported method Swift.(file).Substring.init(_:Substring.UTF8View) in ' + this.constructor.name;
    };
    /*Swift.(file).Substring.utf16*/
    Substring.prototype.utf16$get = function () {
        var _this = this;
        return _this._wholeString.utf16.subscriptRange$get({}, String.UTF16View.Index.infix_46_46_60({}, _this.startIndex, _this.endIndex));
    };
    Object.defineProperty(Substring.prototype, "utf16", {
        get: function () { return this.utf16$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).Substring.init(_:Substring.UTF16View)*/
    /*Swift.(file).Substring.init(_:Substring.UTF16View)*/
    Substring.prototype.initSubstringUTF16View = function ($info, content) {
        throw 'unsupported method Swift.(file).Substring.init(_:Substring.UTF16View) in ' + this.constructor.name;
    };
    /*Swift.(file).Substring.unicodeScalars*/
    Substring.prototype.unicodeScalars$get = function () {
        var _this = this;
        return _this._wholeString.unicodeScalars.subscriptRange$get({}, String.UnicodeScalarView.Index.infix_46_46_60({}, _this.startIndex, _this.endIndex));
    };
    Object.defineProperty(Substring.prototype, "unicodeScalars", {
        get: function () { return this.unicodeScalars$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).Substring.init(_:Substring.UnicodeScalarView)*/
    /*Swift.(file).Substring.init(_:Substring.UnicodeScalarView)*/
    Substring.prototype.initSubstringUnicodeScalarView = function ($info, content) {
        throw 'unsupported method Swift.(file).Substring.init(_:Substring.UnicodeScalarView) in ' + this.constructor.name;
    };
    /*Swift.(file).Substring.init(_:S)*/
    /*Swift.(file).RangeReplaceableCollection.init(_:S)*/
    Substring.prototype.initBuffer = function ($info, _elements) {
        var _this = this;
        var $ifLet0, str_1;
        if ((($ifLet0 = _elements) || true) && $ifLet0 != null && ((str_1 = $ifLet0) || true)) {
            $info.$setThis(_this = _cloneStruct(_cloneStruct(str_1.subscriptUnboundedRange$get({}, UnboundedRange_.postfix_46_46_46))));
            return;
        }
        ;
        var $ifLet2, subStr_3;
        if ((($ifLet2 = _elements) || true) && $ifLet2 != null && ((subStr_3 = $ifLet2) || true)) {
            $info.$setThis(_this = _cloneStruct(_cloneStruct(subStr_3)));
            return;
        }
        ;
        $info.$setThis(_this = _cloneStruct(_cloneStruct(_create(String, 'initBuffer', {}, _elements).subscriptUnboundedRange$get({}, UnboundedRange_.postfix_46_46_46))));
        return;
    };
    /*Swift.(file).Substring.append(contentsOf:S)*/
    /*Swift.(file).RangeReplaceableCollection.append(contentsOf:S)*/
    Substring.prototype.appendContentsOf = function ($info, _elements) {
        var _this = this;
        var string = _create(String, 'initSubstring', {}, _this);
        $info.$setThis(_this = _cloneStruct(_create(Substring, 'init', {})));
        string.appendContentsOf({ $setThis: function ($val) { return string = $val; } }, _elements);
        $info.$setThis(_this = _cloneStruct(_create(Substring, 'initString', {}, string)));
    };
    /*Swift.(file).Substring.lowercased()*/
    /*Swift.(file).StringProtocol.lowercased()*/
    Substring.prototype.lowercased = function ($info) {
        var _this = this;
        return _create(String, 'initSubstring', {}, _this).lowercased({});
    };
    /*Swift.(file).Substring.uppercased()*/
    /*Swift.(file).StringProtocol.uppercased()*/
    Substring.prototype.uppercased = function ($info) {
        var _this = this;
        return _create(String, 'initSubstring', {}, _this).uppercased({});
    };
    /*Swift.(file).Substring.filter(_:(Substring.Element) throws -> Bool)*/
    /*Swift.(file).Substring.filter(_:(Substring.Element) throws -> Bool)*/
    Substring.prototype.filterSwift = function ($info, isIncluded) {
        var _this = this;
        return _create(String, 'initBuffer', {}, _this.lazy.filterSwift({}, isIncluded));
    };
    /*Swift.(file).Substring.write(_:String)*/
    /*Swift.(file).TextOutputStream.write(_:String)*/
    Substring.prototype.write = function ($info, other) {
        var _this = this;
        _this.appendContentsOf({ $setThis: function ($val) { return $info.$setThis(_this = _cloneStruct($val)); } }, other);
    };
    /*Swift.(file).Substring.write(to:Target)*/
    /*Swift.(file).TextOutputStreamable.write(to:Target)*/
    Substring.prototype.writeTo = function ($info, target$inout) {
        var _this = this;
        var target = target$inout.get();
        var $result = (function () {
            target.write({ $setThis: function ($val) { return target = $val; } }, _create(String, 'initSubstring', {}, _this));
        })();
        target$inout.set(target);
        return $result;
    };
    /*Swift.(file).Substring.init(unicodeScalarLiteral:String)*/
    /*Swift.(file).ExpressibleByUnicodeScalarLiteral.init(unicodeScalarLiteral:Self.UnicodeScalarLiteralType)*/
    Substring.prototype.initUnicodeScalarLiteral = function ($info, value) {
        var _this = this;
        _this.initString({}, value);
        return;
    };
    /*Swift.(file).Substring.init(extendedGraphemeClusterLiteral:String)*/
    /*Swift.(file).ExpressibleByExtendedGraphemeClusterLiteral.init(extendedGraphemeClusterLiteral:Self.ExtendedGraphemeClusterLiteralType)*/
    Substring.prototype.initExtendedGraphemeClusterLiteral = function ($info, value) {
        var _this = this;
        _this.initString({}, value);
        return;
    };
    /*Swift.(file).Substring.init(stringLiteral:String)*/
    /*Swift.(file).ExpressibleByStringLiteral.init(stringLiteral:Self.StringLiteralType)*/
    Substring.prototype.initStringLiteral = function ($info, value) {
        var _this = this;
        _this.initString({}, value);
        return;
    };
    /*Swift.(file).Substring.subscript(_:Range<Substring.Index>)*/
    /*Swift.(file).BidirectionalCollection.subscript(_:Range<Self.Index>)*/
    /*Swift.(file).Collection.subscript(_:Range<Self.Index>)*/
    /*Swift.(file).RangeReplaceableCollection.subscript(_:Range<Self.Index>)*/
    Substring.prototype.subscriptRange$get = function ($info, r) {
        var _this = this;
        return _create(Substring, 'initSlice', {}, _this._slice.subscriptRange$get({}, r));
    };
    /*Swift.(file).Substring.characters*/
    Substring.prototype.characters$get = function () {
        var _this = this;
        return _this;
    };
    Object.defineProperty(Substring.prototype, "characters", {
        get: function () { return this.characters$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).Substring.withMutableCharacters(_:(inout Substring) -> R)*/
    /*Swift.(file).Substring.withMutableCharacters(_:(inout Substring) -> R)*/
    Substring.prototype.withMutableCharacters = function ($info, body) {
        var _this = this;
        return body({}, { get: function () { return _this; }, set: function ($val) { return $info.$setThis(_this = _cloneStruct($val)); } });
    };
    /*Swift.(file).Substring.subscript(_:ClosedRange<Substring.Index>)*/
    /*Swift.(file).Substring.subscript(_:ClosedRange<Substring.Index>)*/
    Substring.prototype.subscript$get = function ($info, bounds) {
        throw 'unsupported method Swift.(file).Substring.subscript(_:ClosedRange<Substring.Index>) in ' + this.constructor.name;
    };
    /*Swift.(file).Substring.customPlaygroundQuickLook*/
    Substring.prototype.customPlaygroundQuickLook$get = function () {
        var _this = this;
        return _create(String, 'initSubstring', {}, _this).customPlaygroundQuickLook;
    };
    Object.defineProperty(Substring.prototype, "customPlaygroundQuickLook", {
        get: function () { return this.customPlaygroundQuickLook$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    Substring.prototype.init$vars = function () {
    };
    var _52, _53, _54;
    Substring.$struct = true;
    Substring.$infoAddress = '';
    Substring.UTF8View = (_52 = /** @class */ (function () {
            function class_76() {
            }
            /*Swift.(file).Substring.UTF8View.init(_slice:Slice<String.UTF8View>)*/
            /*Swift.(file).Substring.UTF8View.init(_slice:Slice<String.UTF8View>)*/
            class_76.prototype.init_sliceSlice = function ($info, _slice) {
                throw 'unsupported method Swift.(file).Substring.UTF8View.init(_slice:Slice<String.UTF8View>) in ' + this.constructor.name;
            };
            /*Swift.(file).Substring.UTF8View.init(_:String.UTF8View,_bounds:Range<Substring.UTF8View.Index>)*/
            /*Swift.(file).Substring.UTF8View.init(_:String.UTF8View,_bounds:Range<Substring.UTF8View.Index>)*/
            class_76.prototype.initStringUTF8View_boundsRange = function ($info, base, _bounds) {
                throw 'unsupported method Swift.(file).Substring.UTF8View.init(_:String.UTF8View,_bounds:Range<Substring.UTF8View.Index>) in ' + this.constructor.name;
            };
            /*Swift.(file).Substring.UTF8View.startIndex*/
            class_76.prototype.startIndex$get = function () {
                var _this = this;
                return _this._slice.startIndex;
            };
            Object.defineProperty(class_76.prototype, "startIndex", {
                get: function () { return this.startIndex$get(); },
                enumerable: true,
                configurable: true
            });
            ;
            /*Swift.(file).Substring.UTF8View.endIndex*/
            class_76.prototype.endIndex$get = function () {
                var _this = this;
                return _this._slice.endIndex;
            };
            Object.defineProperty(class_76.prototype, "endIndex", {
                get: function () { return this.endIndex$get(); },
                enumerable: true,
                configurable: true
            });
            ;
            /*Swift.(file).Substring.UTF8View.subscript(_:Substring.UTF8View.Index)*/
            /*Swift.(file).Collection.subscript(_:Self.Index)*/
            /*Swift.(file).BidirectionalCollection.subscript(_:Self.Index)*/
            class_76.prototype.subscript$get = function ($info, index) {
                var _this = this;
                return _this._slice.subscript$get({}, index);
            };
            /*Swift.(file).Substring.UTF8View.indices*/
            class_76.prototype.indices$get = function () {
                var _this = this;
                return _this._slice.indices;
            };
            Object.defineProperty(class_76.prototype, "indices", {
                get: function () { return this.indices$get(); },
                enumerable: true,
                configurable: true
            });
            ;
            /*Swift.(file).Substring.UTF8View.index(after:Substring.UTF8View.Index)*/
            /*Swift.(file).Collection.index(after:Self.Index)*/
            /*Swift.(file).BidirectionalCollection.index(after:Self.Index)*/
            class_76.prototype.indexAfter = function ($info, i) {
                var _this = this;
                return _this._slice.indexAfter({}, i);
            };
            /*Swift.(file).Substring.UTF8View.formIndex(after:Substring.UTF8View.Index)*/
            /*Swift.(file).Collection.formIndex(after:Self.Index)*/
            /*Swift.(file).BidirectionalCollection.formIndex(after:Self.Index)*/
            class_76.prototype.formIndexAfter = function ($info, i$inout) {
                var _this = this;
                var i = i$inout.get();
                var $result = (function () {
                    _this._slice.formIndexAfter({}, { get: function () { return i; }, set: function ($val) { return i = $val; } });
                })();
                i$inout.set(i);
                return $result;
            };
            /*Swift.(file).Substring.UTF8View.index(_:Substring.UTF8View.Index,offsetBy:Int)*/
            /*Swift.(file).Collection.index(_:Self.Index,offsetBy:Int)*/
            /*Swift.(file).BidirectionalCollection.index(_:Self.Index,offsetBy:Int)*/
            class_76.prototype.indexOffsetBy = function ($info, i, n) {
                var _this = this;
                return _this._slice.indexOffsetBy({}, i, n);
            };
            /*Swift.(file).Substring.UTF8View.index(_:Substring.UTF8View.Index,offsetBy:Int,limitedBy:Substring.UTF8View.Index)*/
            /*Swift.(file).Collection.index(_:Self.Index,offsetBy:Int,limitedBy:Self.Index)*/
            /*Swift.(file).BidirectionalCollection.index(_:Self.Index,offsetBy:Int,limitedBy:Self.Index)*/
            class_76.prototype.indexOffsetByLimitedBy = function ($info, i, n, limit) {
                var _this = this;
                return _this._slice.indexOffsetByLimitedBy({}, i, n, limit);
            };
            /*Swift.(file).Substring.UTF8View.distance(from:Substring.UTF8View.Index,to:Substring.UTF8View.Index)*/
            /*Swift.(file).Collection.distance(from:Self.Index,to:Self.Index)*/
            /*Swift.(file).BidirectionalCollection.distance(from:Self.Index,to:Self.Index)*/
            class_76.prototype.distanceFromTo = function ($info, start, end) {
                var _this = this;
                return _this._slice.distanceFromTo({}, start, end);
            };
            /*Swift.(file).Substring.UTF8View.index(before:Substring.UTF8View.Index)*/
            /*Swift.(file).BidirectionalCollection.index(before:Self.Index)*/
            class_76.prototype.indexBefore = function ($info, i) {
                var _this = this;
                return _this._slice.indexBefore({}, i);
            };
            /*Swift.(file).Substring.UTF8View.formIndex(before:Substring.UTF8View.Index)*/
            /*Swift.(file).BidirectionalCollection.formIndex(before:Self.Index)*/
            class_76.prototype.formIndexBefore = function ($info, i$inout) {
                var _this = this;
                var i = i$inout.get();
                var $result = (function () {
                    _this._slice.formIndexBefore({}, { get: function () { return i; }, set: function ($val) { return i = $val; } });
                })();
                i$inout.set(i);
                return $result;
            };
            /*Swift.(file).Substring.UTF8View.subscript(_:Range<Substring.UTF8View.Index>)*/
            /*Swift.(file).Collection.subscript(_:Range<Self.Index>)*/
            /*Swift.(file).BidirectionalCollection.subscript(_:Range<Self.Index>)*/
            class_76.prototype.subscriptRange$get = function ($info, r) {
                var _this = this;
                preconditionFileLine({}, function () { return Bool.infix_38_38({}, Substring.UTF8View.Index.infix_62_61({}, r.lowerBound, _this.startIndex), function () { return Substring.UTF8View.Index.infix_60_61({}, r.upperBound, _this.endIndex); }); }, function () { return "UTF8View index range out of bounds"; }, '?3', '?3');
                return _create(Substring.UTF8View, 'initStringUTF8View_boundsRange', {}, _this._slice.base, r);
            };
            class_76.prototype.init$vars = function () {
            };
            return class_76;
        }()),
        _52.$struct = true,
        _52.$infoAddress = '',
        _52);
    Substring.UTF16View = (_53 = /** @class */ (function () {
            function class_77() {
            }
            /*Swift.(file).Substring.UTF16View.init(_slice:Slice<String.UTF16View>)*/
            /*Swift.(file).Substring.UTF16View.init(_slice:Slice<String.UTF16View>)*/
            class_77.prototype.init_sliceSlice = function ($info, _slice) {
                throw 'unsupported method Swift.(file).Substring.UTF16View.init(_slice:Slice<String.UTF16View>) in ' + this.constructor.name;
            };
            /*Swift.(file).Substring.UTF16View.init(_:String.UTF16View,_bounds:Range<Substring.UTF16View.Index>)*/
            /*Swift.(file).Substring.UTF16View.init(_:String.UTF16View,_bounds:Range<Substring.UTF16View.Index>)*/
            class_77.prototype.initStringUTF16View_boundsRange = function ($info, base, _bounds) {
                throw 'unsupported method Swift.(file).Substring.UTF16View.init(_:String.UTF16View,_bounds:Range<Substring.UTF16View.Index>) in ' + this.constructor.name;
            };
            /*Swift.(file).Substring.UTF16View.startIndex*/
            class_77.prototype.startIndex$get = function () {
                var _this = this;
                return _this._slice.startIndex;
            };
            Object.defineProperty(class_77.prototype, "startIndex", {
                get: function () { return this.startIndex$get(); },
                enumerable: true,
                configurable: true
            });
            ;
            /*Swift.(file).Substring.UTF16View.endIndex*/
            class_77.prototype.endIndex$get = function () {
                var _this = this;
                return _this._slice.endIndex;
            };
            Object.defineProperty(class_77.prototype, "endIndex", {
                get: function () { return this.endIndex$get(); },
                enumerable: true,
                configurable: true
            });
            ;
            /*Swift.(file).Substring.UTF16View.subscript(_:Substring.UTF16View.Index)*/
            /*Swift.(file).BidirectionalCollection.subscript(_:Self.Index)*/
            /*Swift.(file).Collection.subscript(_:Self.Index)*/
            class_77.prototype.subscript$get = function ($info, index) {
                var _this = this;
                return _this._slice.subscript$get({}, index);
            };
            /*Swift.(file).Substring.UTF16View.indices*/
            class_77.prototype.indices$get = function () {
                var _this = this;
                return _this._slice.indices;
            };
            Object.defineProperty(class_77.prototype, "indices", {
                get: function () { return this.indices$get(); },
                enumerable: true,
                configurable: true
            });
            ;
            /*Swift.(file).Substring.UTF16View.index(after:Substring.UTF16View.Index)*/
            /*Swift.(file).BidirectionalCollection.index(after:Self.Index)*/
            /*Swift.(file).Collection.index(after:Self.Index)*/
            class_77.prototype.indexAfter = function ($info, i) {
                var _this = this;
                return _this._slice.indexAfter({}, i);
            };
            /*Swift.(file).Substring.UTF16View.formIndex(after:Substring.UTF16View.Index)*/
            /*Swift.(file).BidirectionalCollection.formIndex(after:Self.Index)*/
            /*Swift.(file).Collection.formIndex(after:Self.Index)*/
            class_77.prototype.formIndexAfter = function ($info, i$inout) {
                var _this = this;
                var i = i$inout.get();
                var $result = (function () {
                    _this._slice.formIndexAfter({}, { get: function () { return i; }, set: function ($val) { return i = $val; } });
                })();
                i$inout.set(i);
                return $result;
            };
            /*Swift.(file).Substring.UTF16View.index(_:Substring.UTF16View.Index,offsetBy:Int)*/
            /*Swift.(file).BidirectionalCollection.index(_:Self.Index,offsetBy:Int)*/
            /*Swift.(file).Collection.index(_:Self.Index,offsetBy:Int)*/
            class_77.prototype.indexOffsetBy = function ($info, i, n) {
                var _this = this;
                return _this._slice.indexOffsetBy({}, i, n);
            };
            /*Swift.(file).Substring.UTF16View.index(_:Substring.UTF16View.Index,offsetBy:Int,limitedBy:Substring.UTF16View.Index)*/
            /*Swift.(file).BidirectionalCollection.index(_:Self.Index,offsetBy:Int,limitedBy:Self.Index)*/
            /*Swift.(file).Collection.index(_:Self.Index,offsetBy:Int,limitedBy:Self.Index)*/
            class_77.prototype.indexOffsetByLimitedBy = function ($info, i, n, limit) {
                var _this = this;
                return _this._slice.indexOffsetByLimitedBy({}, i, n, limit);
            };
            /*Swift.(file).Substring.UTF16View.distance(from:Substring.UTF16View.Index,to:Substring.UTF16View.Index)*/
            /*Swift.(file).BidirectionalCollection.distance(from:Self.Index,to:Self.Index)*/
            /*Swift.(file).Collection.distance(from:Self.Index,to:Self.Index)*/
            class_77.prototype.distanceFromTo = function ($info, start, end) {
                var _this = this;
                return _this._slice.distanceFromTo({}, start, end);
            };
            /*Swift.(file).Substring.UTF16View.index(before:Substring.UTF16View.Index)*/
            /*Swift.(file).BidirectionalCollection.index(before:Self.Index)*/
            class_77.prototype.indexBefore = function ($info, i) {
                var _this = this;
                return _this._slice.indexBefore({}, i);
            };
            /*Swift.(file).Substring.UTF16View.formIndex(before:Substring.UTF16View.Index)*/
            /*Swift.(file).BidirectionalCollection.formIndex(before:Self.Index)*/
            class_77.prototype.formIndexBefore = function ($info, i$inout) {
                var _this = this;
                var i = i$inout.get();
                var $result = (function () {
                    _this._slice.formIndexBefore({}, { get: function () { return i; }, set: function ($val) { return i = $val; } });
                })();
                i$inout.set(i);
                return $result;
            };
            /*Swift.(file).Substring.UTF16View.subscript(_:Range<Substring.UTF16View.Index>)*/
            /*Swift.(file).BidirectionalCollection.subscript(_:Range<Self.Index>)*/
            /*Swift.(file).Collection.subscript(_:Range<Self.Index>)*/
            class_77.prototype.subscriptRange$get = function ($info, r) {
                var _this = this;
                return _create(Substring.UTF16View, 'initStringUTF16View_boundsRange', {}, _this._slice.base, r);
            };
            class_77.prototype.init$vars = function () {
            };
            return class_77;
        }()),
        _53.$struct = true,
        _53.$infoAddress = '',
        _53);
    Substring.UnicodeScalarView = (_54 = /** @class */ (function () {
            function class_78() {
            }
            /*Swift.(file).Substring.UnicodeScalarView.init(_slice:Slice<String.UnicodeScalarView>)*/
            /*Swift.(file).Substring.UnicodeScalarView.init(_slice:Slice<String.UnicodeScalarView>)*/
            class_78.prototype.init_sliceSlice = function ($info, _slice) {
                throw 'unsupported method Swift.(file).Substring.UnicodeScalarView.init(_slice:Slice<String.UnicodeScalarView>) in ' + this.constructor.name;
            };
            /*Swift.(file).Substring.UnicodeScalarView.init(_:String.UnicodeScalarView,_bounds:Range<Substring.UnicodeScalarView.Index>)*/
            /*Swift.(file).Substring.UnicodeScalarView.init(_:String.UnicodeScalarView,_bounds:Range<Substring.UnicodeScalarView.Index>)*/
            class_78.prototype.initStringUnicodeScalarView_boundsRange = function ($info, base, _bounds) {
                throw 'unsupported method Swift.(file).Substring.UnicodeScalarView.init(_:String.UnicodeScalarView,_bounds:Range<Substring.UnicodeScalarView.Index>) in ' + this.constructor.name;
            };
            /*Swift.(file).Substring.UnicodeScalarView.startIndex*/
            class_78.prototype.startIndex$get = function () {
                var _this = this;
                return _this._slice.startIndex;
            };
            Object.defineProperty(class_78.prototype, "startIndex", {
                get: function () { return this.startIndex$get(); },
                enumerable: true,
                configurable: true
            });
            ;
            /*Swift.(file).Substring.UnicodeScalarView.endIndex*/
            class_78.prototype.endIndex$get = function () {
                var _this = this;
                return _this._slice.endIndex;
            };
            Object.defineProperty(class_78.prototype, "endIndex", {
                get: function () { return this.endIndex$get(); },
                enumerable: true,
                configurable: true
            });
            ;
            /*Swift.(file).Substring.UnicodeScalarView.subscript(_:Substring.UnicodeScalarView.Index)*/
            /*Swift.(file).BidirectionalCollection.subscript(_:Self.Index)*/
            /*Swift.(file).Collection.subscript(_:Self.Index)*/
            /*Swift.(file).RangeReplaceableCollection.subscript(_:Self.Index)*/
            class_78.prototype.subscript$get = function ($info, index) {
                var _this = this;
                return _this._slice.subscript$get({}, index);
            };
            /*Swift.(file).Substring.UnicodeScalarView.indices*/
            class_78.prototype.indices$get = function () {
                var _this = this;
                return _this._slice.indices;
            };
            Object.defineProperty(class_78.prototype, "indices", {
                get: function () { return this.indices$get(); },
                enumerable: true,
                configurable: true
            });
            ;
            /*Swift.(file).Substring.UnicodeScalarView.index(after:Substring.UnicodeScalarView.Index)*/
            /*Swift.(file).BidirectionalCollection.index(after:Self.Index)*/
            /*Swift.(file).Collection.index(after:Self.Index)*/
            class_78.prototype.indexAfter = function ($info, i) {
                var _this = this;
                return _this._slice.indexAfter({}, i);
            };
            /*Swift.(file).Substring.UnicodeScalarView.formIndex(after:Substring.UnicodeScalarView.Index)*/
            /*Swift.(file).BidirectionalCollection.formIndex(after:Self.Index)*/
            /*Swift.(file).Collection.formIndex(after:Self.Index)*/
            class_78.prototype.formIndexAfter = function ($info, i$inout) {
                var _this = this;
                var i = i$inout.get();
                var $result = (function () {
                    _this._slice.formIndexAfter({}, { get: function () { return i; }, set: function ($val) { return i = $val; } });
                })();
                i$inout.set(i);
                return $result;
            };
            /*Swift.(file).Substring.UnicodeScalarView.index(_:Substring.UnicodeScalarView.Index,offsetBy:Int)*/
            /*Swift.(file).BidirectionalCollection.index(_:Self.Index,offsetBy:Int)*/
            /*Swift.(file).Collection.index(_:Self.Index,offsetBy:Int)*/
            class_78.prototype.indexOffsetBy = function ($info, i, n) {
                var _this = this;
                return _this._slice.indexOffsetBy({}, i, n);
            };
            /*Swift.(file).Substring.UnicodeScalarView.index(_:Substring.UnicodeScalarView.Index,offsetBy:Int,limitedBy:Substring.UnicodeScalarView.Index)*/
            /*Swift.(file).BidirectionalCollection.index(_:Self.Index,offsetBy:Int,limitedBy:Self.Index)*/
            /*Swift.(file).Collection.index(_:Self.Index,offsetBy:Int,limitedBy:Self.Index)*/
            class_78.prototype.indexOffsetByLimitedBy = function ($info, i, n, limit) {
                var _this = this;
                return _this._slice.indexOffsetByLimitedBy({}, i, n, limit);
            };
            /*Swift.(file).Substring.UnicodeScalarView.distance(from:Substring.UnicodeScalarView.Index,to:Substring.UnicodeScalarView.Index)*/
            /*Swift.(file).BidirectionalCollection.distance(from:Self.Index,to:Self.Index)*/
            /*Swift.(file).Collection.distance(from:Self.Index,to:Self.Index)*/
            class_78.prototype.distanceFromTo = function ($info, start, end) {
                var _this = this;
                return _this._slice.distanceFromTo({}, start, end);
            };
            /*Swift.(file).Substring.UnicodeScalarView.index(before:Substring.UnicodeScalarView.Index)*/
            /*Swift.(file).BidirectionalCollection.index(before:Self.Index)*/
            class_78.prototype.indexBefore = function ($info, i) {
                var _this = this;
                return _this._slice.indexBefore({}, i);
            };
            /*Swift.(file).Substring.UnicodeScalarView.formIndex(before:Substring.UnicodeScalarView.Index)*/
            /*Swift.(file).BidirectionalCollection.formIndex(before:Self.Index)*/
            class_78.prototype.formIndexBefore = function ($info, i$inout) {
                var _this = this;
                var i = i$inout.get();
                var $result = (function () {
                    _this._slice.formIndexBefore({}, { get: function () { return i; }, set: function ($val) { return i = $val; } });
                })();
                i$inout.set(i);
                return $result;
            };
            /*Swift.(file).Substring.UnicodeScalarView.subscript(_:Range<Substring.UnicodeScalarView.Index>)*/
            /*Swift.(file).BidirectionalCollection.subscript(_:Range<Self.Index>)*/
            /*Swift.(file).Collection.subscript(_:Range<Self.Index>)*/
            /*Swift.(file).RangeReplaceableCollection.subscript(_:Range<Self.Index>)*/
            class_78.prototype.subscriptRange$get = function ($info, r) {
                var _this = this;
                return _create(Substring.UnicodeScalarView, 'initStringUnicodeScalarView_boundsRange', {}, _this._slice.base, r);
            };
            /*Swift.(file).Substring.UnicodeScalarView.init()*/
            /*Swift.(file).RangeReplaceableCollection.init()*/
            class_78.prototype.init = function ($info) {
                var _this = this;
                _this._slice = _create(Slice, 'init', {});
                return;
            };
            /*Swift.(file).Substring.UnicodeScalarView.replaceSubrange(_:Range<Substring.UnicodeScalarView.Index>,with:C)*/
            /*Swift.(file).RangeReplaceableCollection.replaceSubrange(_:Range<Self.Index>,with:C)*/
            class_78.prototype.replaceSubrangeWith = function ($info, target, replacement) {
                var _this = this;
                _this._slice.replaceSubrangeWith({ $setThis: function ($val) { return _this._slice = $val; } }, target, replacement);
            };
            class_78.prototype.init$vars = function () {
            };
            return class_78;
        }()),
        _54.$struct = true,
        _54.$infoAddress = '',
        _54);
    return Substring;
}());
if (typeof BidirectionalCollection$implementation != 'undefined')
    _mixin(Substring.UTF8View, BidirectionalCollection$implementation, false);
if (typeof BidirectionalCollection$implementation != 'undefined')
    _mixin(Substring.UTF16View, BidirectionalCollection$implementation, false);
if (typeof BidirectionalCollection$implementation != 'undefined')
    _mixin(Substring.UnicodeScalarView, BidirectionalCollection$implementation, false);
if (typeof RangeReplaceableCollection$implementation != 'undefined')
    _mixin(Substring.UnicodeScalarView, RangeReplaceableCollection$implementation, false);
if (typeof _HasContiguousBytes$implementation != 'undefined')
    _mixin(Substring, _HasContiguousBytes$implementation, false);
if (typeof Equatable$implementation != 'undefined')
    _mixin(Substring, Equatable$implementation, false);
if (typeof StringProtocol$implementation != 'undefined')
    _mixin(Substring, StringProtocol$implementation, false);
if (typeof CustomReflectable$implementation != 'undefined')
    _mixin(Substring, CustomReflectable$implementation, false);
if (typeof CustomStringConvertible$implementation != 'undefined')
    _mixin(Substring, CustomStringConvertible$implementation, false);
if (typeof CustomDebugStringConvertible$implementation != 'undefined')
    _mixin(Substring, CustomDebugStringConvertible$implementation, false);
if (typeof LosslessStringConvertible$implementation != 'undefined')
    _mixin(Substring, LosslessStringConvertible$implementation, false);
if (typeof RangeReplaceableCollection$implementation != 'undefined')
    _mixin(Substring, RangeReplaceableCollection$implementation, false);
if (typeof TextOutputStream$implementation != 'undefined')
    _mixin(Substring, TextOutputStream$implementation, false);
if (typeof TextOutputStreamable$implementation != 'undefined')
    _mixin(Substring, TextOutputStreamable$implementation, false);
if (typeof ExpressibleByUnicodeScalarLiteral$implementation != 'undefined')
    _mixin(Substring, ExpressibleByUnicodeScalarLiteral$implementation, false);
if (typeof ExpressibleByExtendedGraphemeClusterLiteral$implementation != 'undefined')
    _mixin(Substring, ExpressibleByExtendedGraphemeClusterLiteral$implementation, false);
if (typeof ExpressibleByStringLiteral$implementation != 'undefined')
    _mixin(Substring, ExpressibleByStringLiteral$implementation, false);
if (typeof _CustomPlaygroundQuickLookable$implementation != 'undefined')
    _mixin(Substring, _CustomPlaygroundQuickLookable$implementation, false);
var _UIntBuffer = /** @class */ (function () {
    function _UIntBuffer() {
    }
    /*Swift.(file)._UIntBuffer.init(_storage:_UIntBuffer<Element>.Storage,_bitCount:UInt8)*/
    /*Swift.(file)._UIntBuffer.init(_storage:_UIntBuffer<Element>.Storage,_bitCount:UInt8)*/
    _UIntBuffer.prototype.init_storage_UIntBufferStorage_bitCountUInt8 = function ($info, _storage, _bitCount) {
        throw 'unsupported method Swift.(file)._UIntBuffer.init(_storage:_UIntBuffer<Element>.Storage,_bitCount:UInt8) in ' + this.constructor.name;
    };
    /*Swift.(file)._UIntBuffer.init(containing:Element)*/
    /*Swift.(file)._UIntBuffer.init(containing:Element)*/
    _UIntBuffer.prototype.initContaining = function ($info, e) {
        throw 'unsupported method Swift.(file)._UIntBuffer.init(containing:Element) in ' + this.constructor.name;
    };
    /*Swift.(file)._UIntBuffer.makeIterator()*/
    /*Swift.(file).Sequence.makeIterator()*/
    /*Swift.(file).Collection.makeIterator()*/
    _UIntBuffer.prototype.makeIterator = function ($info) {
        var _this = this;
        return _create(_UIntBuffer.Iterator, 'init_UIntBuffer', {}, _this);
    };
    /*Swift.(file)._UIntBuffer.startIndex*/
    _UIntBuffer.prototype.startIndex$get = function () {
        var _this = this;
        return _create(_UIntBuffer.Index, 'initBitOffsetUInt8', {}, 0);
    };
    Object.defineProperty(_UIntBuffer.prototype, "startIndex", {
        get: function () { return this.startIndex$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file)._UIntBuffer.endIndex*/
    _UIntBuffer.prototype.endIndex$get = function () {
        var _this = this;
        return _create(_UIntBuffer.Index, 'initBitOffsetUInt8', {}, _this._bitCount);
    };
    Object.defineProperty(_UIntBuffer.prototype, "endIndex", {
        get: function () { return this.endIndex$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file)._UIntBuffer.index(after:_UIntBuffer<Element>.Index)*/
    /*Swift.(file).BidirectionalCollection.index(after:Self.Index)*/
    /*Swift.(file).Collection.index(after:Self.Index)*/
    /*Swift.(file).RandomAccessCollection.index(after:Self.Index)*/
    _UIntBuffer.prototype.indexAfter = function ($info, i) {
        var _this = this;
        return _create(_UIntBuffer.Index, 'initBitOffsetUInt8', {}, UInt8.infix_38_43({}, i.bitOffset, _this._elementWidth));
    };
    /*Swift.(file)._UIntBuffer.subscript(_:_UIntBuffer<Element>.Index)*/
    /*Swift.(file).BidirectionalCollection.subscript(_:Self.Index)*/
    /*Swift.(file).Collection.subscript(_:Self.Index)*/
    /*Swift.(file).RandomAccessCollection.subscript(_:Self.Index)*/
    /*Swift.(file).RangeReplaceableCollection.subscript(_:Self.Index)*/
    _UIntBuffer.prototype.subscript$get = function ($info, i) {
        var _this = this;
        return _create(((function () { throw '!unclarifiedGeneric:Element'; })()), 'initTruncatingIfNeeded', {}, _UIntBuffer.Storage.infix_38_62_62({}, _this._storage, i.bitOffset));
    };
    /*Swift.(file)._UIntBuffer.index(before:_UIntBuffer<Element>.Index)*/
    /*Swift.(file).BidirectionalCollection.index(before:Self.Index)*/
    /*Swift.(file).RandomAccessCollection.index(before:Self.Index)*/
    _UIntBuffer.prototype.indexBefore = function ($info, i) {
        var _this = this;
        return _create(_UIntBuffer.Index, 'initBitOffsetUInt8', {}, UInt8.infix_38_45({}, i.bitOffset, _this._elementWidth));
    };
    /*Swift.(file)._UIntBuffer.index(_:_UIntBuffer<Element>.Index,offsetBy:Int)*/
    /*Swift.(file).BidirectionalCollection.index(_:Self.Index,offsetBy:Int)*/
    /*Swift.(file).Collection.index(_:Self.Index,offsetBy:Int)*/
    /*Swift.(file).RandomAccessCollection.index(_:Self.Index,offsetBy:Int)*/
    _UIntBuffer.prototype.indexOffsetBy = function ($info, i, n) {
        var _this = this;
        var x = Int.infix_38_43({}, _create(Int, 'initT', {}, i.bitOffset), Int.infix_38_42({}, n, ((function () { throw '!unclarifiedGeneric:Element'; })()).bitWidth));
        return _create(_UIntBuffer.Index, 'initBitOffsetUInt8', {}, _create(UInt8, 'initTruncatingIfNeeded', {}, x));
    };
    /*Swift.(file)._UIntBuffer.distance(from:_UIntBuffer<Element>.Index,to:_UIntBuffer<Element>.Index)*/
    /*Swift.(file).BidirectionalCollection.distance(from:Self.Index,to:Self.Index)*/
    /*Swift.(file).Collection.distance(from:Self.Index,to:Self.Index)*/
    /*Swift.(file).RandomAccessCollection.distance(from:Self.Index,to:Self.Index)*/
    _UIntBuffer.prototype.distanceFromTo = function ($info, i, j) {
        var _this = this;
        return Int.infix_47({}, Int.infix_38_45({}, _create(Int, 'initT', {}, j.bitOffset), _create(Int, 'initT', {}, i.bitOffset)), ((function () { throw '!unclarifiedGeneric:Element'; })()).bitWidth);
    };
    /*Swift.(file)._UIntBuffer.init()*/
    /*Swift.(file).RangeReplaceableCollection.init()*/
    _UIntBuffer.prototype.init = function ($info) {
        var _this = this;
        _this._storage = 0;
        _this._bitCount = 0;
        return;
    };
    /*Swift.(file)._UIntBuffer.capacity*/
    _UIntBuffer.prototype.capacity$get = function () {
        var _this = this;
        return Int.infix_47({}, _UIntBuffer.Storage.bitWidth, ((function () { throw '!unclarifiedGeneric:Element'; })()).bitWidth);
    };
    Object.defineProperty(_UIntBuffer.prototype, "capacity", {
        get: function () { return this.capacity$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file)._UIntBuffer.append(_:Element)*/
    /*Swift.(file).RangeReplaceableCollection.append(_:Self.Element)*/
    _UIntBuffer.prototype.append = function ($info, newElement) {
        var _this = this;
        preconditionFileLine({}, function () { return Int.infix_60_61({}, Int.infix_43({}, _this.count, 1), _this.capacity); }, function () { return String(); } /*!default_value*/, '?3', '?3');
        UInt32.infix_38_61({}, { get: function () { return _this._storage; }, set: function ($val) { return _this._storage = $val; } }, UInt32.prefix_126({}, _UIntBuffer.Storage.infix_38_60_60({}, _create(_UIntBuffer.Storage, 'initT', {}, ((function () { throw '!unclarifiedGeneric:Element'; })()).max), _this._bitCount)));
        UInt32.infix_124_61({}, { get: function () { return _this._storage; }, set: function ($val) { return _this._storage = $val; } }, UInt32.infix_38_60_60({}, _create(_UIntBuffer.Storage, 'initT', {}, newElement), _this._bitCount));
        _this._bitCount = UInt8.infix_38_43({}, _this._bitCount, _this._elementWidth);
    };
    /*Swift.(file)._UIntBuffer.removeFirst()*/
    /*Swift.(file).RangeReplaceableCollection.removeFirst()*/
    _UIntBuffer.prototype.removeFirst = function ($info) {
        var _this = this;
        preconditionFileLine({}, function () { return Bool.prefix_33({}, _this.isEmpty); }, function () { return String(); } /*!default_value*/, '?3', '?3');
        var result = _create(((function () { throw '!unclarifiedGeneric:Element'; })()), 'initTruncatingIfNeeded', {}, _this._storage);
        _this._bitCount = UInt8.infix_38_45({}, _this._bitCount, _this._elementWidth);
        _this._storage = _UIntBuffer.Storage.prototype._fullShiftRight.call(_this._storage, {}, _this._elementWidth);
        return result;
    };
    /*Swift.(file)._UIntBuffer.replaceSubrange(_:Range<_UIntBuffer<Element>.Index>,with:C)*/
    /*Swift.(file).RangeReplaceableCollection.replaceSubrange(_:Range<Self.Index>,with:C)*/
    _UIntBuffer.prototype.replaceSubrangeWith = function ($info, target, replacement) {
        var _this = this;
        preconditionFileLine({}, function () { return UInt8.infix_46_46_60({}, 0, _this._bitCount)._contains_({}, UInt8.infix_46_46_60({}, target.lowerBound.bitOffset, target.upperBound.bitOffset)); }, function () { return String(); } /*!default_value*/, '?3', '?3');
        var replacement1 = _create(_UIntBuffer, 'initBuffer', {}, replacement);
        var targetCount = _this.distanceFromTo({}, target.lowerBound, target.upperBound);
        var growth = Int.infix_38_45({}, replacement1.count, targetCount);
        preconditionFileLine({}, function () { return Int.infix_60_61({}, Int.infix_43({}, _this.count, growth), _this.capacity); }, function () { return String(); } /*!default_value*/, '?3', '?3');
        var headCount = _this.distanceFromTo({}, _this.startIndex, target.lowerBound);
        var tailOffset = _this.distanceFromTo({}, _this.startIndex, target.upperBound);
        var w = ((function () { throw '!unclarifiedGeneric:Element'; })()).bitWidth;
        var headBits = UInt32.infix_38({}, _this._storage, UInt32._lowBits({}, Int.infix_38_42({}, headCount, w)));
        var tailBits = _UIntBuffer.Storage.prototype._fullShiftRight.call(_this._storage, {}, Int.infix_38_42({}, tailOffset, w));
        _this._storage = headBits;
        UInt32.infix_124_61({}, { get: function () { return _this._storage; }, set: function ($val) { return _this._storage = $val; } }, UInt32.infix_38_60_60({}, replacement1._storage, Int.infix_38_42({}, headCount, w)));
        UInt32.infix_124_61({}, { get: function () { return _this._storage; }, set: function ($val) { return _this._storage = $val; } }, UInt32.infix_38_60_60({}, tailBits, Int.infix_38_42({}, Int.infix_38_43({}, tailOffset, growth), w)));
        _this._bitCount = _create(UInt8, 'initTruncatingIfNeeded', {}, Int.infix_38_43({}, _create(Int, 'initT', {}, _this._bitCount), Int.infix_38_42({}, growth, w)));
    };
    _UIntBuffer.prototype.init$vars = function () {
    };
    var _55, _56;
    _UIntBuffer.$struct = true;
    _UIntBuffer.$infoAddress = '';
    _UIntBuffer.Iterator = (_55 = /** @class */ (function () {
            function class_79() {
            }
            /*Swift.(file)._UIntBuffer.Iterator.init(_:_UIntBuffer<Element>)*/
            /*Swift.(file)._UIntBuffer.Iterator.init(_:_UIntBuffer<Element>)*/
            class_79.prototype.init_UIntBuffer = function ($info, x) {
                var _this = this;
                _this._impl = _cloneStruct(x);
                return;
            };
            /*Swift.(file)._UIntBuffer.Iterator.next()*/
            /*Swift.(file).IteratorProtocol.next()*/
            class_79.prototype.next = function ($info) {
                var _this = this;
                if ((UInt8.infix_61_61({}, _this._impl._bitCount, 0))) {
                    return null;
                }
                ;
                var $defer = function () {
                    _this._impl._storage = _UIntBuffer.Storage.infix_38_62_62({}, _this._impl._storage, ((function () { throw '!unclarifiedGeneric:Element'; })()).bitWidth);
                    _this._impl._bitCount = UInt8.infix_38_45({}, _this._impl._bitCount, _this._impl._elementWidth);
                };
                var $result = (function () {
                    try {
                        ;
                        return _create(((function () { throw '!unclarifiedGeneric:Element'; })()), 'initTruncatingIfNeeded', {}, _this._impl._storage);
                    }
                    catch ($error) {
                        $defer({});
                        throw $error;
                    }
                })();
                $defer({});
                return $result;
            };
            class_79.prototype.init$vars = function () {
            };
            return class_79;
        }()),
        _55.$struct = true,
        _55.$infoAddress = '',
        _55);
    _UIntBuffer.Index = (_56 = /** @class */ (function () {
            function class_80() {
            }
            /*Swift.(file)._UIntBuffer.Index.bitOffset*/
            class_80.prototype.bitOffset$get = function () {
                throw 'unsupported variable Swift.(file)._UIntBuffer.Index.bitOffset in ' + this.constructor.name;
            };
            Object.defineProperty(class_80.prototype, "bitOffset", {
                get: function () { return this.bitOffset$get(); },
                enumerable: true,
                configurable: true
            });
            ;
            /*Swift.(file)._UIntBuffer.Index.init(bitOffset:UInt8)*/
            /*Swift.(file)._UIntBuffer.Index.init(bitOffset:UInt8)*/
            class_80.prototype.initBitOffsetUInt8 = function ($info, bitOffset) {
                var _this = this;
                _this.bitOffset = bitOffset;
                return;
            };
            /*Swift.(file)._UIntBuffer.Index.==infix(_:_UIntBuffer<Element>.Index,_:_UIntBuffer<Element>.Index)*/
            /*Swift.(file).Equatable.==infix(_:Self,_:Self)*/
            class_80.infix_61_61 = function ($info, lhs, rhs) {
                return lhs == rhs;
            };
            /*Swift.(file)._UIntBuffer.Index.<infix(_:_UIntBuffer<Element>.Index,_:_UIntBuffer<Element>.Index)*/
            /*Swift.(file).Comparable.<infix(_:Self,_:Self)*/
            class_80.infix_60 = function ($info, lhs, rhs) {
                return lhs < rhs;
            };
            class_80.prototype.init$vars = function () {
            };
            return class_80;
        }()),
        _56.$struct = true,
        _56.$infoAddress = '',
        _56);
    return _UIntBuffer;
}());
if (typeof IteratorProtocol$implementation != 'undefined')
    _mixin(_UIntBuffer.Iterator, IteratorProtocol$implementation, false);
if (typeof Sequence$implementation != 'undefined')
    _mixin(_UIntBuffer.Iterator, Sequence$implementation, false);
if (typeof Comparable$implementation != 'undefined')
    _mixin(_UIntBuffer.Index, Comparable$implementation, false);
if (typeof Sequence$implementation != 'undefined')
    _mixin(_UIntBuffer, Sequence$implementation, false);
if (typeof Collection$implementation != 'undefined')
    _mixin(_UIntBuffer, Collection$implementation, false);
if (typeof BidirectionalCollection$implementation != 'undefined')
    _mixin(_UIntBuffer, BidirectionalCollection$implementation, false);
if (typeof RandomAccessCollection$implementation != 'undefined')
    _mixin(_UIntBuffer, RandomAccessCollection$implementation, false);
if (typeof RangeReplaceableCollection$implementation != 'undefined')
    _mixin(_UIntBuffer, RangeReplaceableCollection$implementation, false);
var UnsafeMutableBufferPointer = /** @class */ (function () {
    function UnsafeMutableBufferPointer() {
    }
    /*Swift.(file).UnsafeMutableBufferPointer.count*/
    UnsafeMutableBufferPointer.prototype.count$get = function () {
        var _this = this;
        return _this.distanceFromTo({}, _this.startIndex, _this.endIndex);
    };
    Object.defineProperty(UnsafeMutableBufferPointer.prototype, "count", {
        get: function () { return this.count$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).UnsafeMutableBufferPointer.init(_position:UnsafeMutablePointer<Element>?,count:Int)*/
    /*Swift.(file).UnsafeMutableBufferPointer.init(_position:UnsafeMutablePointer<Element>?,count:Int)*/
    UnsafeMutableBufferPointer.prototype.init_positionOptionalCountInt = function ($info, _position, count) {
        throw 'unsupported method Swift.(file).UnsafeMutableBufferPointer.init(_position:UnsafeMutablePointer<Element>?,count:Int) in ' + this.constructor.name;
    };
    /*Swift.(file).UnsafeMutableBufferPointer.withUnsafeBytes(_:(UnsafeRawBufferPointer) throws -> R)*/
    /*Swift.(file)._HasContiguousBytes.withUnsafeBytes(_:(UnsafeRawBufferPointer) throws -> R)*/
    UnsafeMutableBufferPointer.prototype.withUnsafeBytes = function ($info, body) {
        var _this = this;
        var ptr = _create(UnsafeRawPointer, 'initUnsafeMutablePointer', {}, _this.baseAddress._unsafelyUnwrappedUnchecked);
        var len = Int.infix_38_42({}, _this.count, MemoryLayout.stride);
        return body({}, _create(UnsafeRawBufferPointer, 'initStartOptionalCountInt', {}, ptr, len));
    };
    /*Swift.(file).UnsafeMutableBufferPointer.makeIterator()*/
    /*Swift.(file).Sequence.makeIterator()*/
    /*Swift.(file).Collection.makeIterator()*/
    UnsafeMutableBufferPointer.prototype.makeIterator = function ($info) {
        var _this = this;
        return _this;
    };
    /*Swift.(file).UnsafeMutableBufferPointer.startIndex*/
    UnsafeMutableBufferPointer.prototype.startIndex$get = function () {
        throw 'unsupported variable Swift.(file).UnsafeMutableBufferPointer.startIndex in ' + this.constructor.name;
    };
    Object.defineProperty(UnsafeMutableBufferPointer.prototype, "startIndex", {
        get: function () { return this.startIndex$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).UnsafeMutableBufferPointer.endIndex*/
    UnsafeMutableBufferPointer.prototype.endIndex$get = function () {
        throw 'unsupported variable Swift.(file).UnsafeMutableBufferPointer.endIndex in ' + this.constructor.name;
    };
    Object.defineProperty(UnsafeMutableBufferPointer.prototype, "endIndex", {
        get: function () { return this.endIndex$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).UnsafeMutableBufferPointer.index(after:Int)*/
    /*Swift.(file).RandomAccessCollection.index(after:Self.Index)*/
    /*Swift.(file).Collection.index(after:Self.Index)*/
    /*Swift.(file).BidirectionalCollection.index(after:Self.Index)*/
    UnsafeMutableBufferPointer.prototype.indexAfter = function ($info, i) {
        throw 'unsupported method Swift.(file).UnsafeMutableBufferPointer.index(after:Int) in ' + this.constructor.name;
    };
    /*Swift.(file).UnsafeMutableBufferPointer.formIndex(after:Int)*/
    /*Swift.(file).RandomAccessCollection.formIndex(after:Self.Index)*/
    /*Swift.(file).Collection.formIndex(after:Self.Index)*/
    /*Swift.(file).BidirectionalCollection.formIndex(after:Self.Index)*/
    UnsafeMutableBufferPointer.prototype.formIndexAfter = function ($info, i$inout) {
        var _this = this;
        var i = i$inout.get();
        var $result = (function () {
            i = _this.indexAfter({}, i);
        })();
        i$inout.set(i);
        return $result;
    };
    /*Swift.(file).UnsafeMutableBufferPointer.index(before:Int)*/
    /*Swift.(file).RandomAccessCollection.index(before:Self.Index)*/
    /*Swift.(file).BidirectionalCollection.index(before:Self.Index)*/
    UnsafeMutableBufferPointer.prototype.indexBefore = function ($info, i) {
        throw 'unsupported method Swift.(file).UnsafeMutableBufferPointer.index(before:Int) in ' + this.constructor.name;
    };
    /*Swift.(file).UnsafeMutableBufferPointer.formIndex(before:Int)*/
    /*Swift.(file).RandomAccessCollection.formIndex(before:Self.Index)*/
    /*Swift.(file).BidirectionalCollection.formIndex(before:Self.Index)*/
    UnsafeMutableBufferPointer.prototype.formIndexBefore = function ($info, i$inout) {
        var _this = this;
        var i = i$inout.get();
        var $result = (function () {
            i = _this.indexBefore({}, i);
        })();
        i$inout.set(i);
        return $result;
    };
    /*Swift.(file).UnsafeMutableBufferPointer.index(_:Int,offsetBy:Int)*/
    /*Swift.(file).RandomAccessCollection.index(_:Self.Index,offsetBy:Int)*/
    /*Swift.(file).Collection.index(_:Self.Index,offsetBy:Int)*/
    /*Swift.(file).BidirectionalCollection.index(_:Self.Index,offsetBy:Int)*/
    UnsafeMutableBufferPointer.prototype.indexOffsetBy = function ($info, i, n) {
        var _this = this;
        return _this._advanceForwardBy({}, i, distance);
    };
    /*Swift.(file).UnsafeMutableBufferPointer.index(_:Int,offsetBy:Int,limitedBy:Int)*/
    /*Swift.(file).RandomAccessCollection.index(_:Self.Index,offsetBy:Int,limitedBy:Self.Index)*/
    /*Swift.(file).Collection.index(_:Self.Index,offsetBy:Int,limitedBy:Self.Index)*/
    /*Swift.(file).BidirectionalCollection.index(_:Self.Index,offsetBy:Int,limitedBy:Self.Index)*/
    UnsafeMutableBufferPointer.prototype.indexOffsetByLimitedBy = function ($info, i, n, limit) {
        var _this = this;
        var l = _this.distanceFromTo({}, i, limit);
        if (((Int.infix_62({}, distance, 0) ? Bool.infix_38_38({}, Int.infix_62_61({}, l, 0), function () { return Int.infix_60({}, l, distance); }) : Bool.infix_38_38({}, Int.infix_60_61({}, l, 0), function () { return Int.infix_60({}, distance, l); })))) {
            return null;
        }
        ;
        return _this.indexOffsetBy({}, i, distance);
    };
    /*Swift.(file).UnsafeMutableBufferPointer.distance(from:Int,to:Int)*/
    /*Swift.(file).RandomAccessCollection.distance(from:Self.Index,to:Self.Index)*/
    /*Swift.(file).Collection.distance(from:Self.Index,to:Self.Index)*/
    /*Swift.(file).BidirectionalCollection.distance(from:Self.Index,to:Self.Index)*/
    UnsafeMutableBufferPointer.prototype.distanceFromTo = function ($info, start, end) {
        var _this = this;
        preconditionFileLine({}, function () { return (_.arg0 = start).constructor.infix_60_61({}, _.arg0, end); }, function () { return "Only BidirectionalCollections can have end come before start"; }, '?3', '?3');
        var start_dupl = start;
        var count = 0;
        while (true) {
            if (!(((_.arg1 = start_dupl).constructor.infix_33_61({}, _.arg1, end))))
                break;
            count = Int.infix_43({}, count, 1);
            _this.formIndexAfter({}, { get: function () { return start_dupl; }, set: function ($val) { return start_dupl = $val; } });
        }
        ;
        return count;
    };
    /*Swift.(file).UnsafeMutableBufferPointer.indices*/
    UnsafeMutableBufferPointer.prototype.indices$get = function () {
        var _this = this;
        return (_.arg0 = _this.startIndex).constructor.infix_46_46_60({}, _.arg0, _this.endIndex);
    };
    Object.defineProperty(UnsafeMutableBufferPointer.prototype, "indices", {
        get: function () { return this.indices$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).UnsafeMutableBufferPointer.subscript(_:Int)*/
    /*Swift.(file).MutableCollection.subscript(_:Self.Index)*/
    /*Swift.(file).RandomAccessCollection.subscript(_:Self.Index)*/
    /*Swift.(file).Collection.subscript(_:Self.Index)*/
    /*Swift.(file).BidirectionalCollection.subscript(_:Self.Index)*/
    UnsafeMutableBufferPointer.prototype.subscript$get = function ($info, i) {
        throw 'unsupported method Swift.(file).UnsafeMutableBufferPointer.subscript(_:Int) in ' + this.constructor.name;
    }; /*Swift.(file).UnsafeMutableBufferPointer.subscript(_:Int)*/
    /*Swift.(file).MutableCollection.subscript(_:Self.Index)*/
    /*Swift.(file).RandomAccessCollection.subscript(_:Self.Index)*/
    /*Swift.(file).Collection.subscript(_:Self.Index)*/
    /*Swift.(file).BidirectionalCollection.subscript(_:Self.Index)*/
    UnsafeMutableBufferPointer.prototype.subscript$_modify = function ($info, i) {
        throw 'unsupported method Swift.(file).UnsafeMutableBufferPointer.subscript(_:Int) in ' + this.constructor.name;
    };
    /*Swift.(file).UnsafeMutableBufferPointer.subscript(_unchecked:Int)*/
    /*Swift.(file).UnsafeMutableBufferPointer.subscript(_unchecked:Int)*/
    UnsafeMutableBufferPointer.prototype.subscript_unchecked$get = function ($info, i) {
        throw 'unsupported method Swift.(file).UnsafeMutableBufferPointer.subscript(_unchecked:Int) in ' + this.constructor.name;
    }; /*Swift.(file).UnsafeMutableBufferPointer.subscript(_unchecked:Int)*/
    /*Swift.(file).UnsafeMutableBufferPointer.subscript(_unchecked:Int)*/
    UnsafeMutableBufferPointer.prototype.subscript_unchecked$_modify = function ($info, i) {
        throw 'unsupported method Swift.(file).UnsafeMutableBufferPointer.subscript(_unchecked:Int) in ' + this.constructor.name;
    };
    /*Swift.(file).UnsafeMutableBufferPointer.subscript(_:Range<Int>)*/
    /*Swift.(file).MutableCollection.subscript(_:Range<Self.Index>)*/
    /*Swift.(file).RandomAccessCollection.subscript(_:Range<Self.Index>)*/
    /*Swift.(file).Collection.subscript(_:Range<Self.Index>)*/
    /*Swift.(file).BidirectionalCollection.subscript(_:Range<Self.Index>)*/
    UnsafeMutableBufferPointer.prototype.subscriptRange$get = function ($info, bounds) {
        var _this = this;
        return _create(Slice, 'initBaseBoundsRange', {}, _this, bounds);
    }; /*Swift.(file).UnsafeMutableBufferPointer.subscript(_:Range<Int>)*/
    /*Swift.(file).MutableCollection.subscript(_:Range<Self.Index>)*/
    /*Swift.(file).RandomAccessCollection.subscript(_:Range<Self.Index>)*/
    /*Swift.(file).Collection.subscript(_:Range<Self.Index>)*/
    /*Swift.(file).BidirectionalCollection.subscript(_:Range<Self.Index>)*/
    UnsafeMutableBufferPointer.prototype.subscriptRange$set = function ($info, newValue, bounds) {
        var _this = this;
        _writeBackMutableSliceBoundsSlice({}, { get: function () { return _this; }, set: function ($val) { return $info.$setThis(_this = _cloneStruct($val)); } }, bounds, newValue);
    };
    /*Swift.(file).UnsafeMutableBufferPointer.swapAt(_:Int,_:Int)*/
    /*Swift.(file).MutableCollection.swapAt(_:Self.Index,_:Self.Index)*/
    UnsafeMutableBufferPointer.prototype.swapAt = function ($info, i, j) {
        var _this = this;
        if (!(((_.arg0 = i).constructor.infix_33_61({}, _.arg0, j)))) {
            return;
        }
        ;
        var tmp = _this.subscript$get({}, i);
        _this.subscript$set({ $setThis: function ($val) { return $info.$setThis(_this = _cloneStruct($val)); } }, _this.subscript$get({}, j), i);
        _this.subscript$set({ $setThis: function ($val) { return $info.$setThis(_this = _cloneStruct($val)); } }, tmp, j);
    };
    /*Swift.(file).UnsafeMutableBufferPointer.init(start:UnsafeMutablePointer<Element>?,count:Int)*/
    /*Swift.(file).UnsafeMutableBufferPointer.init(start:UnsafeMutablePointer<Element>?,count:Int)*/
    UnsafeMutableBufferPointer.prototype.initStartOptionalCountInt = function ($info, start, count) {
        throw 'unsupported method Swift.(file).UnsafeMutableBufferPointer.init(start:UnsafeMutablePointer<Element>?,count:Int) in ' + this.constructor.name;
    };
    /*Swift.(file).UnsafeMutableBufferPointer.init(_empty:())*/
    /*Swift.(file).UnsafeMutableBufferPointer.init(_empty:())*/
    UnsafeMutableBufferPointer.prototype.init_emptytuple_type = function ($info, _empty) {
        throw 'unsupported method Swift.(file).UnsafeMutableBufferPointer.init(_empty:()) in ' + this.constructor.name;
    };
    /*Swift.(file).UnsafeMutableBufferPointer.init(mutating:UnsafeBufferPointer<Element>)*/
    /*Swift.(file).UnsafeMutableBufferPointer.init(mutating:UnsafeBufferPointer<Element>)*/
    UnsafeMutableBufferPointer.prototype.initMutatingUnsafeBufferPointer = function ($info, other) {
        throw 'unsupported method Swift.(file).UnsafeMutableBufferPointer.init(mutating:UnsafeBufferPointer<Element>) in ' + this.constructor.name;
    };
    /*Swift.(file).UnsafeMutableBufferPointer.withContiguousMutableStorageIfAvailable(_:(inout UnsafeMutableBufferPointer<Element>) throws -> R)*/
    /*Swift.(file).MutableCollection.withContiguousMutableStorageIfAvailable(_:(inout UnsafeMutableBufferPointer<Self.Element>) throws -> R)*/
    UnsafeMutableBufferPointer.prototype.withContiguousMutableStorageIfAvailable = function ($info, body) {
        var _this = this;
        return null;
    };
    /*Swift.(file).UnsafeMutableBufferPointer.withContiguousStorageIfAvailable(_:(UnsafeBufferPointer<Element>) throws -> R)*/
    /*Swift.(file).Sequence.withContiguousStorageIfAvailable(_:(UnsafeBufferPointer<Self.Element>) throws -> R)*/
    UnsafeMutableBufferPointer.prototype.withContiguousStorageIfAvailable = function ($info, body) {
        var _this = this;
        return null;
    };
    /*Swift.(file).UnsafeMutableBufferPointer.init(rebasing:Slice<UnsafeMutableBufferPointer<Element>>)*/
    /*Swift.(file).UnsafeMutableBufferPointer.init(rebasing:Slice<UnsafeMutableBufferPointer<Element>>)*/
    UnsafeMutableBufferPointer.prototype.initRebasingSlice = function ($info, slice) {
        throw 'unsupported method Swift.(file).UnsafeMutableBufferPointer.init(rebasing:Slice<UnsafeMutableBufferPointer<Element>>) in ' + this.constructor.name;
    };
    /*Swift.(file).UnsafeMutableBufferPointer.deallocate()*/
    /*Swift.(file).UnsafeMutableBufferPointer.deallocate()*/
    UnsafeMutableBufferPointer.prototype.deallocate = function ($info) {
        throw 'unsupported method Swift.(file).UnsafeMutableBufferPointer.deallocate() in ' + this.constructor.name;
    };
    /*Swift.(file).UnsafeMutableBufferPointer.allocate(capacity:Int)*/
    /*Swift.(file).UnsafeMutableBufferPointer.allocate(capacity:Int)*/
    UnsafeMutableBufferPointer.allocateCapacity = function ($info, count) {
        throw 'unsupported method Swift.(file).UnsafeMutableBufferPointer.allocate(capacity:Int) in ' + this.constructor.name;
    };
    /*Swift.(file).UnsafeMutableBufferPointer.initialize(repeating:Element)*/
    /*Swift.(file).UnsafeMutableBufferPointer.initialize(repeating:Element)*/
    UnsafeMutableBufferPointer.prototype.initializeRepeating = function ($info, repeatedValue) {
        throw 'unsupported method Swift.(file).UnsafeMutableBufferPointer.initialize(repeating:Element) in ' + this.constructor.name;
    };
    /*Swift.(file).UnsafeMutableBufferPointer.assign(repeating:Element)*/
    /*Swift.(file).UnsafeMutableBufferPointer.assign(repeating:Element)*/
    UnsafeMutableBufferPointer.prototype.assignRepeating = function ($info, repeatedValue) {
        throw 'unsupported method Swift.(file).UnsafeMutableBufferPointer.assign(repeating:Element) in ' + this.constructor.name;
    };
    /*Swift.(file).UnsafeMutableBufferPointer.withMemoryRebound(to:T.Type,_:(UnsafeMutableBufferPointer<T>) throws -> Result)*/
    /*Swift.(file).UnsafeMutableBufferPointer.withMemoryRebound(to:T.Type,_:(UnsafeMutableBufferPointer<T>) throws -> Result)*/
    UnsafeMutableBufferPointer.prototype.withMemoryReboundTo = function ($info, type, body) {
        throw 'unsupported method Swift.(file).UnsafeMutableBufferPointer.withMemoryRebound(to:T.Type,_:(UnsafeMutableBufferPointer<T>) throws -> Result) in ' + this.constructor.name;
    };
    /*Swift.(file).UnsafeMutableBufferPointer.baseAddress*/
    UnsafeMutableBufferPointer.prototype.baseAddress$get = function () {
        throw 'unsupported variable Swift.(file).UnsafeMutableBufferPointer.baseAddress in ' + this.constructor.name;
    };
    Object.defineProperty(UnsafeMutableBufferPointer.prototype, "baseAddress", {
        get: function () { return this.baseAddress$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).UnsafeMutableBufferPointer.debugDescription*/
    UnsafeMutableBufferPointer.prototype.debugDescription$get = function () {
        throw 'unsupported variable Swift.(file).UnsafeMutableBufferPointer.debugDescription in ' + this.constructor.name;
    };
    Object.defineProperty(UnsafeMutableBufferPointer.prototype, "debugDescription", {
        get: function () { return this.debugDescription$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).UnsafeMutableBufferPointer.initialize(from:S)*/
    /*Swift.(file).UnsafeMutableBufferPointer.initialize(from:S)*/
    UnsafeMutableBufferPointer.prototype.initializeFrom = function ($info, source) {
        throw 'unsupported method Swift.(file).UnsafeMutableBufferPointer.initialize(from:S) in ' + this.constructor.name;
    };
    UnsafeMutableBufferPointer.prototype.init$vars = function () {
    };
    UnsafeMutableBufferPointer.$struct = true;
    UnsafeMutableBufferPointer.$infoAddress = '';
    return UnsafeMutableBufferPointer;
}());
if (typeof _HasContiguousBytes$implementation != 'undefined')
    _mixin(UnsafeMutableBufferPointer, _HasContiguousBytes$implementation, false);
if (typeof Sequence$implementation != 'undefined')
    _mixin(UnsafeMutableBufferPointer, Sequence$implementation, false);
if (typeof MutableCollection$implementation != 'undefined')
    _mixin(UnsafeMutableBufferPointer, MutableCollection$implementation, false);
if (typeof RandomAccessCollection$implementation != 'undefined')
    _mixin(UnsafeMutableBufferPointer, RandomAccessCollection$implementation, false);
if (typeof CustomDebugStringConvertible$implementation != 'undefined')
    _mixin(UnsafeMutableBufferPointer, CustomDebugStringConvertible$implementation, false);
var UnsafeBufferPointer = /** @class */ (function () {
    function UnsafeBufferPointer() {
    }
    /*Swift.(file).UnsafeBufferPointer.count*/
    UnsafeBufferPointer.prototype.count$get = function () {
        var _this = this;
        return _this.distanceFromTo({}, _this.startIndex, _this.endIndex);
    };
    Object.defineProperty(UnsafeBufferPointer.prototype, "count", {
        get: function () { return this.count$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).UnsafeBufferPointer.init(_position:UnsafePointer<Element>?,count:Int)*/
    /*Swift.(file).UnsafeBufferPointer.init(_position:UnsafePointer<Element>?,count:Int)*/
    UnsafeBufferPointer.prototype.init_positionOptionalCountInt = function ($info, _position, count) {
        throw 'unsupported method Swift.(file).UnsafeBufferPointer.init(_position:UnsafePointer<Element>?,count:Int) in ' + this.constructor.name;
    };
    /*Swift.(file).UnsafeBufferPointer.withUnsafeBytes(_:(UnsafeRawBufferPointer) throws -> R)*/
    /*Swift.(file)._HasContiguousBytes.withUnsafeBytes(_:(UnsafeRawBufferPointer) throws -> R)*/
    UnsafeBufferPointer.prototype.withUnsafeBytes = function ($info, body) {
        var _this = this;
        var ptr = _create(UnsafeRawPointer, 'init', {}, /*pointer_to_pointer*/ _this.baseAddress._unsafelyUnwrappedUnchecked);
        var len = Int.infix_38_42({}, _this.count, MemoryLayout.stride);
        return body({}, _create(UnsafeRawBufferPointer, 'initStartOptionalCountInt', {}, ptr, len));
    };
    /*Swift.(file).UnsafeBufferPointer.hasNormalizationBoundary(before:Int)*/
    /*Swift.(file).UnsafeBufferPointer.hasNormalizationBoundary(before:Int)*/
    UnsafeBufferPointer.prototype.hasNormalizationBoundaryBefore = function ($info, index) {
        var _this = this;
        if ((Bool.infix_124_124({}, Int.infix_61_61({}, index, 0), function () { return Int.infix_61_61({}, index, _this.count); }))) {
            return true;
        }
        ;
        assertFileLine({}, function () { return Bool.prefix_33({}, _isContinuation({}, _this.subscript_unchecked$get({}, index))); }, function () { return String(); } /*!default_value*/, '?3', '?3');
        if ((UInt8.infix_60({}, _this.subscript_unchecked$get({}, index), 0xCC))) {
            return true;
        }
        ;
        var cu = _cloneStruct(_decodeScalarStartingAt({}, _this, index)["0"]);
        return cu._hasNormalizationBoundaryBefore;
    };
    /*Swift.(file).UnsafeBufferPointer.makeIterator()*/
    /*Swift.(file).Sequence.makeIterator()*/
    /*Swift.(file).Collection.makeIterator()*/
    UnsafeBufferPointer.prototype.makeIterator = function ($info) {
        var _this = this;
        return _this;
    };
    /*Swift.(file).UnsafeBufferPointer.startIndex*/
    UnsafeBufferPointer.prototype.startIndex$get = function () {
        throw 'unsupported variable Swift.(file).UnsafeBufferPointer.startIndex in ' + this.constructor.name;
    };
    Object.defineProperty(UnsafeBufferPointer.prototype, "startIndex", {
        get: function () { return this.startIndex$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).UnsafeBufferPointer.endIndex*/
    UnsafeBufferPointer.prototype.endIndex$get = function () {
        throw 'unsupported variable Swift.(file).UnsafeBufferPointer.endIndex in ' + this.constructor.name;
    };
    Object.defineProperty(UnsafeBufferPointer.prototype, "endIndex", {
        get: function () { return this.endIndex$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).UnsafeBufferPointer.index(after:Int)*/
    /*Swift.(file).Collection.index(after:Self.Index)*/
    /*Swift.(file).RandomAccessCollection.index(after:Self.Index)*/
    /*Swift.(file).BidirectionalCollection.index(after:Self.Index)*/
    UnsafeBufferPointer.prototype.indexAfter = function ($info, i) {
        throw 'unsupported method Swift.(file).UnsafeBufferPointer.index(after:Int) in ' + this.constructor.name;
    };
    /*Swift.(file).UnsafeBufferPointer.formIndex(after:Int)*/
    /*Swift.(file).Collection.formIndex(after:Self.Index)*/
    /*Swift.(file).RandomAccessCollection.formIndex(after:Self.Index)*/
    /*Swift.(file).BidirectionalCollection.formIndex(after:Self.Index)*/
    UnsafeBufferPointer.prototype.formIndexAfter = function ($info, i$inout) {
        var _this = this;
        var i = i$inout.get();
        var $result = (function () {
            i = _this.indexAfter({}, i);
        })();
        i$inout.set(i);
        return $result;
    };
    /*Swift.(file).UnsafeBufferPointer.index(before:Int)*/
    /*Swift.(file).RandomAccessCollection.index(before:Self.Index)*/
    /*Swift.(file).BidirectionalCollection.index(before:Self.Index)*/
    UnsafeBufferPointer.prototype.indexBefore = function ($info, i) {
        throw 'unsupported method Swift.(file).UnsafeBufferPointer.index(before:Int) in ' + this.constructor.name;
    };
    /*Swift.(file).UnsafeBufferPointer.formIndex(before:Int)*/
    /*Swift.(file).RandomAccessCollection.formIndex(before:Self.Index)*/
    /*Swift.(file).BidirectionalCollection.formIndex(before:Self.Index)*/
    UnsafeBufferPointer.prototype.formIndexBefore = function ($info, i$inout) {
        var _this = this;
        var i = i$inout.get();
        var $result = (function () {
            i = _this.indexBefore({}, i);
        })();
        i$inout.set(i);
        return $result;
    };
    /*Swift.(file).UnsafeBufferPointer.index(_:Int,offsetBy:Int)*/
    /*Swift.(file).Collection.index(_:Self.Index,offsetBy:Int)*/
    /*Swift.(file).RandomAccessCollection.index(_:Self.Index,offsetBy:Int)*/
    /*Swift.(file).BidirectionalCollection.index(_:Self.Index,offsetBy:Int)*/
    UnsafeBufferPointer.prototype.indexOffsetBy = function ($info, i, n) {
        var _this = this;
        return _this._advanceForwardBy({}, i, distance);
    };
    /*Swift.(file).UnsafeBufferPointer.index(_:Int,offsetBy:Int,limitedBy:Int)*/
    /*Swift.(file).Collection.index(_:Self.Index,offsetBy:Int,limitedBy:Self.Index)*/
    /*Swift.(file).RandomAccessCollection.index(_:Self.Index,offsetBy:Int,limitedBy:Self.Index)*/
    /*Swift.(file).BidirectionalCollection.index(_:Self.Index,offsetBy:Int,limitedBy:Self.Index)*/
    UnsafeBufferPointer.prototype.indexOffsetByLimitedBy = function ($info, i, n, limit) {
        var _this = this;
        return _this._advanceForwardByLimitedBy({}, i, distance, limit);
    };
    /*Swift.(file).UnsafeBufferPointer.distance(from:Int,to:Int)*/
    /*Swift.(file).Collection.distance(from:Self.Index,to:Self.Index)*/
    /*Swift.(file).RandomAccessCollection.distance(from:Self.Index,to:Self.Index)*/
    /*Swift.(file).BidirectionalCollection.distance(from:Self.Index,to:Self.Index)*/
    UnsafeBufferPointer.prototype.distanceFromTo = function ($info, start, end) {
        var _this = this;
        preconditionFileLine({}, function () { return (_.arg0 = start).constructor.infix_60_61({}, _.arg0, end); }, function () { return "Only BidirectionalCollections can have end come before start"; }, '?3', '?3');
        var start_dupl = start;
        var count = 0;
        while (true) {
            if (!(((_.arg1 = start_dupl).constructor.infix_33_61({}, _.arg1, end))))
                break;
            count = Int.infix_43({}, count, 1);
            _this.formIndexAfter({}, { get: function () { return start_dupl; }, set: function ($val) { return start_dupl = $val; } });
        }
        ;
        return count;
    };
    /*Swift.(file).UnsafeBufferPointer.indices*/
    UnsafeBufferPointer.prototype.indices$get = function () {
        var _this = this;
        return _create(DefaultIndices, 'init_elementsStartIndexEndIndex', {}, _this, _this.startIndex, _this.endIndex);
    };
    Object.defineProperty(UnsafeBufferPointer.prototype, "indices", {
        get: function () { return this.indices$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).UnsafeBufferPointer.subscript(_:Int)*/
    /*Swift.(file).Collection.subscript(_:Self.Index)*/
    /*Swift.(file).RandomAccessCollection.subscript(_:Self.Index)*/
    /*Swift.(file).BidirectionalCollection.subscript(_:Self.Index)*/
    UnsafeBufferPointer.prototype.subscript$get = function ($info, i) {
        throw 'unsupported method Swift.(file).UnsafeBufferPointer.subscript(_:Int) in ' + this.constructor.name;
    };
    /*Swift.(file).UnsafeBufferPointer.subscript(_unchecked:Int)*/
    /*Swift.(file).UnsafeBufferPointer.subscript(_unchecked:Int)*/
    UnsafeBufferPointer.prototype.subscript_unchecked$get = function ($info, i) {
        throw 'unsupported method Swift.(file).UnsafeBufferPointer.subscript(_unchecked:Int) in ' + this.constructor.name;
    };
    /*Swift.(file).UnsafeBufferPointer.subscript(_:Range<Int>)*/
    /*Swift.(file).Collection.subscript(_:Range<Self.Index>)*/
    /*Swift.(file).RandomAccessCollection.subscript(_:Range<Self.Index>)*/
    /*Swift.(file).BidirectionalCollection.subscript(_:Range<Self.Index>)*/
    UnsafeBufferPointer.prototype.subscriptRange$get = function ($info, bounds) {
        var _this = this;
        return _create(Slice, 'initBaseBoundsRange', {}, _this, bounds);
    };
    /*Swift.(file).UnsafeBufferPointer.init(start:UnsafePointer<Element>?,count:Int)*/
    /*Swift.(file).UnsafeBufferPointer.init(start:UnsafePointer<Element>?,count:Int)*/
    UnsafeBufferPointer.prototype.initStartOptionalCountInt = function ($info, start, count) {
        throw 'unsupported method Swift.(file).UnsafeBufferPointer.init(start:UnsafePointer<Element>?,count:Int) in ' + this.constructor.name;
    };
    /*Swift.(file).UnsafeBufferPointer.init(_empty:())*/
    /*Swift.(file).UnsafeBufferPointer.init(_empty:())*/
    UnsafeBufferPointer.prototype.init_emptytuple_type = function ($info, _empty) {
        throw 'unsupported method Swift.(file).UnsafeBufferPointer.init(_empty:()) in ' + this.constructor.name;
    };
    /*Swift.(file).UnsafeBufferPointer.init(_:UnsafeMutableBufferPointer<Element>)*/
    /*Swift.(file).UnsafeBufferPointer.init(_:UnsafeMutableBufferPointer<Element>)*/
    UnsafeBufferPointer.prototype.initUnsafeMutableBufferPointer = function ($info, other) {
        throw 'unsupported method Swift.(file).UnsafeBufferPointer.init(_:UnsafeMutableBufferPointer<Element>) in ' + this.constructor.name;
    };
    /*Swift.(file).UnsafeBufferPointer.withContiguousStorageIfAvailable(_:(UnsafeBufferPointer<Element>) throws -> R)*/
    /*Swift.(file).Sequence.withContiguousStorageIfAvailable(_:(UnsafeBufferPointer<Self.Element>) throws -> R)*/
    UnsafeBufferPointer.prototype.withContiguousStorageIfAvailable = function ($info, body) {
        var _this = this;
        return null;
    };
    /*Swift.(file).UnsafeBufferPointer.init(rebasing:Slice<UnsafeBufferPointer<Element>>)*/
    /*Swift.(file).UnsafeBufferPointer.init(rebasing:Slice<UnsafeBufferPointer<Element>>)*/
    UnsafeBufferPointer.prototype.initRebasingSlice = function ($info, slice) {
        throw 'unsupported method Swift.(file).UnsafeBufferPointer.init(rebasing:Slice<UnsafeBufferPointer<Element>>) in ' + this.constructor.name;
    };
    /*Swift.(file).UnsafeBufferPointer.init(rebasing:Slice<UnsafeMutableBufferPointer<Element>>)*/
    /*Swift.(file).UnsafeBufferPointer.init(rebasing:Slice<UnsafeMutableBufferPointer<Element>>)*/
    UnsafeBufferPointer.prototype.initRebasingSlice = function ($info, slice) {
        throw 'unsupported method Swift.(file).UnsafeBufferPointer.init(rebasing:Slice<UnsafeMutableBufferPointer<Element>>) in ' + this.constructor.name;
    };
    /*Swift.(file).UnsafeBufferPointer.deallocate()*/
    /*Swift.(file).UnsafeBufferPointer.deallocate()*/
    UnsafeBufferPointer.prototype.deallocate = function ($info) {
        throw 'unsupported method Swift.(file).UnsafeBufferPointer.deallocate() in ' + this.constructor.name;
    };
    /*Swift.(file).UnsafeBufferPointer.withMemoryRebound(to:T.Type,_:(UnsafeBufferPointer<T>) throws -> Result)*/
    /*Swift.(file).UnsafeBufferPointer.withMemoryRebound(to:T.Type,_:(UnsafeBufferPointer<T>) throws -> Result)*/
    UnsafeBufferPointer.prototype.withMemoryReboundTo = function ($info, type, body) {
        throw 'unsupported method Swift.(file).UnsafeBufferPointer.withMemoryRebound(to:T.Type,_:(UnsafeBufferPointer<T>) throws -> Result) in ' + this.constructor.name;
    };
    /*Swift.(file).UnsafeBufferPointer.baseAddress*/
    UnsafeBufferPointer.prototype.baseAddress$get = function () {
        throw 'unsupported variable Swift.(file).UnsafeBufferPointer.baseAddress in ' + this.constructor.name;
    };
    Object.defineProperty(UnsafeBufferPointer.prototype, "baseAddress", {
        get: function () { return this.baseAddress$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).UnsafeBufferPointer.debugDescription*/
    UnsafeBufferPointer.prototype.debugDescription$get = function () {
        throw 'unsupported variable Swift.(file).UnsafeBufferPointer.debugDescription in ' + this.constructor.name;
    };
    Object.defineProperty(UnsafeBufferPointer.prototype, "debugDescription", {
        get: function () { return this.debugDescription$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    UnsafeBufferPointer.prototype.init$vars = function () {
    };
    var _57;
    UnsafeBufferPointer.$struct = true;
    UnsafeBufferPointer.$infoAddress = '';
    UnsafeBufferPointer.Iterator = (_57 = /** @class */ (function () {
            function class_81() {
            }
            /*Swift.(file).UnsafeBufferPointer.Iterator.init(_position:UnsafePointer<UnsafeBufferPointer<Element>.Iterator.Element>?,_end:UnsafePointer<UnsafeBufferPointer<Element>.Iterator.Element>?)*/
            /*Swift.(file).UnsafeBufferPointer.Iterator.init(_position:UnsafePointer<UnsafeBufferPointer<Element>.Iterator.Element>?,_end:UnsafePointer<UnsafeBufferPointer<Element>.Iterator.Element>?)*/
            class_81.prototype.init_positionOptional_endOptional = function ($info, _position, _end) {
                throw 'unsupported method Swift.(file).UnsafeBufferPointer.Iterator.init(_position:UnsafePointer<UnsafeBufferPointer<Element>.Iterator.Element>?,_end:UnsafePointer<UnsafeBufferPointer<Element>.Iterator.Element>?) in ' + this.constructor.name;
            };
            /*Swift.(file).UnsafeBufferPointer.Iterator.next()*/
            /*Swift.(file).IteratorProtocol.next()*/
            class_81.prototype.next = function ($info) {
                throw 'unsupported method Swift.(file).UnsafeBufferPointer.Iterator.next() in ' + this.constructor.name;
            };
            class_81.prototype.init$vars = function () {
            };
            return class_81;
        }()),
        _57.$struct = true,
        _57.$infoAddress = '',
        _57);
    return UnsafeBufferPointer;
}());
if (typeof IteratorProtocol$implementation != 'undefined')
    _mixin(UnsafeBufferPointer.Iterator, IteratorProtocol$implementation, false);
if (typeof _HasContiguousBytes$implementation != 'undefined')
    _mixin(UnsafeBufferPointer, _HasContiguousBytes$implementation, false);
if (typeof Sequence$implementation != 'undefined')
    _mixin(UnsafeBufferPointer, Sequence$implementation, false);
if (typeof Collection$implementation != 'undefined')
    _mixin(UnsafeBufferPointer, Collection$implementation, false);
if (typeof RandomAccessCollection$implementation != 'undefined')
    _mixin(UnsafeBufferPointer, RandomAccessCollection$implementation, false);
if (typeof CustomDebugStringConvertible$implementation != 'undefined')
    _mixin(UnsafeBufferPointer, CustomDebugStringConvertible$implementation, false);
var UnsafeMutableRawBufferPointer = /** @class */ (function () {
    function UnsafeMutableRawBufferPointer() {
    }
    /*Swift.(file).UnsafeMutableRawBufferPointer.init(_position:UnsafeMutableRawPointer?,_end:UnsafeMutableRawPointer?)*/
    /*Swift.(file).UnsafeMutableRawBufferPointer.init(_position:UnsafeMutableRawPointer?,_end:UnsafeMutableRawPointer?)*/
    UnsafeMutableRawBufferPointer.prototype.init_positionOptional_endOptional = function ($info, _position, _end) {
        throw 'unsupported method Swift.(file).UnsafeMutableRawBufferPointer.init(_position:UnsafeMutableRawPointer?,_end:UnsafeMutableRawPointer?) in ' + this.constructor.name;
    };
    /*Swift.(file).UnsafeMutableRawBufferPointer.makeIterator()*/
    /*Swift.(file).Sequence.makeIterator()*/
    /*Swift.(file).Collection.makeIterator()*/
    UnsafeMutableRawBufferPointer.prototype.makeIterator = function ($info) {
        var _this = this;
        return _this;
    };
    /*Swift.(file).UnsafeMutableRawBufferPointer.startIndex*/
    UnsafeMutableRawBufferPointer.prototype.startIndex$get = function () {
        throw 'unsupported variable Swift.(file).UnsafeMutableRawBufferPointer.startIndex in ' + this.constructor.name;
    };
    Object.defineProperty(UnsafeMutableRawBufferPointer.prototype, "startIndex", {
        get: function () { return this.startIndex$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).UnsafeMutableRawBufferPointer.endIndex*/
    UnsafeMutableRawBufferPointer.prototype.endIndex$get = function () {
        throw 'unsupported variable Swift.(file).UnsafeMutableRawBufferPointer.endIndex in ' + this.constructor.name;
    };
    Object.defineProperty(UnsafeMutableRawBufferPointer.prototype, "endIndex", {
        get: function () { return this.endIndex$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).UnsafeMutableRawBufferPointer.indices*/
    UnsafeMutableRawBufferPointer.prototype.indices$get = function () {
        var _this = this;
        return _create(DefaultIndices, 'init_elementsStartIndexEndIndex', {}, _this, _this.startIndex, _this.endIndex);
    };
    Object.defineProperty(UnsafeMutableRawBufferPointer.prototype, "indices", {
        get: function () { return this.indices$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).UnsafeMutableRawBufferPointer.subscript(_:Int)*/
    /*Swift.(file).MutableCollection.subscript(_:Self.Index)*/
    /*Swift.(file).Collection.subscript(_:Self.Index)*/
    /*Swift.(file).RandomAccessCollection.subscript(_:Self.Index)*/
    /*Swift.(file).BidirectionalCollection.subscript(_:Self.Index)*/
    UnsafeMutableRawBufferPointer.prototype.subscript$get = function ($info, i) {
        throw 'unsupported method Swift.(file).UnsafeMutableRawBufferPointer.subscript(_:Int) in ' + this.constructor.name;
    }; /*Swift.(file).UnsafeMutableRawBufferPointer.subscript(_:Int)*/
    /*Swift.(file).MutableCollection.subscript(_:Self.Index)*/
    /*Swift.(file).Collection.subscript(_:Self.Index)*/
    /*Swift.(file).RandomAccessCollection.subscript(_:Self.Index)*/
    /*Swift.(file).BidirectionalCollection.subscript(_:Self.Index)*/
    UnsafeMutableRawBufferPointer.prototype.subscript$set = function ($info, newValue, i) {
        throw 'unsupported method Swift.(file).UnsafeMutableRawBufferPointer.subscript(_:Int) in ' + this.constructor.name;
    };
    /*Swift.(file).UnsafeMutableRawBufferPointer.subscript(_:Range<Int>)*/
    /*Swift.(file).MutableCollection.subscript(_:Range<Self.Index>)*/
    /*Swift.(file).Collection.subscript(_:Range<Self.Index>)*/
    /*Swift.(file).RandomAccessCollection.subscript(_:Range<Self.Index>)*/
    /*Swift.(file).BidirectionalCollection.subscript(_:Range<Self.Index>)*/
    UnsafeMutableRawBufferPointer.prototype.subscriptRange$get = function ($info, bounds) {
        var _this = this;
        return _create(Slice, 'initBaseBoundsRange', {}, _this, bounds);
    }; /*Swift.(file).UnsafeMutableRawBufferPointer.subscript(_:Range<Int>)*/
    /*Swift.(file).MutableCollection.subscript(_:Range<Self.Index>)*/
    /*Swift.(file).Collection.subscript(_:Range<Self.Index>)*/
    /*Swift.(file).RandomAccessCollection.subscript(_:Range<Self.Index>)*/
    /*Swift.(file).BidirectionalCollection.subscript(_:Range<Self.Index>)*/
    UnsafeMutableRawBufferPointer.prototype.subscriptRange$set = function ($info, newValue, bounds) {
        var _this = this;
        _writeBackMutableSliceBoundsSlice({}, { get: function () { return _this; }, set: function ($val) { return $info.$setThis(_this = _cloneStruct($val)); } }, bounds, newValue);
    };
    /*Swift.(file).UnsafeMutableRawBufferPointer.swapAt(_:Int,_:Int)*/
    /*Swift.(file).MutableCollection.swapAt(_:Self.Index,_:Self.Index)*/
    UnsafeMutableRawBufferPointer.prototype.swapAt = function ($info, i, j) {
        var _this = this;
        if (!(((_.arg0 = i).constructor.infix_33_61({}, _.arg0, j)))) {
            return;
        }
        ;
        var tmp = _this.subscript$get({}, i);
        _this.subscript$set({ $setThis: function ($val) { return $info.$setThis(_this = _cloneStruct($val)); } }, _this.subscript$get({}, j), i);
        _this.subscript$set({ $setThis: function ($val) { return $info.$setThis(_this = _cloneStruct($val)); } }, tmp, j);
    };
    /*Swift.(file).UnsafeMutableRawBufferPointer.count*/
    UnsafeMutableRawBufferPointer.prototype.count$get = function () {
        var _this = this;
        return _this.distanceFromTo({}, _this.startIndex, _this.endIndex);
    };
    Object.defineProperty(UnsafeMutableRawBufferPointer.prototype, "count", {
        get: function () { return this.count$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).UnsafeMutableRawBufferPointer.allocate(byteCount:Int,alignment:Int)*/
    /*Swift.(file).UnsafeMutableRawBufferPointer.allocate(byteCount:Int,alignment:Int)*/
    UnsafeMutableRawBufferPointer.allocateByteCountAlignment = function ($info, byteCount, alignment) {
        throw 'unsupported method Swift.(file).UnsafeMutableRawBufferPointer.allocate(byteCount:Int,alignment:Int) in ' + this.constructor.name;
    };
    /*Swift.(file).UnsafeMutableRawBufferPointer.deallocate()*/
    /*Swift.(file).UnsafeMutableRawBufferPointer.deallocate()*/
    UnsafeMutableRawBufferPointer.prototype.deallocate = function ($info) {
        throw 'unsupported method Swift.(file).UnsafeMutableRawBufferPointer.deallocate() in ' + this.constructor.name;
    };
    /*Swift.(file).UnsafeMutableRawBufferPointer.load(fromByteOffset:Int,as:T.Type)*/
    /*Swift.(file).UnsafeMutableRawBufferPointer.load(fromByteOffset:Int,as:T.Type)*/
    UnsafeMutableRawBufferPointer.prototype.loadFromByteOffsetAs = function ($info, offset, type) {
        throw 'unsupported method Swift.(file).UnsafeMutableRawBufferPointer.load(fromByteOffset:Int,as:T.Type) in ' + this.constructor.name;
    };
    /*Swift.(file).UnsafeMutableRawBufferPointer.storeBytes(of:T,toByteOffset:Int,as:T.Type)*/
    /*Swift.(file).UnsafeMutableRawBufferPointer.storeBytes(of:T,toByteOffset:Int,as:T.Type)*/
    UnsafeMutableRawBufferPointer.prototype.storeBytesOfToByteOffsetAs = function ($info, value, offset, as) {
        throw 'unsupported method Swift.(file).UnsafeMutableRawBufferPointer.storeBytes(of:T,toByteOffset:Int,as:T.Type) in ' + this.constructor.name;
    };
    /*Swift.(file).UnsafeMutableRawBufferPointer.copyMemory(from:UnsafeRawBufferPointer)*/
    /*Swift.(file).UnsafeMutableRawBufferPointer.copyMemory(from:UnsafeRawBufferPointer)*/
    UnsafeMutableRawBufferPointer.prototype.copyMemoryFrom = function ($info, source) {
        throw 'unsupported method Swift.(file).UnsafeMutableRawBufferPointer.copyMemory(from:UnsafeRawBufferPointer) in ' + this.constructor.name;
    };
    /*Swift.(file).UnsafeMutableRawBufferPointer.copyBytes(from:C)*/
    /*Swift.(file).UnsafeMutableRawBufferPointer.copyBytes(from:C)*/
    UnsafeMutableRawBufferPointer.prototype.copyBytesFrom = function ($info, source) {
        throw 'unsupported method Swift.(file).UnsafeMutableRawBufferPointer.copyBytes(from:C) in ' + this.constructor.name;
    };
    /*Swift.(file).UnsafeMutableRawBufferPointer.init(start:UnsafeMutableRawPointer?,count:Int)*/
    /*Swift.(file).UnsafeMutableRawBufferPointer.init(start:UnsafeMutableRawPointer?,count:Int)*/
    UnsafeMutableRawBufferPointer.prototype.initStartOptionalCountInt = function ($info, start, count) {
        throw 'unsupported method Swift.(file).UnsafeMutableRawBufferPointer.init(start:UnsafeMutableRawPointer?,count:Int) in ' + this.constructor.name;
    };
    /*Swift.(file).UnsafeMutableRawBufferPointer.init(_:UnsafeMutableRawBufferPointer)*/
    /*Swift.(file).UnsafeMutableRawBufferPointer.init(_:UnsafeMutableRawBufferPointer)*/
    UnsafeMutableRawBufferPointer.prototype.initUnsafeMutableRawBufferPointer = function ($info, bytes) {
        throw 'unsupported method Swift.(file).UnsafeMutableRawBufferPointer.init(_:UnsafeMutableRawBufferPointer) in ' + this.constructor.name;
    };
    /*Swift.(file).UnsafeMutableRawBufferPointer.init(mutating:UnsafeRawBufferPointer)*/
    /*Swift.(file).UnsafeMutableRawBufferPointer.init(mutating:UnsafeRawBufferPointer)*/
    UnsafeMutableRawBufferPointer.prototype.initMutatingUnsafeRawBufferPointer = function ($info, bytes) {
        throw 'unsupported method Swift.(file).UnsafeMutableRawBufferPointer.init(mutating:UnsafeRawBufferPointer) in ' + this.constructor.name;
    };
    /*Swift.(file).UnsafeMutableRawBufferPointer.init(_:UnsafeMutableBufferPointer<T>)*/
    /*Swift.(file).UnsafeMutableRawBufferPointer.init(_:UnsafeMutableBufferPointer<T>)*/
    UnsafeMutableRawBufferPointer.prototype.initUnsafeMutableBufferPointer = function ($info, buffer) {
        throw 'unsupported method Swift.(file).UnsafeMutableRawBufferPointer.init(_:UnsafeMutableBufferPointer<T>) in ' + this.constructor.name;
    };
    /*Swift.(file).UnsafeMutableRawBufferPointer.init(rebasing:Slice<UnsafeMutableRawBufferPointer>)*/
    /*Swift.(file).UnsafeMutableRawBufferPointer.init(rebasing:Slice<UnsafeMutableRawBufferPointer>)*/
    UnsafeMutableRawBufferPointer.prototype.initRebasingSlice = function ($info, slice) {
        throw 'unsupported method Swift.(file).UnsafeMutableRawBufferPointer.init(rebasing:Slice<UnsafeMutableRawBufferPointer>) in ' + this.constructor.name;
    };
    /*Swift.(file).UnsafeMutableRawBufferPointer.baseAddress*/
    UnsafeMutableRawBufferPointer.prototype.baseAddress$get = function () {
        throw 'unsupported variable Swift.(file).UnsafeMutableRawBufferPointer.baseAddress in ' + this.constructor.name;
    };
    Object.defineProperty(UnsafeMutableRawBufferPointer.prototype, "baseAddress", {
        get: function () { return this.baseAddress$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).UnsafeMutableRawBufferPointer.initializeMemory(as:T.Type,repeating:T)*/
    /*Swift.(file).UnsafeMutableRawBufferPointer.initializeMemory(as:T.Type,repeating:T)*/
    UnsafeMutableRawBufferPointer.prototype.initializeMemoryAsRepeating = function ($info, type, repeatedValue) {
        throw 'unsupported method Swift.(file).UnsafeMutableRawBufferPointer.initializeMemory(as:T.Type,repeating:T) in ' + this.constructor.name;
    };
    /*Swift.(file).UnsafeMutableRawBufferPointer.initializeMemory(as:S.Element.Type,from:S)*/
    /*Swift.(file).UnsafeMutableRawBufferPointer.initializeMemory(as:S.Element.Type,from:S)*/
    UnsafeMutableRawBufferPointer.prototype.initializeMemoryAsFrom = function ($info, type, source) {
        throw 'unsupported method Swift.(file).UnsafeMutableRawBufferPointer.initializeMemory(as:S.Element.Type,from:S) in ' + this.constructor.name;
    };
    /*Swift.(file).UnsafeMutableRawBufferPointer.bindMemory(to:T.Type)*/
    /*Swift.(file).UnsafeMutableRawBufferPointer.bindMemory(to:T.Type)*/
    UnsafeMutableRawBufferPointer.prototype.bindMemoryTo = function ($info, type) {
        throw 'unsupported method Swift.(file).UnsafeMutableRawBufferPointer.bindMemory(to:T.Type) in ' + this.constructor.name;
    };
    /*Swift.(file).UnsafeMutableRawBufferPointer.debugDescription*/
    UnsafeMutableRawBufferPointer.prototype.debugDescription$get = function () {
        throw 'unsupported variable Swift.(file).UnsafeMutableRawBufferPointer.debugDescription in ' + this.constructor.name;
    };
    Object.defineProperty(UnsafeMutableRawBufferPointer.prototype, "debugDescription", {
        get: function () { return this.debugDescription$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).UnsafeMutableRawBufferPointer.subscript(_:Range<Int>)*/
    /*Swift.(file).UnsafeMutableRawBufferPointer.subscript(_:Range<Int>)*/
    UnsafeMutableRawBufferPointer.prototype.subscript$get = function ($info, bounds) {
        throw 'unsupported method Swift.(file).UnsafeMutableRawBufferPointer.subscript(_:Range<Int>) in ' + this.constructor.name;
    }; /*Swift.(file).UnsafeMutableRawBufferPointer.subscript(_:Range<Int>)*/
    /*Swift.(file).UnsafeMutableRawBufferPointer.subscript(_:Range<Int>)*/
    UnsafeMutableRawBufferPointer.prototype.subscript$set = function ($info, newValue, bounds) {
        throw 'unsupported method Swift.(file).UnsafeMutableRawBufferPointer.subscript(_:Range<Int>) in ' + this.constructor.name;
    };
    /*Swift.(file).UnsafeMutableRawBufferPointer.subscript(_:Range<Int>)*/
    /*Swift.(file).UnsafeMutableRawBufferPointer.subscript(_:Range<Int>)*/
    UnsafeMutableRawBufferPointer.prototype.subscript$get = function ($info, bounds) {
        throw 'unsupported method Swift.(file).UnsafeMutableRawBufferPointer.subscript(_:Range<Int>) in ' + this.constructor.name;
    }; /*Swift.(file).UnsafeMutableRawBufferPointer.subscript(_:Range<Int>)*/
    /*Swift.(file).UnsafeMutableRawBufferPointer.subscript(_:Range<Int>)*/
    UnsafeMutableRawBufferPointer.prototype.subscript$set = function ($info, newValue, bounds) {
        throw 'unsupported method Swift.(file).UnsafeMutableRawBufferPointer.subscript(_:Range<Int>) in ' + this.constructor.name;
    };
    /*Swift.(file).UnsafeMutableRawBufferPointer.allocate(count:Int)*/
    /*Swift.(file).UnsafeMutableRawBufferPointer.allocate(count:Int)*/
    UnsafeMutableRawBufferPointer.allocateCount = function ($info, count) {
        var _this = this;
        return UnsafeMutableRawBufferPointer.allocateByteCountAlignment({}, count, MemoryLayout.alignment);
    };
    /*Swift.(file).UnsafeMutableRawBufferPointer.copyBytes(from:UnsafeRawBufferPointer)*/
    /*Swift.(file).UnsafeMutableRawBufferPointer.copyBytes(from:UnsafeRawBufferPointer)*/
    UnsafeMutableRawBufferPointer.prototype.copyBytesFrom = function ($info, source) {
        var _this = this;
        _this.copyMemoryFrom({}, source);
    };
    UnsafeMutableRawBufferPointer.prototype.init$vars = function () {
    };
    UnsafeMutableRawBufferPointer.$struct = true;
    UnsafeMutableRawBufferPointer.$infoAddress = '';
    return UnsafeMutableRawBufferPointer;
}());
if (typeof Sequence$implementation != 'undefined')
    _mixin(UnsafeMutableRawBufferPointer, Sequence$implementation, false);
if (typeof MutableCollection$implementation != 'undefined')
    _mixin(UnsafeMutableRawBufferPointer, MutableCollection$implementation, false);
if (typeof RandomAccessCollection$implementation != 'undefined')
    _mixin(UnsafeMutableRawBufferPointer, RandomAccessCollection$implementation, false);
if (typeof CustomDebugStringConvertible$implementation != 'undefined')
    _mixin(UnsafeMutableRawBufferPointer, CustomDebugStringConvertible$implementation, false);
var UnsafeRawBufferPointer = /** @class */ (function () {
    function UnsafeRawBufferPointer() {
    }
    /*Swift.(file).UnsafeRawBufferPointer.init(_position:UnsafeRawPointer?,_end:UnsafeRawPointer?)*/
    /*Swift.(file).UnsafeRawBufferPointer.init(_position:UnsafeRawPointer?,_end:UnsafeRawPointer?)*/
    UnsafeRawBufferPointer.prototype.init_positionOptional_endOptional = function ($info, _position, _end) {
        throw 'unsupported method Swift.(file).UnsafeRawBufferPointer.init(_position:UnsafeRawPointer?,_end:UnsafeRawPointer?) in ' + this.constructor.name;
    };
    /*Swift.(file).UnsafeRawBufferPointer.makeIterator()*/
    /*Swift.(file).Sequence.makeIterator()*/
    /*Swift.(file).Collection.makeIterator()*/
    UnsafeRawBufferPointer.prototype.makeIterator = function ($info) {
        var _this = this;
        return _this;
    };
    /*Swift.(file).UnsafeRawBufferPointer.startIndex*/
    UnsafeRawBufferPointer.prototype.startIndex$get = function () {
        throw 'unsupported variable Swift.(file).UnsafeRawBufferPointer.startIndex in ' + this.constructor.name;
    };
    Object.defineProperty(UnsafeRawBufferPointer.prototype, "startIndex", {
        get: function () { return this.startIndex$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).UnsafeRawBufferPointer.endIndex*/
    UnsafeRawBufferPointer.prototype.endIndex$get = function () {
        throw 'unsupported variable Swift.(file).UnsafeRawBufferPointer.endIndex in ' + this.constructor.name;
    };
    Object.defineProperty(UnsafeRawBufferPointer.prototype, "endIndex", {
        get: function () { return this.endIndex$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).UnsafeRawBufferPointer.indices*/
    UnsafeRawBufferPointer.prototype.indices$get = function () {
        var _this = this;
        return _create(DefaultIndices, 'init_elementsStartIndexEndIndex', {}, _this, _this.startIndex, _this.endIndex);
    };
    Object.defineProperty(UnsafeRawBufferPointer.prototype, "indices", {
        get: function () { return this.indices$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).UnsafeRawBufferPointer.subscript(_:Int)*/
    /*Swift.(file).Collection.subscript(_:Self.Index)*/
    /*Swift.(file).RandomAccessCollection.subscript(_:Self.Index)*/
    /*Swift.(file).BidirectionalCollection.subscript(_:Self.Index)*/
    UnsafeRawBufferPointer.prototype.subscript$get = function ($info, i) {
        throw 'unsupported method Swift.(file).UnsafeRawBufferPointer.subscript(_:Int) in ' + this.constructor.name;
    };
    /*Swift.(file).UnsafeRawBufferPointer.subscript(_:Range<Int>)*/
    /*Swift.(file).Collection.subscript(_:Range<Self.Index>)*/
    /*Swift.(file).RandomAccessCollection.subscript(_:Range<Self.Index>)*/
    /*Swift.(file).BidirectionalCollection.subscript(_:Range<Self.Index>)*/
    UnsafeRawBufferPointer.prototype.subscriptRange$get = function ($info, bounds) {
        var _this = this;
        return _create(Slice, 'initBaseBoundsRange', {}, _this, bounds);
    };
    /*Swift.(file).UnsafeRawBufferPointer.count*/
    UnsafeRawBufferPointer.prototype.count$get = function () {
        var _this = this;
        return _this.distanceFromTo({}, _this.startIndex, _this.endIndex);
    };
    Object.defineProperty(UnsafeRawBufferPointer.prototype, "count", {
        get: function () { return this.count$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).UnsafeRawBufferPointer.deallocate()*/
    /*Swift.(file).UnsafeRawBufferPointer.deallocate()*/
    UnsafeRawBufferPointer.prototype.deallocate = function ($info) {
        throw 'unsupported method Swift.(file).UnsafeRawBufferPointer.deallocate() in ' + this.constructor.name;
    };
    /*Swift.(file).UnsafeRawBufferPointer.load(fromByteOffset:Int,as:T.Type)*/
    /*Swift.(file).UnsafeRawBufferPointer.load(fromByteOffset:Int,as:T.Type)*/
    UnsafeRawBufferPointer.prototype.loadFromByteOffsetAs = function ($info, offset, type) {
        throw 'unsupported method Swift.(file).UnsafeRawBufferPointer.load(fromByteOffset:Int,as:T.Type) in ' + this.constructor.name;
    };
    /*Swift.(file).UnsafeRawBufferPointer.init(start:UnsafeRawPointer?,count:Int)*/
    /*Swift.(file).UnsafeRawBufferPointer.init(start:UnsafeRawPointer?,count:Int)*/
    UnsafeRawBufferPointer.prototype.initStartOptionalCountInt = function ($info, start, count) {
        throw 'unsupported method Swift.(file).UnsafeRawBufferPointer.init(start:UnsafeRawPointer?,count:Int) in ' + this.constructor.name;
    };
    /*Swift.(file).UnsafeRawBufferPointer.init(_:UnsafeMutableRawBufferPointer)*/
    /*Swift.(file).UnsafeRawBufferPointer.init(_:UnsafeMutableRawBufferPointer)*/
    UnsafeRawBufferPointer.prototype.initUnsafeMutableRawBufferPointer = function ($info, bytes) {
        throw 'unsupported method Swift.(file).UnsafeRawBufferPointer.init(_:UnsafeMutableRawBufferPointer) in ' + this.constructor.name;
    };
    /*Swift.(file).UnsafeRawBufferPointer.init(_:UnsafeRawBufferPointer)*/
    /*Swift.(file).UnsafeRawBufferPointer.init(_:UnsafeRawBufferPointer)*/
    UnsafeRawBufferPointer.prototype.initUnsafeRawBufferPointer = function ($info, bytes) {
        throw 'unsupported method Swift.(file).UnsafeRawBufferPointer.init(_:UnsafeRawBufferPointer) in ' + this.constructor.name;
    };
    /*Swift.(file).UnsafeRawBufferPointer.init(_:UnsafeMutableBufferPointer<T>)*/
    /*Swift.(file).UnsafeRawBufferPointer.init(_:UnsafeMutableBufferPointer<T>)*/
    UnsafeRawBufferPointer.prototype.initUnsafeMutableBufferPointer = function ($info, buffer) {
        throw 'unsupported method Swift.(file).UnsafeRawBufferPointer.init(_:UnsafeMutableBufferPointer<T>) in ' + this.constructor.name;
    };
    /*Swift.(file).UnsafeRawBufferPointer.init(_:UnsafeBufferPointer<T>)*/
    /*Swift.(file).UnsafeRawBufferPointer.init(_:UnsafeBufferPointer<T>)*/
    UnsafeRawBufferPointer.prototype.initUnsafeBufferPointer = function ($info, buffer) {
        throw 'unsupported method Swift.(file).UnsafeRawBufferPointer.init(_:UnsafeBufferPointer<T>) in ' + this.constructor.name;
    };
    /*Swift.(file).UnsafeRawBufferPointer.init(rebasing:Slice<UnsafeRawBufferPointer>)*/
    /*Swift.(file).UnsafeRawBufferPointer.init(rebasing:Slice<UnsafeRawBufferPointer>)*/
    UnsafeRawBufferPointer.prototype.initRebasingSlice = function ($info, slice) {
        throw 'unsupported method Swift.(file).UnsafeRawBufferPointer.init(rebasing:Slice<UnsafeRawBufferPointer>) in ' + this.constructor.name;
    };
    /*Swift.(file).UnsafeRawBufferPointer.init(rebasing:Slice<UnsafeMutableRawBufferPointer>)*/
    /*Swift.(file).UnsafeRawBufferPointer.init(rebasing:Slice<UnsafeMutableRawBufferPointer>)*/
    UnsafeRawBufferPointer.prototype.initRebasingSlice = function ($info, slice) {
        throw 'unsupported method Swift.(file).UnsafeRawBufferPointer.init(rebasing:Slice<UnsafeMutableRawBufferPointer>) in ' + this.constructor.name;
    };
    /*Swift.(file).UnsafeRawBufferPointer.baseAddress*/
    UnsafeRawBufferPointer.prototype.baseAddress$get = function () {
        throw 'unsupported variable Swift.(file).UnsafeRawBufferPointer.baseAddress in ' + this.constructor.name;
    };
    Object.defineProperty(UnsafeRawBufferPointer.prototype, "baseAddress", {
        get: function () { return this.baseAddress$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).UnsafeRawBufferPointer.bindMemory(to:T.Type)*/
    /*Swift.(file).UnsafeRawBufferPointer.bindMemory(to:T.Type)*/
    UnsafeRawBufferPointer.prototype.bindMemoryTo = function ($info, type) {
        throw 'unsupported method Swift.(file).UnsafeRawBufferPointer.bindMemory(to:T.Type) in ' + this.constructor.name;
    };
    /*Swift.(file).UnsafeRawBufferPointer.debugDescription*/
    UnsafeRawBufferPointer.prototype.debugDescription$get = function () {
        throw 'unsupported variable Swift.(file).UnsafeRawBufferPointer.debugDescription in ' + this.constructor.name;
    };
    Object.defineProperty(UnsafeRawBufferPointer.prototype, "debugDescription", {
        get: function () { return this.debugDescription$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).UnsafeRawBufferPointer.subscript(_:Range<Int>)*/
    /*Swift.(file).UnsafeRawBufferPointer.subscript(_:Range<Int>)*/
    UnsafeRawBufferPointer.prototype.subscript$get = function ($info, bounds) {
        throw 'unsupported method Swift.(file).UnsafeRawBufferPointer.subscript(_:Range<Int>) in ' + this.constructor.name;
    };
    UnsafeRawBufferPointer.prototype.init$vars = function () {
    };
    var _58;
    UnsafeRawBufferPointer.$struct = true;
    UnsafeRawBufferPointer.$infoAddress = '';
    UnsafeRawBufferPointer.Iterator = (_58 = /** @class */ (function () {
            function class_82() {
            }
            /*Swift.(file).UnsafeRawBufferPointer.Iterator.init(_position:UnsafeRawPointer?,_end:UnsafeRawPointer?)*/
            /*Swift.(file).UnsafeRawBufferPointer.Iterator.init(_position:UnsafeRawPointer?,_end:UnsafeRawPointer?)*/
            class_82.prototype.init_positionOptional_endOptional = function ($info, _position, _end) {
                throw 'unsupported method Swift.(file).UnsafeRawBufferPointer.Iterator.init(_position:UnsafeRawPointer?,_end:UnsafeRawPointer?) in ' + this.constructor.name;
            };
            /*Swift.(file).UnsafeRawBufferPointer.Iterator.next()*/
            /*Swift.(file).IteratorProtocol.next()*/
            class_82.prototype.next = function ($info) {
                throw 'unsupported method Swift.(file).UnsafeRawBufferPointer.Iterator.next() in ' + this.constructor.name;
            };
            class_82.prototype.init$vars = function () {
            };
            return class_82;
        }()),
        _58.$struct = true,
        _58.$infoAddress = '',
        _58);
    return UnsafeRawBufferPointer;
}());
if (typeof IteratorProtocol$implementation != 'undefined')
    _mixin(UnsafeRawBufferPointer.Iterator, IteratorProtocol$implementation, false);
if (typeof Sequence$implementation != 'undefined')
    _mixin(UnsafeRawBufferPointer.Iterator, Sequence$implementation, false);
if (typeof Sequence$implementation != 'undefined')
    _mixin(UnsafeRawBufferPointer, Sequence$implementation, false);
if (typeof Collection$implementation != 'undefined')
    _mixin(UnsafeRawBufferPointer, Collection$implementation, false);
if (typeof RandomAccessCollection$implementation != 'undefined')
    _mixin(UnsafeRawBufferPointer, RandomAccessCollection$implementation, false);
if (typeof CustomDebugStringConvertible$implementation != 'undefined')
    _mixin(UnsafeRawBufferPointer, CustomDebugStringConvertible$implementation, false);
var UnsafePointer = /** @class */ (function () {
    function UnsafePointer() {
    }
    /*Swift.(file).UnsafePointer.init(_:RawPointer)*/
    /*Swift.(file)._Pointer.init(_:RawPointer)*/
    UnsafePointer.prototype.initRawPointer = function ($info, _rawValue) {
        throw 'unsupported method Swift.(file).UnsafePointer.init(_:RawPointer) in ' + this.constructor.name;
    };
    /*Swift.(file).UnsafePointer.deallocate()*/
    /*Swift.(file).UnsafePointer.deallocate()*/
    UnsafePointer.prototype.deallocate = function ($info) {
        throw 'unsupported method Swift.(file).UnsafePointer.deallocate() in ' + this.constructor.name;
    };
    /*Swift.(file).UnsafePointer.pointee*/
    UnsafePointer.prototype.pointee$get = function () {
        return this.pointee$internal;
    };
    Object.defineProperty(UnsafePointer.prototype, "pointee", {
        get: function () { return this.pointee$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).UnsafePointer.withMemoryRebound(to:T.Type,capacity:Int,_:(UnsafePointer<T>) throws -> Result)*/
    /*Swift.(file).UnsafePointer.withMemoryRebound(to:T.Type,capacity:Int,_:(UnsafePointer<T>) throws -> Result)*/
    UnsafePointer.prototype.withMemoryReboundToCapacity = function ($info, type, count, body) {
        throw 'unsupported method Swift.(file).UnsafePointer.withMemoryRebound(to:T.Type,capacity:Int,_:(UnsafePointer<T>) throws -> Result) in ' + this.constructor.name;
    };
    /*Swift.(file).UnsafePointer.subscript(_:Int)*/
    /*Swift.(file).UnsafePointer.subscript(_:Int)*/
    UnsafePointer.prototype.subscript$unsafeAddress = function ($info, i) {
        var _this = this;
        return UnsafePointer.infix_43({}, _this, i);
    };
    /*Swift.(file).UnsafePointer.hashValue*/
    UnsafePointer.prototype.hashValue$get = function () {
        throw 'unsupported variable Swift.(file).UnsafePointer.hashValue in ' + this.constructor.name;
    };
    Object.defineProperty(UnsafePointer.prototype, "hashValue", {
        get: function () { return this.hashValue$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).UnsafePointer.summary*/
    UnsafePointer.prototype.summary$get = function () {
        throw 'unsupported variable Swift.(file).UnsafePointer.summary in ' + this.constructor.name;
    };
    Object.defineProperty(UnsafePointer.prototype, "summary", {
        get: function () { return this.summary$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).UnsafePointer.customPlaygroundQuickLook*/
    UnsafePointer.prototype.customPlaygroundQuickLook$get = function () {
        var _this = this;
        return PlaygroundQuickLook._text({}, _this.summary);
    };
    Object.defineProperty(UnsafePointer.prototype, "customPlaygroundQuickLook", {
        get: function () { return this.customPlaygroundQuickLook$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    UnsafePointer.prototype.init$vars = function () {
    };
    UnsafePointer.$struct = true;
    UnsafePointer.$infoAddress = '';
    return UnsafePointer;
}());
if (typeof _Pointer$implementation != 'undefined')
    _mixin(UnsafePointer, _Pointer$implementation, false);
if (typeof _CustomPlaygroundQuickLookable$implementation != 'undefined')
    _mixin(UnsafePointer, _CustomPlaygroundQuickLookable$implementation, false);
if (typeof CVarArg$implementation != 'undefined')
    _mixin(UnsafePointer, CVarArg$implementation, false);
var UnsafeMutablePointer = /** @class */ (function () {
    function UnsafeMutablePointer() {
    }
    /*Swift.(file).UnsafeMutablePointer.init(_:RawPointer)*/
    /*Swift.(file)._Pointer.init(_:RawPointer)*/
    UnsafeMutablePointer.prototype.initRawPointer = function ($info, _rawValue) {
        throw 'unsupported method Swift.(file).UnsafeMutablePointer.init(_:RawPointer) in ' + this.constructor.name;
    };
    /*Swift.(file).UnsafeMutablePointer.init(mutating:UnsafePointer<Pointee>)*/
    /*Swift.(file).UnsafeMutablePointer.init(mutating:UnsafePointer<Pointee>)*/
    UnsafeMutablePointer.prototype.initMutatingUnsafePointer = function ($info, other) {
        throw 'unsupported method Swift.(file).UnsafeMutablePointer.init(mutating:UnsafePointer<Pointee>) in ' + this.constructor.name;
    };
    /*Swift.(file).UnsafeMutablePointer.init(mutating:UnsafePointer<Pointee>?)*/
    /*Swift.(file).UnsafeMutablePointer.init(mutating:UnsafePointer<Pointee>?)*/
    UnsafeMutablePointer.prototype.initMutatingOptional = function ($info, other) {
        var _this = this;
        var $ifLet0, unwrapped_1;
        if (!((($ifLet0 = other) || true) && $ifLet0 != null && ((unwrapped_1 = $ifLet0) || true))) {
            return (this.$failed = true);
        }
        ;
        _this.initMutatingUnsafePointer({}, unwrapped_1);
        return;
    };
    /*Swift.(file).UnsafeMutablePointer.allocate(capacity:Int)*/
    /*Swift.(file).UnsafeMutablePointer.allocate(capacity:Int)*/
    UnsafeMutablePointer.allocateCapacity = function ($info, count) {
        throw 'unsupported method Swift.(file).UnsafeMutablePointer.allocate(capacity:Int) in ' + this.constructor.name;
    };
    /*Swift.(file).UnsafeMutablePointer.deallocate()*/
    /*Swift.(file).UnsafeMutablePointer.deallocate()*/
    UnsafeMutablePointer.prototype.deallocate = function ($info) {
        throw 'unsupported method Swift.(file).UnsafeMutablePointer.deallocate() in ' + this.constructor.name;
    };
    /*Swift.(file).UnsafeMutablePointer.pointee*/
    UnsafeMutablePointer.prototype.pointee$get = function () {
        return this.pointee$internal;
    };
    Object.defineProperty(UnsafeMutablePointer.prototype, "pointee", {
        get: function () { return this.pointee$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).UnsafeMutablePointer.initialize(repeating:Pointee,count:Int)*/
    /*Swift.(file).UnsafeMutablePointer.initialize(repeating:Pointee,count:Int)*/
    UnsafeMutablePointer.prototype.initializeRepeatingCount = function ($info, repeatedValue, count) {
        throw 'unsupported method Swift.(file).UnsafeMutablePointer.initialize(repeating:Pointee,count:Int) in ' + this.constructor.name;
    };
    /*Swift.(file).UnsafeMutablePointer.initialize(to:Pointee)*/
    /*Swift.(file).UnsafeMutablePointer.initialize(to:Pointee)*/
    UnsafeMutablePointer.prototype.initializeTo = function ($info, value) {
        throw 'unsupported method Swift.(file).UnsafeMutablePointer.initialize(to:Pointee) in ' + this.constructor.name;
    };
    /*Swift.(file).UnsafeMutablePointer.move()*/
    /*Swift.(file).UnsafeMutablePointer.move()*/
    UnsafeMutablePointer.prototype.move = function ($info) {
        throw 'unsupported method Swift.(file).UnsafeMutablePointer.move() in ' + this.constructor.name;
    };
    /*Swift.(file).UnsafeMutablePointer.assign(repeating:Pointee,count:Int)*/
    /*Swift.(file).UnsafeMutablePointer.assign(repeating:Pointee,count:Int)*/
    UnsafeMutablePointer.prototype.assignRepeatingCount = function ($info, repeatedValue, count) {
        var _this = this;
        preconditionFileLine({}, function () { return Int.infix_62_61({}, count, 0); }, function () { return "UnsafeMutablePointer.assign(repeating:count:) with negative count"; }, '?3', '?3');
        {
            var $i$generator_2 = _cloneStruct(Int.infix_46_46_60({}, 0, count).makeIterator({}));
            while (true) {
                var $ifLet0, i_1;
                if (!((($ifLet0 = $i$generator_2.next({ $setThis: function ($val) { return $i$generator_2 = $val; } })) || true) && $ifLet0 != null && ((i_1 = $ifLet0) || true)))
                    break;
                _this.subscript$set({ $setThis: function ($val) { return $info.$setThis(_this = _cloneStruct(_cloneStruct($val))); } }, repeatedValue, i_1);
            }
        }
    };
    /*Swift.(file).UnsafeMutablePointer.assign(from:UnsafePointer<Pointee>,count:Int)*/
    /*Swift.(file).UnsafeMutablePointer.assign(from:UnsafePointer<Pointee>,count:Int)*/
    UnsafeMutablePointer.prototype.assignFromCount = function ($info, source, count) {
        throw 'unsupported method Swift.(file).UnsafeMutablePointer.assign(from:UnsafePointer<Pointee>,count:Int) in ' + this.constructor.name;
    };
    /*Swift.(file).UnsafeMutablePointer.moveInitialize(from:UnsafeMutablePointer<Pointee>,count:Int)*/
    /*Swift.(file).UnsafeMutablePointer.moveInitialize(from:UnsafeMutablePointer<Pointee>,count:Int)*/
    UnsafeMutablePointer.prototype.moveInitializeFromCount = function ($info, source, count) {
        throw 'unsupported method Swift.(file).UnsafeMutablePointer.moveInitialize(from:UnsafeMutablePointer<Pointee>,count:Int) in ' + this.constructor.name;
    };
    /*Swift.(file).UnsafeMutablePointer.initialize(from:UnsafePointer<Pointee>,count:Int)*/
    /*Swift.(file).UnsafeMutablePointer.initialize(from:UnsafePointer<Pointee>,count:Int)*/
    UnsafeMutablePointer.prototype.initializeFromCount = function ($info, source, count) {
        throw 'unsupported method Swift.(file).UnsafeMutablePointer.initialize(from:UnsafePointer<Pointee>,count:Int) in ' + this.constructor.name;
    };
    /*Swift.(file).UnsafeMutablePointer.moveAssign(from:UnsafeMutablePointer<Pointee>,count:Int)*/
    /*Swift.(file).UnsafeMutablePointer.moveAssign(from:UnsafeMutablePointer<Pointee>,count:Int)*/
    UnsafeMutablePointer.prototype.moveAssignFromCount = function ($info, source, count) {
        throw 'unsupported method Swift.(file).UnsafeMutablePointer.moveAssign(from:UnsafeMutablePointer<Pointee>,count:Int) in ' + this.constructor.name;
    };
    /*Swift.(file).UnsafeMutablePointer.deinitialize(count:Int)*/
    /*Swift.(file).UnsafeMutablePointer.deinitialize(count:Int)*/
    UnsafeMutablePointer.prototype.deinitializeCount = function ($info, count) {
        throw 'unsupported method Swift.(file).UnsafeMutablePointer.deinitialize(count:Int) in ' + this.constructor.name;
    };
    /*Swift.(file).UnsafeMutablePointer.withMemoryRebound(to:T.Type,capacity:Int,_:(UnsafeMutablePointer<T>) throws -> Result)*/
    /*Swift.(file).UnsafeMutablePointer.withMemoryRebound(to:T.Type,capacity:Int,_:(UnsafeMutablePointer<T>) throws -> Result)*/
    UnsafeMutablePointer.prototype.withMemoryReboundToCapacity = function ($info, type, count, body) {
        throw 'unsupported method Swift.(file).UnsafeMutablePointer.withMemoryRebound(to:T.Type,capacity:Int,_:(UnsafeMutablePointer<T>) throws -> Result) in ' + this.constructor.name;
    };
    /*Swift.(file).UnsafeMutablePointer.subscript(_:Int)*/
    /*Swift.(file).UnsafeMutablePointer.subscript(_:Int)*/
    UnsafeMutablePointer.prototype.subscript$unsafeAddress = function ($info, i) {
        var _this = this;
        return _create(UnsafePointer, 'initUnsafeMutablePointer', {}, UnsafeMutablePointer.infix_43({}, _this, i));
    };
    UnsafeMutablePointer.prototype.subscript$unsafeMutableAddress = function ($info, i) {
        var _this = this;
        return UnsafeMutablePointer.infix_43({}, _this, i);
    }; /*Swift.(file).UnsafeMutablePointer.subscript(_:Int)*/
    /*Swift.(file).UnsafeMutablePointer.subscript(_:Int)*/
    UnsafeMutablePointer.prototype.subscript$unsafeMutableAddress = function ($info, i) {
        var _this = this;
        return _create(UnsafePointer, 'initUnsafeMutablePointer', {}, UnsafeMutablePointer.infix_43({}, _this, i));
    };
    UnsafeMutablePointer.prototype.subscript$unsafeMutableAddress = function ($info, i) {
        var _this = this;
        return UnsafeMutablePointer.infix_43({}, _this, i);
    };
    /*Swift.(file).UnsafeMutablePointer.hashValue*/
    UnsafeMutablePointer.prototype.hashValue$get = function () {
        throw 'unsupported variable Swift.(file).UnsafeMutablePointer.hashValue in ' + this.constructor.name;
    };
    Object.defineProperty(UnsafeMutablePointer.prototype, "hashValue", {
        get: function () { return this.hashValue$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).UnsafeMutablePointer.initialize(to:Pointee,count:Int)*/
    /*Swift.(file).UnsafeMutablePointer.initialize(to:Pointee,count:Int)*/
    UnsafeMutablePointer.prototype.initializeToCount = function ($info, newValue, count) {
        var _this = this;
        _this.initializeRepeatingCount({}, newValue, count);
    };
    /*Swift.(file).UnsafeMutablePointer.deinitialize()*/
    /*Swift.(file).UnsafeMutablePointer.deinitialize()*/
    UnsafeMutablePointer.prototype.deinitialize = function ($info) {
        var _this = this;
        return _this.deinitializeCount({}, 1);
    };
    /*Swift.(file).UnsafeMutablePointer.deallocate(capacity:Int)*/
    /*Swift.(file).UnsafeMutablePointer.deallocate(capacity:Int)*/
    UnsafeMutablePointer.prototype.deallocateCapacity = function ($info, _) {
        var _this = this;
        _this.deallocate({});
    };
    /*Swift.(file).UnsafeMutablePointer.initialize(from:C)*/
    /*Swift.(file).UnsafeMutablePointer.initialize(from:C)*/
    UnsafeMutablePointer.prototype.initializeFrom = function ($info, source) {
        var _this = this;
        var buf = _create(UnsafeMutableBufferPointer, 'initStartOptionalCountInt', {}, /*pointer_to_pointer*/ _this, numericCast({ T: Int, U: Int }, source.count));
        var $tuple = source._copyContentsInitializing({}, buf), remainders = $tuple && $tuple[0], writtenUpTo = $tuple && $tuple[1];
        preconditionFileLine({}, function () { return Optional.wrappedEqualsOptionalNilComparisonType({}, remainders.next({ $setThis: function ($val) { return remainders = $val; } }), null); }, function () { return "rhs underreported its count"; }, '?3', '?3');
        preconditionFileLine({}, function () { return Int.infix_61_61({}, writtenUpTo, buf.endIndex); }, function () { return "rhs overreported its count"; }, '?3', '?3');
    };
    /*Swift.(file).UnsafeMutablePointer.summary*/
    UnsafeMutablePointer.prototype.summary$get = function () {
        throw 'unsupported variable Swift.(file).UnsafeMutablePointer.summary in ' + this.constructor.name;
    };
    Object.defineProperty(UnsafeMutablePointer.prototype, "summary", {
        get: function () { return this.summary$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).UnsafeMutablePointer.customPlaygroundQuickLook*/
    UnsafeMutablePointer.prototype.customPlaygroundQuickLook$get = function () {
        var _this = this;
        return PlaygroundQuickLook._text({}, _this.summary);
    };
    Object.defineProperty(UnsafeMutablePointer.prototype, "customPlaygroundQuickLook", {
        get: function () { return this.customPlaygroundQuickLook$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    UnsafeMutablePointer.prototype.init$vars = function () {
    };
    UnsafeMutablePointer.$struct = true;
    UnsafeMutablePointer.$infoAddress = '';
    UnsafeMutablePointer.initMutatingOptional$failable = true;
    return UnsafeMutablePointer;
}());
if (typeof _Pointer$implementation != 'undefined')
    _mixin(UnsafeMutablePointer, _Pointer$implementation, false);
if (typeof _CustomPlaygroundQuickLookable$implementation != 'undefined')
    _mixin(UnsafeMutablePointer, _CustomPlaygroundQuickLookable$implementation, false);
if (typeof CVarArg$implementation != 'undefined')
    _mixin(UnsafeMutablePointer, CVarArg$implementation, false);
var UnsafeRawPointer = /** @class */ (function () {
    function UnsafeRawPointer() {
    }
    /*Swift.(file).UnsafeRawPointer.init(_:RawPointer)*/
    /*Swift.(file)._Pointer.init(_:RawPointer)*/
    UnsafeRawPointer.prototype.initRawPointer = function ($info, _rawValue) {
        throw 'unsupported method Swift.(file).UnsafeRawPointer.init(_:RawPointer) in ' + this.constructor.name;
    };
    /*Swift.(file).UnsafeRawPointer.init(_:UnsafePointer<T>)*/
    /*Swift.(file).UnsafeRawPointer.init(_:UnsafePointer<T>)*/
    UnsafeRawPointer.prototype.initUnsafePointer = function ($info, other) {
        throw 'unsupported method Swift.(file).UnsafeRawPointer.init(_:UnsafePointer<T>) in ' + this.constructor.name;
    };
    /*Swift.(file).UnsafeRawPointer.init(_:UnsafePointer<T>?)*/
    /*Swift.(file).UnsafeRawPointer.init(_:UnsafePointer<T>?)*/
    UnsafeRawPointer.prototype.initOptional = function ($info, other) {
        throw 'unsupported method Swift.(file).UnsafeRawPointer.init(_:UnsafePointer<T>?) in ' + this.constructor.name;
    };
    /*Swift.(file).UnsafeRawPointer.init(_:UnsafeMutableRawPointer)*/
    /*Swift.(file).UnsafeRawPointer.init(_:UnsafeMutableRawPointer)*/
    UnsafeRawPointer.prototype.initUnsafeMutableRawPointer = function ($info, other) {
        throw 'unsupported method Swift.(file).UnsafeRawPointer.init(_:UnsafeMutableRawPointer) in ' + this.constructor.name;
    };
    /*Swift.(file).UnsafeRawPointer.init(_:UnsafeMutableRawPointer?)*/
    /*Swift.(file).UnsafeRawPointer.init(_:UnsafeMutableRawPointer?)*/
    UnsafeRawPointer.prototype.initOptional = function ($info, other) {
        throw 'unsupported method Swift.(file).UnsafeRawPointer.init(_:UnsafeMutableRawPointer?) in ' + this.constructor.name;
    };
    /*Swift.(file).UnsafeRawPointer.deallocate()*/
    /*Swift.(file).UnsafeRawPointer.deallocate()*/
    UnsafeRawPointer.prototype.deallocate = function ($info) {
        throw 'unsupported method Swift.(file).UnsafeRawPointer.deallocate() in ' + this.constructor.name;
    };
    /*Swift.(file).UnsafeRawPointer.bindMemory(to:T.Type,capacity:Int)*/
    /*Swift.(file).UnsafeRawPointer.bindMemory(to:T.Type,capacity:Int)*/
    UnsafeRawPointer.prototype.bindMemoryToCapacity = function ($info, type, count) {
        throw 'unsupported method Swift.(file).UnsafeRawPointer.bindMemory(to:T.Type,capacity:Int) in ' + this.constructor.name;
    };
    /*Swift.(file).UnsafeRawPointer.assumingMemoryBound(to:T.Type)*/
    /*Swift.(file).UnsafeRawPointer.assumingMemoryBound(to:T.Type)*/
    UnsafeRawPointer.prototype.assumingMemoryBoundTo = function ($info, to) {
        var _this = this;
        return _create(UnsafePointer, 'initRawPointer', {}, _this._rawValue);
    };
    /*Swift.(file).UnsafeRawPointer.load(fromByteOffset:Int,as:T.Type)*/
    /*Swift.(file).UnsafeRawPointer.load(fromByteOffset:Int,as:T.Type)*/
    UnsafeRawPointer.prototype.loadFromByteOffsetAs = function ($info, offset, type) {
        throw 'unsupported method Swift.(file).UnsafeRawPointer.load(fromByteOffset:Int,as:T.Type) in ' + this.constructor.name;
    };
    /*Swift.(file).UnsafeRawPointer.hashValue*/
    UnsafeRawPointer.prototype.hashValue$get = function () {
        throw 'unsupported variable Swift.(file).UnsafeRawPointer.hashValue in ' + this.constructor.name;
    };
    Object.defineProperty(UnsafeRawPointer.prototype, "hashValue", {
        get: function () { return this.hashValue$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).UnsafeRawPointer.init(_:AutoreleasingUnsafeMutablePointer<T>)*/
    /*Swift.(file).UnsafeRawPointer.init(_:AutoreleasingUnsafeMutablePointer<T>)*/
    UnsafeRawPointer.prototype.initAutoreleasingUnsafeMutablePointer = function ($info, other) {
        throw 'unsupported method Swift.(file).UnsafeRawPointer.init(_:AutoreleasingUnsafeMutablePointer<T>) in ' + this.constructor.name;
    };
    /*Swift.(file).UnsafeRawPointer.init(_:AutoreleasingUnsafeMutablePointer<T>?)*/
    /*Swift.(file).UnsafeRawPointer.init(_:AutoreleasingUnsafeMutablePointer<T>?)*/
    UnsafeRawPointer.prototype.initOptional = function ($info, other) {
        var _this = this;
        var $ifLet0, unwrapped_1;
        if (!((($ifLet0 = other) || true) && $ifLet0 != null && ((unwrapped_1 = $ifLet0) || true))) {
            return (this.$failed = true);
        }
        ;
        _this.init({}, /*pointer_to_pointer*/ unwrapped_1);
        return;
    };
    /*Swift.(file).UnsafeRawPointer.advanced(by:Int)*/
    /*Swift.(file).Strideable.advanced(by:Self.Stride)*/
    UnsafeRawPointer.prototype.advancedBy = function ($info, n) {
        throw 'unsupported method Swift.(file).UnsafeRawPointer.advanced(by:Int) in ' + this.constructor.name;
    };
    /*Swift.(file).UnsafeRawPointer.summary*/
    UnsafeRawPointer.prototype.summary$get = function () {
        throw 'unsupported variable Swift.(file).UnsafeRawPointer.summary in ' + this.constructor.name;
    };
    Object.defineProperty(UnsafeRawPointer.prototype, "summary", {
        get: function () { return this.summary$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).UnsafeRawPointer.customPlaygroundQuickLook*/
    UnsafeRawPointer.prototype.customPlaygroundQuickLook$get = function () {
        var _this = this;
        return _PlaygroundQuickLook._text({}, _this.summary);
    };
    Object.defineProperty(UnsafeRawPointer.prototype, "customPlaygroundQuickLook", {
        get: function () { return this.customPlaygroundQuickLook$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    UnsafeRawPointer.prototype.init$vars = function () {
    };
    UnsafeRawPointer.$struct = true;
    UnsafeRawPointer.$infoAddress = '';
    UnsafeRawPointer.initOptional$failable = true;
    UnsafeRawPointer.initOptional$failable = true;
    UnsafeRawPointer.initOptional$failable = true;
    return UnsafeRawPointer;
}());
if (typeof _Pointer$implementation != 'undefined')
    _mixin(UnsafeRawPointer, _Pointer$implementation, false);
if (typeof Strideable$implementation != 'undefined')
    _mixin(UnsafeRawPointer, Strideable$implementation, false);
if (typeof _CustomPlaygroundQuickLookable$implementation != 'undefined')
    _mixin(UnsafeRawPointer, _CustomPlaygroundQuickLookable$implementation, false);
var UnsafeMutableRawPointer = /** @class */ (function () {
    function UnsafeMutableRawPointer() {
    }
    /*Swift.(file).UnsafeMutableRawPointer.init(_:RawPointer)*/
    /*Swift.(file)._Pointer.init(_:RawPointer)*/
    UnsafeMutableRawPointer.prototype.initRawPointer = function ($info, _rawValue) {
        throw 'unsupported method Swift.(file).UnsafeMutableRawPointer.init(_:RawPointer) in ' + this.constructor.name;
    };
    /*Swift.(file).UnsafeMutableRawPointer.init(_:UnsafeMutablePointer<T>)*/
    /*Swift.(file).UnsafeMutableRawPointer.init(_:UnsafeMutablePointer<T>)*/
    UnsafeMutableRawPointer.prototype.initUnsafeMutablePointer = function ($info, other) {
        throw 'unsupported method Swift.(file).UnsafeMutableRawPointer.init(_:UnsafeMutablePointer<T>) in ' + this.constructor.name;
    };
    /*Swift.(file).UnsafeMutableRawPointer.init(_:UnsafeMutablePointer<T>?)*/
    /*Swift.(file).UnsafeMutableRawPointer.init(_:UnsafeMutablePointer<T>?)*/
    UnsafeMutableRawPointer.prototype.initOptional = function ($info, other) {
        throw 'unsupported method Swift.(file).UnsafeMutableRawPointer.init(_:UnsafeMutablePointer<T>?) in ' + this.constructor.name;
    };
    /*Swift.(file).UnsafeMutableRawPointer.init(mutating:UnsafeRawPointer)*/
    /*Swift.(file).UnsafeMutableRawPointer.init(mutating:UnsafeRawPointer)*/
    UnsafeMutableRawPointer.prototype.initMutatingUnsafeRawPointer = function ($info, other) {
        throw 'unsupported method Swift.(file).UnsafeMutableRawPointer.init(mutating:UnsafeRawPointer) in ' + this.constructor.name;
    };
    /*Swift.(file).UnsafeMutableRawPointer.init(mutating:UnsafeRawPointer?)*/
    /*Swift.(file).UnsafeMutableRawPointer.init(mutating:UnsafeRawPointer?)*/
    UnsafeMutableRawPointer.prototype.initMutatingOptional = function ($info, other) {
        throw 'unsupported method Swift.(file).UnsafeMutableRawPointer.init(mutating:UnsafeRawPointer?) in ' + this.constructor.name;
    };
    /*Swift.(file).UnsafeMutableRawPointer.allocate(byteCount:Int,alignment:Int)*/
    /*Swift.(file).UnsafeMutableRawPointer.allocate(byteCount:Int,alignment:Int)*/
    UnsafeMutableRawPointer.allocateByteCountAlignment = function ($info, byteCount, alignment) {
        throw 'unsupported method Swift.(file).UnsafeMutableRawPointer.allocate(byteCount:Int,alignment:Int) in ' + this.constructor.name;
    };
    /*Swift.(file).UnsafeMutableRawPointer.deallocate()*/
    /*Swift.(file).UnsafeMutableRawPointer.deallocate()*/
    UnsafeMutableRawPointer.prototype.deallocate = function ($info) {
        throw 'unsupported method Swift.(file).UnsafeMutableRawPointer.deallocate() in ' + this.constructor.name;
    };
    /*Swift.(file).UnsafeMutableRawPointer.bindMemory(to:T.Type,capacity:Int)*/
    /*Swift.(file).UnsafeMutableRawPointer.bindMemory(to:T.Type,capacity:Int)*/
    UnsafeMutableRawPointer.prototype.bindMemoryToCapacity = function ($info, type, count) {
        throw 'unsupported method Swift.(file).UnsafeMutableRawPointer.bindMemory(to:T.Type,capacity:Int) in ' + this.constructor.name;
    };
    /*Swift.(file).UnsafeMutableRawPointer.assumingMemoryBound(to:T.Type)*/
    /*Swift.(file).UnsafeMutableRawPointer.assumingMemoryBound(to:T.Type)*/
    UnsafeMutableRawPointer.prototype.assumingMemoryBoundTo = function ($info, to) {
        var _this = this;
        return _create(UnsafeMutablePointer, 'initRawPointer', {}, _this._rawValue);
    };
    /*Swift.(file).UnsafeMutableRawPointer.initializeMemory(as:T.Type,repeating:T,count:Int)*/
    /*Swift.(file).UnsafeMutableRawPointer.initializeMemory(as:T.Type,repeating:T,count:Int)*/
    UnsafeMutableRawPointer.prototype.initializeMemoryAsRepeatingCount = function ($info, type, repeatedValue, count) {
        throw 'unsupported method Swift.(file).UnsafeMutableRawPointer.initializeMemory(as:T.Type,repeating:T,count:Int) in ' + this.constructor.name;
    };
    /*Swift.(file).UnsafeMutableRawPointer.initializeMemory(as:T.Type,from:UnsafePointer<T>,count:Int)*/
    /*Swift.(file).UnsafeMutableRawPointer.initializeMemory(as:T.Type,from:UnsafePointer<T>,count:Int)*/
    UnsafeMutableRawPointer.prototype.initializeMemoryAsFromCount = function ($info, type, source, count) {
        throw 'unsupported method Swift.(file).UnsafeMutableRawPointer.initializeMemory(as:T.Type,from:UnsafePointer<T>,count:Int) in ' + this.constructor.name;
    };
    /*Swift.(file).UnsafeMutableRawPointer.moveInitializeMemory(as:T.Type,from:UnsafeMutablePointer<T>,count:Int)*/
    /*Swift.(file).UnsafeMutableRawPointer.moveInitializeMemory(as:T.Type,from:UnsafeMutablePointer<T>,count:Int)*/
    UnsafeMutableRawPointer.prototype.moveInitializeMemoryAsFromCount = function ($info, type, source, count) {
        throw 'unsupported method Swift.(file).UnsafeMutableRawPointer.moveInitializeMemory(as:T.Type,from:UnsafeMutablePointer<T>,count:Int) in ' + this.constructor.name;
    };
    /*Swift.(file).UnsafeMutableRawPointer.load(fromByteOffset:Int,as:T.Type)*/
    /*Swift.(file).UnsafeMutableRawPointer.load(fromByteOffset:Int,as:T.Type)*/
    UnsafeMutableRawPointer.prototype.loadFromByteOffsetAs = function ($info, offset, type) {
        throw 'unsupported method Swift.(file).UnsafeMutableRawPointer.load(fromByteOffset:Int,as:T.Type) in ' + this.constructor.name;
    };
    /*Swift.(file).UnsafeMutableRawPointer.storeBytes(of:T,toByteOffset:Int,as:T.Type)*/
    /*Swift.(file).UnsafeMutableRawPointer.storeBytes(of:T,toByteOffset:Int,as:T.Type)*/
    UnsafeMutableRawPointer.prototype.storeBytesOfToByteOffsetAs = function ($info, value, offset, type) {
        throw 'unsupported method Swift.(file).UnsafeMutableRawPointer.storeBytes(of:T,toByteOffset:Int,as:T.Type) in ' + this.constructor.name;
    };
    /*Swift.(file).UnsafeMutableRawPointer.copyMemory(from:UnsafeRawPointer,byteCount:Int)*/
    /*Swift.(file).UnsafeMutableRawPointer.copyMemory(from:UnsafeRawPointer,byteCount:Int)*/
    UnsafeMutableRawPointer.prototype.copyMemoryFromByteCount = function ($info, source, byteCount) {
        var _this = this;
        preconditionFileLine({}, function () { return Int.infix_62_61({}, byteCount, 0); }, function () { return "UnsafeMutableRawPointer.copyMemory with negative count"; }, '?3', '?3');
        _memmoveDestSrcSize({}, _this, source, _create(UInt, 'initT', {}, byteCount));
    };
    /*Swift.(file).UnsafeMutableRawPointer.hashValue*/
    UnsafeMutableRawPointer.prototype.hashValue$get = function () {
        throw 'unsupported variable Swift.(file).UnsafeMutableRawPointer.hashValue in ' + this.constructor.name;
    };
    Object.defineProperty(UnsafeMutableRawPointer.prototype, "hashValue", {
        get: function () { return this.hashValue$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).UnsafeMutableRawPointer.init(_:AutoreleasingUnsafeMutablePointer<T>)*/
    /*Swift.(file).UnsafeMutableRawPointer.init(_:AutoreleasingUnsafeMutablePointer<T>)*/
    UnsafeMutableRawPointer.prototype.initAutoreleasingUnsafeMutablePointer = function ($info, other) {
        throw 'unsupported method Swift.(file).UnsafeMutableRawPointer.init(_:AutoreleasingUnsafeMutablePointer<T>) in ' + this.constructor.name;
    };
    /*Swift.(file).UnsafeMutableRawPointer.init(_:AutoreleasingUnsafeMutablePointer<T>?)*/
    /*Swift.(file).UnsafeMutableRawPointer.init(_:AutoreleasingUnsafeMutablePointer<T>?)*/
    UnsafeMutableRawPointer.prototype.initOptional = function ($info, other) {
        var _this = this;
        var $ifLet0, unwrapped_1;
        if (!((($ifLet0 = other) || true) && $ifLet0 != null && ((unwrapped_1 = $ifLet0) || true))) {
            return (this.$failed = true);
        }
        ;
        _this.initAutoreleasingUnsafeMutablePointer({}, unwrapped_1);
        return;
    };
    /*Swift.(file).UnsafeMutableRawPointer.advanced(by:Int)*/
    /*Swift.(file).Strideable.advanced(by:Self.Stride)*/
    UnsafeMutableRawPointer.prototype.advancedBy = function ($info, n) {
        throw 'unsupported method Swift.(file).UnsafeMutableRawPointer.advanced(by:Int) in ' + this.constructor.name;
    };
    /*Swift.(file).UnsafeMutableRawPointer.init(_:UnsafeRawPointer)*/
    /*Swift.(file).UnsafeMutableRawPointer.init(_:UnsafeRawPointer)*/
    UnsafeMutableRawPointer.prototype.initUnsafeRawPointer = function ($info, from) {
        throw 'unsupported method Swift.(file).UnsafeMutableRawPointer.init(_:UnsafeRawPointer) in ' + this.constructor.name;
    };
    /*Swift.(file).UnsafeMutableRawPointer.init(_:UnsafeRawPointer?)*/
    /*Swift.(file).UnsafeMutableRawPointer.init(_:UnsafeRawPointer?)*/
    UnsafeMutableRawPointer.prototype.initOptional = function ($info, from) {
        throw 'unsupported method Swift.(file).UnsafeMutableRawPointer.init(_:UnsafeRawPointer?) in ' + this.constructor.name;
    };
    /*Swift.(file).UnsafeMutableRawPointer.init(_:UnsafePointer<T>)*/
    /*Swift.(file).UnsafeMutableRawPointer.init(_:UnsafePointer<T>)*/
    UnsafeMutableRawPointer.prototype.initUnsafePointer = function ($info, from) {
        throw 'unsupported method Swift.(file).UnsafeMutableRawPointer.init(_:UnsafePointer<T>) in ' + this.constructor.name;
    };
    /*Swift.(file).UnsafeMutableRawPointer.init(_:UnsafePointer<T>?)*/
    /*Swift.(file).UnsafeMutableRawPointer.init(_:UnsafePointer<T>?)*/
    UnsafeMutableRawPointer.prototype.initOptional = function ($info, from) {
        throw 'unsupported method Swift.(file).UnsafeMutableRawPointer.init(_:UnsafePointer<T>?) in ' + this.constructor.name;
    };
    /*Swift.(file).UnsafeMutableRawPointer.summary*/
    UnsafeMutableRawPointer.prototype.summary$get = function () {
        throw 'unsupported variable Swift.(file).UnsafeMutableRawPointer.summary in ' + this.constructor.name;
    };
    Object.defineProperty(UnsafeMutableRawPointer.prototype, "summary", {
        get: function () { return this.summary$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).UnsafeMutableRawPointer.customPlaygroundQuickLook*/
    UnsafeMutableRawPointer.prototype.customPlaygroundQuickLook$get = function () {
        var _this = this;
        return _PlaygroundQuickLook._text({}, _this.summary);
    };
    Object.defineProperty(UnsafeMutableRawPointer.prototype, "customPlaygroundQuickLook", {
        get: function () { return this.customPlaygroundQuickLook$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).UnsafeMutableRawPointer.allocate(bytes:Int,alignedTo:Int)*/
    /*Swift.(file).UnsafeMutableRawPointer.allocate(bytes:Int,alignedTo:Int)*/
    UnsafeMutableRawPointer.allocateBytesAlignedTo = function ($info, size, alignment) {
        var _this = this;
        return UnsafeMutableRawPointer.allocateByteCountAlignment({}, size, alignment);
    };
    /*Swift.(file).UnsafeMutableRawPointer.deallocate(bytes:Int,alignedTo:Int)*/
    /*Swift.(file).UnsafeMutableRawPointer.deallocate(bytes:Int,alignedTo:Int)*/
    UnsafeMutableRawPointer.prototype.deallocateBytesAlignedTo = function ($info, _, _) {
        var _this = this;
        _this.deallocate({});
    };
    /*Swift.(file).UnsafeMutableRawPointer.copyBytes(from:UnsafeRawPointer,count:Int)*/
    /*Swift.(file).UnsafeMutableRawPointer.copyBytes(from:UnsafeRawPointer,count:Int)*/
    UnsafeMutableRawPointer.prototype.copyBytesFromCount = function ($info, source, count) {
        var _this = this;
        _this.copyMemoryFromByteCount({}, source, count);
    };
    /*Swift.(file).UnsafeMutableRawPointer.initializeMemory(as:T.Type,at:Int,count:Int,to:T)*/
    /*Swift.(file).UnsafeMutableRawPointer.initializeMemory(as:T.Type,at:Int,count:Int,to:T)*/
    UnsafeMutableRawPointer.prototype.initializeMemoryAsAtCountTo = function ($info, type, offset, count, repeatedValue) {
        var _this = this;
        return UnsafeMutableRawPointer.infix_43({}, _this, Int.infix_42({}, offset, MemoryLayout.stride)).initializeMemoryAsRepeatingCount({}, type, repeatedValue, count);
    };
    /*Swift.(file).UnsafeMutableRawPointer.initializeMemory(as:C.Element.Type,from:C)*/
    /*Swift.(file).UnsafeMutableRawPointer.initializeMemory(as:C.Element.Type,from:C)*/
    UnsafeMutableRawPointer.prototype.initializeMemoryAsFrom = function ($info, type, source) {
        var _this = this;
        var ptr = _cloneStruct(_this);
        {
            var $element$generator_11 = source.makeIterator({});
            while (true) {
                var $ifLet0, _element_1;
                if (!((($ifLet0 = $element$generator_11.next({ $setThis: function ($val) { return $element$generator_11 = $val; } })) || true) && $ifLet0 != null && ((_element_1 = $ifLet0) || true)))
                    break;
                ptr.initializeMemoryAsRepeatingCount({}, ((function () { throw '!unclarifiedGeneric:C.Element'; })()), _element_1, 1);
                UnsafeMutableRawPointer.infix_43_61({}, { get: function () { return ptr; }, set: function ($val) { return ptr = $val; } }, MemoryLayout.stride);
            }
        }
        ;
        return _create(UnsafeMutablePointer, 'initRawPointer', {}, _this._rawValue);
    };
    UnsafeMutableRawPointer.prototype.init$vars = function () {
    };
    UnsafeMutableRawPointer.$struct = true;
    UnsafeMutableRawPointer.$infoAddress = '';
    UnsafeMutableRawPointer.initOptional$failable = true;
    UnsafeMutableRawPointer.initMutatingOptional$failable = true;
    UnsafeMutableRawPointer.initOptional$failable = true;
    UnsafeMutableRawPointer.initOptional$failable = true;
    UnsafeMutableRawPointer.initOptional$failable = true;
    return UnsafeMutableRawPointer;
}());
if (typeof _Pointer$implementation != 'undefined')
    _mixin(UnsafeMutableRawPointer, _Pointer$implementation, false);
if (typeof Strideable$implementation != 'undefined')
    _mixin(UnsafeMutableRawPointer, Strideable$implementation, false);
if (typeof _CustomPlaygroundQuickLookable$implementation != 'undefined')
    _mixin(UnsafeMutableRawPointer, _CustomPlaygroundQuickLookable$implementation, false);
var Unicode = /** @class */ (function () {
    function Unicode() {
    }
    Unicode.prototype.init$vars = function () {
    };
    var _59, _60, _61, _62, _63, _64, _65, _66, _67, _68, _69, _70, _71, _72, _73, _74, _75;
    Unicode.$infoAddress = '';
    Unicode.Scalar = (_59 = /** @class */ (function () {
            function class_83() {
            }
            /*Swift.(file).Unicode.Scalar.init(_value:UInt32)*/
            /*Swift.(file).Unicode.Scalar.init(_value:UInt32)*/
            class_83.prototype.init_valueUInt32 = function ($info, _value) {
                var _this = this;
                _this._value = _value;
                return;
            };
            /*Swift.(file).Unicode.Scalar.value*/
            class_83.prototype.value$get = function () {
                throw 'unsupported variable Swift.(file).Unicode.Scalar.value in ' + this.constructor.name;
            };
            Object.defineProperty(class_83.prototype, "value", {
                get: function () { return this.value$get(); },
                enumerable: true,
                configurable: true
            });
            ;
            /*Swift.(file).Unicode.Scalar.init(_builtinUnicodeScalarLiteral:Int32)*/
            /*Swift.(file)._ExpressibleByBuiltinUnicodeScalarLiteral.init(_builtinUnicodeScalarLiteral:Int32)*/
            class_83.prototype.init_builtinUnicodeScalarLiteralInt32 = function ($info, value) {
                throw 'unsupported method Swift.(file).Unicode.Scalar.init(_builtinUnicodeScalarLiteral:Int32) in ' + this.constructor.name;
            };
            /*Swift.(file).Unicode.Scalar.init(unicodeScalarLiteral:Unicode.Scalar)*/
            /*Swift.(file).ExpressibleByUnicodeScalarLiteral.init(unicodeScalarLiteral:Self.UnicodeScalarLiteralType)*/
            class_83.prototype.initUnicodeScalarLiteral = function ($info, value) {
                throw 'unsupported method Swift.(file).Unicode.Scalar.init(unicodeScalarLiteral:Unicode.Scalar) in ' + this.constructor.name;
            };
            /*Swift.(file).Unicode.Scalar.init(_:UInt32)*/
            /*Swift.(file).Unicode.Scalar.init(_:UInt32)*/
            class_83.prototype.initUInt32 = function ($info, v) {
                throw 'unsupported method Swift.(file).Unicode.Scalar.init(_:UInt32) in ' + this.constructor.name;
            };
            /*Swift.(file).Unicode.Scalar.init(_:UInt16)*/
            /*Swift.(file).Unicode.Scalar.init(_:UInt16)*/
            class_83.prototype.initUInt16 = function ($info, v) {
                throw 'unsupported method Swift.(file).Unicode.Scalar.init(_:UInt16) in ' + this.constructor.name;
            };
            /*Swift.(file).Unicode.Scalar.init(_:UInt8)*/
            /*Swift.(file).Unicode.Scalar.init(_:UInt8)*/
            class_83.prototype.initUInt8 = function ($info, v) {
                throw 'unsupported method Swift.(file).Unicode.Scalar.init(_:UInt8) in ' + this.constructor.name;
            };
            /*Swift.(file).Unicode.Scalar.init(_:Unicode.Scalar)*/
            /*Swift.(file).Unicode.Scalar.init(_:Unicode.Scalar)*/
            class_83.prototype.initUnicodeScalar = function ($info, v) {
                throw 'unsupported method Swift.(file).Unicode.Scalar.init(_:Unicode.Scalar) in ' + this.constructor.name;
            };
            /*Swift.(file).Unicode.Scalar.escaped(asASCII:Bool)*/
            /*Swift.(file).Unicode.Scalar.escaped(asASCII:Bool)*/
            class_83.prototype.escapedAsASCII = function ($info, forceASCII) {
                throw 'unsupported method Swift.(file).Unicode.Scalar.escaped(asASCII:Bool) in ' + this.constructor.name;
            };
            /*Swift.(file).Unicode.Scalar.isASCII*/
            class_83.prototype.isASCII$get = function () {
                throw 'unsupported variable Swift.(file).Unicode.Scalar.isASCII in ' + this.constructor.name;
            };
            Object.defineProperty(class_83.prototype, "isASCII", {
                get: function () { return this.isASCII$get(); },
                enumerable: true,
                configurable: true
            });
            ;
            /*Swift.(file).Unicode.Scalar.description*/
            class_83.prototype.description$get = function () {
                throw 'unsupported variable Swift.(file).Unicode.Scalar.description in ' + this.constructor.name;
            };
            Object.defineProperty(class_83.prototype, "description", {
                get: function () { return this.description$get(); },
                enumerable: true,
                configurable: true
            });
            ;
            /*Swift.(file).Unicode.Scalar.debugDescription*/
            class_83.prototype.debugDescription$get = function () {
                throw 'unsupported variable Swift.(file).Unicode.Scalar.debugDescription in ' + this.constructor.name;
            };
            Object.defineProperty(class_83.prototype, "debugDescription", {
                get: function () { return this.debugDescription$get(); },
                enumerable: true,
                configurable: true
            });
            ;
            /*Swift.(file).Unicode.Scalar.init(_:String)*/
            /*Swift.(file).LosslessStringConvertible.init(_:String)*/
            class_83.prototype.initString = function ($info, description) {
                throw 'unsupported method Swift.(file).Unicode.Scalar.init(_:String) in ' + this.constructor.name;
            };
            /*Swift.(file).Unicode.Scalar.hash(into:Hasher)*/
            /*Swift.(file).Hashable.hash(into:Hasher)*/
            class_83.prototype.hashInto = function ($info, hasher$inout) {
                throw 'unsupported method Swift.(file).Unicode.Scalar.hash(into:Hasher) in ' + this.constructor.name;
            };
            /*Swift.(file).Unicode.Scalar.hashValue*/
            class_83.prototype.hashValue$get = function () {
                throw 'unsupported variable Swift.(file).Unicode.Scalar.hashValue in ' + this.constructor.name;
            };
            Object.defineProperty(class_83.prototype, "hashValue", {
                get: function () { return this.hashValue$get(); },
                enumerable: true,
                configurable: true
            });
            ;
            /*Swift.(file).Unicode.Scalar.init(_:Int)*/
            /*Swift.(file).Unicode.Scalar.init(_:Int)*/
            class_83.prototype.initInt = function ($info, v) {
                throw 'unsupported method Swift.(file).Unicode.Scalar.init(_:Int) in ' + this.constructor.name;
            };
            /*Swift.(file).Unicode.Scalar.==infix(_:Unicode.Scalar,_:Unicode.Scalar)*/
            /*Swift.(file).Equatable.==infix(_:Self,_:Self)*/
            class_83.infix_61_61 = function ($info, lhs, rhs) {
                return lhs == rhs;
            };
            /*Swift.(file).Unicode.Scalar.<infix(_:Unicode.Scalar,_:Unicode.Scalar)*/
            /*Swift.(file).Comparable.<infix(_:Self,_:Self)*/
            class_83.infix_60 = function ($info, lhs, rhs) {
                return lhs < rhs;
            };
            /*Swift.(file).Unicode.Scalar.utf16*/
            class_83.prototype.utf16$get = function () {
                throw 'unsupported variable Swift.(file).Unicode.Scalar.utf16 in ' + this.constructor.name;
            };
            Object.defineProperty(class_83.prototype, "utf16", {
                get: function () { return this.utf16$get(); },
                enumerable: true,
                configurable: true
            });
            ;
            /*Swift.(file).Unicode.Scalar.init()*/
            /*Swift.(file).Unicode.Scalar.init()*/
            class_83.prototype.init = function ($info) {
                throw 'unsupported method Swift.(file).Unicode.Scalar.init() in ' + this.constructor.name;
            };
            /*Swift.(file).Unicode.Scalar.withUTF16CodeUnits(_:(UnsafeBufferPointer<UInt16>) throws -> Result)*/
            /*Swift.(file).Unicode.Scalar.withUTF16CodeUnits(_:(UnsafeBufferPointer<UInt16>) throws -> Result)*/
            class_83.prototype.withUTF16CodeUnits = function ($info, body) {
                throw 'unsupported method Swift.(file).Unicode.Scalar.withUTF16CodeUnits(_:(UnsafeBufferPointer<UInt16>) throws -> Result) in ' + this.constructor.name;
            };
            /*Swift.(file).Unicode.Scalar.withUTF8CodeUnits(_:(UnsafeBufferPointer<UInt8>) throws -> Result)*/
            /*Swift.(file).Unicode.Scalar.withUTF8CodeUnits(_:(UnsafeBufferPointer<UInt8>) throws -> Result)*/
            class_83.prototype.withUTF8CodeUnits = function ($info, body) {
                throw 'unsupported method Swift.(file).Unicode.Scalar.withUTF8CodeUnits(_:(UnsafeBufferPointer<UInt8>) throws -> Result) in ' + this.constructor.name;
            };
            /*Swift.(file).Unicode.Scalar.customMirror*/
            class_83.prototype.customMirror$get = function () {
                throw 'unsupported variable Swift.(file).Unicode.Scalar.customMirror in ' + this.constructor.name;
            };
            Object.defineProperty(class_83.prototype, "customMirror", {
                get: function () { return this.customMirror$get(); },
                enumerable: true,
                configurable: true
            });
            ;
            /*Swift.(file).Unicode.Scalar.customPlaygroundQuickLook*/
            class_83.prototype.customPlaygroundQuickLook$get = function () {
                throw 'unsupported variable Swift.(file).Unicode.Scalar.customPlaygroundQuickLook in ' + this.constructor.name;
            };
            Object.defineProperty(class_83.prototype, "customPlaygroundQuickLook", {
                get: function () { return this.customPlaygroundQuickLook$get(); },
                enumerable: true,
                configurable: true
            });
            ;
            /*Swift.(file).Unicode.Scalar.write(to:Target)*/
            /*Swift.(file).TextOutputStreamable.write(to:Target)*/
            class_83.prototype.writeTo = function ($info, target$inout) {
                var _this = this;
                var target = target$inout.get();
                var $result = (function () {
                    target.write({ $setThis: function ($val) { return target = $val; } }, _create(String, 'initCharacter', {}, _create(Character, 'initUnicodeScalar', {}, _this)));
                })();
                target$inout.set(target);
                return $result;
            };
            /*Swift.(file).Unicode.Scalar.properties*/
            class_83.prototype.properties$get = function () {
                var _this = this;
                return _create(Unicode.Scalar.Properties, 'initUnicodeScalar', {}, _this);
            };
            Object.defineProperty(class_83.prototype, "properties", {
                get: function () { return this.properties$get(); },
                enumerable: true,
                configurable: true
            });
            ;
            /*Swift.(file).Unicode.Scalar.init(_unchecked:UInt32)*/
            /*Swift.(file).Unicode.Scalar.init(_unchecked:UInt32)*/
            class_83.prototype.init_uncheckedUInt32 = function ($info, value) {
                throw 'unsupported method Swift.(file).Unicode.Scalar.init(_unchecked:UInt32) in ' + this.constructor.name;
            };
            class_83.prototype.init$vars = function () {
            };
            return class_83;
        }()),
        _59.$struct = true,
        _59.$infoAddress = '',
        _59.initUInt32$failable = true,
        _59.initUInt16$failable = true,
        _59.initString$failable = true,
        _59.initInt$failable = true,
        _59.UTF16View = (_60 = /** @class */ (function () {
                function class_84() {
                }
                /*Swift.(file).Unicode.Scalar.UTF16View.init(value:Unicode.Scalar)*/
                /*Swift.(file).Unicode.Scalar.UTF16View.init(value:Unicode.Scalar)*/
                class_84.prototype.initValueUnicodeScalar = function ($info, value) {
                    throw 'unsupported method Swift.(file).Unicode.Scalar.UTF16View.init(value:Unicode.Scalar) in ' + this.constructor.name;
                };
                /*Swift.(file).Unicode.Scalar.UTF16View.value*/
                class_84.prototype.value$get = function () {
                    throw 'unsupported variable Swift.(file).Unicode.Scalar.UTF16View.value in ' + this.constructor.name;
                };
                Object.defineProperty(class_84.prototype, "value", {
                    get: function () { return this.value$get(); },
                    enumerable: true,
                    configurable: true
                });
                ;
                /*Swift.(file).Unicode.Scalar.UTF16View.startIndex*/
                class_84.prototype.startIndex$get = function () {
                    throw 'unsupported variable Swift.(file).Unicode.Scalar.UTF16View.startIndex in ' + this.constructor.name;
                };
                Object.defineProperty(class_84.prototype, "startIndex", {
                    get: function () { return this.startIndex$get(); },
                    enumerable: true,
                    configurable: true
                });
                ;
                /*Swift.(file).Unicode.Scalar.UTF16View.endIndex*/
                class_84.prototype.endIndex$get = function () {
                    throw 'unsupported variable Swift.(file).Unicode.Scalar.UTF16View.endIndex in ' + this.constructor.name;
                };
                Object.defineProperty(class_84.prototype, "endIndex", {
                    get: function () { return this.endIndex$get(); },
                    enumerable: true,
                    configurable: true
                });
                ;
                /*Swift.(file).Unicode.Scalar.UTF16View.subscript(_:Int)*/
                /*Swift.(file).RandomAccessCollection.subscript(_:Self.Index)*/
                /*Swift.(file).BidirectionalCollection.subscript(_:Self.Index)*/
                /*Swift.(file).Collection.subscript(_:Self.Index)*/
                class_84.prototype.subscript$get = function ($info, position) {
                    throw 'unsupported method Swift.(file).Unicode.Scalar.UTF16View.subscript(_:Int) in ' + this.constructor.name;
                };
                class_84.prototype.init$vars = function () {
                };
                return class_84;
            }()),
            _60.$struct = true,
            _60.$infoAddress = '',
            _60),
        _59.Properties = (_61 = /** @class */ (function () {
                function class_85() {
                }
                /*Swift.(file).Unicode.Scalar.Properties.init(_:Unicode.Scalar)*/
                /*Swift.(file).Unicode.Scalar.Properties.init(_:Unicode.Scalar)*/
                class_85.prototype.initUnicodeScalar = function ($info, scalar) {
                    var _this = this;
                    _this._scalar = _cloneStruct(scalar);
                    return;
                };
                /*Swift.(file).Unicode.Scalar.Properties.icuValue*/
                class_85.prototype.icuValue$get = function () {
                    throw 'unsupported variable Swift.(file).Unicode.Scalar.Properties.icuValue in ' + this.constructor.name;
                };
                Object.defineProperty(class_85.prototype, "icuValue", {
                    get: function () { return this.icuValue$get(); },
                    enumerable: true,
                    configurable: true
                });
                ;
                /*Swift.(file).Unicode.Scalar.Properties.isAlphabetic*/
                class_85.prototype.isAlphabetic$get = function () {
                    throw 'unsupported variable Swift.(file).Unicode.Scalar.Properties.isAlphabetic in ' + this.constructor.name;
                };
                Object.defineProperty(class_85.prototype, "isAlphabetic", {
                    get: function () { return this.isAlphabetic$get(); },
                    enumerable: true,
                    configurable: true
                });
                ;
                /*Swift.(file).Unicode.Scalar.Properties.isASCIIHexDigit*/
                class_85.prototype.isASCIIHexDigit$get = function () {
                    throw 'unsupported variable Swift.(file).Unicode.Scalar.Properties.isASCIIHexDigit in ' + this.constructor.name;
                };
                Object.defineProperty(class_85.prototype, "isASCIIHexDigit", {
                    get: function () { return this.isASCIIHexDigit$get(); },
                    enumerable: true,
                    configurable: true
                });
                ;
                /*Swift.(file).Unicode.Scalar.Properties.isBidiControl*/
                class_85.prototype.isBidiControl$get = function () {
                    throw 'unsupported variable Swift.(file).Unicode.Scalar.Properties.isBidiControl in ' + this.constructor.name;
                };
                Object.defineProperty(class_85.prototype, "isBidiControl", {
                    get: function () { return this.isBidiControl$get(); },
                    enumerable: true,
                    configurable: true
                });
                ;
                /*Swift.(file).Unicode.Scalar.Properties.isBidiMirrored*/
                class_85.prototype.isBidiMirrored$get = function () {
                    throw 'unsupported variable Swift.(file).Unicode.Scalar.Properties.isBidiMirrored in ' + this.constructor.name;
                };
                Object.defineProperty(class_85.prototype, "isBidiMirrored", {
                    get: function () { return this.isBidiMirrored$get(); },
                    enumerable: true,
                    configurable: true
                });
                ;
                /*Swift.(file).Unicode.Scalar.Properties.isDash*/
                class_85.prototype.isDash$get = function () {
                    throw 'unsupported variable Swift.(file).Unicode.Scalar.Properties.isDash in ' + this.constructor.name;
                };
                Object.defineProperty(class_85.prototype, "isDash", {
                    get: function () { return this.isDash$get(); },
                    enumerable: true,
                    configurable: true
                });
                ;
                /*Swift.(file).Unicode.Scalar.Properties.isDefaultIgnorableCodePoint*/
                class_85.prototype.isDefaultIgnorableCodePoint$get = function () {
                    throw 'unsupported variable Swift.(file).Unicode.Scalar.Properties.isDefaultIgnorableCodePoint in ' + this.constructor.name;
                };
                Object.defineProperty(class_85.prototype, "isDefaultIgnorableCodePoint", {
                    get: function () { return this.isDefaultIgnorableCodePoint$get(); },
                    enumerable: true,
                    configurable: true
                });
                ;
                /*Swift.(file).Unicode.Scalar.Properties.isDeprecated*/
                class_85.prototype.isDeprecated$get = function () {
                    throw 'unsupported variable Swift.(file).Unicode.Scalar.Properties.isDeprecated in ' + this.constructor.name;
                };
                Object.defineProperty(class_85.prototype, "isDeprecated", {
                    get: function () { return this.isDeprecated$get(); },
                    enumerable: true,
                    configurable: true
                });
                ;
                /*Swift.(file).Unicode.Scalar.Properties.isDiacritic*/
                class_85.prototype.isDiacritic$get = function () {
                    throw 'unsupported variable Swift.(file).Unicode.Scalar.Properties.isDiacritic in ' + this.constructor.name;
                };
                Object.defineProperty(class_85.prototype, "isDiacritic", {
                    get: function () { return this.isDiacritic$get(); },
                    enumerable: true,
                    configurable: true
                });
                ;
                /*Swift.(file).Unicode.Scalar.Properties.isExtender*/
                class_85.prototype.isExtender$get = function () {
                    throw 'unsupported variable Swift.(file).Unicode.Scalar.Properties.isExtender in ' + this.constructor.name;
                };
                Object.defineProperty(class_85.prototype, "isExtender", {
                    get: function () { return this.isExtender$get(); },
                    enumerable: true,
                    configurable: true
                });
                ;
                /*Swift.(file).Unicode.Scalar.Properties.isFullCompositionExclusion*/
                class_85.prototype.isFullCompositionExclusion$get = function () {
                    throw 'unsupported variable Swift.(file).Unicode.Scalar.Properties.isFullCompositionExclusion in ' + this.constructor.name;
                };
                Object.defineProperty(class_85.prototype, "isFullCompositionExclusion", {
                    get: function () { return this.isFullCompositionExclusion$get(); },
                    enumerable: true,
                    configurable: true
                });
                ;
                /*Swift.(file).Unicode.Scalar.Properties.isGraphemeBase*/
                class_85.prototype.isGraphemeBase$get = function () {
                    throw 'unsupported variable Swift.(file).Unicode.Scalar.Properties.isGraphemeBase in ' + this.constructor.name;
                };
                Object.defineProperty(class_85.prototype, "isGraphemeBase", {
                    get: function () { return this.isGraphemeBase$get(); },
                    enumerable: true,
                    configurable: true
                });
                ;
                /*Swift.(file).Unicode.Scalar.Properties.isGraphemeExtend*/
                class_85.prototype.isGraphemeExtend$get = function () {
                    throw 'unsupported variable Swift.(file).Unicode.Scalar.Properties.isGraphemeExtend in ' + this.constructor.name;
                };
                Object.defineProperty(class_85.prototype, "isGraphemeExtend", {
                    get: function () { return this.isGraphemeExtend$get(); },
                    enumerable: true,
                    configurable: true
                });
                ;
                /*Swift.(file).Unicode.Scalar.Properties.isHexDigit*/
                class_85.prototype.isHexDigit$get = function () {
                    throw 'unsupported variable Swift.(file).Unicode.Scalar.Properties.isHexDigit in ' + this.constructor.name;
                };
                Object.defineProperty(class_85.prototype, "isHexDigit", {
                    get: function () { return this.isHexDigit$get(); },
                    enumerable: true,
                    configurable: true
                });
                ;
                /*Swift.(file).Unicode.Scalar.Properties.isIDContinue*/
                class_85.prototype.isIDContinue$get = function () {
                    throw 'unsupported variable Swift.(file).Unicode.Scalar.Properties.isIDContinue in ' + this.constructor.name;
                };
                Object.defineProperty(class_85.prototype, "isIDContinue", {
                    get: function () { return this.isIDContinue$get(); },
                    enumerable: true,
                    configurable: true
                });
                ;
                /*Swift.(file).Unicode.Scalar.Properties.isIDStart*/
                class_85.prototype.isIDStart$get = function () {
                    throw 'unsupported variable Swift.(file).Unicode.Scalar.Properties.isIDStart in ' + this.constructor.name;
                };
                Object.defineProperty(class_85.prototype, "isIDStart", {
                    get: function () { return this.isIDStart$get(); },
                    enumerable: true,
                    configurable: true
                });
                ;
                /*Swift.(file).Unicode.Scalar.Properties.isIdeographic*/
                class_85.prototype.isIdeographic$get = function () {
                    throw 'unsupported variable Swift.(file).Unicode.Scalar.Properties.isIdeographic in ' + this.constructor.name;
                };
                Object.defineProperty(class_85.prototype, "isIdeographic", {
                    get: function () { return this.isIdeographic$get(); },
                    enumerable: true,
                    configurable: true
                });
                ;
                /*Swift.(file).Unicode.Scalar.Properties.isIDSBinaryOperator*/
                class_85.prototype.isIDSBinaryOperator$get = function () {
                    throw 'unsupported variable Swift.(file).Unicode.Scalar.Properties.isIDSBinaryOperator in ' + this.constructor.name;
                };
                Object.defineProperty(class_85.prototype, "isIDSBinaryOperator", {
                    get: function () { return this.isIDSBinaryOperator$get(); },
                    enumerable: true,
                    configurable: true
                });
                ;
                /*Swift.(file).Unicode.Scalar.Properties.isIDSTrinaryOperator*/
                class_85.prototype.isIDSTrinaryOperator$get = function () {
                    throw 'unsupported variable Swift.(file).Unicode.Scalar.Properties.isIDSTrinaryOperator in ' + this.constructor.name;
                };
                Object.defineProperty(class_85.prototype, "isIDSTrinaryOperator", {
                    get: function () { return this.isIDSTrinaryOperator$get(); },
                    enumerable: true,
                    configurable: true
                });
                ;
                /*Swift.(file).Unicode.Scalar.Properties.isJoinControl*/
                class_85.prototype.isJoinControl$get = function () {
                    throw 'unsupported variable Swift.(file).Unicode.Scalar.Properties.isJoinControl in ' + this.constructor.name;
                };
                Object.defineProperty(class_85.prototype, "isJoinControl", {
                    get: function () { return this.isJoinControl$get(); },
                    enumerable: true,
                    configurable: true
                });
                ;
                /*Swift.(file).Unicode.Scalar.Properties.isLogicalOrderException*/
                class_85.prototype.isLogicalOrderException$get = function () {
                    throw 'unsupported variable Swift.(file).Unicode.Scalar.Properties.isLogicalOrderException in ' + this.constructor.name;
                };
                Object.defineProperty(class_85.prototype, "isLogicalOrderException", {
                    get: function () { return this.isLogicalOrderException$get(); },
                    enumerable: true,
                    configurable: true
                });
                ;
                /*Swift.(file).Unicode.Scalar.Properties.isLowercase*/
                class_85.prototype.isLowercase$get = function () {
                    throw 'unsupported variable Swift.(file).Unicode.Scalar.Properties.isLowercase in ' + this.constructor.name;
                };
                Object.defineProperty(class_85.prototype, "isLowercase", {
                    get: function () { return this.isLowercase$get(); },
                    enumerable: true,
                    configurable: true
                });
                ;
                /*Swift.(file).Unicode.Scalar.Properties.isMath*/
                class_85.prototype.isMath$get = function () {
                    throw 'unsupported variable Swift.(file).Unicode.Scalar.Properties.isMath in ' + this.constructor.name;
                };
                Object.defineProperty(class_85.prototype, "isMath", {
                    get: function () { return this.isMath$get(); },
                    enumerable: true,
                    configurable: true
                });
                ;
                /*Swift.(file).Unicode.Scalar.Properties.isNoncharacterCodePoint*/
                class_85.prototype.isNoncharacterCodePoint$get = function () {
                    throw 'unsupported variable Swift.(file).Unicode.Scalar.Properties.isNoncharacterCodePoint in ' + this.constructor.name;
                };
                Object.defineProperty(class_85.prototype, "isNoncharacterCodePoint", {
                    get: function () { return this.isNoncharacterCodePoint$get(); },
                    enumerable: true,
                    configurable: true
                });
                ;
                /*Swift.(file).Unicode.Scalar.Properties.isQuotationMark*/
                class_85.prototype.isQuotationMark$get = function () {
                    throw 'unsupported variable Swift.(file).Unicode.Scalar.Properties.isQuotationMark in ' + this.constructor.name;
                };
                Object.defineProperty(class_85.prototype, "isQuotationMark", {
                    get: function () { return this.isQuotationMark$get(); },
                    enumerable: true,
                    configurable: true
                });
                ;
                /*Swift.(file).Unicode.Scalar.Properties.isRadical*/
                class_85.prototype.isRadical$get = function () {
                    throw 'unsupported variable Swift.(file).Unicode.Scalar.Properties.isRadical in ' + this.constructor.name;
                };
                Object.defineProperty(class_85.prototype, "isRadical", {
                    get: function () { return this.isRadical$get(); },
                    enumerable: true,
                    configurable: true
                });
                ;
                /*Swift.(file).Unicode.Scalar.Properties.isSoftDotted*/
                class_85.prototype.isSoftDotted$get = function () {
                    throw 'unsupported variable Swift.(file).Unicode.Scalar.Properties.isSoftDotted in ' + this.constructor.name;
                };
                Object.defineProperty(class_85.prototype, "isSoftDotted", {
                    get: function () { return this.isSoftDotted$get(); },
                    enumerable: true,
                    configurable: true
                });
                ;
                /*Swift.(file).Unicode.Scalar.Properties.isTerminalPunctuation*/
                class_85.prototype.isTerminalPunctuation$get = function () {
                    throw 'unsupported variable Swift.(file).Unicode.Scalar.Properties.isTerminalPunctuation in ' + this.constructor.name;
                };
                Object.defineProperty(class_85.prototype, "isTerminalPunctuation", {
                    get: function () { return this.isTerminalPunctuation$get(); },
                    enumerable: true,
                    configurable: true
                });
                ;
                /*Swift.(file).Unicode.Scalar.Properties.isUnifiedIdeograph*/
                class_85.prototype.isUnifiedIdeograph$get = function () {
                    throw 'unsupported variable Swift.(file).Unicode.Scalar.Properties.isUnifiedIdeograph in ' + this.constructor.name;
                };
                Object.defineProperty(class_85.prototype, "isUnifiedIdeograph", {
                    get: function () { return this.isUnifiedIdeograph$get(); },
                    enumerable: true,
                    configurable: true
                });
                ;
                /*Swift.(file).Unicode.Scalar.Properties.isUppercase*/
                class_85.prototype.isUppercase$get = function () {
                    throw 'unsupported variable Swift.(file).Unicode.Scalar.Properties.isUppercase in ' + this.constructor.name;
                };
                Object.defineProperty(class_85.prototype, "isUppercase", {
                    get: function () { return this.isUppercase$get(); },
                    enumerable: true,
                    configurable: true
                });
                ;
                /*Swift.(file).Unicode.Scalar.Properties.isWhitespace*/
                class_85.prototype.isWhitespace$get = function () {
                    throw 'unsupported variable Swift.(file).Unicode.Scalar.Properties.isWhitespace in ' + this.constructor.name;
                };
                Object.defineProperty(class_85.prototype, "isWhitespace", {
                    get: function () { return this.isWhitespace$get(); },
                    enumerable: true,
                    configurable: true
                });
                ;
                /*Swift.(file).Unicode.Scalar.Properties.isXIDContinue*/
                class_85.prototype.isXIDContinue$get = function () {
                    throw 'unsupported variable Swift.(file).Unicode.Scalar.Properties.isXIDContinue in ' + this.constructor.name;
                };
                Object.defineProperty(class_85.prototype, "isXIDContinue", {
                    get: function () { return this.isXIDContinue$get(); },
                    enumerable: true,
                    configurable: true
                });
                ;
                /*Swift.(file).Unicode.Scalar.Properties.isXIDStart*/
                class_85.prototype.isXIDStart$get = function () {
                    throw 'unsupported variable Swift.(file).Unicode.Scalar.Properties.isXIDStart in ' + this.constructor.name;
                };
                Object.defineProperty(class_85.prototype, "isXIDStart", {
                    get: function () { return this.isXIDStart$get(); },
                    enumerable: true,
                    configurable: true
                });
                ;
                /*Swift.(file).Unicode.Scalar.Properties.isSentenceTerminal*/
                class_85.prototype.isSentenceTerminal$get = function () {
                    throw 'unsupported variable Swift.(file).Unicode.Scalar.Properties.isSentenceTerminal in ' + this.constructor.name;
                };
                Object.defineProperty(class_85.prototype, "isSentenceTerminal", {
                    get: function () { return this.isSentenceTerminal$get(); },
                    enumerable: true,
                    configurable: true
                });
                ;
                /*Swift.(file).Unicode.Scalar.Properties.isVariationSelector*/
                class_85.prototype.isVariationSelector$get = function () {
                    throw 'unsupported variable Swift.(file).Unicode.Scalar.Properties.isVariationSelector in ' + this.constructor.name;
                };
                Object.defineProperty(class_85.prototype, "isVariationSelector", {
                    get: function () { return this.isVariationSelector$get(); },
                    enumerable: true,
                    configurable: true
                });
                ;
                /*Swift.(file).Unicode.Scalar.Properties.isPatternSyntax*/
                class_85.prototype.isPatternSyntax$get = function () {
                    throw 'unsupported variable Swift.(file).Unicode.Scalar.Properties.isPatternSyntax in ' + this.constructor.name;
                };
                Object.defineProperty(class_85.prototype, "isPatternSyntax", {
                    get: function () { return this.isPatternSyntax$get(); },
                    enumerable: true,
                    configurable: true
                });
                ;
                /*Swift.(file).Unicode.Scalar.Properties.isPatternWhitespace*/
                class_85.prototype.isPatternWhitespace$get = function () {
                    throw 'unsupported variable Swift.(file).Unicode.Scalar.Properties.isPatternWhitespace in ' + this.constructor.name;
                };
                Object.defineProperty(class_85.prototype, "isPatternWhitespace", {
                    get: function () { return this.isPatternWhitespace$get(); },
                    enumerable: true,
                    configurable: true
                });
                ;
                /*Swift.(file).Unicode.Scalar.Properties.isCased*/
                class_85.prototype.isCased$get = function () {
                    throw 'unsupported variable Swift.(file).Unicode.Scalar.Properties.isCased in ' + this.constructor.name;
                };
                Object.defineProperty(class_85.prototype, "isCased", {
                    get: function () { return this.isCased$get(); },
                    enumerable: true,
                    configurable: true
                });
                ;
                /*Swift.(file).Unicode.Scalar.Properties.isCaseIgnorable*/
                class_85.prototype.isCaseIgnorable$get = function () {
                    throw 'unsupported variable Swift.(file).Unicode.Scalar.Properties.isCaseIgnorable in ' + this.constructor.name;
                };
                Object.defineProperty(class_85.prototype, "isCaseIgnorable", {
                    get: function () { return this.isCaseIgnorable$get(); },
                    enumerable: true,
                    configurable: true
                });
                ;
                /*Swift.(file).Unicode.Scalar.Properties.changesWhenLowercased*/
                class_85.prototype.changesWhenLowercased$get = function () {
                    throw 'unsupported variable Swift.(file).Unicode.Scalar.Properties.changesWhenLowercased in ' + this.constructor.name;
                };
                Object.defineProperty(class_85.prototype, "changesWhenLowercased", {
                    get: function () { return this.changesWhenLowercased$get(); },
                    enumerable: true,
                    configurable: true
                });
                ;
                /*Swift.(file).Unicode.Scalar.Properties.changesWhenUppercased*/
                class_85.prototype.changesWhenUppercased$get = function () {
                    throw 'unsupported variable Swift.(file).Unicode.Scalar.Properties.changesWhenUppercased in ' + this.constructor.name;
                };
                Object.defineProperty(class_85.prototype, "changesWhenUppercased", {
                    get: function () { return this.changesWhenUppercased$get(); },
                    enumerable: true,
                    configurable: true
                });
                ;
                /*Swift.(file).Unicode.Scalar.Properties.changesWhenTitlecased*/
                class_85.prototype.changesWhenTitlecased$get = function () {
                    throw 'unsupported variable Swift.(file).Unicode.Scalar.Properties.changesWhenTitlecased in ' + this.constructor.name;
                };
                Object.defineProperty(class_85.prototype, "changesWhenTitlecased", {
                    get: function () { return this.changesWhenTitlecased$get(); },
                    enumerable: true,
                    configurable: true
                });
                ;
                /*Swift.(file).Unicode.Scalar.Properties.changesWhenCaseFolded*/
                class_85.prototype.changesWhenCaseFolded$get = function () {
                    throw 'unsupported variable Swift.(file).Unicode.Scalar.Properties.changesWhenCaseFolded in ' + this.constructor.name;
                };
                Object.defineProperty(class_85.prototype, "changesWhenCaseFolded", {
                    get: function () { return this.changesWhenCaseFolded$get(); },
                    enumerable: true,
                    configurable: true
                });
                ;
                /*Swift.(file).Unicode.Scalar.Properties.changesWhenCaseMapped*/
                class_85.prototype.changesWhenCaseMapped$get = function () {
                    throw 'unsupported variable Swift.(file).Unicode.Scalar.Properties.changesWhenCaseMapped in ' + this.constructor.name;
                };
                Object.defineProperty(class_85.prototype, "changesWhenCaseMapped", {
                    get: function () { return this.changesWhenCaseMapped$get(); },
                    enumerable: true,
                    configurable: true
                });
                ;
                /*Swift.(file).Unicode.Scalar.Properties.changesWhenNFKCCaseFolded*/
                class_85.prototype.changesWhenNFKCCaseFolded$get = function () {
                    throw 'unsupported variable Swift.(file).Unicode.Scalar.Properties.changesWhenNFKCCaseFolded in ' + this.constructor.name;
                };
                Object.defineProperty(class_85.prototype, "changesWhenNFKCCaseFolded", {
                    get: function () { return this.changesWhenNFKCCaseFolded$get(); },
                    enumerable: true,
                    configurable: true
                });
                ;
                /*Swift.(file).Unicode.Scalar.Properties.isEmoji*/
                class_85.prototype.isEmoji$get = function () {
                    throw 'unsupported variable Swift.(file).Unicode.Scalar.Properties.isEmoji in ' + this.constructor.name;
                };
                Object.defineProperty(class_85.prototype, "isEmoji", {
                    get: function () { return this.isEmoji$get(); },
                    enumerable: true,
                    configurable: true
                });
                ;
                /*Swift.(file).Unicode.Scalar.Properties.isEmojiPresentation*/
                class_85.prototype.isEmojiPresentation$get = function () {
                    throw 'unsupported variable Swift.(file).Unicode.Scalar.Properties.isEmojiPresentation in ' + this.constructor.name;
                };
                Object.defineProperty(class_85.prototype, "isEmojiPresentation", {
                    get: function () { return this.isEmojiPresentation$get(); },
                    enumerable: true,
                    configurable: true
                });
                ;
                /*Swift.(file).Unicode.Scalar.Properties.isEmojiModifier*/
                class_85.prototype.isEmojiModifier$get = function () {
                    throw 'unsupported variable Swift.(file).Unicode.Scalar.Properties.isEmojiModifier in ' + this.constructor.name;
                };
                Object.defineProperty(class_85.prototype, "isEmojiModifier", {
                    get: function () { return this.isEmojiModifier$get(); },
                    enumerable: true,
                    configurable: true
                });
                ;
                /*Swift.(file).Unicode.Scalar.Properties.isEmojiModifierBase*/
                class_85.prototype.isEmojiModifierBase$get = function () {
                    throw 'unsupported variable Swift.(file).Unicode.Scalar.Properties.isEmojiModifierBase in ' + this.constructor.name;
                };
                Object.defineProperty(class_85.prototype, "isEmojiModifierBase", {
                    get: function () { return this.isEmojiModifierBase$get(); },
                    enumerable: true,
                    configurable: true
                });
                ;
                /*Swift.(file).Unicode.Scalar.Properties.lowercaseMapping*/
                class_85.prototype.lowercaseMapping$get = function () {
                    throw 'unsupported variable Swift.(file).Unicode.Scalar.Properties.lowercaseMapping in ' + this.constructor.name;
                };
                Object.defineProperty(class_85.prototype, "lowercaseMapping", {
                    get: function () { return this.lowercaseMapping$get(); },
                    enumerable: true,
                    configurable: true
                });
                ;
                /*Swift.(file).Unicode.Scalar.Properties.titlecaseMapping*/
                class_85.prototype.titlecaseMapping$get = function () {
                    throw 'unsupported variable Swift.(file).Unicode.Scalar.Properties.titlecaseMapping in ' + this.constructor.name;
                };
                Object.defineProperty(class_85.prototype, "titlecaseMapping", {
                    get: function () { return this.titlecaseMapping$get(); },
                    enumerable: true,
                    configurable: true
                });
                ;
                /*Swift.(file).Unicode.Scalar.Properties.uppercaseMapping*/
                class_85.prototype.uppercaseMapping$get = function () {
                    throw 'unsupported variable Swift.(file).Unicode.Scalar.Properties.uppercaseMapping in ' + this.constructor.name;
                };
                Object.defineProperty(class_85.prototype, "uppercaseMapping", {
                    get: function () { return this.uppercaseMapping$get(); },
                    enumerable: true,
                    configurable: true
                });
                ;
                /*Swift.(file).Unicode.Scalar.Properties.age*/
                class_85.prototype.age$get = function () {
                    throw 'unsupported variable Swift.(file).Unicode.Scalar.Properties.age in ' + this.constructor.name;
                };
                Object.defineProperty(class_85.prototype, "age", {
                    get: function () { return this.age$get(); },
                    enumerable: true,
                    configurable: true
                });
                ;
                /*Swift.(file).Unicode.Scalar.Properties.generalCategory*/
                class_85.prototype.generalCategory$get = function () {
                    throw 'unsupported variable Swift.(file).Unicode.Scalar.Properties.generalCategory in ' + this.constructor.name;
                };
                Object.defineProperty(class_85.prototype, "generalCategory", {
                    get: function () { return this.generalCategory$get(); },
                    enumerable: true,
                    configurable: true
                });
                ;
                /*Swift.(file).Unicode.Scalar.Properties.nameAlias*/
                class_85.prototype.nameAlias$get = function () {
                    throw 'unsupported variable Swift.(file).Unicode.Scalar.Properties.nameAlias in ' + this.constructor.name;
                };
                Object.defineProperty(class_85.prototype, "nameAlias", {
                    get: function () { return this.nameAlias$get(); },
                    enumerable: true,
                    configurable: true
                });
                ;
                /*Swift.(file).Unicode.Scalar.Properties.canonicalCombiningClass*/
                class_85.prototype.canonicalCombiningClass$get = function () {
                    throw 'unsupported variable Swift.(file).Unicode.Scalar.Properties.canonicalCombiningClass in ' + this.constructor.name;
                };
                Object.defineProperty(class_85.prototype, "canonicalCombiningClass", {
                    get: function () { return this.canonicalCombiningClass$get(); },
                    enumerable: true,
                    configurable: true
                });
                ;
                /*Swift.(file).Unicode.Scalar.Properties.numericType*/
                class_85.prototype.numericType$get = function () {
                    throw 'unsupported variable Swift.(file).Unicode.Scalar.Properties.numericType in ' + this.constructor.name;
                };
                Object.defineProperty(class_85.prototype, "numericType", {
                    get: function () { return this.numericType$get(); },
                    enumerable: true,
                    configurable: true
                });
                ;
                /*Swift.(file).Unicode.Scalar.Properties.numericValue*/
                class_85.prototype.numericValue$get = function () {
                    throw 'unsupported variable Swift.(file).Unicode.Scalar.Properties.numericValue in ' + this.constructor.name;
                };
                Object.defineProperty(class_85.prototype, "numericValue", {
                    get: function () { return this.numericValue$get(); },
                    enumerable: true,
                    configurable: true
                });
                ;
                class_85.prototype.init$vars = function () {
                };
                return class_85;
            }()),
            _61.$struct = true,
            _61.$infoAddress = '',
            _61),
        _59);
    Unicode.ASCII = (_62 = /** @class */ (function () {
            function class_86() {
            }
            /*Swift.(file).Unicode.ASCII.encodedReplacementCharacter*/
            class_86.encodedReplacementCharacter$get = function () {
                throw 'unsupported variable Swift.(file).Unicode.ASCII.encodedReplacementCharacter in ' + this.constructor.name;
            };
            Object.defineProperty(class_86, "encodedReplacementCharacter", {
                get: function () { return this.encodedReplacementCharacter$get(); },
                enumerable: true,
                configurable: true
            });
            ;
            /*Swift.(file).Unicode.ASCII.decode(_:Unicode.ASCII.EncodedScalar)*/
            /*Swift.(file)._UnicodeEncoding.decode(_:Self.EncodedScalar)*/
            class_86.decode = function ($info, source) {
                throw 'unsupported method Swift.(file).Unicode.ASCII.decode(_:Unicode.ASCII.EncodedScalar) in ' + this.constructor.name;
            };
            /*Swift.(file).Unicode.ASCII.encode(_:Unicode.Scalar)*/
            /*Swift.(file)._UnicodeEncoding.encode(_:Unicode.Scalar)*/
            class_86.encode = function ($info, source) {
                throw 'unsupported method Swift.(file).Unicode.ASCII.encode(_:Unicode.Scalar) in ' + this.constructor.name;
            };
            /*Swift.(file).Unicode.ASCII.transcode(_:FromEncoding.EncodedScalar,from:FromEncoding.Type)*/
            /*Swift.(file)._UnicodeEncoding.transcode(_:FromEncoding.EncodedScalar,from:FromEncoding.Type)*/
            class_86.transcodeFrom = function ($info, content, _) {
                throw 'unsupported method Swift.(file).Unicode.ASCII.transcode(_:FromEncoding.EncodedScalar,from:FromEncoding.Type) in ' + this.constructor.name;
            };
            class_86.prototype.init$vars = function () {
            };
            return class_86;
        }()),
        _62.$infoAddress = '',
        _62.Parser = (_63 = /** @class */ (function () {
                function class_87() {
                }
                /*Swift.(file).Unicode.ASCII.Parser.init()*/
                /*Swift.(file)._UnicodeParser.init()*/
                class_87.prototype.init = function ($info) {
                    throw 'unsupported method Swift.(file).Unicode.ASCII.Parser.init() in ' + this.constructor.name;
                };
                /*Swift.(file).Unicode.ASCII.Parser.parseScalar(from:I)*/
                /*Swift.(file)._UnicodeParser.parseScalar(from:I)*/
                class_87.prototype.parseScalarFrom = function ($info, input$inout) {
                    throw 'unsupported method Swift.(file).Unicode.ASCII.Parser.parseScalar(from:I) in ' + this.constructor.name;
                };
                class_87.prototype.init$vars = function () {
                };
                return class_87;
            }()),
            _63.$struct = true,
            _63.$infoAddress = '',
            _63),
        _62);
    Unicode.UTF16 = (_64 = /** @class */ (function () {
            function class_88() {
            }
            class_88._swift3Buffer = function () { return Object.assign(new Unicode.UTF16(), __assign({ rawValue: "_swift3Buffer" }, Array.from(arguments).slice(1))); };
            /*Swift.(file).Unicode.UTF16.encodedReplacementCharacter*/
            class_88.encodedReplacementCharacter$get = function () {
                throw 'unsupported variable Swift.(file).Unicode.UTF16.encodedReplacementCharacter in ' + this.constructor.name;
            };
            Object.defineProperty(class_88, "encodedReplacementCharacter", {
                get: function () { return this.encodedReplacementCharacter$get(); },
                enumerable: true,
                configurable: true
            });
            ;
            /*Swift.(file).Unicode.UTF16.decode(_:Unicode.UTF16.EncodedScalar)*/
            /*Swift.(file)._UnicodeEncoding.decode(_:Self.EncodedScalar)*/
            class_88.decode = function ($info, source) {
                throw 'unsupported method Swift.(file).Unicode.UTF16.decode(_:Unicode.UTF16.EncodedScalar) in ' + this.constructor.name;
            };
            /*Swift.(file).Unicode.UTF16.encode(_:Unicode.Scalar)*/
            /*Swift.(file)._UnicodeEncoding.encode(_:Unicode.Scalar)*/
            class_88.encode = function ($info, source) {
                throw 'unsupported method Swift.(file).Unicode.UTF16.encode(_:Unicode.Scalar) in ' + this.constructor.name;
            };
            /*Swift.(file).Unicode.UTF16.transcode(_:FromEncoding.EncodedScalar,from:FromEncoding.Type)*/
            /*Swift.(file)._UnicodeEncoding.transcode(_:FromEncoding.EncodedScalar,from:FromEncoding.Type)*/
            class_88.transcodeFrom = function ($info, content, _) {
                throw 'unsupported method Swift.(file).Unicode.UTF16.transcode(_:FromEncoding.EncodedScalar,from:FromEncoding.Type) in ' + this.constructor.name;
            };
            /*Swift.(file).Unicode.UTF16.init()*/
            /*Swift.(file).UnicodeCodec.init()*/
            class_88.prototype.init = function ($info) {
                throw 'unsupported method Swift.(file).Unicode.UTF16.init() in ' + this.constructor.name;
            };
            /*Swift.(file).Unicode.UTF16.decode(_:I)*/
            /*Swift.(file).UnicodeCodec.decode(_:I)*/
            class_88.prototype.decode = function ($info, input$inout) {
                throw 'unsupported method Swift.(file).Unicode.UTF16.decode(_:I) in ' + this.constructor.name;
            };
            /*Swift.(file).Unicode.UTF16.encode(_:Unicode.Scalar,into:(Unicode.UTF16.CodeUnit) -> Void)*/
            /*Swift.(file).UnicodeCodec.encode(_:Unicode.Scalar,into:(Self.CodeUnit) -> Void)*/
            class_88.encodeInto = function ($info, input, processCodeUnit) {
                throw 'unsupported method Swift.(file).Unicode.UTF16.encode(_:Unicode.Scalar,into:(Unicode.UTF16.CodeUnit) -> Void) in ' + this.constructor.name;
            };
            /*Swift.(file).Unicode.UTF16.width(_:Unicode.Scalar)*/
            /*Swift.(file).Unicode.UTF16.width(_:Unicode.Scalar)*/
            class_88.width = function ($info, x) {
                throw 'unsupported method Swift.(file).Unicode.UTF16.width(_:Unicode.Scalar) in ' + this.constructor.name;
            };
            /*Swift.(file).Unicode.UTF16.leadSurrogate(_:Unicode.Scalar)*/
            /*Swift.(file).Unicode.UTF16.leadSurrogate(_:Unicode.Scalar)*/
            class_88.leadSurrogate = function ($info, x) {
                throw 'unsupported method Swift.(file).Unicode.UTF16.leadSurrogate(_:Unicode.Scalar) in ' + this.constructor.name;
            };
            /*Swift.(file).Unicode.UTF16.trailSurrogate(_:Unicode.Scalar)*/
            /*Swift.(file).Unicode.UTF16.trailSurrogate(_:Unicode.Scalar)*/
            class_88.trailSurrogate = function ($info, x) {
                throw 'unsupported method Swift.(file).Unicode.UTF16.trailSurrogate(_:Unicode.Scalar) in ' + this.constructor.name;
            };
            /*Swift.(file).Unicode.UTF16.isLeadSurrogate(_:Unicode.UTF16.CodeUnit)*/
            /*Swift.(file).Unicode.UTF16.isLeadSurrogate(_:Unicode.UTF16.CodeUnit)*/
            class_88.isLeadSurrogate = function ($info, x) {
                throw 'unsupported method Swift.(file).Unicode.UTF16.isLeadSurrogate(_:Unicode.UTF16.CodeUnit) in ' + this.constructor.name;
            };
            /*Swift.(file).Unicode.UTF16.isTrailSurrogate(_:Unicode.UTF16.CodeUnit)*/
            /*Swift.(file).Unicode.UTF16.isTrailSurrogate(_:Unicode.UTF16.CodeUnit)*/
            class_88.isTrailSurrogate = function ($info, x) {
                throw 'unsupported method Swift.(file).Unicode.UTF16.isTrailSurrogate(_:Unicode.UTF16.CodeUnit) in ' + this.constructor.name;
            };
            /*Swift.(file).Unicode.UTF16.transcodedLength(of:Input,decodedAs:Encoding.Type,repairingIllFormedSequences:Bool)*/
            /*Swift.(file).Unicode.UTF16.transcodedLength(of:Input,decodedAs:Encoding.Type,repairingIllFormedSequences:Bool)*/
            class_88.transcodedLengthOfDecodedAsRepairingIllFormedSequences = function ($info, input, sourceEncoding, repairingIllFormedSequences) {
                throw 'unsupported method Swift.(file).Unicode.UTF16.transcodedLength(of:Input,decodedAs:Encoding.Type,repairingIllFormedSequences:Bool) in ' + this.constructor.name;
            };
            class_88.prototype.init$vars = function () {
            };
            return class_88;
        }()),
        _64.$infoAddress = '',
        _64.ForwardParser = (_65 = /** @class */ (function () {
                function class_89() {
                }
                /*Swift.(file).Unicode.UTF16.ForwardParser.init()*/
                /*Swift.(file)._UnicodeParser.init()*/
                class_89.prototype.init = function ($info) {
                    throw 'unsupported method Swift.(file).Unicode.UTF16.ForwardParser.init() in ' + this.constructor.name;
                };
                class_89.prototype.init$vars = function () {
                };
                return class_89;
            }()),
            _65.$struct = true,
            _65.$infoAddress = '',
            _65),
        _64.ReverseParser = (_66 = /** @class */ (function () {
                function class_90() {
                }
                /*Swift.(file).Unicode.UTF16.ReverseParser.init()*/
                /*Swift.(file)._UnicodeParser.init()*/
                class_90.prototype.init = function ($info) {
                    throw 'unsupported method Swift.(file).Unicode.UTF16.ReverseParser.init() in ' + this.constructor.name;
                };
                class_90.prototype.init$vars = function () {
                };
                return class_90;
            }()),
            _66.$struct = true,
            _66.$infoAddress = '',
            _66),
        _64);
    Unicode.UTF8 = (_67 = /** @class */ (function () {
            function class_91() {
            }
            class_91._swift3Buffer = function () { return Object.assign(new Unicode.UTF8(), __assign({ rawValue: "_swift3Buffer" }, Array.from(arguments).slice(1))); };
            /*Swift.(file).Unicode.UTF8.encodedReplacementCharacter*/
            class_91.encodedReplacementCharacter$get = function () {
                throw 'unsupported variable Swift.(file).Unicode.UTF8.encodedReplacementCharacter in ' + this.constructor.name;
            };
            Object.defineProperty(class_91, "encodedReplacementCharacter", {
                get: function () { return this.encodedReplacementCharacter$get(); },
                enumerable: true,
                configurable: true
            });
            ;
            /*Swift.(file).Unicode.UTF8.decode(_:Unicode.UTF8.EncodedScalar)*/
            /*Swift.(file)._UnicodeEncoding.decode(_:Self.EncodedScalar)*/
            class_91.decode = function ($info, source) {
                throw 'unsupported method Swift.(file).Unicode.UTF8.decode(_:Unicode.UTF8.EncodedScalar) in ' + this.constructor.name;
            };
            /*Swift.(file).Unicode.UTF8.encode(_:Unicode.Scalar)*/
            /*Swift.(file)._UnicodeEncoding.encode(_:Unicode.Scalar)*/
            class_91.encode = function ($info, source) {
                throw 'unsupported method Swift.(file).Unicode.UTF8.encode(_:Unicode.Scalar) in ' + this.constructor.name;
            };
            /*Swift.(file).Unicode.UTF8.transcode(_:FromEncoding.EncodedScalar,from:FromEncoding.Type)*/
            /*Swift.(file)._UnicodeEncoding.transcode(_:FromEncoding.EncodedScalar,from:FromEncoding.Type)*/
            class_91.transcodeFrom = function ($info, content, _) {
                throw 'unsupported method Swift.(file).Unicode.UTF8.transcode(_:FromEncoding.EncodedScalar,from:FromEncoding.Type) in ' + this.constructor.name;
            };
            /*Swift.(file).Unicode.UTF8.init()*/
            /*Swift.(file).UnicodeCodec.init()*/
            class_91.prototype.init = function ($info) {
                throw 'unsupported method Swift.(file).Unicode.UTF8.init() in ' + this.constructor.name;
            };
            /*Swift.(file).Unicode.UTF8.decode(_:I)*/
            /*Swift.(file).UnicodeCodec.decode(_:I)*/
            class_91.prototype.decode = function ($info, input$inout) {
                throw 'unsupported method Swift.(file).Unicode.UTF8.decode(_:I) in ' + this.constructor.name;
            };
            /*Swift.(file).Unicode.UTF8.encode(_:Unicode.Scalar,into:(Unicode.UTF8.CodeUnit) -> Void)*/
            /*Swift.(file).UnicodeCodec.encode(_:Unicode.Scalar,into:(Self.CodeUnit) -> Void)*/
            class_91.encodeInto = function ($info, input, processCodeUnit) {
                throw 'unsupported method Swift.(file).Unicode.UTF8.encode(_:Unicode.Scalar,into:(Unicode.UTF8.CodeUnit) -> Void) in ' + this.constructor.name;
            };
            /*Swift.(file).Unicode.UTF8.isContinuation(_:Unicode.UTF8.CodeUnit)*/
            /*Swift.(file).Unicode.UTF8.isContinuation(_:Unicode.UTF8.CodeUnit)*/
            class_91.isContinuation = function ($info, _byte) {
                throw 'unsupported method Swift.(file).Unicode.UTF8.isContinuation(_:Unicode.UTF8.CodeUnit) in ' + this.constructor.name;
            };
            class_91.prototype.init$vars = function () {
            };
            return class_91;
        }()),
        _67.$infoAddress = '',
        _67.ForwardParser = (_68 = /** @class */ (function () {
                function class_92() {
                }
                /*Swift.(file).Unicode.UTF8.ForwardParser.init()*/
                /*Swift.(file)._UnicodeParser.init()*/
                class_92.prototype.init = function ($info) {
                    throw 'unsupported method Swift.(file).Unicode.UTF8.ForwardParser.init() in ' + this.constructor.name;
                };
                class_92.prototype.init$vars = function () {
                };
                return class_92;
            }()),
            _68.$struct = true,
            _68.$infoAddress = '',
            _68),
        _67.ReverseParser = (_69 = /** @class */ (function () {
                function class_93() {
                }
                /*Swift.(file).Unicode.UTF8.ReverseParser.init()*/
                /*Swift.(file)._UnicodeParser.init()*/
                class_93.prototype.init = function ($info) {
                    throw 'unsupported method Swift.(file).Unicode.UTF8.ReverseParser.init() in ' + this.constructor.name;
                };
                class_93.prototype.init$vars = function () {
                };
                return class_93;
            }()),
            _69.$struct = true,
            _69.$infoAddress = '',
            _69),
        _67);
    Unicode.ParseResult = (_70 = /** @class */ (function () {
            function class_94() {
            }
            class_94.valid = function () { return Object.assign(new Unicode.ParseResult(), __assign({ rawValue: "valid" }, Array.from(arguments).slice(1))); };
            Object.defineProperty(class_94, "emptyInput", {
                get: function () { return Object.assign(new Unicode.ParseResult(), __assign({ rawValue: "emptyInput" }, Array.from(arguments).slice(1))); },
                enumerable: true,
                configurable: true
            });
            class_94.error = function () { return Object.assign(new Unicode.ParseResult(), __assign({ rawValue: "error" }, Array.from(arguments).slice(1))); };
            class_94.prototype.init$vars = function () {
            };
            return class_94;
        }()),
        _70.$infoAddress = '',
        _70);
    Unicode.GeneralCategory = (_71 = /** @class */ (function () {
            function class_95() {
            }
            Object.defineProperty(class_95, "uppercaseLetter", {
                get: function () { return Object.assign(new Unicode.GeneralCategory(), __assign({ rawValue: "uppercaseLetter" }, Array.from(arguments).slice(1))); },
                enumerable: true,
                configurable: true
            });
            Object.defineProperty(class_95, "lowercaseLetter", {
                get: function () { return Object.assign(new Unicode.GeneralCategory(), __assign({ rawValue: "lowercaseLetter" }, Array.from(arguments).slice(1))); },
                enumerable: true,
                configurable: true
            });
            Object.defineProperty(class_95, "titlecaseLetter", {
                get: function () { return Object.assign(new Unicode.GeneralCategory(), __assign({ rawValue: "titlecaseLetter" }, Array.from(arguments).slice(1))); },
                enumerable: true,
                configurable: true
            });
            Object.defineProperty(class_95, "modifierLetter", {
                get: function () { return Object.assign(new Unicode.GeneralCategory(), __assign({ rawValue: "modifierLetter" }, Array.from(arguments).slice(1))); },
                enumerable: true,
                configurable: true
            });
            Object.defineProperty(class_95, "otherLetter", {
                get: function () { return Object.assign(new Unicode.GeneralCategory(), __assign({ rawValue: "otherLetter" }, Array.from(arguments).slice(1))); },
                enumerable: true,
                configurable: true
            });
            Object.defineProperty(class_95, "nonspacingMark", {
                get: function () { return Object.assign(new Unicode.GeneralCategory(), __assign({ rawValue: "nonspacingMark" }, Array.from(arguments).slice(1))); },
                enumerable: true,
                configurable: true
            });
            Object.defineProperty(class_95, "spacingMark", {
                get: function () { return Object.assign(new Unicode.GeneralCategory(), __assign({ rawValue: "spacingMark" }, Array.from(arguments).slice(1))); },
                enumerable: true,
                configurable: true
            });
            Object.defineProperty(class_95, "enclosingMark", {
                get: function () { return Object.assign(new Unicode.GeneralCategory(), __assign({ rawValue: "enclosingMark" }, Array.from(arguments).slice(1))); },
                enumerable: true,
                configurable: true
            });
            Object.defineProperty(class_95, "decimalNumber", {
                get: function () { return Object.assign(new Unicode.GeneralCategory(), __assign({ rawValue: "decimalNumber" }, Array.from(arguments).slice(1))); },
                enumerable: true,
                configurable: true
            });
            Object.defineProperty(class_95, "letterNumber", {
                get: function () { return Object.assign(new Unicode.GeneralCategory(), __assign({ rawValue: "letterNumber" }, Array.from(arguments).slice(1))); },
                enumerable: true,
                configurable: true
            });
            Object.defineProperty(class_95, "otherNumber", {
                get: function () { return Object.assign(new Unicode.GeneralCategory(), __assign({ rawValue: "otherNumber" }, Array.from(arguments).slice(1))); },
                enumerable: true,
                configurable: true
            });
            Object.defineProperty(class_95, "connectorPunctuation", {
                get: function () { return Object.assign(new Unicode.GeneralCategory(), __assign({ rawValue: "connectorPunctuation" }, Array.from(arguments).slice(1))); },
                enumerable: true,
                configurable: true
            });
            Object.defineProperty(class_95, "dashPunctuation", {
                get: function () { return Object.assign(new Unicode.GeneralCategory(), __assign({ rawValue: "dashPunctuation" }, Array.from(arguments).slice(1))); },
                enumerable: true,
                configurable: true
            });
            Object.defineProperty(class_95, "openPunctuation", {
                get: function () { return Object.assign(new Unicode.GeneralCategory(), __assign({ rawValue: "openPunctuation" }, Array.from(arguments).slice(1))); },
                enumerable: true,
                configurable: true
            });
            Object.defineProperty(class_95, "closePunctuation", {
                get: function () { return Object.assign(new Unicode.GeneralCategory(), __assign({ rawValue: "closePunctuation" }, Array.from(arguments).slice(1))); },
                enumerable: true,
                configurable: true
            });
            Object.defineProperty(class_95, "initialPunctuation", {
                get: function () { return Object.assign(new Unicode.GeneralCategory(), __assign({ rawValue: "initialPunctuation" }, Array.from(arguments).slice(1))); },
                enumerable: true,
                configurable: true
            });
            Object.defineProperty(class_95, "finalPunctuation", {
                get: function () { return Object.assign(new Unicode.GeneralCategory(), __assign({ rawValue: "finalPunctuation" }, Array.from(arguments).slice(1))); },
                enumerable: true,
                configurable: true
            });
            Object.defineProperty(class_95, "otherPunctuation", {
                get: function () { return Object.assign(new Unicode.GeneralCategory(), __assign({ rawValue: "otherPunctuation" }, Array.from(arguments).slice(1))); },
                enumerable: true,
                configurable: true
            });
            Object.defineProperty(class_95, "mathSymbol", {
                get: function () { return Object.assign(new Unicode.GeneralCategory(), __assign({ rawValue: "mathSymbol" }, Array.from(arguments).slice(1))); },
                enumerable: true,
                configurable: true
            });
            Object.defineProperty(class_95, "currencySymbol", {
                get: function () { return Object.assign(new Unicode.GeneralCategory(), __assign({ rawValue: "currencySymbol" }, Array.from(arguments).slice(1))); },
                enumerable: true,
                configurable: true
            });
            Object.defineProperty(class_95, "modifierSymbol", {
                get: function () { return Object.assign(new Unicode.GeneralCategory(), __assign({ rawValue: "modifierSymbol" }, Array.from(arguments).slice(1))); },
                enumerable: true,
                configurable: true
            });
            Object.defineProperty(class_95, "otherSymbol", {
                get: function () { return Object.assign(new Unicode.GeneralCategory(), __assign({ rawValue: "otherSymbol" }, Array.from(arguments).slice(1))); },
                enumerable: true,
                configurable: true
            });
            Object.defineProperty(class_95, "spaceSeparator", {
                get: function () { return Object.assign(new Unicode.GeneralCategory(), __assign({ rawValue: "spaceSeparator" }, Array.from(arguments).slice(1))); },
                enumerable: true,
                configurable: true
            });
            Object.defineProperty(class_95, "lineSeparator", {
                get: function () { return Object.assign(new Unicode.GeneralCategory(), __assign({ rawValue: "lineSeparator" }, Array.from(arguments).slice(1))); },
                enumerable: true,
                configurable: true
            });
            Object.defineProperty(class_95, "paragraphSeparator", {
                get: function () { return Object.assign(new Unicode.GeneralCategory(), __assign({ rawValue: "paragraphSeparator" }, Array.from(arguments).slice(1))); },
                enumerable: true,
                configurable: true
            });
            Object.defineProperty(class_95, "control", {
                get: function () { return Object.assign(new Unicode.GeneralCategory(), __assign({ rawValue: "control" }, Array.from(arguments).slice(1))); },
                enumerable: true,
                configurable: true
            });
            Object.defineProperty(class_95, "format", {
                get: function () { return Object.assign(new Unicode.GeneralCategory(), __assign({ rawValue: "format" }, Array.from(arguments).slice(1))); },
                enumerable: true,
                configurable: true
            });
            Object.defineProperty(class_95, "surrogate", {
                get: function () { return Object.assign(new Unicode.GeneralCategory(), __assign({ rawValue: "surrogate" }, Array.from(arguments).slice(1))); },
                enumerable: true,
                configurable: true
            });
            Object.defineProperty(class_95, "privateUse", {
                get: function () { return Object.assign(new Unicode.GeneralCategory(), __assign({ rawValue: "privateUse" }, Array.from(arguments).slice(1))); },
                enumerable: true,
                configurable: true
            });
            Object.defineProperty(class_95, "unassigned", {
                get: function () { return Object.assign(new Unicode.GeneralCategory(), __assign({ rawValue: "unassigned" }, Array.from(arguments).slice(1))); },
                enumerable: true,
                configurable: true
            });
            /*Swift.(file).Unicode.GeneralCategory.init(rawValue:__swift_stdlib_UCharCategory)*/
            /*Swift.(file).Unicode.GeneralCategory.init(rawValue:__swift_stdlib_UCharCategory)*/
            class_95.prototype.initRawValue__swift_stdlib_UCharCategory = function ($info, rawValue) {
                throw 'unsupported method Swift.(file).Unicode.GeneralCategory.init(rawValue:__swift_stdlib_UCharCategory) in ' + this.constructor.name;
            };
            /*Swift.(file).Unicode.GeneralCategory.==(_:Unicode.GeneralCategory,_:Unicode.GeneralCategory)*/
            /*Swift.(file).Equatable.==infix(_:Self,_:Self)*/
            class_95.infix_61_61 = function ($info, a, b) {
                return a == b;
            };
            /*Swift.(file).Unicode.GeneralCategory.hashValue*/
            class_95.prototype.hashValue$get = function () {
                throw 'unsupported variable Swift.(file).Unicode.GeneralCategory.hashValue in ' + this.constructor.name;
            };
            Object.defineProperty(class_95.prototype, "hashValue", {
                get: function () { return this.hashValue$get(); },
                enumerable: true,
                configurable: true
            });
            ;
            /*Swift.(file).Unicode.GeneralCategory.hash(into:Hasher)*/
            /*Swift.(file).Hashable.hash(into:Hasher)*/
            class_95.prototype.hashInto = function ($info, hasher$inout) {
                throw 'unsupported method Swift.(file).Unicode.GeneralCategory.hash(into:Hasher) in ' + this.constructor.name;
            };
            class_95.prototype.init$vars = function () {
            };
            return class_95;
        }()),
        _71.$infoAddress = '',
        _71);
    Unicode.CanonicalCombiningClass = (_72 = /** @class */ (function () {
            function class_96() {
            }
            /*Swift.(file).Unicode.CanonicalCombiningClass.notReordered*/
            class_96.notReordered$get = function () {
                throw 'unsupported variable Swift.(file).Unicode.CanonicalCombiningClass.notReordered in ' + this.constructor.name;
            };
            Object.defineProperty(class_96, "notReordered", {
                get: function () { return this.notReordered$get(); },
                enumerable: true,
                configurable: true
            });
            ;
            /*Swift.(file).Unicode.CanonicalCombiningClass.overlay*/
            class_96.overlay$get = function () {
                throw 'unsupported variable Swift.(file).Unicode.CanonicalCombiningClass.overlay in ' + this.constructor.name;
            };
            Object.defineProperty(class_96, "overlay", {
                get: function () { return this.overlay$get(); },
                enumerable: true,
                configurable: true
            });
            ;
            /*Swift.(file).Unicode.CanonicalCombiningClass.nukta*/
            class_96.nukta$get = function () {
                throw 'unsupported variable Swift.(file).Unicode.CanonicalCombiningClass.nukta in ' + this.constructor.name;
            };
            Object.defineProperty(class_96, "nukta", {
                get: function () { return this.nukta$get(); },
                enumerable: true,
                configurable: true
            });
            ;
            /*Swift.(file).Unicode.CanonicalCombiningClass.kanaVoicing*/
            class_96.kanaVoicing$get = function () {
                throw 'unsupported variable Swift.(file).Unicode.CanonicalCombiningClass.kanaVoicing in ' + this.constructor.name;
            };
            Object.defineProperty(class_96, "kanaVoicing", {
                get: function () { return this.kanaVoicing$get(); },
                enumerable: true,
                configurable: true
            });
            ;
            /*Swift.(file).Unicode.CanonicalCombiningClass.virama*/
            class_96.virama$get = function () {
                throw 'unsupported variable Swift.(file).Unicode.CanonicalCombiningClass.virama in ' + this.constructor.name;
            };
            Object.defineProperty(class_96, "virama", {
                get: function () { return this.virama$get(); },
                enumerable: true,
                configurable: true
            });
            ;
            /*Swift.(file).Unicode.CanonicalCombiningClass.attachedBelowLeft*/
            class_96.attachedBelowLeft$get = function () {
                throw 'unsupported variable Swift.(file).Unicode.CanonicalCombiningClass.attachedBelowLeft in ' + this.constructor.name;
            };
            Object.defineProperty(class_96, "attachedBelowLeft", {
                get: function () { return this.attachedBelowLeft$get(); },
                enumerable: true,
                configurable: true
            });
            ;
            /*Swift.(file).Unicode.CanonicalCombiningClass.attachedBelow*/
            class_96.attachedBelow$get = function () {
                throw 'unsupported variable Swift.(file).Unicode.CanonicalCombiningClass.attachedBelow in ' + this.constructor.name;
            };
            Object.defineProperty(class_96, "attachedBelow", {
                get: function () { return this.attachedBelow$get(); },
                enumerable: true,
                configurable: true
            });
            ;
            /*Swift.(file).Unicode.CanonicalCombiningClass.attachedAbove*/
            class_96.attachedAbove$get = function () {
                throw 'unsupported variable Swift.(file).Unicode.CanonicalCombiningClass.attachedAbove in ' + this.constructor.name;
            };
            Object.defineProperty(class_96, "attachedAbove", {
                get: function () { return this.attachedAbove$get(); },
                enumerable: true,
                configurable: true
            });
            ;
            /*Swift.(file).Unicode.CanonicalCombiningClass.attachedAboveRight*/
            class_96.attachedAboveRight$get = function () {
                throw 'unsupported variable Swift.(file).Unicode.CanonicalCombiningClass.attachedAboveRight in ' + this.constructor.name;
            };
            Object.defineProperty(class_96, "attachedAboveRight", {
                get: function () { return this.attachedAboveRight$get(); },
                enumerable: true,
                configurable: true
            });
            ;
            /*Swift.(file).Unicode.CanonicalCombiningClass.belowLeft*/
            class_96.belowLeft$get = function () {
                throw 'unsupported variable Swift.(file).Unicode.CanonicalCombiningClass.belowLeft in ' + this.constructor.name;
            };
            Object.defineProperty(class_96, "belowLeft", {
                get: function () { return this.belowLeft$get(); },
                enumerable: true,
                configurable: true
            });
            ;
            /*Swift.(file).Unicode.CanonicalCombiningClass.below*/
            class_96.below$get = function () {
                throw 'unsupported variable Swift.(file).Unicode.CanonicalCombiningClass.below in ' + this.constructor.name;
            };
            Object.defineProperty(class_96, "below", {
                get: function () { return this.below$get(); },
                enumerable: true,
                configurable: true
            });
            ;
            /*Swift.(file).Unicode.CanonicalCombiningClass.belowRight*/
            class_96.belowRight$get = function () {
                throw 'unsupported variable Swift.(file).Unicode.CanonicalCombiningClass.belowRight in ' + this.constructor.name;
            };
            Object.defineProperty(class_96, "belowRight", {
                get: function () { return this.belowRight$get(); },
                enumerable: true,
                configurable: true
            });
            ;
            /*Swift.(file).Unicode.CanonicalCombiningClass.left*/
            class_96.left$get = function () {
                throw 'unsupported variable Swift.(file).Unicode.CanonicalCombiningClass.left in ' + this.constructor.name;
            };
            Object.defineProperty(class_96, "left", {
                get: function () { return this.left$get(); },
                enumerable: true,
                configurable: true
            });
            ;
            /*Swift.(file).Unicode.CanonicalCombiningClass.right*/
            class_96.right$get = function () {
                throw 'unsupported variable Swift.(file).Unicode.CanonicalCombiningClass.right in ' + this.constructor.name;
            };
            Object.defineProperty(class_96, "right", {
                get: function () { return this.right$get(); },
                enumerable: true,
                configurable: true
            });
            ;
            /*Swift.(file).Unicode.CanonicalCombiningClass.aboveLeft*/
            class_96.aboveLeft$get = function () {
                throw 'unsupported variable Swift.(file).Unicode.CanonicalCombiningClass.aboveLeft in ' + this.constructor.name;
            };
            Object.defineProperty(class_96, "aboveLeft", {
                get: function () { return this.aboveLeft$get(); },
                enumerable: true,
                configurable: true
            });
            ;
            /*Swift.(file).Unicode.CanonicalCombiningClass.above*/
            class_96.above$get = function () {
                throw 'unsupported variable Swift.(file).Unicode.CanonicalCombiningClass.above in ' + this.constructor.name;
            };
            Object.defineProperty(class_96, "above", {
                get: function () { return this.above$get(); },
                enumerable: true,
                configurable: true
            });
            ;
            /*Swift.(file).Unicode.CanonicalCombiningClass.aboveRight*/
            class_96.aboveRight$get = function () {
                throw 'unsupported variable Swift.(file).Unicode.CanonicalCombiningClass.aboveRight in ' + this.constructor.name;
            };
            Object.defineProperty(class_96, "aboveRight", {
                get: function () { return this.aboveRight$get(); },
                enumerable: true,
                configurable: true
            });
            ;
            /*Swift.(file).Unicode.CanonicalCombiningClass.doubleBelow*/
            class_96.doubleBelow$get = function () {
                throw 'unsupported variable Swift.(file).Unicode.CanonicalCombiningClass.doubleBelow in ' + this.constructor.name;
            };
            Object.defineProperty(class_96, "doubleBelow", {
                get: function () { return this.doubleBelow$get(); },
                enumerable: true,
                configurable: true
            });
            ;
            /*Swift.(file).Unicode.CanonicalCombiningClass.doubleAbove*/
            class_96.doubleAbove$get = function () {
                throw 'unsupported variable Swift.(file).Unicode.CanonicalCombiningClass.doubleAbove in ' + this.constructor.name;
            };
            Object.defineProperty(class_96, "doubleAbove", {
                get: function () { return this.doubleAbove$get(); },
                enumerable: true,
                configurable: true
            });
            ;
            /*Swift.(file).Unicode.CanonicalCombiningClass.iotaSubscript*/
            class_96.iotaSubscript$get = function () {
                throw 'unsupported variable Swift.(file).Unicode.CanonicalCombiningClass.iotaSubscript in ' + this.constructor.name;
            };
            Object.defineProperty(class_96, "iotaSubscript", {
                get: function () { return this.iotaSubscript$get(); },
                enumerable: true,
                configurable: true
            });
            ;
            /*Swift.(file).Unicode.CanonicalCombiningClass.rawValue*/
            class_96.prototype.rawValue$get = function () {
                throw 'unsupported variable Swift.(file).Unicode.CanonicalCombiningClass.rawValue in ' + this.constructor.name;
            };
            Object.defineProperty(class_96.prototype, "rawValue", {
                get: function () { return this.rawValue$get(); },
                enumerable: true,
                configurable: true
            });
            ;
            /*Swift.(file).Unicode.CanonicalCombiningClass.init(rawValue:UInt8)*/
            /*Swift.(file).RawRepresentable.init(rawValue:Self.RawValue)*/
            class_96.prototype.initRawValue = function ($info, rawValue) {
                throw 'unsupported method Swift.(file).Unicode.CanonicalCombiningClass.init(rawValue:UInt8) in ' + this.constructor.name;
            };
            /*Swift.(file).Unicode.CanonicalCombiningClass.==infix(_:Unicode.CanonicalCombiningClass,_:Unicode.CanonicalCombiningClass)*/
            /*Swift.(file).Equatable.==infix(_:Self,_:Self)*/
            class_96.infix_61_61 = function ($info, lhs, rhs) {
                return lhs == rhs;
            };
            /*Swift.(file).Unicode.CanonicalCombiningClass.<infix(_:Unicode.CanonicalCombiningClass,_:Unicode.CanonicalCombiningClass)*/
            /*Swift.(file).Comparable.<infix(_:Self,_:Self)*/
            class_96.infix_60 = function ($info, lhs, rhs) {
                return lhs < rhs;
            };
            /*Swift.(file).Unicode.CanonicalCombiningClass.hashValue*/
            class_96.prototype.hashValue$get = function () {
                var _this = this;
                return UInt8.prototype.hashValue$get.call(_this.rawValue);
            };
            Object.defineProperty(class_96.prototype, "hashValue", {
                get: function () { return this.hashValue$get(); },
                enumerable: true,
                configurable: true
            });
            ;
            /*Swift.(file).Unicode.CanonicalCombiningClass.hash(into:Hasher)*/
            /*Swift.(file).Hashable.hash(into:Hasher)*/
            class_96.prototype.hashInto = function ($info, hasher$inout) {
                var _this = this;
                var hasher = hasher$inout.get();
                var $result = (function () {
                    hasher.combine({ $setThis: function ($val) { return hasher = $val; } }, _this.rawValue);
                })();
                hasher$inout.set(hasher);
                return $result;
            };
            class_96.prototype.init$vars = function () {
            };
            return class_96;
        }()),
        _72.$struct = true,
        _72.$infoAddress = '',
        _72);
    Unicode.NumericType = (_73 = /** @class */ (function () {
            function class_97() {
            }
            Object.defineProperty(class_97, "decimal", {
                get: function () { return Object.assign(new Unicode.NumericType(), __assign({ rawValue: "decimal" }, Array.from(arguments).slice(1))); },
                enumerable: true,
                configurable: true
            });
            Object.defineProperty(class_97, "digit", {
                get: function () { return Object.assign(new Unicode.NumericType(), __assign({ rawValue: "digit" }, Array.from(arguments).slice(1))); },
                enumerable: true,
                configurable: true
            });
            Object.defineProperty(class_97, "numeric", {
                get: function () { return Object.assign(new Unicode.NumericType(), __assign({ rawValue: "numeric" }, Array.from(arguments).slice(1))); },
                enumerable: true,
                configurable: true
            });
            /*Swift.(file).Unicode.NumericType.init(rawValue:__swift_stdlib_UNumericType)*/
            /*Swift.(file).Unicode.NumericType.init(rawValue:__swift_stdlib_UNumericType)*/
            class_97.prototype.initRawValue__swift_stdlib_UNumericType = function ($info, rawValue) {
                throw 'unsupported method Swift.(file).Unicode.NumericType.init(rawValue:__swift_stdlib_UNumericType) in ' + this.constructor.name;
            };
            /*Swift.(file).Unicode.NumericType.==(_:Unicode.NumericType,_:Unicode.NumericType)*/
            /*Swift.(file).Equatable.==infix(_:Self,_:Self)*/
            class_97.infix_61_61 = function ($info, a, b) {
                return a == b;
            };
            /*Swift.(file).Unicode.NumericType.hashValue*/
            class_97.prototype.hashValue$get = function () {
                throw 'unsupported variable Swift.(file).Unicode.NumericType.hashValue in ' + this.constructor.name;
            };
            Object.defineProperty(class_97.prototype, "hashValue", {
                get: function () { return this.hashValue$get(); },
                enumerable: true,
                configurable: true
            });
            ;
            /*Swift.(file).Unicode.NumericType.hash(into:Hasher)*/
            /*Swift.(file).Hashable.hash(into:Hasher)*/
            class_97.prototype.hashInto = function ($info, hasher$inout) {
                throw 'unsupported method Swift.(file).Unicode.NumericType.hash(into:Hasher) in ' + this.constructor.name;
            };
            class_97.prototype.init$vars = function () {
            };
            return class_97;
        }()),
        _73.$infoAddress = '',
        _73.initRawValue__swift_stdlib_UNumericType$failable = true,
        _73);
    Unicode.UTF32 = (_74 = /** @class */ (function () {
            function class_98() {
            }
            Object.defineProperty(class_98, "_swift3Codec", {
                get: function () { return Object.assign(new Unicode.UTF32(), __assign({ rawValue: "_swift3Codec" }, Array.from(arguments).slice(1))); },
                enumerable: true,
                configurable: true
            });
            /*Swift.(file).Unicode.UTF32.==(_:Unicode.UTF32,_:Unicode.UTF32)*/
            /*Swift.(file).Equatable.==infix(_:Self,_:Self)*/
            class_98.infix_61_61 = function ($info, a, b) {
                return a == b;
            };
            /*Swift.(file).Unicode.UTF32.hashValue*/
            class_98.prototype.hashValue$get = function () {
                throw 'unsupported variable Swift.(file).Unicode.UTF32.hashValue in ' + this.constructor.name;
            };
            Object.defineProperty(class_98.prototype, "hashValue", {
                get: function () { return this.hashValue$get(); },
                enumerable: true,
                configurable: true
            });
            ;
            /*Swift.(file).Unicode.UTF32.hash(into:Hasher)*/
            /*Swift.(file).Hashable.hash(into:Hasher)*/
            class_98.prototype.hashInto = function ($info, hasher$inout) {
                throw 'unsupported method Swift.(file).Unicode.UTF32.hash(into:Hasher) in ' + this.constructor.name;
            };
            /*Swift.(file).Unicode.UTF32.encodedReplacementCharacter*/
            class_98.encodedReplacementCharacter$get = function () {
                throw 'unsupported variable Swift.(file).Unicode.UTF32.encodedReplacementCharacter in ' + this.constructor.name;
            };
            Object.defineProperty(class_98, "encodedReplacementCharacter", {
                get: function () { return this.encodedReplacementCharacter$get(); },
                enumerable: true,
                configurable: true
            });
            ;
            /*Swift.(file).Unicode.UTF32.decode(_:Unicode.UTF32.EncodedScalar)*/
            /*Swift.(file)._UnicodeEncoding.decode(_:Self.EncodedScalar)*/
            class_98.decode = function ($info, source) {
                throw 'unsupported method Swift.(file).Unicode.UTF32.decode(_:Unicode.UTF32.EncodedScalar) in ' + this.constructor.name;
            };
            /*Swift.(file).Unicode.UTF32.encode(_:Unicode.Scalar)*/
            /*Swift.(file)._UnicodeEncoding.encode(_:Unicode.Scalar)*/
            class_98.encode = function ($info, source) {
                throw 'unsupported method Swift.(file).Unicode.UTF32.encode(_:Unicode.Scalar) in ' + this.constructor.name;
            };
            /*Swift.(file).Unicode.UTF32.init()*/
            /*Swift.(file).UnicodeCodec.init()*/
            class_98.prototype.init = function ($info) {
                throw 'unsupported method Swift.(file).Unicode.UTF32.init() in ' + this.constructor.name;
            };
            /*Swift.(file).Unicode.UTF32.decode(_:I)*/
            /*Swift.(file).UnicodeCodec.decode(_:I)*/
            class_98.prototype.decode = function ($info, input$inout) {
                throw 'unsupported method Swift.(file).Unicode.UTF32.decode(_:I) in ' + this.constructor.name;
            };
            /*Swift.(file).Unicode.UTF32.encode(_:Unicode.Scalar,into:(Unicode.UTF32.CodeUnit) -> Void)*/
            /*Swift.(file).UnicodeCodec.encode(_:Unicode.Scalar,into:(Self.CodeUnit) -> Void)*/
            class_98.encodeInto = function ($info, input, processCodeUnit) {
                throw 'unsupported method Swift.(file).Unicode.UTF32.encode(_:Unicode.Scalar,into:(Unicode.UTF32.CodeUnit) -> Void) in ' + this.constructor.name;
            };
            class_98.prototype.init$vars = function () {
            };
            return class_98;
        }()),
        _74.$infoAddress = '',
        _74.Parser = (_75 = /** @class */ (function () {
                function class_99() {
                }
                /*Swift.(file).Unicode.UTF32.Parser.init()*/
                /*Swift.(file)._UnicodeParser.init()*/
                class_99.prototype.init = function ($info) {
                    throw 'unsupported method Swift.(file).Unicode.UTF32.Parser.init() in ' + this.constructor.name;
                };
                /*Swift.(file).Unicode.UTF32.Parser.parseScalar(from:I)*/
                /*Swift.(file)._UnicodeParser.parseScalar(from:I)*/
                class_99.prototype.parseScalarFrom = function ($info, input$inout) {
                    throw 'unsupported method Swift.(file).Unicode.UTF32.Parser.parseScalar(from:I) in ' + this.constructor.name;
                };
                class_99.prototype.init$vars = function () {
                };
                return class_99;
            }()),
            _75.$struct = true,
            _75.$infoAddress = '',
            _75),
        _74);
    return Unicode;
}());
if (typeof RandomAccessCollection$implementation != 'undefined')
    _mixin(Unicode.Scalar.UTF16View, RandomAccessCollection$implementation, false);
if (typeof _ExpressibleByBuiltinUnicodeScalarLiteral$implementation != 'undefined')
    _mixin(Unicode.Scalar, _ExpressibleByBuiltinUnicodeScalarLiteral$implementation, false);
if (typeof ExpressibleByUnicodeScalarLiteral$implementation != 'undefined')
    _mixin(Unicode.Scalar, ExpressibleByUnicodeScalarLiteral$implementation, false);
if (typeof CustomStringConvertible$implementation != 'undefined')
    _mixin(Unicode.Scalar, CustomStringConvertible$implementation, false);
if (typeof CustomDebugStringConvertible$implementation != 'undefined')
    _mixin(Unicode.Scalar, CustomDebugStringConvertible$implementation, false);
if (typeof LosslessStringConvertible$implementation != 'undefined')
    _mixin(Unicode.Scalar, LosslessStringConvertible$implementation, false);
if (typeof Hashable$implementation != 'undefined')
    _mixin(Unicode.Scalar, Hashable$implementation, false);
if (typeof Equatable$implementation != 'undefined')
    _mixin(Unicode.Scalar, Equatable$implementation, false);
if (typeof Comparable$implementation != 'undefined')
    _mixin(Unicode.Scalar, Comparable$implementation, false);
if (typeof CustomReflectable$implementation != 'undefined')
    _mixin(Unicode.Scalar, CustomReflectable$implementation, false);
if (typeof _CustomPlaygroundQuickLookable$implementation != 'undefined')
    _mixin(Unicode.Scalar, _CustomPlaygroundQuickLookable$implementation, false);
if (typeof TextOutputStreamable$implementation != 'undefined')
    _mixin(Unicode.Scalar, TextOutputStreamable$implementation, false);
if (typeof Unicode != 'undefined' && typeof Unicode.Parser$implementation != 'undefined')
    _mixin(Unicode.ASCII.Parser, Unicode.Parser$implementation, false);
if (typeof Unicode != 'undefined' && typeof Unicode.Encoding$implementation != 'undefined')
    _mixin(Unicode.ASCII, Unicode.Encoding$implementation, false);
_mixin(Unicode.ASCII, _DefaultEnumImplementation, false);
if (typeof Unicode != 'undefined' && typeof Unicode.Parser$implementation != 'undefined')
    _mixin(Unicode.UTF16.ForwardParser, Unicode.Parser$implementation, false);
if (typeof _UTFParser$implementation != 'undefined')
    _mixin(Unicode.UTF16.ForwardParser, _UTFParser$implementation, false);
if (typeof Unicode != 'undefined' && typeof Unicode.Parser$implementation != 'undefined')
    _mixin(Unicode.UTF16.ReverseParser, Unicode.Parser$implementation, false);
if (typeof _UTFParser$implementation != 'undefined')
    _mixin(Unicode.UTF16.ReverseParser, _UTFParser$implementation, false);
if (typeof Unicode != 'undefined' && typeof Unicode.Encoding$implementation != 'undefined')
    _mixin(Unicode.UTF16, Unicode.Encoding$implementation, false);
if (typeof UnicodeCodec$implementation != 'undefined')
    _mixin(Unicode.UTF16, UnicodeCodec$implementation, false);
_mixin(Unicode.UTF16, _DefaultEnumImplementation, false);
if (typeof Unicode != 'undefined' && typeof Unicode.Parser$implementation != 'undefined')
    _mixin(Unicode.UTF8.ForwardParser, Unicode.Parser$implementation, false);
if (typeof _UTFParser$implementation != 'undefined')
    _mixin(Unicode.UTF8.ForwardParser, _UTFParser$implementation, false);
if (typeof Unicode != 'undefined' && typeof Unicode.Parser$implementation != 'undefined')
    _mixin(Unicode.UTF8.ReverseParser, Unicode.Parser$implementation, false);
if (typeof _UTFParser$implementation != 'undefined')
    _mixin(Unicode.UTF8.ReverseParser, _UTFParser$implementation, false);
if (typeof _UnicodeEncoding$implementation != 'undefined')
    _mixin(Unicode.UTF8, _UnicodeEncoding$implementation, false);
if (typeof UnicodeCodec$implementation != 'undefined')
    _mixin(Unicode.UTF8, UnicodeCodec$implementation, false);
_mixin(Unicode.UTF8, _DefaultEnumImplementation, false);
_mixin(Unicode.ParseResult, _DefaultEnumImplementation, false);
_mixin(Unicode.GeneralCategory, _DefaultEnumImplementation, false);
if (typeof Comparable$implementation != 'undefined')
    _mixin(Unicode.CanonicalCombiningClass, Comparable$implementation, false);
if (typeof Hashable$implementation != 'undefined')
    _mixin(Unicode.CanonicalCombiningClass, Hashable$implementation, false);
if (typeof RawRepresentable$implementation != 'undefined')
    _mixin(Unicode.CanonicalCombiningClass, RawRepresentable$implementation, false);
_mixin(Unicode.NumericType, _DefaultEnumImplementation, false);
if (typeof Unicode != 'undefined' && typeof Unicode.Parser$implementation != 'undefined')
    _mixin(Unicode.UTF32.Parser, Unicode.Parser$implementation, false);
if (typeof Unicode != 'undefined' && typeof Unicode.Encoding$implementation != 'undefined')
    _mixin(Unicode.UTF32, Unicode.Encoding$implementation, false);
if (typeof UnicodeCodec$implementation != 'undefined')
    _mixin(Unicode.UTF32, UnicodeCodec$implementation, false);
_mixin(Unicode.UTF32, _DefaultEnumImplementation, false);
_mixin(Unicode, _DefaultEnumImplementation, false);
var _ValidUTF8Buffer = /** @class */ (function () {
    function _ValidUTF8Buffer() {
    }
    /*Swift.(file)._ValidUTF8Buffer.init(_biasedBits:UInt32)*/
    /*Swift.(file)._ValidUTF8Buffer.init(_biasedBits:UInt32)*/
    _ValidUTF8Buffer.prototype.init_biasedBitsUInt32 = function ($info, _biasedBits) {
        throw 'unsupported method Swift.(file)._ValidUTF8Buffer.init(_biasedBits:UInt32) in ' + this.constructor.name;
    };
    /*Swift.(file)._ValidUTF8Buffer.init(_containing:_ValidUTF8Buffer.Element)*/
    /*Swift.(file)._ValidUTF8Buffer.init(_containing:_ValidUTF8Buffer.Element)*/
    _ValidUTF8Buffer.prototype.init_containing_ValidUTF8BufferElement = function ($info, e) {
        throw 'unsupported method Swift.(file)._ValidUTF8Buffer.init(_containing:_ValidUTF8Buffer.Element) in ' + this.constructor.name;
    };
    /*Swift.(file)._ValidUTF8Buffer.makeIterator()*/
    /*Swift.(file).Sequence.makeIterator()*/
    /*Swift.(file).Collection.makeIterator()*/
    _ValidUTF8Buffer.prototype.makeIterator = function ($info) {
        var _this = this;
        return _create(_ValidUTF8Buffer.Iterator, 'init_ValidUTF8Buffer', {}, _this);
    };
    /*Swift.(file)._ValidUTF8Buffer.startIndex*/
    _ValidUTF8Buffer.prototype.startIndex$get = function () {
        var _this = this;
        return _create(_ValidUTF8Buffer.Index, 'init_biasedBitsUInt32', {}, _this._biasedBits);
    };
    Object.defineProperty(_ValidUTF8Buffer.prototype, "startIndex", {
        get: function () { return this.startIndex$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file)._ValidUTF8Buffer.endIndex*/
    _ValidUTF8Buffer.prototype.endIndex$get = function () {
        var _this = this;
        return _create(_ValidUTF8Buffer.Index, 'init_biasedBitsUInt32', {}, 0);
    };
    Object.defineProperty(_ValidUTF8Buffer.prototype, "endIndex", {
        get: function () { return this.endIndex$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file)._ValidUTF8Buffer.count*/
    _ValidUTF8Buffer.prototype.count$get = function () {
        var _this = this;
        return Int.infix_38_45({}, Int.infix_38_62_62({}, UInt32.bitWidth, 3), Int.infix_38_62_62({}, UInt32.prototype.leadingZeroBitCount$get.call(_this._biasedBits), 3));
    };
    Object.defineProperty(_ValidUTF8Buffer.prototype, "count", {
        get: function () { return this.count$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file)._ValidUTF8Buffer.isEmpty*/
    _ValidUTF8Buffer.prototype.isEmpty$get = function () {
        var _this = this;
        return UInt32.infix_61_61({}, _this._biasedBits, 0);
    };
    Object.defineProperty(_ValidUTF8Buffer.prototype, "isEmpty", {
        get: function () { return this.isEmpty$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file)._ValidUTF8Buffer.index(after:_ValidUTF8Buffer.Index)*/
    /*Swift.(file).BidirectionalCollection.index(after:Self.Index)*/
    /*Swift.(file).Collection.index(after:Self.Index)*/
    /*Swift.(file).RandomAccessCollection.index(after:Self.Index)*/
    _ValidUTF8Buffer.prototype.indexAfter = function ($info, i) {
        var _this = this;
        preconditionFileLine({}, function () { return UInt32.infix_33_61({}, i._biasedBits, 0); }, function () { return String(); } /*!default_value*/, '?3', '?3');
        return _create(_ValidUTF8Buffer.Index, 'init_biasedBitsUInt32', {}, UInt32.infix_62_62({}, i._biasedBits, 8));
    };
    /*Swift.(file)._ValidUTF8Buffer.subscript(_:_ValidUTF8Buffer.Index)*/
    /*Swift.(file).BidirectionalCollection.subscript(_:Self.Index)*/
    /*Swift.(file).RangeReplaceableCollection.subscript(_:Self.Index)*/
    /*Swift.(file).Collection.subscript(_:Self.Index)*/
    /*Swift.(file).RandomAccessCollection.subscript(_:Self.Index)*/
    _ValidUTF8Buffer.prototype.subscript$get = function ($info, i) {
        var _this = this;
        return _ValidUTF8Buffer.Element.infix_38_45({}, _create(_ValidUTF8Buffer.Element, 'initTruncatingIfNeeded', {}, i._biasedBits), 1);
    };
    /*Swift.(file)._ValidUTF8Buffer.index(before:_ValidUTF8Buffer.Index)*/
    /*Swift.(file).BidirectionalCollection.index(before:Self.Index)*/
    /*Swift.(file).RandomAccessCollection.index(before:Self.Index)*/
    _ValidUTF8Buffer.prototype.indexBefore = function ($info, i) {
        var _this = this;
        var offset = _create(_ValidUTF8Buffer, 'init_biasedBitsUInt32', {}, i._biasedBits).count;
        preconditionFileLine({}, function () { return Int.infix_33_61({}, offset, 0); }, function () { return String(); } /*!default_value*/, '?3', '?3');
        return _create(_ValidUTF8Buffer.Index, 'init_biasedBitsUInt32', {}, UInt32.infix_38_62_62({}, _this._biasedBits, Int.infix_45({}, Int.infix_38_60_60({}, offset, 3), 8)));
    };
    /*Swift.(file)._ValidUTF8Buffer.distance(from:_ValidUTF8Buffer.Index,to:_ValidUTF8Buffer.Index)*/
    /*Swift.(file).BidirectionalCollection.distance(from:Self.Index,to:Self.Index)*/
    /*Swift.(file).Collection.distance(from:Self.Index,to:Self.Index)*/
    /*Swift.(file).RandomAccessCollection.distance(from:Self.Index,to:Self.Index)*/
    _ValidUTF8Buffer.prototype.distanceFromTo = function ($info, i, j) {
        var _this = this;
        preconditionFileLine({}, function () { return _this._isValid({}, i); }, function () { return String(); } /*!default_value*/, '?3', '?3');
        preconditionFileLine({}, function () { return _this._isValid({}, j); }, function () { return String(); } /*!default_value*/, '?3', '?3');
        return Int.infix_38_62_62({}, Int.infix_45({}, UInt32.prototype.leadingZeroBitCount$get.call(i._biasedBits), UInt32.prototype.leadingZeroBitCount$get.call(j._biasedBits)), 3);
    };
    /*Swift.(file)._ValidUTF8Buffer.index(_:_ValidUTF8Buffer.Index,offsetBy:Int)*/
    /*Swift.(file).BidirectionalCollection.index(_:Self.Index,offsetBy:Int)*/
    /*Swift.(file).Collection.index(_:Self.Index,offsetBy:Int)*/
    /*Swift.(file).RandomAccessCollection.index(_:Self.Index,offsetBy:Int)*/
    _ValidUTF8Buffer.prototype.indexOffsetBy = function ($info, i, n) {
        var _this = this;
        var startOffset = _this.distanceFromTo({}, _this.startIndex, i);
        var newOffset = Int.infix_43({}, startOffset, n);
        preconditionFileLine({}, function () { return Int.infix_62_61({}, newOffset, 0); }, function () { return String(); } /*!default_value*/, '?3', '?3');
        preconditionFileLine({}, function () { return Int.infix_60_61({}, newOffset, _this.count); }, function () { return String(); } /*!default_value*/, '?3', '?3');
        return _create(_ValidUTF8Buffer.Index, 'init_biasedBitsUInt32', {}, UInt32.prototype._fullShiftRight.call(_this._biasedBits, {}, Int.infix_38_60_60({}, newOffset, 3)));
    };
    /*Swift.(file)._ValidUTF8Buffer.init()*/
    /*Swift.(file).RangeReplaceableCollection.init()*/
    _ValidUTF8Buffer.prototype.init = function ($info) {
        var _this = this;
        _this._biasedBits = 0;
        return;
    };
    /*Swift.(file)._ValidUTF8Buffer.capacity*/
    _ValidUTF8Buffer.prototype.capacity$get = function () {
        var _this = this;
        return Int.infix_47({}, UInt32.bitWidth, _ValidUTF8Buffer.Element.bitWidth);
    };
    Object.defineProperty(_ValidUTF8Buffer, "capacity", {
        get: function () {
            return this.capacity$get();
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(_ValidUTF8Buffer.prototype, "capacity", {
        get: function () { return this.capacity$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file)._ValidUTF8Buffer.capacity*/
    _ValidUTF8Buffer.capacity$get = function () {
        var _this = this;
        return Int.infix_47({}, UInt32.bitWidth, _ValidUTF8Buffer.Element.bitWidth);
    };
    ;
    /*Swift.(file)._ValidUTF8Buffer.append(_:_ValidUTF8Buffer.Element)*/
    /*Swift.(file).RangeReplaceableCollection.append(_:Self.Element)*/
    _ValidUTF8Buffer.prototype.append = function ($info, e) {
        var _this = this;
        _this.insertAt({ $setThis: function ($val) { return $info.$setThis(_this = _cloneStruct($val)); } }, newElement, _this.endIndex);
    };
    /*Swift.(file)._ValidUTF8Buffer.removeFirst()*/
    /*Swift.(file).RangeReplaceableCollection.removeFirst()*/
    _ValidUTF8Buffer.prototype.removeFirst = function ($info) {
        var _this = this;
        preconditionFileLine({}, function () { return Bool.prefix_33({}, _this.isEmpty); }, function () { return String(); } /*!default_value*/, '?3', '?3');
        var result = _ValidUTF8Buffer.Element.infix_38_45({}, _create(_ValidUTF8Buffer.Element, 'initTruncatingIfNeeded', {}, _this._biasedBits), 1);
        _this._biasedBits = UInt32.prototype._fullShiftRight.call(_this._biasedBits, {}, 8);
        return result;
    };
    /*Swift.(file)._ValidUTF8Buffer.replaceSubrange(_:Range<_ValidUTF8Buffer.Index>,with:C)*/
    /*Swift.(file).RangeReplaceableCollection.replaceSubrange(_:Range<Self.Index>,with:C)*/
    _ValidUTF8Buffer.prototype.replaceSubrangeWith = function ($info, target, replacement) {
        var _this = this;
        preconditionFileLine({}, function () { return _this._isValid({}, target.lowerBound); }, function () { return String(); } /*!default_value*/, '?3', '?3');
        preconditionFileLine({}, function () { return _this._isValid({}, target.upperBound); }, function () { return String(); } /*!default_value*/, '?3', '?3');
        var r = _create(_ValidUTF8Buffer, 'init', {});
        {
            var $x$generator_3 = _cloneStruct(_this.subscript$get({}, _ValidUTF8Buffer.Index.prefix_46_46_60({}, target.lowerBound)).makeIterator({}));
            while (true) {
                var $ifLet0, x_1;
                if (!((($ifLet0 = $x$generator_3.next({ $setThis: function ($val) { return $x$generator_3 = $val; } })) || true) && $ifLet0 != null && ((x_1 = $ifLet0) || true)))
                    break;
                r.append({ $setThis: function ($val) { return r = $val; } }, x_1);
            }
        }
        ;
        {
            var $x$generator_4 = replacement.makeIterator({});
            while (true) {
                var $ifLet2, x_3;
                if (!((($ifLet2 = $x$generator_4.next({ $setThis: function ($val) { return $x$generator_4 = $val; } })) || true) && $ifLet2 != null && ((x_3 = $ifLet2) || true)))
                    break;
                r.append({ $setThis: function ($val) { return r = $val; } }, x_3);
            }
        }
        ;
        {
            var $x$generator_5 = _cloneStruct(_this.subscript$get({}, _ValidUTF8Buffer.Index.postfix_46_46_46({}, target.upperBound)).makeIterator({}));
            while (true) {
                var $ifLet4, x_5;
                if (!((($ifLet4 = $x$generator_5.next({ $setThis: function ($val) { return $x$generator_5 = $val; } })) || true) && $ifLet4 != null && ((x_5 = $ifLet4) || true)))
                    break;
                r.append({ $setThis: function ($val) { return r = $val; } }, x_5);
            }
        }
        ;
        $info.$setThis(_this = _cloneStruct(_cloneStruct(r)));
    };
    /*Swift.(file)._ValidUTF8Buffer.append(contentsOf:_ValidUTF8Buffer)*/
    /*Swift.(file)._ValidUTF8Buffer.append(contentsOf:_ValidUTF8Buffer)*/
    _ValidUTF8Buffer.prototype.appendContentsOf = function ($info, other) {
        var _this = this;
        preconditionFileLine({}, function () { return Int.infix_60_61({}, Int.infix_43({}, _this.count, other.count), _this.capacity); }, function () { return String(); } /*!default_value*/, '?3', '?3');
        UInt32.infix_124_61({}, { get: function () { return _this._biasedBits; }, set: function ($val) { return _this._biasedBits = $val; } }, UInt32.infix_38_60_60({}, _create(UInt32, 'initTruncatingIfNeeded', {}, other._biasedBits), Int.infix_38_60_60({}, _this.count, 3)));
    };
    /*Swift.(file)._ValidUTF8Buffer.encodedReplacementCharacter*/
    _ValidUTF8Buffer.encodedReplacementCharacter$get = function () {
        throw 'unsupported variable Swift.(file)._ValidUTF8Buffer.encodedReplacementCharacter in ' + this.constructor.name;
    };
    Object.defineProperty(_ValidUTF8Buffer, "encodedReplacementCharacter", {
        get: function () { return this.encodedReplacementCharacter$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    _ValidUTF8Buffer.prototype.init$vars = function () {
    };
    var _76, _77;
    _ValidUTF8Buffer.$struct = true;
    _ValidUTF8Buffer.$infoAddress = '';
    _ValidUTF8Buffer.Iterator = (_76 = /** @class */ (function () {
            function class_100() {
            }
            /*Swift.(file)._ValidUTF8Buffer.Iterator.init(_:_ValidUTF8Buffer)*/
            /*Swift.(file)._ValidUTF8Buffer.Iterator.init(_:_ValidUTF8Buffer)*/
            class_100.prototype.init_ValidUTF8Buffer = function ($info, x) {
                var _this = this;
                _this._biasedBits = x._biasedBits;
                return;
            };
            /*Swift.(file)._ValidUTF8Buffer.Iterator.next()*/
            /*Swift.(file).IteratorProtocol.next()*/
            class_100.prototype.next = function ($info) {
                var _this = this;
                if ((UInt32.infix_61_61({}, _this._biasedBits, 0))) {
                    return null;
                }
                ;
                var $defer = function () {
                    UInt32.infix_62_62_61({}, { get: function () { return _this._biasedBits; }, set: function ($val) { return _this._biasedBits = $val; } }, 8);
                };
                var $result = (function () {
                    try {
                        ;
                        return _ValidUTF8Buffer.Iterator.Element.infix_38_45({}, _create(_ValidUTF8Buffer.Iterator.Element, 'initTruncatingIfNeeded', {}, _this._biasedBits), 1);
                    }
                    catch ($error) {
                        $defer({});
                        throw $error;
                    }
                })();
                $defer({});
                return $result;
            };
            class_100.prototype.init$vars = function () {
            };
            return class_100;
        }()),
        _76.$struct = true,
        _76.$infoAddress = '',
        _76);
    _ValidUTF8Buffer.Index = (_77 = /** @class */ (function () {
            function class_101() {
            }
            /*Swift.(file)._ValidUTF8Buffer.Index.init(_biasedBits:UInt32)*/
            /*Swift.(file)._ValidUTF8Buffer.Index.init(_biasedBits:UInt32)*/
            class_101.prototype.init_biasedBitsUInt32 = function ($info, _biasedBits) {
                var _this = this;
                _this._biasedBits = _biasedBits;
                return;
            };
            /*Swift.(file)._ValidUTF8Buffer.Index.==infix(_:_ValidUTF8Buffer.Index,_:_ValidUTF8Buffer.Index)*/
            /*Swift.(file).Equatable.==infix(_:Self,_:Self)*/
            class_101.infix_61_61 = function ($info, lhs, rhs) {
                return lhs == rhs;
            };
            /*Swift.(file)._ValidUTF8Buffer.Index.<infix(_:_ValidUTF8Buffer.Index,_:_ValidUTF8Buffer.Index)*/
            /*Swift.(file).Comparable.<infix(_:Self,_:Self)*/
            class_101.infix_60 = function ($info, lhs, rhs) {
                return lhs < rhs;
            };
            class_101.prototype.init$vars = function () {
            };
            return class_101;
        }()),
        _77.$struct = true,
        _77.$infoAddress = '',
        _77);
    return _ValidUTF8Buffer;
}());
if (typeof IteratorProtocol$implementation != 'undefined')
    _mixin(_ValidUTF8Buffer.Iterator, IteratorProtocol$implementation, false);
if (typeof Sequence$implementation != 'undefined')
    _mixin(_ValidUTF8Buffer.Iterator, Sequence$implementation, false);
if (typeof Comparable$implementation != 'undefined')
    _mixin(_ValidUTF8Buffer.Index, Comparable$implementation, false);
if (typeof Sequence$implementation != 'undefined')
    _mixin(_ValidUTF8Buffer, Sequence$implementation, false);
if (typeof Collection$implementation != 'undefined')
    _mixin(_ValidUTF8Buffer, Collection$implementation, false);
if (typeof BidirectionalCollection$implementation != 'undefined')
    _mixin(_ValidUTF8Buffer, BidirectionalCollection$implementation, false);
if (typeof RandomAccessCollection$implementation != 'undefined')
    _mixin(_ValidUTF8Buffer, RandomAccessCollection$implementation, false);
if (typeof RangeReplaceableCollection$implementation != 'undefined')
    _mixin(_ValidUTF8Buffer, RangeReplaceableCollection$implementation, false);
var CollectionOfOne = /** @class */ (function () {
    function CollectionOfOne() {
    }
    /*Swift.(file).CollectionOfOne.init(_:Element)*/
    /*Swift.(file).CollectionOfOne.init(_:Element)*/
    CollectionOfOne.prototype.init = function ($info, _element) {
        var _this = this;
        _this._element = _element;
        return;
    };
    /*Swift.(file).CollectionOfOne.startIndex*/
    CollectionOfOne.prototype.startIndex$get = function () {
        var _this = this;
        return 0;
    };
    Object.defineProperty(CollectionOfOne.prototype, "startIndex", {
        get: function () { return this.startIndex$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).CollectionOfOne.endIndex*/
    CollectionOfOne.prototype.endIndex$get = function () {
        var _this = this;
        return 1;
    };
    Object.defineProperty(CollectionOfOne.prototype, "endIndex", {
        get: function () { return this.endIndex$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).CollectionOfOne.index(after:CollectionOfOne<Element>.Index)*/
    /*Swift.(file).BidirectionalCollection.index(after:Self.Index)*/
    /*Swift.(file).RandomAccessCollection.index(after:Self.Index)*/
    /*Swift.(file).Collection.index(after:Self.Index)*/
    CollectionOfOne.prototype.indexAfter = function ($info, i) {
        var _this = this;
        preconditionFileLine({}, function () { return Int.infix_61_61({}, i, _this.startIndex); }, function () { return String(); } /*!default_value*/, '?3', '?3');
        return 1;
    };
    /*Swift.(file).CollectionOfOne.index(before:CollectionOfOne<Element>.Index)*/
    /*Swift.(file).BidirectionalCollection.index(before:Self.Index)*/
    /*Swift.(file).RandomAccessCollection.index(before:Self.Index)*/
    CollectionOfOne.prototype.indexBefore = function ($info, i) {
        var _this = this;
        preconditionFileLine({}, function () { return Int.infix_61_61({}, i, _this.endIndex); }, function () { return String(); } /*!default_value*/, '?3', '?3');
        return 0;
    };
    /*Swift.(file).CollectionOfOne.makeIterator()*/
    /*Swift.(file).Collection.makeIterator()*/
    /*Swift.(file).Sequence.makeIterator()*/
    CollectionOfOne.prototype.makeIterator = function ($info) {
        var _this = this;
        return _create(CollectionOfOne.Iterator, 'init_elementsOptional', {}, _this._element);
    };
    /*Swift.(file).CollectionOfOne.subscript(_:Int)*/
    /*Swift.(file).BidirectionalCollection.subscript(_:Self.Index)*/
    /*Swift.(file).RandomAccessCollection.subscript(_:Self.Index)*/
    /*Swift.(file).MutableCollection.subscript(_:Self.Index)*/
    /*Swift.(file).Collection.subscript(_:Self.Index)*/
    CollectionOfOne.prototype.subscript$get = function ($info, position) {
        var _this = this;
        preconditionFileLine({}, function () { return Int.infix_61_61({}, position, 0); }, function () { return "Index out of range"; }, '?3', '?3');
        return _this._element;
    };
    CollectionOfOne.prototype.subscript$_modify = function ($info, position) {
        var _this = this;
        preconditionFileLine({}, function () { return Int.infix_61_61({}, position, 0); }, function () { return "Index out of range"; }, '?3', '?3');
        /*yield*/
    }; /*Swift.(file).CollectionOfOne.subscript(_:Int)*/
    /*Swift.(file).BidirectionalCollection.subscript(_:Self.Index)*/
    /*Swift.(file).RandomAccessCollection.subscript(_:Self.Index)*/
    /*Swift.(file).MutableCollection.subscript(_:Self.Index)*/
    /*Swift.(file).Collection.subscript(_:Self.Index)*/
    CollectionOfOne.prototype.subscript$_modify = function ($info, position) {
        var _this = this;
        preconditionFileLine({}, function () { return Int.infix_61_61({}, position, 0); }, function () { return "Index out of range"; }, '?3', '?3');
        return _this._element;
    };
    CollectionOfOne.prototype.subscript$_modify = function ($info, position) {
        var _this = this;
        preconditionFileLine({}, function () { return Int.infix_61_61({}, position, 0); }, function () { return "Index out of range"; }, '?3', '?3');
        /*yield*/
    };
    /*Swift.(file).CollectionOfOne.subscript(_:Range<Int>)*/
    /*Swift.(file).BidirectionalCollection.subscript(_:Range<Self.Index>)*/
    /*Swift.(file).RandomAccessCollection.subscript(_:Range<Self.Index>)*/
    /*Swift.(file).MutableCollection.subscript(_:Range<Self.Index>)*/
    /*Swift.(file).Collection.subscript(_:Range<Self.Index>)*/
    CollectionOfOne.prototype.subscriptRange$get = function ($info, bounds) {
        var _this = this;
        return _create(Slice, 'initBaseBoundsRange', {}, _this, bounds);
    }; /*Swift.(file).CollectionOfOne.subscript(_:Range<Int>)*/
    /*Swift.(file).BidirectionalCollection.subscript(_:Range<Self.Index>)*/
    /*Swift.(file).RandomAccessCollection.subscript(_:Range<Self.Index>)*/
    /*Swift.(file).MutableCollection.subscript(_:Range<Self.Index>)*/
    /*Swift.(file).Collection.subscript(_:Range<Self.Index>)*/
    CollectionOfOne.prototype.subscriptRange$set = function ($info, newValue, bounds) {
        var _this = this;
        var n = newValue.count;
        preconditionFileLine({}, function () { return Int.infix_61_61({}, bounds.count, n); }, function () { return "CollectionOfOne can't be resized"; }, '?3', '?3');
        if ((Int.infix_61_61({}, n, 1))) {
            $info.$setThis(_this = _cloneStruct(_cloneStruct(newValue.base)));
        }
    };
    /*Swift.(file).CollectionOfOne.count*/
    CollectionOfOne.prototype.count$get = function () {
        var _this = this;
        return 1;
    };
    Object.defineProperty(CollectionOfOne.prototype, "count", {
        get: function () { return this.count$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).CollectionOfOne.debugDescription*/
    CollectionOfOne.prototype.debugDescription$get = function () {
        var _this = this;
        return (("CollectionOfOne(") + (_create(String, 'initReflecting', {}, _this._element)) + (")"));
    };
    Object.defineProperty(CollectionOfOne.prototype, "debugDescription", {
        get: function () { return this.debugDescription$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).CollectionOfOne.customMirror*/
    CollectionOfOne.prototype.customMirror$get = function () {
        var _this = this;
        return _create(Mirror, 'initChildrenKeyValuePairsDisplayStyleOptionalAncestorRepresentationMirrorAncestorRepresentation', {}, _this, new Map([["element", _this._element]]), nil /*!default_value*/, generated /*!default_value*/);
    };
    Object.defineProperty(CollectionOfOne.prototype, "customMirror", {
        get: function () { return this.customMirror$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    CollectionOfOne.prototype.init$vars = function () {
    };
    var _78;
    CollectionOfOne.$struct = true;
    CollectionOfOne.$infoAddress = '';
    CollectionOfOne.Iterator = (_78 = /** @class */ (function () {
            function class_102() {
            }
            /*Swift.(file).CollectionOfOne.Iterator.init(_elements:CollectionOfOne<Element>.Iterator.Element?)*/
            /*Swift.(file).CollectionOfOne.Iterator.init(_elements:CollectionOfOne<Element>.Iterator.Element?)*/
            class_102.prototype.init_elementsOptional = function ($info, _elements) {
                var _this = this;
                _this._elements = _elements;
                return;
            };
            /*Swift.(file).CollectionOfOne.Iterator.next()*/
            /*Swift.(file).IteratorProtocol.next()*/
            class_102.prototype.next = function ($info) {
                var _this = this;
                var result = _this._elements;
                _this._elements = null;
                return result;
            };
            class_102.prototype.init$vars = function () {
            };
            return class_102;
        }()),
        _78.$struct = true,
        _78.$infoAddress = '',
        _78);
    return CollectionOfOne;
}());
if (typeof IteratorProtocol$implementation != 'undefined')
    _mixin(CollectionOfOne.Iterator, IteratorProtocol$implementation, false);
if (typeof RandomAccessCollection$implementation != 'undefined')
    _mixin(CollectionOfOne, RandomAccessCollection$implementation, false);
if (typeof MutableCollection$implementation != 'undefined')
    _mixin(CollectionOfOne, MutableCollection$implementation, false);
if (typeof CustomDebugStringConvertible$implementation != 'undefined')
    _mixin(CollectionOfOne, CustomDebugStringConvertible$implementation, false);
if (typeof CustomReflectable$implementation != 'undefined')
    _mixin(CollectionOfOne, CustomReflectable$implementation, false);
var AnyBidirectionalCollection = /** @class */ (function () {
    function AnyBidirectionalCollection() {
    }
    /*Swift.(file).AnyBidirectionalCollection.init(_box:_AnyBidirectionalCollectionBox<Element>)*/
    /*Swift.(file).AnyBidirectionalCollection.init(_box:_AnyBidirectionalCollectionBox<Element>)*/
    AnyBidirectionalCollection.prototype.init_box_AnyBidirectionalCollectionBox = function ($info, _box) {
        throw 'unsupported method Swift.(file).AnyBidirectionalCollection.init(_box:_AnyBidirectionalCollectionBox<Element>) in ' + this.constructor.name;
    };
    /*Swift.(file).AnyBidirectionalCollection.makeIterator()*/
    /*Swift.(file).Collection.makeIterator()*/
    /*Swift.(file).Sequence.makeIterator()*/
    AnyBidirectionalCollection.prototype.makeIterator = function ($info) {
        var _this = this;
        return _create(IndexingIterator, 'init_elements', {}, _this);
    };
    /*Swift.(file).AnyBidirectionalCollection.dropLast(_:Int)*/
    /*Swift.(file).AnyBidirectionalCollection.dropLast(_:Int)*/
    AnyBidirectionalCollection.prototype.dropLast = function ($info, n) {
        throw 'unsupported method Swift.(file).AnyBidirectionalCollection.dropLast(_:Int) in ' + this.constructor.name;
    };
    /*Swift.(file).AnyBidirectionalCollection.prefix(while:(Element) throws -> Bool)*/
    /*Swift.(file).AnyBidirectionalCollection.prefix(while:(Element) throws -> Bool)*/
    AnyBidirectionalCollection.prototype.prefixWhile = function ($info, predicate) {
        throw 'unsupported method Swift.(file).AnyBidirectionalCollection.prefix(while:(Element) throws -> Bool) in ' + this.constructor.name;
    };
    /*Swift.(file).AnyBidirectionalCollection.suffix(_:Int)*/
    /*Swift.(file).AnyBidirectionalCollection.suffix(_:Int)*/
    AnyBidirectionalCollection.prototype.suffix = function ($info, maxLength) {
        throw 'unsupported method Swift.(file).AnyBidirectionalCollection.suffix(_:Int) in ' + this.constructor.name;
    };
    /*Swift.(file).AnyBidirectionalCollection.underestimatedCount*/
    AnyBidirectionalCollection.prototype.underestimatedCount$get = function () {
        var _this = this;
        return 0;
    };
    Object.defineProperty(AnyBidirectionalCollection.prototype, "underestimatedCount", {
        get: function () { return this.underestimatedCount$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).AnyBidirectionalCollection.map(_:(Element) throws -> T)*/
    /*Swift.(file).AnyBidirectionalCollection.map(_:(Element) throws -> T)*/
    AnyBidirectionalCollection.prototype.mapSwift = function ($info, transform) {
        throw 'unsupported method Swift.(file).AnyBidirectionalCollection.map(_:(Element) throws -> T) in ' + this.constructor.name;
    };
    /*Swift.(file).AnyBidirectionalCollection.filter(_:(Element) throws -> Bool)*/
    /*Swift.(file).AnyBidirectionalCollection.filter(_:(Element) throws -> Bool)*/
    AnyBidirectionalCollection.prototype.filterSwift = function ($info, isIncluded) {
        throw 'unsupported method Swift.(file).AnyBidirectionalCollection.filter(_:(Element) throws -> Bool) in ' + this.constructor.name;
    };
    /*Swift.(file).AnyBidirectionalCollection.forEach(_:(Element) throws -> Void)*/
    /*Swift.(file).AnyBidirectionalCollection.forEach(_:(Element) throws -> Void)*/
    AnyBidirectionalCollection.prototype.forEachSwift = function ($info, body) {
        throw 'unsupported method Swift.(file).AnyBidirectionalCollection.forEach(_:(Element) throws -> Void) in ' + this.constructor.name;
    };
    /*Swift.(file).AnyBidirectionalCollection.drop(while:(Element) throws -> Bool)*/
    /*Swift.(file).AnyBidirectionalCollection.drop(while:(Element) throws -> Bool)*/
    AnyBidirectionalCollection.prototype.dropWhile = function ($info, predicate) {
        throw 'unsupported method Swift.(file).AnyBidirectionalCollection.drop(while:(Element) throws -> Bool) in ' + this.constructor.name;
    };
    /*Swift.(file).AnyBidirectionalCollection.dropFirst(_:Int)*/
    /*Swift.(file).AnyBidirectionalCollection.dropFirst(_:Int)*/
    AnyBidirectionalCollection.prototype.dropFirst = function ($info, n) {
        throw 'unsupported method Swift.(file).AnyBidirectionalCollection.dropFirst(_:Int) in ' + this.constructor.name;
    };
    /*Swift.(file).AnyBidirectionalCollection.prefix(_:Int)*/
    /*Swift.(file).AnyBidirectionalCollection.prefix(_:Int)*/
    AnyBidirectionalCollection.prototype.prefix = function ($info, maxLength) {
        throw 'unsupported method Swift.(file).AnyBidirectionalCollection.prefix(_:Int) in ' + this.constructor.name;
    };
    /*Swift.(file).AnyBidirectionalCollection.init(_:C)*/
    /*Swift.(file).AnyBidirectionalCollection.init(_:C)*/
    AnyBidirectionalCollection.prototype.init = function ($info, base) {
        throw 'unsupported method Swift.(file).AnyBidirectionalCollection.init(_:C) in ' + this.constructor.name;
    };
    /*Swift.(file).AnyBidirectionalCollection.init(_:AnyBidirectionalCollection<Element>)*/
    /*Swift.(file).AnyBidirectionalCollection.init(_:AnyBidirectionalCollection<Element>)*/
    AnyBidirectionalCollection.prototype.initAnyBidirectionalCollection = function ($info, other) {
        throw 'unsupported method Swift.(file).AnyBidirectionalCollection.init(_:AnyBidirectionalCollection<Element>) in ' + this.constructor.name;
    };
    /*Swift.(file).AnyBidirectionalCollection.init(_:C)*/
    /*Swift.(file).AnyBidirectionalCollection.init(_:C)*/
    AnyBidirectionalCollection.prototype.init = function ($info, base) {
        throw 'unsupported method Swift.(file).AnyBidirectionalCollection.init(_:C) in ' + this.constructor.name;
    };
    /*Swift.(file).AnyBidirectionalCollection.init(_:AnyRandomAccessCollection<Element>)*/
    /*Swift.(file).AnyBidirectionalCollection.init(_:AnyRandomAccessCollection<Element>)*/
    AnyBidirectionalCollection.prototype.initAnyRandomAccessCollection = function ($info, other) {
        throw 'unsupported method Swift.(file).AnyBidirectionalCollection.init(_:AnyRandomAccessCollection<Element>) in ' + this.constructor.name;
    };
    /*Swift.(file).AnyBidirectionalCollection.init(_:AnyCollection<Element>)*/
    /*Swift.(file).AnyBidirectionalCollection.init(_:AnyCollection<Element>)*/
    AnyBidirectionalCollection.prototype.initAnyCollection = function ($info, other) {
        throw 'unsupported method Swift.(file).AnyBidirectionalCollection.init(_:AnyCollection<Element>) in ' + this.constructor.name;
    };
    /*Swift.(file).AnyBidirectionalCollection.startIndex*/
    AnyBidirectionalCollection.prototype.startIndex$get = function () {
        throw 'unsupported variable Swift.(file).AnyBidirectionalCollection.startIndex in ' + this.constructor.name;
    };
    Object.defineProperty(AnyBidirectionalCollection.prototype, "startIndex", {
        get: function () { return this.startIndex$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).AnyBidirectionalCollection.endIndex*/
    AnyBidirectionalCollection.prototype.endIndex$get = function () {
        throw 'unsupported variable Swift.(file).AnyBidirectionalCollection.endIndex in ' + this.constructor.name;
    };
    Object.defineProperty(AnyBidirectionalCollection.prototype, "endIndex", {
        get: function () { return this.endIndex$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).AnyBidirectionalCollection.subscript(_:AnyBidirectionalCollection<Element>.Index)*/
    /*Swift.(file).BidirectionalCollection.subscript(_:Self.Index)*/
    /*Swift.(file).Collection.subscript(_:Self.Index)*/
    AnyBidirectionalCollection.prototype.subscript$get = function ($info, position) {
        throw 'unsupported method Swift.(file).AnyBidirectionalCollection.subscript(_:AnyBidirectionalCollection<Element>.Index) in ' + this.constructor.name;
    };
    /*Swift.(file).AnyBidirectionalCollection.subscript(_:Range<AnyBidirectionalCollection<Element>.Index>)*/
    /*Swift.(file).BidirectionalCollection.subscript(_:Range<Self.Index>)*/
    /*Swift.(file).Collection.subscript(_:Range<Self.Index>)*/
    AnyBidirectionalCollection.prototype.subscriptRange$get = function ($info, bounds) {
        var _this = this;
        return _create(Slice, 'initBaseBoundsRange', {}, _this, bounds);
    };
    /*Swift.(file).AnyBidirectionalCollection.index(after:AnyBidirectionalCollection<Element>.Index)*/
    /*Swift.(file).BidirectionalCollection.index(after:Self.Index)*/
    /*Swift.(file).Collection.index(after:Self.Index)*/
    AnyBidirectionalCollection.prototype.indexAfter = function ($info, i) {
        throw 'unsupported method Swift.(file).AnyBidirectionalCollection.index(after:AnyBidirectionalCollection<Element>.Index) in ' + this.constructor.name;
    };
    /*Swift.(file).AnyBidirectionalCollection.formIndex(after:AnyBidirectionalCollection<Element>.Index)*/
    /*Swift.(file).BidirectionalCollection.formIndex(after:Self.Index)*/
    /*Swift.(file).Collection.formIndex(after:Self.Index)*/
    AnyBidirectionalCollection.prototype.formIndexAfter = function ($info, i$inout) {
        var _this = this;
        var i = i$inout.get();
        var $result = (function () {
            i = _this.indexAfter({}, i);
        })();
        i$inout.set(i);
        return $result;
    };
    /*Swift.(file).AnyBidirectionalCollection.index(_:AnyBidirectionalCollection<Element>.Index,offsetBy:Int)*/
    /*Swift.(file).BidirectionalCollection.index(_:Self.Index,offsetBy:Int)*/
    /*Swift.(file).Collection.index(_:Self.Index,offsetBy:Int)*/
    AnyBidirectionalCollection.prototype.indexOffsetBy = function ($info, i, n) {
        var _this = this;
        return _this._indexOffsetBy({}, i, distance);
    };
    /*Swift.(file).AnyBidirectionalCollection.index(_:AnyBidirectionalCollection<Element>.Index,offsetBy:Int,limitedBy:AnyBidirectionalCollection<Element>.Index)*/
    /*Swift.(file).BidirectionalCollection.index(_:Self.Index,offsetBy:Int,limitedBy:Self.Index)*/
    /*Swift.(file).Collection.index(_:Self.Index,offsetBy:Int,limitedBy:Self.Index)*/
    AnyBidirectionalCollection.prototype.indexOffsetByLimitedBy = function ($info, i, n, limit) {
        var _this = this;
        return _this._indexOffsetByLimitedBy({}, i, distance, limit);
    };
    /*Swift.(file).AnyBidirectionalCollection.formIndex(_:AnyBidirectionalCollection<Element>.Index,offsetBy:Int)*/
    /*Swift.(file).AnyBidirectionalCollection.formIndex(_:AnyBidirectionalCollection<Element>.Index,offsetBy:Int)*/
    AnyBidirectionalCollection.prototype.formIndexOffsetBy = function ($info, i$inout, n) {
        throw 'unsupported method Swift.(file).AnyBidirectionalCollection.formIndex(_:AnyBidirectionalCollection<Element>.Index,offsetBy:Int) in ' + this.constructor.name;
    };
    /*Swift.(file).AnyBidirectionalCollection.formIndex(_:AnyBidirectionalCollection<Element>.Index,offsetBy:Int,limitedBy:AnyBidirectionalCollection<Element>.Index)*/
    /*Swift.(file).AnyBidirectionalCollection.formIndex(_:AnyBidirectionalCollection<Element>.Index,offsetBy:Int,limitedBy:AnyBidirectionalCollection<Element>.Index)*/
    AnyBidirectionalCollection.prototype.formIndexOffsetByLimitedBy = function ($info, i$inout, n, limit) {
        throw 'unsupported method Swift.(file).AnyBidirectionalCollection.formIndex(_:AnyBidirectionalCollection<Element>.Index,offsetBy:Int,limitedBy:AnyBidirectionalCollection<Element>.Index) in ' + this.constructor.name;
    };
    /*Swift.(file).AnyBidirectionalCollection.distance(from:AnyBidirectionalCollection<Element>.Index,to:AnyBidirectionalCollection<Element>.Index)*/
    /*Swift.(file).BidirectionalCollection.distance(from:Self.Index,to:Self.Index)*/
    /*Swift.(file).Collection.distance(from:Self.Index,to:Self.Index)*/
    AnyBidirectionalCollection.prototype.distanceFromTo = function ($info, start, end) {
        var _this = this;
        return _this._distanceFromTo({}, start, end);
    };
    /*Swift.(file).AnyBidirectionalCollection.count*/
    AnyBidirectionalCollection.prototype.count$get = function () {
        var _this = this;
        return _this.distanceFromTo({}, _this.startIndex, _this.endIndex);
    };
    Object.defineProperty(AnyBidirectionalCollection.prototype, "count", {
        get: function () { return this.count$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).AnyBidirectionalCollection.index(before:AnyBidirectionalCollection<Element>.Index)*/
    /*Swift.(file).BidirectionalCollection.index(before:Self.Index)*/
    AnyBidirectionalCollection.prototype.indexBefore = function ($info, i) {
        throw 'unsupported method Swift.(file).AnyBidirectionalCollection.index(before:AnyBidirectionalCollection<Element>.Index) in ' + this.constructor.name;
    };
    /*Swift.(file).AnyBidirectionalCollection.formIndex(before:AnyBidirectionalCollection<Element>.Index)*/
    /*Swift.(file).BidirectionalCollection.formIndex(before:Self.Index)*/
    AnyBidirectionalCollection.prototype.formIndexBefore = function ($info, i$inout) {
        var _this = this;
        var i = i$inout.get();
        var $result = (function () {
            i = _this.indexBefore({}, i);
        })();
        i$inout.set(i);
        return $result;
    };
    AnyBidirectionalCollection.prototype.init$vars = function () {
    };
    AnyBidirectionalCollection.$struct = true;
    AnyBidirectionalCollection.$infoAddress = '';
    AnyBidirectionalCollection.initAnyCollection$failable = true;
    return AnyBidirectionalCollection;
}());
if (typeof BidirectionalCollection$implementation != 'undefined')
    _mixin(AnyBidirectionalCollection, BidirectionalCollection$implementation, false);
if (typeof _AnyCollectionProtocol$implementation != 'undefined')
    _mixin(AnyBidirectionalCollection, _AnyCollectionProtocol$implementation, false);
var AnyRandomAccessCollection = /** @class */ (function () {
    function AnyRandomAccessCollection() {
    }
    /*Swift.(file).AnyRandomAccessCollection.init(_box:_AnyRandomAccessCollectionBox<Element>)*/
    /*Swift.(file).AnyRandomAccessCollection.init(_box:_AnyRandomAccessCollectionBox<Element>)*/
    AnyRandomAccessCollection.prototype.init_box_AnyRandomAccessCollectionBox = function ($info, _box) {
        throw 'unsupported method Swift.(file).AnyRandomAccessCollection.init(_box:_AnyRandomAccessCollectionBox<Element>) in ' + this.constructor.name;
    };
    /*Swift.(file).AnyRandomAccessCollection.makeIterator()*/
    /*Swift.(file).Collection.makeIterator()*/
    /*Swift.(file).Sequence.makeIterator()*/
    AnyRandomAccessCollection.prototype.makeIterator = function ($info) {
        var _this = this;
        return _create(IndexingIterator, 'init_elements', {}, _this);
    };
    /*Swift.(file).AnyRandomAccessCollection.dropLast(_:Int)*/
    /*Swift.(file).AnyRandomAccessCollection.dropLast(_:Int)*/
    AnyRandomAccessCollection.prototype.dropLast = function ($info, n) {
        throw 'unsupported method Swift.(file).AnyRandomAccessCollection.dropLast(_:Int) in ' + this.constructor.name;
    };
    /*Swift.(file).AnyRandomAccessCollection.prefix(while:(Element) throws -> Bool)*/
    /*Swift.(file).AnyRandomAccessCollection.prefix(while:(Element) throws -> Bool)*/
    AnyRandomAccessCollection.prototype.prefixWhile = function ($info, predicate) {
        throw 'unsupported method Swift.(file).AnyRandomAccessCollection.prefix(while:(Element) throws -> Bool) in ' + this.constructor.name;
    };
    /*Swift.(file).AnyRandomAccessCollection.suffix(_:Int)*/
    /*Swift.(file).AnyRandomAccessCollection.suffix(_:Int)*/
    AnyRandomAccessCollection.prototype.suffix = function ($info, maxLength) {
        throw 'unsupported method Swift.(file).AnyRandomAccessCollection.suffix(_:Int) in ' + this.constructor.name;
    };
    /*Swift.(file).AnyRandomAccessCollection.underestimatedCount*/
    AnyRandomAccessCollection.prototype.underestimatedCount$get = function () {
        var _this = this;
        return 0;
    };
    Object.defineProperty(AnyRandomAccessCollection.prototype, "underestimatedCount", {
        get: function () { return this.underestimatedCount$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).AnyRandomAccessCollection.map(_:(Element) throws -> T)*/
    /*Swift.(file).AnyRandomAccessCollection.map(_:(Element) throws -> T)*/
    AnyRandomAccessCollection.prototype.mapSwift = function ($info, transform) {
        throw 'unsupported method Swift.(file).AnyRandomAccessCollection.map(_:(Element) throws -> T) in ' + this.constructor.name;
    };
    /*Swift.(file).AnyRandomAccessCollection.filter(_:(Element) throws -> Bool)*/
    /*Swift.(file).AnyRandomAccessCollection.filter(_:(Element) throws -> Bool)*/
    AnyRandomAccessCollection.prototype.filterSwift = function ($info, isIncluded) {
        throw 'unsupported method Swift.(file).AnyRandomAccessCollection.filter(_:(Element) throws -> Bool) in ' + this.constructor.name;
    };
    /*Swift.(file).AnyRandomAccessCollection.forEach(_:(Element) throws -> Void)*/
    /*Swift.(file).AnyRandomAccessCollection.forEach(_:(Element) throws -> Void)*/
    AnyRandomAccessCollection.prototype.forEachSwift = function ($info, body) {
        throw 'unsupported method Swift.(file).AnyRandomAccessCollection.forEach(_:(Element) throws -> Void) in ' + this.constructor.name;
    };
    /*Swift.(file).AnyRandomAccessCollection.drop(while:(Element) throws -> Bool)*/
    /*Swift.(file).AnyRandomAccessCollection.drop(while:(Element) throws -> Bool)*/
    AnyRandomAccessCollection.prototype.dropWhile = function ($info, predicate) {
        throw 'unsupported method Swift.(file).AnyRandomAccessCollection.drop(while:(Element) throws -> Bool) in ' + this.constructor.name;
    };
    /*Swift.(file).AnyRandomAccessCollection.dropFirst(_:Int)*/
    /*Swift.(file).AnyRandomAccessCollection.dropFirst(_:Int)*/
    AnyRandomAccessCollection.prototype.dropFirst = function ($info, n) {
        throw 'unsupported method Swift.(file).AnyRandomAccessCollection.dropFirst(_:Int) in ' + this.constructor.name;
    };
    /*Swift.(file).AnyRandomAccessCollection.prefix(_:Int)*/
    /*Swift.(file).AnyRandomAccessCollection.prefix(_:Int)*/
    AnyRandomAccessCollection.prototype.prefix = function ($info, maxLength) {
        throw 'unsupported method Swift.(file).AnyRandomAccessCollection.prefix(_:Int) in ' + this.constructor.name;
    };
    /*Swift.(file).AnyRandomAccessCollection.init(_:C)*/
    /*Swift.(file).AnyRandomAccessCollection.init(_:C)*/
    AnyRandomAccessCollection.prototype.init = function ($info, base) {
        throw 'unsupported method Swift.(file).AnyRandomAccessCollection.init(_:C) in ' + this.constructor.name;
    };
    /*Swift.(file).AnyRandomAccessCollection.init(_:AnyRandomAccessCollection<Element>)*/
    /*Swift.(file).AnyRandomAccessCollection.init(_:AnyRandomAccessCollection<Element>)*/
    AnyRandomAccessCollection.prototype.initAnyRandomAccessCollection = function ($info, other) {
        throw 'unsupported method Swift.(file).AnyRandomAccessCollection.init(_:AnyRandomAccessCollection<Element>) in ' + this.constructor.name;
    };
    /*Swift.(file).AnyRandomAccessCollection.init(_:AnyCollection<Element>)*/
    /*Swift.(file).AnyRandomAccessCollection.init(_:AnyCollection<Element>)*/
    AnyRandomAccessCollection.prototype.initAnyCollection = function ($info, other) {
        throw 'unsupported method Swift.(file).AnyRandomAccessCollection.init(_:AnyCollection<Element>) in ' + this.constructor.name;
    };
    /*Swift.(file).AnyRandomAccessCollection.init(_:AnyBidirectionalCollection<Element>)*/
    /*Swift.(file).AnyRandomAccessCollection.init(_:AnyBidirectionalCollection<Element>)*/
    AnyRandomAccessCollection.prototype.initAnyBidirectionalCollection = function ($info, other) {
        throw 'unsupported method Swift.(file).AnyRandomAccessCollection.init(_:AnyBidirectionalCollection<Element>) in ' + this.constructor.name;
    };
    /*Swift.(file).AnyRandomAccessCollection.startIndex*/
    AnyRandomAccessCollection.prototype.startIndex$get = function () {
        throw 'unsupported variable Swift.(file).AnyRandomAccessCollection.startIndex in ' + this.constructor.name;
    };
    Object.defineProperty(AnyRandomAccessCollection.prototype, "startIndex", {
        get: function () { return this.startIndex$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).AnyRandomAccessCollection.endIndex*/
    AnyRandomAccessCollection.prototype.endIndex$get = function () {
        throw 'unsupported variable Swift.(file).AnyRandomAccessCollection.endIndex in ' + this.constructor.name;
    };
    Object.defineProperty(AnyRandomAccessCollection.prototype, "endIndex", {
        get: function () { return this.endIndex$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).AnyRandomAccessCollection.subscript(_:AnyRandomAccessCollection<Element>.Index)*/
    /*Swift.(file).RandomAccessCollection.subscript(_:Self.Index)*/
    /*Swift.(file).BidirectionalCollection.subscript(_:Self.Index)*/
    /*Swift.(file).Collection.subscript(_:Self.Index)*/
    AnyRandomAccessCollection.prototype.subscript$get = function ($info, position) {
        throw 'unsupported method Swift.(file).AnyRandomAccessCollection.subscript(_:AnyRandomAccessCollection<Element>.Index) in ' + this.constructor.name;
    };
    /*Swift.(file).AnyRandomAccessCollection.subscript(_:Range<AnyRandomAccessCollection<Element>.Index>)*/
    /*Swift.(file).RandomAccessCollection.subscript(_:Range<Self.Index>)*/
    /*Swift.(file).BidirectionalCollection.subscript(_:Range<Self.Index>)*/
    /*Swift.(file).Collection.subscript(_:Range<Self.Index>)*/
    AnyRandomAccessCollection.prototype.subscriptRange$get = function ($info, bounds) {
        var _this = this;
        return _create(Slice, 'initBaseBoundsRange', {}, _this, bounds);
    };
    /*Swift.(file).AnyRandomAccessCollection.index(after:AnyRandomAccessCollection<Element>.Index)*/
    /*Swift.(file).RandomAccessCollection.index(after:Self.Index)*/
    /*Swift.(file).BidirectionalCollection.index(after:Self.Index)*/
    /*Swift.(file).Collection.index(after:Self.Index)*/
    AnyRandomAccessCollection.prototype.indexAfter = function ($info, i) {
        throw 'unsupported method Swift.(file).AnyRandomAccessCollection.index(after:AnyRandomAccessCollection<Element>.Index) in ' + this.constructor.name;
    };
    /*Swift.(file).AnyRandomAccessCollection.formIndex(after:AnyRandomAccessCollection<Element>.Index)*/
    /*Swift.(file).RandomAccessCollection.formIndex(after:Self.Index)*/
    /*Swift.(file).BidirectionalCollection.formIndex(after:Self.Index)*/
    /*Swift.(file).Collection.formIndex(after:Self.Index)*/
    AnyRandomAccessCollection.prototype.formIndexAfter = function ($info, i$inout) {
        var _this = this;
        var i = i$inout.get();
        var $result = (function () {
            i = _this.indexAfter({}, i);
        })();
        i$inout.set(i);
        return $result;
    };
    /*Swift.(file).AnyRandomAccessCollection.index(_:AnyRandomAccessCollection<Element>.Index,offsetBy:Int)*/
    /*Swift.(file).RandomAccessCollection.index(_:Self.Index,offsetBy:Int)*/
    /*Swift.(file).BidirectionalCollection.index(_:Self.Index,offsetBy:Int)*/
    /*Swift.(file).Collection.index(_:Self.Index,offsetBy:Int)*/
    AnyRandomAccessCollection.prototype.indexOffsetBy = function ($info, i, n) {
        var _this = this;
        return _this._indexOffsetBy({}, i, distance);
    };
    /*Swift.(file).AnyRandomAccessCollection.index(_:AnyRandomAccessCollection<Element>.Index,offsetBy:Int,limitedBy:AnyRandomAccessCollection<Element>.Index)*/
    /*Swift.(file).RandomAccessCollection.index(_:Self.Index,offsetBy:Int,limitedBy:Self.Index)*/
    /*Swift.(file).BidirectionalCollection.index(_:Self.Index,offsetBy:Int,limitedBy:Self.Index)*/
    /*Swift.(file).Collection.index(_:Self.Index,offsetBy:Int,limitedBy:Self.Index)*/
    AnyRandomAccessCollection.prototype.indexOffsetByLimitedBy = function ($info, i, n, limit) {
        var _this = this;
        var l = _this.distanceFromTo({}, i, limit);
        if (((Int.infix_62({}, distance, 0) ? Bool.infix_38_38({}, Int.infix_62_61({}, l, 0), function () { return Int.infix_60({}, l, distance); }) : Bool.infix_38_38({}, Int.infix_60_61({}, l, 0), function () { return Int.infix_60({}, distance, l); })))) {
            return null;
        }
        ;
        return _this.indexOffsetBy({}, i, distance);
    };
    /*Swift.(file).AnyRandomAccessCollection.formIndex(_:AnyRandomAccessCollection<Element>.Index,offsetBy:Int)*/
    /*Swift.(file).AnyRandomAccessCollection.formIndex(_:AnyRandomAccessCollection<Element>.Index,offsetBy:Int)*/
    AnyRandomAccessCollection.prototype.formIndexOffsetBy = function ($info, i$inout, n) {
        throw 'unsupported method Swift.(file).AnyRandomAccessCollection.formIndex(_:AnyRandomAccessCollection<Element>.Index,offsetBy:Int) in ' + this.constructor.name;
    };
    /*Swift.(file).AnyRandomAccessCollection.formIndex(_:AnyRandomAccessCollection<Element>.Index,offsetBy:Int,limitedBy:AnyRandomAccessCollection<Element>.Index)*/
    /*Swift.(file).AnyRandomAccessCollection.formIndex(_:AnyRandomAccessCollection<Element>.Index,offsetBy:Int,limitedBy:AnyRandomAccessCollection<Element>.Index)*/
    AnyRandomAccessCollection.prototype.formIndexOffsetByLimitedBy = function ($info, i$inout, n, limit) {
        throw 'unsupported method Swift.(file).AnyRandomAccessCollection.formIndex(_:AnyRandomAccessCollection<Element>.Index,offsetBy:Int,limitedBy:AnyRandomAccessCollection<Element>.Index) in ' + this.constructor.name;
    };
    /*Swift.(file).AnyRandomAccessCollection.distance(from:AnyRandomAccessCollection<Element>.Index,to:AnyRandomAccessCollection<Element>.Index)*/
    /*Swift.(file).RandomAccessCollection.distance(from:Self.Index,to:Self.Index)*/
    /*Swift.(file).BidirectionalCollection.distance(from:Self.Index,to:Self.Index)*/
    /*Swift.(file).Collection.distance(from:Self.Index,to:Self.Index)*/
    AnyRandomAccessCollection.prototype.distanceFromTo = function ($info, start, end) {
        var _this = this;
        return _this._distanceFromTo({}, start, end);
    };
    /*Swift.(file).AnyRandomAccessCollection.count*/
    AnyRandomAccessCollection.prototype.count$get = function () {
        var _this = this;
        return _this.distanceFromTo({}, _this.startIndex, _this.endIndex);
    };
    Object.defineProperty(AnyRandomAccessCollection.prototype, "count", {
        get: function () { return this.count$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).AnyRandomAccessCollection.index(before:AnyRandomAccessCollection<Element>.Index)*/
    /*Swift.(file).RandomAccessCollection.index(before:Self.Index)*/
    /*Swift.(file).BidirectionalCollection.index(before:Self.Index)*/
    AnyRandomAccessCollection.prototype.indexBefore = function ($info, i) {
        throw 'unsupported method Swift.(file).AnyRandomAccessCollection.index(before:AnyRandomAccessCollection<Element>.Index) in ' + this.constructor.name;
    };
    /*Swift.(file).AnyRandomAccessCollection.formIndex(before:AnyRandomAccessCollection<Element>.Index)*/
    /*Swift.(file).RandomAccessCollection.formIndex(before:Self.Index)*/
    /*Swift.(file).BidirectionalCollection.formIndex(before:Self.Index)*/
    AnyRandomAccessCollection.prototype.formIndexBefore = function ($info, i$inout) {
        var _this = this;
        var i = i$inout.get();
        var $result = (function () {
            i = _this.indexBefore({}, i);
        })();
        i$inout.set(i);
        return $result;
    };
    AnyRandomAccessCollection.prototype.init$vars = function () {
    };
    AnyRandomAccessCollection.$struct = true;
    AnyRandomAccessCollection.$infoAddress = '';
    AnyRandomAccessCollection.initAnyCollection$failable = true;
    AnyRandomAccessCollection.initAnyBidirectionalCollection$failable = true;
    return AnyRandomAccessCollection;
}());
if (typeof RandomAccessCollection$implementation != 'undefined')
    _mixin(AnyRandomAccessCollection, RandomAccessCollection$implementation, false);
if (typeof _AnyCollectionProtocol$implementation != 'undefined')
    _mixin(AnyRandomAccessCollection, _AnyCollectionProtocol$implementation, false);
var _ArrayBufferProtocol$implementation = /** @class */ (function () {
    function _ArrayBufferProtocol$implementation() {
    }
    /*Swift.(file)._ArrayBufferProtocol.subscriptBaseAddress*/
    _ArrayBufferProtocol$implementation.prototype.subscriptBaseAddress$get = function () {
        var _this = this;
        return _this.firstElementAddress;
    };
    Object.defineProperty(_ArrayBufferProtocol$implementation.prototype, "subscriptBaseAddress", {
        get: function () { return this.subscriptBaseAddress$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file)._ArrayBufferProtocol.init(copying:Self)*/
    /*Swift.(file)._ArrayBufferProtocol.init(copying:Self)*/
    _ArrayBufferProtocol$implementation.prototype.initCopying = function ($info, buffer) {
        throw 'unsupported method Swift.(file)._ArrayBufferProtocol.init(copying:Self) in ' + this.constructor.name;
    };
    /*Swift.(file)._ArrayBufferProtocol.replaceSubrange(_:Range<Int>,with:Int,elementsOf:C)*/
    /*Swift.(file)._ArrayBufferProtocol.replaceSubrange(_:Range<Int>,with:Int,elementsOf:C)*/
    _ArrayBufferProtocol$implementation.prototype.replaceSubrangeWithElementsOf = function ($info, subrange, newCount, newValues) {
        var _this = this;
        var oldCount = _this.count;
        var eraseCount = subrange.count;
        var growth = Int.infix_45({}, newCount, eraseCount);
        _this.count = Int.infix_43({}, oldCount, growth);
        var _elements = _cloneStruct(_this.subscriptBaseAddress);
        var oldTailIndex = subrange.upperBound;
        var oldTailStart = _cloneStruct(UnsafeMutablePointer.infix_43({}, _elements, oldTailIndex));
        var newTailIndex = Int.infix_43({}, oldTailIndex, growth);
        var newTailStart = _cloneStruct(UnsafeMutablePointer.infix_43({}, oldTailStart, growth));
        var tailCount = Int.infix_45({}, oldCount, subrange.upperBound);
        if ((Int.infix_62({}, growth, 0))) {
            newTailStart.moveInitializeFromCount({}, oldTailStart, tailCount);
            var i_2 = newValues.startIndex;
            {
                var $j$generator_1 = _cloneStruct(subrange.makeIterator({}));
                while (true) {
                    var $ifLet0, j_1;
                    if (!((($ifLet0 = $j$generator_1.next({ $setThis: function ($val) { return $j$generator_1 = $val; } })) || true) && $ifLet0 != null && ((j_1 = $ifLet0) || true)))
                        break;
                    _elements.subscript$set({ $setThis: function ($val) { return _elements = _cloneStruct($val); } }, newValues.subscript$get({}, i_2), j_1);
                    newValues.formIndexAfter({}, { get: function () { return i_2; }, set: function ($val) { return i_2 = $val; } });
                }
            }
            ;
            {
                var $j$generator_2 = _cloneStruct(Int.infix_46_46_60({}, oldTailIndex, newTailIndex).makeIterator({}));
                while (true) {
                    var $ifLet2, j_3;
                    if (!((($ifLet2 = $j$generator_2.next({ $setThis: function ($val) { return $j$generator_2 = $val; } })) || true) && $ifLet2 != null && ((j_3 = $ifLet2) || true)))
                        break;
                    UnsafeMutablePointer.infix_43({}, _elements, j_3).initializeTo({}, newValues.subscript$get({}, i_2));
                    newValues.formIndexAfter({}, { get: function () { return i_2; }, set: function ($val) { return i_2 = $val; } });
                }
            }
            ;
        }
        else {
            var i_3 = subrange.lowerBound;
            var j_2 = newValues.startIndex;
            {
                var $generator_5 = _cloneStruct(Int.infix_46_46_60({}, 0, newCount).makeIterator({}));
                while (true) {
                    var $ifLet4;
                    if (!((($ifLet4 = $generator_5.next({ $setThis: function ($val) { return $generator_5 = $val; } })) || true) && $ifLet4 != null))
                        break;
                    _elements.subscript$set({ $setThis: function ($val) { return _elements = _cloneStruct($val); } }, newValues.subscript$get({}, j_2), i_3);
                    Int.infix_43_61({}, { get: function () { return i_3; }, set: function ($val) { return i_3 = $val; } }, 1);
                    newValues.formIndexAfter({}, { get: function () { return j_2; }, set: function ($val) { return j_2 = $val; } });
                }
            }
            ;
            if ((Int.infix_61_61({}, growth, 0))) {
                return;
            }
            ;
            var shrinkage = Int.prefix_45({}, growth);
            if ((Int.infix_62({}, tailCount, shrinkage))) {
                newTailStart.moveAssignFromCount({}, oldTailStart, shrinkage);
                oldTailStart.moveInitializeFromCount({}, UnsafeMutablePointer.infix_43({}, oldTailStart, shrinkage), Int.infix_45({}, tailCount, shrinkage));
            }
            else {
                newTailStart.moveAssignFromCount({}, oldTailStart, tailCount);
                UnsafeMutablePointer.infix_43({}, newTailStart, tailCount).deinitializeCount({}, Int.infix_45({}, shrinkage, tailCount));
            }
            ;
        }
    };
    return _ArrayBufferProtocol$implementation;
}());
if (typeof MutableCollection$implementation != 'undefined')
    _mixin(_ArrayBufferProtocol$implementation, MutableCollection$implementation, false);
if (typeof RandomAccessCollection$implementation != 'undefined')
    _mixin(_ArrayBufferProtocol$implementation, RandomAccessCollection$implementation, false);
var MIO_Mixin_Array = /** @class */ (function () {
    function MIO_Mixin_Array() {
    }
    /*Swift.(file).Array.init(_buffer:Array<Element>._Buffer)*/
    /*Swift.(file).Array.init(_buffer:Array<Element>._Buffer)*/
    MIO_Mixin_Array.prototype.init_bufferArray_Buffer = function ($info, _buffer) {
        throw 'unsupported method Swift.(file).Array.init(_buffer:Array<Element>._Buffer) in ' + this.constructor.name;
    };
    /*Swift.(file).Array.capacity*/
    MIO_Mixin_Array.prototype.capacity$get = function () {
        var _this = this;
        return _this._getCapacity({});
    };
    Object.defineProperty(MIO_Mixin_Array.prototype, "capacity", {
        get: function () { return this.capacity$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).Array.startIndex*/
    MIO_Mixin_Array.prototype.startIndex$get = function () {
        var _this = this;
        return 0;
    };
    Object.defineProperty(MIO_Mixin_Array.prototype, "startIndex", {
        get: function () { return this.startIndex$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).Array.endIndex*/
    MIO_Mixin_Array.prototype.endIndex$get = function () {
        var _this = this;
        return _this.count;
    };
    Object.defineProperty(MIO_Mixin_Array.prototype, "endIndex", {
        get: function () {
            return this.endIndex$get();
        },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).Array.index(after:Int)*/
    /*Swift.(file).RandomAccessCollection.index(after:Self.Index)*/
    /*Swift.(file).BidirectionalCollection.index(after:Self.Index)*/
    /*Swift.(file).Collection.index(after:Self.Index)*/
    MIO_Mixin_Array.prototype.indexAfter = function ($info, i) {
        var _this = this;
        return Int.infix_43({}, i, 1);
    };
    /*Swift.(file).Array.formIndex(after:Int)*/
    /*Swift.(file).RandomAccessCollection.formIndex(after:Self.Index)*/
    /*Swift.(file).BidirectionalCollection.formIndex(after:Self.Index)*/
    /*Swift.(file).Collection.formIndex(after:Self.Index)*/
    MIO_Mixin_Array.prototype.formIndexAfter = function ($info, i$inout) {
        var _this = this;
        var i = i$inout.get();
        var $result = (function () {
            Int.infix_43_61({}, { get: function () { return i; }, set: function ($val) { return i = $val; } }, 1);
        })();
        i$inout.set(i);
        return $result;
    };
    /*Swift.(file).Array.index(before:Int)*/
    /*Swift.(file).RandomAccessCollection.index(before:Self.Index)*/
    /*Swift.(file).BidirectionalCollection.index(before:Self.Index)*/
    MIO_Mixin_Array.prototype.indexBefore = function ($info, i) {
        var _this = this;
        return Int.infix_45({}, i, 1);
    };
    /*Swift.(file).Array.formIndex(before:Int)*/
    /*Swift.(file).RandomAccessCollection.formIndex(before:Self.Index)*/
    /*Swift.(file).BidirectionalCollection.formIndex(before:Self.Index)*/
    MIO_Mixin_Array.prototype.formIndexBefore = function ($info, i$inout) {
        var _this = this;
        var i = i$inout.get();
        var $result = (function () {
            Int.infix_45_61({}, { get: function () { return i; }, set: function ($val) { return i = $val; } }, 1);
        })();
        i$inout.set(i);
        return $result;
    };
    /*Swift.(file).Array.index(_:Int,offsetBy:Int)*/
    /*Swift.(file).RandomAccessCollection.index(_:Self.Index,offsetBy:Int)*/
    /*Swift.(file).BidirectionalCollection.index(_:Self.Index,offsetBy:Int)*/
    /*Swift.(file).Collection.index(_:Self.Index,offsetBy:Int)*/
    MIO_Mixin_Array.prototype.indexOffsetBy = function ($info, i, distance) {
        var _this = this;
        return Int.infix_43({}, i, distance);
    };
    /*Swift.(file).Array.index(_:Int,offsetBy:Int,limitedBy:Int)*/
    /*Swift.(file).RandomAccessCollection.index(_:Self.Index,offsetBy:Int,limitedBy:Self.Index)*/
    /*Swift.(file).BidirectionalCollection.index(_:Self.Index,offsetBy:Int,limitedBy:Self.Index)*/
    /*Swift.(file).Collection.index(_:Self.Index,offsetBy:Int,limitedBy:Self.Index)*/
    MIO_Mixin_Array.prototype.indexOffsetByLimitedBy = function ($info, i, distance, limit) {
        var _this = this;
        var l = Int.infix_45({}, limit, i);
        if (((Int.infix_62({}, distance, 0) ? Bool.infix_38_38({}, Int.infix_62_61({}, l, 0), function () { return Int.infix_60({}, l, distance); }) : Bool.infix_38_38({}, Int.infix_60_61({}, l, 0), function () { return Int.infix_60({}, distance, l); })))) {
            return null;
        }
        ;
        return Int.infix_43({}, i, distance);
    };
    /*Swift.(file).Array.distance(from:Int,to:Int)*/
    /*Swift.(file).RandomAccessCollection.distance(from:Self.Index,to:Self.Index)*/
    /*Swift.(file).BidirectionalCollection.distance(from:Self.Index,to:Self.Index)*/
    /*Swift.(file).Collection.distance(from:Self.Index,to:Self.Index)*/
    MIO_Mixin_Array.prototype.distanceFromTo = function ($info, start, end) {
        var _this = this;
        return Int.infix_45({}, end, start);
    };
    /*Swift.(file).Array.subscript(_:Int)*/
    /*Swift.(file).RandomAccessCollection.subscript(_:Self.Index)*/
    /*Swift.(file).MutableCollection.subscript(_:Self.Index)*/
    /*Swift.(file).BidirectionalCollection.subscript(_:Self.Index)*/
    /*Swift.(file).Collection.subscript(_:Self.Index)*/
    /*Swift.(file).RangeReplaceableCollection.subscript(_:Self.Index)*/
    MIO_Mixin_Array.prototype.subscript$get = function ($info, index) {
        return this[index];
    }; /*Swift.(file).Array.subscript(_:Int)*/
    /*Swift.(file).RandomAccessCollection.subscript(_:Self.Index)*/
    /*Swift.(file).MutableCollection.subscript(_:Self.Index)*/
    /*Swift.(file).BidirectionalCollection.subscript(_:Self.Index)*/
    /*Swift.(file).Collection.subscript(_:Self.Index)*/
    /*Swift.(file).RangeReplaceableCollection.subscript(_:Self.Index)*/
    MIO_Mixin_Array.prototype.subscript$_modify = function ($info, index) {
        return this[index];
    };
    /*Swift.(file).Array.subscript(_:Range<Int>)*/
    /*Swift.(file).RandomAccessCollection.subscript(_:Range<Self.Index>)*/
    /*Swift.(file).MutableCollection.subscript(_:Range<Self.Index>)*/
    /*Swift.(file).BidirectionalCollection.subscript(_:Range<Self.Index>)*/
    /*Swift.(file).Collection.subscript(_:Range<Self.Index>)*/
    /*Swift.(file).RangeReplaceableCollection.subscript(_:Range<Self.Index>)*/
    MIO_Mixin_Array.prototype.subscriptRange$get = function ($info, bounds) {
        var _this = this;
        var result = _create(Array, 'init', {});
        {
            var $index$generator_1 = _cloneStruct(bounds.makeIterator({}));
            while (true) {
                var $ifLet0, index_1;
                if (!((($ifLet0 = $index$generator_1.next({ $setThis: function ($val) { return $index$generator_1 = $val; } })) || true) && $ifLet0 != null && ((index_1 = $ifLet0) || true)))
                    break;
                result.append({ $setThis: function ($val) { return result = $val; } }, _this.subscript$get({}, index_1));
            }
        }
        ;
        return result;
    }; /*Swift.(file).Array.subscript(_:Range<Int>)*/
    /*Swift.(file).RandomAccessCollection.subscript(_:Range<Self.Index>)*/
    /*Swift.(file).MutableCollection.subscript(_:Range<Self.Index>)*/
    /*Swift.(file).BidirectionalCollection.subscript(_:Range<Self.Index>)*/
    /*Swift.(file).Collection.subscript(_:Range<Self.Index>)*/
    /*Swift.(file).RangeReplaceableCollection.subscript(_:Range<Self.Index>)*/
    MIO_Mixin_Array.prototype.subscriptRange$set = function ($info, rhs, bounds) {
        var _this = this;
        _this.replaceSubrangeWith({ $setThis: function ($val) { return $info.$setThis(_this = _cloneStruct($val)); } }, bounds, rhs);
    };
    /*Swift.(file).Array.count*/
    MIO_Mixin_Array.prototype.count$get = function () {
        return this.length;
    };
    Object.defineProperty(MIO_Mixin_Array.prototype, "count", {
        get: function () { return this.count$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).Array.init(arrayLiteral:[Element])*/
    /*Swift.(file).ExpressibleByArrayLiteral.init(arrayLiteral:[Self.ArrayLiteralElement])*/
    MIO_Mixin_Array.prototype.initArrayLiteralArray = function ($info, _elements) {
        var _this = this;
        return _cloneStruct(_cloneStruct(_elements));
        return;
    };
    /*Swift.(file).Array.init()*/
    /*Swift.(file).RangeReplaceableCollection.init()*/
    MIO_Mixin_Array.prototype.init = function ($info) {
        return [];
    };
    /*Swift.(file).Array.init(_:S)*/
    /*Swift.(file)._ArrayProtocol.init(_:Self._Buffer)*/
    /*Swift.(file).RangeReplaceableCollection.init(_:S)*/
    MIO_Mixin_Array.prototype.initBuffer = function ($info, s) {
        var _this = this;
        var result = _create(Array, 'init', {});
        var iterator = s.makeIterator({});
        while (true) {
            var $ifLet0, _element_1;
            if (!((($ifLet0 = iterator.next({ $setThis: function ($val) { return iterator = $val; } })) || true) && $ifLet0 != null && ((_element_1 = $ifLet0) || true)))
                break;
            result.append({ $setThis: function ($val) { return result = $val; } }, _element_1);
        }
        ;
        return result;
    };
    /*Swift.(file).Array.init(repeating:Element,count:Int)*/
    /*Swift.(file).RangeReplaceableCollection.init(repeating:Self.Element,count:Int)*/
    MIO_Mixin_Array.prototype.initRepeatingCountInt = function ($info, repeatedValue, count) {
        var _this = this;
        var result = _create(Array, 'init', {});
        {
            var $generator_6 = _cloneStruct(Int.infix_46_46_60({}, 0, count).makeIterator({}));
            while (true) {
                var $ifLet0;
                if (!((($ifLet0 = $generator_6.next({ $setThis: function ($val) { return $generator_6 = $val; } })) || true) && $ifLet0 != null))
                    break;
                result.append({ $setThis: function ($val) { return result = $val; } }, repeatedValue);
            }
        }
        ;
        return result;
    };
    /*Swift.(file).Array.init(_uninitializedCount:Int)*/
    /*Swift.(file).Array.init(_uninitializedCount:Int)*/
    MIO_Mixin_Array.prototype.init_uninitializedCountInt = function ($info, count) {
        throw 'unsupported method Swift.(file).Array.init(_uninitializedCount:Int) in ' + this.constructor.name;
    };
    /*Swift.(file).Array.reserveCapacity(_:Int)*/
    /*Swift.(file)._ArrayProtocol.reserveCapacity(_:Int)*/
    /*Swift.(file).RangeReplaceableCollection.reserveCapacity(_:Int)*/
    MIO_Mixin_Array.prototype.reserveCapacity = function ($info, minimumCapacity) {
    };
    /*Swift.(file).Array.append(_:Element)*/
    /*Swift.(file).RangeReplaceableCollection.append(_:Self.Element)*/
    MIO_Mixin_Array.prototype.append = function ($info, newElement) {
        var _this = this;
        _this.replaceSubrangeWith({ $setThis: function ($val) { return $info.$setThis(_this = _cloneStruct($val)); } }, Int.infix_46_46_60({}, _this.count, _this.count), _create(CollectionOfOne, 'init', {}, newElement));
    };
    /*Swift.(file).Array.append(contentsOf:S)*/
    /*Swift.(file).RangeReplaceableCollection.append(contentsOf:S)*/
    MIO_Mixin_Array.prototype.appendContentsOf = function ($info, newElements) {
        var _this = this;
        {
            var $el$generator_1 = newElements.makeIterator({});
            while (true) {
                var $ifLet0, el_1;
                if (!((($ifLet0 = $el$generator_1.next({ $setThis: function ($val) { return $el$generator_1 = $val; } })) || true) && $ifLet0 != null && ((el_1 = $ifLet0) || true)))
                    break;
                _this.append({ $setThis: function ($val) { return $info.$setThis(_this = _cloneStruct($val)); } }, el_1);
            }
        }
    };
    /*Swift.(file).Array.reserveCapacityForAppend(newElementsCount:Int)*/
    /*Swift.(file).Array.reserveCapacityForAppend(newElementsCount:Int)*/
    MIO_Mixin_Array.prototype.reserveCapacityForAppendNewElementsCount = function ($info, newElementsCount) {
        throw 'unsupported method Swift.(file).Array.reserveCapacityForAppend(newElementsCount:Int) in ' + this.constructor.name;
    };
    /*Swift.(file).Array.remove(at:Int)*/
    /*Swift.(file)._ArrayProtocol.remove(at:Int)*/
    /*Swift.(file).RangeReplaceableCollection.remove(at:Self.Index)*/
    MIO_Mixin_Array.prototype.removeAt = function ($info, index) {
        return this.splice(index, 1)[0];
    };
    /*Swift.(file).Array.insert(_:Element,at:Int)*/
    /*Swift.(file)._ArrayProtocol.insert(_:Self.Element,at:Int)*/
    /*Swift.(file).RangeReplaceableCollection.insert(_:Self.Element,at:Self.Index)*/
    MIO_Mixin_Array.prototype.insertAt = function ($info, newElement, i) {
        this.splice(i, 0, _cloneStruct(newElement));
    };
    /*Swift.(file).Array.removeAll(keepingCapacity:Bool)*/
    /*Swift.(file).RangeReplaceableCollection.removeAll(keepingCapacity:Bool)*/
    MIO_Mixin_Array.prototype.removeAllKeepingCapacity = function ($info, keepCapacity) {
        var _this = this;
        _this.replaceSubrangeWith({ $setThis: function ($val) { return $info.$setThis(_this = _cloneStruct($val)); } }, _this.indices, _create(EmptyCollection, 'init', {}));
    };
    /*Swift.(file).Array.withContiguousMutableStorageIfAvailable(_:(inout UnsafeMutableBufferPointer<Element>) throws -> R)*/
    /*Swift.(file).MutableCollection.withContiguousMutableStorageIfAvailable(_:(inout UnsafeMutableBufferPointer<Self.Element>) throws -> R)*/
    MIO_Mixin_Array.prototype.withContiguousMutableStorageIfAvailable = function ($info, body) {
        var _this = this;
        return _this.withUnsafeMutableBufferPointer({ $setThis: function ($val) { return $info.$setThis(_this = _cloneStruct($val)); } }, (function ($info, bufferPointer$inout) { return body({}, { get: function () { return bufferPointer; }, set: function ($val) { return bufferPointer = $val; } }); }));
    };
    /*Swift.(file).Array.withContiguousStorageIfAvailable(_:(UnsafeBufferPointer<Element>) throws -> R)*/
    /*Swift.(file).Sequence.withContiguousStorageIfAvailable(_:(UnsafeBufferPointer<Self.Element>) throws -> R)*/
    MIO_Mixin_Array.prototype.withContiguousStorageIfAvailable = function ($info, body) {
        var _this = this;
        return _this.withUnsafeBufferPointer({}, (function ($info, bufferPointer) { return body({}, bufferPointer); }));
    };
    /*Swift.(file).Array.+infix(_:Array<Element>,_:Array<Element>)*/
    /*Swift.(file).Array.+infix(_:Array<Element>,_:Array<Element>)*/
    MIO_Mixin_Array.infix_43 = function ($info, lhs, rhs) {
        var _this = this;
        var lhs_dupl = _cloneStruct(lhs);
        lhs_dupl.appendContentsOf({ $setThis: function ($val) { return lhs_dupl = $val; } }, rhs);
        return lhs_dupl;
    };
    /*Swift.(file).Array.+=infix(_:Array<Element>,_:Array<Element>)*/
    /*Swift.(file).Array.+=infix(_:Array<Element>,_:Array<Element>)*/
    MIO_Mixin_Array.infix_43_61 = function ($info, lhs$inout, rhs) {
        var _this = this;
        var lhs = lhs$inout.get();
        var $result = (function () {
            lhs.appendContentsOf({ $setThis: function ($val) { return lhs = $val; } }, rhs);
        })();
        lhs$inout.set(lhs);
        return $result;
    };
    /*Swift.(file).Array.customMirror*/
    MIO_Mixin_Array.prototype.customMirror$get = function () {
        var _this = this;
        return _create(Mirror, 'initUnlabeledChildrenDisplayStyleOptionalAncestorRepresentationMirrorAncestorRepresentation', {}, _this, _this, Mirror.DisplayStyle.collection, generated /*!default_value*/);
    };
    Object.defineProperty(MIO_Mixin_Array.prototype, "customMirror", {
        get: function () { return this.customMirror$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).Array.description*/
    MIO_Mixin_Array.prototype.description$get = function () {
        var _this = this;
        var result = "";
        String.infix_43_61({}, { get: function () { return result; }, set: function ($val) { return result = $val; } }, "[");
        var first = true;
        {
            var $item$generator_1 = _cloneStruct(_this.makeIterator({}));
            while (true) {
                var $ifLet0, item_1;
                if (!((($ifLet0 = $item$generator_1.next({ $setThis: function ($val) { return $item$generator_1 = $val; } })) || true) && $ifLet0 != null && ((item_1 = $ifLet0) || true)))
                    break;
                if ((first)) {
                    first = false;
                }
                else {
                    String.infix_43_61({}, { get: function () { return result; }, set: function ($val) { return result = $val; } }, ", ");
                }
                ;
                String.infix_43_61({}, { get: function () { return result; }, set: function ($val) { return result = $val; } }, (("") + (item_1) + ("")));
            }
        }
        ;
        String.infix_43_61({}, { get: function () { return result; }, set: function ($val) { return result = $val; } }, "]");
        return result;
    };
    Object.defineProperty(MIO_Mixin_Array.prototype, "description", {
        get: function () {
            return this.description$get();
        },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).Array.debugDescription*/
    MIO_Mixin_Array.prototype.debugDescription$get = function () {
        var _this = this;
        return _this._makeCollectionDescriptionWithTypeName({}, nil /*!default_value*/);
    };
    Object.defineProperty(MIO_Mixin_Array.prototype, "debugDescription", {
        get: function () { return this.debugDescription$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).Array.init(_unsafeUninitializedCapacity:Int,initializingWith:(inout UnsafeMutableBufferPointer<Element>, inout Int) throws -> Void)*/
    /*Swift.(file).Array.init(_unsafeUninitializedCapacity:Int,initializingWith:(inout UnsafeMutableBufferPointer<Element>, inout Int) throws -> Void)*/
    MIO_Mixin_Array.prototype.init_unsafeUninitializedCapacityIntInitializingWithfunction_type = function ($info, _unsafeUninitializedCapacity, initializer) {
        throw 'unsupported method Swift.(file).Array.init(_unsafeUninitializedCapacity:Int,initializingWith:(inout UnsafeMutableBufferPointer<Element>, inout Int) throws -> Void) in ' + this.constructor.name;
    };
    /*Swift.(file).Array.withUnsafeBufferPointer(_:(UnsafeBufferPointer<Element>) throws -> R)*/
    /*Swift.(file).Array.withUnsafeBufferPointer(_:(UnsafeBufferPointer<Element>) throws -> R)*/
    MIO_Mixin_Array.prototype.withUnsafeBufferPointer = function ($info, body) {
        throw 'unsupported method Swift.(file).Array.withUnsafeBufferPointer(_:(UnsafeBufferPointer<Element>) throws -> R) in ' + this.constructor.name;
    };
    /*Swift.(file).Array.withUnsafeMutableBufferPointer(_:(inout UnsafeMutableBufferPointer<Element>) throws -> R)*/
    /*Swift.(file).Array.withUnsafeMutableBufferPointer(_:(inout UnsafeMutableBufferPointer<Element>) throws -> R)*/
    MIO_Mixin_Array.prototype.withUnsafeMutableBufferPointer = function ($info, body) {
        throw 'unsupported method Swift.(file).Array.withUnsafeMutableBufferPointer(_:(inout UnsafeMutableBufferPointer<Element>) throws -> R) in ' + this.constructor.name;
    };
    /*Swift.(file).Array.replaceSubrange(_:Range<Int>,with:C)*/
    /*Swift.(file).RangeReplaceableCollection.replaceSubrange(_:Range<Self.Index>,with:C)*/
    MIO_Mixin_Array.prototype.replaceSubrangeWith = function ($info, subrange, newElements) {
        var _this = this;
        {
            var $generator_7 = _cloneStruct(subrange.makeIterator({}));
            while (true) {
                var $ifLet0;
                if (!((($ifLet0 = $generator_7.next({ $setThis: function ($val) { return $generator_7 = $val; } })) || true) && $ifLet0 != null))
                    break;
                _this.removeAt({ $setThis: function ($val) { return $info.$setThis(_this = _cloneStruct($val)); } }, subrange.startIndex);
            }
        }
        ;
        var i = subrange.startIndex;
        {
            var $el$generator_2 = newElements.makeIterator({});
            while (true) {
                var $ifLet1, el_2;
                if (!((($ifLet1 = $el$generator_2.next({ $setThis: function ($val) { return $el$generator_2 = $val; } })) || true) && $ifLet1 != null && ((el_2 = $ifLet1) || true)))
                    break;
                _this.insertAt({ $setThis: function ($val) { return $info.$setThis(_this = _cloneStruct($val)); } }, el_2, i);
                Int.infix_43_61({}, { get: function () { return i; }, set: function ($val) { return i = $val; } }, 1);
            }
        }
    };
    /*Swift.(file).Array.==infix(_:Array<Element>,_:Array<Element>)*/
    /*Swift.(file).Equatable.==infix(_:Self,_:Self)*/
    MIO_Mixin_Array.infix_61_61 = function ($info, lhs, rhs) {
        var _this = this;
        var lhsCount = lhs.count;
        if ((Int.infix_33_61({}, lhsCount, rhs.count))) {
            return false;
        }
        ;
        if ((Int.infix_61_61({}, lhsCount, 0))) {
            return true;
        }
        ;
        {
            var $idx$generator_1 = _cloneStruct(Int.infix_46_46_60({}, 0, lhsCount).makeIterator({}));
            while (true) {
                var $ifLet0, idx_1;
                if (!((($ifLet0 = $idx$generator_1.next({ $setThis: function ($val) { return $idx$generator_1 = $val; } })) || true) && $ifLet0 != null && ((idx_1 = $ifLet0) || true)))
                    break;
                if (((_.arg0 = lhs.subscript$get({}, idx_1)).constructor.infix_33_61({}, _.arg0, rhs.subscript$get({}, idx_1)))) {
                    return false;
                }
                ;
            }
        }
        ;
        return true;
    };
    /*Swift.(file).Array.hash(into:Hasher)*/
    /*Swift.(file).Hashable.hash(into:Hasher)*/
    MIO_Mixin_Array.prototype.hashInto = function ($info, hasher$inout) {
        var _this = this;
        var hasher = hasher$inout.get();
        var $result = (function () {
            hasher.combine({ $setThis: function ($val) { return hasher = $val; } }, _this.count);
            {
                var $element$generator_12 = _cloneStruct(_this.makeIterator({}));
                while (true) {
                    var $ifLet0, _element_1;
                    if (!((($ifLet0 = $element$generator_12.next({ $setThis: function ($val) { return $element$generator_12 = $val; } })) || true) && $ifLet0 != null && ((_element_1 = $ifLet0) || true)))
                        break;
                    hasher.combine({ $setThis: function ($val) { return hasher = $val; } }, _element_1);
                }
            }
            ;
        })();
        hasher$inout.set(hasher);
        return $result;
    };
    /*Swift.(file).Array.hashValue*/
    MIO_Mixin_Array.prototype.hashValue$get = function () {
        throw 'unsupported variable Swift.(file).Array.hashValue in ' + this.constructor.name;
    };
    Object.defineProperty(MIO_Mixin_Array.prototype, "hashValue", {
        get: function () { return this.hashValue$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).Array.withUnsafeMutableBytes(_:(UnsafeMutableRawBufferPointer) throws -> R)*/
    /*Swift.(file).Array.withUnsafeMutableBytes(_:(UnsafeMutableRawBufferPointer) throws -> R)*/
    MIO_Mixin_Array.prototype.withUnsafeMutableBytes = function ($info, body) {
        var _this = this;
        return _this.withUnsafeMutableBufferPointer({ $setThis: function ($val) { return $info.$setThis(_this = _cloneStruct($val)); } }, (function ($info, $0$inout) { return body({}, _create(UnsafeMutableRawBufferPointer, 'initUnsafeMutableBufferPointer', {}, $0)); }));
    };
    /*Swift.(file).Array.withUnsafeBytes(_:(UnsafeRawBufferPointer) throws -> R)*/
    /*Swift.(file)._HasContiguousBytes.withUnsafeBytes(_:(UnsafeRawBufferPointer) throws -> R)*/
    MIO_Mixin_Array.prototype.withUnsafeBytes = function ($info, body) {
        var _this = this;
        return _this.withUnsafeBufferPointer({}, (function ($info, $0) { return body({}, _create(UnsafeRawBufferPointer, 'initUnsafeBufferPointer', {}, $0)); }));
    };
    /*Swift.(file).Array.init(_immutableCocoaArray:AnyObject)*/
    /*Swift.(file).Array.init(_immutableCocoaArray:AnyObject)*/
    MIO_Mixin_Array.prototype.init_immutableCocoaArrayAnyObject = function ($info, _immutableCocoaArray) {
        var _this = this;
        return _cloneStruct(_cloneStruct(_bridgeCocoaArray({}, _immutableCocoaArray)));
        return;
    };
    /*Swift.(file).Array.encode(to:Encoder)*/
    /*Swift.(file).Encodable.encode(to:Encoder)*/
    MIO_Mixin_Array.prototype.encodeTo = function ($info, encoder) {
        throw 'unsupported method Swift.(file).Array.encode(to:Encoder) in ' + this.constructor.name;
    };
    /*Swift.(file).Array.init(from:Decoder)*/
    /*Swift.(file).Decodable.init(from:Decoder)*/
    MIO_Mixin_Array.prototype.initFromDecoder = function ($info, decoder) {
        throw 'unsupported method Swift.(file).Array.init(from:Decoder) in ' + this.constructor.name;
    };
    MIO_Mixin_Array.prototype.init$vars = function () {
    };
    MIO_Mixin_Array.prototype.subscript$set = function ($info, el, index) {
        this[index] = _cloneStruct(el);
    };
    MIO_Mixin_Array.$struct = true;
    MIO_Mixin_Array.$mixin = true;
    MIO_Mixin_Array.$infoAddress = '';
    return MIO_Mixin_Array;
}());
if (typeof _DestructorSafeContainer$implementation != 'undefined')
    _mixin(MIO_Mixin_Array, _DestructorSafeContainer$implementation, false);
if (typeof _ArrayProtocol$implementation != 'undefined')
    _mixin(MIO_Mixin_Array, _ArrayProtocol$implementation, false);
if (typeof RandomAccessCollection$implementation != 'undefined')
    _mixin(MIO_Mixin_Array, RandomAccessCollection$implementation, false);
if (typeof MutableCollection$implementation != 'undefined')
    _mixin(MIO_Mixin_Array, MutableCollection$implementation, false);
if (typeof ExpressibleByArrayLiteral$implementation != 'undefined')
    _mixin(MIO_Mixin_Array, ExpressibleByArrayLiteral$implementation, false);
if (typeof RangeReplaceableCollection$implementation != 'undefined')
    _mixin(MIO_Mixin_Array, RangeReplaceableCollection$implementation, false);
if (typeof CustomReflectable$implementation != 'undefined')
    _mixin(MIO_Mixin_Array, CustomReflectable$implementation, false);
if (typeof CustomStringConvertible$implementation != 'undefined')
    _mixin(MIO_Mixin_Array, CustomStringConvertible$implementation, false);
if (typeof CustomDebugStringConvertible$implementation != 'undefined')
    _mixin(MIO_Mixin_Array, CustomDebugStringConvertible$implementation, false);
if (typeof Equatable$implementation != 'undefined')
    _mixin(MIO_Mixin_Array, Equatable$implementation, false);
if (typeof Hashable$implementation != 'undefined')
    _mixin(MIO_Mixin_Array, Hashable$implementation, false);
if (typeof _HasCustomAnyHashableRepresentation$implementation != 'undefined')
    _mixin(MIO_Mixin_Array, _HasCustomAnyHashableRepresentation$implementation, false);
if (typeof Encodable$implementation != 'undefined')
    _mixin(MIO_Mixin_Array, Encodable$implementation, false);
if (typeof Decodable$implementation != 'undefined')
    _mixin(MIO_Mixin_Array, Decodable$implementation, false);
if (typeof _HasContiguousBytes$implementation != 'undefined')
    _mixin(MIO_Mixin_Array, _HasContiguousBytes$implementation, false);
_mixin(Array, MIO_Mixin_Array, true);
var ArraySlice = /** @class */ (function () {
    function ArraySlice() {
    }
    /*Swift.(file).ArraySlice.init(_buffer:ArraySlice<Element>._Buffer)*/
    /*Swift.(file).ArraySlice.init(_buffer:ArraySlice<Element>._Buffer)*/
    ArraySlice.prototype.init_bufferArraySlice_Buffer = function ($info, _buffer) {
        throw 'unsupported method Swift.(file).ArraySlice.init(_buffer:ArraySlice<Element>._Buffer) in ' + this.constructor.name;
    };
    /*Swift.(file).ArraySlice.init(_buffer:_ContiguousArrayBuffer<Element>)*/
    /*Swift.(file).ArraySlice.init(_buffer:_ContiguousArrayBuffer<Element>)*/
    ArraySlice.prototype.init_buffer_ContiguousArrayBuffer = function ($info, buffer) {
        throw 'unsupported method Swift.(file).ArraySlice.init(_buffer:_ContiguousArrayBuffer<Element>) in ' + this.constructor.name;
    };
    /*Swift.(file).ArraySlice.capacity*/
    ArraySlice.prototype.capacity$get = function () {
        var _this = this;
        return _this._getCapacity({});
    };
    Object.defineProperty(ArraySlice.prototype, "capacity", {
        get: function () { return this.capacity$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).ArraySlice.startIndex*/
    ArraySlice.prototype.startIndex$get = function () {
        throw 'unsupported variable Swift.(file).ArraySlice.startIndex in ' + this.constructor.name;
    };
    Object.defineProperty(ArraySlice.prototype, "startIndex", {
        get: function () { return this.startIndex$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).ArraySlice.endIndex*/
    ArraySlice.prototype.endIndex$get = function () {
        throw 'unsupported variable Swift.(file).ArraySlice.endIndex in ' + this.constructor.name;
    };
    Object.defineProperty(ArraySlice.prototype, "endIndex", {
        get: function () { return this.endIndex$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).ArraySlice.index(after:Int)*/
    /*Swift.(file).RandomAccessCollection.index(after:Self.Index)*/
    /*Swift.(file).BidirectionalCollection.index(after:Self.Index)*/
    /*Swift.(file).Collection.index(after:Self.Index)*/
    ArraySlice.prototype.indexAfter = function ($info, i) {
        var _this = this;
        return Int.infix_43({}, i, 1);
    };
    /*Swift.(file).ArraySlice.formIndex(after:Int)*/
    /*Swift.(file).RandomAccessCollection.formIndex(after:Self.Index)*/
    /*Swift.(file).BidirectionalCollection.formIndex(after:Self.Index)*/
    /*Swift.(file).Collection.formIndex(after:Self.Index)*/
    ArraySlice.prototype.formIndexAfter = function ($info, i$inout) {
        var _this = this;
        var i = i$inout.get();
        var $result = (function () {
            Int.infix_43_61({}, { get: function () { return i; }, set: function ($val) { return i = $val; } }, 1);
        })();
        i$inout.set(i);
        return $result;
    };
    /*Swift.(file).ArraySlice.index(before:Int)*/
    /*Swift.(file).RandomAccessCollection.index(before:Self.Index)*/
    /*Swift.(file).BidirectionalCollection.index(before:Self.Index)*/
    ArraySlice.prototype.indexBefore = function ($info, i) {
        var _this = this;
        return Int.infix_45({}, i, 1);
    };
    /*Swift.(file).ArraySlice.formIndex(before:Int)*/
    /*Swift.(file).RandomAccessCollection.formIndex(before:Self.Index)*/
    /*Swift.(file).BidirectionalCollection.formIndex(before:Self.Index)*/
    ArraySlice.prototype.formIndexBefore = function ($info, i$inout) {
        var _this = this;
        var i = i$inout.get();
        var $result = (function () {
            Int.infix_45_61({}, { get: function () { return i; }, set: function ($val) { return i = $val; } }, 1);
        })();
        i$inout.set(i);
        return $result;
    };
    /*Swift.(file).ArraySlice.index(_:Int,offsetBy:Int)*/
    /*Swift.(file).RandomAccessCollection.index(_:Self.Index,offsetBy:Int)*/
    /*Swift.(file).BidirectionalCollection.index(_:Self.Index,offsetBy:Int)*/
    /*Swift.(file).Collection.index(_:Self.Index,offsetBy:Int)*/
    ArraySlice.prototype.indexOffsetBy = function ($info, i, distance) {
        var _this = this;
        return Int.infix_43({}, i, distance);
    };
    /*Swift.(file).ArraySlice.index(_:Int,offsetBy:Int,limitedBy:Int)*/
    /*Swift.(file).RandomAccessCollection.index(_:Self.Index,offsetBy:Int,limitedBy:Self.Index)*/
    /*Swift.(file).BidirectionalCollection.index(_:Self.Index,offsetBy:Int,limitedBy:Self.Index)*/
    /*Swift.(file).Collection.index(_:Self.Index,offsetBy:Int,limitedBy:Self.Index)*/
    ArraySlice.prototype.indexOffsetByLimitedBy = function ($info, i, distance, limit) {
        var _this = this;
        var l = Int.infix_45({}, limit, i);
        if (((Int.infix_62({}, distance, 0) ? Bool.infix_38_38({}, Int.infix_62_61({}, l, 0), function () { return Int.infix_60({}, l, distance); }) : Bool.infix_38_38({}, Int.infix_60_61({}, l, 0), function () { return Int.infix_60({}, distance, l); })))) {
            return null;
        }
        ;
        return Int.infix_43({}, i, distance);
    };
    /*Swift.(file).ArraySlice.distance(from:Int,to:Int)*/
    /*Swift.(file).RandomAccessCollection.distance(from:Self.Index,to:Self.Index)*/
    /*Swift.(file).BidirectionalCollection.distance(from:Self.Index,to:Self.Index)*/
    /*Swift.(file).Collection.distance(from:Self.Index,to:Self.Index)*/
    ArraySlice.prototype.distanceFromTo = function ($info, start, end) {
        var _this = this;
        return Int.infix_45({}, end, start);
    };
    /*Swift.(file).ArraySlice.subscript(_:Int)*/
    /*Swift.(file).RandomAccessCollection.subscript(_:Self.Index)*/
    /*Swift.(file).MutableCollection.subscript(_:Self.Index)*/
    /*Swift.(file).BidirectionalCollection.subscript(_:Self.Index)*/
    /*Swift.(file).Collection.subscript(_:Self.Index)*/
    /*Swift.(file).RangeReplaceableCollection.subscript(_:Self.Index)*/
    ArraySlice.prototype.subscript$get = function ($info, index) {
        throw 'unsupported method Swift.(file).ArraySlice.subscript(_:Int) in ' + this.constructor.name;
    }; /*Swift.(file).ArraySlice.subscript(_:Int)*/
    /*Swift.(file).RandomAccessCollection.subscript(_:Self.Index)*/
    /*Swift.(file).MutableCollection.subscript(_:Self.Index)*/
    /*Swift.(file).BidirectionalCollection.subscript(_:Self.Index)*/
    /*Swift.(file).Collection.subscript(_:Self.Index)*/
    /*Swift.(file).RangeReplaceableCollection.subscript(_:Self.Index)*/
    ArraySlice.prototype.subscript$_modify = function ($info, index) {
        throw 'unsupported method Swift.(file).ArraySlice.subscript(_:Int) in ' + this.constructor.name;
    };
    /*Swift.(file).ArraySlice.subscript(_:Range<Int>)*/
    /*Swift.(file).RandomAccessCollection.subscript(_:Range<Self.Index>)*/
    /*Swift.(file).MutableCollection.subscript(_:Range<Self.Index>)*/
    /*Swift.(file).BidirectionalCollection.subscript(_:Range<Self.Index>)*/
    /*Swift.(file).Collection.subscript(_:Range<Self.Index>)*/
    /*Swift.(file).RangeReplaceableCollection.subscript(_:Range<Self.Index>)*/
    ArraySlice.prototype.subscriptRange$get = function ($info, bounds) {
        var _this = this;
        return _create(Slice, 'initBaseBoundsRange', {}, _this, bounds);
    }; /*Swift.(file).ArraySlice.subscript(_:Range<Int>)*/
    /*Swift.(file).RandomAccessCollection.subscript(_:Range<Self.Index>)*/
    /*Swift.(file).MutableCollection.subscript(_:Range<Self.Index>)*/
    /*Swift.(file).BidirectionalCollection.subscript(_:Range<Self.Index>)*/
    /*Swift.(file).Collection.subscript(_:Range<Self.Index>)*/
    /*Swift.(file).RangeReplaceableCollection.subscript(_:Range<Self.Index>)*/
    ArraySlice.prototype.subscriptRange$set = function ($info, rhs, bounds) {
        var _this = this;
        _writeBackMutableSliceBoundsSlice({}, { get: function () { return _this; }, set: function ($val) { return $info.$setThis(_this = _cloneStruct($val)); } }, bounds, newValue);
    };
    /*Swift.(file).ArraySlice.count*/
    ArraySlice.prototype.count$get = function () {
        var _this = this;
        return _this._getCount({});
    };
    Object.defineProperty(ArraySlice.prototype, "count", {
        get: function () { return this.count$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).ArraySlice.init(arrayLiteral:[Element])*/
    /*Swift.(file).ExpressibleByArrayLiteral.init(arrayLiteral:[Self.ArrayLiteralElement])*/
    ArraySlice.prototype.initArrayLiteralArray = function ($info, _elements) {
        throw 'unsupported method Swift.(file).ArraySlice.init(arrayLiteral:[Element]) in ' + this.constructor.name;
    };
    /*Swift.(file).ArraySlice.init()*/
    /*Swift.(file).RangeReplaceableCollection.init()*/
    ArraySlice.prototype.init = function ($info) {
        throw 'unsupported method Swift.(file).ArraySlice.init() in ' + this.constructor.name;
    };
    /*Swift.(file).ArraySlice.init(_:S)*/
    /*Swift.(file).RangeReplaceableCollection.init(_:S)*/
    /*Swift.(file)._ArrayProtocol.init(_:Self._Buffer)*/
    ArraySlice.prototype.initBuffer = function ($info, s) {
        var _this = this;
        _this.init({});
        _this.appendContentsOf({ $setThis: function ($val) { return $info.$setThis(_this = _cloneStruct($val)); } }, _elements);
        return;
    };
    /*Swift.(file).ArraySlice.init(repeating:Element,count:Int)*/
    /*Swift.(file).RangeReplaceableCollection.init(repeating:Self.Element,count:Int)*/
    ArraySlice.prototype.initRepeatingCountInt = function ($info, repeatedValue, count) {
        var _this = this;
        var p;
        var $tuple = ArraySlice._allocateUninitialized({}, count);
        $info.$setThis(_this = _cloneStruct($tuple[0]));
        p = $tuple[1];
        {
            var $generator_8 = _cloneStruct(Int.infix_46_46_60({}, 0, count).makeIterator({}));
            while (true) {
                var $ifLet0;
                if (!((($ifLet0 = $generator_8.next({ $setThis: function ($val) { return $generator_8 = $val; } })) || true) && $ifLet0 != null))
                    break;
                p.initializeTo({}, repeatedValue);
                UnsafeMutablePointer.infix_43_61({}, { get: function () { return p; }, set: function ($val) { return p = $val; } }, 1);
            }
        }
        ;
        return;
    };
    /*Swift.(file).ArraySlice.init(_uninitializedCount:Int)*/
    /*Swift.(file).ArraySlice.init(_uninitializedCount:Int)*/
    ArraySlice.prototype.init_uninitializedCountInt = function ($info, count) {
        throw 'unsupported method Swift.(file).ArraySlice.init(_uninitializedCount:Int) in ' + this.constructor.name;
    };
    /*Swift.(file).ArraySlice.reserveCapacity(_:Int)*/
    /*Swift.(file).RangeReplaceableCollection.reserveCapacity(_:Int)*/
    /*Swift.(file)._ArrayProtocol.reserveCapacity(_:Int)*/
    ArraySlice.prototype.reserveCapacity = function ($info, minimumCapacity) {
    };
    /*Swift.(file).ArraySlice.append(_:Element)*/
    /*Swift.(file).RangeReplaceableCollection.append(_:Self.Element)*/
    ArraySlice.prototype.append = function ($info, newElement) {
        var _this = this;
        _this._makeUniqueAndReserveCapacityIfNotUnique({ $setThis: function ($val) { return $info.$setThis(_this = _cloneStruct($val)); } });
        var oldCount = _this._getCount({});
        _this._appendElementAssumeUniqueAndCapacityNewElement({ $setThis: function ($val) { return $info.$setThis(_this = _cloneStruct($val)); } }, oldCount, newElement);
    };
    /*Swift.(file).ArraySlice.append(contentsOf:S)*/
    /*Swift.(file).RangeReplaceableCollection.append(contentsOf:S)*/
    ArraySlice.prototype.appendContentsOf = function ($info, newElements) {
        var _this = this;
        var approximateCapacity = Int.infix_43({}, _this.count, numericCast({ T: Int, U: Int }, newElements.underestimatedCount));
        {
            var $element$generator_13 = newElements.makeIterator({});
            while (true) {
                var $ifLet0, _element_1;
                if (!((($ifLet0 = $element$generator_13.next({ $setThis: function ($val) { return $element$generator_13 = $val; } })) || true) && $ifLet0 != null && ((_element_1 = $ifLet0) || true)))
                    break;
                _this.append({ $setThis: function ($val) { return $info.$setThis(_this = _cloneStruct($val)); } }, _element_1);
            }
        }
    };
    /*Swift.(file).ArraySlice.reserveCapacityForAppend(newElementsCount:Int)*/
    /*Swift.(file).ArraySlice.reserveCapacityForAppend(newElementsCount:Int)*/
    ArraySlice.prototype.reserveCapacityForAppendNewElementsCount = function ($info, newElementsCount) {
        throw 'unsupported method Swift.(file).ArraySlice.reserveCapacityForAppend(newElementsCount:Int) in ' + this.constructor.name;
    };
    /*Swift.(file).ArraySlice.remove(at:Int)*/
    /*Swift.(file).RangeReplaceableCollection.remove(at:Self.Index)*/
    /*Swift.(file)._ArrayProtocol.remove(at:Int)*/
    ArraySlice.prototype.removeAt = function ($info, index) {
        var _this = this;
        var result = _this.subscript$get({}, index);
        _this.replaceSubrangeWith({ $setThis: function ($val) { return $info.$setThis(_this = _cloneStruct($val)); } }, Int.infix_46_46_60({}, index, Int.infix_43({}, index, 1)), _create(EmptyCollection, 'init', {}));
        return result;
    };
    /*Swift.(file).ArraySlice.insert(_:Element,at:Int)*/
    /*Swift.(file).RangeReplaceableCollection.insert(_:Self.Element,at:Self.Index)*/
    /*Swift.(file)._ArrayProtocol.insert(_:Self.Element,at:Int)*/
    ArraySlice.prototype.insertAt = function ($info, newElement, i) {
        var _this = this;
        _this.replaceSubrangeWith({ $setThis: function ($val) { return $info.$setThis(_this = _cloneStruct($val)); } }, Int.infix_46_46_60({}, i, i), _create(CollectionOfOne, 'init', {}, newElement));
    };
    /*Swift.(file).ArraySlice.removeAll(keepingCapacity:Bool)*/
    /*Swift.(file).RangeReplaceableCollection.removeAll(keepingCapacity:Bool)*/
    ArraySlice.prototype.removeAllKeepingCapacity = function ($info, keepCapacity) {
        var _this = this;
        if ((Bool.prefix_33({}, keepCapacity))) {
            $info.$setThis(_this = _cloneStruct(_create(_this.constructor, 'init', {})));
        }
        else {
            _this.replaceSubrangeWith({ $setThis: function ($val) { return $info.$setThis(_this = _cloneStruct($val)); } }, (_.arg0 = _this.startIndex).constructor.infix_46_46_60({}, _.arg0, _this.endIndex), _create(EmptyCollection, 'init', {}));
        }
    };
    /*Swift.(file).ArraySlice.withContiguousMutableStorageIfAvailable(_:(inout UnsafeMutableBufferPointer<Element>) throws -> R)*/
    /*Swift.(file).MutableCollection.withContiguousMutableStorageIfAvailable(_:(inout UnsafeMutableBufferPointer<Self.Element>) throws -> R)*/
    ArraySlice.prototype.withContiguousMutableStorageIfAvailable = function ($info, body) {
        var _this = this;
        return _this.withUnsafeMutableBufferPointer({ $setThis: function ($val) { return $info.$setThis(_this = _cloneStruct($val)); } }, (function ($info, bufferPointer$inout) { return body({}, { get: function () { return bufferPointer; }, set: function ($val) { return bufferPointer = $val; } }); }));
    };
    /*Swift.(file).ArraySlice.withContiguousStorageIfAvailable(_:(UnsafeBufferPointer<Element>) throws -> R)*/
    /*Swift.(file).Sequence.withContiguousStorageIfAvailable(_:(UnsafeBufferPointer<Self.Element>) throws -> R)*/
    ArraySlice.prototype.withContiguousStorageIfAvailable = function ($info, body) {
        var _this = this;
        return _this.withUnsafeBufferPointer({}, (function ($info, bufferPointer) { return body({}, bufferPointer); }));
    };
    /*Swift.(file).ArraySlice.customMirror*/
    ArraySlice.prototype.customMirror$get = function () {
        var _this = this;
        return _create(Mirror, 'initUnlabeledChildrenDisplayStyleOptionalAncestorRepresentationMirrorAncestorRepresentation', {}, _this, _this, Mirror.DisplayStyle.collection, generated /*!default_value*/);
    };
    Object.defineProperty(ArraySlice.prototype, "customMirror", {
        get: function () { return this.customMirror$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).ArraySlice.description*/
    ArraySlice.prototype.description$get = function () {
        var _this = this;
        return _this._makeCollectionDescriptionWithTypeName({}, nil /*!default_value*/);
    };
    Object.defineProperty(ArraySlice.prototype, "description", {
        get: function () { return this.description$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).ArraySlice.debugDescription*/
    ArraySlice.prototype.debugDescription$get = function () {
        var _this = this;
        return _this._makeCollectionDescriptionWithTypeName({}, "ArraySlice");
    };
    Object.defineProperty(ArraySlice.prototype, "debugDescription", {
        get: function () { return this.debugDescription$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).ArraySlice.withUnsafeBufferPointer(_:(UnsafeBufferPointer<Element>) throws -> R)*/
    /*Swift.(file).ArraySlice.withUnsafeBufferPointer(_:(UnsafeBufferPointer<Element>) throws -> R)*/
    ArraySlice.prototype.withUnsafeBufferPointer = function ($info, body) {
        throw 'unsupported method Swift.(file).ArraySlice.withUnsafeBufferPointer(_:(UnsafeBufferPointer<Element>) throws -> R) in ' + this.constructor.name;
    };
    /*Swift.(file).ArraySlice.withUnsafeMutableBufferPointer(_:(inout UnsafeMutableBufferPointer<Element>) throws -> R)*/
    /*Swift.(file).ArraySlice.withUnsafeMutableBufferPointer(_:(inout UnsafeMutableBufferPointer<Element>) throws -> R)*/
    ArraySlice.prototype.withUnsafeMutableBufferPointer = function ($info, body) {
        throw 'unsupported method Swift.(file).ArraySlice.withUnsafeMutableBufferPointer(_:(inout UnsafeMutableBufferPointer<Element>) throws -> R) in ' + this.constructor.name;
    };
    /*Swift.(file).ArraySlice.replaceSubrange(_:Range<Int>,with:C)*/
    /*Swift.(file).RangeReplaceableCollection.replaceSubrange(_:Range<Self.Index>,with:C)*/
    ArraySlice.prototype.replaceSubrangeWith = function ($info, subrange, newElements) {
        throw 'unsupported method Swift.(file).ArraySlice.replaceSubrange(_:Range<Int>,with:C) in ' + this.constructor.name;
    };
    /*Swift.(file).ArraySlice.==infix(_:ArraySlice<Element>,_:ArraySlice<Element>)*/
    /*Swift.(file).Equatable.==infix(_:Self,_:Self)*/
    ArraySlice.infix_61_61 = function ($info, lhs, rhs) {
        return lhs == rhs;
    };
    /*Swift.(file).ArraySlice.hash(into:Hasher)*/
    /*Swift.(file).Hashable.hash(into:Hasher)*/
    ArraySlice.prototype.hashInto = function ($info, hasher$inout) {
        var _this = this;
        var hasher = hasher$inout.get();
        var $result = (function () {
            hasher.combine({ $setThis: function ($val) { return hasher = $val; } }, _this.count);
            {
                var $element$generator_14 = _cloneStruct(_this.makeIterator({}));
                while (true) {
                    var $ifLet0, _element_1;
                    if (!((($ifLet0 = $element$generator_14.next({ $setThis: function ($val) { return $element$generator_14 = $val; } })) || true) && $ifLet0 != null && ((_element_1 = $ifLet0) || true)))
                        break;
                    hasher.combine({ $setThis: function ($val) { return hasher = $val; } }, _element_1);
                }
            }
            ;
        })();
        hasher$inout.set(hasher);
        return $result;
    };
    /*Swift.(file).ArraySlice.hashValue*/
    ArraySlice.prototype.hashValue$get = function () {
        throw 'unsupported variable Swift.(file).ArraySlice.hashValue in ' + this.constructor.name;
    };
    Object.defineProperty(ArraySlice.prototype, "hashValue", {
        get: function () { return this.hashValue$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).ArraySlice.withUnsafeMutableBytes(_:(UnsafeMutableRawBufferPointer) throws -> R)*/
    /*Swift.(file).ArraySlice.withUnsafeMutableBytes(_:(UnsafeMutableRawBufferPointer) throws -> R)*/
    ArraySlice.prototype.withUnsafeMutableBytes = function ($info, body) {
        var _this = this;
        return _this.withUnsafeMutableBufferPointer({ $setThis: function ($val) { return $info.$setThis(_this = _cloneStruct($val)); } }, (function ($info, $0$inout) { return body({}, _create(UnsafeMutableRawBufferPointer, 'initUnsafeMutableBufferPointer', {}, $0)); }));
    };
    /*Swift.(file).ArraySlice.withUnsafeBytes(_:(UnsafeRawBufferPointer) throws -> R)*/
    /*Swift.(file).ArraySlice.withUnsafeBytes(_:(UnsafeRawBufferPointer) throws -> R)*/
    ArraySlice.prototype.withUnsafeBytes = function ($info, body) {
        var _this = this;
        return _this.withUnsafeBufferPointer({}, (function ($info, $0) { return body({}, _create(UnsafeRawBufferPointer, 'initUnsafeBufferPointer', {}, $0)); }));
    };
    /*Swift.(file).ArraySlice.init(_startIndex:Int)*/
    /*Swift.(file).ArraySlice.init(_startIndex:Int)*/
    ArraySlice.prototype.init_startIndexInt = function ($info, _startIndex) {
        throw 'unsupported method Swift.(file).ArraySlice.init(_startIndex:Int) in ' + this.constructor.name;
    };
    ArraySlice.prototype.init$vars = function () {
    };
    ArraySlice.$struct = true;
    ArraySlice.$infoAddress = '';
    return ArraySlice;
}());
if (typeof _DestructorSafeContainer$implementation != 'undefined')
    _mixin(ArraySlice, _DestructorSafeContainer$implementation, false);
if (typeof _ArrayProtocol$implementation != 'undefined')
    _mixin(ArraySlice, _ArrayProtocol$implementation, false);
if (typeof RandomAccessCollection$implementation != 'undefined')
    _mixin(ArraySlice, RandomAccessCollection$implementation, false);
if (typeof MutableCollection$implementation != 'undefined')
    _mixin(ArraySlice, MutableCollection$implementation, false);
if (typeof ExpressibleByArrayLiteral$implementation != 'undefined')
    _mixin(ArraySlice, ExpressibleByArrayLiteral$implementation, false);
if (typeof RangeReplaceableCollection$implementation != 'undefined')
    _mixin(ArraySlice, RangeReplaceableCollection$implementation, false);
if (typeof CustomReflectable$implementation != 'undefined')
    _mixin(ArraySlice, CustomReflectable$implementation, false);
if (typeof CustomStringConvertible$implementation != 'undefined')
    _mixin(ArraySlice, CustomStringConvertible$implementation, false);
if (typeof CustomDebugStringConvertible$implementation != 'undefined')
    _mixin(ArraySlice, CustomDebugStringConvertible$implementation, false);
if (typeof Equatable$implementation != 'undefined')
    _mixin(ArraySlice, Equatable$implementation, false);
if (typeof Hashable$implementation != 'undefined')
    _mixin(ArraySlice, Hashable$implementation, false);
var AutoreleasingUnsafeMutablePointer = /** @class */ (function () {
    function AutoreleasingUnsafeMutablePointer() {
    }
    /*Swift.(file).AutoreleasingUnsafeMutablePointer.init(_:RawPointer)*/
    /*Swift.(file)._Pointer.init(_:RawPointer)*/
    AutoreleasingUnsafeMutablePointer.prototype.initRawPointer = function ($info, _rawValue) {
        throw 'unsupported method Swift.(file).AutoreleasingUnsafeMutablePointer.init(_:RawPointer) in ' + this.constructor.name;
    };
    /*Swift.(file).AutoreleasingUnsafeMutablePointer.pointee*/
    AutoreleasingUnsafeMutablePointer.prototype.pointee$get = function () {
        throw 'unsupported variable Swift.(file).AutoreleasingUnsafeMutablePointer.pointee in ' + this.constructor.name;
    };
    Object.defineProperty(AutoreleasingUnsafeMutablePointer.prototype, "pointee", {
        get: function () { return this.pointee$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).AutoreleasingUnsafeMutablePointer.subscript(_:Int)*/
    /*Swift.(file).AutoreleasingUnsafeMutablePointer.subscript(_:Int)*/
    AutoreleasingUnsafeMutablePointer.prototype.subscript$_read = function ($info, i) {
        var _this = this;
        /*yield*/
    };
    /*Swift.(file).AutoreleasingUnsafeMutablePointer.init(_:UnsafePointer<U>)*/
    /*Swift.(file).AutoreleasingUnsafeMutablePointer.init(_:UnsafePointer<U>)*/
    AutoreleasingUnsafeMutablePointer.prototype.initUnsafePointer = function ($info, from) {
        throw 'unsupported method Swift.(file).AutoreleasingUnsafeMutablePointer.init(_:UnsafePointer<U>) in ' + this.constructor.name;
    };
    /*Swift.(file).AutoreleasingUnsafeMutablePointer.init(_:UnsafePointer<U>?)*/
    /*Swift.(file).AutoreleasingUnsafeMutablePointer.init(_:UnsafePointer<U>?)*/
    AutoreleasingUnsafeMutablePointer.prototype.initOptional = function ($info, from) {
        var _this = this;
        var $ifLet0, unwrapped_1;
        if (!((($ifLet0 = from) || true) && $ifLet0 != null && ((unwrapped_1 = $ifLet0) || true))) {
            return (this.$failed = true);
        }
        ;
        _this.initUnsafePointer({}, unwrapped_1);
        return;
    };
    /*Swift.(file).AutoreleasingUnsafeMutablePointer.hashValue*/
    AutoreleasingUnsafeMutablePointer.prototype.hashValue$get = function () {
        throw 'unsupported variable Swift.(file).AutoreleasingUnsafeMutablePointer.hashValue in ' + this.constructor.name;
    };
    Object.defineProperty(AutoreleasingUnsafeMutablePointer.prototype, "hashValue", {
        get: function () { return this.hashValue$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    AutoreleasingUnsafeMutablePointer.prototype.init$vars = function () {
    };
    AutoreleasingUnsafeMutablePointer.$struct = true;
    AutoreleasingUnsafeMutablePointer.$infoAddress = '';
    AutoreleasingUnsafeMutablePointer.initOptional$failable = true;
    return AutoreleasingUnsafeMutablePointer;
}());
if (typeof _Pointer$implementation != 'undefined')
    _mixin(AutoreleasingUnsafeMutablePointer, _Pointer$implementation, false);
if (typeof CVarArg$implementation != 'undefined')
    _mixin(AutoreleasingUnsafeMutablePointer, CVarArg$implementation, false);
var _CocoaArrayWrapper = /** @class */ (function () {
    function _CocoaArrayWrapper() {
    }
    /*Swift.(file)._CocoaArrayWrapper.buffer*/
    _CocoaArrayWrapper.prototype.buffer$get = function () {
        throw 'unsupported variable Swift.(file)._CocoaArrayWrapper.buffer in ' + this.constructor.name;
    };
    Object.defineProperty(_CocoaArrayWrapper.prototype, "buffer", {
        get: function () { return this.buffer$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file)._CocoaArrayWrapper.init(_:AnyObject)*/
    /*Swift.(file)._CocoaArrayWrapper.init(_:AnyObject)*/
    _CocoaArrayWrapper.prototype.initAnyObject = function ($info, buffer) {
        throw 'unsupported method Swift.(file)._CocoaArrayWrapper.init(_:AnyObject) in ' + this.constructor.name;
    };
    /*Swift.(file)._CocoaArrayWrapper.core*/
    _CocoaArrayWrapper.prototype.core$get = function () {
        throw 'unsupported variable Swift.(file)._CocoaArrayWrapper.core in ' + this.constructor.name;
    };
    Object.defineProperty(_CocoaArrayWrapper.prototype, "core", {
        get: function () { return this.core$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file)._CocoaArrayWrapper.startIndex*/
    _CocoaArrayWrapper.prototype.startIndex$get = function () {
        throw 'unsupported variable Swift.(file)._CocoaArrayWrapper.startIndex in ' + this.constructor.name;
    };
    Object.defineProperty(_CocoaArrayWrapper.prototype, "startIndex", {
        get: function () { return this.startIndex$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file)._CocoaArrayWrapper.endIndex*/
    _CocoaArrayWrapper.prototype.endIndex$get = function () {
        throw 'unsupported variable Swift.(file)._CocoaArrayWrapper.endIndex in ' + this.constructor.name;
    };
    Object.defineProperty(_CocoaArrayWrapper.prototype, "endIndex", {
        get: function () { return this.endIndex$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file)._CocoaArrayWrapper.subscript(_:Int)*/
    /*Swift.(file).RandomAccessCollection.subscript(_:Self.Index)*/
    /*Swift.(file).BidirectionalCollection.subscript(_:Self.Index)*/
    /*Swift.(file).Collection.subscript(_:Self.Index)*/
    _CocoaArrayWrapper.prototype.subscript$get = function ($info, i) {
        throw 'unsupported method Swift.(file)._CocoaArrayWrapper.subscript(_:Int) in ' + this.constructor.name;
    };
    /*Swift.(file)._CocoaArrayWrapper.subscript(_:Range<Int>)*/
    /*Swift.(file).RandomAccessCollection.subscript(_:Range<Self.Index>)*/
    /*Swift.(file).BidirectionalCollection.subscript(_:Range<Self.Index>)*/
    /*Swift.(file).Collection.subscript(_:Range<Self.Index>)*/
    _CocoaArrayWrapper.prototype.subscriptRange$get = function ($info, bounds) {
        var _this = this;
        return _create(Slice, 'initBaseBoundsRange', {}, _this, bounds);
    };
    /*Swift.(file)._CocoaArrayWrapper.contiguousStorage(_:Range<Int>)*/
    /*Swift.(file)._CocoaArrayWrapper.contiguousStorage(_:Range<Int>)*/
    _CocoaArrayWrapper.prototype.contiguousStorage = function ($info, subRange) {
        throw 'unsupported method Swift.(file)._CocoaArrayWrapper.contiguousStorage(_:Range<Int>) in ' + this.constructor.name;
    };
    _CocoaArrayWrapper.prototype.init$vars = function () {
    };
    _CocoaArrayWrapper.$struct = true;
    _CocoaArrayWrapper.$infoAddress = '';
    return _CocoaArrayWrapper;
}());
if (typeof RandomAccessCollection$implementation != 'undefined')
    _mixin(_CocoaArrayWrapper, RandomAccessCollection$implementation, false);
var ContiguousArray = /** @class */ (function () {
    function ContiguousArray() {
    }
    /*Swift.(file).ContiguousArray.init(_buffer:ContiguousArray<Element>._Buffer)*/
    /*Swift.(file).ContiguousArray.init(_buffer:ContiguousArray<Element>._Buffer)*/
    ContiguousArray.prototype.init_bufferContiguousArray_Buffer = function ($info, _buffer) {
        throw 'unsupported method Swift.(file).ContiguousArray.init(_buffer:ContiguousArray<Element>._Buffer) in ' + this.constructor.name;
    };
    /*Swift.(file).ContiguousArray.capacity*/
    ContiguousArray.prototype.capacity$get = function () {
        var _this = this;
        return _this._getCapacity({});
    };
    Object.defineProperty(ContiguousArray.prototype, "capacity", {
        get: function () { return this.capacity$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).ContiguousArray.startIndex*/
    ContiguousArray.prototype.startIndex$get = function () {
        var _this = this;
        return 0;
    };
    Object.defineProperty(ContiguousArray.prototype, "startIndex", {
        get: function () { return this.startIndex$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).ContiguousArray.endIndex*/
    ContiguousArray.prototype.endIndex$get = function () {
        var _this = this;
        return _this._getCount({});
    };
    Object.defineProperty(ContiguousArray.prototype, "endIndex", {
        get: function () { return this.endIndex$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).ContiguousArray.index(after:Int)*/
    /*Swift.(file).RandomAccessCollection.index(after:Self.Index)*/
    /*Swift.(file).BidirectionalCollection.index(after:Self.Index)*/
    /*Swift.(file).Collection.index(after:Self.Index)*/
    ContiguousArray.prototype.indexAfter = function ($info, i) {
        var _this = this;
        return Int.infix_43({}, i, 1);
    };
    /*Swift.(file).ContiguousArray.formIndex(after:Int)*/
    /*Swift.(file).RandomAccessCollection.formIndex(after:Self.Index)*/
    /*Swift.(file).BidirectionalCollection.formIndex(after:Self.Index)*/
    /*Swift.(file).Collection.formIndex(after:Self.Index)*/
    ContiguousArray.prototype.formIndexAfter = function ($info, i$inout) {
        var _this = this;
        var i = i$inout.get();
        var $result = (function () {
            Int.infix_43_61({}, { get: function () { return i; }, set: function ($val) { return i = $val; } }, 1);
        })();
        i$inout.set(i);
        return $result;
    };
    /*Swift.(file).ContiguousArray.index(before:Int)*/
    /*Swift.(file).RandomAccessCollection.index(before:Self.Index)*/
    /*Swift.(file).BidirectionalCollection.index(before:Self.Index)*/
    ContiguousArray.prototype.indexBefore = function ($info, i) {
        var _this = this;
        return Int.infix_45({}, i, 1);
    };
    /*Swift.(file).ContiguousArray.formIndex(before:Int)*/
    /*Swift.(file).RandomAccessCollection.formIndex(before:Self.Index)*/
    /*Swift.(file).BidirectionalCollection.formIndex(before:Self.Index)*/
    ContiguousArray.prototype.formIndexBefore = function ($info, i$inout) {
        var _this = this;
        var i = i$inout.get();
        var $result = (function () {
            Int.infix_45_61({}, { get: function () { return i; }, set: function ($val) { return i = $val; } }, 1);
        })();
        i$inout.set(i);
        return $result;
    };
    /*Swift.(file).ContiguousArray.index(_:Int,offsetBy:Int)*/
    /*Swift.(file).RandomAccessCollection.index(_:Self.Index,offsetBy:Int)*/
    /*Swift.(file).BidirectionalCollection.index(_:Self.Index,offsetBy:Int)*/
    /*Swift.(file).Collection.index(_:Self.Index,offsetBy:Int)*/
    ContiguousArray.prototype.indexOffsetBy = function ($info, i, distance) {
        var _this = this;
        return Int.infix_43({}, i, distance);
    };
    /*Swift.(file).ContiguousArray.index(_:Int,offsetBy:Int,limitedBy:Int)*/
    /*Swift.(file).RandomAccessCollection.index(_:Self.Index,offsetBy:Int,limitedBy:Self.Index)*/
    /*Swift.(file).BidirectionalCollection.index(_:Self.Index,offsetBy:Int,limitedBy:Self.Index)*/
    /*Swift.(file).Collection.index(_:Self.Index,offsetBy:Int,limitedBy:Self.Index)*/
    ContiguousArray.prototype.indexOffsetByLimitedBy = function ($info, i, distance, limit) {
        var _this = this;
        var l = Int.infix_45({}, limit, i);
        if (((Int.infix_62({}, distance, 0) ? Bool.infix_38_38({}, Int.infix_62_61({}, l, 0), function () { return Int.infix_60({}, l, distance); }) : Bool.infix_38_38({}, Int.infix_60_61({}, l, 0), function () { return Int.infix_60({}, distance, l); })))) {
            return null;
        }
        ;
        return Int.infix_43({}, i, distance);
    };
    /*Swift.(file).ContiguousArray.distance(from:Int,to:Int)*/
    /*Swift.(file).RandomAccessCollection.distance(from:Self.Index,to:Self.Index)*/
    /*Swift.(file).BidirectionalCollection.distance(from:Self.Index,to:Self.Index)*/
    /*Swift.(file).Collection.distance(from:Self.Index,to:Self.Index)*/
    ContiguousArray.prototype.distanceFromTo = function ($info, start, end) {
        var _this = this;
        return Int.infix_45({}, end, start);
    };
    /*Swift.(file).ContiguousArray.subscript(_:Int)*/
    /*Swift.(file).RandomAccessCollection.subscript(_:Self.Index)*/
    /*Swift.(file).MutableCollection.subscript(_:Self.Index)*/
    /*Swift.(file).BidirectionalCollection.subscript(_:Self.Index)*/
    /*Swift.(file).Collection.subscript(_:Self.Index)*/
    /*Swift.(file).RangeReplaceableCollection.subscript(_:Self.Index)*/
    ContiguousArray.prototype.subscript$get = function ($info, index) {
        throw 'unsupported method Swift.(file).ContiguousArray.subscript(_:Int) in ' + this.constructor.name;
    }; /*Swift.(file).ContiguousArray.subscript(_:Int)*/
    /*Swift.(file).RandomAccessCollection.subscript(_:Self.Index)*/
    /*Swift.(file).MutableCollection.subscript(_:Self.Index)*/
    /*Swift.(file).BidirectionalCollection.subscript(_:Self.Index)*/
    /*Swift.(file).Collection.subscript(_:Self.Index)*/
    /*Swift.(file).RangeReplaceableCollection.subscript(_:Self.Index)*/
    ContiguousArray.prototype.subscript$_modify = function ($info, index) {
        throw 'unsupported method Swift.(file).ContiguousArray.subscript(_:Int) in ' + this.constructor.name;
    };
    /*Swift.(file).ContiguousArray.subscript(_:Range<Int>)*/
    /*Swift.(file).RandomAccessCollection.subscript(_:Range<Self.Index>)*/
    /*Swift.(file).MutableCollection.subscript(_:Range<Self.Index>)*/
    /*Swift.(file).BidirectionalCollection.subscript(_:Range<Self.Index>)*/
    /*Swift.(file).Collection.subscript(_:Range<Self.Index>)*/
    /*Swift.(file).RangeReplaceableCollection.subscript(_:Range<Self.Index>)*/
    ContiguousArray.prototype.subscriptRange$get = function ($info, bounds) {
        var _this = this;
        return _create(Slice, 'initBaseBoundsRange', {}, _this, bounds);
    }; /*Swift.(file).ContiguousArray.subscript(_:Range<Int>)*/
    /*Swift.(file).RandomAccessCollection.subscript(_:Range<Self.Index>)*/
    /*Swift.(file).MutableCollection.subscript(_:Range<Self.Index>)*/
    /*Swift.(file).BidirectionalCollection.subscript(_:Range<Self.Index>)*/
    /*Swift.(file).Collection.subscript(_:Range<Self.Index>)*/
    /*Swift.(file).RangeReplaceableCollection.subscript(_:Range<Self.Index>)*/
    ContiguousArray.prototype.subscriptRange$set = function ($info, rhs, bounds) {
        var _this = this;
        _writeBackMutableSliceBoundsSlice({}, { get: function () { return _this; }, set: function ($val) { return $info.$setThis(_this = _cloneStruct($val)); } }, bounds, newValue);
    };
    /*Swift.(file).ContiguousArray.count*/
    ContiguousArray.prototype.count$get = function () {
        var _this = this;
        return _this._getCount({});
    };
    Object.defineProperty(ContiguousArray.prototype, "count", {
        get: function () { return this.count$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).ContiguousArray.init(arrayLiteral:[Element])*/
    /*Swift.(file).ExpressibleByArrayLiteral.init(arrayLiteral:[Self.ArrayLiteralElement])*/
    ContiguousArray.prototype.initArrayLiteralArray = function ($info, _elements) {
        throw 'unsupported method Swift.(file).ContiguousArray.init(arrayLiteral:[Element]) in ' + this.constructor.name;
    };
    /*Swift.(file).ContiguousArray.init()*/
    /*Swift.(file).RangeReplaceableCollection.init()*/
    ContiguousArray.prototype.init = function ($info) {
        throw 'unsupported method Swift.(file).ContiguousArray.init() in ' + this.constructor.name;
    };
    /*Swift.(file).ContiguousArray.init(_:S)*/
    /*Swift.(file)._ArrayProtocol.init(_:Self._Buffer)*/
    /*Swift.(file).RangeReplaceableCollection.init(_:S)*/
    ContiguousArray.prototype.initBuffer = function ($info, s) {
        var _this = this;
        _this.init({});
        _this.appendContentsOf({ $setThis: function ($val) { return $info.$setThis(_this = _cloneStruct($val)); } }, _elements);
        return;
    };
    /*Swift.(file).ContiguousArray.init(repeating:Element,count:Int)*/
    /*Swift.(file).RangeReplaceableCollection.init(repeating:Self.Element,count:Int)*/
    ContiguousArray.prototype.initRepeatingCountInt = function ($info, repeatedValue, count) {
        var _this = this;
        var p;
        var $tuple = ContiguousArray._allocateUninitialized({}, count);
        $info.$setThis(_this = _cloneStruct($tuple[0]));
        p = $tuple[1];
        {
            var $generator_9 = _cloneStruct(Int.infix_46_46_60({}, 0, count).makeIterator({}));
            while (true) {
                var $ifLet0;
                if (!((($ifLet0 = $generator_9.next({ $setThis: function ($val) { return $generator_9 = $val; } })) || true) && $ifLet0 != null))
                    break;
                p.initializeTo({}, repeatedValue);
                UnsafeMutablePointer.infix_43_61({}, { get: function () { return p; }, set: function ($val) { return p = $val; } }, 1);
            }
        }
        ;
        return;
    };
    /*Swift.(file).ContiguousArray.init(_uninitializedCount:Int)*/
    /*Swift.(file).ContiguousArray.init(_uninitializedCount:Int)*/
    ContiguousArray.prototype.init_uninitializedCountInt = function ($info, count) {
        throw 'unsupported method Swift.(file).ContiguousArray.init(_uninitializedCount:Int) in ' + this.constructor.name;
    };
    /*Swift.(file).ContiguousArray.reserveCapacity(_:Int)*/
    /*Swift.(file)._ArrayProtocol.reserveCapacity(_:Int)*/
    /*Swift.(file).RangeReplaceableCollection.reserveCapacity(_:Int)*/
    ContiguousArray.prototype.reserveCapacity = function ($info, minimumCapacity) {
    };
    /*Swift.(file).ContiguousArray.append(_:Element)*/
    /*Swift.(file).RangeReplaceableCollection.append(_:Self.Element)*/
    ContiguousArray.prototype.append = function ($info, newElement) {
        var _this = this;
        _this._makeUniqueAndReserveCapacityIfNotUnique({ $setThis: function ($val) { return $info.$setThis(_this = _cloneStruct($val)); } });
        var oldCount = _this._getCount({});
        _this._appendElementAssumeUniqueAndCapacityNewElement({ $setThis: function ($val) { return $info.$setThis(_this = _cloneStruct($val)); } }, oldCount, newElement);
    };
    /*Swift.(file).ContiguousArray.append(contentsOf:S)*/
    /*Swift.(file).RangeReplaceableCollection.append(contentsOf:S)*/
    ContiguousArray.prototype.appendContentsOf = function ($info, newElements) {
        var _this = this;
        var approximateCapacity = Int.infix_43({}, _this.count, numericCast({ T: Int, U: Int }, newElements.underestimatedCount));
        {
            var $element$generator_15 = newElements.makeIterator({});
            while (true) {
                var $ifLet0, _element_1;
                if (!((($ifLet0 = $element$generator_15.next({ $setThis: function ($val) { return $element$generator_15 = $val; } })) || true) && $ifLet0 != null && ((_element_1 = $ifLet0) || true)))
                    break;
                _this.append({ $setThis: function ($val) { return $info.$setThis(_this = _cloneStruct($val)); } }, _element_1);
            }
        }
    };
    /*Swift.(file).ContiguousArray.reserveCapacityForAppend(newElementsCount:Int)*/
    /*Swift.(file).ContiguousArray.reserveCapacityForAppend(newElementsCount:Int)*/
    ContiguousArray.prototype.reserveCapacityForAppendNewElementsCount = function ($info, newElementsCount) {
        throw 'unsupported method Swift.(file).ContiguousArray.reserveCapacityForAppend(newElementsCount:Int) in ' + this.constructor.name;
    };
    /*Swift.(file).ContiguousArray.remove(at:Int)*/
    /*Swift.(file)._ArrayProtocol.remove(at:Int)*/
    /*Swift.(file).RangeReplaceableCollection.remove(at:Self.Index)*/
    ContiguousArray.prototype.removeAt = function ($info, index) {
        var _this = this;
        preconditionFileLine({}, function () { return Bool.prefix_33({}, _this.isEmpty); }, function () { return "Can't remove from an empty collection"; }, '?3', '?3');
        var result = _this.subscript$get({}, position);
        _this.replaceSubrangeWith({ $setThis: function ($val) { return $info.$setThis(_this = _cloneStruct($val)); } }, (_.arg0 = position).constructor.infix_46_46_60({}, _.arg0, _this.indexAfter({}, position)), _create(EmptyCollection, 'init', {}));
        return result;
    };
    /*Swift.(file).ContiguousArray.insert(_:Element,at:Int)*/
    /*Swift.(file)._ArrayProtocol.insert(_:Self.Element,at:Int)*/
    /*Swift.(file).RangeReplaceableCollection.insert(_:Self.Element,at:Self.Index)*/
    ContiguousArray.prototype.insertAt = function ($info, newElement, i) {
        var _this = this;
        _this.replaceSubrangeWith({ $setThis: function ($val) { return $info.$setThis(_this = _cloneStruct($val)); } }, Int.infix_46_46_60({}, i, i), _create(CollectionOfOne, 'init', {}, newElement));
    };
    /*Swift.(file).ContiguousArray.removeAll(keepingCapacity:Bool)*/
    /*Swift.(file).RangeReplaceableCollection.removeAll(keepingCapacity:Bool)*/
    ContiguousArray.prototype.removeAllKeepingCapacity = function ($info, keepCapacity) {
        var _this = this;
        if ((Bool.prefix_33({}, keepCapacity))) {
            $info.$setThis(_this = _cloneStruct(_create(_this.constructor, 'init', {})));
        }
        else {
            _this.replaceSubrangeWith({ $setThis: function ($val) { return $info.$setThis(_this = _cloneStruct($val)); } }, (_.arg0 = _this.startIndex).constructor.infix_46_46_60({}, _.arg0, _this.endIndex), _create(EmptyCollection, 'init', {}));
        }
    };
    /*Swift.(file).ContiguousArray.withContiguousMutableStorageIfAvailable(_:(inout UnsafeMutableBufferPointer<Element>) throws -> R)*/
    /*Swift.(file).MutableCollection.withContiguousMutableStorageIfAvailable(_:(inout UnsafeMutableBufferPointer<Self.Element>) throws -> R)*/
    ContiguousArray.prototype.withContiguousMutableStorageIfAvailable = function ($info, body) {
        var _this = this;
        return _this.withUnsafeMutableBufferPointer({ $setThis: function ($val) { return $info.$setThis(_this = _cloneStruct($val)); } }, (function ($info, bufferPointer$inout) { return body({}, { get: function () { return bufferPointer; }, set: function ($val) { return bufferPointer = $val; } }); }));
    };
    /*Swift.(file).ContiguousArray.withContiguousStorageIfAvailable(_:(UnsafeBufferPointer<Element>) throws -> R)*/
    /*Swift.(file).Sequence.withContiguousStorageIfAvailable(_:(UnsafeBufferPointer<Self.Element>) throws -> R)*/
    ContiguousArray.prototype.withContiguousStorageIfAvailable = function ($info, body) {
        var _this = this;
        return _this.withUnsafeBufferPointer({}, (function ($info, bufferPointer) { return body({}, bufferPointer); }));
    };
    /*Swift.(file).ContiguousArray.customMirror*/
    ContiguousArray.prototype.customMirror$get = function () {
        var _this = this;
        return _create(Mirror, 'initUnlabeledChildrenDisplayStyleOptionalAncestorRepresentationMirrorAncestorRepresentation', {}, _this, _this, Mirror.DisplayStyle.collection, generated /*!default_value*/);
    };
    Object.defineProperty(ContiguousArray.prototype, "customMirror", {
        get: function () { return this.customMirror$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).ContiguousArray.description*/
    ContiguousArray.prototype.description$get = function () {
        var _this = this;
        return _this._makeCollectionDescriptionWithTypeName({}, nil /*!default_value*/);
    };
    Object.defineProperty(ContiguousArray.prototype, "description", {
        get: function () { return this.description$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).ContiguousArray.debugDescription*/
    ContiguousArray.prototype.debugDescription$get = function () {
        var _this = this;
        return _this._makeCollectionDescriptionWithTypeName({}, "ContiguousArray");
    };
    Object.defineProperty(ContiguousArray.prototype, "debugDescription", {
        get: function () { return this.debugDescription$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).ContiguousArray.withUnsafeBufferPointer(_:(UnsafeBufferPointer<Element>) throws -> R)*/
    /*Swift.(file).ContiguousArray.withUnsafeBufferPointer(_:(UnsafeBufferPointer<Element>) throws -> R)*/
    ContiguousArray.prototype.withUnsafeBufferPointer = function ($info, body) {
        throw 'unsupported method Swift.(file).ContiguousArray.withUnsafeBufferPointer(_:(UnsafeBufferPointer<Element>) throws -> R) in ' + this.constructor.name;
    };
    /*Swift.(file).ContiguousArray.withUnsafeMutableBufferPointer(_:(inout UnsafeMutableBufferPointer<Element>) throws -> R)*/
    /*Swift.(file).ContiguousArray.withUnsafeMutableBufferPointer(_:(inout UnsafeMutableBufferPointer<Element>) throws -> R)*/
    ContiguousArray.prototype.withUnsafeMutableBufferPointer = function ($info, body) {
        throw 'unsupported method Swift.(file).ContiguousArray.withUnsafeMutableBufferPointer(_:(inout UnsafeMutableBufferPointer<Element>) throws -> R) in ' + this.constructor.name;
    };
    /*Swift.(file).ContiguousArray.replaceSubrange(_:Range<Int>,with:C)*/
    /*Swift.(file).RangeReplaceableCollection.replaceSubrange(_:Range<Self.Index>,with:C)*/
    ContiguousArray.prototype.replaceSubrangeWith = function ($info, subrange, newElements) {
        throw 'unsupported method Swift.(file).ContiguousArray.replaceSubrange(_:Range<Int>,with:C) in ' + this.constructor.name;
    };
    /*Swift.(file).ContiguousArray.==infix(_:ContiguousArray<Element>,_:ContiguousArray<Element>)*/
    /*Swift.(file).Equatable.==infix(_:Self,_:Self)*/
    ContiguousArray.infix_61_61 = function ($info, lhs, rhs) {
        return lhs == rhs;
    };
    /*Swift.(file).ContiguousArray.hash(into:Hasher)*/
    /*Swift.(file).Hashable.hash(into:Hasher)*/
    ContiguousArray.prototype.hashInto = function ($info, hasher$inout) {
        var _this = this;
        var hasher = hasher$inout.get();
        var $result = (function () {
            hasher.combine({ $setThis: function ($val) { return hasher = $val; } }, _this.count);
            {
                var $element$generator_16 = _cloneStruct(_this.makeIterator({}));
                while (true) {
                    var $ifLet0, _element_1;
                    if (!((($ifLet0 = $element$generator_16.next({ $setThis: function ($val) { return $element$generator_16 = $val; } })) || true) && $ifLet0 != null && ((_element_1 = $ifLet0) || true)))
                        break;
                    hasher.combine({ $setThis: function ($val) { return hasher = $val; } }, _element_1);
                }
            }
            ;
        })();
        hasher$inout.set(hasher);
        return $result;
    };
    /*Swift.(file).ContiguousArray.hashValue*/
    ContiguousArray.prototype.hashValue$get = function () {
        throw 'unsupported variable Swift.(file).ContiguousArray.hashValue in ' + this.constructor.name;
    };
    Object.defineProperty(ContiguousArray.prototype, "hashValue", {
        get: function () { return this.hashValue$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).ContiguousArray.withUnsafeMutableBytes(_:(UnsafeMutableRawBufferPointer) throws -> R)*/
    /*Swift.(file).ContiguousArray.withUnsafeMutableBytes(_:(UnsafeMutableRawBufferPointer) throws -> R)*/
    ContiguousArray.prototype.withUnsafeMutableBytes = function ($info, body) {
        var _this = this;
        return _this.withUnsafeMutableBufferPointer({ $setThis: function ($val) { return $info.$setThis(_this = _cloneStruct($val)); } }, (function ($info, $0$inout) { return body({}, _create(UnsafeMutableRawBufferPointer, 'initUnsafeMutableBufferPointer', {}, $0)); }));
    };
    /*Swift.(file).ContiguousArray.withUnsafeBytes(_:(UnsafeRawBufferPointer) throws -> R)*/
    /*Swift.(file)._HasContiguousBytes.withUnsafeBytes(_:(UnsafeRawBufferPointer) throws -> R)*/
    ContiguousArray.prototype.withUnsafeBytes = function ($info, body) {
        var _this = this;
        return _this.withUnsafeBufferPointer({}, (function ($info, $0) { return body({}, _create(UnsafeRawBufferPointer, 'initUnsafeBufferPointer', {}, $0)); }));
    };
    ContiguousArray.prototype.init$vars = function () {
    };
    ContiguousArray.$struct = true;
    ContiguousArray.$infoAddress = '';
    return ContiguousArray;
}());
if (typeof _DestructorSafeContainer$implementation != 'undefined')
    _mixin(ContiguousArray, _DestructorSafeContainer$implementation, false);
if (typeof _ArrayProtocol$implementation != 'undefined')
    _mixin(ContiguousArray, _ArrayProtocol$implementation, false);
if (typeof RandomAccessCollection$implementation != 'undefined')
    _mixin(ContiguousArray, RandomAccessCollection$implementation, false);
if (typeof MutableCollection$implementation != 'undefined')
    _mixin(ContiguousArray, MutableCollection$implementation, false);
if (typeof ExpressibleByArrayLiteral$implementation != 'undefined')
    _mixin(ContiguousArray, ExpressibleByArrayLiteral$implementation, false);
if (typeof RangeReplaceableCollection$implementation != 'undefined')
    _mixin(ContiguousArray, RangeReplaceableCollection$implementation, false);
if (typeof CustomReflectable$implementation != 'undefined')
    _mixin(ContiguousArray, CustomReflectable$implementation, false);
if (typeof CustomStringConvertible$implementation != 'undefined')
    _mixin(ContiguousArray, CustomStringConvertible$implementation, false);
if (typeof CustomDebugStringConvertible$implementation != 'undefined')
    _mixin(ContiguousArray, CustomDebugStringConvertible$implementation, false);
if (typeof Equatable$implementation != 'undefined')
    _mixin(ContiguousArray, Equatable$implementation, false);
if (typeof Hashable$implementation != 'undefined')
    _mixin(ContiguousArray, Hashable$implementation, false);
if (typeof _HasContiguousBytes$implementation != 'undefined')
    _mixin(ContiguousArray, _HasContiguousBytes$implementation, false);
var ClosedRange = /** @class */ (function () {
    function ClosedRange() {
    }
    /*Swift.(file).ClosedRange.lowerBound*/
    ClosedRange.prototype.lowerBound$get = function () {
        return this.lowerBound$internal;
    };
    Object.defineProperty(ClosedRange.prototype, "lowerBound", {
        get: function () { return this.lowerBound$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).ClosedRange.upperBound*/
    ClosedRange.prototype.upperBound$get = function () {
        return this.upperBound$internal;
    };
    Object.defineProperty(ClosedRange.prototype, "upperBound", {
        get: function () { return this.upperBound$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).ClosedRange.init(uncheckedBounds:(lower: Bound, upper: Bound))*/
    /*Swift.(file).ClosedRange.init(uncheckedBounds:(lower: Bound, upper: Bound))*/
    ClosedRange.prototype.initUncheckedBoundstuple_type = function ($info, bounds) {
        this.lowerBound$internal = bounds[0];
        this.upperBound$internal = bounds[1];
    };
    /*Swift.(file).ClosedRange.isEmpty*/
    ClosedRange.prototype.isEmpty$get = function () {
        var _this = this;
        return false;
    };
    Object.defineProperty(ClosedRange.prototype, "isEmpty", {
        get: function () { return this.isEmpty$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).ClosedRange.relative(to:C)*/
    /*Swift.(file).RangeExpression.relative(to:C)*/
    ClosedRange.prototype.relativeTo = function ($info, collection) {
        var _this = this;
        return _create(Range, 'initUncheckedBoundstuple_type', {}, { 0: _this.lowerBound, 1: collection.indexAfter({}, _this.upperBound) });
    };
    /*Swift.(file).ClosedRange.contains(_:Bound)*/
    /*Swift.(file).RangeExpression.contains(_:Self.Bound)*/
    ClosedRange.prototype.contains = function ($info, _element) {
        var _this = this;
        return Bool.infix_38_38({}, (_.arg0 = _element).constructor.infix_62_61({}, _.arg0, _this.lowerBound), function () { return (_.arg1 = _element).constructor.infix_60_61({}, _.arg1, _this.upperBound); });
    };
    /*Swift.(file).ClosedRange.startIndex*/
    ClosedRange.prototype.startIndex$get = function () {
        var _this = this;
        return ClosedRange.Index.inRange({}, _this.lowerBound);
    };
    Object.defineProperty(ClosedRange.prototype, "startIndex", {
        get: function () { return this.startIndex$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).ClosedRange.endIndex*/
    ClosedRange.prototype.endIndex$get = function () {
        var _this = this;
        return ClosedRange.Index.pastEnd;
    };
    Object.defineProperty(ClosedRange.prototype, "endIndex", {
        get: function () { return this.endIndex$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).ClosedRange.index(after:ClosedRange<Bound>.Index)*/
    /*Swift.(file).Collection.index(after:Self.Index)*/
    /*Swift.(file).BidirectionalCollection.index(after:Self.Index)*/
    /*Swift.(file).RandomAccessCollection.index(after:Self.Index)*/
    ClosedRange.prototype.indexAfter = function ($info, i) {
        var _this = this;
        var $match = i;
        if ((($match.rawValue == ClosedRange.Index.inRange().rawValue))) {
            var x = $match[0];
            return ((_.arg0 = _this.upperBound).constructor.infix_61_61({}, x, _.arg0) ? ClosedRange.Index.pastEnd : ClosedRange.Index.inRange({}, x.advancedBy({}, _create(Int, 'initIntegerLiteral', {}, 1))));
        }
        else if ((($match.rawValue == ClosedRange.Index.pastEnd.rawValue))) {
            preconditionFailureFileLine({}, function () { return "Incrementing past end index"; }, '?3', '?3');
        }
    };
    /*Swift.(file).ClosedRange.index(before:ClosedRange<Bound>.Index)*/
    /*Swift.(file).BidirectionalCollection.index(before:Self.Index)*/
    /*Swift.(file).RandomAccessCollection.index(before:Self.Index)*/
    ClosedRange.prototype.indexBefore = function ($info, i) {
        var _this = this;
        var $match = i;
        if ((($match.rawValue == ClosedRange.Index.inRange().rawValue))) {
            var x_2 = $match[0];
            preconditionFileLine({}, function () { return (_.arg0 = _this.lowerBound).constructor.infix_62({}, x_2, _.arg0); }, function () { return "Incrementing past start index"; }, '?3', '?3');
            return ClosedRange.Index.inRange({}, x_2.advancedBy({}, _create(Int, 'initIntegerLiteral', {}, -1)));
        }
        else if ((($match.rawValue == ClosedRange.Index.pastEnd.rawValue))) {
            preconditionFileLine({}, function () { return (_.arg1 = _this.upperBound).constructor.infix_62_61({}, _.arg1, _this.lowerBound); }, function () { return "Incrementing past start index"; }, '?3', '?3');
            return ClosedRange.Index.inRange({}, _this.upperBound);
        }
    };
    /*Swift.(file).ClosedRange.index(_:ClosedRange<Bound>.Index,offsetBy:Int)*/
    /*Swift.(file).Collection.index(_:Self.Index,offsetBy:Int)*/
    /*Swift.(file).BidirectionalCollection.index(_:Self.Index,offsetBy:Int)*/
    /*Swift.(file).RandomAccessCollection.index(_:Self.Index,offsetBy:Int)*/
    ClosedRange.prototype.indexOffsetBy = function ($info, i, distance) {
        var _this = this;
        var $match = i;
        if ((($match.rawValue == ClosedRange.Index.inRange().rawValue))) {
            var x = $match[0];
            var d = x.distanceTo({}, _this.upperBound);
            if ((Int.infix_60_61({}, distance, d))) {
                var newPosition_1 = x.advancedBy({}, numericCast({ T: Int, U: Int }, distance));
                preconditionFileLine({}, function () { return (_.arg0 = _this.lowerBound).constructor.infix_62_61({}, newPosition_1, _.arg0); }, function () { return "Advancing past start index"; }, '?3', '?3');
                return ClosedRange.Index.inRange({}, newPosition_1);
            }
            ;
            if ((Int.infix_61_61({}, Int.infix_45({}, d, _create(Int, 'initIntegerLiteral', {}, -1)), distance))) {
                return ClosedRange.Index.pastEnd;
            }
            ;
            preconditionFailureFileLine({}, function () { return "Advancing past end index"; }, '?3', '?3');
        }
        else if ((($match.rawValue == ClosedRange.Index.pastEnd.rawValue))) {
            if ((Int.infix_61_61({}, distance, 0))) {
                return i;
            }
            ;
            if ((Int.infix_60({}, distance, 0))) {
                return _this.indexOffsetBy({}, ClosedRange.Index.inRange({}, _this.upperBound), numericCast({ T: Int, U: Int }, Int.infix_43({}, distance, 1)));
            }
            ;
            preconditionFailureFileLine({}, function () { return "Advancing past end index"; }, '?3', '?3');
        }
    };
    /*Swift.(file).ClosedRange.distance(from:ClosedRange<Bound>.Index,to:ClosedRange<Bound>.Index)*/
    /*Swift.(file).Collection.distance(from:Self.Index,to:Self.Index)*/
    /*Swift.(file).BidirectionalCollection.distance(from:Self.Index,to:Self.Index)*/
    /*Swift.(file).RandomAccessCollection.distance(from:Self.Index,to:Self.Index)*/
    ClosedRange.prototype.distanceFromTo = function ($info, start, end) {
        var _this = this;
        var $match = { 0: start, 1: end };
        if ((($match[0].rawValue == ClosedRange.Index.inRange().rawValue && $match[1].rawValue == ClosedRange.Index.inRange().rawValue))) {
            var left = $match[0][0];
            var right = $match[1][0];
            return numericCast({ T: Int, U: Int }, left.distanceTo({}, right));
        }
        else if ((($match[0].rawValue == ClosedRange.Index.inRange().rawValue && $match[1].rawValue == ClosedRange.Index.pastEnd.rawValue))) {
            var left = $match[0][0];
            return numericCast({ T: Int, U: Int }, Int.infix_43({}, _create(Int, 'initIntegerLiteral', {}, 1), left.distanceTo({}, _this.upperBound)));
        }
        else if ((($match[0].rawValue == ClosedRange.Index.pastEnd.rawValue && $match[1].rawValue == ClosedRange.Index.inRange().rawValue))) {
            var right = $match[1][0];
            return numericCast({ T: Int, U: Int }, Int.infix_45({}, _this.upperBound.distanceTo({}, right), _create(Int, 'initIntegerLiteral', {}, 1)));
        }
        else if ((($match[0].rawValue == ClosedRange.Index.pastEnd.rawValue && $match[1].rawValue == ClosedRange.Index.pastEnd.rawValue))) {
            return 0;
        }
    };
    /*Swift.(file).ClosedRange.subscript(_:ClosedRange<Bound>.Index)*/
    /*Swift.(file).Collection.subscript(_:Self.Index)*/
    /*Swift.(file).BidirectionalCollection.subscript(_:Self.Index)*/
    /*Swift.(file).RandomAccessCollection.subscript(_:Self.Index)*/
    ClosedRange.prototype.subscript$get = function ($info, position) {
        var _this = this;
        var $match = position;
        if ((($match.rawValue == ClosedRange.Index.inRange().rawValue))) {
            var x = $match[0];
            return x;
        }
        else if ((($match.rawValue == ClosedRange.Index.pastEnd.rawValue))) {
            preconditionFailureFileLine({}, function () { return "Index out of range"; }, '?3', '?3');
        }
    };
    /*Swift.(file).ClosedRange.subscript(_:Range<ClosedRange<Bound>.Index>)*/
    /*Swift.(file).Collection.subscript(_:Range<Self.Index>)*/
    /*Swift.(file).BidirectionalCollection.subscript(_:Range<Self.Index>)*/
    /*Swift.(file).RandomAccessCollection.subscript(_:Range<Self.Index>)*/
    ClosedRange.prototype.subscriptRange$get = function ($info, bounds) {
        var _this = this;
        return _create(Slice, 'initBaseBoundsRange', {}, _this, bounds);
    };
    /*Swift.(file).ClosedRange.==infix(_:ClosedRange<Bound>,_:ClosedRange<Bound>)*/
    /*Swift.(file).Equatable.==infix(_:Self,_:Self)*/
    ClosedRange.infix_61_61 = function ($info, lhs, rhs) {
        var _this = this;
        return Bool.infix_38_38({}, (_.arg0 = lhs.lowerBound).constructor.infix_61_61({}, _.arg0, rhs.lowerBound), function () { return (_.arg1 = lhs.upperBound).constructor.infix_61_61({}, _.arg1, rhs.upperBound); });
    };
    /*Swift.(file).ClosedRange.hash(into:Hasher)*/
    /*Swift.(file).Hashable.hash(into:Hasher)*/
    ClosedRange.prototype.hashInto = function ($info, hasher$inout) {
        var _this = this;
        var hasher = hasher$inout.get();
        var $result = (function () {
            hasher.combine({ $setThis: function ($val) { return hasher = $val; } }, _this.lowerBound);
            hasher.combine({ $setThis: function ($val) { return hasher = $val; } }, _this.upperBound);
        })();
        hasher$inout.set(hasher);
        return $result;
    };
    /*Swift.(file).ClosedRange.hashValue*/
    ClosedRange.prototype.hashValue$get = function () {
        throw 'unsupported variable Swift.(file).ClosedRange.hashValue in ' + this.constructor.name;
    };
    Object.defineProperty(ClosedRange.prototype, "hashValue", {
        get: function () { return this.hashValue$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).ClosedRange.description*/
    ClosedRange.prototype.description$get = function () {
        var _this = this;
        return (("") + (_this.lowerBound) + ("...") + (_this.upperBound) + (""));
    };
    Object.defineProperty(ClosedRange.prototype, "description", {
        get: function () { return this.description$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).ClosedRange.debugDescription*/
    ClosedRange.prototype.debugDescription$get = function () {
        var _this = this;
        return String.infix_43({}, (("ClosedRange(") + (_create(String, 'initReflecting', {}, _this.lowerBound)) + ("")), (("...") + (_create(String, 'initReflecting', {}, _this.upperBound)) + (")")));
    };
    Object.defineProperty(ClosedRange.prototype, "debugDescription", {
        get: function () { return this.debugDescription$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).ClosedRange.customMirror*/
    ClosedRange.prototype.customMirror$get = function () {
        var _this = this;
        return _create(Mirror, 'initChildrenKeyValuePairsDisplayStyleOptionalAncestorRepresentationMirrorAncestorRepresentation', {}, _this, new Map([["lowerBound", _this.lowerBound], ["upperBound", _this.upperBound]]), nil /*!default_value*/, generated /*!default_value*/);
    };
    Object.defineProperty(ClosedRange.prototype, "customMirror", {
        get: function () { return this.customMirror$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).ClosedRange.clamped(to:ClosedRange<Bound>)*/
    /*Swift.(file).ClosedRange.clamped(to:ClosedRange<Bound>)*/
    ClosedRange.prototype.clampedTo = function ($info, limits) {
        var _this = this;
        var lower = ((_.arg0 = limits.lowerBound).constructor.infix_62({}, _.arg0, _this.lowerBound) ? limits.lowerBound : ((_.arg1 = limits.upperBound).constructor.infix_60({}, _.arg1, _this.lowerBound) ? limits.upperBound : _this.lowerBound));
        var upper = ((_.arg2 = limits.upperBound).constructor.infix_60({}, _.arg2, _this.upperBound) ? limits.upperBound : ((_.arg3 = limits.lowerBound).constructor.infix_62({}, _.arg3, _this.upperBound) ? limits.lowerBound : _this.upperBound));
        return _create(ClosedRange, 'initUncheckedBoundstuple_type', {}, { 0: lower, 1: upper });
    };
    /*Swift.(file).ClosedRange.init(_:Range<Bound>)*/
    /*Swift.(file).ClosedRange.init(_:Range<Bound>)*/
    ClosedRange.prototype.initRange = function ($info, other) {
        var _this = this;
        preconditionFileLine({}, function () { return Bool.prefix_33({}, other.isEmpty); }, function () { return "Can't form an empty closed range"; }, '?3', '?3');
        var upperBound = other.upperBound.advancedBy({}, _create(Int, 'initIntegerLiteral', {}, -1));
        _this.initUncheckedBoundstuple_type({}, { 0: other.lowerBound, 1: upperBound });
        return;
    };
    /*Swift.(file).ClosedRange.overlaps(_:ClosedRange<Bound>)*/
    /*Swift.(file).ClosedRange.overlaps(_:ClosedRange<Bound>)*/
    ClosedRange.prototype.overlaps = function ($info, other) {
        var _this = this;
        return Bool.infix_124_124({}, _this.contains({}, other.lowerBound), function () { return other.contains({}, _this.lowerBound); });
    };
    /*Swift.(file).ClosedRange.overlaps(_:Range<Bound>)*/
    /*Swift.(file).ClosedRange.overlaps(_:Range<Bound>)*/
    ClosedRange.prototype.overlaps = function ($info, other) {
        var _this = this;
        return other.overlaps({}, _this);
    };
    /*Swift.(file).ClosedRange.init(_:ClosedRange<Bound>)*/
    /*Swift.(file).ClosedRange.init(_:ClosedRange<Bound>)*/
    ClosedRange.prototype.initClosedRange = function ($info, other) {
        var _this = this;
        $info.$setThis(_this = _cloneStruct(_cloneStruct(other)));
        return;
    };
    ClosedRange.prototype.init$vars = function () {
    };
    var _79;
    ClosedRange.$struct = true;
    ClosedRange.$infoAddress = '';
    ClosedRange.Index = (_79 = /** @class */ (function () {
            function class_103() {
            }
            Object.defineProperty(class_103, "pastEnd", {
                get: function () { return Object.assign(new ClosedRange.Index(), __assign({ rawValue: "pastEnd" }, Array.from(arguments).slice(1))); },
                enumerable: true,
                configurable: true
            });
            class_103.inRange = function () { return Object.assign(new ClosedRange.Index(), __assign({ rawValue: "inRange" }, Array.from(arguments).slice(1))); };
            /*Swift.(file).ClosedRange.Index.==infix(_:ClosedRange<Bound>.Index,_:ClosedRange<Bound>.Index)*/
            /*Swift.(file).Equatable.==infix(_:Self,_:Self)*/
            class_103.infix_61_61 = function ($info, lhs, rhs) {
                var _this = this;
                var $match = { 0: lhs, 1: rhs };
                if ((($match[0].rawValue == ClosedRange.Index.inRange().rawValue && $match[1].rawValue == ClosedRange.Index.inRange().rawValue))) {
                    var l = $match[0][0];
                    var r = $match[1][0];
                    return ((function () { throw '!unclarifiedGeneric:Bound'; })()).infix_61_61({}, l, r);
                }
                else if ((($match[0].rawValue == ClosedRange.Index.pastEnd.rawValue && $match[1].rawValue == ClosedRange.Index.pastEnd.rawValue))) {
                    return true;
                }
                else if (((true))) {
                    return false;
                }
            };
            /*Swift.(file).ClosedRange.Index.<infix(_:ClosedRange<Bound>.Index,_:ClosedRange<Bound>.Index)*/
            /*Swift.(file).Comparable.<infix(_:Self,_:Self)*/
            class_103.infix_60 = function ($info, lhs, rhs) {
                var _this = this;
                var $match = { 0: lhs, 1: rhs };
                if ((($match[0].rawValue == ClosedRange.Index.inRange().rawValue && $match[1].rawValue == ClosedRange.Index.inRange().rawValue))) {
                    var l = $match[0][0];
                    var r = $match[1][0];
                    return ((function () { throw '!unclarifiedGeneric:Bound'; })()).infix_60({}, l, r);
                }
                else if ((($match[0].rawValue == ClosedRange.Index.inRange().rawValue && $match[1].rawValue == ClosedRange.Index.pastEnd.rawValue))) {
                    return true;
                }
                else if (((true))) {
                    return false;
                }
            };
            /*Swift.(file).ClosedRange.Index.hash(into:Hasher)*/
            /*Swift.(file).Hashable.hash(into:Hasher)*/
            class_103.prototype.hashInto = function ($info, hasher$inout) {
                var _this = this;
                var hasher = hasher$inout.get();
                var $result = (function () {
                    var $match = _this;
                    if ((($match.rawValue == ClosedRange.Index.inRange().rawValue))) {
                        var value = $match[0];
                        hasher.combine({ $setThis: function ($val) { return hasher = $val; } }, 0);
                        hasher.combine({ $setThis: function ($val) { return hasher = $val; } }, value);
                    }
                    else if ((($match.rawValue == ClosedRange.Index.pastEnd.rawValue))) {
                        hasher.combine({ $setThis: function ($val) { return hasher = $val; } }, 1);
                    }
                    ;
                })();
                hasher$inout.set(hasher);
                return $result;
            };
            /*Swift.(file).ClosedRange.Index.hashValue*/
            class_103.prototype.hashValue$get = function () {
                throw 'unsupported variable Swift.(file).ClosedRange.Index.hashValue in ' + this.constructor.name;
            };
            Object.defineProperty(class_103.prototype, "hashValue", {
                get: function () { return this.hashValue$get(); },
                enumerable: true,
                configurable: true
            });
            ;
            class_103.prototype.init$vars = function () {
            };
            return class_103;
        }()),
        _79.$infoAddress = '',
        _79);
    return ClosedRange;
}());
if (typeof Comparable$implementation != 'undefined')
    _mixin(ClosedRange.Index, Comparable$implementation, false);
if (typeof Hashable$implementation != 'undefined')
    _mixin(ClosedRange.Index, Hashable$implementation, false);
_mixin(ClosedRange.Index, _DefaultEnumImplementation, false);
if (typeof RangeExpression$implementation != 'undefined')
    _mixin(ClosedRange, RangeExpression$implementation, false);
if (typeof Sequence$implementation != 'undefined')
    _mixin(ClosedRange, Sequence$implementation, false);
if (typeof Collection$implementation != 'undefined')
    _mixin(ClosedRange, Collection$implementation, false);
if (typeof BidirectionalCollection$implementation != 'undefined')
    _mixin(ClosedRange, BidirectionalCollection$implementation, false);
if (typeof RandomAccessCollection$implementation != 'undefined')
    _mixin(ClosedRange, RandomAccessCollection$implementation, false);
if (typeof Equatable$implementation != 'undefined')
    _mixin(ClosedRange, Equatable$implementation, false);
if (typeof Hashable$implementation != 'undefined')
    _mixin(ClosedRange, Hashable$implementation, false);
if (typeof CustomStringConvertible$implementation != 'undefined')
    _mixin(ClosedRange, CustomStringConvertible$implementation, false);
if (typeof CustomDebugStringConvertible$implementation != 'undefined')
    _mixin(ClosedRange, CustomDebugStringConvertible$implementation, false);
if (typeof CustomReflectable$implementation != 'undefined')
    _mixin(ClosedRange, CustomReflectable$implementation, false);
var _ContiguousArrayBuffer = /** @class */ (function () {
    function _ContiguousArrayBuffer() {
    }
    /*Swift.(file)._ContiguousArrayBuffer.init(_uninitializedCount:Int,minimumCapacity:Int)*/
    /*Swift.(file)._ContiguousArrayBuffer.init(_uninitializedCount:Int,minimumCapacity:Int)*/
    _ContiguousArrayBuffer.prototype.init_uninitializedCountIntMinimumCapacityInt = function ($info, uninitializedCount, minimumCapacity) {
        throw 'unsupported method Swift.(file)._ContiguousArrayBuffer.init(_uninitializedCount:Int,minimumCapacity:Int) in ' + this.constructor.name;
    };
    /*Swift.(file)._ContiguousArrayBuffer.init(count:Int,storage:_ContiguousArrayStorage<Element>)*/
    /*Swift.(file)._ContiguousArrayBuffer.init(count:Int,storage:_ContiguousArrayStorage<Element>)*/
    _ContiguousArrayBuffer.prototype.initCountIntStorage_ContiguousArrayStorage = function ($info, count, storage) {
        throw 'unsupported method Swift.(file)._ContiguousArrayBuffer.init(count:Int,storage:_ContiguousArrayStorage<Element>) in ' + this.constructor.name;
    };
    /*Swift.(file)._ContiguousArrayBuffer.init(_:__ContiguousArrayStorageBase)*/
    /*Swift.(file)._ContiguousArrayBuffer.init(_:__ContiguousArrayStorageBase)*/
    _ContiguousArrayBuffer.prototype.init__ContiguousArrayStorageBase = function ($info, storage) {
        throw 'unsupported method Swift.(file)._ContiguousArrayBuffer.init(_:__ContiguousArrayStorageBase) in ' + this.constructor.name;
    };
    /*Swift.(file)._ContiguousArrayBuffer.arrayPropertyIsNativeTypeChecked*/
    _ContiguousArrayBuffer.prototype.arrayPropertyIsNativeTypeChecked$get = function () {
        throw 'unsupported variable Swift.(file)._ContiguousArrayBuffer.arrayPropertyIsNativeTypeChecked in ' + this.constructor.name;
    };
    Object.defineProperty(_ContiguousArrayBuffer.prototype, "arrayPropertyIsNativeTypeChecked", {
        get: function () { return this.arrayPropertyIsNativeTypeChecked$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file)._ContiguousArrayBuffer.firstElementAddress*/
    _ContiguousArrayBuffer.prototype.firstElementAddress$get = function () {
        throw 'unsupported variable Swift.(file)._ContiguousArrayBuffer.firstElementAddress in ' + this.constructor.name;
    };
    Object.defineProperty(_ContiguousArrayBuffer.prototype, "firstElementAddress", {
        get: function () { return this.firstElementAddress$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file)._ContiguousArrayBuffer.firstElementAddressIfContiguous*/
    _ContiguousArrayBuffer.prototype.firstElementAddressIfContiguous$get = function () {
        throw 'unsupported variable Swift.(file)._ContiguousArrayBuffer.firstElementAddressIfContiguous in ' + this.constructor.name;
    };
    Object.defineProperty(_ContiguousArrayBuffer.prototype, "firstElementAddressIfContiguous", {
        get: function () { return this.firstElementAddressIfContiguous$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file)._ContiguousArrayBuffer.withUnsafeBufferPointer(_:(UnsafeBufferPointer<Element>) throws -> R)*/
    /*Swift.(file)._ArrayBufferProtocol.withUnsafeBufferPointer(_:(UnsafeBufferPointer<Self.Element>) throws -> R)*/
    _ContiguousArrayBuffer.prototype.withUnsafeBufferPointer = function ($info, body) {
        throw 'unsupported method Swift.(file)._ContiguousArrayBuffer.withUnsafeBufferPointer(_:(UnsafeBufferPointer<Element>) throws -> R) in ' + this.constructor.name;
    };
    /*Swift.(file)._ContiguousArrayBuffer.withUnsafeMutableBufferPointer(_:(UnsafeMutableBufferPointer<Element>) throws -> R)*/
    /*Swift.(file)._ArrayBufferProtocol.withUnsafeMutableBufferPointer(_:(UnsafeMutableBufferPointer<Self.Element>) throws -> R)*/
    _ContiguousArrayBuffer.prototype.withUnsafeMutableBufferPointer = function ($info, body) {
        throw 'unsupported method Swift.(file)._ContiguousArrayBuffer.withUnsafeMutableBufferPointer(_:(UnsafeMutableBufferPointer<Element>) throws -> R) in ' + this.constructor.name;
    };
    /*Swift.(file)._ContiguousArrayBuffer.init()*/
    /*Swift.(file)._ArrayBufferProtocol.init()*/
    _ContiguousArrayBuffer.prototype.init = function ($info) {
        throw 'unsupported method Swift.(file)._ContiguousArrayBuffer.init() in ' + this.constructor.name;
    };
    /*Swift.(file)._ContiguousArrayBuffer.init(_buffer:_ContiguousArrayBuffer<Element>,shiftedToStartIndex:Int)*/
    /*Swift.(file)._ArrayBufferProtocol.init(_buffer:_ContiguousArrayBuffer<Self.Element>,shiftedToStartIndex:Int)*/
    _ContiguousArrayBuffer.prototype.init_buffer_ContiguousArrayBufferShiftedToStartIndexInt = function ($info, buffer, shiftedToStartIndex) {
        throw 'unsupported method Swift.(file)._ContiguousArrayBuffer.init(_buffer:_ContiguousArrayBuffer<Element>,shiftedToStartIndex:Int) in ' + this.constructor.name;
    };
    /*Swift.(file)._ContiguousArrayBuffer.requestUniqueMutableBackingBuffer(minimumCapacity:Int)*/
    /*Swift.(file)._ArrayBufferProtocol.requestUniqueMutableBackingBuffer(minimumCapacity:Int)*/
    _ContiguousArrayBuffer.prototype.requestUniqueMutableBackingBufferMinimumCapacity = function ($info, minimumCapacity) {
        throw 'unsupported method Swift.(file)._ContiguousArrayBuffer.requestUniqueMutableBackingBuffer(minimumCapacity:Int) in ' + this.constructor.name;
    };
    /*Swift.(file)._ContiguousArrayBuffer.isMutableAndUniquelyReferenced()*/
    /*Swift.(file)._ArrayBufferProtocol.isMutableAndUniquelyReferenced()*/
    _ContiguousArrayBuffer.prototype.isMutableAndUniquelyReferenced = function ($info) {
        throw 'unsupported method Swift.(file)._ContiguousArrayBuffer.isMutableAndUniquelyReferenced() in ' + this.constructor.name;
    };
    /*Swift.(file)._ContiguousArrayBuffer.requestNativeBuffer()*/
    /*Swift.(file)._ArrayBufferProtocol.requestNativeBuffer()*/
    _ContiguousArrayBuffer.prototype.requestNativeBuffer = function ($info) {
        throw 'unsupported method Swift.(file)._ContiguousArrayBuffer.requestNativeBuffer() in ' + this.constructor.name;
    };
    /*Swift.(file)._ContiguousArrayBuffer.getElement(_:Int)*/
    /*Swift.(file)._ContiguousArrayBuffer.getElement(_:Int)*/
    _ContiguousArrayBuffer.prototype.getElement = function ($info, i) {
        throw 'unsupported method Swift.(file)._ContiguousArrayBuffer.getElement(_:Int) in ' + this.constructor.name;
    };
    /*Swift.(file)._ContiguousArrayBuffer.subscript(_:Int)*/
    /*Swift.(file).MutableCollection.subscript(_:Self.Index)*/
    /*Swift.(file).RandomAccessCollection.subscript(_:Self.Index)*/
    /*Swift.(file).BidirectionalCollection.subscript(_:Self.Index)*/
    /*Swift.(file).Collection.subscript(_:Self.Index)*/
    _ContiguousArrayBuffer.prototype.subscript$get = function ($info, i) {
        throw 'unsupported method Swift.(file)._ContiguousArrayBuffer.subscript(_:Int) in ' + this.constructor.name;
    }; /*Swift.(file)._ContiguousArrayBuffer.subscript(_:Int)*/
    /*Swift.(file).MutableCollection.subscript(_:Self.Index)*/
    /*Swift.(file).RandomAccessCollection.subscript(_:Self.Index)*/
    /*Swift.(file).BidirectionalCollection.subscript(_:Self.Index)*/
    /*Swift.(file).Collection.subscript(_:Self.Index)*/
    _ContiguousArrayBuffer.prototype.subscript$set = function ($info, newValue, i) {
        throw 'unsupported method Swift.(file)._ContiguousArrayBuffer.subscript(_:Int) in ' + this.constructor.name;
    };
    /*Swift.(file)._ContiguousArrayBuffer.count*/
    _ContiguousArrayBuffer.prototype.count$get = function () {
        var _this = this;
        return _this.distanceFromTo({}, _this.startIndex, _this.endIndex);
    };
    Object.defineProperty(_ContiguousArrayBuffer.prototype, "count", {
        get: function () { return this.count$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file)._ContiguousArrayBuffer.capacity*/
    _ContiguousArrayBuffer.prototype.capacity$get = function () {
        throw 'unsupported variable Swift.(file)._ContiguousArrayBuffer.capacity in ' + this.constructor.name;
    };
    Object.defineProperty(_ContiguousArrayBuffer.prototype, "capacity", {
        get: function () { return this.capacity$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file)._ContiguousArrayBuffer.subscript(_:Range<Int>)*/
    /*Swift.(file)._ArrayBufferProtocol.subscript(_:Range<Int>)*/
    /*Swift.(file).MutableCollection.subscript(_:Range<Self.Index>)*/
    /*Swift.(file).RandomAccessCollection.subscript(_:Range<Self.Index>)*/
    /*Swift.(file).BidirectionalCollection.subscript(_:Range<Self.Index>)*/
    /*Swift.(file).Collection.subscript(_:Range<Self.Index>)*/
    _ContiguousArrayBuffer.prototype.subscript$get = function ($info, bounds) {
        var _this = this;
        return _create(Slice, 'initBaseBoundsRange', {}, _this, bounds);
    };
    _ContiguousArrayBuffer.prototype.subscriptRange$get = function ($info, bounds) {
        this.subscript$get.apply(this, arguments);
    }; /*Swift.(file)._ContiguousArrayBuffer.subscript(_:Range<Int>)*/
    /*Swift.(file)._ArrayBufferProtocol.subscript(_:Range<Int>)*/
    /*Swift.(file).MutableCollection.subscript(_:Range<Self.Index>)*/
    /*Swift.(file).RandomAccessCollection.subscript(_:Range<Self.Index>)*/
    /*Swift.(file).BidirectionalCollection.subscript(_:Range<Self.Index>)*/
    /*Swift.(file).Collection.subscript(_:Range<Self.Index>)*/
    _ContiguousArrayBuffer.prototype.subscript$set = function ($info, newValue, bounds) {
        var _this = this;
        _writeBackMutableSliceBoundsSlice({}, { get: function () { return _this; }, set: function ($val) { return $info.$setThis(_this = _cloneStruct($val)); } }, bounds, newValue);
    };
    _ContiguousArrayBuffer.prototype.subscriptRange$set = function ($info, newValue, bounds) {
        this.subscript$set.apply(this, arguments);
    };
    /*Swift.(file)._ContiguousArrayBuffer.isUniquelyReferenced()*/
    /*Swift.(file)._ContiguousArrayBuffer.isUniquelyReferenced()*/
    _ContiguousArrayBuffer.prototype.isUniquelyReferenced = function ($info) {
        throw 'unsupported method Swift.(file)._ContiguousArrayBuffer.isUniquelyReferenced() in ' + this.constructor.name;
    };
    /*Swift.(file)._ContiguousArrayBuffer.owner*/
    _ContiguousArrayBuffer.prototype.owner$get = function () {
        throw 'unsupported variable Swift.(file)._ContiguousArrayBuffer.owner in ' + this.constructor.name;
    };
    Object.defineProperty(_ContiguousArrayBuffer.prototype, "owner", {
        get: function () { return this.owner$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file)._ContiguousArrayBuffer.nativeOwner*/
    _ContiguousArrayBuffer.prototype.nativeOwner$get = function () {
        throw 'unsupported variable Swift.(file)._ContiguousArrayBuffer.nativeOwner in ' + this.constructor.name;
    };
    Object.defineProperty(_ContiguousArrayBuffer.prototype, "nativeOwner", {
        get: function () { return this.nativeOwner$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file)._ContiguousArrayBuffer.identity*/
    _ContiguousArrayBuffer.prototype.identity$get = function () {
        throw 'unsupported variable Swift.(file)._ContiguousArrayBuffer.identity in ' + this.constructor.name;
    };
    Object.defineProperty(_ContiguousArrayBuffer.prototype, "identity", {
        get: function () { return this.identity$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file)._ContiguousArrayBuffer.canStoreElements(ofDynamicType:Any.Type)*/
    /*Swift.(file)._ContiguousArrayBuffer.canStoreElements(ofDynamicType:Any.Type)*/
    _ContiguousArrayBuffer.prototype.canStoreElementsOfDynamicType = function ($info, proposedElementType) {
        throw 'unsupported method Swift.(file)._ContiguousArrayBuffer.canStoreElements(ofDynamicType:Any.Type) in ' + this.constructor.name;
    };
    /*Swift.(file)._ContiguousArrayBuffer.storesOnlyElementsOfType(_:U.Type)*/
    /*Swift.(file)._ContiguousArrayBuffer.storesOnlyElementsOfType(_:U.Type)*/
    _ContiguousArrayBuffer.prototype.storesOnlyElementsOfType = function ($info, _) {
        throw 'unsupported method Swift.(file)._ContiguousArrayBuffer.storesOnlyElementsOfType(_:U.Type) in ' + this.constructor.name;
    };
    /*Swift.(file)._ContiguousArrayBuffer.startIndex*/
    _ContiguousArrayBuffer.prototype.startIndex$get = function () {
        var _this = this;
        return 0;
    };
    Object.defineProperty(_ContiguousArrayBuffer.prototype, "startIndex", {
        get: function () { return this.startIndex$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file)._ContiguousArrayBuffer.endIndex*/
    _ContiguousArrayBuffer.prototype.endIndex$get = function () {
        var _this = this;
        return _this.count;
    };
    Object.defineProperty(_ContiguousArrayBuffer.prototype, "endIndex", {
        get: function () { return this.endIndex$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    _ContiguousArrayBuffer.prototype.init$vars = function () {
    };
    _ContiguousArrayBuffer.$struct = true;
    _ContiguousArrayBuffer.$infoAddress = '';
    return _ContiguousArrayBuffer;
}());
if (typeof _ArrayBufferProtocol$implementation != 'undefined')
    _mixin(_ContiguousArrayBuffer, _ArrayBufferProtocol$implementation, false);
if (typeof RandomAccessCollection$implementation != 'undefined')
    _mixin(_ContiguousArrayBuffer, RandomAccessCollection$implementation, false);
var LazyDropWhileSequence = /** @class */ (function () {
    function LazyDropWhileSequence() {
    }
    /*Swift.(file).LazyDropWhileSequence.init(_base:Base,predicate:(LazyDropWhileSequence<Base>.Element) -> Bool)*/
    /*Swift.(file).LazyDropWhileSequence.init(_base:Base,predicate:(LazyDropWhileSequence<Base>.Element) -> Bool)*/
    LazyDropWhileSequence.prototype.init_basePredicatefunction_type = function ($info, _base, predicate) {
        throw 'unsupported method Swift.(file).LazyDropWhileSequence.init(_base:Base,predicate:(LazyDropWhileSequence<Base>.Element) -> Bool) in ' + this.constructor.name;
    };
    /*Swift.(file).LazyDropWhileSequence.makeIterator()*/
    /*Swift.(file).Sequence.makeIterator()*/
    /*Swift.(file).Collection.makeIterator()*/
    LazyDropWhileSequence.prototype.makeIterator = function ($info) {
        var _this = this;
        return _create(LazyDropWhileSequence.Iterator, 'init_basePredicatefunction_type', {}, _this._base.makeIterator({}), _this._predicate);
    };
    /*Swift.(file).LazyDropWhileSequence.startIndex*/
    LazyDropWhileSequence.prototype.startIndex$get = function () {
        throw 'unsupported variable Swift.(file).LazyDropWhileSequence.startIndex in ' + this.constructor.name;
    };
    Object.defineProperty(LazyDropWhileSequence.prototype, "startIndex", {
        get: function () { return this.startIndex$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).LazyDropWhileSequence.endIndex*/
    LazyDropWhileSequence.prototype.endIndex$get = function () {
        throw 'unsupported variable Swift.(file).LazyDropWhileSequence.endIndex in ' + this.constructor.name;
    };
    Object.defineProperty(LazyDropWhileSequence.prototype, "endIndex", {
        get: function () { return this.endIndex$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).LazyDropWhileSequence.index(after:LazyDropWhileSequence<Base>.Index)*/
    /*Swift.(file).Collection.index(after:Self.Index)*/
    /*Swift.(file).BidirectionalCollection.index(after:Self.Index)*/
    LazyDropWhileSequence.prototype.indexAfter = function ($info, i) {
        throw 'unsupported method Swift.(file).LazyDropWhileSequence.index(after:LazyDropWhileSequence<Base>.Index) in ' + this.constructor.name;
    };
    /*Swift.(file).LazyDropWhileSequence.subscript(_:LazyDropWhileSequence<Base>.Index)*/
    /*Swift.(file).Collection.subscript(_:Self.Index)*/
    /*Swift.(file).BidirectionalCollection.subscript(_:Self.Index)*/
    LazyDropWhileSequence.prototype.subscript$get = function ($info, position) {
        throw 'unsupported method Swift.(file).LazyDropWhileSequence.subscript(_:LazyDropWhileSequence<Base>.Index) in ' + this.constructor.name;
    };
    /*Swift.(file).LazyDropWhileSequence.index(before:LazyDropWhileSequence<Base>.Index)*/
    /*Swift.(file).BidirectionalCollection.index(before:Self.Index)*/
    LazyDropWhileSequence.prototype.indexBefore = function ($info, i) {
        throw 'unsupported method Swift.(file).LazyDropWhileSequence.index(before:LazyDropWhileSequence<Base>.Index) in ' + this.constructor.name;
    };
    LazyDropWhileSequence.prototype.init$vars = function () {
    };
    var _80;
    LazyDropWhileSequence.$struct = true;
    LazyDropWhileSequence.$infoAddress = '';
    LazyDropWhileSequence.Iterator = (_80 = /** @class */ (function () {
            function class_104() {
            }
            /*Swift.(file).LazyDropWhileSequence.Iterator.init(_base:Base.Iterator,predicate:(LazyDropWhileSequence<Base>.Iterator.Element) -> Bool)*/
            /*Swift.(file).LazyDropWhileSequence.Iterator.init(_base:Base.Iterator,predicate:(LazyDropWhileSequence<Base>.Iterator.Element) -> Bool)*/
            class_104.prototype.init_basePredicatefunction_type = function ($info, _base, predicate) {
                throw 'unsupported method Swift.(file).LazyDropWhileSequence.Iterator.init(_base:Base.Iterator,predicate:(LazyDropWhileSequence<Base>.Iterator.Element) -> Bool) in ' + this.constructor.name;
            };
            /*Swift.(file).LazyDropWhileSequence.Iterator.next()*/
            /*Swift.(file).IteratorProtocol.next()*/
            class_104.prototype.next = function ($info) {
                var _this = this;
                if ((_this._predicateHasFailed)) {
                    return _this._base.next({ $setThis: function ($val) { return _this._base = $val; } });
                }
                ;
                while (true) {
                    var $ifLet0, nextElement_1;
                    if (!((($ifLet0 = _this._base.next({ $setThis: function ($val) { return _this._base = $val; } })) || true) && $ifLet0 != null && ((nextElement_1 = $ifLet0) || true)))
                        break;
                    if ((Bool.prefix_33({}, _this._predicate({}, nextElement_1)))) {
                        _this._predicateHasFailed = true;
                        return nextElement_1;
                    }
                    ;
                }
                ;
                return null;
            };
            class_104.prototype.init$vars = function () {
            };
            return class_104;
        }()),
        _80.$struct = true,
        _80.$infoAddress = '',
        _80);
    return LazyDropWhileSequence;
}());
if (typeof IteratorProtocol$implementation != 'undefined')
    _mixin(LazyDropWhileSequence.Iterator, IteratorProtocol$implementation, false);
if (typeof Sequence$implementation != 'undefined')
    _mixin(LazyDropWhileSequence, Sequence$implementation, false);
if (typeof LazySequenceProtocol$implementation != 'undefined')
    _mixin(LazyDropWhileSequence, LazySequenceProtocol$implementation, false);
if (typeof Collection$implementation != 'undefined')
    _mixin(LazyDropWhileSequence, Collection$implementation, false);
if (typeof BidirectionalCollection$implementation != 'undefined')
    _mixin(LazyDropWhileSequence, BidirectionalCollection$implementation, false);
if (typeof LazyCollectionProtocol$implementation != 'undefined')
    _mixin(LazyDropWhileSequence, LazyCollectionProtocol$implementation, false);
var EmptyCollection = /** @class */ (function () {
    function EmptyCollection() {
    }
    /*Swift.(file).EmptyCollection.init()*/
    /*Swift.(file).EmptyCollection.init()*/
    EmptyCollection.prototype.init = function ($info) {
        var _this = this;
        return;
    };
    /*Swift.(file).EmptyCollection.makeIterator()*/
    /*Swift.(file).Sequence.makeIterator()*/
    /*Swift.(file).Collection.makeIterator()*/
    EmptyCollection.prototype.makeIterator = function ($info) {
        var _this = this;
        return _create(EmptyCollection.Iterator, 'init', {});
    };
    /*Swift.(file).EmptyCollection.startIndex*/
    EmptyCollection.prototype.startIndex$get = function () {
        var _this = this;
        return 0;
    };
    Object.defineProperty(EmptyCollection.prototype, "startIndex", {
        get: function () { return this.startIndex$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).EmptyCollection.endIndex*/
    EmptyCollection.prototype.endIndex$get = function () {
        var _this = this;
        return 0;
    };
    Object.defineProperty(EmptyCollection.prototype, "endIndex", {
        get: function () { return this.endIndex$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).EmptyCollection.index(after:EmptyCollection<Element>.Index)*/
    /*Swift.(file).RandomAccessCollection.index(after:Self.Index)*/
    /*Swift.(file).BidirectionalCollection.index(after:Self.Index)*/
    /*Swift.(file).Collection.index(after:Self.Index)*/
    EmptyCollection.prototype.indexAfter = function ($info, i) {
        var _this = this;
        preconditionFailureFileLine({}, function () { return "EmptyCollection can't advance indices"; }, '?3', '?3');
    };
    /*Swift.(file).EmptyCollection.index(before:EmptyCollection<Element>.Index)*/
    /*Swift.(file).RandomAccessCollection.index(before:Self.Index)*/
    /*Swift.(file).BidirectionalCollection.index(before:Self.Index)*/
    EmptyCollection.prototype.indexBefore = function ($info, i) {
        var _this = this;
        preconditionFailureFileLine({}, function () { return "EmptyCollection can't advance indices"; }, '?3', '?3');
    };
    /*Swift.(file).EmptyCollection.subscript(_:EmptyCollection<Element>.Index)*/
    /*Swift.(file).RandomAccessCollection.subscript(_:Self.Index)*/
    /*Swift.(file).MutableCollection.subscript(_:Self.Index)*/
    /*Swift.(file).BidirectionalCollection.subscript(_:Self.Index)*/
    /*Swift.(file).Collection.subscript(_:Self.Index)*/
    EmptyCollection.prototype.subscript$get = function ($info, position) {
        var _this = this;
        preconditionFailureFileLine({}, function () { return "Index out of range"; }, '?3', '?3');
    }; /*Swift.(file).EmptyCollection.subscript(_:EmptyCollection<Element>.Index)*/
    /*Swift.(file).RandomAccessCollection.subscript(_:Self.Index)*/
    /*Swift.(file).MutableCollection.subscript(_:Self.Index)*/
    /*Swift.(file).BidirectionalCollection.subscript(_:Self.Index)*/
    /*Swift.(file).Collection.subscript(_:Self.Index)*/
    EmptyCollection.prototype.subscript$set = function ($info, newValue, position) {
        var _this = this;
        preconditionFailureFileLine({}, function () { return "Index out of range"; }, '?3', '?3');
    };
    /*Swift.(file).EmptyCollection.subscript(_:Range<EmptyCollection<Element>.Index>)*/
    /*Swift.(file).RandomAccessCollection.subscript(_:Range<Self.Index>)*/
    /*Swift.(file).MutableCollection.subscript(_:Range<Self.Index>)*/
    /*Swift.(file).BidirectionalCollection.subscript(_:Range<Self.Index>)*/
    /*Swift.(file).Collection.subscript(_:Range<Self.Index>)*/
    EmptyCollection.prototype.subscriptRange$get = function ($info, bounds) {
        var _this = this;
        preconditionFileLine({}, function () { return Bool.infix_38_38({}, Int.infix_61_61({}, bounds.lowerBound, 0), function () { return Int.infix_61_61({}, bounds.upperBound, 0); }); }, function () { return "Index out of range"; }, '?3', '?3');
        return _this;
    }; /*Swift.(file).EmptyCollection.subscript(_:Range<EmptyCollection<Element>.Index>)*/
    /*Swift.(file).RandomAccessCollection.subscript(_:Range<Self.Index>)*/
    /*Swift.(file).MutableCollection.subscript(_:Range<Self.Index>)*/
    /*Swift.(file).BidirectionalCollection.subscript(_:Range<Self.Index>)*/
    /*Swift.(file).Collection.subscript(_:Range<Self.Index>)*/
    EmptyCollection.prototype.subscriptRange$set = function ($info, newValue, bounds) {
        var _this = this;
        preconditionFileLine({}, function () { return Bool.infix_38_38({}, Int.infix_61_61({}, bounds.lowerBound, 0), function () { return Int.infix_61_61({}, bounds.upperBound, 0); }); }, function () { return "Index out of range"; }, '?3', '?3');
    };
    /*Swift.(file).EmptyCollection.count*/
    EmptyCollection.prototype.count$get = function () {
        var _this = this;
        return 0;
    };
    Object.defineProperty(EmptyCollection.prototype, "count", {
        get: function () { return this.count$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).EmptyCollection.index(_:EmptyCollection<Element>.Index,offsetBy:Int)*/
    /*Swift.(file).RandomAccessCollection.index(_:Self.Index,offsetBy:Int)*/
    /*Swift.(file).BidirectionalCollection.index(_:Self.Index,offsetBy:Int)*/
    /*Swift.(file).Collection.index(_:Self.Index,offsetBy:Int)*/
    EmptyCollection.prototype.indexOffsetBy = function ($info, i, n) {
        var _this = this;
        preconditionFileLine({}, function () { return Bool.infix_38_38({}, Int.infix_61_61({}, i, _this.startIndex), function () { return Int.infix_61_61({}, n, 0); }); }, function () { return "Index out of range"; }, '?3', '?3');
        return i;
    };
    /*Swift.(file).EmptyCollection.index(_:EmptyCollection<Element>.Index,offsetBy:Int,limitedBy:EmptyCollection<Element>.Index)*/
    /*Swift.(file).RandomAccessCollection.index(_:Self.Index,offsetBy:Int,limitedBy:Self.Index)*/
    /*Swift.(file).BidirectionalCollection.index(_:Self.Index,offsetBy:Int,limitedBy:Self.Index)*/
    /*Swift.(file).Collection.index(_:Self.Index,offsetBy:Int,limitedBy:Self.Index)*/
    EmptyCollection.prototype.indexOffsetByLimitedBy = function ($info, i, n, limit) {
        var _this = this;
        preconditionFileLine({}, function () { return Bool.infix_38_38({}, Int.infix_61_61({}, i, _this.startIndex), function () { return Int.infix_61_61({}, limit, _this.startIndex); }); }, function () { return "Index out of range"; }, '?3', '?3');
        return (Int.infix_61_61({}, n, 0) ? i : null);
    };
    /*Swift.(file).EmptyCollection.distance(from:EmptyCollection<Element>.Index,to:EmptyCollection<Element>.Index)*/
    /*Swift.(file).RandomAccessCollection.distance(from:Self.Index,to:Self.Index)*/
    /*Swift.(file).BidirectionalCollection.distance(from:Self.Index,to:Self.Index)*/
    /*Swift.(file).Collection.distance(from:Self.Index,to:Self.Index)*/
    EmptyCollection.prototype.distanceFromTo = function ($info, start, end) {
        var _this = this;
        preconditionFileLine({}, function () { return Int.infix_61_61({}, start, 0); }, function () { return "From must be startIndex (or endIndex)"; }, '?3', '?3');
        preconditionFileLine({}, function () { return Int.infix_61_61({}, end, 0); }, function () { return "To must be endIndex (or startIndex)"; }, '?3', '?3');
        return 0;
    };
    /*Swift.(file).EmptyCollection.==infix(_:EmptyCollection<Element>,_:EmptyCollection<Element>)*/
    /*Swift.(file).Equatable.==infix(_:Self,_:Self)*/
    EmptyCollection.infix_61_61 = function ($info, lhs, rhs) {
        var _this = this;
        return true;
    };
    EmptyCollection.prototype.init$vars = function () {
    };
    var _81;
    EmptyCollection.$struct = true;
    EmptyCollection.$infoAddress = '';
    EmptyCollection.Iterator = (_81 = /** @class */ (function () {
            function class_105() {
            }
            /*Swift.(file).EmptyCollection.Iterator.init()*/
            /*Swift.(file).EmptyCollection.Iterator.init()*/
            class_105.prototype.init = function ($info) {
                var _this = this;
                return;
            };
            /*Swift.(file).EmptyCollection.Iterator.next()*/
            /*Swift.(file).IteratorProtocol.next()*/
            class_105.prototype.next = function ($info) {
                var _this = this;
                return null;
            };
            class_105.prototype.init$vars = function () {
            };
            return class_105;
        }()),
        _81.$struct = true,
        _81.$infoAddress = '',
        _81);
    return EmptyCollection;
}());
if (typeof IteratorProtocol$implementation != 'undefined')
    _mixin(EmptyCollection.Iterator, IteratorProtocol$implementation, false);
if (typeof Sequence$implementation != 'undefined')
    _mixin(EmptyCollection.Iterator, Sequence$implementation, false);
if (typeof Sequence$implementation != 'undefined')
    _mixin(EmptyCollection, Sequence$implementation, false);
if (typeof RandomAccessCollection$implementation != 'undefined')
    _mixin(EmptyCollection, RandomAccessCollection$implementation, false);
if (typeof MutableCollection$implementation != 'undefined')
    _mixin(EmptyCollection, MutableCollection$implementation, false);
if (typeof Equatable$implementation != 'undefined')
    _mixin(EmptyCollection, Equatable$implementation, false);
var LazyFilterSequence = /** @class */ (function () {
    function LazyFilterSequence() {
    }
    /*Swift.(file).LazyFilterSequence.init(_base:Base,_:(Base.Element) -> Bool)*/
    /*Swift.(file).LazyFilterSequence.init(_base:Base,_:(Base.Element) -> Bool)*/
    LazyFilterSequence.prototype.init_basefunction_type = function ($info, base, isIncluded) {
        throw 'unsupported method Swift.(file).LazyFilterSequence.init(_base:Base,_:(Base.Element) -> Bool) in ' + this.constructor.name;
    };
    /*Swift.(file).LazyFilterSequence.makeIterator()*/
    /*Swift.(file).Sequence.makeIterator()*/
    /*Swift.(file).Collection.makeIterator()*/
    LazyFilterSequence.prototype.makeIterator = function ($info) {
        var _this = this;
        return _create(LazyFilterSequence.Iterator, 'init_basefunction_type', {}, _this._base.makeIterator({}), _this._predicate);
    };
    /*Swift.(file).LazyFilterSequence.underestimatedCount*/
    LazyFilterSequence.prototype.underestimatedCount$get = function () {
        throw 'unsupported variable Swift.(file).LazyFilterSequence.underestimatedCount in ' + this.constructor.name;
    };
    Object.defineProperty(LazyFilterSequence.prototype, "underestimatedCount", {
        get: function () { return this.underestimatedCount$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).LazyFilterSequence.startIndex*/
    LazyFilterSequence.prototype.startIndex$get = function () {
        throw 'unsupported variable Swift.(file).LazyFilterSequence.startIndex in ' + this.constructor.name;
    };
    Object.defineProperty(LazyFilterSequence.prototype, "startIndex", {
        get: function () { return this.startIndex$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).LazyFilterSequence.endIndex*/
    LazyFilterSequence.prototype.endIndex$get = function () {
        throw 'unsupported variable Swift.(file).LazyFilterSequence.endIndex in ' + this.constructor.name;
    };
    Object.defineProperty(LazyFilterSequence.prototype, "endIndex", {
        get: function () { return this.endIndex$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).LazyFilterSequence.index(after:LazyFilterSequence<Base>.Index)*/
    /*Swift.(file).Collection.index(after:Self.Index)*/
    /*Swift.(file).BidirectionalCollection.index(after:Self.Index)*/
    LazyFilterSequence.prototype.indexAfter = function ($info, i) {
        throw 'unsupported method Swift.(file).LazyFilterSequence.index(after:LazyFilterSequence<Base>.Index) in ' + this.constructor.name;
    };
    /*Swift.(file).LazyFilterSequence.formIndex(after:LazyFilterSequence<Base>.Index)*/
    /*Swift.(file).Collection.formIndex(after:Self.Index)*/
    /*Swift.(file).BidirectionalCollection.formIndex(after:Self.Index)*/
    LazyFilterSequence.prototype.formIndexAfter = function ($info, i$inout) {
        var _this = this;
        var i = i$inout.get();
        var $result = (function () {
            i = _this.indexAfter({}, i);
        })();
        i$inout.set(i);
        return $result;
    };
    /*Swift.(file).LazyFilterSequence.distance(from:LazyFilterSequence<Base>.Index,to:LazyFilterSequence<Base>.Index)*/
    /*Swift.(file).Collection.distance(from:Self.Index,to:Self.Index)*/
    /*Swift.(file).BidirectionalCollection.distance(from:Self.Index,to:Self.Index)*/
    LazyFilterSequence.prototype.distanceFromTo = function ($info, start, end) {
        var _this = this;
        preconditionFileLine({}, function () { return (_.arg0 = start).constructor.infix_60_61({}, _.arg0, end); }, function () { return "Only BidirectionalCollections can have end come before start"; }, '?3', '?3');
        var start_dupl = start;
        var count = 0;
        while (true) {
            if (!(((_.arg1 = start_dupl).constructor.infix_33_61({}, _.arg1, end))))
                break;
            count = Int.infix_43({}, count, 1);
            _this.formIndexAfter({}, { get: function () { return start_dupl; }, set: function ($val) { return start_dupl = $val; } });
        }
        ;
        return count;
    };
    /*Swift.(file).LazyFilterSequence.index(_:LazyFilterSequence<Base>.Index,offsetBy:Int)*/
    /*Swift.(file).Collection.index(_:Self.Index,offsetBy:Int)*/
    /*Swift.(file).BidirectionalCollection.index(_:Self.Index,offsetBy:Int)*/
    LazyFilterSequence.prototype.indexOffsetBy = function ($info, i, n) {
        var _this = this;
        return _this._advanceForwardBy({}, i, distance);
    };
    /*Swift.(file).LazyFilterSequence.formIndex(_:LazyFilterSequence<Base>.Index,offsetBy:Int)*/
    /*Swift.(file).LazyFilterSequence.formIndex(_:LazyFilterSequence<Base>.Index,offsetBy:Int)*/
    LazyFilterSequence.prototype.formIndexOffsetBy = function ($info, i$inout, n) {
        throw 'unsupported method Swift.(file).LazyFilterSequence.formIndex(_:LazyFilterSequence<Base>.Index,offsetBy:Int) in ' + this.constructor.name;
    };
    /*Swift.(file).LazyFilterSequence.index(_:LazyFilterSequence<Base>.Index,offsetBy:Int,limitedBy:LazyFilterSequence<Base>.Index)*/
    /*Swift.(file).Collection.index(_:Self.Index,offsetBy:Int,limitedBy:Self.Index)*/
    /*Swift.(file).BidirectionalCollection.index(_:Self.Index,offsetBy:Int,limitedBy:Self.Index)*/
    LazyFilterSequence.prototype.indexOffsetByLimitedBy = function ($info, i, n, limit) {
        var _this = this;
        return _this._advanceForwardByLimitedBy({}, i, distance, limit);
    };
    /*Swift.(file).LazyFilterSequence.formIndex(_:LazyFilterSequence<Base>.Index,offsetBy:Int,limitedBy:LazyFilterSequence<Base>.Index)*/
    /*Swift.(file).LazyFilterSequence.formIndex(_:LazyFilterSequence<Base>.Index,offsetBy:Int,limitedBy:LazyFilterSequence<Base>.Index)*/
    LazyFilterSequence.prototype.formIndexOffsetByLimitedBy = function ($info, i$inout, n, limit) {
        throw 'unsupported method Swift.(file).LazyFilterSequence.formIndex(_:LazyFilterSequence<Base>.Index,offsetBy:Int,limitedBy:LazyFilterSequence<Base>.Index) in ' + this.constructor.name;
    };
    /*Swift.(file).LazyFilterSequence.subscript(_:LazyFilterSequence<Base>.Index)*/
    /*Swift.(file).Collection.subscript(_:Self.Index)*/
    /*Swift.(file).BidirectionalCollection.subscript(_:Self.Index)*/
    LazyFilterSequence.prototype.subscript$get = function ($info, position) {
        throw 'unsupported method Swift.(file).LazyFilterSequence.subscript(_:LazyFilterSequence<Base>.Index) in ' + this.constructor.name;
    };
    /*Swift.(file).LazyFilterSequence.subscript(_:Range<LazyFilterSequence<Base>.Index>)*/
    /*Swift.(file).Collection.subscript(_:Range<Self.Index>)*/
    /*Swift.(file).BidirectionalCollection.subscript(_:Range<Self.Index>)*/
    LazyFilterSequence.prototype.subscriptRange$get = function ($info, bounds) {
        var _this = this;
        return _create(Slice, 'initBaseBoundsRange', {}, _this, bounds);
    };
    /*Swift.(file).LazyFilterSequence.index(before:LazyFilterSequence<Base>.Index)*/
    /*Swift.(file).BidirectionalCollection.index(before:Self.Index)*/
    LazyFilterSequence.prototype.indexBefore = function ($info, i) {
        throw 'unsupported method Swift.(file).LazyFilterSequence.index(before:LazyFilterSequence<Base>.Index) in ' + this.constructor.name;
    };
    /*Swift.(file).LazyFilterSequence.formIndex(before:LazyFilterSequence<Base>.Index)*/
    /*Swift.(file).BidirectionalCollection.formIndex(before:Self.Index)*/
    LazyFilterSequence.prototype.formIndexBefore = function ($info, i$inout) {
        var _this = this;
        var i = i$inout.get();
        var $result = (function () {
            i = _this.indexBefore({}, i);
        })();
        i$inout.set(i);
        return $result;
    };
    /*Swift.(file).LazyFilterSequence.filter(_:(LazyFilterSequence<Base>.Element) -> Bool)*/
    /*Swift.(file).LazyFilterSequence.filter(_:(LazyFilterSequence<Base>.Element) -> Bool)*/
    LazyFilterSequence.prototype.filterSwift = function ($info, isIncluded) {
        var _this = this;
        return _create(LazyFilterSequence, 'init_basefunction_type', {}, _this._base, (function ($info, $0) { return Bool.infix_38_38({}, isIncluded({}, $0), function () { return _this._predicate({}, $0); }); }));
    };
    LazyFilterSequence.prototype.init$vars = function () {
    };
    var _82;
    LazyFilterSequence.$struct = true;
    LazyFilterSequence.$infoAddress = '';
    LazyFilterSequence.Iterator = (_82 = /** @class */ (function () {
            function class_106() {
            }
            /*Swift.(file).LazyFilterSequence.Iterator.base*/
            class_106.prototype.base$get = function () {
                var _this = this;
                return _this._base;
            };
            Object.defineProperty(class_106.prototype, "base", {
                get: function () { return this.base$get(); },
                enumerable: true,
                configurable: true
            });
            ;
            /*Swift.(file).LazyFilterSequence.Iterator.init(_base:Base.Iterator,_:(Base.Element) -> Bool)*/
            /*Swift.(file).LazyFilterSequence.Iterator.init(_base:Base.Iterator,_:(Base.Element) -> Bool)*/
            class_106.prototype.init_basefunction_type = function ($info, _base, isIncluded) {
                throw 'unsupported method Swift.(file).LazyFilterSequence.Iterator.init(_base:Base.Iterator,_:(Base.Element) -> Bool) in ' + this.constructor.name;
            };
            /*Swift.(file).LazyFilterSequence.Iterator.next()*/
            /*Swift.(file).IteratorProtocol.next()*/
            class_106.prototype.next = function ($info) {
                var _this = this;
                while (true) {
                    var $ifLet0, n_1;
                    if (!((($ifLet0 = _this._base.next({ $setThis: function ($val) { return _this._base = $val; } })) || true) && $ifLet0 != null && ((n_1 = $ifLet0) || true)))
                        break;
                    if ((_this._predicate({}, n_1))) {
                        return n_1;
                    }
                    ;
                }
                ;
                return null;
            };
            class_106.prototype.init$vars = function () {
            };
            return class_106;
        }()),
        _82.$struct = true,
        _82.$infoAddress = '',
        _82);
    return LazyFilterSequence;
}());
if (typeof IteratorProtocol$implementation != 'undefined')
    _mixin(LazyFilterSequence.Iterator, IteratorProtocol$implementation, false);
if (typeof Sequence$implementation != 'undefined')
    _mixin(LazyFilterSequence.Iterator, Sequence$implementation, false);
if (typeof Sequence$implementation != 'undefined')
    _mixin(LazyFilterSequence, Sequence$implementation, false);
if (typeof LazySequenceProtocol$implementation != 'undefined')
    _mixin(LazyFilterSequence, LazySequenceProtocol$implementation, false);
if (typeof Collection$implementation != 'undefined')
    _mixin(LazyFilterSequence, Collection$implementation, false);
if (typeof LazyCollectionProtocol$implementation != 'undefined')
    _mixin(LazyFilterSequence, LazyCollectionProtocol$implementation, false);
if (typeof BidirectionalCollection$implementation != 'undefined')
    _mixin(LazyFilterSequence, BidirectionalCollection$implementation, false);
var _FixedArray2 = /** @class */ (function () {
    function _FixedArray2() {
    }
    /*Swift.(file)._FixedArray2.storage*/
    _FixedArray2.prototype.storage$get = function () {
        throw 'unsupported variable Swift.(file)._FixedArray2.storage in ' + this.constructor.name;
    };
    Object.defineProperty(_FixedArray2.prototype, "storage", {
        get: function () { return this.storage$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file)._FixedArray2.init(storage:(T, T),_count:Int8)*/
    /*Swift.(file)._FixedArray2.init(storage:(T, T),_count:Int8)*/
    _FixedArray2.prototype.initStoragetuple_type_countInt8 = function ($info, storage, _count) {
        throw 'unsupported method Swift.(file)._FixedArray2.init(storage:(T, T),_count:Int8) in ' + this.constructor.name;
    };
    /*Swift.(file)._FixedArray2.capacity*/
    _FixedArray2.capacity$get = function () {
        throw 'unsupported variable Swift.(file)._FixedArray2.capacity in ' + this.constructor.name;
    };
    Object.defineProperty(_FixedArray2, "capacity", {
        get: function () { return this.capacity$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file)._FixedArray2.capacity*/
    _FixedArray2.prototype.capacity$get = function () {
        throw 'unsupported variable Swift.(file)._FixedArray2.capacity in ' + this.constructor.name;
    };
    Object.defineProperty(_FixedArray2.prototype, "capacity", {
        get: function () { return this.capacity$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file)._FixedArray2.count*/
    _FixedArray2.prototype.count$get = function () {
        var _this = this;
        return _this.distanceFromTo({}, _this.startIndex, _this.endIndex);
    };
    Object.defineProperty(_FixedArray2.prototype, "count", {
        get: function () { return this.count$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file)._FixedArray2.startIndex*/
    _FixedArray2.prototype.startIndex$get = function () {
        throw 'unsupported variable Swift.(file)._FixedArray2.startIndex in ' + this.constructor.name;
    };
    Object.defineProperty(_FixedArray2.prototype, "startIndex", {
        get: function () { return this.startIndex$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file)._FixedArray2.endIndex*/
    _FixedArray2.prototype.endIndex$get = function () {
        throw 'unsupported variable Swift.(file)._FixedArray2.endIndex in ' + this.constructor.name;
    };
    Object.defineProperty(_FixedArray2.prototype, "endIndex", {
        get: function () { return this.endIndex$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file)._FixedArray2.subscript(_:_FixedArray2<T>.Index)*/
    /*Swift.(file).RandomAccessCollection.subscript(_:Self.Index)*/
    /*Swift.(file).MutableCollection.subscript(_:Self.Index)*/
    /*Swift.(file).BidirectionalCollection.subscript(_:Self.Index)*/
    /*Swift.(file).Collection.subscript(_:Self.Index)*/
    _FixedArray2.prototype.subscript$get = function ($info, i) {
        throw 'unsupported method Swift.(file)._FixedArray2.subscript(_:_FixedArray2<T>.Index) in ' + this.constructor.name;
    }; /*Swift.(file)._FixedArray2.subscript(_:_FixedArray2<T>.Index)*/
    /*Swift.(file).RandomAccessCollection.subscript(_:Self.Index)*/
    /*Swift.(file).MutableCollection.subscript(_:Self.Index)*/
    /*Swift.(file).BidirectionalCollection.subscript(_:Self.Index)*/
    /*Swift.(file).Collection.subscript(_:Self.Index)*/
    _FixedArray2.prototype.subscript$set = function ($info, newValue, i) {
        throw 'unsupported method Swift.(file)._FixedArray2.subscript(_:_FixedArray2<T>.Index) in ' + this.constructor.name;
    };
    /*Swift.(file)._FixedArray2.index(after:_FixedArray2<T>.Index)*/
    /*Swift.(file).RandomAccessCollection.index(after:Self.Index)*/
    /*Swift.(file).BidirectionalCollection.index(after:Self.Index)*/
    /*Swift.(file).Collection.index(after:Self.Index)*/
    _FixedArray2.prototype.indexAfter = function ($info, i) {
        throw 'unsupported method Swift.(file)._FixedArray2.index(after:_FixedArray2<T>.Index) in ' + this.constructor.name;
    };
    /*Swift.(file)._FixedArray2.index(before:_FixedArray2<T>.Index)*/
    /*Swift.(file).RandomAccessCollection.index(before:Self.Index)*/
    /*Swift.(file).BidirectionalCollection.index(before:Self.Index)*/
    _FixedArray2.prototype.indexBefore = function ($info, i) {
        throw 'unsupported method Swift.(file)._FixedArray2.index(before:_FixedArray2<T>.Index) in ' + this.constructor.name;
    };
    /*Swift.(file)._FixedArray2.append(_:T)*/
    /*Swift.(file)._FixedArray2.append(_:T)*/
    _FixedArray2.prototype.append = function ($info, newElement) {
        throw 'unsupported method Swift.(file)._FixedArray2.append(_:T) in ' + this.constructor.name;
    };
    /*Swift.(file)._FixedArray2.init(count:Int)*/
    /*Swift.(file)._FixedArray2.init(count:Int)*/
    _FixedArray2.prototype.initCountInt = function ($info, count) {
        throw 'unsupported method Swift.(file)._FixedArray2.init(count:Int) in ' + this.constructor.name;
    };
    /*Swift.(file)._FixedArray2.init()*/
    /*Swift.(file)._FixedArray2.init()*/
    _FixedArray2.prototype.init = function ($info) {
        throw 'unsupported method Swift.(file)._FixedArray2.init() in ' + this.constructor.name;
    };
    /*Swift.(file)._FixedArray2.init(allZeros:())*/
    /*Swift.(file)._FixedArray2.init(allZeros:())*/
    _FixedArray2.prototype.initAllZerostuple_type = function ($info, allZeros) {
        throw 'unsupported method Swift.(file)._FixedArray2.init(allZeros:()) in ' + this.constructor.name;
    };
    /*Swift.(file)._FixedArray2.withUnsafeMutableBufferPointer(_:(UnsafeMutableBufferPointer<_FixedArray2<T>.Element>) throws -> R)*/
    /*Swift.(file)._FixedArray2.withUnsafeMutableBufferPointer(_:(UnsafeMutableBufferPointer<_FixedArray2<T>.Element>) throws -> R)*/
    _FixedArray2.prototype.withUnsafeMutableBufferPointer = function ($info, body) {
        throw 'unsupported method Swift.(file)._FixedArray2.withUnsafeMutableBufferPointer(_:(UnsafeMutableBufferPointer<_FixedArray2<T>.Element>) throws -> R) in ' + this.constructor.name;
    };
    /*Swift.(file)._FixedArray2.withUnsafeBufferPointer(_:(UnsafeBufferPointer<_FixedArray2<T>.Element>) throws -> R)*/
    /*Swift.(file)._FixedArray2.withUnsafeBufferPointer(_:(UnsafeBufferPointer<_FixedArray2<T>.Element>) throws -> R)*/
    _FixedArray2.prototype.withUnsafeBufferPointer = function ($info, body) {
        throw 'unsupported method Swift.(file)._FixedArray2.withUnsafeBufferPointer(_:(UnsafeBufferPointer<_FixedArray2<T>.Element>) throws -> R) in ' + this.constructor.name;
    };
    _FixedArray2.prototype.init$vars = function () {
    };
    _FixedArray2.$struct = true;
    _FixedArray2.$infoAddress = '';
    return _FixedArray2;
}());
if (typeof RandomAccessCollection$implementation != 'undefined')
    _mixin(_FixedArray2, RandomAccessCollection$implementation, false);
if (typeof MutableCollection$implementation != 'undefined')
    _mixin(_FixedArray2, MutableCollection$implementation, false);
var _FixedArray4 = /** @class */ (function () {
    function _FixedArray4() {
    }
    /*Swift.(file)._FixedArray4.storage*/
    _FixedArray4.prototype.storage$get = function () {
        throw 'unsupported variable Swift.(file)._FixedArray4.storage in ' + this.constructor.name;
    };
    Object.defineProperty(_FixedArray4.prototype, "storage", {
        get: function () { return this.storage$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file)._FixedArray4.init(storage:(T, T, T, T),_count:Int8)*/
    /*Swift.(file)._FixedArray4.init(storage:(T, T, T, T),_count:Int8)*/
    _FixedArray4.prototype.initStoragetuple_type_countInt8 = function ($info, storage, _count) {
        throw 'unsupported method Swift.(file)._FixedArray4.init(storage:(T, T, T, T),_count:Int8) in ' + this.constructor.name;
    };
    /*Swift.(file)._FixedArray4.capacity*/
    _FixedArray4.capacity$get = function () {
        throw 'unsupported variable Swift.(file)._FixedArray4.capacity in ' + this.constructor.name;
    };
    Object.defineProperty(_FixedArray4, "capacity", {
        get: function () { return this.capacity$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file)._FixedArray4.capacity*/
    _FixedArray4.prototype.capacity$get = function () {
        throw 'unsupported variable Swift.(file)._FixedArray4.capacity in ' + this.constructor.name;
    };
    Object.defineProperty(_FixedArray4.prototype, "capacity", {
        get: function () { return this.capacity$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file)._FixedArray4.count*/
    _FixedArray4.prototype.count$get = function () {
        var _this = this;
        return _this.distanceFromTo({}, _this.startIndex, _this.endIndex);
    };
    Object.defineProperty(_FixedArray4.prototype, "count", {
        get: function () { return this.count$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file)._FixedArray4.startIndex*/
    _FixedArray4.prototype.startIndex$get = function () {
        throw 'unsupported variable Swift.(file)._FixedArray4.startIndex in ' + this.constructor.name;
    };
    Object.defineProperty(_FixedArray4.prototype, "startIndex", {
        get: function () { return this.startIndex$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file)._FixedArray4.endIndex*/
    _FixedArray4.prototype.endIndex$get = function () {
        throw 'unsupported variable Swift.(file)._FixedArray4.endIndex in ' + this.constructor.name;
    };
    Object.defineProperty(_FixedArray4.prototype, "endIndex", {
        get: function () { return this.endIndex$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file)._FixedArray4.subscript(_:_FixedArray4<T>.Index)*/
    /*Swift.(file).RandomAccessCollection.subscript(_:Self.Index)*/
    /*Swift.(file).MutableCollection.subscript(_:Self.Index)*/
    /*Swift.(file).BidirectionalCollection.subscript(_:Self.Index)*/
    /*Swift.(file).Collection.subscript(_:Self.Index)*/
    _FixedArray4.prototype.subscript$get = function ($info, i) {
        throw 'unsupported method Swift.(file)._FixedArray4.subscript(_:_FixedArray4<T>.Index) in ' + this.constructor.name;
    }; /*Swift.(file)._FixedArray4.subscript(_:_FixedArray4<T>.Index)*/
    /*Swift.(file).RandomAccessCollection.subscript(_:Self.Index)*/
    /*Swift.(file).MutableCollection.subscript(_:Self.Index)*/
    /*Swift.(file).BidirectionalCollection.subscript(_:Self.Index)*/
    /*Swift.(file).Collection.subscript(_:Self.Index)*/
    _FixedArray4.prototype.subscript$set = function ($info, newValue, i) {
        throw 'unsupported method Swift.(file)._FixedArray4.subscript(_:_FixedArray4<T>.Index) in ' + this.constructor.name;
    };
    /*Swift.(file)._FixedArray4.index(after:_FixedArray4<T>.Index)*/
    /*Swift.(file).RandomAccessCollection.index(after:Self.Index)*/
    /*Swift.(file).BidirectionalCollection.index(after:Self.Index)*/
    /*Swift.(file).Collection.index(after:Self.Index)*/
    _FixedArray4.prototype.indexAfter = function ($info, i) {
        throw 'unsupported method Swift.(file)._FixedArray4.index(after:_FixedArray4<T>.Index) in ' + this.constructor.name;
    };
    /*Swift.(file)._FixedArray4.index(before:_FixedArray4<T>.Index)*/
    /*Swift.(file).RandomAccessCollection.index(before:Self.Index)*/
    /*Swift.(file).BidirectionalCollection.index(before:Self.Index)*/
    _FixedArray4.prototype.indexBefore = function ($info, i) {
        throw 'unsupported method Swift.(file)._FixedArray4.index(before:_FixedArray4<T>.Index) in ' + this.constructor.name;
    };
    /*Swift.(file)._FixedArray4.append(_:T)*/
    /*Swift.(file)._FixedArray4.append(_:T)*/
    _FixedArray4.prototype.append = function ($info, newElement) {
        throw 'unsupported method Swift.(file)._FixedArray4.append(_:T) in ' + this.constructor.name;
    };
    /*Swift.(file)._FixedArray4.init(count:Int)*/
    /*Swift.(file)._FixedArray4.init(count:Int)*/
    _FixedArray4.prototype.initCountInt = function ($info, count) {
        throw 'unsupported method Swift.(file)._FixedArray4.init(count:Int) in ' + this.constructor.name;
    };
    /*Swift.(file)._FixedArray4.init()*/
    /*Swift.(file)._FixedArray4.init()*/
    _FixedArray4.prototype.init = function ($info) {
        throw 'unsupported method Swift.(file)._FixedArray4.init() in ' + this.constructor.name;
    };
    /*Swift.(file)._FixedArray4.init(allZeros:())*/
    /*Swift.(file)._FixedArray4.init(allZeros:())*/
    _FixedArray4.prototype.initAllZerostuple_type = function ($info, allZeros) {
        throw 'unsupported method Swift.(file)._FixedArray4.init(allZeros:()) in ' + this.constructor.name;
    };
    /*Swift.(file)._FixedArray4.withUnsafeMutableBufferPointer(_:(UnsafeMutableBufferPointer<_FixedArray4<T>.Element>) throws -> R)*/
    /*Swift.(file)._FixedArray4.withUnsafeMutableBufferPointer(_:(UnsafeMutableBufferPointer<_FixedArray4<T>.Element>) throws -> R)*/
    _FixedArray4.prototype.withUnsafeMutableBufferPointer = function ($info, body) {
        throw 'unsupported method Swift.(file)._FixedArray4.withUnsafeMutableBufferPointer(_:(UnsafeMutableBufferPointer<_FixedArray4<T>.Element>) throws -> R) in ' + this.constructor.name;
    };
    /*Swift.(file)._FixedArray4.withUnsafeBufferPointer(_:(UnsafeBufferPointer<_FixedArray4<T>.Element>) throws -> R)*/
    /*Swift.(file)._FixedArray4.withUnsafeBufferPointer(_:(UnsafeBufferPointer<_FixedArray4<T>.Element>) throws -> R)*/
    _FixedArray4.prototype.withUnsafeBufferPointer = function ($info, body) {
        throw 'unsupported method Swift.(file)._FixedArray4.withUnsafeBufferPointer(_:(UnsafeBufferPointer<_FixedArray4<T>.Element>) throws -> R) in ' + this.constructor.name;
    };
    _FixedArray4.prototype.init$vars = function () {
    };
    _FixedArray4.$struct = true;
    _FixedArray4.$infoAddress = '';
    return _FixedArray4;
}());
if (typeof RandomAccessCollection$implementation != 'undefined')
    _mixin(_FixedArray4, RandomAccessCollection$implementation, false);
if (typeof MutableCollection$implementation != 'undefined')
    _mixin(_FixedArray4, MutableCollection$implementation, false);
var _FixedArray8 = /** @class */ (function () {
    function _FixedArray8() {
    }
    /*Swift.(file)._FixedArray8.storage*/
    _FixedArray8.prototype.storage$get = function () {
        throw 'unsupported variable Swift.(file)._FixedArray8.storage in ' + this.constructor.name;
    };
    Object.defineProperty(_FixedArray8.prototype, "storage", {
        get: function () { return this.storage$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file)._FixedArray8.init(storage:(T, T, T, T, T, T, T, T),_count:Int8)*/
    /*Swift.(file)._FixedArray8.init(storage:(T, T, T, T, T, T, T, T),_count:Int8)*/
    _FixedArray8.prototype.initStoragetuple_type_countInt8 = function ($info, storage, _count) {
        throw 'unsupported method Swift.(file)._FixedArray8.init(storage:(T, T, T, T, T, T, T, T),_count:Int8) in ' + this.constructor.name;
    };
    /*Swift.(file)._FixedArray8.capacity*/
    _FixedArray8.capacity$get = function () {
        throw 'unsupported variable Swift.(file)._FixedArray8.capacity in ' + this.constructor.name;
    };
    Object.defineProperty(_FixedArray8, "capacity", {
        get: function () { return this.capacity$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file)._FixedArray8.capacity*/
    _FixedArray8.prototype.capacity$get = function () {
        throw 'unsupported variable Swift.(file)._FixedArray8.capacity in ' + this.constructor.name;
    };
    Object.defineProperty(_FixedArray8.prototype, "capacity", {
        get: function () { return this.capacity$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file)._FixedArray8.count*/
    _FixedArray8.prototype.count$get = function () {
        var _this = this;
        return _this.distanceFromTo({}, _this.startIndex, _this.endIndex);
    };
    Object.defineProperty(_FixedArray8.prototype, "count", {
        get: function () { return this.count$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file)._FixedArray8.startIndex*/
    _FixedArray8.prototype.startIndex$get = function () {
        throw 'unsupported variable Swift.(file)._FixedArray8.startIndex in ' + this.constructor.name;
    };
    Object.defineProperty(_FixedArray8.prototype, "startIndex", {
        get: function () { return this.startIndex$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file)._FixedArray8.endIndex*/
    _FixedArray8.prototype.endIndex$get = function () {
        throw 'unsupported variable Swift.(file)._FixedArray8.endIndex in ' + this.constructor.name;
    };
    Object.defineProperty(_FixedArray8.prototype, "endIndex", {
        get: function () { return this.endIndex$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file)._FixedArray8.subscript(_:_FixedArray8<T>.Index)*/
    /*Swift.(file).RandomAccessCollection.subscript(_:Self.Index)*/
    /*Swift.(file).MutableCollection.subscript(_:Self.Index)*/
    /*Swift.(file).BidirectionalCollection.subscript(_:Self.Index)*/
    /*Swift.(file).Collection.subscript(_:Self.Index)*/
    _FixedArray8.prototype.subscript$get = function ($info, i) {
        throw 'unsupported method Swift.(file)._FixedArray8.subscript(_:_FixedArray8<T>.Index) in ' + this.constructor.name;
    }; /*Swift.(file)._FixedArray8.subscript(_:_FixedArray8<T>.Index)*/
    /*Swift.(file).RandomAccessCollection.subscript(_:Self.Index)*/
    /*Swift.(file).MutableCollection.subscript(_:Self.Index)*/
    /*Swift.(file).BidirectionalCollection.subscript(_:Self.Index)*/
    /*Swift.(file).Collection.subscript(_:Self.Index)*/
    _FixedArray8.prototype.subscript$set = function ($info, newValue, i) {
        throw 'unsupported method Swift.(file)._FixedArray8.subscript(_:_FixedArray8<T>.Index) in ' + this.constructor.name;
    };
    /*Swift.(file)._FixedArray8.index(after:_FixedArray8<T>.Index)*/
    /*Swift.(file).RandomAccessCollection.index(after:Self.Index)*/
    /*Swift.(file).BidirectionalCollection.index(after:Self.Index)*/
    /*Swift.(file).Collection.index(after:Self.Index)*/
    _FixedArray8.prototype.indexAfter = function ($info, i) {
        throw 'unsupported method Swift.(file)._FixedArray8.index(after:_FixedArray8<T>.Index) in ' + this.constructor.name;
    };
    /*Swift.(file)._FixedArray8.index(before:_FixedArray8<T>.Index)*/
    /*Swift.(file).RandomAccessCollection.index(before:Self.Index)*/
    /*Swift.(file).BidirectionalCollection.index(before:Self.Index)*/
    _FixedArray8.prototype.indexBefore = function ($info, i) {
        throw 'unsupported method Swift.(file)._FixedArray8.index(before:_FixedArray8<T>.Index) in ' + this.constructor.name;
    };
    /*Swift.(file)._FixedArray8.append(_:T)*/
    /*Swift.(file)._FixedArray8.append(_:T)*/
    _FixedArray8.prototype.append = function ($info, newElement) {
        throw 'unsupported method Swift.(file)._FixedArray8.append(_:T) in ' + this.constructor.name;
    };
    /*Swift.(file)._FixedArray8.init(count:Int)*/
    /*Swift.(file)._FixedArray8.init(count:Int)*/
    _FixedArray8.prototype.initCountInt = function ($info, count) {
        throw 'unsupported method Swift.(file)._FixedArray8.init(count:Int) in ' + this.constructor.name;
    };
    /*Swift.(file)._FixedArray8.init()*/
    /*Swift.(file)._FixedArray8.init()*/
    _FixedArray8.prototype.init = function ($info) {
        throw 'unsupported method Swift.(file)._FixedArray8.init() in ' + this.constructor.name;
    };
    /*Swift.(file)._FixedArray8.init(allZeros:())*/
    /*Swift.(file)._FixedArray8.init(allZeros:())*/
    _FixedArray8.prototype.initAllZerostuple_type = function ($info, allZeros) {
        throw 'unsupported method Swift.(file)._FixedArray8.init(allZeros:()) in ' + this.constructor.name;
    };
    /*Swift.(file)._FixedArray8.withUnsafeMutableBufferPointer(_:(UnsafeMutableBufferPointer<_FixedArray8<T>.Element>) throws -> R)*/
    /*Swift.(file)._FixedArray8.withUnsafeMutableBufferPointer(_:(UnsafeMutableBufferPointer<_FixedArray8<T>.Element>) throws -> R)*/
    _FixedArray8.prototype.withUnsafeMutableBufferPointer = function ($info, body) {
        throw 'unsupported method Swift.(file)._FixedArray8.withUnsafeMutableBufferPointer(_:(UnsafeMutableBufferPointer<_FixedArray8<T>.Element>) throws -> R) in ' + this.constructor.name;
    };
    /*Swift.(file)._FixedArray8.withUnsafeBufferPointer(_:(UnsafeBufferPointer<_FixedArray8<T>.Element>) throws -> R)*/
    /*Swift.(file)._FixedArray8.withUnsafeBufferPointer(_:(UnsafeBufferPointer<_FixedArray8<T>.Element>) throws -> R)*/
    _FixedArray8.prototype.withUnsafeBufferPointer = function ($info, body) {
        throw 'unsupported method Swift.(file)._FixedArray8.withUnsafeBufferPointer(_:(UnsafeBufferPointer<_FixedArray8<T>.Element>) throws -> R) in ' + this.constructor.name;
    };
    _FixedArray8.prototype.init$vars = function () {
    };
    _FixedArray8.$struct = true;
    _FixedArray8.$infoAddress = '';
    return _FixedArray8;
}());
if (typeof RandomAccessCollection$implementation != 'undefined')
    _mixin(_FixedArray8, RandomAccessCollection$implementation, false);
if (typeof MutableCollection$implementation != 'undefined')
    _mixin(_FixedArray8, MutableCollection$implementation, false);
var _FixedArray16 = /** @class */ (function () {
    function _FixedArray16() {
    }
    /*Swift.(file)._FixedArray16.storage*/
    _FixedArray16.prototype.storage$get = function () {
        throw 'unsupported variable Swift.(file)._FixedArray16.storage in ' + this.constructor.name;
    };
    Object.defineProperty(_FixedArray16.prototype, "storage", {
        get: function () { return this.storage$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file)._FixedArray16.init(storage:(T, T, T, T, T, T, T, T, T, T, T, T, T, T, T, T),_count:Int8)*/
    /*Swift.(file)._FixedArray16.init(storage:(T, T, T, T, T, T, T, T, T, T, T, T, T, T, T, T),_count:Int8)*/
    _FixedArray16.prototype.initStoragetuple_type_countInt8 = function ($info, storage, _count) {
        throw 'unsupported method Swift.(file)._FixedArray16.init(storage:(T, T, T, T, T, T, T, T, T, T, T, T, T, T, T, T),_count:Int8) in ' + this.constructor.name;
    };
    /*Swift.(file)._FixedArray16.capacity*/
    _FixedArray16.capacity$get = function () {
        throw 'unsupported variable Swift.(file)._FixedArray16.capacity in ' + this.constructor.name;
    };
    Object.defineProperty(_FixedArray16, "capacity", {
        get: function () { return this.capacity$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file)._FixedArray16.capacity*/
    _FixedArray16.prototype.capacity$get = function () {
        throw 'unsupported variable Swift.(file)._FixedArray16.capacity in ' + this.constructor.name;
    };
    Object.defineProperty(_FixedArray16.prototype, "capacity", {
        get: function () { return this.capacity$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file)._FixedArray16.count*/
    _FixedArray16.prototype.count$get = function () {
        var _this = this;
        return _this.distanceFromTo({}, _this.startIndex, _this.endIndex);
    };
    Object.defineProperty(_FixedArray16.prototype, "count", {
        get: function () { return this.count$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file)._FixedArray16.startIndex*/
    _FixedArray16.prototype.startIndex$get = function () {
        throw 'unsupported variable Swift.(file)._FixedArray16.startIndex in ' + this.constructor.name;
    };
    Object.defineProperty(_FixedArray16.prototype, "startIndex", {
        get: function () { return this.startIndex$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file)._FixedArray16.endIndex*/
    _FixedArray16.prototype.endIndex$get = function () {
        throw 'unsupported variable Swift.(file)._FixedArray16.endIndex in ' + this.constructor.name;
    };
    Object.defineProperty(_FixedArray16.prototype, "endIndex", {
        get: function () { return this.endIndex$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file)._FixedArray16.subscript(_:_FixedArray16<T>.Index)*/
    /*Swift.(file).RandomAccessCollection.subscript(_:Self.Index)*/
    /*Swift.(file).MutableCollection.subscript(_:Self.Index)*/
    /*Swift.(file).BidirectionalCollection.subscript(_:Self.Index)*/
    /*Swift.(file).Collection.subscript(_:Self.Index)*/
    _FixedArray16.prototype.subscript$get = function ($info, i) {
        throw 'unsupported method Swift.(file)._FixedArray16.subscript(_:_FixedArray16<T>.Index) in ' + this.constructor.name;
    }; /*Swift.(file)._FixedArray16.subscript(_:_FixedArray16<T>.Index)*/
    /*Swift.(file).RandomAccessCollection.subscript(_:Self.Index)*/
    /*Swift.(file).MutableCollection.subscript(_:Self.Index)*/
    /*Swift.(file).BidirectionalCollection.subscript(_:Self.Index)*/
    /*Swift.(file).Collection.subscript(_:Self.Index)*/
    _FixedArray16.prototype.subscript$set = function ($info, newValue, i) {
        throw 'unsupported method Swift.(file)._FixedArray16.subscript(_:_FixedArray16<T>.Index) in ' + this.constructor.name;
    };
    /*Swift.(file)._FixedArray16.index(after:_FixedArray16<T>.Index)*/
    /*Swift.(file).RandomAccessCollection.index(after:Self.Index)*/
    /*Swift.(file).BidirectionalCollection.index(after:Self.Index)*/
    /*Swift.(file).Collection.index(after:Self.Index)*/
    _FixedArray16.prototype.indexAfter = function ($info, i) {
        throw 'unsupported method Swift.(file)._FixedArray16.index(after:_FixedArray16<T>.Index) in ' + this.constructor.name;
    };
    /*Swift.(file)._FixedArray16.index(before:_FixedArray16<T>.Index)*/
    /*Swift.(file).RandomAccessCollection.index(before:Self.Index)*/
    /*Swift.(file).BidirectionalCollection.index(before:Self.Index)*/
    _FixedArray16.prototype.indexBefore = function ($info, i) {
        throw 'unsupported method Swift.(file)._FixedArray16.index(before:_FixedArray16<T>.Index) in ' + this.constructor.name;
    };
    /*Swift.(file)._FixedArray16.append(_:T)*/
    /*Swift.(file)._FixedArray16.append(_:T)*/
    _FixedArray16.prototype.append = function ($info, newElement) {
        throw 'unsupported method Swift.(file)._FixedArray16.append(_:T) in ' + this.constructor.name;
    };
    /*Swift.(file)._FixedArray16.init(count:Int)*/
    /*Swift.(file)._FixedArray16.init(count:Int)*/
    _FixedArray16.prototype.initCountInt = function ($info, count) {
        throw 'unsupported method Swift.(file)._FixedArray16.init(count:Int) in ' + this.constructor.name;
    };
    /*Swift.(file)._FixedArray16.init()*/
    /*Swift.(file)._FixedArray16.init()*/
    _FixedArray16.prototype.init = function ($info) {
        throw 'unsupported method Swift.(file)._FixedArray16.init() in ' + this.constructor.name;
    };
    /*Swift.(file)._FixedArray16.init(allZeros:())*/
    /*Swift.(file)._FixedArray16.init(allZeros:())*/
    _FixedArray16.prototype.initAllZerostuple_type = function ($info, allZeros) {
        throw 'unsupported method Swift.(file)._FixedArray16.init(allZeros:()) in ' + this.constructor.name;
    };
    /*Swift.(file)._FixedArray16.withUnsafeMutableBufferPointer(_:(UnsafeMutableBufferPointer<_FixedArray16<T>.Element>) throws -> R)*/
    /*Swift.(file)._FixedArray16.withUnsafeMutableBufferPointer(_:(UnsafeMutableBufferPointer<_FixedArray16<T>.Element>) throws -> R)*/
    _FixedArray16.prototype.withUnsafeMutableBufferPointer = function ($info, body) {
        throw 'unsupported method Swift.(file)._FixedArray16.withUnsafeMutableBufferPointer(_:(UnsafeMutableBufferPointer<_FixedArray16<T>.Element>) throws -> R) in ' + this.constructor.name;
    };
    /*Swift.(file)._FixedArray16.withUnsafeBufferPointer(_:(UnsafeBufferPointer<_FixedArray16<T>.Element>) throws -> R)*/
    /*Swift.(file)._FixedArray16.withUnsafeBufferPointer(_:(UnsafeBufferPointer<_FixedArray16<T>.Element>) throws -> R)*/
    _FixedArray16.prototype.withUnsafeBufferPointer = function ($info, body) {
        throw 'unsupported method Swift.(file)._FixedArray16.withUnsafeBufferPointer(_:(UnsafeBufferPointer<_FixedArray16<T>.Element>) throws -> R) in ' + this.constructor.name;
    };
    _FixedArray16.prototype.init$vars = function () {
    };
    _FixedArray16.$struct = true;
    _FixedArray16.$infoAddress = '';
    return _FixedArray16;
}());
if (typeof RandomAccessCollection$implementation != 'undefined')
    _mixin(_FixedArray16, RandomAccessCollection$implementation, false);
if (typeof MutableCollection$implementation != 'undefined')
    _mixin(_FixedArray16, MutableCollection$implementation, false);
var DefaultIndices = /** @class */ (function () {
    function DefaultIndices() {
    }
    /*Swift.(file).DefaultIndices.init(_elements:Elements,startIndex:Elements.Index,endIndex:Elements.Index)*/
    /*Swift.(file).DefaultIndices.init(_elements:Elements,startIndex:Elements.Index,endIndex:Elements.Index)*/
    DefaultIndices.prototype.init_elementsStartIndexEndIndex = function ($info, _elements, startIndex, endIndex) {
        var _this = this;
        _this._elements = _elements;
        _this._startIndex = startIndex;
        _this._endIndex = endIndex;
        return;
    };
    /*Swift.(file).DefaultIndices.startIndex*/
    DefaultIndices.prototype.startIndex$get = function () {
        var _this = this;
        return _this._startIndex;
    };
    Object.defineProperty(DefaultIndices.prototype, "startIndex", {
        get: function () { return this.startIndex$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).DefaultIndices.endIndex*/
    DefaultIndices.prototype.endIndex$get = function () {
        var _this = this;
        return _this._endIndex;
    };
    Object.defineProperty(DefaultIndices.prototype, "endIndex", {
        get: function () { return this.endIndex$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).DefaultIndices.subscript(_:DefaultIndices<Elements>.Index)*/
    /*Swift.(file).BidirectionalCollection.subscript(_:Self.Index)*/
    /*Swift.(file).Collection.subscript(_:Self.Index)*/
    /*Swift.(file).RandomAccessCollection.subscript(_:Self.Index)*/
    DefaultIndices.prototype.subscript$get = function ($info, i) {
        var _this = this;
        return i;
    };
    /*Swift.(file).DefaultIndices.subscript(_:Range<DefaultIndices<Elements>.Index>)*/
    /*Swift.(file).BidirectionalCollection.subscript(_:Range<Self.Index>)*/
    /*Swift.(file).Collection.subscript(_:Range<Self.Index>)*/
    /*Swift.(file).RandomAccessCollection.subscript(_:Range<Self.Index>)*/
    DefaultIndices.prototype.subscriptRange$get = function ($info, bounds) {
        var _this = this;
        return _create(DefaultIndices, 'init_elementsStartIndexEndIndex', {}, _this._elements, bounds.lowerBound, bounds.upperBound);
    };
    /*Swift.(file).DefaultIndices.index(after:DefaultIndices<Elements>.Index)*/
    /*Swift.(file).BidirectionalCollection.index(after:Self.Index)*/
    /*Swift.(file).Collection.index(after:Self.Index)*/
    /*Swift.(file).RandomAccessCollection.index(after:Self.Index)*/
    DefaultIndices.prototype.indexAfter = function ($info, i) {
        var _this = this;
        return _this._elements.indexAfter({}, i);
    };
    /*Swift.(file).DefaultIndices.formIndex(after:DefaultIndices<Elements>.Index)*/
    /*Swift.(file).BidirectionalCollection.formIndex(after:Self.Index)*/
    /*Swift.(file).Collection.formIndex(after:Self.Index)*/
    /*Swift.(file).RandomAccessCollection.formIndex(after:Self.Index)*/
    DefaultIndices.prototype.formIndexAfter = function ($info, i$inout) {
        var _this = this;
        var i = i$inout.get();
        var $result = (function () {
            _this._elements.formIndexAfter({}, { get: function () { return i; }, set: function ($val) { return i = $val; } });
        })();
        i$inout.set(i);
        return $result;
    };
    /*Swift.(file).DefaultIndices.indices*/
    DefaultIndices.prototype.indices$get = function () {
        var _this = this;
        return _this;
    };
    Object.defineProperty(DefaultIndices.prototype, "indices", {
        get: function () { return this.indices$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).DefaultIndices.index(before:DefaultIndices<Elements>.Index)*/
    /*Swift.(file).BidirectionalCollection.index(before:Self.Index)*/
    /*Swift.(file).RandomAccessCollection.index(before:Self.Index)*/
    DefaultIndices.prototype.indexBefore = function ($info, i) {
        var _this = this;
        return _this._elements.indexBefore({}, i);
    };
    /*Swift.(file).DefaultIndices.formIndex(before:DefaultIndices<Elements>.Index)*/
    /*Swift.(file).BidirectionalCollection.formIndex(before:Self.Index)*/
    /*Swift.(file).RandomAccessCollection.formIndex(before:Self.Index)*/
    DefaultIndices.prototype.formIndexBefore = function ($info, i$inout) {
        var _this = this;
        var i = i$inout.get();
        var $result = (function () {
            _this._elements.formIndexBefore({}, { get: function () { return i; }, set: function ($val) { return i = $val; } });
        })();
        i$inout.set(i);
        return $result;
    };
    DefaultIndices.prototype.init$vars = function () {
    };
    DefaultIndices.$struct = true;
    DefaultIndices.$infoAddress = '';
    return DefaultIndices;
}());
if (typeof Collection$implementation != 'undefined')
    _mixin(DefaultIndices, Collection$implementation, false);
if (typeof BidirectionalCollection$implementation != 'undefined')
    _mixin(DefaultIndices, BidirectionalCollection$implementation, false);
if (typeof RandomAccessCollection$implementation != 'undefined')
    _mixin(DefaultIndices, RandomAccessCollection$implementation, false);
var MIO_Mixin_UInt8 = /** @class */ (function () {
    function MIO_Mixin_UInt8() {
    }
    /*Swift.(file).UInt8.init(_builtinIntegerLiteral:IntLiteral)*/
    /*Swift.(file)._ExpressibleByBuiltinIntegerLiteral.init(_builtinIntegerLiteral:IntLiteral)*/
    MIO_Mixin_UInt8.prototype.init_builtinIntegerLiteralIntLiteral = function ($info, x) {
        throw 'unsupported method Swift.(file).UInt8.init(_builtinIntegerLiteral:IntLiteral) in ' + this.constructor.name;
    };
    /*Swift.(file).UInt8.init(bitPattern:Int8)*/
    /*Swift.(file).UInt8.init(bitPattern:Int8)*/
    MIO_Mixin_UInt8.prototype.initBitPatternInt8 = function ($info, x) {
        throw 'unsupported method Swift.(file).UInt8.init(bitPattern:Int8) in ' + this.constructor.name;
    };
    /*Swift.(file).UInt8.init(_:Float)*/
    /*Swift.(file).UInt8.init(_:Float)*/
    MIO_Mixin_UInt8.prototype.initFloat = function ($info, source) {
        throw 'unsupported method Swift.(file).UInt8.init(_:Float) in ' + this.constructor.name;
    };
    /*Swift.(file).UInt8.init(exactly:Float)*/
    /*Swift.(file).UInt8.init(exactly:Float)*/
    MIO_Mixin_UInt8.prototype.initExactlyFloat = function ($info, source) {
        throw 'unsupported method Swift.(file).UInt8.init(exactly:Float) in ' + this.constructor.name;
    };
    /*Swift.(file).UInt8.init(_:Double)*/
    /*Swift.(file).UInt8.init(_:Double)*/
    MIO_Mixin_UInt8.prototype.initDouble = function ($info, source) {
        throw 'unsupported method Swift.(file).UInt8.init(_:Double) in ' + this.constructor.name;
    };
    /*Swift.(file).UInt8.init(exactly:Double)*/
    /*Swift.(file).UInt8.init(exactly:Double)*/
    MIO_Mixin_UInt8.prototype.initExactlyDouble = function ($info, source) {
        throw 'unsupported method Swift.(file).UInt8.init(exactly:Double) in ' + this.constructor.name;
    };
    /*Swift.(file).UInt8.init(_:Float80)*/
    /*Swift.(file).UInt8.init(_:Float80)*/
    MIO_Mixin_UInt8.prototype.initFloat80 = function ($info, source) {
        throw 'unsupported method Swift.(file).UInt8.init(_:Float80) in ' + this.constructor.name;
    };
    /*Swift.(file).UInt8.init(exactly:Float80)*/
    /*Swift.(file).UInt8.init(exactly:Float80)*/
    MIO_Mixin_UInt8.prototype.initExactlyFloat80 = function ($info, source) {
        throw 'unsupported method Swift.(file).UInt8.init(exactly:Float80) in ' + this.constructor.name;
    };
    /*Swift.(file).UInt8.==infix(_:UInt8,_:UInt8)*/
    /*Swift.(file).Equatable.==infix(_:Self,_:Self)*/
    MIO_Mixin_UInt8.infix_61_61 = function ($info, lhs, rhs) {
        return lhs == rhs;
    };
    /*Swift.(file).UInt8.<infix(_:UInt8,_:UInt8)*/
    /*Swift.(file).Comparable.<infix(_:Self,_:Self)*/
    MIO_Mixin_UInt8.infix_60 = function ($info, lhs, rhs) {
        return lhs < rhs;
    };
    /*Swift.(file).UInt8.+=infix(_:UInt8,_:UInt8)*/
    /*Swift.(file).BinaryInteger.+=infix(_:Self,_:Self)*/
    /*Swift.(file).AdditiveArithmetic.+=infix(_:Self,_:Self)*/
    MIO_Mixin_UInt8.infix_43_61 = function ($info, lhs$inout, rhs) {
        lhs$inout.set(lhs$inout.get() + rhs);
    };
    /*Swift.(file).UInt8.-=infix(_:UInt8,_:UInt8)*/
    /*Swift.(file).BinaryInteger.-=infix(_:Self,_:Self)*/
    /*Swift.(file).AdditiveArithmetic.-=infix(_:Self,_:Self)*/
    MIO_Mixin_UInt8.infix_45_61 = function ($info, lhs$inout, rhs) {
        lhs$inout.set(lhs$inout.get() - rhs);
    };
    /*Swift.(file).UInt8.*=infix(_:UInt8,_:UInt8)*/
    /*Swift.(file).BinaryInteger.*=infix(_:Self,_:Self)*/
    /*Swift.(file).Numeric.*=infix(_:Self,_:Self)*/
    MIO_Mixin_UInt8.infix_42_61 = function ($info, lhs$inout, rhs) {
        lhs$inout.set(lhs$inout.get() * rhs);
    };
    /*Swift.(file).UInt8./=infix(_:UInt8,_:UInt8)*/
    /*Swift.(file).BinaryInteger./=infix(_:Self,_:Self)*/
    MIO_Mixin_UInt8.infix_47_61 = function ($info, lhs$inout, rhs) {
        lhs$inout.set((lhs$inout.get() / rhs) | 0);
    };
    /*Swift.(file).UInt8.dividedReportingOverflow(by:UInt8)*/
    /*Swift.(file).FixedWidthInteger.dividedReportingOverflow(by:Self)*/
    MIO_Mixin_UInt8.prototype.dividedReportingOverflowBy = function ($info, other) {
        throw 'unsupported method Swift.(file).UInt8.dividedReportingOverflow(by:UInt8) in ' + this.constructor.name;
    };
    /*Swift.(file).UInt8.remainderReportingOverflow(dividingBy:UInt8)*/
    /*Swift.(file).FixedWidthInteger.remainderReportingOverflow(dividingBy:Self)*/
    MIO_Mixin_UInt8.prototype.remainderReportingOverflowDividingBy = function ($info, other) {
        throw 'unsupported method Swift.(file).UInt8.remainderReportingOverflow(dividingBy:UInt8) in ' + this.constructor.name;
    };
    /*Swift.(file).UInt8.addingReportingOverflow(_:UInt8)*/
    /*Swift.(file).FixedWidthInteger.addingReportingOverflow(_:Self)*/
    MIO_Mixin_UInt8.prototype.addingReportingOverflow = function ($info, other) {
        throw 'unsupported method Swift.(file).UInt8.addingReportingOverflow(_:UInt8) in ' + this.constructor.name;
    };
    /*Swift.(file).UInt8.subtractingReportingOverflow(_:UInt8)*/
    /*Swift.(file).FixedWidthInteger.subtractingReportingOverflow(_:Self)*/
    MIO_Mixin_UInt8.prototype.subtractingReportingOverflow = function ($info, other) {
        throw 'unsupported method Swift.(file).UInt8.subtractingReportingOverflow(_:UInt8) in ' + this.constructor.name;
    };
    /*Swift.(file).UInt8.multipliedReportingOverflow(by:UInt8)*/
    /*Swift.(file).FixedWidthInteger.multipliedReportingOverflow(by:Self)*/
    MIO_Mixin_UInt8.prototype.multipliedReportingOverflowBy = function ($info, other) {
        throw 'unsupported method Swift.(file).UInt8.multipliedReportingOverflow(by:UInt8) in ' + this.constructor.name;
    };
    /*Swift.(file).UInt8.%=infix(_:UInt8,_:UInt8)*/
    /*Swift.(file).BinaryInteger.%=infix(_:Self,_:Self)*/
    MIO_Mixin_UInt8.infix_37_61 = function ($info, lhs$inout, rhs) {
        lhs$inout.set(lhs$inout.get() % rhs);
    };
    /*Swift.(file).UInt8.init(_:Int8)*/
    /*Swift.(file).UInt8.init(_:Int8)*/
    MIO_Mixin_UInt8.prototype.initInt8 = function ($info, _value) {
        throw 'unsupported method Swift.(file).UInt8.init(_:Int8) in ' + this.constructor.name;
    };
    /*Swift.(file).UInt8.&=infix(_:UInt8,_:UInt8)*/
    /*Swift.(file).BinaryInteger.&=infix(_:Self,_:Self)*/
    MIO_Mixin_UInt8.infix_38_61 = function ($info, lhs$inout, rhs) {
        lhs$inout.set(lhs$inout.get() & rhs);
    };
    /*Swift.(file).UInt8.|=infix(_:UInt8,_:UInt8)*/
    /*Swift.(file).BinaryInteger.|=infix(_:Self,_:Self)*/
    MIO_Mixin_UInt8.infix_124_61 = function ($info, lhs$inout, rhs) {
        lhs$inout.set(lhs$inout.get() | rhs);
    };
    /*Swift.(file).UInt8.^=infix(_:UInt8,_:UInt8)*/
    /*Swift.(file).BinaryInteger.^=infix(_:Self,_:Self)*/
    MIO_Mixin_UInt8.infix_94_61 = function ($info, lhs$inout, rhs) {
        lhs$inout.set(lhs$inout.get() ^ rhs);
    };
    /*Swift.(file).UInt8.&>>=infix(_:UInt8,_:UInt8)*/
    /*Swift.(file).FixedWidthInteger.&>>=infix(_:Self,_:Self)*/
    MIO_Mixin_UInt8.infix_38_62_62_61 = function ($info, lhs$inout, rhs) {
        lhs$inout.set(lhs$inout.get() >> rhs);
    };
    /*Swift.(file).UInt8.&<<=infix(_:UInt8,_:UInt8)*/
    /*Swift.(file).FixedWidthInteger.&<<=infix(_:Self,_:Self)*/
    MIO_Mixin_UInt8.infix_38_60_60_61 = function ($info, lhs$inout, rhs) {
        lhs$inout.set(lhs$inout.get() << rhs);
    };
    /*Swift.(file).UInt8.bitWidth*/
    MIO_Mixin_UInt8.bitWidth$get = function () {
        var _this = this;
        return _this.constructor.bitWidth;
    };
    Object.defineProperty(MIO_Mixin_UInt8, "bitWidth", {
        get: function () { return this.bitWidth$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).UInt8.leadingZeroBitCount*/
    MIO_Mixin_UInt8.prototype.leadingZeroBitCount$get = function () {
        throw 'unsupported variable Swift.(file).UInt8.leadingZeroBitCount in ' + this.constructor.name;
    };
    Object.defineProperty(MIO_Mixin_UInt8.prototype, "leadingZeroBitCount", {
        get: function () { return this.leadingZeroBitCount$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).UInt8.trailingZeroBitCount*/
    MIO_Mixin_UInt8.prototype.trailingZeroBitCount$get = function () {
        throw 'unsupported variable Swift.(file).UInt8.trailingZeroBitCount in ' + this.constructor.name;
    };
    Object.defineProperty(MIO_Mixin_UInt8.prototype, "trailingZeroBitCount", {
        get: function () { return this.trailingZeroBitCount$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).UInt8.nonzeroBitCount*/
    MIO_Mixin_UInt8.prototype.nonzeroBitCount$get = function () {
        throw 'unsupported variable Swift.(file).UInt8.nonzeroBitCount in ' + this.constructor.name;
    };
    Object.defineProperty(MIO_Mixin_UInt8.prototype, "nonzeroBitCount", {
        get: function () { return this.nonzeroBitCount$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).UInt8.words*/
    MIO_Mixin_UInt8.prototype.words$get = function () {
        throw 'unsupported variable Swift.(file).UInt8.words in ' + this.constructor.name;
    };
    Object.defineProperty(MIO_Mixin_UInt8.prototype, "words", {
        get: function () { return this.words$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).UInt8.init(_truncatingBits:UInt)*/
    /*Swift.(file).FixedWidthInteger.init(_truncatingBits:UInt)*/
    MIO_Mixin_UInt8.prototype.init_truncatingBitsUInt = function ($info, bits) {
        throw 'unsupported method Swift.(file).UInt8.init(_truncatingBits:UInt) in ' + this.constructor.name;
    };
    /*Swift.(file).UInt8.multipliedFullWidth(by:UInt8)*/
    /*Swift.(file).FixedWidthInteger.multipliedFullWidth(by:Self)*/
    MIO_Mixin_UInt8.prototype.multipliedFullWidthBy = function ($info, other) {
        throw 'unsupported method Swift.(file).UInt8.multipliedFullWidth(by:UInt8) in ' + this.constructor.name;
    };
    /*Swift.(file).UInt8.dividingFullWidth(_:(high: UInt8, low: UInt8.Magnitude))*/
    /*Swift.(file).FixedWidthInteger.dividingFullWidth(_:(high: Self, low: Self.Magnitude))*/
    MIO_Mixin_UInt8.prototype.dividingFullWidth = function ($info, dividend) {
        throw 'unsupported method Swift.(file).UInt8.dividingFullWidth(_:(high: UInt8, low: UInt8.Magnitude)) in ' + this.constructor.name;
    };
    /*Swift.(file).UInt8.byteSwapped*/
    MIO_Mixin_UInt8.prototype.byteSwapped$get = function () {
        throw 'unsupported variable Swift.(file).UInt8.byteSwapped in ' + this.constructor.name;
    };
    Object.defineProperty(MIO_Mixin_UInt8.prototype, "byteSwapped", {
        get: function () { return this.byteSwapped$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).UInt8.toIntMax()*/
    /*Swift.(file).UInt8.toIntMax()*/
    MIO_Mixin_UInt8.prototype.toIntMax = function ($info) {
        throw 'unsupported method Swift.(file).UInt8.toIntMax() in ' + this.constructor.name;
    };
    /*Swift.(file).UInt8.signum()*/
    /*Swift.(file).BinaryInteger.signum()*/
    MIO_Mixin_UInt8.prototype.signum = function ($info) {
        var _this = this;
        return _this.constructor.infix_45({}, (_this.constructor.infix_62({}, _this, _create(_this.constructor, 'initIntegerLiteral', {}, 0)) ? _create(_this.constructor, 'initIntegerLiteral', {}, 1) : _create(_this.constructor, 'initIntegerLiteral', {}, 0)), (_this.constructor.infix_60({}, _this, _create(_this.constructor, 'initIntegerLiteral', {}, 0)) ? _create(_this.constructor, 'initIntegerLiteral', {}, 1) : _create(_this.constructor, 'initIntegerLiteral', {}, 0)));
    };
    /*Swift.(file).UInt8.init(from:Decoder)*/
    /*Swift.(file).Decodable.init(from:Decoder)*/
    MIO_Mixin_UInt8.prototype.initFromDecoder = function ($info, decoder) {
        throw 'unsupported method Swift.(file).UInt8.init(from:Decoder) in ' + this.constructor.name;
    };
    /*Swift.(file).UInt8.encode(to:Encoder)*/
    /*Swift.(file).Encodable.encode(to:Encoder)*/
    MIO_Mixin_UInt8.prototype.encodeTo = function ($info, encoder) {
        throw 'unsupported method Swift.(file).UInt8.encode(to:Encoder) in ' + this.constructor.name;
    };
    /*Swift.(file).UInt8.hash(into:Hasher)*/
    /*Swift.(file).Hashable.hash(into:Hasher)*/
    MIO_Mixin_UInt8.prototype.hashInto = function ($info, hasher$inout) {
        throw 'unsupported method Swift.(file).UInt8.hash(into:Hasher) in ' + this.constructor.name;
    };
    /*Swift.(file).UInt8.hashValue*/
    MIO_Mixin_UInt8.prototype.hashValue$get = function () {
        throw 'unsupported variable Swift.(file).UInt8.hashValue in ' + this.constructor.name;
    };
    Object.defineProperty(MIO_Mixin_UInt8.prototype, "hashValue", {
        get: function () { return this.hashValue$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).UInt8.init(truncatingBitPattern:UInt16)*/
    /*Swift.(file).UInt8.init(truncatingBitPattern:UInt16)*/
    MIO_Mixin_UInt8.prototype.initTruncatingBitPatternUInt16 = function ($info, source) {
        throw 'unsupported method Swift.(file).UInt8.init(truncatingBitPattern:UInt16) in ' + this.constructor.name;
    };
    /*Swift.(file).UInt8.init(truncatingBitPattern:Int16)*/
    /*Swift.(file).UInt8.init(truncatingBitPattern:Int16)*/
    MIO_Mixin_UInt8.prototype.initTruncatingBitPatternInt16 = function ($info, source) {
        throw 'unsupported method Swift.(file).UInt8.init(truncatingBitPattern:Int16) in ' + this.constructor.name;
    };
    /*Swift.(file).UInt8.init(truncatingBitPattern:UInt32)*/
    /*Swift.(file).UInt8.init(truncatingBitPattern:UInt32)*/
    MIO_Mixin_UInt8.prototype.initTruncatingBitPatternUInt32 = function ($info, source) {
        throw 'unsupported method Swift.(file).UInt8.init(truncatingBitPattern:UInt32) in ' + this.constructor.name;
    };
    /*Swift.(file).UInt8.init(truncatingBitPattern:Int32)*/
    /*Swift.(file).UInt8.init(truncatingBitPattern:Int32)*/
    MIO_Mixin_UInt8.prototype.initTruncatingBitPatternInt32 = function ($info, source) {
        throw 'unsupported method Swift.(file).UInt8.init(truncatingBitPattern:Int32) in ' + this.constructor.name;
    };
    /*Swift.(file).UInt8.init(truncatingBitPattern:UInt64)*/
    /*Swift.(file).UInt8.init(truncatingBitPattern:UInt64)*/
    MIO_Mixin_UInt8.prototype.initTruncatingBitPatternUInt64 = function ($info, source) {
        throw 'unsupported method Swift.(file).UInt8.init(truncatingBitPattern:UInt64) in ' + this.constructor.name;
    };
    /*Swift.(file).UInt8.init(truncatingBitPattern:Int64)*/
    /*Swift.(file).UInt8.init(truncatingBitPattern:Int64)*/
    MIO_Mixin_UInt8.prototype.initTruncatingBitPatternInt64 = function ($info, source) {
        throw 'unsupported method Swift.(file).UInt8.init(truncatingBitPattern:Int64) in ' + this.constructor.name;
    };
    /*Swift.(file).UInt8.init(truncatingBitPattern:UInt)*/
    /*Swift.(file).UInt8.init(truncatingBitPattern:UInt)*/
    MIO_Mixin_UInt8.prototype.initTruncatingBitPatternUInt = function ($info, source) {
        throw 'unsupported method Swift.(file).UInt8.init(truncatingBitPattern:UInt) in ' + this.constructor.name;
    };
    /*Swift.(file).UInt8.init(truncatingBitPattern:Int)*/
    /*Swift.(file).UInt8.init(truncatingBitPattern:Int)*/
    MIO_Mixin_UInt8.prototype.initTruncatingBitPatternInt = function ($info, source) {
        throw 'unsupported method Swift.(file).UInt8.init(truncatingBitPattern:Int) in ' + this.constructor.name;
    };
    /*Swift.(file).UInt8.&infix(_:UInt8,_:UInt8)*/
    /*Swift.(file).BinaryInteger.&infix(_:Self,_:Self)*/
    MIO_Mixin_UInt8.infix_38 = function ($info, lhs, rhs) {
        return lhs & rhs;
    };
    /*Swift.(file).UInt8.|infix(_:UInt8,_:UInt8)*/
    /*Swift.(file).BinaryInteger.|infix(_:Self,_:Self)*/
    MIO_Mixin_UInt8.infix_124 = function ($info, lhs, rhs) {
        return lhs | rhs;
    };
    /*Swift.(file).UInt8.^infix(_:UInt8,_:UInt8)*/
    /*Swift.(file).BinaryInteger.^infix(_:Self,_:Self)*/
    MIO_Mixin_UInt8.infix_94 = function ($info, lhs, rhs) {
        return lhs ^ rhs;
    };
    /*Swift.(file).UInt8.&>>infix(_:UInt8,_:UInt8)*/
    /*Swift.(file).FixedWidthInteger.&>>infix(_:Self,_:Self)*/
    MIO_Mixin_UInt8.infix_38_62_62 = function ($info, lhs, rhs) {
        return lhs >> rhs;
    };
    /*Swift.(file).UInt8.&<<infix(_:UInt8,_:UInt8)*/
    /*Swift.(file).FixedWidthInteger.&<<infix(_:Self,_:Self)*/
    MIO_Mixin_UInt8.infix_38_60_60 = function ($info, lhs, rhs) {
        return lhs << rhs;
    };
    /*Swift.(file).UInt8./infix(_:UInt8,_:UInt8)*/
    /*Swift.(file).BinaryInteger./infix(_:Self,_:Self)*/
    MIO_Mixin_UInt8.infix_47 = function ($info, lhs, rhs) {
        return (lhs / rhs) | 0;
    };
    /*Swift.(file).UInt8.%infix(_:UInt8,_:UInt8)*/
    /*Swift.(file).BinaryInteger.%infix(_:Self,_:Self)*/
    MIO_Mixin_UInt8.infix_37 = function ($info, lhs, rhs) {
        return lhs % rhs;
    };
    /*Swift.(file).UInt8.+infix(_:UInt8,_:UInt8)*/
    /*Swift.(file).BinaryInteger.+infix(_:Self,_:Self)*/
    /*Swift.(file).AdditiveArithmetic.+infix(_:Self,_:Self)*/
    MIO_Mixin_UInt8.infix_43 = function ($info, lhs, rhs) {
        return lhs + rhs;
    };
    /*Swift.(file).UInt8.-infix(_:UInt8,_:UInt8)*/
    /*Swift.(file).BinaryInteger.-infix(_:Self,_:Self)*/
    /*Swift.(file).AdditiveArithmetic.-infix(_:Self,_:Self)*/
    MIO_Mixin_UInt8.infix_45 = function ($info, lhs, rhs) {
        return lhs - rhs;
    };
    /*Swift.(file).UInt8.*infix(_:UInt8,_:UInt8)*/
    /*Swift.(file).BinaryInteger.*infix(_:Self,_:Self)*/
    /*Swift.(file).Numeric.*infix(_:Self,_:Self)*/
    MIO_Mixin_UInt8.infix_42 = function ($info, lhs, rhs) {
        return lhs * rhs;
    };
    /*Swift.(file).UInt8.>>infix(_:UInt8,_:UInt8)*/
    /*Swift.(file).UInt8.>>infix(_:UInt8,_:UInt8)*/
    MIO_Mixin_UInt8.infix_62_62 = function ($info, lhs, rhs) {
        return lhs >> rhs;
    };
    /*Swift.(file).UInt8.>>=infix(_:UInt8,_:UInt8)*/
    /*Swift.(file).UInt8.>>=infix(_:UInt8,_:UInt8)*/
    MIO_Mixin_UInt8.infix_62_62_61 = function ($info, lhs$inout, rhs) {
        lhs$inout.set(lhs$inout.get() >> rhs);
    };
    /*Swift.(file).UInt8.<<infix(_:UInt8,_:UInt8)*/
    /*Swift.(file).UInt8.<<infix(_:UInt8,_:UInt8)*/
    MIO_Mixin_UInt8.infix_60_60 = function ($info, lhs, rhs) {
        var binaryRepr = lhs.toString(2);
        var result = 0;
        for (var i = 0; i < binaryRepr.length; i++) {
            var j = i - rhs;
            if (binaryRepr[j] !== '1')
                continue;
            result += Math.pow(2, 7 - j);
        }
        return result;
    };
    /*Swift.(file).UInt8.<<=infix(_:UInt8,_:UInt8)*/
    /*Swift.(file).UInt8.<<=infix(_:UInt8,_:UInt8)*/
    MIO_Mixin_UInt8.infix_60_60_61 = function ($info, lhs$inout, rhs) {
        lhs$inout.set(lhs$inout.get() << rhs);
    };
    /*Swift.(file).UInt8.<=infix(_:UInt8,_:UInt8)*/
    /*Swift.(file).Comparable.<=infix(_:Self,_:Self)*/
    MIO_Mixin_UInt8.infix_60_61 = function ($info, lhs, rhs) {
        var _this = this;
        return Bool.prefix_33({}, (_.arg0 = rhs).constructor.infix_60({}, _.arg0, lhs));
    };
    /*Swift.(file).UInt8.>=infix(_:UInt8,_:UInt8)*/
    /*Swift.(file).Comparable.>=infix(_:Self,_:Self)*/
    MIO_Mixin_UInt8.infix_62_61 = function ($info, lhs, rhs) {
        var _this = this;
        return Bool.prefix_33({}, (_.arg0 = lhs).constructor.infix_60({}, _.arg0, rhs));
    };
    /*Swift.(file).UInt8.>infix(_:UInt8,_:UInt8)*/
    /*Swift.(file).Comparable.>infix(_:Self,_:Self)*/
    MIO_Mixin_UInt8.infix_62 = function ($info, lhs, rhs) {
        var _this = this;
        return (_.arg0 = rhs).constructor.infix_60({}, _.arg0, lhs);
    };
    /*Swift.(file).UInt8.init(ascii:Unicode.Scalar)*/
    /*Swift.(file).UInt8.init(ascii:Unicode.Scalar)*/
    MIO_Mixin_UInt8.prototype.initAsciiUnicodeScalar = function ($info, v) {
        throw 'unsupported method Swift.(file).UInt8.init(ascii:Unicode.Scalar) in ' + this.constructor.name;
    };
    /*Swift.(file).UInt8.customMirror*/
    MIO_Mixin_UInt8.prototype.customMirror$get = function () {
        throw 'unsupported variable Swift.(file).UInt8.customMirror in ' + this.constructor.name;
    };
    Object.defineProperty(MIO_Mixin_UInt8.prototype, "customMirror", {
        get: function () { return this.customMirror$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).UInt8.customPlaygroundQuickLook*/
    MIO_Mixin_UInt8.prototype.customPlaygroundQuickLook$get = function () {
        throw 'unsupported variable Swift.(file).UInt8.customPlaygroundQuickLook in ' + this.constructor.name;
    };
    Object.defineProperty(MIO_Mixin_UInt8.prototype, "customPlaygroundQuickLook", {
        get: function () { return this.customPlaygroundQuickLook$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    MIO_Mixin_UInt8.prototype.init$vars = function () {
    };
    var _83, _84, _85, _86, _87, _88, _89;
    MIO_Mixin_UInt8.$struct = true;
    MIO_Mixin_UInt8.$mixin = true;
    MIO_Mixin_UInt8.$infoAddress = '';
    MIO_Mixin_UInt8.initExactlyFloat$failable = true;
    MIO_Mixin_UInt8.initExactlyDouble$failable = true;
    MIO_Mixin_UInt8.initExactlyFloat80$failable = true;
    MIO_Mixin_UInt8.Words = (_83 = /** @class */ (function () {
            function class_107() {
            }
            /*Swift.(file).UInt8.Words.init(_:UInt8)*/
            /*Swift.(file).UInt8.Words.init(_:UInt8)*/
            class_107.prototype.initUInt8 = function ($info, value) {
                throw 'unsupported method Swift.(file).UInt8.Words.init(_:UInt8) in ' + this.constructor.name;
            };
            /*Swift.(file).UInt8.Words.count*/
            class_107.prototype.count$get = function () {
                var _this = this;
                return _this.distanceFromTo({}, _this.startIndex, _this.endIndex);
            };
            Object.defineProperty(class_107.prototype, "count", {
                get: function () { return this.count$get(); },
                enumerable: true,
                configurable: true
            });
            ;
            /*Swift.(file).UInt8.Words.startIndex*/
            class_107.prototype.startIndex$get = function () {
                throw 'unsupported variable Swift.(file).UInt8.Words.startIndex in ' + this.constructor.name;
            };
            Object.defineProperty(class_107.prototype, "startIndex", {
                get: function () { return this.startIndex$get(); },
                enumerable: true,
                configurable: true
            });
            ;
            /*Swift.(file).UInt8.Words.endIndex*/
            class_107.prototype.endIndex$get = function () {
                throw 'unsupported variable Swift.(file).UInt8.Words.endIndex in ' + this.constructor.name;
            };
            Object.defineProperty(class_107.prototype, "endIndex", {
                get: function () { return this.endIndex$get(); },
                enumerable: true,
                configurable: true
            });
            ;
            /*Swift.(file).UInt8.Words.indices*/
            class_107.prototype.indices$get = function () {
                var _this = this;
                return (_.arg0 = _this.startIndex).constructor.infix_46_46_60({}, _.arg0, _this.endIndex);
            };
            Object.defineProperty(class_107.prototype, "indices", {
                get: function () { return this.indices$get(); },
                enumerable: true,
                configurable: true
            });
            ;
            /*Swift.(file).UInt8.Words.index(after:Int)*/
            /*Swift.(file).RandomAccessCollection.index(after:Self.Index)*/
            /*Swift.(file).BidirectionalCollection.index(after:Self.Index)*/
            /*Swift.(file).Collection.index(after:Self.Index)*/
            class_107.prototype.indexAfter = function ($info, i) {
                throw 'unsupported method Swift.(file).UInt8.Words.index(after:Int) in ' + this.constructor.name;
            };
            /*Swift.(file).UInt8.Words.index(before:Int)*/
            /*Swift.(file).RandomAccessCollection.index(before:Self.Index)*/
            /*Swift.(file).BidirectionalCollection.index(before:Self.Index)*/
            class_107.prototype.indexBefore = function ($info, i) {
                throw 'unsupported method Swift.(file).UInt8.Words.index(before:Int) in ' + this.constructor.name;
            };
            /*Swift.(file).UInt8.Words.subscript(_:Int)*/
            /*Swift.(file).RandomAccessCollection.subscript(_:Self.Index)*/
            /*Swift.(file).BidirectionalCollection.subscript(_:Self.Index)*/
            /*Swift.(file).Collection.subscript(_:Self.Index)*/
            class_107.prototype.subscript$get = function ($info, position) {
                throw 'unsupported method Swift.(file).UInt8.Words.subscript(_:Int) in ' + this.constructor.name;
            };
            class_107.prototype.init$vars = function () {
            };
            return class_107;
        }()),
        _83.$struct = true,
        _83.$infoAddress = '',
        _83);
    MIO_Mixin_UInt8.SIMD2Storage = (_84 = /** @class */ (function () {
            function class_108() {
            }
            /*Swift.(file).UInt8.SIMD2Storage.scalarCount*/
            class_108.prototype.scalarCount$get = function () {
                throw 'unsupported variable Swift.(file).UInt8.SIMD2Storage.scalarCount in ' + this.constructor.name;
            };
            Object.defineProperty(class_108.prototype, "scalarCount", {
                get: function () { return this.scalarCount$get(); },
                enumerable: true,
                configurable: true
            });
            ;
            /*Swift.(file).UInt8.SIMD2Storage.init()*/
            /*Swift.(file).SIMDStorage.init()*/
            class_108.prototype.init = function ($info) {
                throw 'unsupported method Swift.(file).UInt8.SIMD2Storage.init() in ' + this.constructor.name;
            };
            /*Swift.(file).UInt8.SIMD2Storage.subscript(_:Int)*/
            /*Swift.(file).SIMDStorage.subscript(_:Int)*/
            class_108.prototype.subscript$get = function ($info, index) {
                throw 'unsupported method Swift.(file).UInt8.SIMD2Storage.subscript(_:Int) in ' + this.constructor.name;
            }; /*Swift.(file).UInt8.SIMD2Storage.subscript(_:Int)*/
            /*Swift.(file).SIMDStorage.subscript(_:Int)*/
            class_108.prototype.subscript$set = function ($info, newValue, index) {
                throw 'unsupported method Swift.(file).UInt8.SIMD2Storage.subscript(_:Int) in ' + this.constructor.name;
            };
            class_108.prototype.init$vars = function () {
            };
            return class_108;
        }()),
        _84.$struct = true,
        _84.$infoAddress = '',
        _84);
    MIO_Mixin_UInt8.SIMD4Storage = (_85 = /** @class */ (function () {
            function class_109() {
            }
            /*Swift.(file).UInt8.SIMD4Storage.scalarCount*/
            class_109.prototype.scalarCount$get = function () {
                throw 'unsupported variable Swift.(file).UInt8.SIMD4Storage.scalarCount in ' + this.constructor.name;
            };
            Object.defineProperty(class_109.prototype, "scalarCount", {
                get: function () { return this.scalarCount$get(); },
                enumerable: true,
                configurable: true
            });
            ;
            /*Swift.(file).UInt8.SIMD4Storage.init()*/
            /*Swift.(file).SIMDStorage.init()*/
            class_109.prototype.init = function ($info) {
                throw 'unsupported method Swift.(file).UInt8.SIMD4Storage.init() in ' + this.constructor.name;
            };
            /*Swift.(file).UInt8.SIMD4Storage.subscript(_:Int)*/
            /*Swift.(file).SIMDStorage.subscript(_:Int)*/
            class_109.prototype.subscript$get = function ($info, index) {
                throw 'unsupported method Swift.(file).UInt8.SIMD4Storage.subscript(_:Int) in ' + this.constructor.name;
            }; /*Swift.(file).UInt8.SIMD4Storage.subscript(_:Int)*/
            /*Swift.(file).SIMDStorage.subscript(_:Int)*/
            class_109.prototype.subscript$set = function ($info, newValue, index) {
                throw 'unsupported method Swift.(file).UInt8.SIMD4Storage.subscript(_:Int) in ' + this.constructor.name;
            };
            class_109.prototype.init$vars = function () {
            };
            return class_109;
        }()),
        _85.$struct = true,
        _85.$infoAddress = '',
        _85);
    MIO_Mixin_UInt8.SIMD8Storage = (_86 = /** @class */ (function () {
            function class_110() {
            }
            /*Swift.(file).UInt8.SIMD8Storage.scalarCount*/
            class_110.prototype.scalarCount$get = function () {
                throw 'unsupported variable Swift.(file).UInt8.SIMD8Storage.scalarCount in ' + this.constructor.name;
            };
            Object.defineProperty(class_110.prototype, "scalarCount", {
                get: function () { return this.scalarCount$get(); },
                enumerable: true,
                configurable: true
            });
            ;
            /*Swift.(file).UInt8.SIMD8Storage.init()*/
            /*Swift.(file).SIMDStorage.init()*/
            class_110.prototype.init = function ($info) {
                throw 'unsupported method Swift.(file).UInt8.SIMD8Storage.init() in ' + this.constructor.name;
            };
            /*Swift.(file).UInt8.SIMD8Storage.subscript(_:Int)*/
            /*Swift.(file).SIMDStorage.subscript(_:Int)*/
            class_110.prototype.subscript$get = function ($info, index) {
                throw 'unsupported method Swift.(file).UInt8.SIMD8Storage.subscript(_:Int) in ' + this.constructor.name;
            }; /*Swift.(file).UInt8.SIMD8Storage.subscript(_:Int)*/
            /*Swift.(file).SIMDStorage.subscript(_:Int)*/
            class_110.prototype.subscript$set = function ($info, newValue, index) {
                throw 'unsupported method Swift.(file).UInt8.SIMD8Storage.subscript(_:Int) in ' + this.constructor.name;
            };
            class_110.prototype.init$vars = function () {
            };
            return class_110;
        }()),
        _86.$struct = true,
        _86.$infoAddress = '',
        _86);
    MIO_Mixin_UInt8.SIMD16Storage = (_87 = /** @class */ (function () {
            function class_111() {
            }
            /*Swift.(file).UInt8.SIMD16Storage.scalarCount*/
            class_111.prototype.scalarCount$get = function () {
                throw 'unsupported variable Swift.(file).UInt8.SIMD16Storage.scalarCount in ' + this.constructor.name;
            };
            Object.defineProperty(class_111.prototype, "scalarCount", {
                get: function () { return this.scalarCount$get(); },
                enumerable: true,
                configurable: true
            });
            ;
            /*Swift.(file).UInt8.SIMD16Storage.init()*/
            /*Swift.(file).SIMDStorage.init()*/
            class_111.prototype.init = function ($info) {
                throw 'unsupported method Swift.(file).UInt8.SIMD16Storage.init() in ' + this.constructor.name;
            };
            /*Swift.(file).UInt8.SIMD16Storage.subscript(_:Int)*/
            /*Swift.(file).SIMDStorage.subscript(_:Int)*/
            class_111.prototype.subscript$get = function ($info, index) {
                throw 'unsupported method Swift.(file).UInt8.SIMD16Storage.subscript(_:Int) in ' + this.constructor.name;
            }; /*Swift.(file).UInt8.SIMD16Storage.subscript(_:Int)*/
            /*Swift.(file).SIMDStorage.subscript(_:Int)*/
            class_111.prototype.subscript$set = function ($info, newValue, index) {
                throw 'unsupported method Swift.(file).UInt8.SIMD16Storage.subscript(_:Int) in ' + this.constructor.name;
            };
            class_111.prototype.init$vars = function () {
            };
            return class_111;
        }()),
        _87.$struct = true,
        _87.$infoAddress = '',
        _87);
    MIO_Mixin_UInt8.SIMD32Storage = (_88 = /** @class */ (function () {
            function class_112() {
            }
            /*Swift.(file).UInt8.SIMD32Storage.scalarCount*/
            class_112.prototype.scalarCount$get = function () {
                throw 'unsupported variable Swift.(file).UInt8.SIMD32Storage.scalarCount in ' + this.constructor.name;
            };
            Object.defineProperty(class_112.prototype, "scalarCount", {
                get: function () { return this.scalarCount$get(); },
                enumerable: true,
                configurable: true
            });
            ;
            /*Swift.(file).UInt8.SIMD32Storage.init()*/
            /*Swift.(file).SIMDStorage.init()*/
            class_112.prototype.init = function ($info) {
                throw 'unsupported method Swift.(file).UInt8.SIMD32Storage.init() in ' + this.constructor.name;
            };
            /*Swift.(file).UInt8.SIMD32Storage.subscript(_:Int)*/
            /*Swift.(file).SIMDStorage.subscript(_:Int)*/
            class_112.prototype.subscript$get = function ($info, index) {
                throw 'unsupported method Swift.(file).UInt8.SIMD32Storage.subscript(_:Int) in ' + this.constructor.name;
            }; /*Swift.(file).UInt8.SIMD32Storage.subscript(_:Int)*/
            /*Swift.(file).SIMDStorage.subscript(_:Int)*/
            class_112.prototype.subscript$set = function ($info, newValue, index) {
                throw 'unsupported method Swift.(file).UInt8.SIMD32Storage.subscript(_:Int) in ' + this.constructor.name;
            };
            class_112.prototype.init$vars = function () {
            };
            return class_112;
        }()),
        _88.$struct = true,
        _88.$infoAddress = '',
        _88);
    MIO_Mixin_UInt8.SIMD64Storage = (_89 = /** @class */ (function () {
            function class_113() {
            }
            /*Swift.(file).UInt8.SIMD64Storage.scalarCount*/
            class_113.prototype.scalarCount$get = function () {
                throw 'unsupported variable Swift.(file).UInt8.SIMD64Storage.scalarCount in ' + this.constructor.name;
            };
            Object.defineProperty(class_113.prototype, "scalarCount", {
                get: function () { return this.scalarCount$get(); },
                enumerable: true,
                configurable: true
            });
            ;
            /*Swift.(file).UInt8.SIMD64Storage.init()*/
            /*Swift.(file).SIMDStorage.init()*/
            class_113.prototype.init = function ($info) {
                throw 'unsupported method Swift.(file).UInt8.SIMD64Storage.init() in ' + this.constructor.name;
            };
            /*Swift.(file).UInt8.SIMD64Storage.subscript(_:Int)*/
            /*Swift.(file).SIMDStorage.subscript(_:Int)*/
            class_113.prototype.subscript$get = function ($info, index) {
                throw 'unsupported method Swift.(file).UInt8.SIMD64Storage.subscript(_:Int) in ' + this.constructor.name;
            }; /*Swift.(file).UInt8.SIMD64Storage.subscript(_:Int)*/
            /*Swift.(file).SIMDStorage.subscript(_:Int)*/
            class_113.prototype.subscript$set = function ($info, newValue, index) {
                throw 'unsupported method Swift.(file).UInt8.SIMD64Storage.subscript(_:Int) in ' + this.constructor.name;
            };
            class_113.prototype.init$vars = function () {
            };
            return class_113;
        }()),
        _89.$struct = true,
        _89.$infoAddress = '',
        _89);
    return MIO_Mixin_UInt8;
}());
if (typeof RandomAccessCollection$implementation != 'undefined')
    _mixin(MIO_Mixin_UInt8.Words, RandomAccessCollection$implementation, false);
if (typeof SIMDStorage$implementation != 'undefined')
    _mixin(MIO_Mixin_UInt8.SIMD2Storage, SIMDStorage$implementation, false);
if (typeof SIMDStorage$implementation != 'undefined')
    _mixin(MIO_Mixin_UInt8.SIMD4Storage, SIMDStorage$implementation, false);
if (typeof SIMDStorage$implementation != 'undefined')
    _mixin(MIO_Mixin_UInt8.SIMD8Storage, SIMDStorage$implementation, false);
if (typeof SIMDStorage$implementation != 'undefined')
    _mixin(MIO_Mixin_UInt8.SIMD16Storage, SIMDStorage$implementation, false);
if (typeof SIMDStorage$implementation != 'undefined')
    _mixin(MIO_Mixin_UInt8.SIMD32Storage, SIMDStorage$implementation, false);
if (typeof SIMDStorage$implementation != 'undefined')
    _mixin(MIO_Mixin_UInt8.SIMD64Storage, SIMDStorage$implementation, false);
if (typeof FixedWidthInteger$implementation != 'undefined')
    _mixin(MIO_Mixin_UInt8, FixedWidthInteger$implementation, false);
if (typeof UnsignedInteger$implementation != 'undefined')
    _mixin(MIO_Mixin_UInt8, UnsignedInteger$implementation, false);
if (typeof _ExpressibleByBuiltinIntegerLiteral$implementation != 'undefined')
    _mixin(MIO_Mixin_UInt8, _ExpressibleByBuiltinIntegerLiteral$implementation, false);
if (typeof Codable$implementation != 'undefined')
    _mixin(MIO_Mixin_UInt8, Codable$implementation, false);
if (typeof Hashable$implementation != 'undefined')
    _mixin(MIO_Mixin_UInt8, Hashable$implementation, false);
if (typeof _HasCustomAnyHashableRepresentation$implementation != 'undefined')
    _mixin(MIO_Mixin_UInt8, _HasCustomAnyHashableRepresentation$implementation, false);
if (typeof CustomReflectable$implementation != 'undefined')
    _mixin(MIO_Mixin_UInt8, CustomReflectable$implementation, false);
if (typeof _CustomPlaygroundQuickLookable$implementation != 'undefined')
    _mixin(MIO_Mixin_UInt8, _CustomPlaygroundQuickLookable$implementation, false);
if (typeof _StringElement$implementation != 'undefined')
    _mixin(MIO_Mixin_UInt8, _StringElement$implementation, false);
if (typeof SIMDScalar$implementation != 'undefined')
    _mixin(MIO_Mixin_UInt8, SIMDScalar$implementation, false);
if (typeof CVarArg$implementation != 'undefined')
    _mixin(MIO_Mixin_UInt8, CVarArg$implementation, false);
_mixin(Number, MIO_Mixin_UInt8, true);
var UInt8 = /** @class */ (function () {
    function UInt8() {
    }
    return UInt8;
}());
_mixin(UInt8, MIO_Mixin_UInt8, true);
var MIO_Mixin_Int8 = /** @class */ (function () {
    function MIO_Mixin_Int8() {
    }
    /*Swift.(file).Int8.init(_builtinIntegerLiteral:IntLiteral)*/
    /*Swift.(file)._ExpressibleByBuiltinIntegerLiteral.init(_builtinIntegerLiteral:IntLiteral)*/
    MIO_Mixin_Int8.prototype.init_builtinIntegerLiteralIntLiteral = function ($info, x) {
        throw 'unsupported method Swift.(file).Int8.init(_builtinIntegerLiteral:IntLiteral) in ' + this.constructor.name;
    };
    /*Swift.(file).Int8.init(bitPattern:UInt8)*/
    /*Swift.(file).Int8.init(bitPattern:UInt8)*/
    MIO_Mixin_Int8.prototype.initBitPatternUInt8 = function ($info, x) {
        throw 'unsupported method Swift.(file).Int8.init(bitPattern:UInt8) in ' + this.constructor.name;
    };
    /*Swift.(file).Int8.init(_:Float)*/
    /*Swift.(file).Int8.init(_:Float)*/
    MIO_Mixin_Int8.prototype.initFloat = function ($info, source) {
        throw 'unsupported method Swift.(file).Int8.init(_:Float) in ' + this.constructor.name;
    };
    /*Swift.(file).Int8.init(exactly:Float)*/
    /*Swift.(file).Int8.init(exactly:Float)*/
    MIO_Mixin_Int8.prototype.initExactlyFloat = function ($info, source) {
        throw 'unsupported method Swift.(file).Int8.init(exactly:Float) in ' + this.constructor.name;
    };
    /*Swift.(file).Int8.init(_:Double)*/
    /*Swift.(file).Int8.init(_:Double)*/
    MIO_Mixin_Int8.prototype.initDouble = function ($info, source) {
        throw 'unsupported method Swift.(file).Int8.init(_:Double) in ' + this.constructor.name;
    };
    /*Swift.(file).Int8.init(exactly:Double)*/
    /*Swift.(file).Int8.init(exactly:Double)*/
    MIO_Mixin_Int8.prototype.initExactlyDouble = function ($info, source) {
        throw 'unsupported method Swift.(file).Int8.init(exactly:Double) in ' + this.constructor.name;
    };
    /*Swift.(file).Int8.init(_:Float80)*/
    /*Swift.(file).Int8.init(_:Float80)*/
    MIO_Mixin_Int8.prototype.initFloat80 = function ($info, source) {
        throw 'unsupported method Swift.(file).Int8.init(_:Float80) in ' + this.constructor.name;
    };
    /*Swift.(file).Int8.init(exactly:Float80)*/
    /*Swift.(file).Int8.init(exactly:Float80)*/
    MIO_Mixin_Int8.prototype.initExactlyFloat80 = function ($info, source) {
        throw 'unsupported method Swift.(file).Int8.init(exactly:Float80) in ' + this.constructor.name;
    };
    /*Swift.(file).Int8.==infix(_:Int8,_:Int8)*/
    /*Swift.(file).Equatable.==infix(_:Self,_:Self)*/
    MIO_Mixin_Int8.infix_61_61 = function ($info, lhs, rhs) {
        return lhs == rhs;
    };
    /*Swift.(file).Int8.<infix(_:Int8,_:Int8)*/
    /*Swift.(file).Comparable.<infix(_:Self,_:Self)*/
    MIO_Mixin_Int8.infix_60 = function ($info, lhs, rhs) {
        return lhs < rhs;
    };
    /*Swift.(file).Int8.+=infix(_:Int8,_:Int8)*/
    /*Swift.(file).BinaryInteger.+=infix(_:Self,_:Self)*/
    /*Swift.(file).AdditiveArithmetic.+=infix(_:Self,_:Self)*/
    MIO_Mixin_Int8.infix_43_61 = function ($info, lhs$inout, rhs) {
        lhs$inout.set(lhs$inout.get() + rhs);
    };
    /*Swift.(file).Int8.-=infix(_:Int8,_:Int8)*/
    /*Swift.(file).BinaryInteger.-=infix(_:Self,_:Self)*/
    /*Swift.(file).AdditiveArithmetic.-=infix(_:Self,_:Self)*/
    MIO_Mixin_Int8.infix_45_61 = function ($info, lhs$inout, rhs) {
        lhs$inout.set(lhs$inout.get() - rhs);
    };
    /*Swift.(file).Int8.*=infix(_:Int8,_:Int8)*/
    /*Swift.(file).BinaryInteger.*=infix(_:Self,_:Self)*/
    /*Swift.(file).Numeric.*=infix(_:Self,_:Self)*/
    MIO_Mixin_Int8.infix_42_61 = function ($info, lhs$inout, rhs) {
        lhs$inout.set(lhs$inout.get() * rhs);
    };
    /*Swift.(file).Int8./=infix(_:Int8,_:Int8)*/
    /*Swift.(file).BinaryInteger./=infix(_:Self,_:Self)*/
    MIO_Mixin_Int8.infix_47_61 = function ($info, lhs$inout, rhs) {
        lhs$inout.set((lhs$inout.get() / rhs) | 0);
    };
    /*Swift.(file).Int8.dividedReportingOverflow(by:Int8)*/
    /*Swift.(file).FixedWidthInteger.dividedReportingOverflow(by:Self)*/
    MIO_Mixin_Int8.prototype.dividedReportingOverflowBy = function ($info, other) {
        throw 'unsupported method Swift.(file).Int8.dividedReportingOverflow(by:Int8) in ' + this.constructor.name;
    };
    /*Swift.(file).Int8.remainderReportingOverflow(dividingBy:Int8)*/
    /*Swift.(file).FixedWidthInteger.remainderReportingOverflow(dividingBy:Self)*/
    MIO_Mixin_Int8.prototype.remainderReportingOverflowDividingBy = function ($info, other) {
        throw 'unsupported method Swift.(file).Int8.remainderReportingOverflow(dividingBy:Int8) in ' + this.constructor.name;
    };
    /*Swift.(file).Int8.addingReportingOverflow(_:Int8)*/
    /*Swift.(file).FixedWidthInteger.addingReportingOverflow(_:Self)*/
    MIO_Mixin_Int8.prototype.addingReportingOverflow = function ($info, other) {
        throw 'unsupported method Swift.(file).Int8.addingReportingOverflow(_:Int8) in ' + this.constructor.name;
    };
    /*Swift.(file).Int8.subtractingReportingOverflow(_:Int8)*/
    /*Swift.(file).FixedWidthInteger.subtractingReportingOverflow(_:Self)*/
    MIO_Mixin_Int8.prototype.subtractingReportingOverflow = function ($info, other) {
        throw 'unsupported method Swift.(file).Int8.subtractingReportingOverflow(_:Int8) in ' + this.constructor.name;
    };
    /*Swift.(file).Int8.multipliedReportingOverflow(by:Int8)*/
    /*Swift.(file).FixedWidthInteger.multipliedReportingOverflow(by:Self)*/
    MIO_Mixin_Int8.prototype.multipliedReportingOverflowBy = function ($info, other) {
        throw 'unsupported method Swift.(file).Int8.multipliedReportingOverflow(by:Int8) in ' + this.constructor.name;
    };
    /*Swift.(file).Int8.%=infix(_:Int8,_:Int8)*/
    /*Swift.(file).BinaryInteger.%=infix(_:Self,_:Self)*/
    MIO_Mixin_Int8.infix_37_61 = function ($info, lhs$inout, rhs) {
        lhs$inout.set(lhs$inout.get() % rhs);
    };
    /*Swift.(file).Int8.init(_:Int8)*/
    /*Swift.(file).Int8.init(_:Int8)*/
    MIO_Mixin_Int8.prototype.initInt8 = function ($info, _value) {
        throw 'unsupported method Swift.(file).Int8.init(_:Int8) in ' + this.constructor.name;
    };
    /*Swift.(file).Int8.&=infix(_:Int8,_:Int8)*/
    /*Swift.(file).BinaryInteger.&=infix(_:Self,_:Self)*/
    MIO_Mixin_Int8.infix_38_61 = function ($info, lhs$inout, rhs) {
        lhs$inout.set(lhs$inout.get() & rhs);
    };
    /*Swift.(file).Int8.|=infix(_:Int8,_:Int8)*/
    /*Swift.(file).BinaryInteger.|=infix(_:Self,_:Self)*/
    MIO_Mixin_Int8.infix_124_61 = function ($info, lhs$inout, rhs) {
        lhs$inout.set(lhs$inout.get() | rhs);
    };
    /*Swift.(file).Int8.^=infix(_:Int8,_:Int8)*/
    /*Swift.(file).BinaryInteger.^=infix(_:Self,_:Self)*/
    MIO_Mixin_Int8.infix_94_61 = function ($info, lhs$inout, rhs) {
        lhs$inout.set(lhs$inout.get() ^ rhs);
    };
    /*Swift.(file).Int8.&>>=infix(_:Int8,_:Int8)*/
    /*Swift.(file).FixedWidthInteger.&>>=infix(_:Self,_:Self)*/
    MIO_Mixin_Int8.infix_38_62_62_61 = function ($info, lhs$inout, rhs) {
        lhs$inout.set(lhs$inout.get() >> rhs);
    };
    /*Swift.(file).Int8.&<<=infix(_:Int8,_:Int8)*/
    /*Swift.(file).FixedWidthInteger.&<<=infix(_:Self,_:Self)*/
    MIO_Mixin_Int8.infix_38_60_60_61 = function ($info, lhs$inout, rhs) {
        lhs$inout.set(lhs$inout.get() << rhs);
    };
    /*Swift.(file).Int8.bitWidth*/
    MIO_Mixin_Int8.bitWidth$get = function () {
        var _this = this;
        return _this.constructor.bitWidth;
    };
    Object.defineProperty(MIO_Mixin_Int8, "bitWidth", {
        get: function () { return this.bitWidth$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).Int8.leadingZeroBitCount*/
    MIO_Mixin_Int8.prototype.leadingZeroBitCount$get = function () {
        throw 'unsupported variable Swift.(file).Int8.leadingZeroBitCount in ' + this.constructor.name;
    };
    Object.defineProperty(MIO_Mixin_Int8.prototype, "leadingZeroBitCount", {
        get: function () { return this.leadingZeroBitCount$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).Int8.trailingZeroBitCount*/
    MIO_Mixin_Int8.prototype.trailingZeroBitCount$get = function () {
        throw 'unsupported variable Swift.(file).Int8.trailingZeroBitCount in ' + this.constructor.name;
    };
    Object.defineProperty(MIO_Mixin_Int8.prototype, "trailingZeroBitCount", {
        get: function () { return this.trailingZeroBitCount$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).Int8.nonzeroBitCount*/
    MIO_Mixin_Int8.prototype.nonzeroBitCount$get = function () {
        throw 'unsupported variable Swift.(file).Int8.nonzeroBitCount in ' + this.constructor.name;
    };
    Object.defineProperty(MIO_Mixin_Int8.prototype, "nonzeroBitCount", {
        get: function () { return this.nonzeroBitCount$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).Int8.words*/
    MIO_Mixin_Int8.prototype.words$get = function () {
        throw 'unsupported variable Swift.(file).Int8.words in ' + this.constructor.name;
    };
    Object.defineProperty(MIO_Mixin_Int8.prototype, "words", {
        get: function () { return this.words$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).Int8.init(_truncatingBits:UInt)*/
    /*Swift.(file).FixedWidthInteger.init(_truncatingBits:UInt)*/
    MIO_Mixin_Int8.prototype.init_truncatingBitsUInt = function ($info, bits) {
        throw 'unsupported method Swift.(file).Int8.init(_truncatingBits:UInt) in ' + this.constructor.name;
    };
    /*Swift.(file).Int8.magnitude*/
    MIO_Mixin_Int8.prototype.magnitude$get = function () {
        throw 'unsupported variable Swift.(file).Int8.magnitude in ' + this.constructor.name;
    };
    Object.defineProperty(MIO_Mixin_Int8.prototype, "magnitude", {
        get: function () { return this.magnitude$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).Int8.multipliedFullWidth(by:Int8)*/
    /*Swift.(file).FixedWidthInteger.multipliedFullWidth(by:Self)*/
    MIO_Mixin_Int8.prototype.multipliedFullWidthBy = function ($info, other) {
        throw 'unsupported method Swift.(file).Int8.multipliedFullWidth(by:Int8) in ' + this.constructor.name;
    };
    /*Swift.(file).Int8.dividingFullWidth(_:(high: Int8, low: Int8.Magnitude))*/
    /*Swift.(file).FixedWidthInteger.dividingFullWidth(_:(high: Self, low: Self.Magnitude))*/
    MIO_Mixin_Int8.prototype.dividingFullWidth = function ($info, dividend) {
        throw 'unsupported method Swift.(file).Int8.dividingFullWidth(_:(high: Int8, low: Int8.Magnitude)) in ' + this.constructor.name;
    };
    /*Swift.(file).Int8.byteSwapped*/
    MIO_Mixin_Int8.prototype.byteSwapped$get = function () {
        throw 'unsupported variable Swift.(file).Int8.byteSwapped in ' + this.constructor.name;
    };
    Object.defineProperty(MIO_Mixin_Int8.prototype, "byteSwapped", {
        get: function () { return this.byteSwapped$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).Int8.toUIntMax()*/
    /*Swift.(file).Int8.toUIntMax()*/
    MIO_Mixin_Int8.prototype.toUIntMax = function ($info) {
        throw 'unsupported method Swift.(file).Int8.toUIntMax() in ' + this.constructor.name;
    };
    /*Swift.(file).Int8.signum()*/
    /*Swift.(file).BinaryInteger.signum()*/
    MIO_Mixin_Int8.prototype.signum = function ($info) {
        var _this = this;
        return _this.constructor.infix_45({}, (_this.constructor.infix_62({}, _this, _create(_this.constructor, 'initIntegerLiteral', {}, 0)) ? _create(_this.constructor, 'initIntegerLiteral', {}, 1) : _create(_this.constructor, 'initIntegerLiteral', {}, 0)), (_this.constructor.infix_60({}, _this, _create(_this.constructor, 'initIntegerLiteral', {}, 0)) ? _create(_this.constructor, 'initIntegerLiteral', {}, 1) : _create(_this.constructor, 'initIntegerLiteral', {}, 0)));
    };
    /*Swift.(file).Int8.init(from:Decoder)*/
    /*Swift.(file).Decodable.init(from:Decoder)*/
    MIO_Mixin_Int8.prototype.initFromDecoder = function ($info, decoder) {
        throw 'unsupported method Swift.(file).Int8.init(from:Decoder) in ' + this.constructor.name;
    };
    /*Swift.(file).Int8.encode(to:Encoder)*/
    /*Swift.(file).Encodable.encode(to:Encoder)*/
    MIO_Mixin_Int8.prototype.encodeTo = function ($info, encoder) {
        throw 'unsupported method Swift.(file).Int8.encode(to:Encoder) in ' + this.constructor.name;
    };
    /*Swift.(file).Int8.hash(into:Hasher)*/
    /*Swift.(file).Hashable.hash(into:Hasher)*/
    MIO_Mixin_Int8.prototype.hashInto = function ($info, hasher$inout) {
        throw 'unsupported method Swift.(file).Int8.hash(into:Hasher) in ' + this.constructor.name;
    };
    /*Swift.(file).Int8.hashValue*/
    MIO_Mixin_Int8.prototype.hashValue$get = function () {
        throw 'unsupported variable Swift.(file).Int8.hashValue in ' + this.constructor.name;
    };
    Object.defineProperty(MIO_Mixin_Int8.prototype, "hashValue", {
        get: function () { return this.hashValue$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).Int8.init(truncatingBitPattern:UInt16)*/
    /*Swift.(file).Int8.init(truncatingBitPattern:UInt16)*/
    MIO_Mixin_Int8.prototype.initTruncatingBitPatternUInt16 = function ($info, source) {
        throw 'unsupported method Swift.(file).Int8.init(truncatingBitPattern:UInt16) in ' + this.constructor.name;
    };
    /*Swift.(file).Int8.init(truncatingBitPattern:Int16)*/
    /*Swift.(file).Int8.init(truncatingBitPattern:Int16)*/
    MIO_Mixin_Int8.prototype.initTruncatingBitPatternInt16 = function ($info, source) {
        throw 'unsupported method Swift.(file).Int8.init(truncatingBitPattern:Int16) in ' + this.constructor.name;
    };
    /*Swift.(file).Int8.init(truncatingBitPattern:UInt32)*/
    /*Swift.(file).Int8.init(truncatingBitPattern:UInt32)*/
    MIO_Mixin_Int8.prototype.initTruncatingBitPatternUInt32 = function ($info, source) {
        throw 'unsupported method Swift.(file).Int8.init(truncatingBitPattern:UInt32) in ' + this.constructor.name;
    };
    /*Swift.(file).Int8.init(truncatingBitPattern:Int32)*/
    /*Swift.(file).Int8.init(truncatingBitPattern:Int32)*/
    MIO_Mixin_Int8.prototype.initTruncatingBitPatternInt32 = function ($info, source) {
        throw 'unsupported method Swift.(file).Int8.init(truncatingBitPattern:Int32) in ' + this.constructor.name;
    };
    /*Swift.(file).Int8.init(truncatingBitPattern:UInt64)*/
    /*Swift.(file).Int8.init(truncatingBitPattern:UInt64)*/
    MIO_Mixin_Int8.prototype.initTruncatingBitPatternUInt64 = function ($info, source) {
        throw 'unsupported method Swift.(file).Int8.init(truncatingBitPattern:UInt64) in ' + this.constructor.name;
    };
    /*Swift.(file).Int8.init(truncatingBitPattern:Int64)*/
    /*Swift.(file).Int8.init(truncatingBitPattern:Int64)*/
    MIO_Mixin_Int8.prototype.initTruncatingBitPatternInt64 = function ($info, source) {
        throw 'unsupported method Swift.(file).Int8.init(truncatingBitPattern:Int64) in ' + this.constructor.name;
    };
    /*Swift.(file).Int8.init(truncatingBitPattern:UInt)*/
    /*Swift.(file).Int8.init(truncatingBitPattern:UInt)*/
    MIO_Mixin_Int8.prototype.initTruncatingBitPatternUInt = function ($info, source) {
        throw 'unsupported method Swift.(file).Int8.init(truncatingBitPattern:UInt) in ' + this.constructor.name;
    };
    /*Swift.(file).Int8.init(truncatingBitPattern:Int)*/
    /*Swift.(file).Int8.init(truncatingBitPattern:Int)*/
    MIO_Mixin_Int8.prototype.initTruncatingBitPatternInt = function ($info, source) {
        throw 'unsupported method Swift.(file).Int8.init(truncatingBitPattern:Int) in ' + this.constructor.name;
    };
    /*Swift.(file).Int8.&infix(_:Int8,_:Int8)*/
    /*Swift.(file).BinaryInteger.&infix(_:Self,_:Self)*/
    MIO_Mixin_Int8.infix_38 = function ($info, lhs, rhs) {
        return lhs & rhs;
    };
    /*Swift.(file).Int8.|infix(_:Int8,_:Int8)*/
    /*Swift.(file).BinaryInteger.|infix(_:Self,_:Self)*/
    MIO_Mixin_Int8.infix_124 = function ($info, lhs, rhs) {
        return lhs | rhs;
    };
    /*Swift.(file).Int8.^infix(_:Int8,_:Int8)*/
    /*Swift.(file).BinaryInteger.^infix(_:Self,_:Self)*/
    MIO_Mixin_Int8.infix_94 = function ($info, lhs, rhs) {
        return lhs ^ rhs;
    };
    /*Swift.(file).Int8.&>>infix(_:Int8,_:Int8)*/
    /*Swift.(file).FixedWidthInteger.&>>infix(_:Self,_:Self)*/
    MIO_Mixin_Int8.infix_38_62_62 = function ($info, lhs, rhs) {
        return lhs >> rhs;
    };
    /*Swift.(file).Int8.&<<infix(_:Int8,_:Int8)*/
    /*Swift.(file).FixedWidthInteger.&<<infix(_:Self,_:Self)*/
    MIO_Mixin_Int8.infix_38_60_60 = function ($info, lhs, rhs) {
        return lhs << rhs;
    };
    /*Swift.(file).Int8./infix(_:Int8,_:Int8)*/
    /*Swift.(file).BinaryInteger./infix(_:Self,_:Self)*/
    MIO_Mixin_Int8.infix_47 = function ($info, lhs, rhs) {
        return (lhs / rhs) | 0;
    };
    /*Swift.(file).Int8.%infix(_:Int8,_:Int8)*/
    /*Swift.(file).BinaryInteger.%infix(_:Self,_:Self)*/
    MIO_Mixin_Int8.infix_37 = function ($info, lhs, rhs) {
        return lhs % rhs;
    };
    /*Swift.(file).Int8.+infix(_:Int8,_:Int8)*/
    /*Swift.(file).BinaryInteger.+infix(_:Self,_:Self)*/
    /*Swift.(file).AdditiveArithmetic.+infix(_:Self,_:Self)*/
    MIO_Mixin_Int8.infix_43 = function ($info, lhs, rhs) {
        return lhs + rhs;
    };
    /*Swift.(file).Int8.-infix(_:Int8,_:Int8)*/
    /*Swift.(file).BinaryInteger.-infix(_:Self,_:Self)*/
    /*Swift.(file).AdditiveArithmetic.-infix(_:Self,_:Self)*/
    MIO_Mixin_Int8.infix_45 = function ($info, lhs, rhs) {
        return lhs - rhs;
    };
    /*Swift.(file).Int8.*infix(_:Int8,_:Int8)*/
    /*Swift.(file).BinaryInteger.*infix(_:Self,_:Self)*/
    /*Swift.(file).Numeric.*infix(_:Self,_:Self)*/
    MIO_Mixin_Int8.infix_42 = function ($info, lhs, rhs) {
        return lhs * rhs;
    };
    /*Swift.(file).Int8.>>infix(_:Int8,_:Int8)*/
    /*Swift.(file).Int8.>>infix(_:Int8,_:Int8)*/
    MIO_Mixin_Int8.infix_62_62 = function ($info, lhs, rhs) {
        return lhs >> rhs;
    };
    /*Swift.(file).Int8.>>=infix(_:Int8,_:Int8)*/
    /*Swift.(file).Int8.>>=infix(_:Int8,_:Int8)*/
    MIO_Mixin_Int8.infix_62_62_61 = function ($info, lhs$inout, rhs) {
        lhs$inout.set(lhs$inout.get() >> rhs);
    };
    /*Swift.(file).Int8.<<infix(_:Int8,_:Int8)*/
    /*Swift.(file).Int8.<<infix(_:Int8,_:Int8)*/
    MIO_Mixin_Int8.infix_60_60 = function ($info, lhs, rhs) {
        var binaryRepr = lhs.toString(2);
        var result = 0;
        for (var i = 0; i < binaryRepr.length; i++) {
            var j = i - rhs;
            if (binaryRepr[j] !== '1')
                continue;
            result += j === 0 ? -128 : Math.pow(2, 7 - j);
        }
        return result;
    };
    /*Swift.(file).Int8.<<=infix(_:Int8,_:Int8)*/
    /*Swift.(file).Int8.<<=infix(_:Int8,_:Int8)*/
    MIO_Mixin_Int8.infix_60_60_61 = function ($info, lhs$inout, rhs) {
        lhs$inout.set(lhs$inout.get() << rhs);
    };
    /*Swift.(file).Int8.<=infix(_:Int8,_:Int8)*/
    /*Swift.(file).Comparable.<=infix(_:Self,_:Self)*/
    MIO_Mixin_Int8.infix_60_61 = function ($info, lhs, rhs) {
        var _this = this;
        return Bool.prefix_33({}, (_.arg0 = rhs).constructor.infix_60({}, _.arg0, lhs));
    };
    /*Swift.(file).Int8.>=infix(_:Int8,_:Int8)*/
    /*Swift.(file).Comparable.>=infix(_:Self,_:Self)*/
    MIO_Mixin_Int8.infix_62_61 = function ($info, lhs, rhs) {
        var _this = this;
        return Bool.prefix_33({}, (_.arg0 = lhs).constructor.infix_60({}, _.arg0, rhs));
    };
    /*Swift.(file).Int8.>infix(_:Int8,_:Int8)*/
    /*Swift.(file).Comparable.>infix(_:Self,_:Self)*/
    MIO_Mixin_Int8.infix_62 = function ($info, lhs, rhs) {
        var _this = this;
        return (_.arg0 = rhs).constructor.infix_60({}, _.arg0, lhs);
    };
    /*Swift.(file).Int8.customMirror*/
    MIO_Mixin_Int8.prototype.customMirror$get = function () {
        throw 'unsupported variable Swift.(file).Int8.customMirror in ' + this.constructor.name;
    };
    Object.defineProperty(MIO_Mixin_Int8.prototype, "customMirror", {
        get: function () { return this.customMirror$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).Int8.customPlaygroundQuickLook*/
    MIO_Mixin_Int8.prototype.customPlaygroundQuickLook$get = function () {
        throw 'unsupported variable Swift.(file).Int8.customPlaygroundQuickLook in ' + this.constructor.name;
    };
    Object.defineProperty(MIO_Mixin_Int8.prototype, "customPlaygroundQuickLook", {
        get: function () { return this.customPlaygroundQuickLook$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    MIO_Mixin_Int8.prototype.init$vars = function () {
    };
    var _90, _91, _92, _93, _94, _95, _96;
    MIO_Mixin_Int8.$struct = true;
    MIO_Mixin_Int8.$mixin = true;
    MIO_Mixin_Int8.$infoAddress = '';
    MIO_Mixin_Int8.initExactlyFloat$failable = true;
    MIO_Mixin_Int8.initExactlyDouble$failable = true;
    MIO_Mixin_Int8.initExactlyFloat80$failable = true;
    MIO_Mixin_Int8.Words = (_90 = /** @class */ (function () {
            function class_114() {
            }
            /*Swift.(file).Int8.Words.init(_:Int8)*/
            /*Swift.(file).Int8.Words.init(_:Int8)*/
            class_114.prototype.initInt8 = function ($info, value) {
                throw 'unsupported method Swift.(file).Int8.Words.init(_:Int8) in ' + this.constructor.name;
            };
            /*Swift.(file).Int8.Words.count*/
            class_114.prototype.count$get = function () {
                var _this = this;
                return _this.distanceFromTo({}, _this.startIndex, _this.endIndex);
            };
            Object.defineProperty(class_114.prototype, "count", {
                get: function () { return this.count$get(); },
                enumerable: true,
                configurable: true
            });
            ;
            /*Swift.(file).Int8.Words.startIndex*/
            class_114.prototype.startIndex$get = function () {
                throw 'unsupported variable Swift.(file).Int8.Words.startIndex in ' + this.constructor.name;
            };
            Object.defineProperty(class_114.prototype, "startIndex", {
                get: function () { return this.startIndex$get(); },
                enumerable: true,
                configurable: true
            });
            ;
            /*Swift.(file).Int8.Words.endIndex*/
            class_114.prototype.endIndex$get = function () {
                throw 'unsupported variable Swift.(file).Int8.Words.endIndex in ' + this.constructor.name;
            };
            Object.defineProperty(class_114.prototype, "endIndex", {
                get: function () { return this.endIndex$get(); },
                enumerable: true,
                configurable: true
            });
            ;
            /*Swift.(file).Int8.Words.indices*/
            class_114.prototype.indices$get = function () {
                var _this = this;
                return (_.arg0 = _this.startIndex).constructor.infix_46_46_60({}, _.arg0, _this.endIndex);
            };
            Object.defineProperty(class_114.prototype, "indices", {
                get: function () { return this.indices$get(); },
                enumerable: true,
                configurable: true
            });
            ;
            /*Swift.(file).Int8.Words.index(after:Int)*/
            /*Swift.(file).RandomAccessCollection.index(after:Self.Index)*/
            /*Swift.(file).BidirectionalCollection.index(after:Self.Index)*/
            /*Swift.(file).Collection.index(after:Self.Index)*/
            class_114.prototype.indexAfter = function ($info, i) {
                throw 'unsupported method Swift.(file).Int8.Words.index(after:Int) in ' + this.constructor.name;
            };
            /*Swift.(file).Int8.Words.index(before:Int)*/
            /*Swift.(file).RandomAccessCollection.index(before:Self.Index)*/
            /*Swift.(file).BidirectionalCollection.index(before:Self.Index)*/
            class_114.prototype.indexBefore = function ($info, i) {
                throw 'unsupported method Swift.(file).Int8.Words.index(before:Int) in ' + this.constructor.name;
            };
            /*Swift.(file).Int8.Words.subscript(_:Int)*/
            /*Swift.(file).RandomAccessCollection.subscript(_:Self.Index)*/
            /*Swift.(file).BidirectionalCollection.subscript(_:Self.Index)*/
            /*Swift.(file).Collection.subscript(_:Self.Index)*/
            class_114.prototype.subscript$get = function ($info, position) {
                throw 'unsupported method Swift.(file).Int8.Words.subscript(_:Int) in ' + this.constructor.name;
            };
            class_114.prototype.init$vars = function () {
            };
            return class_114;
        }()),
        _90.$struct = true,
        _90.$infoAddress = '',
        _90);
    MIO_Mixin_Int8.SIMD2Storage = (_91 = /** @class */ (function () {
            function class_115() {
            }
            /*Swift.(file).Int8.SIMD2Storage.scalarCount*/
            class_115.prototype.scalarCount$get = function () {
                throw 'unsupported variable Swift.(file).Int8.SIMD2Storage.scalarCount in ' + this.constructor.name;
            };
            Object.defineProperty(class_115.prototype, "scalarCount", {
                get: function () { return this.scalarCount$get(); },
                enumerable: true,
                configurable: true
            });
            ;
            /*Swift.(file).Int8.SIMD2Storage.init()*/
            /*Swift.(file).SIMDStorage.init()*/
            class_115.prototype.init = function ($info) {
                throw 'unsupported method Swift.(file).Int8.SIMD2Storage.init() in ' + this.constructor.name;
            };
            /*Swift.(file).Int8.SIMD2Storage.subscript(_:Int)*/
            /*Swift.(file).SIMDStorage.subscript(_:Int)*/
            class_115.prototype.subscript$get = function ($info, index) {
                throw 'unsupported method Swift.(file).Int8.SIMD2Storage.subscript(_:Int) in ' + this.constructor.name;
            }; /*Swift.(file).Int8.SIMD2Storage.subscript(_:Int)*/
            /*Swift.(file).SIMDStorage.subscript(_:Int)*/
            class_115.prototype.subscript$set = function ($info, newValue, index) {
                throw 'unsupported method Swift.(file).Int8.SIMD2Storage.subscript(_:Int) in ' + this.constructor.name;
            };
            class_115.prototype.init$vars = function () {
            };
            return class_115;
        }()),
        _91.$struct = true,
        _91.$infoAddress = '',
        _91);
    MIO_Mixin_Int8.SIMD4Storage = (_92 = /** @class */ (function () {
            function class_116() {
            }
            /*Swift.(file).Int8.SIMD4Storage.scalarCount*/
            class_116.prototype.scalarCount$get = function () {
                throw 'unsupported variable Swift.(file).Int8.SIMD4Storage.scalarCount in ' + this.constructor.name;
            };
            Object.defineProperty(class_116.prototype, "scalarCount", {
                get: function () { return this.scalarCount$get(); },
                enumerable: true,
                configurable: true
            });
            ;
            /*Swift.(file).Int8.SIMD4Storage.init()*/
            /*Swift.(file).SIMDStorage.init()*/
            class_116.prototype.init = function ($info) {
                throw 'unsupported method Swift.(file).Int8.SIMD4Storage.init() in ' + this.constructor.name;
            };
            /*Swift.(file).Int8.SIMD4Storage.subscript(_:Int)*/
            /*Swift.(file).SIMDStorage.subscript(_:Int)*/
            class_116.prototype.subscript$get = function ($info, index) {
                throw 'unsupported method Swift.(file).Int8.SIMD4Storage.subscript(_:Int) in ' + this.constructor.name;
            }; /*Swift.(file).Int8.SIMD4Storage.subscript(_:Int)*/
            /*Swift.(file).SIMDStorage.subscript(_:Int)*/
            class_116.prototype.subscript$set = function ($info, newValue, index) {
                throw 'unsupported method Swift.(file).Int8.SIMD4Storage.subscript(_:Int) in ' + this.constructor.name;
            };
            class_116.prototype.init$vars = function () {
            };
            return class_116;
        }()),
        _92.$struct = true,
        _92.$infoAddress = '',
        _92);
    MIO_Mixin_Int8.SIMD8Storage = (_93 = /** @class */ (function () {
            function class_117() {
            }
            /*Swift.(file).Int8.SIMD8Storage.scalarCount*/
            class_117.prototype.scalarCount$get = function () {
                throw 'unsupported variable Swift.(file).Int8.SIMD8Storage.scalarCount in ' + this.constructor.name;
            };
            Object.defineProperty(class_117.prototype, "scalarCount", {
                get: function () { return this.scalarCount$get(); },
                enumerable: true,
                configurable: true
            });
            ;
            /*Swift.(file).Int8.SIMD8Storage.init()*/
            /*Swift.(file).SIMDStorage.init()*/
            class_117.prototype.init = function ($info) {
                throw 'unsupported method Swift.(file).Int8.SIMD8Storage.init() in ' + this.constructor.name;
            };
            /*Swift.(file).Int8.SIMD8Storage.subscript(_:Int)*/
            /*Swift.(file).SIMDStorage.subscript(_:Int)*/
            class_117.prototype.subscript$get = function ($info, index) {
                throw 'unsupported method Swift.(file).Int8.SIMD8Storage.subscript(_:Int) in ' + this.constructor.name;
            }; /*Swift.(file).Int8.SIMD8Storage.subscript(_:Int)*/
            /*Swift.(file).SIMDStorage.subscript(_:Int)*/
            class_117.prototype.subscript$set = function ($info, newValue, index) {
                throw 'unsupported method Swift.(file).Int8.SIMD8Storage.subscript(_:Int) in ' + this.constructor.name;
            };
            class_117.prototype.init$vars = function () {
            };
            return class_117;
        }()),
        _93.$struct = true,
        _93.$infoAddress = '',
        _93);
    MIO_Mixin_Int8.SIMD16Storage = (_94 = /** @class */ (function () {
            function class_118() {
            }
            /*Swift.(file).Int8.SIMD16Storage.scalarCount*/
            class_118.prototype.scalarCount$get = function () {
                throw 'unsupported variable Swift.(file).Int8.SIMD16Storage.scalarCount in ' + this.constructor.name;
            };
            Object.defineProperty(class_118.prototype, "scalarCount", {
                get: function () { return this.scalarCount$get(); },
                enumerable: true,
                configurable: true
            });
            ;
            /*Swift.(file).Int8.SIMD16Storage.init()*/
            /*Swift.(file).SIMDStorage.init()*/
            class_118.prototype.init = function ($info) {
                throw 'unsupported method Swift.(file).Int8.SIMD16Storage.init() in ' + this.constructor.name;
            };
            /*Swift.(file).Int8.SIMD16Storage.subscript(_:Int)*/
            /*Swift.(file).SIMDStorage.subscript(_:Int)*/
            class_118.prototype.subscript$get = function ($info, index) {
                throw 'unsupported method Swift.(file).Int8.SIMD16Storage.subscript(_:Int) in ' + this.constructor.name;
            }; /*Swift.(file).Int8.SIMD16Storage.subscript(_:Int)*/
            /*Swift.(file).SIMDStorage.subscript(_:Int)*/
            class_118.prototype.subscript$set = function ($info, newValue, index) {
                throw 'unsupported method Swift.(file).Int8.SIMD16Storage.subscript(_:Int) in ' + this.constructor.name;
            };
            class_118.prototype.init$vars = function () {
            };
            return class_118;
        }()),
        _94.$struct = true,
        _94.$infoAddress = '',
        _94);
    MIO_Mixin_Int8.SIMD32Storage = (_95 = /** @class */ (function () {
            function class_119() {
            }
            /*Swift.(file).Int8.SIMD32Storage.scalarCount*/
            class_119.prototype.scalarCount$get = function () {
                throw 'unsupported variable Swift.(file).Int8.SIMD32Storage.scalarCount in ' + this.constructor.name;
            };
            Object.defineProperty(class_119.prototype, "scalarCount", {
                get: function () { return this.scalarCount$get(); },
                enumerable: true,
                configurable: true
            });
            ;
            /*Swift.(file).Int8.SIMD32Storage.init()*/
            /*Swift.(file).SIMDStorage.init()*/
            class_119.prototype.init = function ($info) {
                throw 'unsupported method Swift.(file).Int8.SIMD32Storage.init() in ' + this.constructor.name;
            };
            /*Swift.(file).Int8.SIMD32Storage.subscript(_:Int)*/
            /*Swift.(file).SIMDStorage.subscript(_:Int)*/
            class_119.prototype.subscript$get = function ($info, index) {
                throw 'unsupported method Swift.(file).Int8.SIMD32Storage.subscript(_:Int) in ' + this.constructor.name;
            }; /*Swift.(file).Int8.SIMD32Storage.subscript(_:Int)*/
            /*Swift.(file).SIMDStorage.subscript(_:Int)*/
            class_119.prototype.subscript$set = function ($info, newValue, index) {
                throw 'unsupported method Swift.(file).Int8.SIMD32Storage.subscript(_:Int) in ' + this.constructor.name;
            };
            class_119.prototype.init$vars = function () {
            };
            return class_119;
        }()),
        _95.$struct = true,
        _95.$infoAddress = '',
        _95);
    MIO_Mixin_Int8.SIMD64Storage = (_96 = /** @class */ (function () {
            function class_120() {
            }
            /*Swift.(file).Int8.SIMD64Storage.scalarCount*/
            class_120.prototype.scalarCount$get = function () {
                throw 'unsupported variable Swift.(file).Int8.SIMD64Storage.scalarCount in ' + this.constructor.name;
            };
            Object.defineProperty(class_120.prototype, "scalarCount", {
                get: function () { return this.scalarCount$get(); },
                enumerable: true,
                configurable: true
            });
            ;
            /*Swift.(file).Int8.SIMD64Storage.init()*/
            /*Swift.(file).SIMDStorage.init()*/
            class_120.prototype.init = function ($info) {
                throw 'unsupported method Swift.(file).Int8.SIMD64Storage.init() in ' + this.constructor.name;
            };
            /*Swift.(file).Int8.SIMD64Storage.subscript(_:Int)*/
            /*Swift.(file).SIMDStorage.subscript(_:Int)*/
            class_120.prototype.subscript$get = function ($info, index) {
                throw 'unsupported method Swift.(file).Int8.SIMD64Storage.subscript(_:Int) in ' + this.constructor.name;
            }; /*Swift.(file).Int8.SIMD64Storage.subscript(_:Int)*/
            /*Swift.(file).SIMDStorage.subscript(_:Int)*/
            class_120.prototype.subscript$set = function ($info, newValue, index) {
                throw 'unsupported method Swift.(file).Int8.SIMD64Storage.subscript(_:Int) in ' + this.constructor.name;
            };
            class_120.prototype.init$vars = function () {
            };
            return class_120;
        }()),
        _96.$struct = true,
        _96.$infoAddress = '',
        _96);
    return MIO_Mixin_Int8;
}());
if (typeof RandomAccessCollection$implementation != 'undefined')
    _mixin(MIO_Mixin_Int8.Words, RandomAccessCollection$implementation, false);
if (typeof SIMDStorage$implementation != 'undefined')
    _mixin(MIO_Mixin_Int8.SIMD2Storage, SIMDStorage$implementation, false);
if (typeof SIMDStorage$implementation != 'undefined')
    _mixin(MIO_Mixin_Int8.SIMD4Storage, SIMDStorage$implementation, false);
if (typeof SIMDStorage$implementation != 'undefined')
    _mixin(MIO_Mixin_Int8.SIMD8Storage, SIMDStorage$implementation, false);
if (typeof SIMDStorage$implementation != 'undefined')
    _mixin(MIO_Mixin_Int8.SIMD16Storage, SIMDStorage$implementation, false);
if (typeof SIMDStorage$implementation != 'undefined')
    _mixin(MIO_Mixin_Int8.SIMD32Storage, SIMDStorage$implementation, false);
if (typeof SIMDStorage$implementation != 'undefined')
    _mixin(MIO_Mixin_Int8.SIMD64Storage, SIMDStorage$implementation, false);
if (typeof FixedWidthInteger$implementation != 'undefined')
    _mixin(MIO_Mixin_Int8, FixedWidthInteger$implementation, false);
if (typeof SignedInteger$implementation != 'undefined')
    _mixin(MIO_Mixin_Int8, SignedInteger$implementation, false);
if (typeof _ExpressibleByBuiltinIntegerLiteral$implementation != 'undefined')
    _mixin(MIO_Mixin_Int8, _ExpressibleByBuiltinIntegerLiteral$implementation, false);
if (typeof Codable$implementation != 'undefined')
    _mixin(MIO_Mixin_Int8, Codable$implementation, false);
if (typeof Hashable$implementation != 'undefined')
    _mixin(MIO_Mixin_Int8, Hashable$implementation, false);
if (typeof _HasCustomAnyHashableRepresentation$implementation != 'undefined')
    _mixin(MIO_Mixin_Int8, _HasCustomAnyHashableRepresentation$implementation, false);
if (typeof CustomReflectable$implementation != 'undefined')
    _mixin(MIO_Mixin_Int8, CustomReflectable$implementation, false);
if (typeof _CustomPlaygroundQuickLookable$implementation != 'undefined')
    _mixin(MIO_Mixin_Int8, _CustomPlaygroundQuickLookable$implementation, false);
if (typeof SIMDScalar$implementation != 'undefined')
    _mixin(MIO_Mixin_Int8, SIMDScalar$implementation, false);
if (typeof CVarArg$implementation != 'undefined')
    _mixin(MIO_Mixin_Int8, CVarArg$implementation, false);
_mixin(Number, MIO_Mixin_Int8, true);
var Int8 = /** @class */ (function () {
    function Int8() {
    }
    return Int8;
}());
_mixin(Int8, MIO_Mixin_Int8, true);
var MIO_Mixin_UInt16 = /** @class */ (function () {
    function MIO_Mixin_UInt16() {
    }
    /*Swift.(file).UInt16.init(_builtinIntegerLiteral:IntLiteral)*/
    /*Swift.(file)._ExpressibleByBuiltinIntegerLiteral.init(_builtinIntegerLiteral:IntLiteral)*/
    MIO_Mixin_UInt16.prototype.init_builtinIntegerLiteralIntLiteral = function ($info, x) {
        throw 'unsupported method Swift.(file).UInt16.init(_builtinIntegerLiteral:IntLiteral) in ' + this.constructor.name;
    };
    /*Swift.(file).UInt16.init(bitPattern:Int16)*/
    /*Swift.(file).UInt16.init(bitPattern:Int16)*/
    MIO_Mixin_UInt16.prototype.initBitPatternInt16 = function ($info, x) {
        throw 'unsupported method Swift.(file).UInt16.init(bitPattern:Int16) in ' + this.constructor.name;
    };
    /*Swift.(file).UInt16.init(_:Float)*/
    /*Swift.(file).UInt16.init(_:Float)*/
    MIO_Mixin_UInt16.prototype.initFloat = function ($info, source) {
        throw 'unsupported method Swift.(file).UInt16.init(_:Float) in ' + this.constructor.name;
    };
    /*Swift.(file).UInt16.init(exactly:Float)*/
    /*Swift.(file).UInt16.init(exactly:Float)*/
    MIO_Mixin_UInt16.prototype.initExactlyFloat = function ($info, source) {
        throw 'unsupported method Swift.(file).UInt16.init(exactly:Float) in ' + this.constructor.name;
    };
    /*Swift.(file).UInt16.init(_:Double)*/
    /*Swift.(file).UInt16.init(_:Double)*/
    MIO_Mixin_UInt16.prototype.initDouble = function ($info, source) {
        throw 'unsupported method Swift.(file).UInt16.init(_:Double) in ' + this.constructor.name;
    };
    /*Swift.(file).UInt16.init(exactly:Double)*/
    /*Swift.(file).UInt16.init(exactly:Double)*/
    MIO_Mixin_UInt16.prototype.initExactlyDouble = function ($info, source) {
        throw 'unsupported method Swift.(file).UInt16.init(exactly:Double) in ' + this.constructor.name;
    };
    /*Swift.(file).UInt16.init(_:Float80)*/
    /*Swift.(file).UInt16.init(_:Float80)*/
    MIO_Mixin_UInt16.prototype.initFloat80 = function ($info, source) {
        throw 'unsupported method Swift.(file).UInt16.init(_:Float80) in ' + this.constructor.name;
    };
    /*Swift.(file).UInt16.init(exactly:Float80)*/
    /*Swift.(file).UInt16.init(exactly:Float80)*/
    MIO_Mixin_UInt16.prototype.initExactlyFloat80 = function ($info, source) {
        throw 'unsupported method Swift.(file).UInt16.init(exactly:Float80) in ' + this.constructor.name;
    };
    /*Swift.(file).UInt16.==infix(_:UInt16,_:UInt16)*/
    /*Swift.(file).Equatable.==infix(_:Self,_:Self)*/
    MIO_Mixin_UInt16.infix_61_61 = function ($info, lhs, rhs) {
        return lhs == rhs;
    };
    /*Swift.(file).UInt16.<infix(_:UInt16,_:UInt16)*/
    /*Swift.(file).Comparable.<infix(_:Self,_:Self)*/
    MIO_Mixin_UInt16.infix_60 = function ($info, lhs, rhs) {
        return lhs < rhs;
    };
    /*Swift.(file).UInt16.+=infix(_:UInt16,_:UInt16)*/
    /*Swift.(file).BinaryInteger.+=infix(_:Self,_:Self)*/
    /*Swift.(file).AdditiveArithmetic.+=infix(_:Self,_:Self)*/
    MIO_Mixin_UInt16.infix_43_61 = function ($info, lhs$inout, rhs) {
        lhs$inout.set(lhs$inout.get() + rhs);
    };
    /*Swift.(file).UInt16.-=infix(_:UInt16,_:UInt16)*/
    /*Swift.(file).BinaryInteger.-=infix(_:Self,_:Self)*/
    /*Swift.(file).AdditiveArithmetic.-=infix(_:Self,_:Self)*/
    MIO_Mixin_UInt16.infix_45_61 = function ($info, lhs$inout, rhs) {
        lhs$inout.set(lhs$inout.get() - rhs);
    };
    /*Swift.(file).UInt16.*=infix(_:UInt16,_:UInt16)*/
    /*Swift.(file).BinaryInteger.*=infix(_:Self,_:Self)*/
    /*Swift.(file).Numeric.*=infix(_:Self,_:Self)*/
    MIO_Mixin_UInt16.infix_42_61 = function ($info, lhs$inout, rhs) {
        lhs$inout.set(lhs$inout.get() * rhs);
    };
    /*Swift.(file).UInt16./=infix(_:UInt16,_:UInt16)*/
    /*Swift.(file).BinaryInteger./=infix(_:Self,_:Self)*/
    MIO_Mixin_UInt16.infix_47_61 = function ($info, lhs$inout, rhs) {
        lhs$inout.set((lhs$inout.get() / rhs) | 0);
    };
    /*Swift.(file).UInt16.dividedReportingOverflow(by:UInt16)*/
    /*Swift.(file).FixedWidthInteger.dividedReportingOverflow(by:Self)*/
    MIO_Mixin_UInt16.prototype.dividedReportingOverflowBy = function ($info, other) {
        throw 'unsupported method Swift.(file).UInt16.dividedReportingOverflow(by:UInt16) in ' + this.constructor.name;
    };
    /*Swift.(file).UInt16.remainderReportingOverflow(dividingBy:UInt16)*/
    /*Swift.(file).FixedWidthInteger.remainderReportingOverflow(dividingBy:Self)*/
    MIO_Mixin_UInt16.prototype.remainderReportingOverflowDividingBy = function ($info, other) {
        throw 'unsupported method Swift.(file).UInt16.remainderReportingOverflow(dividingBy:UInt16) in ' + this.constructor.name;
    };
    /*Swift.(file).UInt16.addingReportingOverflow(_:UInt16)*/
    /*Swift.(file).FixedWidthInteger.addingReportingOverflow(_:Self)*/
    MIO_Mixin_UInt16.prototype.addingReportingOverflow = function ($info, other) {
        throw 'unsupported method Swift.(file).UInt16.addingReportingOverflow(_:UInt16) in ' + this.constructor.name;
    };
    /*Swift.(file).UInt16.subtractingReportingOverflow(_:UInt16)*/
    /*Swift.(file).FixedWidthInteger.subtractingReportingOverflow(_:Self)*/
    MIO_Mixin_UInt16.prototype.subtractingReportingOverflow = function ($info, other) {
        throw 'unsupported method Swift.(file).UInt16.subtractingReportingOverflow(_:UInt16) in ' + this.constructor.name;
    };
    /*Swift.(file).UInt16.multipliedReportingOverflow(by:UInt16)*/
    /*Swift.(file).FixedWidthInteger.multipliedReportingOverflow(by:Self)*/
    MIO_Mixin_UInt16.prototype.multipliedReportingOverflowBy = function ($info, other) {
        throw 'unsupported method Swift.(file).UInt16.multipliedReportingOverflow(by:UInt16) in ' + this.constructor.name;
    };
    /*Swift.(file).UInt16.%=infix(_:UInt16,_:UInt16)*/
    /*Swift.(file).BinaryInteger.%=infix(_:Self,_:Self)*/
    MIO_Mixin_UInt16.infix_37_61 = function ($info, lhs$inout, rhs) {
        lhs$inout.set(lhs$inout.get() % rhs);
    };
    /*Swift.(file).UInt16.init(_:Int16)*/
    /*Swift.(file).UInt16.init(_:Int16)*/
    MIO_Mixin_UInt16.prototype.initInt16 = function ($info, _value) {
        throw 'unsupported method Swift.(file).UInt16.init(_:Int16) in ' + this.constructor.name;
    };
    /*Swift.(file).UInt16.&=infix(_:UInt16,_:UInt16)*/
    /*Swift.(file).BinaryInteger.&=infix(_:Self,_:Self)*/
    MIO_Mixin_UInt16.infix_38_61 = function ($info, lhs$inout, rhs) {
        lhs$inout.set(lhs$inout.get() & rhs);
    };
    /*Swift.(file).UInt16.|=infix(_:UInt16,_:UInt16)*/
    /*Swift.(file).BinaryInteger.|=infix(_:Self,_:Self)*/
    MIO_Mixin_UInt16.infix_124_61 = function ($info, lhs$inout, rhs) {
        lhs$inout.set(lhs$inout.get() | rhs);
    };
    /*Swift.(file).UInt16.^=infix(_:UInt16,_:UInt16)*/
    /*Swift.(file).BinaryInteger.^=infix(_:Self,_:Self)*/
    MIO_Mixin_UInt16.infix_94_61 = function ($info, lhs$inout, rhs) {
        lhs$inout.set(lhs$inout.get() ^ rhs);
    };
    /*Swift.(file).UInt16.&>>=infix(_:UInt16,_:UInt16)*/
    /*Swift.(file).FixedWidthInteger.&>>=infix(_:Self,_:Self)*/
    MIO_Mixin_UInt16.infix_38_62_62_61 = function ($info, lhs$inout, rhs) {
        lhs$inout.set(lhs$inout.get() >> rhs);
    };
    /*Swift.(file).UInt16.&<<=infix(_:UInt16,_:UInt16)*/
    /*Swift.(file).FixedWidthInteger.&<<=infix(_:Self,_:Self)*/
    MIO_Mixin_UInt16.infix_38_60_60_61 = function ($info, lhs$inout, rhs) {
        lhs$inout.set(lhs$inout.get() << rhs);
    };
    /*Swift.(file).UInt16.bitWidth*/
    MIO_Mixin_UInt16.bitWidth$get = function () {
        var _this = this;
        return _this.constructor.bitWidth;
    };
    Object.defineProperty(MIO_Mixin_UInt16, "bitWidth", {
        get: function () { return this.bitWidth$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).UInt16.leadingZeroBitCount*/
    MIO_Mixin_UInt16.prototype.leadingZeroBitCount$get = function () {
        throw 'unsupported variable Swift.(file).UInt16.leadingZeroBitCount in ' + this.constructor.name;
    };
    Object.defineProperty(MIO_Mixin_UInt16.prototype, "leadingZeroBitCount", {
        get: function () { return this.leadingZeroBitCount$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).UInt16.trailingZeroBitCount*/
    MIO_Mixin_UInt16.prototype.trailingZeroBitCount$get = function () {
        throw 'unsupported variable Swift.(file).UInt16.trailingZeroBitCount in ' + this.constructor.name;
    };
    Object.defineProperty(MIO_Mixin_UInt16.prototype, "trailingZeroBitCount", {
        get: function () { return this.trailingZeroBitCount$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).UInt16.nonzeroBitCount*/
    MIO_Mixin_UInt16.prototype.nonzeroBitCount$get = function () {
        throw 'unsupported variable Swift.(file).UInt16.nonzeroBitCount in ' + this.constructor.name;
    };
    Object.defineProperty(MIO_Mixin_UInt16.prototype, "nonzeroBitCount", {
        get: function () { return this.nonzeroBitCount$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).UInt16.words*/
    MIO_Mixin_UInt16.prototype.words$get = function () {
        throw 'unsupported variable Swift.(file).UInt16.words in ' + this.constructor.name;
    };
    Object.defineProperty(MIO_Mixin_UInt16.prototype, "words", {
        get: function () { return this.words$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).UInt16.init(_truncatingBits:UInt)*/
    /*Swift.(file).FixedWidthInteger.init(_truncatingBits:UInt)*/
    MIO_Mixin_UInt16.prototype.init_truncatingBitsUInt = function ($info, bits) {
        throw 'unsupported method Swift.(file).UInt16.init(_truncatingBits:UInt) in ' + this.constructor.name;
    };
    /*Swift.(file).UInt16.multipliedFullWidth(by:UInt16)*/
    /*Swift.(file).FixedWidthInteger.multipliedFullWidth(by:Self)*/
    MIO_Mixin_UInt16.prototype.multipliedFullWidthBy = function ($info, other) {
        throw 'unsupported method Swift.(file).UInt16.multipliedFullWidth(by:UInt16) in ' + this.constructor.name;
    };
    /*Swift.(file).UInt16.dividingFullWidth(_:(high: UInt16, low: UInt16.Magnitude))*/
    /*Swift.(file).FixedWidthInteger.dividingFullWidth(_:(high: Self, low: Self.Magnitude))*/
    MIO_Mixin_UInt16.prototype.dividingFullWidth = function ($info, dividend) {
        throw 'unsupported method Swift.(file).UInt16.dividingFullWidth(_:(high: UInt16, low: UInt16.Magnitude)) in ' + this.constructor.name;
    };
    /*Swift.(file).UInt16.byteSwapped*/
    MIO_Mixin_UInt16.prototype.byteSwapped$get = function () {
        throw 'unsupported variable Swift.(file).UInt16.byteSwapped in ' + this.constructor.name;
    };
    Object.defineProperty(MIO_Mixin_UInt16.prototype, "byteSwapped", {
        get: function () { return this.byteSwapped$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).UInt16.toIntMax()*/
    /*Swift.(file).UInt16.toIntMax()*/
    MIO_Mixin_UInt16.prototype.toIntMax = function ($info) {
        throw 'unsupported method Swift.(file).UInt16.toIntMax() in ' + this.constructor.name;
    };
    /*Swift.(file).UInt16.signum()*/
    /*Swift.(file).BinaryInteger.signum()*/
    MIO_Mixin_UInt16.prototype.signum = function ($info) {
        var _this = this;
        return _this.constructor.infix_45({}, (_this.constructor.infix_62({}, _this, _create(_this.constructor, 'initIntegerLiteral', {}, 0)) ? _create(_this.constructor, 'initIntegerLiteral', {}, 1) : _create(_this.constructor, 'initIntegerLiteral', {}, 0)), (_this.constructor.infix_60({}, _this, _create(_this.constructor, 'initIntegerLiteral', {}, 0)) ? _create(_this.constructor, 'initIntegerLiteral', {}, 1) : _create(_this.constructor, 'initIntegerLiteral', {}, 0)));
    };
    /*Swift.(file).UInt16.init(from:Decoder)*/
    /*Swift.(file).Decodable.init(from:Decoder)*/
    MIO_Mixin_UInt16.prototype.initFromDecoder = function ($info, decoder) {
        throw 'unsupported method Swift.(file).UInt16.init(from:Decoder) in ' + this.constructor.name;
    };
    /*Swift.(file).UInt16.encode(to:Encoder)*/
    /*Swift.(file).Encodable.encode(to:Encoder)*/
    MIO_Mixin_UInt16.prototype.encodeTo = function ($info, encoder) {
        throw 'unsupported method Swift.(file).UInt16.encode(to:Encoder) in ' + this.constructor.name;
    };
    /*Swift.(file).UInt16.hash(into:Hasher)*/
    /*Swift.(file).Hashable.hash(into:Hasher)*/
    MIO_Mixin_UInt16.prototype.hashInto = function ($info, hasher$inout) {
        throw 'unsupported method Swift.(file).UInt16.hash(into:Hasher) in ' + this.constructor.name;
    };
    /*Swift.(file).UInt16.hashValue*/
    MIO_Mixin_UInt16.prototype.hashValue$get = function () {
        throw 'unsupported variable Swift.(file).UInt16.hashValue in ' + this.constructor.name;
    };
    Object.defineProperty(MIO_Mixin_UInt16.prototype, "hashValue", {
        get: function () { return this.hashValue$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).UInt16.init(truncatingBitPattern:UInt32)*/
    /*Swift.(file).UInt16.init(truncatingBitPattern:UInt32)*/
    MIO_Mixin_UInt16.prototype.initTruncatingBitPatternUInt32 = function ($info, source) {
        throw 'unsupported method Swift.(file).UInt16.init(truncatingBitPattern:UInt32) in ' + this.constructor.name;
    };
    /*Swift.(file).UInt16.init(truncatingBitPattern:Int32)*/
    /*Swift.(file).UInt16.init(truncatingBitPattern:Int32)*/
    MIO_Mixin_UInt16.prototype.initTruncatingBitPatternInt32 = function ($info, source) {
        throw 'unsupported method Swift.(file).UInt16.init(truncatingBitPattern:Int32) in ' + this.constructor.name;
    };
    /*Swift.(file).UInt16.init(truncatingBitPattern:UInt64)*/
    /*Swift.(file).UInt16.init(truncatingBitPattern:UInt64)*/
    MIO_Mixin_UInt16.prototype.initTruncatingBitPatternUInt64 = function ($info, source) {
        throw 'unsupported method Swift.(file).UInt16.init(truncatingBitPattern:UInt64) in ' + this.constructor.name;
    };
    /*Swift.(file).UInt16.init(truncatingBitPattern:Int64)*/
    /*Swift.(file).UInt16.init(truncatingBitPattern:Int64)*/
    MIO_Mixin_UInt16.prototype.initTruncatingBitPatternInt64 = function ($info, source) {
        throw 'unsupported method Swift.(file).UInt16.init(truncatingBitPattern:Int64) in ' + this.constructor.name;
    };
    /*Swift.(file).UInt16.init(truncatingBitPattern:UInt)*/
    /*Swift.(file).UInt16.init(truncatingBitPattern:UInt)*/
    MIO_Mixin_UInt16.prototype.initTruncatingBitPatternUInt = function ($info, source) {
        throw 'unsupported method Swift.(file).UInt16.init(truncatingBitPattern:UInt) in ' + this.constructor.name;
    };
    /*Swift.(file).UInt16.init(truncatingBitPattern:Int)*/
    /*Swift.(file).UInt16.init(truncatingBitPattern:Int)*/
    MIO_Mixin_UInt16.prototype.initTruncatingBitPatternInt = function ($info, source) {
        throw 'unsupported method Swift.(file).UInt16.init(truncatingBitPattern:Int) in ' + this.constructor.name;
    };
    /*Swift.(file).UInt16.&infix(_:UInt16,_:UInt16)*/
    /*Swift.(file).BinaryInteger.&infix(_:Self,_:Self)*/
    MIO_Mixin_UInt16.infix_38 = function ($info, lhs, rhs) {
        return lhs & rhs;
    };
    /*Swift.(file).UInt16.|infix(_:UInt16,_:UInt16)*/
    /*Swift.(file).BinaryInteger.|infix(_:Self,_:Self)*/
    MIO_Mixin_UInt16.infix_124 = function ($info, lhs, rhs) {
        return lhs | rhs;
    };
    /*Swift.(file).UInt16.^infix(_:UInt16,_:UInt16)*/
    /*Swift.(file).BinaryInteger.^infix(_:Self,_:Self)*/
    MIO_Mixin_UInt16.infix_94 = function ($info, lhs, rhs) {
        return lhs ^ rhs;
    };
    /*Swift.(file).UInt16.&>>infix(_:UInt16,_:UInt16)*/
    /*Swift.(file).FixedWidthInteger.&>>infix(_:Self,_:Self)*/
    MIO_Mixin_UInt16.infix_38_62_62 = function ($info, lhs, rhs) {
        return lhs >> rhs;
    };
    /*Swift.(file).UInt16.&<<infix(_:UInt16,_:UInt16)*/
    /*Swift.(file).FixedWidthInteger.&<<infix(_:Self,_:Self)*/
    MIO_Mixin_UInt16.infix_38_60_60 = function ($info, lhs, rhs) {
        return lhs << rhs;
    };
    /*Swift.(file).UInt16./infix(_:UInt16,_:UInt16)*/
    /*Swift.(file).BinaryInteger./infix(_:Self,_:Self)*/
    MIO_Mixin_UInt16.infix_47 = function ($info, lhs, rhs) {
        return (lhs / rhs) | 0;
    };
    /*Swift.(file).UInt16.%infix(_:UInt16,_:UInt16)*/
    /*Swift.(file).BinaryInteger.%infix(_:Self,_:Self)*/
    MIO_Mixin_UInt16.infix_37 = function ($info, lhs, rhs) {
        return lhs % rhs;
    };
    /*Swift.(file).UInt16.+infix(_:UInt16,_:UInt16)*/
    /*Swift.(file).BinaryInteger.+infix(_:Self,_:Self)*/
    /*Swift.(file).AdditiveArithmetic.+infix(_:Self,_:Self)*/
    MIO_Mixin_UInt16.infix_43 = function ($info, lhs, rhs) {
        return lhs + rhs;
    };
    /*Swift.(file).UInt16.-infix(_:UInt16,_:UInt16)*/
    /*Swift.(file).BinaryInteger.-infix(_:Self,_:Self)*/
    /*Swift.(file).AdditiveArithmetic.-infix(_:Self,_:Self)*/
    MIO_Mixin_UInt16.infix_45 = function ($info, lhs, rhs) {
        return lhs - rhs;
    };
    /*Swift.(file).UInt16.*infix(_:UInt16,_:UInt16)*/
    /*Swift.(file).BinaryInteger.*infix(_:Self,_:Self)*/
    /*Swift.(file).Numeric.*infix(_:Self,_:Self)*/
    MIO_Mixin_UInt16.infix_42 = function ($info, lhs, rhs) {
        return lhs * rhs;
    };
    /*Swift.(file).UInt16.>>infix(_:UInt16,_:UInt16)*/
    /*Swift.(file).UInt16.>>infix(_:UInt16,_:UInt16)*/
    MIO_Mixin_UInt16.infix_62_62 = function ($info, lhs, rhs) {
        return lhs >> rhs;
    };
    /*Swift.(file).UInt16.>>=infix(_:UInt16,_:UInt16)*/
    /*Swift.(file).UInt16.>>=infix(_:UInt16,_:UInt16)*/
    MIO_Mixin_UInt16.infix_62_62_61 = function ($info, lhs$inout, rhs) {
        lhs$inout.set(lhs$inout.get() >> rhs);
    };
    /*Swift.(file).UInt16.<<infix(_:UInt16,_:UInt16)*/
    /*Swift.(file).UInt16.<<infix(_:UInt16,_:UInt16)*/
    MIO_Mixin_UInt16.infix_60_60 = function ($info, lhs, rhs) {
        return lhs << rhs;
    };
    /*Swift.(file).UInt16.<<=infix(_:UInt16,_:UInt16)*/
    /*Swift.(file).UInt16.<<=infix(_:UInt16,_:UInt16)*/
    MIO_Mixin_UInt16.infix_60_60_61 = function ($info, lhs$inout, rhs) {
        lhs$inout.set(lhs$inout.get() << rhs);
    };
    /*Swift.(file).UInt16.<=infix(_:UInt16,_:UInt16)*/
    /*Swift.(file).Comparable.<=infix(_:Self,_:Self)*/
    MIO_Mixin_UInt16.infix_60_61 = function ($info, lhs, rhs) {
        var _this = this;
        return Bool.prefix_33({}, (_.arg0 = rhs).constructor.infix_60({}, _.arg0, lhs));
    };
    /*Swift.(file).UInt16.>=infix(_:UInt16,_:UInt16)*/
    /*Swift.(file).Comparable.>=infix(_:Self,_:Self)*/
    MIO_Mixin_UInt16.infix_62_61 = function ($info, lhs, rhs) {
        var _this = this;
        return Bool.prefix_33({}, (_.arg0 = lhs).constructor.infix_60({}, _.arg0, rhs));
    };
    /*Swift.(file).UInt16.>infix(_:UInt16,_:UInt16)*/
    /*Swift.(file).Comparable.>infix(_:Self,_:Self)*/
    MIO_Mixin_UInt16.infix_62 = function ($info, lhs, rhs) {
        var _this = this;
        return (_.arg0 = rhs).constructor.infix_60({}, _.arg0, lhs);
    };
    /*Swift.(file).UInt16.customMirror*/
    MIO_Mixin_UInt16.prototype.customMirror$get = function () {
        throw 'unsupported variable Swift.(file).UInt16.customMirror in ' + this.constructor.name;
    };
    Object.defineProperty(MIO_Mixin_UInt16.prototype, "customMirror", {
        get: function () { return this.customMirror$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).UInt16.customPlaygroundQuickLook*/
    MIO_Mixin_UInt16.prototype.customPlaygroundQuickLook$get = function () {
        throw 'unsupported variable Swift.(file).UInt16.customPlaygroundQuickLook in ' + this.constructor.name;
    };
    Object.defineProperty(MIO_Mixin_UInt16.prototype, "customPlaygroundQuickLook", {
        get: function () { return this.customPlaygroundQuickLook$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    MIO_Mixin_UInt16.prototype.init$vars = function () {
    };
    var _97, _98, _99, _100, _101, _102, _103;
    MIO_Mixin_UInt16.$struct = true;
    MIO_Mixin_UInt16.$mixin = true;
    MIO_Mixin_UInt16.$infoAddress = '';
    MIO_Mixin_UInt16.initExactlyFloat$failable = true;
    MIO_Mixin_UInt16.initExactlyDouble$failable = true;
    MIO_Mixin_UInt16.initExactlyFloat80$failable = true;
    MIO_Mixin_UInt16.Words = (_97 = /** @class */ (function () {
            function class_121() {
            }
            /*Swift.(file).UInt16.Words.init(_:UInt16)*/
            /*Swift.(file).UInt16.Words.init(_:UInt16)*/
            class_121.prototype.initUInt16 = function ($info, value) {
                throw 'unsupported method Swift.(file).UInt16.Words.init(_:UInt16) in ' + this.constructor.name;
            };
            /*Swift.(file).UInt16.Words.count*/
            class_121.prototype.count$get = function () {
                var _this = this;
                return _this.distanceFromTo({}, _this.startIndex, _this.endIndex);
            };
            Object.defineProperty(class_121.prototype, "count", {
                get: function () { return this.count$get(); },
                enumerable: true,
                configurable: true
            });
            ;
            /*Swift.(file).UInt16.Words.startIndex*/
            class_121.prototype.startIndex$get = function () {
                throw 'unsupported variable Swift.(file).UInt16.Words.startIndex in ' + this.constructor.name;
            };
            Object.defineProperty(class_121.prototype, "startIndex", {
                get: function () { return this.startIndex$get(); },
                enumerable: true,
                configurable: true
            });
            ;
            /*Swift.(file).UInt16.Words.endIndex*/
            class_121.prototype.endIndex$get = function () {
                throw 'unsupported variable Swift.(file).UInt16.Words.endIndex in ' + this.constructor.name;
            };
            Object.defineProperty(class_121.prototype, "endIndex", {
                get: function () { return this.endIndex$get(); },
                enumerable: true,
                configurable: true
            });
            ;
            /*Swift.(file).UInt16.Words.indices*/
            class_121.prototype.indices$get = function () {
                var _this = this;
                return (_.arg0 = _this.startIndex).constructor.infix_46_46_60({}, _.arg0, _this.endIndex);
            };
            Object.defineProperty(class_121.prototype, "indices", {
                get: function () { return this.indices$get(); },
                enumerable: true,
                configurable: true
            });
            ;
            /*Swift.(file).UInt16.Words.index(after:Int)*/
            /*Swift.(file).RandomAccessCollection.index(after:Self.Index)*/
            /*Swift.(file).BidirectionalCollection.index(after:Self.Index)*/
            /*Swift.(file).Collection.index(after:Self.Index)*/
            class_121.prototype.indexAfter = function ($info, i) {
                throw 'unsupported method Swift.(file).UInt16.Words.index(after:Int) in ' + this.constructor.name;
            };
            /*Swift.(file).UInt16.Words.index(before:Int)*/
            /*Swift.(file).RandomAccessCollection.index(before:Self.Index)*/
            /*Swift.(file).BidirectionalCollection.index(before:Self.Index)*/
            class_121.prototype.indexBefore = function ($info, i) {
                throw 'unsupported method Swift.(file).UInt16.Words.index(before:Int) in ' + this.constructor.name;
            };
            /*Swift.(file).UInt16.Words.subscript(_:Int)*/
            /*Swift.(file).RandomAccessCollection.subscript(_:Self.Index)*/
            /*Swift.(file).BidirectionalCollection.subscript(_:Self.Index)*/
            /*Swift.(file).Collection.subscript(_:Self.Index)*/
            class_121.prototype.subscript$get = function ($info, position) {
                throw 'unsupported method Swift.(file).UInt16.Words.subscript(_:Int) in ' + this.constructor.name;
            };
            class_121.prototype.init$vars = function () {
            };
            return class_121;
        }()),
        _97.$struct = true,
        _97.$infoAddress = '',
        _97);
    MIO_Mixin_UInt16.SIMD2Storage = (_98 = /** @class */ (function () {
            function class_122() {
            }
            /*Swift.(file).UInt16.SIMD2Storage.scalarCount*/
            class_122.prototype.scalarCount$get = function () {
                throw 'unsupported variable Swift.(file).UInt16.SIMD2Storage.scalarCount in ' + this.constructor.name;
            };
            Object.defineProperty(class_122.prototype, "scalarCount", {
                get: function () { return this.scalarCount$get(); },
                enumerable: true,
                configurable: true
            });
            ;
            /*Swift.(file).UInt16.SIMD2Storage.init()*/
            /*Swift.(file).SIMDStorage.init()*/
            class_122.prototype.init = function ($info) {
                throw 'unsupported method Swift.(file).UInt16.SIMD2Storage.init() in ' + this.constructor.name;
            };
            /*Swift.(file).UInt16.SIMD2Storage.subscript(_:Int)*/
            /*Swift.(file).SIMDStorage.subscript(_:Int)*/
            class_122.prototype.subscript$get = function ($info, index) {
                throw 'unsupported method Swift.(file).UInt16.SIMD2Storage.subscript(_:Int) in ' + this.constructor.name;
            }; /*Swift.(file).UInt16.SIMD2Storage.subscript(_:Int)*/
            /*Swift.(file).SIMDStorage.subscript(_:Int)*/
            class_122.prototype.subscript$set = function ($info, newValue, index) {
                throw 'unsupported method Swift.(file).UInt16.SIMD2Storage.subscript(_:Int) in ' + this.constructor.name;
            };
            class_122.prototype.init$vars = function () {
            };
            return class_122;
        }()),
        _98.$struct = true,
        _98.$infoAddress = '',
        _98);
    MIO_Mixin_UInt16.SIMD4Storage = (_99 = /** @class */ (function () {
            function class_123() {
            }
            /*Swift.(file).UInt16.SIMD4Storage.scalarCount*/
            class_123.prototype.scalarCount$get = function () {
                throw 'unsupported variable Swift.(file).UInt16.SIMD4Storage.scalarCount in ' + this.constructor.name;
            };
            Object.defineProperty(class_123.prototype, "scalarCount", {
                get: function () { return this.scalarCount$get(); },
                enumerable: true,
                configurable: true
            });
            ;
            /*Swift.(file).UInt16.SIMD4Storage.init()*/
            /*Swift.(file).SIMDStorage.init()*/
            class_123.prototype.init = function ($info) {
                throw 'unsupported method Swift.(file).UInt16.SIMD4Storage.init() in ' + this.constructor.name;
            };
            /*Swift.(file).UInt16.SIMD4Storage.subscript(_:Int)*/
            /*Swift.(file).SIMDStorage.subscript(_:Int)*/
            class_123.prototype.subscript$get = function ($info, index) {
                throw 'unsupported method Swift.(file).UInt16.SIMD4Storage.subscript(_:Int) in ' + this.constructor.name;
            }; /*Swift.(file).UInt16.SIMD4Storage.subscript(_:Int)*/
            /*Swift.(file).SIMDStorage.subscript(_:Int)*/
            class_123.prototype.subscript$set = function ($info, newValue, index) {
                throw 'unsupported method Swift.(file).UInt16.SIMD4Storage.subscript(_:Int) in ' + this.constructor.name;
            };
            class_123.prototype.init$vars = function () {
            };
            return class_123;
        }()),
        _99.$struct = true,
        _99.$infoAddress = '',
        _99);
    MIO_Mixin_UInt16.SIMD8Storage = (_100 = /** @class */ (function () {
            function class_124() {
            }
            /*Swift.(file).UInt16.SIMD8Storage.scalarCount*/
            class_124.prototype.scalarCount$get = function () {
                throw 'unsupported variable Swift.(file).UInt16.SIMD8Storage.scalarCount in ' + this.constructor.name;
            };
            Object.defineProperty(class_124.prototype, "scalarCount", {
                get: function () { return this.scalarCount$get(); },
                enumerable: true,
                configurable: true
            });
            ;
            /*Swift.(file).UInt16.SIMD8Storage.init()*/
            /*Swift.(file).SIMDStorage.init()*/
            class_124.prototype.init = function ($info) {
                throw 'unsupported method Swift.(file).UInt16.SIMD8Storage.init() in ' + this.constructor.name;
            };
            /*Swift.(file).UInt16.SIMD8Storage.subscript(_:Int)*/
            /*Swift.(file).SIMDStorage.subscript(_:Int)*/
            class_124.prototype.subscript$get = function ($info, index) {
                throw 'unsupported method Swift.(file).UInt16.SIMD8Storage.subscript(_:Int) in ' + this.constructor.name;
            }; /*Swift.(file).UInt16.SIMD8Storage.subscript(_:Int)*/
            /*Swift.(file).SIMDStorage.subscript(_:Int)*/
            class_124.prototype.subscript$set = function ($info, newValue, index) {
                throw 'unsupported method Swift.(file).UInt16.SIMD8Storage.subscript(_:Int) in ' + this.constructor.name;
            };
            class_124.prototype.init$vars = function () {
            };
            return class_124;
        }()),
        _100.$struct = true,
        _100.$infoAddress = '',
        _100);
    MIO_Mixin_UInt16.SIMD16Storage = (_101 = /** @class */ (function () {
            function class_125() {
            }
            /*Swift.(file).UInt16.SIMD16Storage.scalarCount*/
            class_125.prototype.scalarCount$get = function () {
                throw 'unsupported variable Swift.(file).UInt16.SIMD16Storage.scalarCount in ' + this.constructor.name;
            };
            Object.defineProperty(class_125.prototype, "scalarCount", {
                get: function () { return this.scalarCount$get(); },
                enumerable: true,
                configurable: true
            });
            ;
            /*Swift.(file).UInt16.SIMD16Storage.init()*/
            /*Swift.(file).SIMDStorage.init()*/
            class_125.prototype.init = function ($info) {
                throw 'unsupported method Swift.(file).UInt16.SIMD16Storage.init() in ' + this.constructor.name;
            };
            /*Swift.(file).UInt16.SIMD16Storage.subscript(_:Int)*/
            /*Swift.(file).SIMDStorage.subscript(_:Int)*/
            class_125.prototype.subscript$get = function ($info, index) {
                throw 'unsupported method Swift.(file).UInt16.SIMD16Storage.subscript(_:Int) in ' + this.constructor.name;
            }; /*Swift.(file).UInt16.SIMD16Storage.subscript(_:Int)*/
            /*Swift.(file).SIMDStorage.subscript(_:Int)*/
            class_125.prototype.subscript$set = function ($info, newValue, index) {
                throw 'unsupported method Swift.(file).UInt16.SIMD16Storage.subscript(_:Int) in ' + this.constructor.name;
            };
            class_125.prototype.init$vars = function () {
            };
            return class_125;
        }()),
        _101.$struct = true,
        _101.$infoAddress = '',
        _101);
    MIO_Mixin_UInt16.SIMD32Storage = (_102 = /** @class */ (function () {
            function class_126() {
            }
            /*Swift.(file).UInt16.SIMD32Storage.scalarCount*/
            class_126.prototype.scalarCount$get = function () {
                throw 'unsupported variable Swift.(file).UInt16.SIMD32Storage.scalarCount in ' + this.constructor.name;
            };
            Object.defineProperty(class_126.prototype, "scalarCount", {
                get: function () { return this.scalarCount$get(); },
                enumerable: true,
                configurable: true
            });
            ;
            /*Swift.(file).UInt16.SIMD32Storage.init()*/
            /*Swift.(file).SIMDStorage.init()*/
            class_126.prototype.init = function ($info) {
                throw 'unsupported method Swift.(file).UInt16.SIMD32Storage.init() in ' + this.constructor.name;
            };
            /*Swift.(file).UInt16.SIMD32Storage.subscript(_:Int)*/
            /*Swift.(file).SIMDStorage.subscript(_:Int)*/
            class_126.prototype.subscript$get = function ($info, index) {
                throw 'unsupported method Swift.(file).UInt16.SIMD32Storage.subscript(_:Int) in ' + this.constructor.name;
            }; /*Swift.(file).UInt16.SIMD32Storage.subscript(_:Int)*/
            /*Swift.(file).SIMDStorage.subscript(_:Int)*/
            class_126.prototype.subscript$set = function ($info, newValue, index) {
                throw 'unsupported method Swift.(file).UInt16.SIMD32Storage.subscript(_:Int) in ' + this.constructor.name;
            };
            class_126.prototype.init$vars = function () {
            };
            return class_126;
        }()),
        _102.$struct = true,
        _102.$infoAddress = '',
        _102);
    MIO_Mixin_UInt16.SIMD64Storage = (_103 = /** @class */ (function () {
            function class_127() {
            }
            /*Swift.(file).UInt16.SIMD64Storage.scalarCount*/
            class_127.prototype.scalarCount$get = function () {
                throw 'unsupported variable Swift.(file).UInt16.SIMD64Storage.scalarCount in ' + this.constructor.name;
            };
            Object.defineProperty(class_127.prototype, "scalarCount", {
                get: function () { return this.scalarCount$get(); },
                enumerable: true,
                configurable: true
            });
            ;
            /*Swift.(file).UInt16.SIMD64Storage.init()*/
            /*Swift.(file).SIMDStorage.init()*/
            class_127.prototype.init = function ($info) {
                throw 'unsupported method Swift.(file).UInt16.SIMD64Storage.init() in ' + this.constructor.name;
            };
            /*Swift.(file).UInt16.SIMD64Storage.subscript(_:Int)*/
            /*Swift.(file).SIMDStorage.subscript(_:Int)*/
            class_127.prototype.subscript$get = function ($info, index) {
                throw 'unsupported method Swift.(file).UInt16.SIMD64Storage.subscript(_:Int) in ' + this.constructor.name;
            }; /*Swift.(file).UInt16.SIMD64Storage.subscript(_:Int)*/
            /*Swift.(file).SIMDStorage.subscript(_:Int)*/
            class_127.prototype.subscript$set = function ($info, newValue, index) {
                throw 'unsupported method Swift.(file).UInt16.SIMD64Storage.subscript(_:Int) in ' + this.constructor.name;
            };
            class_127.prototype.init$vars = function () {
            };
            return class_127;
        }()),
        _103.$struct = true,
        _103.$infoAddress = '',
        _103);
    return MIO_Mixin_UInt16;
}());
if (typeof RandomAccessCollection$implementation != 'undefined')
    _mixin(MIO_Mixin_UInt16.Words, RandomAccessCollection$implementation, false);
if (typeof SIMDStorage$implementation != 'undefined')
    _mixin(MIO_Mixin_UInt16.SIMD2Storage, SIMDStorage$implementation, false);
if (typeof SIMDStorage$implementation != 'undefined')
    _mixin(MIO_Mixin_UInt16.SIMD4Storage, SIMDStorage$implementation, false);
if (typeof SIMDStorage$implementation != 'undefined')
    _mixin(MIO_Mixin_UInt16.SIMD8Storage, SIMDStorage$implementation, false);
if (typeof SIMDStorage$implementation != 'undefined')
    _mixin(MIO_Mixin_UInt16.SIMD16Storage, SIMDStorage$implementation, false);
if (typeof SIMDStorage$implementation != 'undefined')
    _mixin(MIO_Mixin_UInt16.SIMD32Storage, SIMDStorage$implementation, false);
if (typeof SIMDStorage$implementation != 'undefined')
    _mixin(MIO_Mixin_UInt16.SIMD64Storage, SIMDStorage$implementation, false);
if (typeof FixedWidthInteger$implementation != 'undefined')
    _mixin(MIO_Mixin_UInt16, FixedWidthInteger$implementation, false);
if (typeof UnsignedInteger$implementation != 'undefined')
    _mixin(MIO_Mixin_UInt16, UnsignedInteger$implementation, false);
if (typeof _ExpressibleByBuiltinIntegerLiteral$implementation != 'undefined')
    _mixin(MIO_Mixin_UInt16, _ExpressibleByBuiltinIntegerLiteral$implementation, false);
if (typeof Codable$implementation != 'undefined')
    _mixin(MIO_Mixin_UInt16, Codable$implementation, false);
if (typeof Hashable$implementation != 'undefined')
    _mixin(MIO_Mixin_UInt16, Hashable$implementation, false);
if (typeof _HasCustomAnyHashableRepresentation$implementation != 'undefined')
    _mixin(MIO_Mixin_UInt16, _HasCustomAnyHashableRepresentation$implementation, false);
if (typeof CustomReflectable$implementation != 'undefined')
    _mixin(MIO_Mixin_UInt16, CustomReflectable$implementation, false);
if (typeof _CustomPlaygroundQuickLookable$implementation != 'undefined')
    _mixin(MIO_Mixin_UInt16, _CustomPlaygroundQuickLookable$implementation, false);
if (typeof _StringElement$implementation != 'undefined')
    _mixin(MIO_Mixin_UInt16, _StringElement$implementation, false);
if (typeof SIMDScalar$implementation != 'undefined')
    _mixin(MIO_Mixin_UInt16, SIMDScalar$implementation, false);
if (typeof CVarArg$implementation != 'undefined')
    _mixin(MIO_Mixin_UInt16, CVarArg$implementation, false);
_mixin(Number, MIO_Mixin_UInt16, true);
var UInt16 = /** @class */ (function () {
    function UInt16() {
    }
    return UInt16;
}());
_mixin(UInt16, MIO_Mixin_UInt16, true);
var MIO_Mixin_Int16 = /** @class */ (function () {
    function MIO_Mixin_Int16() {
    }
    /*Swift.(file).Int16.init(_builtinIntegerLiteral:IntLiteral)*/
    /*Swift.(file)._ExpressibleByBuiltinIntegerLiteral.init(_builtinIntegerLiteral:IntLiteral)*/
    MIO_Mixin_Int16.prototype.init_builtinIntegerLiteralIntLiteral = function ($info, x) {
        throw 'unsupported method Swift.(file).Int16.init(_builtinIntegerLiteral:IntLiteral) in ' + this.constructor.name;
    };
    /*Swift.(file).Int16.init(bitPattern:UInt16)*/
    /*Swift.(file).Int16.init(bitPattern:UInt16)*/
    MIO_Mixin_Int16.prototype.initBitPatternUInt16 = function ($info, x) {
        throw 'unsupported method Swift.(file).Int16.init(bitPattern:UInt16) in ' + this.constructor.name;
    };
    /*Swift.(file).Int16.init(_:Float)*/
    /*Swift.(file).Int16.init(_:Float)*/
    MIO_Mixin_Int16.prototype.initFloat = function ($info, source) {
        throw 'unsupported method Swift.(file).Int16.init(_:Float) in ' + this.constructor.name;
    };
    /*Swift.(file).Int16.init(exactly:Float)*/
    /*Swift.(file).Int16.init(exactly:Float)*/
    MIO_Mixin_Int16.prototype.initExactlyFloat = function ($info, source) {
        throw 'unsupported method Swift.(file).Int16.init(exactly:Float) in ' + this.constructor.name;
    };
    /*Swift.(file).Int16.init(_:Double)*/
    /*Swift.(file).Int16.init(_:Double)*/
    MIO_Mixin_Int16.prototype.initDouble = function ($info, source) {
        throw 'unsupported method Swift.(file).Int16.init(_:Double) in ' + this.constructor.name;
    };
    /*Swift.(file).Int16.init(exactly:Double)*/
    /*Swift.(file).Int16.init(exactly:Double)*/
    MIO_Mixin_Int16.prototype.initExactlyDouble = function ($info, source) {
        throw 'unsupported method Swift.(file).Int16.init(exactly:Double) in ' + this.constructor.name;
    };
    /*Swift.(file).Int16.init(_:Float80)*/
    /*Swift.(file).Int16.init(_:Float80)*/
    MIO_Mixin_Int16.prototype.initFloat80 = function ($info, source) {
        throw 'unsupported method Swift.(file).Int16.init(_:Float80) in ' + this.constructor.name;
    };
    /*Swift.(file).Int16.init(exactly:Float80)*/
    /*Swift.(file).Int16.init(exactly:Float80)*/
    MIO_Mixin_Int16.prototype.initExactlyFloat80 = function ($info, source) {
        throw 'unsupported method Swift.(file).Int16.init(exactly:Float80) in ' + this.constructor.name;
    };
    /*Swift.(file).Int16.==infix(_:Int16,_:Int16)*/
    /*Swift.(file).Equatable.==infix(_:Self,_:Self)*/
    MIO_Mixin_Int16.infix_61_61 = function ($info, lhs, rhs) {
        return lhs == rhs;
    };
    /*Swift.(file).Int16.<infix(_:Int16,_:Int16)*/
    /*Swift.(file).Comparable.<infix(_:Self,_:Self)*/
    MIO_Mixin_Int16.infix_60 = function ($info, lhs, rhs) {
        return lhs < rhs;
    };
    /*Swift.(file).Int16.+=infix(_:Int16,_:Int16)*/
    /*Swift.(file).BinaryInteger.+=infix(_:Self,_:Self)*/
    /*Swift.(file).AdditiveArithmetic.+=infix(_:Self,_:Self)*/
    MIO_Mixin_Int16.infix_43_61 = function ($info, lhs$inout, rhs) {
        lhs$inout.set(lhs$inout.get() + rhs);
    };
    /*Swift.(file).Int16.-=infix(_:Int16,_:Int16)*/
    /*Swift.(file).BinaryInteger.-=infix(_:Self,_:Self)*/
    /*Swift.(file).AdditiveArithmetic.-=infix(_:Self,_:Self)*/
    MIO_Mixin_Int16.infix_45_61 = function ($info, lhs$inout, rhs) {
        lhs$inout.set(lhs$inout.get() - rhs);
    };
    /*Swift.(file).Int16.*=infix(_:Int16,_:Int16)*/
    /*Swift.(file).BinaryInteger.*=infix(_:Self,_:Self)*/
    /*Swift.(file).Numeric.*=infix(_:Self,_:Self)*/
    MIO_Mixin_Int16.infix_42_61 = function ($info, lhs$inout, rhs) {
        lhs$inout.set(lhs$inout.get() * rhs);
    };
    /*Swift.(file).Int16./=infix(_:Int16,_:Int16)*/
    /*Swift.(file).BinaryInteger./=infix(_:Self,_:Self)*/
    MIO_Mixin_Int16.infix_47_61 = function ($info, lhs$inout, rhs) {
        lhs$inout.set((lhs$inout.get() / rhs) | 0);
    };
    /*Swift.(file).Int16.dividedReportingOverflow(by:Int16)*/
    /*Swift.(file).FixedWidthInteger.dividedReportingOverflow(by:Self)*/
    MIO_Mixin_Int16.prototype.dividedReportingOverflowBy = function ($info, other) {
        throw 'unsupported method Swift.(file).Int16.dividedReportingOverflow(by:Int16) in ' + this.constructor.name;
    };
    /*Swift.(file).Int16.remainderReportingOverflow(dividingBy:Int16)*/
    /*Swift.(file).FixedWidthInteger.remainderReportingOverflow(dividingBy:Self)*/
    MIO_Mixin_Int16.prototype.remainderReportingOverflowDividingBy = function ($info, other) {
        throw 'unsupported method Swift.(file).Int16.remainderReportingOverflow(dividingBy:Int16) in ' + this.constructor.name;
    };
    /*Swift.(file).Int16.addingReportingOverflow(_:Int16)*/
    /*Swift.(file).FixedWidthInteger.addingReportingOverflow(_:Self)*/
    MIO_Mixin_Int16.prototype.addingReportingOverflow = function ($info, other) {
        throw 'unsupported method Swift.(file).Int16.addingReportingOverflow(_:Int16) in ' + this.constructor.name;
    };
    /*Swift.(file).Int16.subtractingReportingOverflow(_:Int16)*/
    /*Swift.(file).FixedWidthInteger.subtractingReportingOverflow(_:Self)*/
    MIO_Mixin_Int16.prototype.subtractingReportingOverflow = function ($info, other) {
        throw 'unsupported method Swift.(file).Int16.subtractingReportingOverflow(_:Int16) in ' + this.constructor.name;
    };
    /*Swift.(file).Int16.multipliedReportingOverflow(by:Int16)*/
    /*Swift.(file).FixedWidthInteger.multipliedReportingOverflow(by:Self)*/
    MIO_Mixin_Int16.prototype.multipliedReportingOverflowBy = function ($info, other) {
        throw 'unsupported method Swift.(file).Int16.multipliedReportingOverflow(by:Int16) in ' + this.constructor.name;
    };
    /*Swift.(file).Int16.%=infix(_:Int16,_:Int16)*/
    /*Swift.(file).BinaryInteger.%=infix(_:Self,_:Self)*/
    MIO_Mixin_Int16.infix_37_61 = function ($info, lhs$inout, rhs) {
        lhs$inout.set(lhs$inout.get() % rhs);
    };
    /*Swift.(file).Int16.init(_:Int16)*/
    /*Swift.(file).Int16.init(_:Int16)*/
    MIO_Mixin_Int16.prototype.initInt16 = function ($info, _value) {
        throw 'unsupported method Swift.(file).Int16.init(_:Int16) in ' + this.constructor.name;
    };
    /*Swift.(file).Int16.&=infix(_:Int16,_:Int16)*/
    /*Swift.(file).BinaryInteger.&=infix(_:Self,_:Self)*/
    MIO_Mixin_Int16.infix_38_61 = function ($info, lhs$inout, rhs) {
        lhs$inout.set(lhs$inout.get() & rhs);
    };
    /*Swift.(file).Int16.|=infix(_:Int16,_:Int16)*/
    /*Swift.(file).BinaryInteger.|=infix(_:Self,_:Self)*/
    MIO_Mixin_Int16.infix_124_61 = function ($info, lhs$inout, rhs) {
        lhs$inout.set(lhs$inout.get() | rhs);
    };
    /*Swift.(file).Int16.^=infix(_:Int16,_:Int16)*/
    /*Swift.(file).BinaryInteger.^=infix(_:Self,_:Self)*/
    MIO_Mixin_Int16.infix_94_61 = function ($info, lhs$inout, rhs) {
        lhs$inout.set(lhs$inout.get() ^ rhs);
    };
    /*Swift.(file).Int16.&>>=infix(_:Int16,_:Int16)*/
    /*Swift.(file).FixedWidthInteger.&>>=infix(_:Self,_:Self)*/
    MIO_Mixin_Int16.infix_38_62_62_61 = function ($info, lhs$inout, rhs) {
        lhs$inout.set(lhs$inout.get() >> rhs);
    };
    /*Swift.(file).Int16.&<<=infix(_:Int16,_:Int16)*/
    /*Swift.(file).FixedWidthInteger.&<<=infix(_:Self,_:Self)*/
    MIO_Mixin_Int16.infix_38_60_60_61 = function ($info, lhs$inout, rhs) {
        lhs$inout.set(lhs$inout.get() << rhs);
    };
    /*Swift.(file).Int16.bitWidth*/
    MIO_Mixin_Int16.bitWidth$get = function () {
        var _this = this;
        return _this.constructor.bitWidth;
    };
    Object.defineProperty(MIO_Mixin_Int16, "bitWidth", {
        get: function () { return this.bitWidth$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).Int16.leadingZeroBitCount*/
    MIO_Mixin_Int16.prototype.leadingZeroBitCount$get = function () {
        throw 'unsupported variable Swift.(file).Int16.leadingZeroBitCount in ' + this.constructor.name;
    };
    Object.defineProperty(MIO_Mixin_Int16.prototype, "leadingZeroBitCount", {
        get: function () { return this.leadingZeroBitCount$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).Int16.trailingZeroBitCount*/
    MIO_Mixin_Int16.prototype.trailingZeroBitCount$get = function () {
        throw 'unsupported variable Swift.(file).Int16.trailingZeroBitCount in ' + this.constructor.name;
    };
    Object.defineProperty(MIO_Mixin_Int16.prototype, "trailingZeroBitCount", {
        get: function () { return this.trailingZeroBitCount$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).Int16.nonzeroBitCount*/
    MIO_Mixin_Int16.prototype.nonzeroBitCount$get = function () {
        throw 'unsupported variable Swift.(file).Int16.nonzeroBitCount in ' + this.constructor.name;
    };
    Object.defineProperty(MIO_Mixin_Int16.prototype, "nonzeroBitCount", {
        get: function () { return this.nonzeroBitCount$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).Int16.words*/
    MIO_Mixin_Int16.prototype.words$get = function () {
        throw 'unsupported variable Swift.(file).Int16.words in ' + this.constructor.name;
    };
    Object.defineProperty(MIO_Mixin_Int16.prototype, "words", {
        get: function () { return this.words$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).Int16.init(_truncatingBits:UInt)*/
    /*Swift.(file).FixedWidthInteger.init(_truncatingBits:UInt)*/
    MIO_Mixin_Int16.prototype.init_truncatingBitsUInt = function ($info, bits) {
        throw 'unsupported method Swift.(file).Int16.init(_truncatingBits:UInt) in ' + this.constructor.name;
    };
    /*Swift.(file).Int16.magnitude*/
    MIO_Mixin_Int16.prototype.magnitude$get = function () {
        throw 'unsupported variable Swift.(file).Int16.magnitude in ' + this.constructor.name;
    };
    Object.defineProperty(MIO_Mixin_Int16.prototype, "magnitude", {
        get: function () { return this.magnitude$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).Int16.multipliedFullWidth(by:Int16)*/
    /*Swift.(file).FixedWidthInteger.multipliedFullWidth(by:Self)*/
    MIO_Mixin_Int16.prototype.multipliedFullWidthBy = function ($info, other) {
        throw 'unsupported method Swift.(file).Int16.multipliedFullWidth(by:Int16) in ' + this.constructor.name;
    };
    /*Swift.(file).Int16.dividingFullWidth(_:(high: Int16, low: Int16.Magnitude))*/
    /*Swift.(file).FixedWidthInteger.dividingFullWidth(_:(high: Self, low: Self.Magnitude))*/
    MIO_Mixin_Int16.prototype.dividingFullWidth = function ($info, dividend) {
        throw 'unsupported method Swift.(file).Int16.dividingFullWidth(_:(high: Int16, low: Int16.Magnitude)) in ' + this.constructor.name;
    };
    /*Swift.(file).Int16.byteSwapped*/
    MIO_Mixin_Int16.prototype.byteSwapped$get = function () {
        throw 'unsupported variable Swift.(file).Int16.byteSwapped in ' + this.constructor.name;
    };
    Object.defineProperty(MIO_Mixin_Int16.prototype, "byteSwapped", {
        get: function () { return this.byteSwapped$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).Int16.toUIntMax()*/
    /*Swift.(file).Int16.toUIntMax()*/
    MIO_Mixin_Int16.prototype.toUIntMax = function ($info) {
        throw 'unsupported method Swift.(file).Int16.toUIntMax() in ' + this.constructor.name;
    };
    /*Swift.(file).Int16.signum()*/
    /*Swift.(file).BinaryInteger.signum()*/
    MIO_Mixin_Int16.prototype.signum = function ($info) {
        var _this = this;
        return _this.constructor.infix_45({}, (_this.constructor.infix_62({}, _this, _create(_this.constructor, 'initIntegerLiteral', {}, 0)) ? _create(_this.constructor, 'initIntegerLiteral', {}, 1) : _create(_this.constructor, 'initIntegerLiteral', {}, 0)), (_this.constructor.infix_60({}, _this, _create(_this.constructor, 'initIntegerLiteral', {}, 0)) ? _create(_this.constructor, 'initIntegerLiteral', {}, 1) : _create(_this.constructor, 'initIntegerLiteral', {}, 0)));
    };
    /*Swift.(file).Int16.init(from:Decoder)*/
    /*Swift.(file).Decodable.init(from:Decoder)*/
    MIO_Mixin_Int16.prototype.initFromDecoder = function ($info, decoder) {
        throw 'unsupported method Swift.(file).Int16.init(from:Decoder) in ' + this.constructor.name;
    };
    /*Swift.(file).Int16.encode(to:Encoder)*/
    /*Swift.(file).Encodable.encode(to:Encoder)*/
    MIO_Mixin_Int16.prototype.encodeTo = function ($info, encoder) {
        throw 'unsupported method Swift.(file).Int16.encode(to:Encoder) in ' + this.constructor.name;
    };
    /*Swift.(file).Int16.hash(into:Hasher)*/
    /*Swift.(file).Hashable.hash(into:Hasher)*/
    MIO_Mixin_Int16.prototype.hashInto = function ($info, hasher$inout) {
        throw 'unsupported method Swift.(file).Int16.hash(into:Hasher) in ' + this.constructor.name;
    };
    /*Swift.(file).Int16.hashValue*/
    MIO_Mixin_Int16.prototype.hashValue$get = function () {
        throw 'unsupported variable Swift.(file).Int16.hashValue in ' + this.constructor.name;
    };
    Object.defineProperty(MIO_Mixin_Int16.prototype, "hashValue", {
        get: function () { return this.hashValue$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).Int16.init(truncatingBitPattern:UInt32)*/
    /*Swift.(file).Int16.init(truncatingBitPattern:UInt32)*/
    MIO_Mixin_Int16.prototype.initTruncatingBitPatternUInt32 = function ($info, source) {
        throw 'unsupported method Swift.(file).Int16.init(truncatingBitPattern:UInt32) in ' + this.constructor.name;
    };
    /*Swift.(file).Int16.init(truncatingBitPattern:Int32)*/
    /*Swift.(file).Int16.init(truncatingBitPattern:Int32)*/
    MIO_Mixin_Int16.prototype.initTruncatingBitPatternInt32 = function ($info, source) {
        throw 'unsupported method Swift.(file).Int16.init(truncatingBitPattern:Int32) in ' + this.constructor.name;
    };
    /*Swift.(file).Int16.init(truncatingBitPattern:UInt64)*/
    /*Swift.(file).Int16.init(truncatingBitPattern:UInt64)*/
    MIO_Mixin_Int16.prototype.initTruncatingBitPatternUInt64 = function ($info, source) {
        throw 'unsupported method Swift.(file).Int16.init(truncatingBitPattern:UInt64) in ' + this.constructor.name;
    };
    /*Swift.(file).Int16.init(truncatingBitPattern:Int64)*/
    /*Swift.(file).Int16.init(truncatingBitPattern:Int64)*/
    MIO_Mixin_Int16.prototype.initTruncatingBitPatternInt64 = function ($info, source) {
        throw 'unsupported method Swift.(file).Int16.init(truncatingBitPattern:Int64) in ' + this.constructor.name;
    };
    /*Swift.(file).Int16.init(truncatingBitPattern:UInt)*/
    /*Swift.(file).Int16.init(truncatingBitPattern:UInt)*/
    MIO_Mixin_Int16.prototype.initTruncatingBitPatternUInt = function ($info, source) {
        throw 'unsupported method Swift.(file).Int16.init(truncatingBitPattern:UInt) in ' + this.constructor.name;
    };
    /*Swift.(file).Int16.init(truncatingBitPattern:Int)*/
    /*Swift.(file).Int16.init(truncatingBitPattern:Int)*/
    MIO_Mixin_Int16.prototype.initTruncatingBitPatternInt = function ($info, source) {
        throw 'unsupported method Swift.(file).Int16.init(truncatingBitPattern:Int) in ' + this.constructor.name;
    };
    /*Swift.(file).Int16.&infix(_:Int16,_:Int16)*/
    /*Swift.(file).BinaryInteger.&infix(_:Self,_:Self)*/
    MIO_Mixin_Int16.infix_38 = function ($info, lhs, rhs) {
        return lhs & rhs;
    };
    /*Swift.(file).Int16.|infix(_:Int16,_:Int16)*/
    /*Swift.(file).BinaryInteger.|infix(_:Self,_:Self)*/
    MIO_Mixin_Int16.infix_124 = function ($info, lhs, rhs) {
        return lhs | rhs;
    };
    /*Swift.(file).Int16.^infix(_:Int16,_:Int16)*/
    /*Swift.(file).BinaryInteger.^infix(_:Self,_:Self)*/
    MIO_Mixin_Int16.infix_94 = function ($info, lhs, rhs) {
        return lhs ^ rhs;
    };
    /*Swift.(file).Int16.&>>infix(_:Int16,_:Int16)*/
    /*Swift.(file).FixedWidthInteger.&>>infix(_:Self,_:Self)*/
    MIO_Mixin_Int16.infix_38_62_62 = function ($info, lhs, rhs) {
        return lhs >> rhs;
    };
    /*Swift.(file).Int16.&<<infix(_:Int16,_:Int16)*/
    /*Swift.(file).FixedWidthInteger.&<<infix(_:Self,_:Self)*/
    MIO_Mixin_Int16.infix_38_60_60 = function ($info, lhs, rhs) {
        return lhs << rhs;
    };
    /*Swift.(file).Int16./infix(_:Int16,_:Int16)*/
    /*Swift.(file).BinaryInteger./infix(_:Self,_:Self)*/
    MIO_Mixin_Int16.infix_47 = function ($info, lhs, rhs) {
        return (lhs / rhs) | 0;
    };
    /*Swift.(file).Int16.%infix(_:Int16,_:Int16)*/
    /*Swift.(file).BinaryInteger.%infix(_:Self,_:Self)*/
    MIO_Mixin_Int16.infix_37 = function ($info, lhs, rhs) {
        return lhs % rhs;
    };
    /*Swift.(file).Int16.+infix(_:Int16,_:Int16)*/
    /*Swift.(file).BinaryInteger.+infix(_:Self,_:Self)*/
    /*Swift.(file).AdditiveArithmetic.+infix(_:Self,_:Self)*/
    MIO_Mixin_Int16.infix_43 = function ($info, lhs, rhs) {
        return lhs + rhs;
    };
    /*Swift.(file).Int16.-infix(_:Int16,_:Int16)*/
    /*Swift.(file).BinaryInteger.-infix(_:Self,_:Self)*/
    /*Swift.(file).AdditiveArithmetic.-infix(_:Self,_:Self)*/
    MIO_Mixin_Int16.infix_45 = function ($info, lhs, rhs) {
        return lhs - rhs;
    };
    /*Swift.(file).Int16.*infix(_:Int16,_:Int16)*/
    /*Swift.(file).BinaryInteger.*infix(_:Self,_:Self)*/
    /*Swift.(file).Numeric.*infix(_:Self,_:Self)*/
    MIO_Mixin_Int16.infix_42 = function ($info, lhs, rhs) {
        return lhs * rhs;
    };
    /*Swift.(file).Int16.>>infix(_:Int16,_:Int16)*/
    /*Swift.(file).Int16.>>infix(_:Int16,_:Int16)*/
    MIO_Mixin_Int16.infix_62_62 = function ($info, lhs, rhs) {
        return lhs >> rhs;
    };
    /*Swift.(file).Int16.>>=infix(_:Int16,_:Int16)*/
    /*Swift.(file).Int16.>>=infix(_:Int16,_:Int16)*/
    MIO_Mixin_Int16.infix_62_62_61 = function ($info, lhs$inout, rhs) {
        lhs$inout.set(lhs$inout.get() >> rhs);
    };
    /*Swift.(file).Int16.<<infix(_:Int16,_:Int16)*/
    /*Swift.(file).Int16.<<infix(_:Int16,_:Int16)*/
    MIO_Mixin_Int16.infix_60_60 = function ($info, lhs, rhs) {
        return lhs << rhs;
    };
    /*Swift.(file).Int16.<<=infix(_:Int16,_:Int16)*/
    /*Swift.(file).Int16.<<=infix(_:Int16,_:Int16)*/
    MIO_Mixin_Int16.infix_60_60_61 = function ($info, lhs$inout, rhs) {
        lhs$inout.set(lhs$inout.get() << rhs);
    };
    /*Swift.(file).Int16.<=infix(_:Int16,_:Int16)*/
    /*Swift.(file).Comparable.<=infix(_:Self,_:Self)*/
    MIO_Mixin_Int16.infix_60_61 = function ($info, lhs, rhs) {
        var _this = this;
        return Bool.prefix_33({}, (_.arg0 = rhs).constructor.infix_60({}, _.arg0, lhs));
    };
    /*Swift.(file).Int16.>=infix(_:Int16,_:Int16)*/
    /*Swift.(file).Comparable.>=infix(_:Self,_:Self)*/
    MIO_Mixin_Int16.infix_62_61 = function ($info, lhs, rhs) {
        var _this = this;
        return Bool.prefix_33({}, (_.arg0 = lhs).constructor.infix_60({}, _.arg0, rhs));
    };
    /*Swift.(file).Int16.>infix(_:Int16,_:Int16)*/
    /*Swift.(file).Comparable.>infix(_:Self,_:Self)*/
    MIO_Mixin_Int16.infix_62 = function ($info, lhs, rhs) {
        var _this = this;
        return (_.arg0 = rhs).constructor.infix_60({}, _.arg0, lhs);
    };
    /*Swift.(file).Int16.customMirror*/
    MIO_Mixin_Int16.prototype.customMirror$get = function () {
        throw 'unsupported variable Swift.(file).Int16.customMirror in ' + this.constructor.name;
    };
    Object.defineProperty(MIO_Mixin_Int16.prototype, "customMirror", {
        get: function () { return this.customMirror$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).Int16.customPlaygroundQuickLook*/
    MIO_Mixin_Int16.prototype.customPlaygroundQuickLook$get = function () {
        throw 'unsupported variable Swift.(file).Int16.customPlaygroundQuickLook in ' + this.constructor.name;
    };
    Object.defineProperty(MIO_Mixin_Int16.prototype, "customPlaygroundQuickLook", {
        get: function () { return this.customPlaygroundQuickLook$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    MIO_Mixin_Int16.prototype.init$vars = function () {
    };
    var _104, _105, _106, _107, _108, _109, _110;
    MIO_Mixin_Int16.$struct = true;
    MIO_Mixin_Int16.$mixin = true;
    MIO_Mixin_Int16.$infoAddress = '';
    MIO_Mixin_Int16.initExactlyFloat$failable = true;
    MIO_Mixin_Int16.initExactlyDouble$failable = true;
    MIO_Mixin_Int16.initExactlyFloat80$failable = true;
    MIO_Mixin_Int16.Words = (_104 = /** @class */ (function () {
            function class_128() {
            }
            /*Swift.(file).Int16.Words.init(_:Int16)*/
            /*Swift.(file).Int16.Words.init(_:Int16)*/
            class_128.prototype.initInt16 = function ($info, value) {
                throw 'unsupported method Swift.(file).Int16.Words.init(_:Int16) in ' + this.constructor.name;
            };
            /*Swift.(file).Int16.Words.count*/
            class_128.prototype.count$get = function () {
                var _this = this;
                return _this.distanceFromTo({}, _this.startIndex, _this.endIndex);
            };
            Object.defineProperty(class_128.prototype, "count", {
                get: function () { return this.count$get(); },
                enumerable: true,
                configurable: true
            });
            ;
            /*Swift.(file).Int16.Words.startIndex*/
            class_128.prototype.startIndex$get = function () {
                throw 'unsupported variable Swift.(file).Int16.Words.startIndex in ' + this.constructor.name;
            };
            Object.defineProperty(class_128.prototype, "startIndex", {
                get: function () { return this.startIndex$get(); },
                enumerable: true,
                configurable: true
            });
            ;
            /*Swift.(file).Int16.Words.endIndex*/
            class_128.prototype.endIndex$get = function () {
                throw 'unsupported variable Swift.(file).Int16.Words.endIndex in ' + this.constructor.name;
            };
            Object.defineProperty(class_128.prototype, "endIndex", {
                get: function () { return this.endIndex$get(); },
                enumerable: true,
                configurable: true
            });
            ;
            /*Swift.(file).Int16.Words.indices*/
            class_128.prototype.indices$get = function () {
                var _this = this;
                return (_.arg0 = _this.startIndex).constructor.infix_46_46_60({}, _.arg0, _this.endIndex);
            };
            Object.defineProperty(class_128.prototype, "indices", {
                get: function () { return this.indices$get(); },
                enumerable: true,
                configurable: true
            });
            ;
            /*Swift.(file).Int16.Words.index(after:Int)*/
            /*Swift.(file).RandomAccessCollection.index(after:Self.Index)*/
            /*Swift.(file).BidirectionalCollection.index(after:Self.Index)*/
            /*Swift.(file).Collection.index(after:Self.Index)*/
            class_128.prototype.indexAfter = function ($info, i) {
                throw 'unsupported method Swift.(file).Int16.Words.index(after:Int) in ' + this.constructor.name;
            };
            /*Swift.(file).Int16.Words.index(before:Int)*/
            /*Swift.(file).RandomAccessCollection.index(before:Self.Index)*/
            /*Swift.(file).BidirectionalCollection.index(before:Self.Index)*/
            class_128.prototype.indexBefore = function ($info, i) {
                throw 'unsupported method Swift.(file).Int16.Words.index(before:Int) in ' + this.constructor.name;
            };
            /*Swift.(file).Int16.Words.subscript(_:Int)*/
            /*Swift.(file).RandomAccessCollection.subscript(_:Self.Index)*/
            /*Swift.(file).BidirectionalCollection.subscript(_:Self.Index)*/
            /*Swift.(file).Collection.subscript(_:Self.Index)*/
            class_128.prototype.subscript$get = function ($info, position) {
                throw 'unsupported method Swift.(file).Int16.Words.subscript(_:Int) in ' + this.constructor.name;
            };
            class_128.prototype.init$vars = function () {
            };
            return class_128;
        }()),
        _104.$struct = true,
        _104.$infoAddress = '',
        _104);
    MIO_Mixin_Int16.SIMD2Storage = (_105 = /** @class */ (function () {
            function class_129() {
            }
            /*Swift.(file).Int16.SIMD2Storage.scalarCount*/
            class_129.prototype.scalarCount$get = function () {
                throw 'unsupported variable Swift.(file).Int16.SIMD2Storage.scalarCount in ' + this.constructor.name;
            };
            Object.defineProperty(class_129.prototype, "scalarCount", {
                get: function () { return this.scalarCount$get(); },
                enumerable: true,
                configurable: true
            });
            ;
            /*Swift.(file).Int16.SIMD2Storage.init()*/
            /*Swift.(file).SIMDStorage.init()*/
            class_129.prototype.init = function ($info) {
                throw 'unsupported method Swift.(file).Int16.SIMD2Storage.init() in ' + this.constructor.name;
            };
            /*Swift.(file).Int16.SIMD2Storage.subscript(_:Int)*/
            /*Swift.(file).SIMDStorage.subscript(_:Int)*/
            class_129.prototype.subscript$get = function ($info, index) {
                throw 'unsupported method Swift.(file).Int16.SIMD2Storage.subscript(_:Int) in ' + this.constructor.name;
            }; /*Swift.(file).Int16.SIMD2Storage.subscript(_:Int)*/
            /*Swift.(file).SIMDStorage.subscript(_:Int)*/
            class_129.prototype.subscript$set = function ($info, newValue, index) {
                throw 'unsupported method Swift.(file).Int16.SIMD2Storage.subscript(_:Int) in ' + this.constructor.name;
            };
            class_129.prototype.init$vars = function () {
            };
            return class_129;
        }()),
        _105.$struct = true,
        _105.$infoAddress = '',
        _105);
    MIO_Mixin_Int16.SIMD4Storage = (_106 = /** @class */ (function () {
            function class_130() {
            }
            /*Swift.(file).Int16.SIMD4Storage.scalarCount*/
            class_130.prototype.scalarCount$get = function () {
                throw 'unsupported variable Swift.(file).Int16.SIMD4Storage.scalarCount in ' + this.constructor.name;
            };
            Object.defineProperty(class_130.prototype, "scalarCount", {
                get: function () { return this.scalarCount$get(); },
                enumerable: true,
                configurable: true
            });
            ;
            /*Swift.(file).Int16.SIMD4Storage.init()*/
            /*Swift.(file).SIMDStorage.init()*/
            class_130.prototype.init = function ($info) {
                throw 'unsupported method Swift.(file).Int16.SIMD4Storage.init() in ' + this.constructor.name;
            };
            /*Swift.(file).Int16.SIMD4Storage.subscript(_:Int)*/
            /*Swift.(file).SIMDStorage.subscript(_:Int)*/
            class_130.prototype.subscript$get = function ($info, index) {
                throw 'unsupported method Swift.(file).Int16.SIMD4Storage.subscript(_:Int) in ' + this.constructor.name;
            }; /*Swift.(file).Int16.SIMD4Storage.subscript(_:Int)*/
            /*Swift.(file).SIMDStorage.subscript(_:Int)*/
            class_130.prototype.subscript$set = function ($info, newValue, index) {
                throw 'unsupported method Swift.(file).Int16.SIMD4Storage.subscript(_:Int) in ' + this.constructor.name;
            };
            class_130.prototype.init$vars = function () {
            };
            return class_130;
        }()),
        _106.$struct = true,
        _106.$infoAddress = '',
        _106);
    MIO_Mixin_Int16.SIMD8Storage = (_107 = /** @class */ (function () {
            function class_131() {
            }
            /*Swift.(file).Int16.SIMD8Storage.scalarCount*/
            class_131.prototype.scalarCount$get = function () {
                throw 'unsupported variable Swift.(file).Int16.SIMD8Storage.scalarCount in ' + this.constructor.name;
            };
            Object.defineProperty(class_131.prototype, "scalarCount", {
                get: function () { return this.scalarCount$get(); },
                enumerable: true,
                configurable: true
            });
            ;
            /*Swift.(file).Int16.SIMD8Storage.init()*/
            /*Swift.(file).SIMDStorage.init()*/
            class_131.prototype.init = function ($info) {
                throw 'unsupported method Swift.(file).Int16.SIMD8Storage.init() in ' + this.constructor.name;
            };
            /*Swift.(file).Int16.SIMD8Storage.subscript(_:Int)*/
            /*Swift.(file).SIMDStorage.subscript(_:Int)*/
            class_131.prototype.subscript$get = function ($info, index) {
                throw 'unsupported method Swift.(file).Int16.SIMD8Storage.subscript(_:Int) in ' + this.constructor.name;
            }; /*Swift.(file).Int16.SIMD8Storage.subscript(_:Int)*/
            /*Swift.(file).SIMDStorage.subscript(_:Int)*/
            class_131.prototype.subscript$set = function ($info, newValue, index) {
                throw 'unsupported method Swift.(file).Int16.SIMD8Storage.subscript(_:Int) in ' + this.constructor.name;
            };
            class_131.prototype.init$vars = function () {
            };
            return class_131;
        }()),
        _107.$struct = true,
        _107.$infoAddress = '',
        _107);
    MIO_Mixin_Int16.SIMD16Storage = (_108 = /** @class */ (function () {
            function class_132() {
            }
            /*Swift.(file).Int16.SIMD16Storage.scalarCount*/
            class_132.prototype.scalarCount$get = function () {
                throw 'unsupported variable Swift.(file).Int16.SIMD16Storage.scalarCount in ' + this.constructor.name;
            };
            Object.defineProperty(class_132.prototype, "scalarCount", {
                get: function () { return this.scalarCount$get(); },
                enumerable: true,
                configurable: true
            });
            ;
            /*Swift.(file).Int16.SIMD16Storage.init()*/
            /*Swift.(file).SIMDStorage.init()*/
            class_132.prototype.init = function ($info) {
                throw 'unsupported method Swift.(file).Int16.SIMD16Storage.init() in ' + this.constructor.name;
            };
            /*Swift.(file).Int16.SIMD16Storage.subscript(_:Int)*/
            /*Swift.(file).SIMDStorage.subscript(_:Int)*/
            class_132.prototype.subscript$get = function ($info, index) {
                throw 'unsupported method Swift.(file).Int16.SIMD16Storage.subscript(_:Int) in ' + this.constructor.name;
            }; /*Swift.(file).Int16.SIMD16Storage.subscript(_:Int)*/
            /*Swift.(file).SIMDStorage.subscript(_:Int)*/
            class_132.prototype.subscript$set = function ($info, newValue, index) {
                throw 'unsupported method Swift.(file).Int16.SIMD16Storage.subscript(_:Int) in ' + this.constructor.name;
            };
            class_132.prototype.init$vars = function () {
            };
            return class_132;
        }()),
        _108.$struct = true,
        _108.$infoAddress = '',
        _108);
    MIO_Mixin_Int16.SIMD32Storage = (_109 = /** @class */ (function () {
            function class_133() {
            }
            /*Swift.(file).Int16.SIMD32Storage.scalarCount*/
            class_133.prototype.scalarCount$get = function () {
                throw 'unsupported variable Swift.(file).Int16.SIMD32Storage.scalarCount in ' + this.constructor.name;
            };
            Object.defineProperty(class_133.prototype, "scalarCount", {
                get: function () { return this.scalarCount$get(); },
                enumerable: true,
                configurable: true
            });
            ;
            /*Swift.(file).Int16.SIMD32Storage.init()*/
            /*Swift.(file).SIMDStorage.init()*/
            class_133.prototype.init = function ($info) {
                throw 'unsupported method Swift.(file).Int16.SIMD32Storage.init() in ' + this.constructor.name;
            };
            /*Swift.(file).Int16.SIMD32Storage.subscript(_:Int)*/
            /*Swift.(file).SIMDStorage.subscript(_:Int)*/
            class_133.prototype.subscript$get = function ($info, index) {
                throw 'unsupported method Swift.(file).Int16.SIMD32Storage.subscript(_:Int) in ' + this.constructor.name;
            }; /*Swift.(file).Int16.SIMD32Storage.subscript(_:Int)*/
            /*Swift.(file).SIMDStorage.subscript(_:Int)*/
            class_133.prototype.subscript$set = function ($info, newValue, index) {
                throw 'unsupported method Swift.(file).Int16.SIMD32Storage.subscript(_:Int) in ' + this.constructor.name;
            };
            class_133.prototype.init$vars = function () {
            };
            return class_133;
        }()),
        _109.$struct = true,
        _109.$infoAddress = '',
        _109);
    MIO_Mixin_Int16.SIMD64Storage = (_110 = /** @class */ (function () {
            function class_134() {
            }
            /*Swift.(file).Int16.SIMD64Storage.scalarCount*/
            class_134.prototype.scalarCount$get = function () {
                throw 'unsupported variable Swift.(file).Int16.SIMD64Storage.scalarCount in ' + this.constructor.name;
            };
            Object.defineProperty(class_134.prototype, "scalarCount", {
                get: function () { return this.scalarCount$get(); },
                enumerable: true,
                configurable: true
            });
            ;
            /*Swift.(file).Int16.SIMD64Storage.init()*/
            /*Swift.(file).SIMDStorage.init()*/
            class_134.prototype.init = function ($info) {
                throw 'unsupported method Swift.(file).Int16.SIMD64Storage.init() in ' + this.constructor.name;
            };
            /*Swift.(file).Int16.SIMD64Storage.subscript(_:Int)*/
            /*Swift.(file).SIMDStorage.subscript(_:Int)*/
            class_134.prototype.subscript$get = function ($info, index) {
                throw 'unsupported method Swift.(file).Int16.SIMD64Storage.subscript(_:Int) in ' + this.constructor.name;
            }; /*Swift.(file).Int16.SIMD64Storage.subscript(_:Int)*/
            /*Swift.(file).SIMDStorage.subscript(_:Int)*/
            class_134.prototype.subscript$set = function ($info, newValue, index) {
                throw 'unsupported method Swift.(file).Int16.SIMD64Storage.subscript(_:Int) in ' + this.constructor.name;
            };
            class_134.prototype.init$vars = function () {
            };
            return class_134;
        }()),
        _110.$struct = true,
        _110.$infoAddress = '',
        _110);
    return MIO_Mixin_Int16;
}());
if (typeof RandomAccessCollection$implementation != 'undefined')
    _mixin(MIO_Mixin_Int16.Words, RandomAccessCollection$implementation, false);
if (typeof SIMDStorage$implementation != 'undefined')
    _mixin(MIO_Mixin_Int16.SIMD2Storage, SIMDStorage$implementation, false);
if (typeof SIMDStorage$implementation != 'undefined')
    _mixin(MIO_Mixin_Int16.SIMD4Storage, SIMDStorage$implementation, false);
if (typeof SIMDStorage$implementation != 'undefined')
    _mixin(MIO_Mixin_Int16.SIMD8Storage, SIMDStorage$implementation, false);
if (typeof SIMDStorage$implementation != 'undefined')
    _mixin(MIO_Mixin_Int16.SIMD16Storage, SIMDStorage$implementation, false);
if (typeof SIMDStorage$implementation != 'undefined')
    _mixin(MIO_Mixin_Int16.SIMD32Storage, SIMDStorage$implementation, false);
if (typeof SIMDStorage$implementation != 'undefined')
    _mixin(MIO_Mixin_Int16.SIMD64Storage, SIMDStorage$implementation, false);
if (typeof FixedWidthInteger$implementation != 'undefined')
    _mixin(MIO_Mixin_Int16, FixedWidthInteger$implementation, false);
if (typeof SignedInteger$implementation != 'undefined')
    _mixin(MIO_Mixin_Int16, SignedInteger$implementation, false);
if (typeof _ExpressibleByBuiltinIntegerLiteral$implementation != 'undefined')
    _mixin(MIO_Mixin_Int16, _ExpressibleByBuiltinIntegerLiteral$implementation, false);
if (typeof Codable$implementation != 'undefined')
    _mixin(MIO_Mixin_Int16, Codable$implementation, false);
if (typeof Hashable$implementation != 'undefined')
    _mixin(MIO_Mixin_Int16, Hashable$implementation, false);
if (typeof _HasCustomAnyHashableRepresentation$implementation != 'undefined')
    _mixin(MIO_Mixin_Int16, _HasCustomAnyHashableRepresentation$implementation, false);
if (typeof CustomReflectable$implementation != 'undefined')
    _mixin(MIO_Mixin_Int16, CustomReflectable$implementation, false);
if (typeof _CustomPlaygroundQuickLookable$implementation != 'undefined')
    _mixin(MIO_Mixin_Int16, _CustomPlaygroundQuickLookable$implementation, false);
if (typeof SIMDScalar$implementation != 'undefined')
    _mixin(MIO_Mixin_Int16, SIMDScalar$implementation, false);
if (typeof CVarArg$implementation != 'undefined')
    _mixin(MIO_Mixin_Int16, CVarArg$implementation, false);
_mixin(Number, MIO_Mixin_Int16, true);
var Int16 = /** @class */ (function () {
    function Int16() {
    }
    return Int16;
}());
_mixin(Int16, MIO_Mixin_Int16, true);
var MIO_Mixin_UInt32 = /** @class */ (function () {
    function MIO_Mixin_UInt32() {
    }
    /*Swift.(file).UInt32.init(_builtinIntegerLiteral:IntLiteral)*/
    /*Swift.(file)._ExpressibleByBuiltinIntegerLiteral.init(_builtinIntegerLiteral:IntLiteral)*/
    MIO_Mixin_UInt32.prototype.init_builtinIntegerLiteralIntLiteral = function ($info, x) {
        throw 'unsupported method Swift.(file).UInt32.init(_builtinIntegerLiteral:IntLiteral) in ' + this.constructor.name;
    };
    /*Swift.(file).UInt32.init(bitPattern:Int32)*/
    /*Swift.(file).UInt32.init(bitPattern:Int32)*/
    MIO_Mixin_UInt32.prototype.initBitPatternInt32 = function ($info, x) {
        throw 'unsupported method Swift.(file).UInt32.init(bitPattern:Int32) in ' + this.constructor.name;
    };
    /*Swift.(file).UInt32.init(_:Float)*/
    /*Swift.(file).UInt32.init(_:Float)*/
    MIO_Mixin_UInt32.prototype.initFloat = function ($info, source) {
        throw 'unsupported method Swift.(file).UInt32.init(_:Float) in ' + this.constructor.name;
    };
    /*Swift.(file).UInt32.init(exactly:Float)*/
    /*Swift.(file).UInt32.init(exactly:Float)*/
    MIO_Mixin_UInt32.prototype.initExactlyFloat = function ($info, source) {
        throw 'unsupported method Swift.(file).UInt32.init(exactly:Float) in ' + this.constructor.name;
    };
    /*Swift.(file).UInt32.init(_:Double)*/
    /*Swift.(file).UInt32.init(_:Double)*/
    MIO_Mixin_UInt32.prototype.initDouble = function ($info, source) {
        throw 'unsupported method Swift.(file).UInt32.init(_:Double) in ' + this.constructor.name;
    };
    /*Swift.(file).UInt32.init(exactly:Double)*/
    /*Swift.(file).UInt32.init(exactly:Double)*/
    MIO_Mixin_UInt32.prototype.initExactlyDouble = function ($info, source) {
        throw 'unsupported method Swift.(file).UInt32.init(exactly:Double) in ' + this.constructor.name;
    };
    /*Swift.(file).UInt32.init(_:Float80)*/
    /*Swift.(file).UInt32.init(_:Float80)*/
    MIO_Mixin_UInt32.prototype.initFloat80 = function ($info, source) {
        throw 'unsupported method Swift.(file).UInt32.init(_:Float80) in ' + this.constructor.name;
    };
    /*Swift.(file).UInt32.init(exactly:Float80)*/
    /*Swift.(file).UInt32.init(exactly:Float80)*/
    MIO_Mixin_UInt32.prototype.initExactlyFloat80 = function ($info, source) {
        throw 'unsupported method Swift.(file).UInt32.init(exactly:Float80) in ' + this.constructor.name;
    };
    /*Swift.(file).UInt32.==infix(_:UInt32,_:UInt32)*/
    /*Swift.(file).Equatable.==infix(_:Self,_:Self)*/
    MIO_Mixin_UInt32.infix_61_61 = function ($info, lhs, rhs) {
        return lhs == rhs;
    };
    /*Swift.(file).UInt32.<infix(_:UInt32,_:UInt32)*/
    /*Swift.(file).Comparable.<infix(_:Self,_:Self)*/
    MIO_Mixin_UInt32.infix_60 = function ($info, lhs, rhs) {
        return lhs < rhs;
    };
    /*Swift.(file).UInt32.+=infix(_:UInt32,_:UInt32)*/
    /*Swift.(file).BinaryInteger.+=infix(_:Self,_:Self)*/
    /*Swift.(file).AdditiveArithmetic.+=infix(_:Self,_:Self)*/
    MIO_Mixin_UInt32.infix_43_61 = function ($info, lhs$inout, rhs) {
        lhs$inout.set(lhs$inout.get() + rhs);
    };
    /*Swift.(file).UInt32.-=infix(_:UInt32,_:UInt32)*/
    /*Swift.(file).BinaryInteger.-=infix(_:Self,_:Self)*/
    /*Swift.(file).AdditiveArithmetic.-=infix(_:Self,_:Self)*/
    MIO_Mixin_UInt32.infix_45_61 = function ($info, lhs$inout, rhs) {
        lhs$inout.set(lhs$inout.get() - rhs);
    };
    /*Swift.(file).UInt32.*=infix(_:UInt32,_:UInt32)*/
    /*Swift.(file).BinaryInteger.*=infix(_:Self,_:Self)*/
    /*Swift.(file).Numeric.*=infix(_:Self,_:Self)*/
    MIO_Mixin_UInt32.infix_42_61 = function ($info, lhs$inout, rhs) {
        lhs$inout.set(lhs$inout.get() * rhs);
    };
    /*Swift.(file).UInt32./=infix(_:UInt32,_:UInt32)*/
    /*Swift.(file).BinaryInteger./=infix(_:Self,_:Self)*/
    MIO_Mixin_UInt32.infix_47_61 = function ($info, lhs$inout, rhs) {
        lhs$inout.set((lhs$inout.get() / rhs) | 0);
    };
    /*Swift.(file).UInt32.dividedReportingOverflow(by:UInt32)*/
    /*Swift.(file).FixedWidthInteger.dividedReportingOverflow(by:Self)*/
    MIO_Mixin_UInt32.prototype.dividedReportingOverflowBy = function ($info, other) {
        throw 'unsupported method Swift.(file).UInt32.dividedReportingOverflow(by:UInt32) in ' + this.constructor.name;
    };
    /*Swift.(file).UInt32.remainderReportingOverflow(dividingBy:UInt32)*/
    /*Swift.(file).FixedWidthInteger.remainderReportingOverflow(dividingBy:Self)*/
    MIO_Mixin_UInt32.prototype.remainderReportingOverflowDividingBy = function ($info, other) {
        throw 'unsupported method Swift.(file).UInt32.remainderReportingOverflow(dividingBy:UInt32) in ' + this.constructor.name;
    };
    /*Swift.(file).UInt32.addingReportingOverflow(_:UInt32)*/
    /*Swift.(file).FixedWidthInteger.addingReportingOverflow(_:Self)*/
    MIO_Mixin_UInt32.prototype.addingReportingOverflow = function ($info, other) {
        throw 'unsupported method Swift.(file).UInt32.addingReportingOverflow(_:UInt32) in ' + this.constructor.name;
    };
    /*Swift.(file).UInt32.subtractingReportingOverflow(_:UInt32)*/
    /*Swift.(file).FixedWidthInteger.subtractingReportingOverflow(_:Self)*/
    MIO_Mixin_UInt32.prototype.subtractingReportingOverflow = function ($info, other) {
        throw 'unsupported method Swift.(file).UInt32.subtractingReportingOverflow(_:UInt32) in ' + this.constructor.name;
    };
    /*Swift.(file).UInt32.multipliedReportingOverflow(by:UInt32)*/
    /*Swift.(file).FixedWidthInteger.multipliedReportingOverflow(by:Self)*/
    MIO_Mixin_UInt32.prototype.multipliedReportingOverflowBy = function ($info, other) {
        throw 'unsupported method Swift.(file).UInt32.multipliedReportingOverflow(by:UInt32) in ' + this.constructor.name;
    };
    /*Swift.(file).UInt32.%=infix(_:UInt32,_:UInt32)*/
    /*Swift.(file).BinaryInteger.%=infix(_:Self,_:Self)*/
    MIO_Mixin_UInt32.infix_37_61 = function ($info, lhs$inout, rhs) {
        lhs$inout.set(lhs$inout.get() % rhs);
    };
    /*Swift.(file).UInt32.init(_:Int32)*/
    /*Swift.(file).UInt32.init(_:Int32)*/
    MIO_Mixin_UInt32.prototype.initInt32 = function ($info, _value) {
        throw 'unsupported method Swift.(file).UInt32.init(_:Int32) in ' + this.constructor.name;
    };
    /*Swift.(file).UInt32.&=infix(_:UInt32,_:UInt32)*/
    /*Swift.(file).BinaryInteger.&=infix(_:Self,_:Self)*/
    MIO_Mixin_UInt32.infix_38_61 = function ($info, lhs$inout, rhs) {
        lhs$inout.set(lhs$inout.get() & rhs);
    };
    /*Swift.(file).UInt32.|=infix(_:UInt32,_:UInt32)*/
    /*Swift.(file).BinaryInteger.|=infix(_:Self,_:Self)*/
    MIO_Mixin_UInt32.infix_124_61 = function ($info, lhs$inout, rhs) {
        lhs$inout.set(lhs$inout.get() | rhs);
    };
    /*Swift.(file).UInt32.^=infix(_:UInt32,_:UInt32)*/
    /*Swift.(file).BinaryInteger.^=infix(_:Self,_:Self)*/
    MIO_Mixin_UInt32.infix_94_61 = function ($info, lhs$inout, rhs) {
        lhs$inout.set(lhs$inout.get() ^ rhs);
    };
    /*Swift.(file).UInt32.&>>=infix(_:UInt32,_:UInt32)*/
    /*Swift.(file).FixedWidthInteger.&>>=infix(_:Self,_:Self)*/
    MIO_Mixin_UInt32.infix_38_62_62_61 = function ($info, lhs$inout, rhs) {
        lhs$inout.set(lhs$inout.get() >> rhs);
    };
    /*Swift.(file).UInt32.&<<=infix(_:UInt32,_:UInt32)*/
    /*Swift.(file).FixedWidthInteger.&<<=infix(_:Self,_:Self)*/
    MIO_Mixin_UInt32.infix_38_60_60_61 = function ($info, lhs$inout, rhs) {
        lhs$inout.set(lhs$inout.get() << rhs);
    };
    /*Swift.(file).UInt32.bitWidth*/
    MIO_Mixin_UInt32.bitWidth$get = function () {
        var _this = this;
        return _this.constructor.bitWidth;
    };
    Object.defineProperty(MIO_Mixin_UInt32, "bitWidth", {
        get: function () { return this.bitWidth$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).UInt32.leadingZeroBitCount*/
    MIO_Mixin_UInt32.prototype.leadingZeroBitCount$get = function () {
        throw 'unsupported variable Swift.(file).UInt32.leadingZeroBitCount in ' + this.constructor.name;
    };
    Object.defineProperty(MIO_Mixin_UInt32.prototype, "leadingZeroBitCount", {
        get: function () { return this.leadingZeroBitCount$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).UInt32.trailingZeroBitCount*/
    MIO_Mixin_UInt32.prototype.trailingZeroBitCount$get = function () {
        throw 'unsupported variable Swift.(file).UInt32.trailingZeroBitCount in ' + this.constructor.name;
    };
    Object.defineProperty(MIO_Mixin_UInt32.prototype, "trailingZeroBitCount", {
        get: function () { return this.trailingZeroBitCount$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).UInt32.nonzeroBitCount*/
    MIO_Mixin_UInt32.prototype.nonzeroBitCount$get = function () {
        throw 'unsupported variable Swift.(file).UInt32.nonzeroBitCount in ' + this.constructor.name;
    };
    Object.defineProperty(MIO_Mixin_UInt32.prototype, "nonzeroBitCount", {
        get: function () { return this.nonzeroBitCount$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).UInt32.words*/
    MIO_Mixin_UInt32.prototype.words$get = function () {
        throw 'unsupported variable Swift.(file).UInt32.words in ' + this.constructor.name;
    };
    Object.defineProperty(MIO_Mixin_UInt32.prototype, "words", {
        get: function () { return this.words$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).UInt32.init(_truncatingBits:UInt)*/
    /*Swift.(file).FixedWidthInteger.init(_truncatingBits:UInt)*/
    MIO_Mixin_UInt32.prototype.init_truncatingBitsUInt = function ($info, bits) {
        throw 'unsupported method Swift.(file).UInt32.init(_truncatingBits:UInt) in ' + this.constructor.name;
    };
    /*Swift.(file).UInt32.multipliedFullWidth(by:UInt32)*/
    /*Swift.(file).FixedWidthInteger.multipliedFullWidth(by:Self)*/
    MIO_Mixin_UInt32.prototype.multipliedFullWidthBy = function ($info, other) {
        throw 'unsupported method Swift.(file).UInt32.multipliedFullWidth(by:UInt32) in ' + this.constructor.name;
    };
    /*Swift.(file).UInt32.dividingFullWidth(_:(high: UInt32, low: UInt32.Magnitude))*/
    /*Swift.(file).FixedWidthInteger.dividingFullWidth(_:(high: Self, low: Self.Magnitude))*/
    MIO_Mixin_UInt32.prototype.dividingFullWidth = function ($info, dividend) {
        throw 'unsupported method Swift.(file).UInt32.dividingFullWidth(_:(high: UInt32, low: UInt32.Magnitude)) in ' + this.constructor.name;
    };
    /*Swift.(file).UInt32.byteSwapped*/
    MIO_Mixin_UInt32.prototype.byteSwapped$get = function () {
        throw 'unsupported variable Swift.(file).UInt32.byteSwapped in ' + this.constructor.name;
    };
    Object.defineProperty(MIO_Mixin_UInt32.prototype, "byteSwapped", {
        get: function () { return this.byteSwapped$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).UInt32.toIntMax()*/
    /*Swift.(file).UInt32.toIntMax()*/
    MIO_Mixin_UInt32.prototype.toIntMax = function ($info) {
        throw 'unsupported method Swift.(file).UInt32.toIntMax() in ' + this.constructor.name;
    };
    /*Swift.(file).UInt32.signum()*/
    /*Swift.(file).BinaryInteger.signum()*/
    MIO_Mixin_UInt32.prototype.signum = function ($info) {
        var _this = this;
        return _this.constructor.infix_45({}, (_this.constructor.infix_62({}, _this, _create(_this.constructor, 'initIntegerLiteral', {}, 0)) ? _create(_this.constructor, 'initIntegerLiteral', {}, 1) : _create(_this.constructor, 'initIntegerLiteral', {}, 0)), (_this.constructor.infix_60({}, _this, _create(_this.constructor, 'initIntegerLiteral', {}, 0)) ? _create(_this.constructor, 'initIntegerLiteral', {}, 1) : _create(_this.constructor, 'initIntegerLiteral', {}, 0)));
    };
    /*Swift.(file).UInt32.init(from:Decoder)*/
    /*Swift.(file).Decodable.init(from:Decoder)*/
    MIO_Mixin_UInt32.prototype.initFromDecoder = function ($info, decoder) {
        throw 'unsupported method Swift.(file).UInt32.init(from:Decoder) in ' + this.constructor.name;
    };
    /*Swift.(file).UInt32.encode(to:Encoder)*/
    /*Swift.(file).Encodable.encode(to:Encoder)*/
    MIO_Mixin_UInt32.prototype.encodeTo = function ($info, encoder) {
        throw 'unsupported method Swift.(file).UInt32.encode(to:Encoder) in ' + this.constructor.name;
    };
    /*Swift.(file).UInt32.hash(into:Hasher)*/
    /*Swift.(file).Hashable.hash(into:Hasher)*/
    MIO_Mixin_UInt32.prototype.hashInto = function ($info, hasher$inout) {
        throw 'unsupported method Swift.(file).UInt32.hash(into:Hasher) in ' + this.constructor.name;
    };
    /*Swift.(file).UInt32.hashValue*/
    MIO_Mixin_UInt32.prototype.hashValue$get = function () {
        throw 'unsupported variable Swift.(file).UInt32.hashValue in ' + this.constructor.name;
    };
    Object.defineProperty(MIO_Mixin_UInt32.prototype, "hashValue", {
        get: function () { return this.hashValue$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).UInt32.init(truncatingBitPattern:UInt64)*/
    /*Swift.(file).UInt32.init(truncatingBitPattern:UInt64)*/
    MIO_Mixin_UInt32.prototype.initTruncatingBitPatternUInt64 = function ($info, source) {
        throw 'unsupported method Swift.(file).UInt32.init(truncatingBitPattern:UInt64) in ' + this.constructor.name;
    };
    /*Swift.(file).UInt32.init(truncatingBitPattern:Int64)*/
    /*Swift.(file).UInt32.init(truncatingBitPattern:Int64)*/
    MIO_Mixin_UInt32.prototype.initTruncatingBitPatternInt64 = function ($info, source) {
        throw 'unsupported method Swift.(file).UInt32.init(truncatingBitPattern:Int64) in ' + this.constructor.name;
    };
    /*Swift.(file).UInt32.init(truncatingBitPattern:UInt)*/
    /*Swift.(file).UInt32.init(truncatingBitPattern:UInt)*/
    MIO_Mixin_UInt32.prototype.initTruncatingBitPatternUInt = function ($info, source) {
        throw 'unsupported method Swift.(file).UInt32.init(truncatingBitPattern:UInt) in ' + this.constructor.name;
    };
    /*Swift.(file).UInt32.init(truncatingBitPattern:Int)*/
    /*Swift.(file).UInt32.init(truncatingBitPattern:Int)*/
    MIO_Mixin_UInt32.prototype.initTruncatingBitPatternInt = function ($info, source) {
        throw 'unsupported method Swift.(file).UInt32.init(truncatingBitPattern:Int) in ' + this.constructor.name;
    };
    /*Swift.(file).UInt32.&infix(_:UInt32,_:UInt32)*/
    /*Swift.(file).BinaryInteger.&infix(_:Self,_:Self)*/
    MIO_Mixin_UInt32.infix_38 = function ($info, lhs, rhs) {
        return lhs & rhs;
    };
    /*Swift.(file).UInt32.|infix(_:UInt32,_:UInt32)*/
    /*Swift.(file).BinaryInteger.|infix(_:Self,_:Self)*/
    MIO_Mixin_UInt32.infix_124 = function ($info, lhs, rhs) {
        return lhs | rhs;
    };
    /*Swift.(file).UInt32.^infix(_:UInt32,_:UInt32)*/
    /*Swift.(file).BinaryInteger.^infix(_:Self,_:Self)*/
    MIO_Mixin_UInt32.infix_94 = function ($info, lhs, rhs) {
        return lhs ^ rhs;
    };
    /*Swift.(file).UInt32.&>>infix(_:UInt32,_:UInt32)*/
    /*Swift.(file).FixedWidthInteger.&>>infix(_:Self,_:Self)*/
    MIO_Mixin_UInt32.infix_38_62_62 = function ($info, lhs, rhs) {
        return lhs >> rhs;
    };
    /*Swift.(file).UInt32.&<<infix(_:UInt32,_:UInt32)*/
    /*Swift.(file).FixedWidthInteger.&<<infix(_:Self,_:Self)*/
    MIO_Mixin_UInt32.infix_38_60_60 = function ($info, lhs, rhs) {
        return lhs << rhs;
    };
    /*Swift.(file).UInt32./infix(_:UInt32,_:UInt32)*/
    /*Swift.(file).BinaryInteger./infix(_:Self,_:Self)*/
    MIO_Mixin_UInt32.infix_47 = function ($info, lhs, rhs) {
        return (lhs / rhs) | 0;
    };
    /*Swift.(file).UInt32.%infix(_:UInt32,_:UInt32)*/
    /*Swift.(file).BinaryInteger.%infix(_:Self,_:Self)*/
    MIO_Mixin_UInt32.infix_37 = function ($info, lhs, rhs) {
        return lhs % rhs;
    };
    /*Swift.(file).UInt32.+infix(_:UInt32,_:UInt32)*/
    /*Swift.(file).BinaryInteger.+infix(_:Self,_:Self)*/
    /*Swift.(file).AdditiveArithmetic.+infix(_:Self,_:Self)*/
    MIO_Mixin_UInt32.infix_43 = function ($info, lhs, rhs) {
        return lhs + rhs;
    };
    /*Swift.(file).UInt32.-infix(_:UInt32,_:UInt32)*/
    /*Swift.(file).BinaryInteger.-infix(_:Self,_:Self)*/
    /*Swift.(file).AdditiveArithmetic.-infix(_:Self,_:Self)*/
    MIO_Mixin_UInt32.infix_45 = function ($info, lhs, rhs) {
        return lhs - rhs;
    };
    /*Swift.(file).UInt32.*infix(_:UInt32,_:UInt32)*/
    /*Swift.(file).BinaryInteger.*infix(_:Self,_:Self)*/
    /*Swift.(file).Numeric.*infix(_:Self,_:Self)*/
    MIO_Mixin_UInt32.infix_42 = function ($info, lhs, rhs) {
        return lhs * rhs;
    };
    /*Swift.(file).UInt32.>>infix(_:UInt32,_:UInt32)*/
    /*Swift.(file).UInt32.>>infix(_:UInt32,_:UInt32)*/
    MIO_Mixin_UInt32.infix_62_62 = function ($info, lhs, rhs) {
        return lhs >> rhs;
    };
    /*Swift.(file).UInt32.>>=infix(_:UInt32,_:UInt32)*/
    /*Swift.(file).UInt32.>>=infix(_:UInt32,_:UInt32)*/
    MIO_Mixin_UInt32.infix_62_62_61 = function ($info, lhs$inout, rhs) {
        lhs$inout.set(lhs$inout.get() >> rhs);
    };
    /*Swift.(file).UInt32.<<infix(_:UInt32,_:UInt32)*/
    /*Swift.(file).UInt32.<<infix(_:UInt32,_:UInt32)*/
    MIO_Mixin_UInt32.infix_60_60 = function ($info, lhs, rhs) {
        return lhs << rhs;
    };
    /*Swift.(file).UInt32.<<=infix(_:UInt32,_:UInt32)*/
    /*Swift.(file).UInt32.<<=infix(_:UInt32,_:UInt32)*/
    MIO_Mixin_UInt32.infix_60_60_61 = function ($info, lhs$inout, rhs) {
        lhs$inout.set(lhs$inout.get() << rhs);
    };
    /*Swift.(file).UInt32.<=infix(_:UInt32,_:UInt32)*/
    /*Swift.(file).Comparable.<=infix(_:Self,_:Self)*/
    MIO_Mixin_UInt32.infix_60_61 = function ($info, lhs, rhs) {
        var _this = this;
        return Bool.prefix_33({}, (_.arg0 = rhs).constructor.infix_60({}, _.arg0, lhs));
    };
    /*Swift.(file).UInt32.>=infix(_:UInt32,_:UInt32)*/
    /*Swift.(file).Comparable.>=infix(_:Self,_:Self)*/
    MIO_Mixin_UInt32.infix_62_61 = function ($info, lhs, rhs) {
        var _this = this;
        return Bool.prefix_33({}, (_.arg0 = lhs).constructor.infix_60({}, _.arg0, rhs));
    };
    /*Swift.(file).UInt32.>infix(_:UInt32,_:UInt32)*/
    /*Swift.(file).Comparable.>infix(_:Self,_:Self)*/
    MIO_Mixin_UInt32.infix_62 = function ($info, lhs, rhs) {
        var _this = this;
        return (_.arg0 = rhs).constructor.infix_60({}, _.arg0, lhs);
    };
    /*Swift.(file).UInt32.init(_:Unicode.Scalar)*/
    /*Swift.(file).UInt32.init(_:Unicode.Scalar)*/
    MIO_Mixin_UInt32.prototype.initUnicodeScalar = function ($info, v) {
        throw 'unsupported method Swift.(file).UInt32.init(_:Unicode.Scalar) in ' + this.constructor.name;
    };
    /*Swift.(file).UInt32.customMirror*/
    MIO_Mixin_UInt32.prototype.customMirror$get = function () {
        throw 'unsupported variable Swift.(file).UInt32.customMirror in ' + this.constructor.name;
    };
    Object.defineProperty(MIO_Mixin_UInt32.prototype, "customMirror", {
        get: function () { return this.customMirror$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).UInt32.customPlaygroundQuickLook*/
    MIO_Mixin_UInt32.prototype.customPlaygroundQuickLook$get = function () {
        throw 'unsupported variable Swift.(file).UInt32.customPlaygroundQuickLook in ' + this.constructor.name;
    };
    Object.defineProperty(MIO_Mixin_UInt32.prototype, "customPlaygroundQuickLook", {
        get: function () { return this.customPlaygroundQuickLook$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    MIO_Mixin_UInt32.prototype.init$vars = function () {
    };
    var _111, _112, _113, _114, _115, _116, _117;
    MIO_Mixin_UInt32.$struct = true;
    MIO_Mixin_UInt32.$mixin = true;
    MIO_Mixin_UInt32.$infoAddress = '';
    MIO_Mixin_UInt32.initExactlyFloat$failable = true;
    MIO_Mixin_UInt32.initExactlyDouble$failable = true;
    MIO_Mixin_UInt32.initExactlyFloat80$failable = true;
    MIO_Mixin_UInt32.Words = (_111 = /** @class */ (function () {
            function class_135() {
            }
            /*Swift.(file).UInt32.Words.init(_:UInt32)*/
            /*Swift.(file).UInt32.Words.init(_:UInt32)*/
            class_135.prototype.initUInt32 = function ($info, value) {
                throw 'unsupported method Swift.(file).UInt32.Words.init(_:UInt32) in ' + this.constructor.name;
            };
            /*Swift.(file).UInt32.Words.count*/
            class_135.prototype.count$get = function () {
                var _this = this;
                return _this.distanceFromTo({}, _this.startIndex, _this.endIndex);
            };
            Object.defineProperty(class_135.prototype, "count", {
                get: function () { return this.count$get(); },
                enumerable: true,
                configurable: true
            });
            ;
            /*Swift.(file).UInt32.Words.startIndex*/
            class_135.prototype.startIndex$get = function () {
                throw 'unsupported variable Swift.(file).UInt32.Words.startIndex in ' + this.constructor.name;
            };
            Object.defineProperty(class_135.prototype, "startIndex", {
                get: function () { return this.startIndex$get(); },
                enumerable: true,
                configurable: true
            });
            ;
            /*Swift.(file).UInt32.Words.endIndex*/
            class_135.prototype.endIndex$get = function () {
                throw 'unsupported variable Swift.(file).UInt32.Words.endIndex in ' + this.constructor.name;
            };
            Object.defineProperty(class_135.prototype, "endIndex", {
                get: function () { return this.endIndex$get(); },
                enumerable: true,
                configurable: true
            });
            ;
            /*Swift.(file).UInt32.Words.indices*/
            class_135.prototype.indices$get = function () {
                var _this = this;
                return (_.arg0 = _this.startIndex).constructor.infix_46_46_60({}, _.arg0, _this.endIndex);
            };
            Object.defineProperty(class_135.prototype, "indices", {
                get: function () { return this.indices$get(); },
                enumerable: true,
                configurable: true
            });
            ;
            /*Swift.(file).UInt32.Words.index(after:Int)*/
            /*Swift.(file).RandomAccessCollection.index(after:Self.Index)*/
            /*Swift.(file).BidirectionalCollection.index(after:Self.Index)*/
            /*Swift.(file).Collection.index(after:Self.Index)*/
            class_135.prototype.indexAfter = function ($info, i) {
                throw 'unsupported method Swift.(file).UInt32.Words.index(after:Int) in ' + this.constructor.name;
            };
            /*Swift.(file).UInt32.Words.index(before:Int)*/
            /*Swift.(file).RandomAccessCollection.index(before:Self.Index)*/
            /*Swift.(file).BidirectionalCollection.index(before:Self.Index)*/
            class_135.prototype.indexBefore = function ($info, i) {
                throw 'unsupported method Swift.(file).UInt32.Words.index(before:Int) in ' + this.constructor.name;
            };
            /*Swift.(file).UInt32.Words.subscript(_:Int)*/
            /*Swift.(file).RandomAccessCollection.subscript(_:Self.Index)*/
            /*Swift.(file).BidirectionalCollection.subscript(_:Self.Index)*/
            /*Swift.(file).Collection.subscript(_:Self.Index)*/
            class_135.prototype.subscript$get = function ($info, position) {
                throw 'unsupported method Swift.(file).UInt32.Words.subscript(_:Int) in ' + this.constructor.name;
            };
            class_135.prototype.init$vars = function () {
            };
            return class_135;
        }()),
        _111.$struct = true,
        _111.$infoAddress = '',
        _111);
    MIO_Mixin_UInt32.SIMD2Storage = (_112 = /** @class */ (function () {
            function class_136() {
            }
            /*Swift.(file).UInt32.SIMD2Storage.scalarCount*/
            class_136.prototype.scalarCount$get = function () {
                throw 'unsupported variable Swift.(file).UInt32.SIMD2Storage.scalarCount in ' + this.constructor.name;
            };
            Object.defineProperty(class_136.prototype, "scalarCount", {
                get: function () { return this.scalarCount$get(); },
                enumerable: true,
                configurable: true
            });
            ;
            /*Swift.(file).UInt32.SIMD2Storage.init()*/
            /*Swift.(file).SIMDStorage.init()*/
            class_136.prototype.init = function ($info) {
                throw 'unsupported method Swift.(file).UInt32.SIMD2Storage.init() in ' + this.constructor.name;
            };
            /*Swift.(file).UInt32.SIMD2Storage.subscript(_:Int)*/
            /*Swift.(file).SIMDStorage.subscript(_:Int)*/
            class_136.prototype.subscript$get = function ($info, index) {
                throw 'unsupported method Swift.(file).UInt32.SIMD2Storage.subscript(_:Int) in ' + this.constructor.name;
            }; /*Swift.(file).UInt32.SIMD2Storage.subscript(_:Int)*/
            /*Swift.(file).SIMDStorage.subscript(_:Int)*/
            class_136.prototype.subscript$set = function ($info, newValue, index) {
                throw 'unsupported method Swift.(file).UInt32.SIMD2Storage.subscript(_:Int) in ' + this.constructor.name;
            };
            class_136.prototype.init$vars = function () {
            };
            return class_136;
        }()),
        _112.$struct = true,
        _112.$infoAddress = '',
        _112);
    MIO_Mixin_UInt32.SIMD4Storage = (_113 = /** @class */ (function () {
            function class_137() {
            }
            /*Swift.(file).UInt32.SIMD4Storage.scalarCount*/
            class_137.prototype.scalarCount$get = function () {
                throw 'unsupported variable Swift.(file).UInt32.SIMD4Storage.scalarCount in ' + this.constructor.name;
            };
            Object.defineProperty(class_137.prototype, "scalarCount", {
                get: function () { return this.scalarCount$get(); },
                enumerable: true,
                configurable: true
            });
            ;
            /*Swift.(file).UInt32.SIMD4Storage.init()*/
            /*Swift.(file).SIMDStorage.init()*/
            class_137.prototype.init = function ($info) {
                throw 'unsupported method Swift.(file).UInt32.SIMD4Storage.init() in ' + this.constructor.name;
            };
            /*Swift.(file).UInt32.SIMD4Storage.subscript(_:Int)*/
            /*Swift.(file).SIMDStorage.subscript(_:Int)*/
            class_137.prototype.subscript$get = function ($info, index) {
                throw 'unsupported method Swift.(file).UInt32.SIMD4Storage.subscript(_:Int) in ' + this.constructor.name;
            }; /*Swift.(file).UInt32.SIMD4Storage.subscript(_:Int)*/
            /*Swift.(file).SIMDStorage.subscript(_:Int)*/
            class_137.prototype.subscript$set = function ($info, newValue, index) {
                throw 'unsupported method Swift.(file).UInt32.SIMD4Storage.subscript(_:Int) in ' + this.constructor.name;
            };
            class_137.prototype.init$vars = function () {
            };
            return class_137;
        }()),
        _113.$struct = true,
        _113.$infoAddress = '',
        _113);
    MIO_Mixin_UInt32.SIMD8Storage = (_114 = /** @class */ (function () {
            function class_138() {
            }
            /*Swift.(file).UInt32.SIMD8Storage.scalarCount*/
            class_138.prototype.scalarCount$get = function () {
                throw 'unsupported variable Swift.(file).UInt32.SIMD8Storage.scalarCount in ' + this.constructor.name;
            };
            Object.defineProperty(class_138.prototype, "scalarCount", {
                get: function () { return this.scalarCount$get(); },
                enumerable: true,
                configurable: true
            });
            ;
            /*Swift.(file).UInt32.SIMD8Storage.init()*/
            /*Swift.(file).SIMDStorage.init()*/
            class_138.prototype.init = function ($info) {
                throw 'unsupported method Swift.(file).UInt32.SIMD8Storage.init() in ' + this.constructor.name;
            };
            /*Swift.(file).UInt32.SIMD8Storage.subscript(_:Int)*/
            /*Swift.(file).SIMDStorage.subscript(_:Int)*/
            class_138.prototype.subscript$get = function ($info, index) {
                throw 'unsupported method Swift.(file).UInt32.SIMD8Storage.subscript(_:Int) in ' + this.constructor.name;
            }; /*Swift.(file).UInt32.SIMD8Storage.subscript(_:Int)*/
            /*Swift.(file).SIMDStorage.subscript(_:Int)*/
            class_138.prototype.subscript$set = function ($info, newValue, index) {
                throw 'unsupported method Swift.(file).UInt32.SIMD8Storage.subscript(_:Int) in ' + this.constructor.name;
            };
            class_138.prototype.init$vars = function () {
            };
            return class_138;
        }()),
        _114.$struct = true,
        _114.$infoAddress = '',
        _114);
    MIO_Mixin_UInt32.SIMD16Storage = (_115 = /** @class */ (function () {
            function class_139() {
            }
            /*Swift.(file).UInt32.SIMD16Storage.scalarCount*/
            class_139.prototype.scalarCount$get = function () {
                throw 'unsupported variable Swift.(file).UInt32.SIMD16Storage.scalarCount in ' + this.constructor.name;
            };
            Object.defineProperty(class_139.prototype, "scalarCount", {
                get: function () { return this.scalarCount$get(); },
                enumerable: true,
                configurable: true
            });
            ;
            /*Swift.(file).UInt32.SIMD16Storage.init()*/
            /*Swift.(file).SIMDStorage.init()*/
            class_139.prototype.init = function ($info) {
                throw 'unsupported method Swift.(file).UInt32.SIMD16Storage.init() in ' + this.constructor.name;
            };
            /*Swift.(file).UInt32.SIMD16Storage.subscript(_:Int)*/
            /*Swift.(file).SIMDStorage.subscript(_:Int)*/
            class_139.prototype.subscript$get = function ($info, index) {
                throw 'unsupported method Swift.(file).UInt32.SIMD16Storage.subscript(_:Int) in ' + this.constructor.name;
            }; /*Swift.(file).UInt32.SIMD16Storage.subscript(_:Int)*/
            /*Swift.(file).SIMDStorage.subscript(_:Int)*/
            class_139.prototype.subscript$set = function ($info, newValue, index) {
                throw 'unsupported method Swift.(file).UInt32.SIMD16Storage.subscript(_:Int) in ' + this.constructor.name;
            };
            class_139.prototype.init$vars = function () {
            };
            return class_139;
        }()),
        _115.$struct = true,
        _115.$infoAddress = '',
        _115);
    MIO_Mixin_UInt32.SIMD32Storage = (_116 = /** @class */ (function () {
            function class_140() {
            }
            /*Swift.(file).UInt32.SIMD32Storage.scalarCount*/
            class_140.prototype.scalarCount$get = function () {
                throw 'unsupported variable Swift.(file).UInt32.SIMD32Storage.scalarCount in ' + this.constructor.name;
            };
            Object.defineProperty(class_140.prototype, "scalarCount", {
                get: function () { return this.scalarCount$get(); },
                enumerable: true,
                configurable: true
            });
            ;
            /*Swift.(file).UInt32.SIMD32Storage.init()*/
            /*Swift.(file).SIMDStorage.init()*/
            class_140.prototype.init = function ($info) {
                throw 'unsupported method Swift.(file).UInt32.SIMD32Storage.init() in ' + this.constructor.name;
            };
            /*Swift.(file).UInt32.SIMD32Storage.subscript(_:Int)*/
            /*Swift.(file).SIMDStorage.subscript(_:Int)*/
            class_140.prototype.subscript$get = function ($info, index) {
                throw 'unsupported method Swift.(file).UInt32.SIMD32Storage.subscript(_:Int) in ' + this.constructor.name;
            }; /*Swift.(file).UInt32.SIMD32Storage.subscript(_:Int)*/
            /*Swift.(file).SIMDStorage.subscript(_:Int)*/
            class_140.prototype.subscript$set = function ($info, newValue, index) {
                throw 'unsupported method Swift.(file).UInt32.SIMD32Storage.subscript(_:Int) in ' + this.constructor.name;
            };
            class_140.prototype.init$vars = function () {
            };
            return class_140;
        }()),
        _116.$struct = true,
        _116.$infoAddress = '',
        _116);
    MIO_Mixin_UInt32.SIMD64Storage = (_117 = /** @class */ (function () {
            function class_141() {
            }
            /*Swift.(file).UInt32.SIMD64Storage.scalarCount*/
            class_141.prototype.scalarCount$get = function () {
                throw 'unsupported variable Swift.(file).UInt32.SIMD64Storage.scalarCount in ' + this.constructor.name;
            };
            Object.defineProperty(class_141.prototype, "scalarCount", {
                get: function () { return this.scalarCount$get(); },
                enumerable: true,
                configurable: true
            });
            ;
            /*Swift.(file).UInt32.SIMD64Storage.init()*/
            /*Swift.(file).SIMDStorage.init()*/
            class_141.prototype.init = function ($info) {
                throw 'unsupported method Swift.(file).UInt32.SIMD64Storage.init() in ' + this.constructor.name;
            };
            /*Swift.(file).UInt32.SIMD64Storage.subscript(_:Int)*/
            /*Swift.(file).SIMDStorage.subscript(_:Int)*/
            class_141.prototype.subscript$get = function ($info, index) {
                throw 'unsupported method Swift.(file).UInt32.SIMD64Storage.subscript(_:Int) in ' + this.constructor.name;
            }; /*Swift.(file).UInt32.SIMD64Storage.subscript(_:Int)*/
            /*Swift.(file).SIMDStorage.subscript(_:Int)*/
            class_141.prototype.subscript$set = function ($info, newValue, index) {
                throw 'unsupported method Swift.(file).UInt32.SIMD64Storage.subscript(_:Int) in ' + this.constructor.name;
            };
            class_141.prototype.init$vars = function () {
            };
            return class_141;
        }()),
        _117.$struct = true,
        _117.$infoAddress = '',
        _117);
    return MIO_Mixin_UInt32;
}());
if (typeof RandomAccessCollection$implementation != 'undefined')
    _mixin(MIO_Mixin_UInt32.Words, RandomAccessCollection$implementation, false);
if (typeof SIMDStorage$implementation != 'undefined')
    _mixin(MIO_Mixin_UInt32.SIMD2Storage, SIMDStorage$implementation, false);
if (typeof SIMDStorage$implementation != 'undefined')
    _mixin(MIO_Mixin_UInt32.SIMD4Storage, SIMDStorage$implementation, false);
if (typeof SIMDStorage$implementation != 'undefined')
    _mixin(MIO_Mixin_UInt32.SIMD8Storage, SIMDStorage$implementation, false);
if (typeof SIMDStorage$implementation != 'undefined')
    _mixin(MIO_Mixin_UInt32.SIMD16Storage, SIMDStorage$implementation, false);
if (typeof SIMDStorage$implementation != 'undefined')
    _mixin(MIO_Mixin_UInt32.SIMD32Storage, SIMDStorage$implementation, false);
if (typeof SIMDStorage$implementation != 'undefined')
    _mixin(MIO_Mixin_UInt32.SIMD64Storage, SIMDStorage$implementation, false);
if (typeof FixedWidthInteger$implementation != 'undefined')
    _mixin(MIO_Mixin_UInt32, FixedWidthInteger$implementation, false);
if (typeof UnsignedInteger$implementation != 'undefined')
    _mixin(MIO_Mixin_UInt32, UnsignedInteger$implementation, false);
if (typeof _ExpressibleByBuiltinIntegerLiteral$implementation != 'undefined')
    _mixin(MIO_Mixin_UInt32, _ExpressibleByBuiltinIntegerLiteral$implementation, false);
if (typeof Codable$implementation != 'undefined')
    _mixin(MIO_Mixin_UInt32, Codable$implementation, false);
if (typeof Hashable$implementation != 'undefined')
    _mixin(MIO_Mixin_UInt32, Hashable$implementation, false);
if (typeof _HasCustomAnyHashableRepresentation$implementation != 'undefined')
    _mixin(MIO_Mixin_UInt32, _HasCustomAnyHashableRepresentation$implementation, false);
if (typeof CustomReflectable$implementation != 'undefined')
    _mixin(MIO_Mixin_UInt32, CustomReflectable$implementation, false);
if (typeof _CustomPlaygroundQuickLookable$implementation != 'undefined')
    _mixin(MIO_Mixin_UInt32, _CustomPlaygroundQuickLookable$implementation, false);
if (typeof SIMDScalar$implementation != 'undefined')
    _mixin(MIO_Mixin_UInt32, SIMDScalar$implementation, false);
if (typeof CVarArg$implementation != 'undefined')
    _mixin(MIO_Mixin_UInt32, CVarArg$implementation, false);
_mixin(Number, MIO_Mixin_UInt32, true);
var UInt32 = /** @class */ (function () {
    function UInt32() {
    }
    return UInt32;
}());
_mixin(UInt32, MIO_Mixin_UInt32, true);
var MIO_Mixin_Int32 = /** @class */ (function () {
    function MIO_Mixin_Int32() {
    }
    /*Swift.(file).Int32.init(_builtinIntegerLiteral:IntLiteral)*/
    /*Swift.(file)._ExpressibleByBuiltinIntegerLiteral.init(_builtinIntegerLiteral:IntLiteral)*/
    MIO_Mixin_Int32.prototype.init_builtinIntegerLiteralIntLiteral = function ($info, x) {
        throw 'unsupported method Swift.(file).Int32.init(_builtinIntegerLiteral:IntLiteral) in ' + this.constructor.name;
    };
    /*Swift.(file).Int32.init(bitPattern:UInt32)*/
    /*Swift.(file).Int32.init(bitPattern:UInt32)*/
    MIO_Mixin_Int32.prototype.initBitPatternUInt32 = function ($info, x) {
        throw 'unsupported method Swift.(file).Int32.init(bitPattern:UInt32) in ' + this.constructor.name;
    };
    /*Swift.(file).Int32.init(bitPattern:Float)*/
    /*Swift.(file).Int32.init(bitPattern:Float)*/
    MIO_Mixin_Int32.prototype.initBitPatternFloat = function ($info, x) {
        throw 'unsupported method Swift.(file).Int32.init(bitPattern:Float) in ' + this.constructor.name;
    };
    /*Swift.(file).Int32.init(_:Float)*/
    /*Swift.(file).Int32.init(_:Float)*/
    MIO_Mixin_Int32.prototype.initFloat = function ($info, source) {
        throw 'unsupported method Swift.(file).Int32.init(_:Float) in ' + this.constructor.name;
    };
    /*Swift.(file).Int32.init(exactly:Float)*/
    /*Swift.(file).Int32.init(exactly:Float)*/
    MIO_Mixin_Int32.prototype.initExactlyFloat = function ($info, source) {
        throw 'unsupported method Swift.(file).Int32.init(exactly:Float) in ' + this.constructor.name;
    };
    /*Swift.(file).Int32.init(_:Double)*/
    /*Swift.(file).Int32.init(_:Double)*/
    MIO_Mixin_Int32.prototype.initDouble = function ($info, source) {
        throw 'unsupported method Swift.(file).Int32.init(_:Double) in ' + this.constructor.name;
    };
    /*Swift.(file).Int32.init(exactly:Double)*/
    /*Swift.(file).Int32.init(exactly:Double)*/
    MIO_Mixin_Int32.prototype.initExactlyDouble = function ($info, source) {
        throw 'unsupported method Swift.(file).Int32.init(exactly:Double) in ' + this.constructor.name;
    };
    /*Swift.(file).Int32.init(_:Float80)*/
    /*Swift.(file).Int32.init(_:Float80)*/
    MIO_Mixin_Int32.prototype.initFloat80 = function ($info, source) {
        throw 'unsupported method Swift.(file).Int32.init(_:Float80) in ' + this.constructor.name;
    };
    /*Swift.(file).Int32.init(exactly:Float80)*/
    /*Swift.(file).Int32.init(exactly:Float80)*/
    MIO_Mixin_Int32.prototype.initExactlyFloat80 = function ($info, source) {
        throw 'unsupported method Swift.(file).Int32.init(exactly:Float80) in ' + this.constructor.name;
    };
    /*Swift.(file).Int32.==infix(_:Int32,_:Int32)*/
    /*Swift.(file).Equatable.==infix(_:Self,_:Self)*/
    MIO_Mixin_Int32.infix_61_61 = function ($info, lhs, rhs) {
        return lhs == rhs;
    };
    /*Swift.(file).Int32.<infix(_:Int32,_:Int32)*/
    /*Swift.(file).Comparable.<infix(_:Self,_:Self)*/
    MIO_Mixin_Int32.infix_60 = function ($info, lhs, rhs) {
        return lhs < rhs;
    };
    /*Swift.(file).Int32.+=infix(_:Int32,_:Int32)*/
    /*Swift.(file).BinaryInteger.+=infix(_:Self,_:Self)*/
    /*Swift.(file).AdditiveArithmetic.+=infix(_:Self,_:Self)*/
    MIO_Mixin_Int32.infix_43_61 = function ($info, lhs$inout, rhs) {
        lhs$inout.set(lhs$inout.get() + rhs);
    };
    /*Swift.(file).Int32.-=infix(_:Int32,_:Int32)*/
    /*Swift.(file).BinaryInteger.-=infix(_:Self,_:Self)*/
    /*Swift.(file).AdditiveArithmetic.-=infix(_:Self,_:Self)*/
    MIO_Mixin_Int32.infix_45_61 = function ($info, lhs$inout, rhs) {
        lhs$inout.set(lhs$inout.get() - rhs);
    };
    /*Swift.(file).Int32.*=infix(_:Int32,_:Int32)*/
    /*Swift.(file).BinaryInteger.*=infix(_:Self,_:Self)*/
    /*Swift.(file).Numeric.*=infix(_:Self,_:Self)*/
    MIO_Mixin_Int32.infix_42_61 = function ($info, lhs$inout, rhs) {
        lhs$inout.set(lhs$inout.get() * rhs);
    };
    /*Swift.(file).Int32./=infix(_:Int32,_:Int32)*/
    /*Swift.(file).BinaryInteger./=infix(_:Self,_:Self)*/
    MIO_Mixin_Int32.infix_47_61 = function ($info, lhs$inout, rhs) {
        lhs$inout.set((lhs$inout.get() / rhs) | 0);
    };
    /*Swift.(file).Int32.dividedReportingOverflow(by:Int32)*/
    /*Swift.(file).FixedWidthInteger.dividedReportingOverflow(by:Self)*/
    MIO_Mixin_Int32.prototype.dividedReportingOverflowBy = function ($info, other) {
        throw 'unsupported method Swift.(file).Int32.dividedReportingOverflow(by:Int32) in ' + this.constructor.name;
    };
    /*Swift.(file).Int32.remainderReportingOverflow(dividingBy:Int32)*/
    /*Swift.(file).FixedWidthInteger.remainderReportingOverflow(dividingBy:Self)*/
    MIO_Mixin_Int32.prototype.remainderReportingOverflowDividingBy = function ($info, other) {
        throw 'unsupported method Swift.(file).Int32.remainderReportingOverflow(dividingBy:Int32) in ' + this.constructor.name;
    };
    /*Swift.(file).Int32.addingReportingOverflow(_:Int32)*/
    /*Swift.(file).FixedWidthInteger.addingReportingOverflow(_:Self)*/
    MIO_Mixin_Int32.prototype.addingReportingOverflow = function ($info, other) {
        throw 'unsupported method Swift.(file).Int32.addingReportingOverflow(_:Int32) in ' + this.constructor.name;
    };
    /*Swift.(file).Int32.subtractingReportingOverflow(_:Int32)*/
    /*Swift.(file).FixedWidthInteger.subtractingReportingOverflow(_:Self)*/
    MIO_Mixin_Int32.prototype.subtractingReportingOverflow = function ($info, other) {
        throw 'unsupported method Swift.(file).Int32.subtractingReportingOverflow(_:Int32) in ' + this.constructor.name;
    };
    /*Swift.(file).Int32.multipliedReportingOverflow(by:Int32)*/
    /*Swift.(file).FixedWidthInteger.multipliedReportingOverflow(by:Self)*/
    MIO_Mixin_Int32.prototype.multipliedReportingOverflowBy = function ($info, other) {
        throw 'unsupported method Swift.(file).Int32.multipliedReportingOverflow(by:Int32) in ' + this.constructor.name;
    };
    /*Swift.(file).Int32.%=infix(_:Int32,_:Int32)*/
    /*Swift.(file).BinaryInteger.%=infix(_:Self,_:Self)*/
    MIO_Mixin_Int32.infix_37_61 = function ($info, lhs$inout, rhs) {
        lhs$inout.set(lhs$inout.get() % rhs);
    };
    /*Swift.(file).Int32.init(_:Int32)*/
    /*Swift.(file).Int32.init(_:Int32)*/
    MIO_Mixin_Int32.prototype.initInt32 = function ($info, _value) {
        throw 'unsupported method Swift.(file).Int32.init(_:Int32) in ' + this.constructor.name;
    };
    /*Swift.(file).Int32.&=infix(_:Int32,_:Int32)*/
    /*Swift.(file).BinaryInteger.&=infix(_:Self,_:Self)*/
    MIO_Mixin_Int32.infix_38_61 = function ($info, lhs$inout, rhs) {
        lhs$inout.set(lhs$inout.get() & rhs);
    };
    /*Swift.(file).Int32.|=infix(_:Int32,_:Int32)*/
    /*Swift.(file).BinaryInteger.|=infix(_:Self,_:Self)*/
    MIO_Mixin_Int32.infix_124_61 = function ($info, lhs$inout, rhs) {
        lhs$inout.set(lhs$inout.get() | rhs);
    };
    /*Swift.(file).Int32.^=infix(_:Int32,_:Int32)*/
    /*Swift.(file).BinaryInteger.^=infix(_:Self,_:Self)*/
    MIO_Mixin_Int32.infix_94_61 = function ($info, lhs$inout, rhs) {
        lhs$inout.set(lhs$inout.get() ^ rhs);
    };
    /*Swift.(file).Int32.&>>=infix(_:Int32,_:Int32)*/
    /*Swift.(file).FixedWidthInteger.&>>=infix(_:Self,_:Self)*/
    MIO_Mixin_Int32.infix_38_62_62_61 = function ($info, lhs$inout, rhs) {
        lhs$inout.set(lhs$inout.get() >> rhs);
    };
    /*Swift.(file).Int32.&<<=infix(_:Int32,_:Int32)*/
    /*Swift.(file).FixedWidthInteger.&<<=infix(_:Self,_:Self)*/
    MIO_Mixin_Int32.infix_38_60_60_61 = function ($info, lhs$inout, rhs) {
        lhs$inout.set(lhs$inout.get() << rhs);
    };
    /*Swift.(file).Int32.bitWidth*/
    MIO_Mixin_Int32.bitWidth$get = function () {
        var _this = this;
        return _this.constructor.bitWidth;
    };
    Object.defineProperty(MIO_Mixin_Int32, "bitWidth", {
        get: function () { return this.bitWidth$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).Int32.leadingZeroBitCount*/
    MIO_Mixin_Int32.prototype.leadingZeroBitCount$get = function () {
        throw 'unsupported variable Swift.(file).Int32.leadingZeroBitCount in ' + this.constructor.name;
    };
    Object.defineProperty(MIO_Mixin_Int32.prototype, "leadingZeroBitCount", {
        get: function () { return this.leadingZeroBitCount$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).Int32.trailingZeroBitCount*/
    MIO_Mixin_Int32.prototype.trailingZeroBitCount$get = function () {
        throw 'unsupported variable Swift.(file).Int32.trailingZeroBitCount in ' + this.constructor.name;
    };
    Object.defineProperty(MIO_Mixin_Int32.prototype, "trailingZeroBitCount", {
        get: function () { return this.trailingZeroBitCount$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).Int32.nonzeroBitCount*/
    MIO_Mixin_Int32.prototype.nonzeroBitCount$get = function () {
        throw 'unsupported variable Swift.(file).Int32.nonzeroBitCount in ' + this.constructor.name;
    };
    Object.defineProperty(MIO_Mixin_Int32.prototype, "nonzeroBitCount", {
        get: function () { return this.nonzeroBitCount$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).Int32.words*/
    MIO_Mixin_Int32.prototype.words$get = function () {
        throw 'unsupported variable Swift.(file).Int32.words in ' + this.constructor.name;
    };
    Object.defineProperty(MIO_Mixin_Int32.prototype, "words", {
        get: function () { return this.words$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).Int32.init(_truncatingBits:UInt)*/
    /*Swift.(file).FixedWidthInteger.init(_truncatingBits:UInt)*/
    MIO_Mixin_Int32.prototype.init_truncatingBitsUInt = function ($info, bits) {
        throw 'unsupported method Swift.(file).Int32.init(_truncatingBits:UInt) in ' + this.constructor.name;
    };
    /*Swift.(file).Int32.magnitude*/
    MIO_Mixin_Int32.prototype.magnitude$get = function () {
        throw 'unsupported variable Swift.(file).Int32.magnitude in ' + this.constructor.name;
    };
    Object.defineProperty(MIO_Mixin_Int32.prototype, "magnitude", {
        get: function () { return this.magnitude$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).Int32.multipliedFullWidth(by:Int32)*/
    /*Swift.(file).FixedWidthInteger.multipliedFullWidth(by:Self)*/
    MIO_Mixin_Int32.prototype.multipliedFullWidthBy = function ($info, other) {
        throw 'unsupported method Swift.(file).Int32.multipliedFullWidth(by:Int32) in ' + this.constructor.name;
    };
    /*Swift.(file).Int32.dividingFullWidth(_:(high: Int32, low: Int32.Magnitude))*/
    /*Swift.(file).FixedWidthInteger.dividingFullWidth(_:(high: Self, low: Self.Magnitude))*/
    MIO_Mixin_Int32.prototype.dividingFullWidth = function ($info, dividend) {
        throw 'unsupported method Swift.(file).Int32.dividingFullWidth(_:(high: Int32, low: Int32.Magnitude)) in ' + this.constructor.name;
    };
    /*Swift.(file).Int32.byteSwapped*/
    MIO_Mixin_Int32.prototype.byteSwapped$get = function () {
        throw 'unsupported variable Swift.(file).Int32.byteSwapped in ' + this.constructor.name;
    };
    Object.defineProperty(MIO_Mixin_Int32.prototype, "byteSwapped", {
        get: function () { return this.byteSwapped$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).Int32.toUIntMax()*/
    /*Swift.(file).Int32.toUIntMax()*/
    MIO_Mixin_Int32.prototype.toUIntMax = function ($info) {
        throw 'unsupported method Swift.(file).Int32.toUIntMax() in ' + this.constructor.name;
    };
    /*Swift.(file).Int32.signum()*/
    /*Swift.(file).BinaryInteger.signum()*/
    MIO_Mixin_Int32.prototype.signum = function ($info) {
        var _this = this;
        return _this.constructor.infix_45({}, (_this.constructor.infix_62({}, _this, _create(_this.constructor, 'initIntegerLiteral', {}, 0)) ? _create(_this.constructor, 'initIntegerLiteral', {}, 1) : _create(_this.constructor, 'initIntegerLiteral', {}, 0)), (_this.constructor.infix_60({}, _this, _create(_this.constructor, 'initIntegerLiteral', {}, 0)) ? _create(_this.constructor, 'initIntegerLiteral', {}, 1) : _create(_this.constructor, 'initIntegerLiteral', {}, 0)));
    };
    /*Swift.(file).Int32.init(from:Decoder)*/
    /*Swift.(file).Decodable.init(from:Decoder)*/
    MIO_Mixin_Int32.prototype.initFromDecoder = function ($info, decoder) {
        throw 'unsupported method Swift.(file).Int32.init(from:Decoder) in ' + this.constructor.name;
    };
    /*Swift.(file).Int32.encode(to:Encoder)*/
    /*Swift.(file).Encodable.encode(to:Encoder)*/
    MIO_Mixin_Int32.prototype.encodeTo = function ($info, encoder) {
        throw 'unsupported method Swift.(file).Int32.encode(to:Encoder) in ' + this.constructor.name;
    };
    /*Swift.(file).Int32.hash(into:Hasher)*/
    /*Swift.(file).Hashable.hash(into:Hasher)*/
    MIO_Mixin_Int32.prototype.hashInto = function ($info, hasher$inout) {
        throw 'unsupported method Swift.(file).Int32.hash(into:Hasher) in ' + this.constructor.name;
    };
    /*Swift.(file).Int32.hashValue*/
    MIO_Mixin_Int32.prototype.hashValue$get = function () {
        throw 'unsupported variable Swift.(file).Int32.hashValue in ' + this.constructor.name;
    };
    Object.defineProperty(MIO_Mixin_Int32.prototype, "hashValue", {
        get: function () { return this.hashValue$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).Int32.init(truncatingBitPattern:UInt64)*/
    /*Swift.(file).Int32.init(truncatingBitPattern:UInt64)*/
    MIO_Mixin_Int32.prototype.initTruncatingBitPatternUInt64 = function ($info, source) {
        throw 'unsupported method Swift.(file).Int32.init(truncatingBitPattern:UInt64) in ' + this.constructor.name;
    };
    /*Swift.(file).Int32.init(truncatingBitPattern:Int64)*/
    /*Swift.(file).Int32.init(truncatingBitPattern:Int64)*/
    MIO_Mixin_Int32.prototype.initTruncatingBitPatternInt64 = function ($info, source) {
        throw 'unsupported method Swift.(file).Int32.init(truncatingBitPattern:Int64) in ' + this.constructor.name;
    };
    /*Swift.(file).Int32.init(truncatingBitPattern:UInt)*/
    /*Swift.(file).Int32.init(truncatingBitPattern:UInt)*/
    MIO_Mixin_Int32.prototype.initTruncatingBitPatternUInt = function ($info, source) {
        throw 'unsupported method Swift.(file).Int32.init(truncatingBitPattern:UInt) in ' + this.constructor.name;
    };
    /*Swift.(file).Int32.init(truncatingBitPattern:Int)*/
    /*Swift.(file).Int32.init(truncatingBitPattern:Int)*/
    MIO_Mixin_Int32.prototype.initTruncatingBitPatternInt = function ($info, source) {
        throw 'unsupported method Swift.(file).Int32.init(truncatingBitPattern:Int) in ' + this.constructor.name;
    };
    /*Swift.(file).Int32.&infix(_:Int32,_:Int32)*/
    /*Swift.(file).BinaryInteger.&infix(_:Self,_:Self)*/
    MIO_Mixin_Int32.infix_38 = function ($info, lhs, rhs) {
        return lhs & rhs;
    };
    /*Swift.(file).Int32.|infix(_:Int32,_:Int32)*/
    /*Swift.(file).BinaryInteger.|infix(_:Self,_:Self)*/
    MIO_Mixin_Int32.infix_124 = function ($info, lhs, rhs) {
        return lhs | rhs;
    };
    /*Swift.(file).Int32.^infix(_:Int32,_:Int32)*/
    /*Swift.(file).BinaryInteger.^infix(_:Self,_:Self)*/
    MIO_Mixin_Int32.infix_94 = function ($info, lhs, rhs) {
        return lhs ^ rhs;
    };
    /*Swift.(file).Int32.&>>infix(_:Int32,_:Int32)*/
    /*Swift.(file).FixedWidthInteger.&>>infix(_:Self,_:Self)*/
    MIO_Mixin_Int32.infix_38_62_62 = function ($info, lhs, rhs) {
        return lhs >> rhs;
    };
    /*Swift.(file).Int32.&<<infix(_:Int32,_:Int32)*/
    /*Swift.(file).FixedWidthInteger.&<<infix(_:Self,_:Self)*/
    MIO_Mixin_Int32.infix_38_60_60 = function ($info, lhs, rhs) {
        return lhs << rhs;
    };
    /*Swift.(file).Int32./infix(_:Int32,_:Int32)*/
    /*Swift.(file).BinaryInteger./infix(_:Self,_:Self)*/
    MIO_Mixin_Int32.infix_47 = function ($info, lhs, rhs) {
        return (lhs / rhs) | 0;
    };
    /*Swift.(file).Int32.%infix(_:Int32,_:Int32)*/
    /*Swift.(file).BinaryInteger.%infix(_:Self,_:Self)*/
    MIO_Mixin_Int32.infix_37 = function ($info, lhs, rhs) {
        return lhs % rhs;
    };
    /*Swift.(file).Int32.+infix(_:Int32,_:Int32)*/
    /*Swift.(file).BinaryInteger.+infix(_:Self,_:Self)*/
    /*Swift.(file).AdditiveArithmetic.+infix(_:Self,_:Self)*/
    MIO_Mixin_Int32.infix_43 = function ($info, lhs, rhs) {
        return lhs + rhs;
    };
    /*Swift.(file).Int32.-infix(_:Int32,_:Int32)*/
    /*Swift.(file).BinaryInteger.-infix(_:Self,_:Self)*/
    /*Swift.(file).AdditiveArithmetic.-infix(_:Self,_:Self)*/
    MIO_Mixin_Int32.infix_45 = function ($info, lhs, rhs) {
        return lhs - rhs;
    };
    /*Swift.(file).Int32.*infix(_:Int32,_:Int32)*/
    /*Swift.(file).BinaryInteger.*infix(_:Self,_:Self)*/
    /*Swift.(file).Numeric.*infix(_:Self,_:Self)*/
    MIO_Mixin_Int32.infix_42 = function ($info, lhs, rhs) {
        return lhs * rhs;
    };
    /*Swift.(file).Int32.>>infix(_:Int32,_:Int32)*/
    /*Swift.(file).Int32.>>infix(_:Int32,_:Int32)*/
    MIO_Mixin_Int32.infix_62_62 = function ($info, lhs, rhs) {
        return lhs >> rhs;
    };
    /*Swift.(file).Int32.>>=infix(_:Int32,_:Int32)*/
    /*Swift.(file).Int32.>>=infix(_:Int32,_:Int32)*/
    MIO_Mixin_Int32.infix_62_62_61 = function ($info, lhs$inout, rhs) {
        lhs$inout.set(lhs$inout.get() >> rhs);
    };
    /*Swift.(file).Int32.<<infix(_:Int32,_:Int32)*/
    /*Swift.(file).Int32.<<infix(_:Int32,_:Int32)*/
    MIO_Mixin_Int32.infix_60_60 = function ($info, lhs, rhs) {
        return lhs << rhs;
    };
    /*Swift.(file).Int32.<<=infix(_:Int32,_:Int32)*/
    /*Swift.(file).Int32.<<=infix(_:Int32,_:Int32)*/
    MIO_Mixin_Int32.infix_60_60_61 = function ($info, lhs$inout, rhs) {
        lhs$inout.set(lhs$inout.get() << rhs);
    };
    /*Swift.(file).Int32.<=infix(_:Int32,_:Int32)*/
    /*Swift.(file).Comparable.<=infix(_:Self,_:Self)*/
    MIO_Mixin_Int32.infix_60_61 = function ($info, lhs, rhs) {
        var _this = this;
        return Bool.prefix_33({}, (_.arg0 = rhs).constructor.infix_60({}, _.arg0, lhs));
    };
    /*Swift.(file).Int32.>=infix(_:Int32,_:Int32)*/
    /*Swift.(file).Comparable.>=infix(_:Self,_:Self)*/
    MIO_Mixin_Int32.infix_62_61 = function ($info, lhs, rhs) {
        var _this = this;
        return Bool.prefix_33({}, (_.arg0 = lhs).constructor.infix_60({}, _.arg0, rhs));
    };
    /*Swift.(file).Int32.>infix(_:Int32,_:Int32)*/
    /*Swift.(file).Comparable.>infix(_:Self,_:Self)*/
    MIO_Mixin_Int32.infix_62 = function ($info, lhs, rhs) {
        var _this = this;
        return (_.arg0 = rhs).constructor.infix_60({}, _.arg0, lhs);
    };
    /*Swift.(file).Int32.customMirror*/
    MIO_Mixin_Int32.prototype.customMirror$get = function () {
        throw 'unsupported variable Swift.(file).Int32.customMirror in ' + this.constructor.name;
    };
    Object.defineProperty(MIO_Mixin_Int32.prototype, "customMirror", {
        get: function () { return this.customMirror$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).Int32.customPlaygroundQuickLook*/
    MIO_Mixin_Int32.prototype.customPlaygroundQuickLook$get = function () {
        throw 'unsupported variable Swift.(file).Int32.customPlaygroundQuickLook in ' + this.constructor.name;
    };
    Object.defineProperty(MIO_Mixin_Int32.prototype, "customPlaygroundQuickLook", {
        get: function () { return this.customPlaygroundQuickLook$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    MIO_Mixin_Int32.prototype.init$vars = function () {
    };
    var _118, _119, _120, _121, _122, _123, _124;
    MIO_Mixin_Int32.$struct = true;
    MIO_Mixin_Int32.$mixin = true;
    MIO_Mixin_Int32.$infoAddress = '';
    MIO_Mixin_Int32.initExactlyFloat$failable = true;
    MIO_Mixin_Int32.initExactlyDouble$failable = true;
    MIO_Mixin_Int32.initExactlyFloat80$failable = true;
    MIO_Mixin_Int32.Words = (_118 = /** @class */ (function () {
            function class_142() {
            }
            /*Swift.(file).Int32.Words.init(_:Int32)*/
            /*Swift.(file).Int32.Words.init(_:Int32)*/
            class_142.prototype.initInt32 = function ($info, value) {
                throw 'unsupported method Swift.(file).Int32.Words.init(_:Int32) in ' + this.constructor.name;
            };
            /*Swift.(file).Int32.Words.count*/
            class_142.prototype.count$get = function () {
                var _this = this;
                return _this.distanceFromTo({}, _this.startIndex, _this.endIndex);
            };
            Object.defineProperty(class_142.prototype, "count", {
                get: function () { return this.count$get(); },
                enumerable: true,
                configurable: true
            });
            ;
            /*Swift.(file).Int32.Words.startIndex*/
            class_142.prototype.startIndex$get = function () {
                throw 'unsupported variable Swift.(file).Int32.Words.startIndex in ' + this.constructor.name;
            };
            Object.defineProperty(class_142.prototype, "startIndex", {
                get: function () { return this.startIndex$get(); },
                enumerable: true,
                configurable: true
            });
            ;
            /*Swift.(file).Int32.Words.endIndex*/
            class_142.prototype.endIndex$get = function () {
                throw 'unsupported variable Swift.(file).Int32.Words.endIndex in ' + this.constructor.name;
            };
            Object.defineProperty(class_142.prototype, "endIndex", {
                get: function () { return this.endIndex$get(); },
                enumerable: true,
                configurable: true
            });
            ;
            /*Swift.(file).Int32.Words.indices*/
            class_142.prototype.indices$get = function () {
                var _this = this;
                return (_.arg0 = _this.startIndex).constructor.infix_46_46_60({}, _.arg0, _this.endIndex);
            };
            Object.defineProperty(class_142.prototype, "indices", {
                get: function () { return this.indices$get(); },
                enumerable: true,
                configurable: true
            });
            ;
            /*Swift.(file).Int32.Words.index(after:Int)*/
            /*Swift.(file).RandomAccessCollection.index(after:Self.Index)*/
            /*Swift.(file).BidirectionalCollection.index(after:Self.Index)*/
            /*Swift.(file).Collection.index(after:Self.Index)*/
            class_142.prototype.indexAfter = function ($info, i) {
                throw 'unsupported method Swift.(file).Int32.Words.index(after:Int) in ' + this.constructor.name;
            };
            /*Swift.(file).Int32.Words.index(before:Int)*/
            /*Swift.(file).RandomAccessCollection.index(before:Self.Index)*/
            /*Swift.(file).BidirectionalCollection.index(before:Self.Index)*/
            class_142.prototype.indexBefore = function ($info, i) {
                throw 'unsupported method Swift.(file).Int32.Words.index(before:Int) in ' + this.constructor.name;
            };
            /*Swift.(file).Int32.Words.subscript(_:Int)*/
            /*Swift.(file).RandomAccessCollection.subscript(_:Self.Index)*/
            /*Swift.(file).BidirectionalCollection.subscript(_:Self.Index)*/
            /*Swift.(file).Collection.subscript(_:Self.Index)*/
            class_142.prototype.subscript$get = function ($info, position) {
                throw 'unsupported method Swift.(file).Int32.Words.subscript(_:Int) in ' + this.constructor.name;
            };
            class_142.prototype.init$vars = function () {
            };
            return class_142;
        }()),
        _118.$struct = true,
        _118.$infoAddress = '',
        _118);
    MIO_Mixin_Int32.SIMD2Storage = (_119 = /** @class */ (function () {
            function class_143() {
            }
            /*Swift.(file).Int32.SIMD2Storage.scalarCount*/
            class_143.prototype.scalarCount$get = function () {
                throw 'unsupported variable Swift.(file).Int32.SIMD2Storage.scalarCount in ' + this.constructor.name;
            };
            Object.defineProperty(class_143.prototype, "scalarCount", {
                get: function () { return this.scalarCount$get(); },
                enumerable: true,
                configurable: true
            });
            ;
            /*Swift.(file).Int32.SIMD2Storage.init()*/
            /*Swift.(file).SIMDStorage.init()*/
            class_143.prototype.init = function ($info) {
                throw 'unsupported method Swift.(file).Int32.SIMD2Storage.init() in ' + this.constructor.name;
            };
            /*Swift.(file).Int32.SIMD2Storage.subscript(_:Int)*/
            /*Swift.(file).SIMDStorage.subscript(_:Int)*/
            class_143.prototype.subscript$get = function ($info, index) {
                throw 'unsupported method Swift.(file).Int32.SIMD2Storage.subscript(_:Int) in ' + this.constructor.name;
            }; /*Swift.(file).Int32.SIMD2Storage.subscript(_:Int)*/
            /*Swift.(file).SIMDStorage.subscript(_:Int)*/
            class_143.prototype.subscript$set = function ($info, newValue, index) {
                throw 'unsupported method Swift.(file).Int32.SIMD2Storage.subscript(_:Int) in ' + this.constructor.name;
            };
            class_143.prototype.init$vars = function () {
            };
            return class_143;
        }()),
        _119.$struct = true,
        _119.$infoAddress = '',
        _119);
    MIO_Mixin_Int32.SIMD4Storage = (_120 = /** @class */ (function () {
            function class_144() {
            }
            /*Swift.(file).Int32.SIMD4Storage.scalarCount*/
            class_144.prototype.scalarCount$get = function () {
                throw 'unsupported variable Swift.(file).Int32.SIMD4Storage.scalarCount in ' + this.constructor.name;
            };
            Object.defineProperty(class_144.prototype, "scalarCount", {
                get: function () { return this.scalarCount$get(); },
                enumerable: true,
                configurable: true
            });
            ;
            /*Swift.(file).Int32.SIMD4Storage.init()*/
            /*Swift.(file).SIMDStorage.init()*/
            class_144.prototype.init = function ($info) {
                throw 'unsupported method Swift.(file).Int32.SIMD4Storage.init() in ' + this.constructor.name;
            };
            /*Swift.(file).Int32.SIMD4Storage.subscript(_:Int)*/
            /*Swift.(file).SIMDStorage.subscript(_:Int)*/
            class_144.prototype.subscript$get = function ($info, index) {
                throw 'unsupported method Swift.(file).Int32.SIMD4Storage.subscript(_:Int) in ' + this.constructor.name;
            }; /*Swift.(file).Int32.SIMD4Storage.subscript(_:Int)*/
            /*Swift.(file).SIMDStorage.subscript(_:Int)*/
            class_144.prototype.subscript$set = function ($info, newValue, index) {
                throw 'unsupported method Swift.(file).Int32.SIMD4Storage.subscript(_:Int) in ' + this.constructor.name;
            };
            class_144.prototype.init$vars = function () {
            };
            return class_144;
        }()),
        _120.$struct = true,
        _120.$infoAddress = '',
        _120);
    MIO_Mixin_Int32.SIMD8Storage = (_121 = /** @class */ (function () {
            function class_145() {
            }
            /*Swift.(file).Int32.SIMD8Storage.scalarCount*/
            class_145.prototype.scalarCount$get = function () {
                throw 'unsupported variable Swift.(file).Int32.SIMD8Storage.scalarCount in ' + this.constructor.name;
            };
            Object.defineProperty(class_145.prototype, "scalarCount", {
                get: function () { return this.scalarCount$get(); },
                enumerable: true,
                configurable: true
            });
            ;
            /*Swift.(file).Int32.SIMD8Storage.init()*/
            /*Swift.(file).SIMDStorage.init()*/
            class_145.prototype.init = function ($info) {
                throw 'unsupported method Swift.(file).Int32.SIMD8Storage.init() in ' + this.constructor.name;
            };
            /*Swift.(file).Int32.SIMD8Storage.subscript(_:Int)*/
            /*Swift.(file).SIMDStorage.subscript(_:Int)*/
            class_145.prototype.subscript$get = function ($info, index) {
                throw 'unsupported method Swift.(file).Int32.SIMD8Storage.subscript(_:Int) in ' + this.constructor.name;
            }; /*Swift.(file).Int32.SIMD8Storage.subscript(_:Int)*/
            /*Swift.(file).SIMDStorage.subscript(_:Int)*/
            class_145.prototype.subscript$set = function ($info, newValue, index) {
                throw 'unsupported method Swift.(file).Int32.SIMD8Storage.subscript(_:Int) in ' + this.constructor.name;
            };
            class_145.prototype.init$vars = function () {
            };
            return class_145;
        }()),
        _121.$struct = true,
        _121.$infoAddress = '',
        _121);
    MIO_Mixin_Int32.SIMD16Storage = (_122 = /** @class */ (function () {
            function class_146() {
            }
            /*Swift.(file).Int32.SIMD16Storage.scalarCount*/
            class_146.prototype.scalarCount$get = function () {
                throw 'unsupported variable Swift.(file).Int32.SIMD16Storage.scalarCount in ' + this.constructor.name;
            };
            Object.defineProperty(class_146.prototype, "scalarCount", {
                get: function () { return this.scalarCount$get(); },
                enumerable: true,
                configurable: true
            });
            ;
            /*Swift.(file).Int32.SIMD16Storage.init()*/
            /*Swift.(file).SIMDStorage.init()*/
            class_146.prototype.init = function ($info) {
                throw 'unsupported method Swift.(file).Int32.SIMD16Storage.init() in ' + this.constructor.name;
            };
            /*Swift.(file).Int32.SIMD16Storage.subscript(_:Int)*/
            /*Swift.(file).SIMDStorage.subscript(_:Int)*/
            class_146.prototype.subscript$get = function ($info, index) {
                throw 'unsupported method Swift.(file).Int32.SIMD16Storage.subscript(_:Int) in ' + this.constructor.name;
            }; /*Swift.(file).Int32.SIMD16Storage.subscript(_:Int)*/
            /*Swift.(file).SIMDStorage.subscript(_:Int)*/
            class_146.prototype.subscript$set = function ($info, newValue, index) {
                throw 'unsupported method Swift.(file).Int32.SIMD16Storage.subscript(_:Int) in ' + this.constructor.name;
            };
            class_146.prototype.init$vars = function () {
            };
            return class_146;
        }()),
        _122.$struct = true,
        _122.$infoAddress = '',
        _122);
    MIO_Mixin_Int32.SIMD32Storage = (_123 = /** @class */ (function () {
            function class_147() {
            }
            /*Swift.(file).Int32.SIMD32Storage.scalarCount*/
            class_147.prototype.scalarCount$get = function () {
                throw 'unsupported variable Swift.(file).Int32.SIMD32Storage.scalarCount in ' + this.constructor.name;
            };
            Object.defineProperty(class_147.prototype, "scalarCount", {
                get: function () { return this.scalarCount$get(); },
                enumerable: true,
                configurable: true
            });
            ;
            /*Swift.(file).Int32.SIMD32Storage.init()*/
            /*Swift.(file).SIMDStorage.init()*/
            class_147.prototype.init = function ($info) {
                throw 'unsupported method Swift.(file).Int32.SIMD32Storage.init() in ' + this.constructor.name;
            };
            /*Swift.(file).Int32.SIMD32Storage.subscript(_:Int)*/
            /*Swift.(file).SIMDStorage.subscript(_:Int)*/
            class_147.prototype.subscript$get = function ($info, index) {
                throw 'unsupported method Swift.(file).Int32.SIMD32Storage.subscript(_:Int) in ' + this.constructor.name;
            }; /*Swift.(file).Int32.SIMD32Storage.subscript(_:Int)*/
            /*Swift.(file).SIMDStorage.subscript(_:Int)*/
            class_147.prototype.subscript$set = function ($info, newValue, index) {
                throw 'unsupported method Swift.(file).Int32.SIMD32Storage.subscript(_:Int) in ' + this.constructor.name;
            };
            class_147.prototype.init$vars = function () {
            };
            return class_147;
        }()),
        _123.$struct = true,
        _123.$infoAddress = '',
        _123);
    MIO_Mixin_Int32.SIMD64Storage = (_124 = /** @class */ (function () {
            function class_148() {
            }
            /*Swift.(file).Int32.SIMD64Storage.scalarCount*/
            class_148.prototype.scalarCount$get = function () {
                throw 'unsupported variable Swift.(file).Int32.SIMD64Storage.scalarCount in ' + this.constructor.name;
            };
            Object.defineProperty(class_148.prototype, "scalarCount", {
                get: function () { return this.scalarCount$get(); },
                enumerable: true,
                configurable: true
            });
            ;
            /*Swift.(file).Int32.SIMD64Storage.init()*/
            /*Swift.(file).SIMDStorage.init()*/
            class_148.prototype.init = function ($info) {
                throw 'unsupported method Swift.(file).Int32.SIMD64Storage.init() in ' + this.constructor.name;
            };
            /*Swift.(file).Int32.SIMD64Storage.subscript(_:Int)*/
            /*Swift.(file).SIMDStorage.subscript(_:Int)*/
            class_148.prototype.subscript$get = function ($info, index) {
                throw 'unsupported method Swift.(file).Int32.SIMD64Storage.subscript(_:Int) in ' + this.constructor.name;
            }; /*Swift.(file).Int32.SIMD64Storage.subscript(_:Int)*/
            /*Swift.(file).SIMDStorage.subscript(_:Int)*/
            class_148.prototype.subscript$set = function ($info, newValue, index) {
                throw 'unsupported method Swift.(file).Int32.SIMD64Storage.subscript(_:Int) in ' + this.constructor.name;
            };
            class_148.prototype.init$vars = function () {
            };
            return class_148;
        }()),
        _124.$struct = true,
        _124.$infoAddress = '',
        _124);
    return MIO_Mixin_Int32;
}());
if (typeof RandomAccessCollection$implementation != 'undefined')
    _mixin(MIO_Mixin_Int32.Words, RandomAccessCollection$implementation, false);
if (typeof SIMDStorage$implementation != 'undefined')
    _mixin(MIO_Mixin_Int32.SIMD2Storage, SIMDStorage$implementation, false);
if (typeof SIMDStorage$implementation != 'undefined')
    _mixin(MIO_Mixin_Int32.SIMD4Storage, SIMDStorage$implementation, false);
if (typeof SIMDStorage$implementation != 'undefined')
    _mixin(MIO_Mixin_Int32.SIMD8Storage, SIMDStorage$implementation, false);
if (typeof SIMDStorage$implementation != 'undefined')
    _mixin(MIO_Mixin_Int32.SIMD16Storage, SIMDStorage$implementation, false);
if (typeof SIMDStorage$implementation != 'undefined')
    _mixin(MIO_Mixin_Int32.SIMD32Storage, SIMDStorage$implementation, false);
if (typeof SIMDStorage$implementation != 'undefined')
    _mixin(MIO_Mixin_Int32.SIMD64Storage, SIMDStorage$implementation, false);
if (typeof FixedWidthInteger$implementation != 'undefined')
    _mixin(MIO_Mixin_Int32, FixedWidthInteger$implementation, false);
if (typeof SignedInteger$implementation != 'undefined')
    _mixin(MIO_Mixin_Int32, SignedInteger$implementation, false);
if (typeof _ExpressibleByBuiltinIntegerLiteral$implementation != 'undefined')
    _mixin(MIO_Mixin_Int32, _ExpressibleByBuiltinIntegerLiteral$implementation, false);
if (typeof Codable$implementation != 'undefined')
    _mixin(MIO_Mixin_Int32, Codable$implementation, false);
if (typeof Hashable$implementation != 'undefined')
    _mixin(MIO_Mixin_Int32, Hashable$implementation, false);
if (typeof _HasCustomAnyHashableRepresentation$implementation != 'undefined')
    _mixin(MIO_Mixin_Int32, _HasCustomAnyHashableRepresentation$implementation, false);
if (typeof CustomReflectable$implementation != 'undefined')
    _mixin(MIO_Mixin_Int32, CustomReflectable$implementation, false);
if (typeof _CustomPlaygroundQuickLookable$implementation != 'undefined')
    _mixin(MIO_Mixin_Int32, _CustomPlaygroundQuickLookable$implementation, false);
if (typeof SIMDScalar$implementation != 'undefined')
    _mixin(MIO_Mixin_Int32, SIMDScalar$implementation, false);
if (typeof CVarArg$implementation != 'undefined')
    _mixin(MIO_Mixin_Int32, CVarArg$implementation, false);
_mixin(Number, MIO_Mixin_Int32, true);
var Int32 = /** @class */ (function () {
    function Int32() {
    }
    return Int32;
}());
_mixin(Int32, MIO_Mixin_Int32, true);
var MIO_Mixin_UInt64 = /** @class */ (function () {
    function MIO_Mixin_UInt64() {
    }
    /*Swift.(file).UInt64.init(_builtinIntegerLiteral:IntLiteral)*/
    /*Swift.(file)._ExpressibleByBuiltinIntegerLiteral.init(_builtinIntegerLiteral:IntLiteral)*/
    MIO_Mixin_UInt64.prototype.init_builtinIntegerLiteralIntLiteral = function ($info, x) {
        throw 'unsupported method Swift.(file).UInt64.init(_builtinIntegerLiteral:IntLiteral) in ' + this.constructor.name;
    };
    /*Swift.(file).UInt64.init(bitPattern:Int64)*/
    /*Swift.(file).UInt64.init(bitPattern:Int64)*/
    MIO_Mixin_UInt64.prototype.initBitPatternInt64 = function ($info, x) {
        throw 'unsupported method Swift.(file).UInt64.init(bitPattern:Int64) in ' + this.constructor.name;
    };
    /*Swift.(file).UInt64.init(_:Float)*/
    /*Swift.(file).UInt64.init(_:Float)*/
    MIO_Mixin_UInt64.prototype.initFloat = function ($info, source) {
        throw 'unsupported method Swift.(file).UInt64.init(_:Float) in ' + this.constructor.name;
    };
    /*Swift.(file).UInt64.init(exactly:Float)*/
    /*Swift.(file).UInt64.init(exactly:Float)*/
    MIO_Mixin_UInt64.prototype.initExactlyFloat = function ($info, source) {
        throw 'unsupported method Swift.(file).UInt64.init(exactly:Float) in ' + this.constructor.name;
    };
    /*Swift.(file).UInt64.init(_:Double)*/
    /*Swift.(file).UInt64.init(_:Double)*/
    MIO_Mixin_UInt64.prototype.initDouble = function ($info, source) {
        throw 'unsupported method Swift.(file).UInt64.init(_:Double) in ' + this.constructor.name;
    };
    /*Swift.(file).UInt64.init(exactly:Double)*/
    /*Swift.(file).UInt64.init(exactly:Double)*/
    MIO_Mixin_UInt64.prototype.initExactlyDouble = function ($info, source) {
        throw 'unsupported method Swift.(file).UInt64.init(exactly:Double) in ' + this.constructor.name;
    };
    /*Swift.(file).UInt64.init(_:Float80)*/
    /*Swift.(file).UInt64.init(_:Float80)*/
    MIO_Mixin_UInt64.prototype.initFloat80 = function ($info, source) {
        throw 'unsupported method Swift.(file).UInt64.init(_:Float80) in ' + this.constructor.name;
    };
    /*Swift.(file).UInt64.init(exactly:Float80)*/
    /*Swift.(file).UInt64.init(exactly:Float80)*/
    MIO_Mixin_UInt64.prototype.initExactlyFloat80 = function ($info, source) {
        throw 'unsupported method Swift.(file).UInt64.init(exactly:Float80) in ' + this.constructor.name;
    };
    /*Swift.(file).UInt64.==infix(_:UInt64,_:UInt64)*/
    /*Swift.(file).Equatable.==infix(_:Self,_:Self)*/
    MIO_Mixin_UInt64.infix_61_61 = function ($info, lhs, rhs) {
        return lhs == rhs;
    };
    /*Swift.(file).UInt64.<infix(_:UInt64,_:UInt64)*/
    /*Swift.(file).Comparable.<infix(_:Self,_:Self)*/
    MIO_Mixin_UInt64.infix_60 = function ($info, lhs, rhs) {
        return lhs < rhs;
    };
    /*Swift.(file).UInt64.+=infix(_:UInt64,_:UInt64)*/
    /*Swift.(file).BinaryInteger.+=infix(_:Self,_:Self)*/
    /*Swift.(file).AdditiveArithmetic.+=infix(_:Self,_:Self)*/
    MIO_Mixin_UInt64.infix_43_61 = function ($info, lhs$inout, rhs) {
        lhs$inout.set(lhs$inout.get() + rhs);
    };
    /*Swift.(file).UInt64.-=infix(_:UInt64,_:UInt64)*/
    /*Swift.(file).BinaryInteger.-=infix(_:Self,_:Self)*/
    /*Swift.(file).AdditiveArithmetic.-=infix(_:Self,_:Self)*/
    MIO_Mixin_UInt64.infix_45_61 = function ($info, lhs$inout, rhs) {
        lhs$inout.set(lhs$inout.get() - rhs);
    };
    /*Swift.(file).UInt64.*=infix(_:UInt64,_:UInt64)*/
    /*Swift.(file).BinaryInteger.*=infix(_:Self,_:Self)*/
    /*Swift.(file).Numeric.*=infix(_:Self,_:Self)*/
    MIO_Mixin_UInt64.infix_42_61 = function ($info, lhs$inout, rhs) {
        lhs$inout.set(lhs$inout.get() * rhs);
    };
    /*Swift.(file).UInt64./=infix(_:UInt64,_:UInt64)*/
    /*Swift.(file).BinaryInteger./=infix(_:Self,_:Self)*/
    MIO_Mixin_UInt64.infix_47_61 = function ($info, lhs$inout, rhs) {
        lhs$inout.set((lhs$inout.get() / rhs) | 0);
    };
    /*Swift.(file).UInt64.dividedReportingOverflow(by:UInt64)*/
    /*Swift.(file).FixedWidthInteger.dividedReportingOverflow(by:Self)*/
    MIO_Mixin_UInt64.prototype.dividedReportingOverflowBy = function ($info, other) {
        throw 'unsupported method Swift.(file).UInt64.dividedReportingOverflow(by:UInt64) in ' + this.constructor.name;
    };
    /*Swift.(file).UInt64.remainderReportingOverflow(dividingBy:UInt64)*/
    /*Swift.(file).FixedWidthInteger.remainderReportingOverflow(dividingBy:Self)*/
    MIO_Mixin_UInt64.prototype.remainderReportingOverflowDividingBy = function ($info, other) {
        throw 'unsupported method Swift.(file).UInt64.remainderReportingOverflow(dividingBy:UInt64) in ' + this.constructor.name;
    };
    /*Swift.(file).UInt64.addingReportingOverflow(_:UInt64)*/
    /*Swift.(file).FixedWidthInteger.addingReportingOverflow(_:Self)*/
    MIO_Mixin_UInt64.prototype.addingReportingOverflow = function ($info, other) {
        throw 'unsupported method Swift.(file).UInt64.addingReportingOverflow(_:UInt64) in ' + this.constructor.name;
    };
    /*Swift.(file).UInt64.subtractingReportingOverflow(_:UInt64)*/
    /*Swift.(file).FixedWidthInteger.subtractingReportingOverflow(_:Self)*/
    MIO_Mixin_UInt64.prototype.subtractingReportingOverflow = function ($info, other) {
        throw 'unsupported method Swift.(file).UInt64.subtractingReportingOverflow(_:UInt64) in ' + this.constructor.name;
    };
    /*Swift.(file).UInt64.multipliedReportingOverflow(by:UInt64)*/
    /*Swift.(file).FixedWidthInteger.multipliedReportingOverflow(by:Self)*/
    MIO_Mixin_UInt64.prototype.multipliedReportingOverflowBy = function ($info, other) {
        throw 'unsupported method Swift.(file).UInt64.multipliedReportingOverflow(by:UInt64) in ' + this.constructor.name;
    };
    /*Swift.(file).UInt64.%=infix(_:UInt64,_:UInt64)*/
    /*Swift.(file).BinaryInteger.%=infix(_:Self,_:Self)*/
    MIO_Mixin_UInt64.infix_37_61 = function ($info, lhs$inout, rhs) {
        lhs$inout.set(lhs$inout.get() % rhs);
    };
    /*Swift.(file).UInt64.init(_:Int64)*/
    /*Swift.(file).UInt64.init(_:Int64)*/
    MIO_Mixin_UInt64.prototype.initInt64 = function ($info, _value) {
        throw 'unsupported method Swift.(file).UInt64.init(_:Int64) in ' + this.constructor.name;
    };
    /*Swift.(file).UInt64.&=infix(_:UInt64,_:UInt64)*/
    /*Swift.(file).BinaryInteger.&=infix(_:Self,_:Self)*/
    MIO_Mixin_UInt64.infix_38_61 = function ($info, lhs$inout, rhs) {
        lhs$inout.set(lhs$inout.get() & rhs);
    };
    /*Swift.(file).UInt64.|=infix(_:UInt64,_:UInt64)*/
    /*Swift.(file).BinaryInteger.|=infix(_:Self,_:Self)*/
    MIO_Mixin_UInt64.infix_124_61 = function ($info, lhs$inout, rhs) {
        lhs$inout.set(lhs$inout.get() | rhs);
    };
    /*Swift.(file).UInt64.^=infix(_:UInt64,_:UInt64)*/
    /*Swift.(file).BinaryInteger.^=infix(_:Self,_:Self)*/
    MIO_Mixin_UInt64.infix_94_61 = function ($info, lhs$inout, rhs) {
        lhs$inout.set(lhs$inout.get() ^ rhs);
    };
    /*Swift.(file).UInt64.&>>=infix(_:UInt64,_:UInt64)*/
    /*Swift.(file).FixedWidthInteger.&>>=infix(_:Self,_:Self)*/
    MIO_Mixin_UInt64.infix_38_62_62_61 = function ($info, lhs$inout, rhs) {
        lhs$inout.set(lhs$inout.get() >> rhs);
    };
    /*Swift.(file).UInt64.&<<=infix(_:UInt64,_:UInt64)*/
    /*Swift.(file).FixedWidthInteger.&<<=infix(_:Self,_:Self)*/
    MIO_Mixin_UInt64.infix_38_60_60_61 = function ($info, lhs$inout, rhs) {
        lhs$inout.set(lhs$inout.get() << rhs);
    };
    /*Swift.(file).UInt64.bitWidth*/
    MIO_Mixin_UInt64.bitWidth$get = function () {
        var _this = this;
        return _this.constructor.bitWidth;
    };
    Object.defineProperty(MIO_Mixin_UInt64, "bitWidth", {
        get: function () { return this.bitWidth$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).UInt64.leadingZeroBitCount*/
    MIO_Mixin_UInt64.prototype.leadingZeroBitCount$get = function () {
        throw 'unsupported variable Swift.(file).UInt64.leadingZeroBitCount in ' + this.constructor.name;
    };
    Object.defineProperty(MIO_Mixin_UInt64.prototype, "leadingZeroBitCount", {
        get: function () { return this.leadingZeroBitCount$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).UInt64.trailingZeroBitCount*/
    MIO_Mixin_UInt64.prototype.trailingZeroBitCount$get = function () {
        throw 'unsupported variable Swift.(file).UInt64.trailingZeroBitCount in ' + this.constructor.name;
    };
    Object.defineProperty(MIO_Mixin_UInt64.prototype, "trailingZeroBitCount", {
        get: function () { return this.trailingZeroBitCount$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).UInt64.nonzeroBitCount*/
    MIO_Mixin_UInt64.prototype.nonzeroBitCount$get = function () {
        throw 'unsupported variable Swift.(file).UInt64.nonzeroBitCount in ' + this.constructor.name;
    };
    Object.defineProperty(MIO_Mixin_UInt64.prototype, "nonzeroBitCount", {
        get: function () { return this.nonzeroBitCount$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).UInt64.words*/
    MIO_Mixin_UInt64.prototype.words$get = function () {
        throw 'unsupported variable Swift.(file).UInt64.words in ' + this.constructor.name;
    };
    Object.defineProperty(MIO_Mixin_UInt64.prototype, "words", {
        get: function () { return this.words$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).UInt64.init(_truncatingBits:UInt)*/
    /*Swift.(file).FixedWidthInteger.init(_truncatingBits:UInt)*/
    MIO_Mixin_UInt64.prototype.init_truncatingBitsUInt = function ($info, bits) {
        throw 'unsupported method Swift.(file).UInt64.init(_truncatingBits:UInt) in ' + this.constructor.name;
    };
    /*Swift.(file).UInt64.multipliedFullWidth(by:UInt64)*/
    /*Swift.(file).FixedWidthInteger.multipliedFullWidth(by:Self)*/
    MIO_Mixin_UInt64.prototype.multipliedFullWidthBy = function ($info, other) {
        throw 'unsupported method Swift.(file).UInt64.multipliedFullWidth(by:UInt64) in ' + this.constructor.name;
    };
    /*Swift.(file).UInt64.dividingFullWidth(_:(high: UInt64, low: UInt64.Magnitude))*/
    /*Swift.(file).FixedWidthInteger.dividingFullWidth(_:(high: Self, low: Self.Magnitude))*/
    MIO_Mixin_UInt64.prototype.dividingFullWidth = function ($info, dividend) {
        throw 'unsupported method Swift.(file).UInt64.dividingFullWidth(_:(high: UInt64, low: UInt64.Magnitude)) in ' + this.constructor.name;
    };
    /*Swift.(file).UInt64.byteSwapped*/
    MIO_Mixin_UInt64.prototype.byteSwapped$get = function () {
        throw 'unsupported variable Swift.(file).UInt64.byteSwapped in ' + this.constructor.name;
    };
    Object.defineProperty(MIO_Mixin_UInt64.prototype, "byteSwapped", {
        get: function () { return this.byteSwapped$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).UInt64.toIntMax()*/
    /*Swift.(file).UInt64.toIntMax()*/
    MIO_Mixin_UInt64.prototype.toIntMax = function ($info) {
        throw 'unsupported method Swift.(file).UInt64.toIntMax() in ' + this.constructor.name;
    };
    /*Swift.(file).UInt64.signum()*/
    /*Swift.(file).BinaryInteger.signum()*/
    MIO_Mixin_UInt64.prototype.signum = function ($info) {
        var _this = this;
        return _this.constructor.infix_45({}, (_this.constructor.infix_62({}, _this, _create(_this.constructor, 'initIntegerLiteral', {}, 0)) ? _create(_this.constructor, 'initIntegerLiteral', {}, 1) : _create(_this.constructor, 'initIntegerLiteral', {}, 0)), (_this.constructor.infix_60({}, _this, _create(_this.constructor, 'initIntegerLiteral', {}, 0)) ? _create(_this.constructor, 'initIntegerLiteral', {}, 1) : _create(_this.constructor, 'initIntegerLiteral', {}, 0)));
    };
    /*Swift.(file).UInt64.init(from:Decoder)*/
    /*Swift.(file).Decodable.init(from:Decoder)*/
    MIO_Mixin_UInt64.prototype.initFromDecoder = function ($info, decoder) {
        throw 'unsupported method Swift.(file).UInt64.init(from:Decoder) in ' + this.constructor.name;
    };
    /*Swift.(file).UInt64.encode(to:Encoder)*/
    /*Swift.(file).Encodable.encode(to:Encoder)*/
    MIO_Mixin_UInt64.prototype.encodeTo = function ($info, encoder) {
        throw 'unsupported method Swift.(file).UInt64.encode(to:Encoder) in ' + this.constructor.name;
    };
    /*Swift.(file).UInt64.hash(into:Hasher)*/
    /*Swift.(file).Hashable.hash(into:Hasher)*/
    MIO_Mixin_UInt64.prototype.hashInto = function ($info, hasher$inout) {
        throw 'unsupported method Swift.(file).UInt64.hash(into:Hasher) in ' + this.constructor.name;
    };
    /*Swift.(file).UInt64.hashValue*/
    MIO_Mixin_UInt64.prototype.hashValue$get = function () {
        throw 'unsupported variable Swift.(file).UInt64.hashValue in ' + this.constructor.name;
    };
    Object.defineProperty(MIO_Mixin_UInt64.prototype, "hashValue", {
        get: function () { return this.hashValue$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).UInt64.&infix(_:UInt64,_:UInt64)*/
    /*Swift.(file).BinaryInteger.&infix(_:Self,_:Self)*/
    MIO_Mixin_UInt64.infix_38 = function ($info, lhs, rhs) {
        return lhs & rhs;
    };
    /*Swift.(file).UInt64.|infix(_:UInt64,_:UInt64)*/
    /*Swift.(file).BinaryInteger.|infix(_:Self,_:Self)*/
    MIO_Mixin_UInt64.infix_124 = function ($info, lhs, rhs) {
        return lhs | rhs;
    };
    /*Swift.(file).UInt64.^infix(_:UInt64,_:UInt64)*/
    /*Swift.(file).BinaryInteger.^infix(_:Self,_:Self)*/
    MIO_Mixin_UInt64.infix_94 = function ($info, lhs, rhs) {
        return lhs ^ rhs;
    };
    /*Swift.(file).UInt64.&>>infix(_:UInt64,_:UInt64)*/
    /*Swift.(file).FixedWidthInteger.&>>infix(_:Self,_:Self)*/
    MIO_Mixin_UInt64.infix_38_62_62 = function ($info, lhs, rhs) {
        return lhs >> rhs;
    };
    /*Swift.(file).UInt64.&<<infix(_:UInt64,_:UInt64)*/
    /*Swift.(file).FixedWidthInteger.&<<infix(_:Self,_:Self)*/
    MIO_Mixin_UInt64.infix_38_60_60 = function ($info, lhs, rhs) {
        return lhs << rhs;
    };
    /*Swift.(file).UInt64./infix(_:UInt64,_:UInt64)*/
    /*Swift.(file).BinaryInteger./infix(_:Self,_:Self)*/
    MIO_Mixin_UInt64.infix_47 = function ($info, lhs, rhs) {
        return (lhs / rhs) | 0;
    };
    /*Swift.(file).UInt64.%infix(_:UInt64,_:UInt64)*/
    /*Swift.(file).BinaryInteger.%infix(_:Self,_:Self)*/
    MIO_Mixin_UInt64.infix_37 = function ($info, lhs, rhs) {
        return lhs % rhs;
    };
    /*Swift.(file).UInt64.+infix(_:UInt64,_:UInt64)*/
    /*Swift.(file).BinaryInteger.+infix(_:Self,_:Self)*/
    /*Swift.(file).AdditiveArithmetic.+infix(_:Self,_:Self)*/
    MIO_Mixin_UInt64.infix_43 = function ($info, lhs, rhs) {
        return lhs + rhs;
    };
    /*Swift.(file).UInt64.-infix(_:UInt64,_:UInt64)*/
    /*Swift.(file).BinaryInteger.-infix(_:Self,_:Self)*/
    /*Swift.(file).AdditiveArithmetic.-infix(_:Self,_:Self)*/
    MIO_Mixin_UInt64.infix_45 = function ($info, lhs, rhs) {
        return lhs - rhs;
    };
    /*Swift.(file).UInt64.*infix(_:UInt64,_:UInt64)*/
    /*Swift.(file).BinaryInteger.*infix(_:Self,_:Self)*/
    /*Swift.(file).Numeric.*infix(_:Self,_:Self)*/
    MIO_Mixin_UInt64.infix_42 = function ($info, lhs, rhs) {
        return lhs * rhs;
    };
    /*Swift.(file).UInt64.>>infix(_:UInt64,_:UInt64)*/
    /*Swift.(file).UInt64.>>infix(_:UInt64,_:UInt64)*/
    MIO_Mixin_UInt64.infix_62_62 = function ($info, lhs, rhs) {
        return lhs >> rhs;
    };
    /*Swift.(file).UInt64.>>=infix(_:UInt64,_:UInt64)*/
    /*Swift.(file).UInt64.>>=infix(_:UInt64,_:UInt64)*/
    MIO_Mixin_UInt64.infix_62_62_61 = function ($info, lhs$inout, rhs) {
        lhs$inout.set(lhs$inout.get() >> rhs);
    };
    /*Swift.(file).UInt64.<<infix(_:UInt64,_:UInt64)*/
    /*Swift.(file).UInt64.<<infix(_:UInt64,_:UInt64)*/
    MIO_Mixin_UInt64.infix_60_60 = function ($info, lhs, rhs) {
        return lhs << rhs;
    };
    /*Swift.(file).UInt64.<<=infix(_:UInt64,_:UInt64)*/
    /*Swift.(file).UInt64.<<=infix(_:UInt64,_:UInt64)*/
    MIO_Mixin_UInt64.infix_60_60_61 = function ($info, lhs$inout, rhs) {
        lhs$inout.set(lhs$inout.get() << rhs);
    };
    /*Swift.(file).UInt64.<=infix(_:UInt64,_:UInt64)*/
    /*Swift.(file).Comparable.<=infix(_:Self,_:Self)*/
    MIO_Mixin_UInt64.infix_60_61 = function ($info, lhs, rhs) {
        var _this = this;
        return Bool.prefix_33({}, (_.arg0 = rhs).constructor.infix_60({}, _.arg0, lhs));
    };
    /*Swift.(file).UInt64.>=infix(_:UInt64,_:UInt64)*/
    /*Swift.(file).Comparable.>=infix(_:Self,_:Self)*/
    MIO_Mixin_UInt64.infix_62_61 = function ($info, lhs, rhs) {
        var _this = this;
        return Bool.prefix_33({}, (_.arg0 = lhs).constructor.infix_60({}, _.arg0, rhs));
    };
    /*Swift.(file).UInt64.>infix(_:UInt64,_:UInt64)*/
    /*Swift.(file).Comparable.>infix(_:Self,_:Self)*/
    MIO_Mixin_UInt64.infix_62 = function ($info, lhs, rhs) {
        var _this = this;
        return (_.arg0 = rhs).constructor.infix_60({}, _.arg0, lhs);
    };
    /*Swift.(file).UInt64.init(_:Unicode.Scalar)*/
    /*Swift.(file).UInt64.init(_:Unicode.Scalar)*/
    MIO_Mixin_UInt64.prototype.initUnicodeScalar = function ($info, v) {
        throw 'unsupported method Swift.(file).UInt64.init(_:Unicode.Scalar) in ' + this.constructor.name;
    };
    /*Swift.(file).UInt64.customMirror*/
    MIO_Mixin_UInt64.prototype.customMirror$get = function () {
        throw 'unsupported variable Swift.(file).UInt64.customMirror in ' + this.constructor.name;
    };
    Object.defineProperty(MIO_Mixin_UInt64.prototype, "customMirror", {
        get: function () { return this.customMirror$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).UInt64.customPlaygroundQuickLook*/
    MIO_Mixin_UInt64.prototype.customPlaygroundQuickLook$get = function () {
        throw 'unsupported variable Swift.(file).UInt64.customPlaygroundQuickLook in ' + this.constructor.name;
    };
    Object.defineProperty(MIO_Mixin_UInt64.prototype, "customPlaygroundQuickLook", {
        get: function () { return this.customPlaygroundQuickLook$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    MIO_Mixin_UInt64.prototype.init$vars = function () {
    };
    var _125, _126, _127, _128, _129, _130, _131;
    MIO_Mixin_UInt64.$struct = true;
    MIO_Mixin_UInt64.$mixin = true;
    MIO_Mixin_UInt64.$infoAddress = '';
    MIO_Mixin_UInt64.initExactlyFloat$failable = true;
    MIO_Mixin_UInt64.initExactlyDouble$failable = true;
    MIO_Mixin_UInt64.initExactlyFloat80$failable = true;
    MIO_Mixin_UInt64.Words = (_125 = /** @class */ (function () {
            function class_149() {
            }
            /*Swift.(file).UInt64.Words.init(_:UInt64)*/
            /*Swift.(file).UInt64.Words.init(_:UInt64)*/
            class_149.prototype.initUInt64 = function ($info, value) {
                throw 'unsupported method Swift.(file).UInt64.Words.init(_:UInt64) in ' + this.constructor.name;
            };
            /*Swift.(file).UInt64.Words.count*/
            class_149.prototype.count$get = function () {
                var _this = this;
                return _this.distanceFromTo({}, _this.startIndex, _this.endIndex);
            };
            Object.defineProperty(class_149.prototype, "count", {
                get: function () { return this.count$get(); },
                enumerable: true,
                configurable: true
            });
            ;
            /*Swift.(file).UInt64.Words.startIndex*/
            class_149.prototype.startIndex$get = function () {
                throw 'unsupported variable Swift.(file).UInt64.Words.startIndex in ' + this.constructor.name;
            };
            Object.defineProperty(class_149.prototype, "startIndex", {
                get: function () { return this.startIndex$get(); },
                enumerable: true,
                configurable: true
            });
            ;
            /*Swift.(file).UInt64.Words.endIndex*/
            class_149.prototype.endIndex$get = function () {
                throw 'unsupported variable Swift.(file).UInt64.Words.endIndex in ' + this.constructor.name;
            };
            Object.defineProperty(class_149.prototype, "endIndex", {
                get: function () { return this.endIndex$get(); },
                enumerable: true,
                configurable: true
            });
            ;
            /*Swift.(file).UInt64.Words.indices*/
            class_149.prototype.indices$get = function () {
                var _this = this;
                return (_.arg0 = _this.startIndex).constructor.infix_46_46_60({}, _.arg0, _this.endIndex);
            };
            Object.defineProperty(class_149.prototype, "indices", {
                get: function () { return this.indices$get(); },
                enumerable: true,
                configurable: true
            });
            ;
            /*Swift.(file).UInt64.Words.index(after:Int)*/
            /*Swift.(file).RandomAccessCollection.index(after:Self.Index)*/
            /*Swift.(file).BidirectionalCollection.index(after:Self.Index)*/
            /*Swift.(file).Collection.index(after:Self.Index)*/
            class_149.prototype.indexAfter = function ($info, i) {
                throw 'unsupported method Swift.(file).UInt64.Words.index(after:Int) in ' + this.constructor.name;
            };
            /*Swift.(file).UInt64.Words.index(before:Int)*/
            /*Swift.(file).RandomAccessCollection.index(before:Self.Index)*/
            /*Swift.(file).BidirectionalCollection.index(before:Self.Index)*/
            class_149.prototype.indexBefore = function ($info, i) {
                throw 'unsupported method Swift.(file).UInt64.Words.index(before:Int) in ' + this.constructor.name;
            };
            /*Swift.(file).UInt64.Words.subscript(_:Int)*/
            /*Swift.(file).RandomAccessCollection.subscript(_:Self.Index)*/
            /*Swift.(file).BidirectionalCollection.subscript(_:Self.Index)*/
            /*Swift.(file).Collection.subscript(_:Self.Index)*/
            class_149.prototype.subscript$get = function ($info, position) {
                throw 'unsupported method Swift.(file).UInt64.Words.subscript(_:Int) in ' + this.constructor.name;
            };
            class_149.prototype.init$vars = function () {
            };
            return class_149;
        }()),
        _125.$struct = true,
        _125.$infoAddress = '',
        _125);
    MIO_Mixin_UInt64.SIMD2Storage = (_126 = /** @class */ (function () {
            function class_150() {
            }
            /*Swift.(file).UInt64.SIMD2Storage.scalarCount*/
            class_150.prototype.scalarCount$get = function () {
                throw 'unsupported variable Swift.(file).UInt64.SIMD2Storage.scalarCount in ' + this.constructor.name;
            };
            Object.defineProperty(class_150.prototype, "scalarCount", {
                get: function () { return this.scalarCount$get(); },
                enumerable: true,
                configurable: true
            });
            ;
            /*Swift.(file).UInt64.SIMD2Storage.init()*/
            /*Swift.(file).SIMDStorage.init()*/
            class_150.prototype.init = function ($info) {
                throw 'unsupported method Swift.(file).UInt64.SIMD2Storage.init() in ' + this.constructor.name;
            };
            /*Swift.(file).UInt64.SIMD2Storage.subscript(_:Int)*/
            /*Swift.(file).SIMDStorage.subscript(_:Int)*/
            class_150.prototype.subscript$get = function ($info, index) {
                throw 'unsupported method Swift.(file).UInt64.SIMD2Storage.subscript(_:Int) in ' + this.constructor.name;
            }; /*Swift.(file).UInt64.SIMD2Storage.subscript(_:Int)*/
            /*Swift.(file).SIMDStorage.subscript(_:Int)*/
            class_150.prototype.subscript$set = function ($info, newValue, index) {
                throw 'unsupported method Swift.(file).UInt64.SIMD2Storage.subscript(_:Int) in ' + this.constructor.name;
            };
            class_150.prototype.init$vars = function () {
            };
            return class_150;
        }()),
        _126.$struct = true,
        _126.$infoAddress = '',
        _126);
    MIO_Mixin_UInt64.SIMD4Storage = (_127 = /** @class */ (function () {
            function class_151() {
            }
            /*Swift.(file).UInt64.SIMD4Storage.scalarCount*/
            class_151.prototype.scalarCount$get = function () {
                throw 'unsupported variable Swift.(file).UInt64.SIMD4Storage.scalarCount in ' + this.constructor.name;
            };
            Object.defineProperty(class_151.prototype, "scalarCount", {
                get: function () { return this.scalarCount$get(); },
                enumerable: true,
                configurable: true
            });
            ;
            /*Swift.(file).UInt64.SIMD4Storage.init()*/
            /*Swift.(file).SIMDStorage.init()*/
            class_151.prototype.init = function ($info) {
                throw 'unsupported method Swift.(file).UInt64.SIMD4Storage.init() in ' + this.constructor.name;
            };
            /*Swift.(file).UInt64.SIMD4Storage.subscript(_:Int)*/
            /*Swift.(file).SIMDStorage.subscript(_:Int)*/
            class_151.prototype.subscript$get = function ($info, index) {
                throw 'unsupported method Swift.(file).UInt64.SIMD4Storage.subscript(_:Int) in ' + this.constructor.name;
            }; /*Swift.(file).UInt64.SIMD4Storage.subscript(_:Int)*/
            /*Swift.(file).SIMDStorage.subscript(_:Int)*/
            class_151.prototype.subscript$set = function ($info, newValue, index) {
                throw 'unsupported method Swift.(file).UInt64.SIMD4Storage.subscript(_:Int) in ' + this.constructor.name;
            };
            class_151.prototype.init$vars = function () {
            };
            return class_151;
        }()),
        _127.$struct = true,
        _127.$infoAddress = '',
        _127);
    MIO_Mixin_UInt64.SIMD8Storage = (_128 = /** @class */ (function () {
            function class_152() {
            }
            /*Swift.(file).UInt64.SIMD8Storage.scalarCount*/
            class_152.prototype.scalarCount$get = function () {
                throw 'unsupported variable Swift.(file).UInt64.SIMD8Storage.scalarCount in ' + this.constructor.name;
            };
            Object.defineProperty(class_152.prototype, "scalarCount", {
                get: function () { return this.scalarCount$get(); },
                enumerable: true,
                configurable: true
            });
            ;
            /*Swift.(file).UInt64.SIMD8Storage.init()*/
            /*Swift.(file).SIMDStorage.init()*/
            class_152.prototype.init = function ($info) {
                throw 'unsupported method Swift.(file).UInt64.SIMD8Storage.init() in ' + this.constructor.name;
            };
            /*Swift.(file).UInt64.SIMD8Storage.subscript(_:Int)*/
            /*Swift.(file).SIMDStorage.subscript(_:Int)*/
            class_152.prototype.subscript$get = function ($info, index) {
                throw 'unsupported method Swift.(file).UInt64.SIMD8Storage.subscript(_:Int) in ' + this.constructor.name;
            }; /*Swift.(file).UInt64.SIMD8Storage.subscript(_:Int)*/
            /*Swift.(file).SIMDStorage.subscript(_:Int)*/
            class_152.prototype.subscript$set = function ($info, newValue, index) {
                throw 'unsupported method Swift.(file).UInt64.SIMD8Storage.subscript(_:Int) in ' + this.constructor.name;
            };
            class_152.prototype.init$vars = function () {
            };
            return class_152;
        }()),
        _128.$struct = true,
        _128.$infoAddress = '',
        _128);
    MIO_Mixin_UInt64.SIMD16Storage = (_129 = /** @class */ (function () {
            function class_153() {
            }
            /*Swift.(file).UInt64.SIMD16Storage.scalarCount*/
            class_153.prototype.scalarCount$get = function () {
                throw 'unsupported variable Swift.(file).UInt64.SIMD16Storage.scalarCount in ' + this.constructor.name;
            };
            Object.defineProperty(class_153.prototype, "scalarCount", {
                get: function () { return this.scalarCount$get(); },
                enumerable: true,
                configurable: true
            });
            ;
            /*Swift.(file).UInt64.SIMD16Storage.init()*/
            /*Swift.(file).SIMDStorage.init()*/
            class_153.prototype.init = function ($info) {
                throw 'unsupported method Swift.(file).UInt64.SIMD16Storage.init() in ' + this.constructor.name;
            };
            /*Swift.(file).UInt64.SIMD16Storage.subscript(_:Int)*/
            /*Swift.(file).SIMDStorage.subscript(_:Int)*/
            class_153.prototype.subscript$get = function ($info, index) {
                throw 'unsupported method Swift.(file).UInt64.SIMD16Storage.subscript(_:Int) in ' + this.constructor.name;
            }; /*Swift.(file).UInt64.SIMD16Storage.subscript(_:Int)*/
            /*Swift.(file).SIMDStorage.subscript(_:Int)*/
            class_153.prototype.subscript$set = function ($info, newValue, index) {
                throw 'unsupported method Swift.(file).UInt64.SIMD16Storage.subscript(_:Int) in ' + this.constructor.name;
            };
            class_153.prototype.init$vars = function () {
            };
            return class_153;
        }()),
        _129.$struct = true,
        _129.$infoAddress = '',
        _129);
    MIO_Mixin_UInt64.SIMD32Storage = (_130 = /** @class */ (function () {
            function class_154() {
            }
            /*Swift.(file).UInt64.SIMD32Storage.scalarCount*/
            class_154.prototype.scalarCount$get = function () {
                throw 'unsupported variable Swift.(file).UInt64.SIMD32Storage.scalarCount in ' + this.constructor.name;
            };
            Object.defineProperty(class_154.prototype, "scalarCount", {
                get: function () { return this.scalarCount$get(); },
                enumerable: true,
                configurable: true
            });
            ;
            /*Swift.(file).UInt64.SIMD32Storage.init()*/
            /*Swift.(file).SIMDStorage.init()*/
            class_154.prototype.init = function ($info) {
                throw 'unsupported method Swift.(file).UInt64.SIMD32Storage.init() in ' + this.constructor.name;
            };
            /*Swift.(file).UInt64.SIMD32Storage.subscript(_:Int)*/
            /*Swift.(file).SIMDStorage.subscript(_:Int)*/
            class_154.prototype.subscript$get = function ($info, index) {
                throw 'unsupported method Swift.(file).UInt64.SIMD32Storage.subscript(_:Int) in ' + this.constructor.name;
            }; /*Swift.(file).UInt64.SIMD32Storage.subscript(_:Int)*/
            /*Swift.(file).SIMDStorage.subscript(_:Int)*/
            class_154.prototype.subscript$set = function ($info, newValue, index) {
                throw 'unsupported method Swift.(file).UInt64.SIMD32Storage.subscript(_:Int) in ' + this.constructor.name;
            };
            class_154.prototype.init$vars = function () {
            };
            return class_154;
        }()),
        _130.$struct = true,
        _130.$infoAddress = '',
        _130);
    MIO_Mixin_UInt64.SIMD64Storage = (_131 = /** @class */ (function () {
            function class_155() {
            }
            /*Swift.(file).UInt64.SIMD64Storage.scalarCount*/
            class_155.prototype.scalarCount$get = function () {
                throw 'unsupported variable Swift.(file).UInt64.SIMD64Storage.scalarCount in ' + this.constructor.name;
            };
            Object.defineProperty(class_155.prototype, "scalarCount", {
                get: function () { return this.scalarCount$get(); },
                enumerable: true,
                configurable: true
            });
            ;
            /*Swift.(file).UInt64.SIMD64Storage.init()*/
            /*Swift.(file).SIMDStorage.init()*/
            class_155.prototype.init = function ($info) {
                throw 'unsupported method Swift.(file).UInt64.SIMD64Storage.init() in ' + this.constructor.name;
            };
            /*Swift.(file).UInt64.SIMD64Storage.subscript(_:Int)*/
            /*Swift.(file).SIMDStorage.subscript(_:Int)*/
            class_155.prototype.subscript$get = function ($info, index) {
                throw 'unsupported method Swift.(file).UInt64.SIMD64Storage.subscript(_:Int) in ' + this.constructor.name;
            }; /*Swift.(file).UInt64.SIMD64Storage.subscript(_:Int)*/
            /*Swift.(file).SIMDStorage.subscript(_:Int)*/
            class_155.prototype.subscript$set = function ($info, newValue, index) {
                throw 'unsupported method Swift.(file).UInt64.SIMD64Storage.subscript(_:Int) in ' + this.constructor.name;
            };
            class_155.prototype.init$vars = function () {
            };
            return class_155;
        }()),
        _131.$struct = true,
        _131.$infoAddress = '',
        _131);
    return MIO_Mixin_UInt64;
}());
if (typeof RandomAccessCollection$implementation != 'undefined')
    _mixin(MIO_Mixin_UInt64.Words, RandomAccessCollection$implementation, false);
if (typeof SIMDStorage$implementation != 'undefined')
    _mixin(MIO_Mixin_UInt64.SIMD2Storage, SIMDStorage$implementation, false);
if (typeof SIMDStorage$implementation != 'undefined')
    _mixin(MIO_Mixin_UInt64.SIMD4Storage, SIMDStorage$implementation, false);
if (typeof SIMDStorage$implementation != 'undefined')
    _mixin(MIO_Mixin_UInt64.SIMD8Storage, SIMDStorage$implementation, false);
if (typeof SIMDStorage$implementation != 'undefined')
    _mixin(MIO_Mixin_UInt64.SIMD16Storage, SIMDStorage$implementation, false);
if (typeof SIMDStorage$implementation != 'undefined')
    _mixin(MIO_Mixin_UInt64.SIMD32Storage, SIMDStorage$implementation, false);
if (typeof SIMDStorage$implementation != 'undefined')
    _mixin(MIO_Mixin_UInt64.SIMD64Storage, SIMDStorage$implementation, false);
if (typeof FixedWidthInteger$implementation != 'undefined')
    _mixin(MIO_Mixin_UInt64, FixedWidthInteger$implementation, false);
if (typeof UnsignedInteger$implementation != 'undefined')
    _mixin(MIO_Mixin_UInt64, UnsignedInteger$implementation, false);
if (typeof _ExpressibleByBuiltinIntegerLiteral$implementation != 'undefined')
    _mixin(MIO_Mixin_UInt64, _ExpressibleByBuiltinIntegerLiteral$implementation, false);
if (typeof Codable$implementation != 'undefined')
    _mixin(MIO_Mixin_UInt64, Codable$implementation, false);
if (typeof Hashable$implementation != 'undefined')
    _mixin(MIO_Mixin_UInt64, Hashable$implementation, false);
if (typeof _HasCustomAnyHashableRepresentation$implementation != 'undefined')
    _mixin(MIO_Mixin_UInt64, _HasCustomAnyHashableRepresentation$implementation, false);
if (typeof CustomReflectable$implementation != 'undefined')
    _mixin(MIO_Mixin_UInt64, CustomReflectable$implementation, false);
if (typeof _CustomPlaygroundQuickLookable$implementation != 'undefined')
    _mixin(MIO_Mixin_UInt64, _CustomPlaygroundQuickLookable$implementation, false);
if (typeof SIMDScalar$implementation != 'undefined')
    _mixin(MIO_Mixin_UInt64, SIMDScalar$implementation, false);
if (typeof CVarArg$implementation != 'undefined')
    _mixin(MIO_Mixin_UInt64, CVarArg$implementation, false);
if (typeof _CVarArgAligned$implementation != 'undefined')
    _mixin(MIO_Mixin_UInt64, _CVarArgAligned$implementation, false);
_mixin(Number, MIO_Mixin_UInt64, true);
var UInt64 = /** @class */ (function () {
    function UInt64() {
    }
    return UInt64;
}());
_mixin(UInt64, MIO_Mixin_UInt64, true);
var MIO_Mixin_Int64 = /** @class */ (function () {
    function MIO_Mixin_Int64() {
    }
    /*Swift.(file).Int64.init(_builtinIntegerLiteral:IntLiteral)*/
    /*Swift.(file)._ExpressibleByBuiltinIntegerLiteral.init(_builtinIntegerLiteral:IntLiteral)*/
    MIO_Mixin_Int64.prototype.init_builtinIntegerLiteralIntLiteral = function ($info, x) {
        throw 'unsupported method Swift.(file).Int64.init(_builtinIntegerLiteral:IntLiteral) in ' + this.constructor.name;
    };
    /*Swift.(file).Int64.init(bitPattern:UInt64)*/
    /*Swift.(file).Int64.init(bitPattern:UInt64)*/
    MIO_Mixin_Int64.prototype.initBitPatternUInt64 = function ($info, x) {
        throw 'unsupported method Swift.(file).Int64.init(bitPattern:UInt64) in ' + this.constructor.name;
    };
    /*Swift.(file).Int64.init(bitPattern:Double)*/
    /*Swift.(file).Int64.init(bitPattern:Double)*/
    MIO_Mixin_Int64.prototype.initBitPatternDouble = function ($info, x) {
        throw 'unsupported method Swift.(file).Int64.init(bitPattern:Double) in ' + this.constructor.name;
    };
    /*Swift.(file).Int64.init(_:Float)*/
    /*Swift.(file).Int64.init(_:Float)*/
    MIO_Mixin_Int64.prototype.initFloat = function ($info, source) {
        throw 'unsupported method Swift.(file).Int64.init(_:Float) in ' + this.constructor.name;
    };
    /*Swift.(file).Int64.init(exactly:Float)*/
    /*Swift.(file).Int64.init(exactly:Float)*/
    MIO_Mixin_Int64.prototype.initExactlyFloat = function ($info, source) {
        throw 'unsupported method Swift.(file).Int64.init(exactly:Float) in ' + this.constructor.name;
    };
    /*Swift.(file).Int64.init(_:Double)*/
    /*Swift.(file).Int64.init(_:Double)*/
    MIO_Mixin_Int64.prototype.initDouble = function ($info, source) {
        throw 'unsupported method Swift.(file).Int64.init(_:Double) in ' + this.constructor.name;
    };
    /*Swift.(file).Int64.init(exactly:Double)*/
    /*Swift.(file).Int64.init(exactly:Double)*/
    MIO_Mixin_Int64.prototype.initExactlyDouble = function ($info, source) {
        throw 'unsupported method Swift.(file).Int64.init(exactly:Double) in ' + this.constructor.name;
    };
    /*Swift.(file).Int64.init(_:Float80)*/
    /*Swift.(file).Int64.init(_:Float80)*/
    MIO_Mixin_Int64.prototype.initFloat80 = function ($info, source) {
        throw 'unsupported method Swift.(file).Int64.init(_:Float80) in ' + this.constructor.name;
    };
    /*Swift.(file).Int64.init(exactly:Float80)*/
    /*Swift.(file).Int64.init(exactly:Float80)*/
    MIO_Mixin_Int64.prototype.initExactlyFloat80 = function ($info, source) {
        throw 'unsupported method Swift.(file).Int64.init(exactly:Float80) in ' + this.constructor.name;
    };
    /*Swift.(file).Int64.==infix(_:Int64,_:Int64)*/
    /*Swift.(file).Equatable.==infix(_:Self,_:Self)*/
    MIO_Mixin_Int64.infix_61_61 = function ($info, lhs, rhs) {
        return lhs == rhs;
    };
    /*Swift.(file).Int64.<infix(_:Int64,_:Int64)*/
    /*Swift.(file).Comparable.<infix(_:Self,_:Self)*/
    MIO_Mixin_Int64.infix_60 = function ($info, lhs, rhs) {
        return lhs < rhs;
    };
    /*Swift.(file).Int64.+=infix(_:Int64,_:Int64)*/
    /*Swift.(file).BinaryInteger.+=infix(_:Self,_:Self)*/
    /*Swift.(file).AdditiveArithmetic.+=infix(_:Self,_:Self)*/
    MIO_Mixin_Int64.infix_43_61 = function ($info, lhs$inout, rhs) {
        lhs$inout.set(lhs$inout.get() + rhs);
    };
    /*Swift.(file).Int64.-=infix(_:Int64,_:Int64)*/
    /*Swift.(file).BinaryInteger.-=infix(_:Self,_:Self)*/
    /*Swift.(file).AdditiveArithmetic.-=infix(_:Self,_:Self)*/
    MIO_Mixin_Int64.infix_45_61 = function ($info, lhs$inout, rhs) {
        lhs$inout.set(lhs$inout.get() - rhs);
    };
    /*Swift.(file).Int64.*=infix(_:Int64,_:Int64)*/
    /*Swift.(file).BinaryInteger.*=infix(_:Self,_:Self)*/
    /*Swift.(file).Numeric.*=infix(_:Self,_:Self)*/
    MIO_Mixin_Int64.infix_42_61 = function ($info, lhs$inout, rhs) {
        lhs$inout.set(lhs$inout.get() * rhs);
    };
    /*Swift.(file).Int64./=infix(_:Int64,_:Int64)*/
    /*Swift.(file).BinaryInteger./=infix(_:Self,_:Self)*/
    MIO_Mixin_Int64.infix_47_61 = function ($info, lhs$inout, rhs) {
        lhs$inout.set((lhs$inout.get() / rhs) | 0);
    };
    /*Swift.(file).Int64.dividedReportingOverflow(by:Int64)*/
    /*Swift.(file).FixedWidthInteger.dividedReportingOverflow(by:Self)*/
    MIO_Mixin_Int64.prototype.dividedReportingOverflowBy = function ($info, other) {
        throw 'unsupported method Swift.(file).Int64.dividedReportingOverflow(by:Int64) in ' + this.constructor.name;
    };
    /*Swift.(file).Int64.remainderReportingOverflow(dividingBy:Int64)*/
    /*Swift.(file).FixedWidthInteger.remainderReportingOverflow(dividingBy:Self)*/
    MIO_Mixin_Int64.prototype.remainderReportingOverflowDividingBy = function ($info, other) {
        throw 'unsupported method Swift.(file).Int64.remainderReportingOverflow(dividingBy:Int64) in ' + this.constructor.name;
    };
    /*Swift.(file).Int64.addingReportingOverflow(_:Int64)*/
    /*Swift.(file).FixedWidthInteger.addingReportingOverflow(_:Self)*/
    MIO_Mixin_Int64.prototype.addingReportingOverflow = function ($info, other) {
        throw 'unsupported method Swift.(file).Int64.addingReportingOverflow(_:Int64) in ' + this.constructor.name;
    };
    /*Swift.(file).Int64.subtractingReportingOverflow(_:Int64)*/
    /*Swift.(file).FixedWidthInteger.subtractingReportingOverflow(_:Self)*/
    MIO_Mixin_Int64.prototype.subtractingReportingOverflow = function ($info, other) {
        throw 'unsupported method Swift.(file).Int64.subtractingReportingOverflow(_:Int64) in ' + this.constructor.name;
    };
    /*Swift.(file).Int64.multipliedReportingOverflow(by:Int64)*/
    /*Swift.(file).FixedWidthInteger.multipliedReportingOverflow(by:Self)*/
    MIO_Mixin_Int64.prototype.multipliedReportingOverflowBy = function ($info, other) {
        throw 'unsupported method Swift.(file).Int64.multipliedReportingOverflow(by:Int64) in ' + this.constructor.name;
    };
    /*Swift.(file).Int64.%=infix(_:Int64,_:Int64)*/
    /*Swift.(file).BinaryInteger.%=infix(_:Self,_:Self)*/
    MIO_Mixin_Int64.infix_37_61 = function ($info, lhs$inout, rhs) {
        lhs$inout.set(lhs$inout.get() % rhs);
    };
    /*Swift.(file).Int64.init(_:Int64)*/
    /*Swift.(file).Int64.init(_:Int64)*/
    MIO_Mixin_Int64.prototype.initInt64 = function ($info, _value) {
        throw 'unsupported method Swift.(file).Int64.init(_:Int64) in ' + this.constructor.name;
    };
    /*Swift.(file).Int64.&=infix(_:Int64,_:Int64)*/
    /*Swift.(file).BinaryInteger.&=infix(_:Self,_:Self)*/
    MIO_Mixin_Int64.infix_38_61 = function ($info, lhs$inout, rhs) {
        lhs$inout.set(lhs$inout.get() & rhs);
    };
    /*Swift.(file).Int64.|=infix(_:Int64,_:Int64)*/
    /*Swift.(file).BinaryInteger.|=infix(_:Self,_:Self)*/
    MIO_Mixin_Int64.infix_124_61 = function ($info, lhs$inout, rhs) {
        lhs$inout.set(lhs$inout.get() | rhs);
    };
    /*Swift.(file).Int64.^=infix(_:Int64,_:Int64)*/
    /*Swift.(file).BinaryInteger.^=infix(_:Self,_:Self)*/
    MIO_Mixin_Int64.infix_94_61 = function ($info, lhs$inout, rhs) {
        lhs$inout.set(lhs$inout.get() ^ rhs);
    };
    /*Swift.(file).Int64.&>>=infix(_:Int64,_:Int64)*/
    /*Swift.(file).FixedWidthInteger.&>>=infix(_:Self,_:Self)*/
    MIO_Mixin_Int64.infix_38_62_62_61 = function ($info, lhs$inout, rhs) {
        lhs$inout.set(lhs$inout.get() >> rhs);
    };
    /*Swift.(file).Int64.&<<=infix(_:Int64,_:Int64)*/
    /*Swift.(file).FixedWidthInteger.&<<=infix(_:Self,_:Self)*/
    MIO_Mixin_Int64.infix_38_60_60_61 = function ($info, lhs$inout, rhs) {
        lhs$inout.set(lhs$inout.get() << rhs);
    };
    /*Swift.(file).Int64.bitWidth*/
    MIO_Mixin_Int64.bitWidth$get = function () {
        var _this = this;
        return _this.constructor.bitWidth;
    };
    Object.defineProperty(MIO_Mixin_Int64, "bitWidth", {
        get: function () { return this.bitWidth$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).Int64.leadingZeroBitCount*/
    MIO_Mixin_Int64.prototype.leadingZeroBitCount$get = function () {
        throw 'unsupported variable Swift.(file).Int64.leadingZeroBitCount in ' + this.constructor.name;
    };
    Object.defineProperty(MIO_Mixin_Int64.prototype, "leadingZeroBitCount", {
        get: function () { return this.leadingZeroBitCount$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).Int64.trailingZeroBitCount*/
    MIO_Mixin_Int64.prototype.trailingZeroBitCount$get = function () {
        throw 'unsupported variable Swift.(file).Int64.trailingZeroBitCount in ' + this.constructor.name;
    };
    Object.defineProperty(MIO_Mixin_Int64.prototype, "trailingZeroBitCount", {
        get: function () { return this.trailingZeroBitCount$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).Int64.nonzeroBitCount*/
    MIO_Mixin_Int64.prototype.nonzeroBitCount$get = function () {
        throw 'unsupported variable Swift.(file).Int64.nonzeroBitCount in ' + this.constructor.name;
    };
    Object.defineProperty(MIO_Mixin_Int64.prototype, "nonzeroBitCount", {
        get: function () { return this.nonzeroBitCount$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).Int64.words*/
    MIO_Mixin_Int64.prototype.words$get = function () {
        throw 'unsupported variable Swift.(file).Int64.words in ' + this.constructor.name;
    };
    Object.defineProperty(MIO_Mixin_Int64.prototype, "words", {
        get: function () { return this.words$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).Int64.init(_truncatingBits:UInt)*/
    /*Swift.(file).FixedWidthInteger.init(_truncatingBits:UInt)*/
    MIO_Mixin_Int64.prototype.init_truncatingBitsUInt = function ($info, bits) {
        throw 'unsupported method Swift.(file).Int64.init(_truncatingBits:UInt) in ' + this.constructor.name;
    };
    /*Swift.(file).Int64.magnitude*/
    MIO_Mixin_Int64.prototype.magnitude$get = function () {
        throw 'unsupported variable Swift.(file).Int64.magnitude in ' + this.constructor.name;
    };
    Object.defineProperty(MIO_Mixin_Int64.prototype, "magnitude", {
        get: function () { return this.magnitude$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).Int64.multipliedFullWidth(by:Int64)*/
    /*Swift.(file).FixedWidthInteger.multipliedFullWidth(by:Self)*/
    MIO_Mixin_Int64.prototype.multipliedFullWidthBy = function ($info, other) {
        throw 'unsupported method Swift.(file).Int64.multipliedFullWidth(by:Int64) in ' + this.constructor.name;
    };
    /*Swift.(file).Int64.dividingFullWidth(_:(high: Int64, low: Int64.Magnitude))*/
    /*Swift.(file).FixedWidthInteger.dividingFullWidth(_:(high: Self, low: Self.Magnitude))*/
    MIO_Mixin_Int64.prototype.dividingFullWidth = function ($info, dividend) {
        throw 'unsupported method Swift.(file).Int64.dividingFullWidth(_:(high: Int64, low: Int64.Magnitude)) in ' + this.constructor.name;
    };
    /*Swift.(file).Int64.byteSwapped*/
    MIO_Mixin_Int64.prototype.byteSwapped$get = function () {
        throw 'unsupported variable Swift.(file).Int64.byteSwapped in ' + this.constructor.name;
    };
    Object.defineProperty(MIO_Mixin_Int64.prototype, "byteSwapped", {
        get: function () { return this.byteSwapped$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).Int64.toUIntMax()*/
    /*Swift.(file).Int64.toUIntMax()*/
    MIO_Mixin_Int64.prototype.toUIntMax = function ($info) {
        throw 'unsupported method Swift.(file).Int64.toUIntMax() in ' + this.constructor.name;
    };
    /*Swift.(file).Int64.signum()*/
    /*Swift.(file).BinaryInteger.signum()*/
    MIO_Mixin_Int64.prototype.signum = function ($info) {
        var _this = this;
        return _this.constructor.infix_45({}, (_this.constructor.infix_62({}, _this, _create(_this.constructor, 'initIntegerLiteral', {}, 0)) ? _create(_this.constructor, 'initIntegerLiteral', {}, 1) : _create(_this.constructor, 'initIntegerLiteral', {}, 0)), (_this.constructor.infix_60({}, _this, _create(_this.constructor, 'initIntegerLiteral', {}, 0)) ? _create(_this.constructor, 'initIntegerLiteral', {}, 1) : _create(_this.constructor, 'initIntegerLiteral', {}, 0)));
    };
    /*Swift.(file).Int64.init(from:Decoder)*/
    /*Swift.(file).Decodable.init(from:Decoder)*/
    MIO_Mixin_Int64.prototype.initFromDecoder = function ($info, decoder) {
        throw 'unsupported method Swift.(file).Int64.init(from:Decoder) in ' + this.constructor.name;
    };
    /*Swift.(file).Int64.encode(to:Encoder)*/
    /*Swift.(file).Encodable.encode(to:Encoder)*/
    MIO_Mixin_Int64.prototype.encodeTo = function ($info, encoder) {
        throw 'unsupported method Swift.(file).Int64.encode(to:Encoder) in ' + this.constructor.name;
    };
    /*Swift.(file).Int64.hash(into:Hasher)*/
    /*Swift.(file).Hashable.hash(into:Hasher)*/
    MIO_Mixin_Int64.prototype.hashInto = function ($info, hasher$inout) {
        throw 'unsupported method Swift.(file).Int64.hash(into:Hasher) in ' + this.constructor.name;
    };
    /*Swift.(file).Int64.hashValue*/
    MIO_Mixin_Int64.prototype.hashValue$get = function () {
        throw 'unsupported variable Swift.(file).Int64.hashValue in ' + this.constructor.name;
    };
    Object.defineProperty(MIO_Mixin_Int64.prototype, "hashValue", {
        get: function () { return this.hashValue$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).Int64.&infix(_:Int64,_:Int64)*/
    /*Swift.(file).BinaryInteger.&infix(_:Self,_:Self)*/
    MIO_Mixin_Int64.infix_38 = function ($info, lhs, rhs) {
        return lhs & rhs;
    };
    /*Swift.(file).Int64.|infix(_:Int64,_:Int64)*/
    /*Swift.(file).BinaryInteger.|infix(_:Self,_:Self)*/
    MIO_Mixin_Int64.infix_124 = function ($info, lhs, rhs) {
        return lhs | rhs;
    };
    /*Swift.(file).Int64.^infix(_:Int64,_:Int64)*/
    /*Swift.(file).BinaryInteger.^infix(_:Self,_:Self)*/
    MIO_Mixin_Int64.infix_94 = function ($info, lhs, rhs) {
        return lhs ^ rhs;
    };
    /*Swift.(file).Int64.&>>infix(_:Int64,_:Int64)*/
    /*Swift.(file).FixedWidthInteger.&>>infix(_:Self,_:Self)*/
    MIO_Mixin_Int64.infix_38_62_62 = function ($info, lhs, rhs) {
        return lhs >> rhs;
    };
    /*Swift.(file).Int64.&<<infix(_:Int64,_:Int64)*/
    /*Swift.(file).FixedWidthInteger.&<<infix(_:Self,_:Self)*/
    MIO_Mixin_Int64.infix_38_60_60 = function ($info, lhs, rhs) {
        return lhs << rhs;
    };
    /*Swift.(file).Int64./infix(_:Int64,_:Int64)*/
    /*Swift.(file).BinaryInteger./infix(_:Self,_:Self)*/
    MIO_Mixin_Int64.infix_47 = function ($info, lhs, rhs) {
        return (lhs / rhs) | 0;
    };
    /*Swift.(file).Int64.%infix(_:Int64,_:Int64)*/
    /*Swift.(file).BinaryInteger.%infix(_:Self,_:Self)*/
    MIO_Mixin_Int64.infix_37 = function ($info, lhs, rhs) {
        return lhs % rhs;
    };
    /*Swift.(file).Int64.+infix(_:Int64,_:Int64)*/
    /*Swift.(file).BinaryInteger.+infix(_:Self,_:Self)*/
    /*Swift.(file).AdditiveArithmetic.+infix(_:Self,_:Self)*/
    MIO_Mixin_Int64.infix_43 = function ($info, lhs, rhs) {
        return lhs + rhs;
    };
    /*Swift.(file).Int64.-infix(_:Int64,_:Int64)*/
    /*Swift.(file).BinaryInteger.-infix(_:Self,_:Self)*/
    /*Swift.(file).AdditiveArithmetic.-infix(_:Self,_:Self)*/
    MIO_Mixin_Int64.infix_45 = function ($info, lhs, rhs) {
        return lhs - rhs;
    };
    /*Swift.(file).Int64.*infix(_:Int64,_:Int64)*/
    /*Swift.(file).BinaryInteger.*infix(_:Self,_:Self)*/
    /*Swift.(file).Numeric.*infix(_:Self,_:Self)*/
    MIO_Mixin_Int64.infix_42 = function ($info, lhs, rhs) {
        return lhs * rhs;
    };
    /*Swift.(file).Int64.>>infix(_:Int64,_:Int64)*/
    /*Swift.(file).Int64.>>infix(_:Int64,_:Int64)*/
    MIO_Mixin_Int64.infix_62_62 = function ($info, lhs, rhs) {
        return lhs >> rhs;
    };
    /*Swift.(file).Int64.>>=infix(_:Int64,_:Int64)*/
    /*Swift.(file).Int64.>>=infix(_:Int64,_:Int64)*/
    MIO_Mixin_Int64.infix_62_62_61 = function ($info, lhs$inout, rhs) {
        lhs$inout.set(lhs$inout.get() >> rhs);
    };
    /*Swift.(file).Int64.<<infix(_:Int64,_:Int64)*/
    /*Swift.(file).Int64.<<infix(_:Int64,_:Int64)*/
    MIO_Mixin_Int64.infix_60_60 = function ($info, lhs, rhs) {
        return lhs << rhs;
    };
    /*Swift.(file).Int64.<<=infix(_:Int64,_:Int64)*/
    /*Swift.(file).Int64.<<=infix(_:Int64,_:Int64)*/
    MIO_Mixin_Int64.infix_60_60_61 = function ($info, lhs$inout, rhs) {
        lhs$inout.set(lhs$inout.get() << rhs);
    };
    /*Swift.(file).Int64.<=infix(_:Int64,_:Int64)*/
    /*Swift.(file).Comparable.<=infix(_:Self,_:Self)*/
    MIO_Mixin_Int64.infix_60_61 = function ($info, lhs, rhs) {
        var _this = this;
        return Bool.prefix_33({}, (_.arg0 = rhs).constructor.infix_60({}, _.arg0, lhs));
    };
    /*Swift.(file).Int64.>=infix(_:Int64,_:Int64)*/
    /*Swift.(file).Comparable.>=infix(_:Self,_:Self)*/
    MIO_Mixin_Int64.infix_62_61 = function ($info, lhs, rhs) {
        var _this = this;
        return Bool.prefix_33({}, (_.arg0 = lhs).constructor.infix_60({}, _.arg0, rhs));
    };
    /*Swift.(file).Int64.>infix(_:Int64,_:Int64)*/
    /*Swift.(file).Comparable.>infix(_:Self,_:Self)*/
    MIO_Mixin_Int64.infix_62 = function ($info, lhs, rhs) {
        var _this = this;
        return (_.arg0 = rhs).constructor.infix_60({}, _.arg0, lhs);
    };
    /*Swift.(file).Int64.customMirror*/
    MIO_Mixin_Int64.prototype.customMirror$get = function () {
        throw 'unsupported variable Swift.(file).Int64.customMirror in ' + this.constructor.name;
    };
    Object.defineProperty(MIO_Mixin_Int64.prototype, "customMirror", {
        get: function () { return this.customMirror$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).Int64.customPlaygroundQuickLook*/
    MIO_Mixin_Int64.prototype.customPlaygroundQuickLook$get = function () {
        throw 'unsupported variable Swift.(file).Int64.customPlaygroundQuickLook in ' + this.constructor.name;
    };
    Object.defineProperty(MIO_Mixin_Int64.prototype, "customPlaygroundQuickLook", {
        get: function () { return this.customPlaygroundQuickLook$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    MIO_Mixin_Int64.prototype.init$vars = function () {
    };
    var _132, _133, _134, _135, _136, _137, _138;
    MIO_Mixin_Int64.$struct = true;
    MIO_Mixin_Int64.$mixin = true;
    MIO_Mixin_Int64.$infoAddress = '';
    MIO_Mixin_Int64.initExactlyFloat$failable = true;
    MIO_Mixin_Int64.initExactlyDouble$failable = true;
    MIO_Mixin_Int64.initExactlyFloat80$failable = true;
    MIO_Mixin_Int64.Words = (_132 = /** @class */ (function () {
            function class_156() {
            }
            /*Swift.(file).Int64.Words.init(_:Int64)*/
            /*Swift.(file).Int64.Words.init(_:Int64)*/
            class_156.prototype.initInt64 = function ($info, value) {
                throw 'unsupported method Swift.(file).Int64.Words.init(_:Int64) in ' + this.constructor.name;
            };
            /*Swift.(file).Int64.Words.count*/
            class_156.prototype.count$get = function () {
                var _this = this;
                return _this.distanceFromTo({}, _this.startIndex, _this.endIndex);
            };
            Object.defineProperty(class_156.prototype, "count", {
                get: function () { return this.count$get(); },
                enumerable: true,
                configurable: true
            });
            ;
            /*Swift.(file).Int64.Words.startIndex*/
            class_156.prototype.startIndex$get = function () {
                throw 'unsupported variable Swift.(file).Int64.Words.startIndex in ' + this.constructor.name;
            };
            Object.defineProperty(class_156.prototype, "startIndex", {
                get: function () { return this.startIndex$get(); },
                enumerable: true,
                configurable: true
            });
            ;
            /*Swift.(file).Int64.Words.endIndex*/
            class_156.prototype.endIndex$get = function () {
                throw 'unsupported variable Swift.(file).Int64.Words.endIndex in ' + this.constructor.name;
            };
            Object.defineProperty(class_156.prototype, "endIndex", {
                get: function () { return this.endIndex$get(); },
                enumerable: true,
                configurable: true
            });
            ;
            /*Swift.(file).Int64.Words.indices*/
            class_156.prototype.indices$get = function () {
                var _this = this;
                return (_.arg0 = _this.startIndex).constructor.infix_46_46_60({}, _.arg0, _this.endIndex);
            };
            Object.defineProperty(class_156.prototype, "indices", {
                get: function () { return this.indices$get(); },
                enumerable: true,
                configurable: true
            });
            ;
            /*Swift.(file).Int64.Words.index(after:Int)*/
            /*Swift.(file).RandomAccessCollection.index(after:Self.Index)*/
            /*Swift.(file).BidirectionalCollection.index(after:Self.Index)*/
            /*Swift.(file).Collection.index(after:Self.Index)*/
            class_156.prototype.indexAfter = function ($info, i) {
                throw 'unsupported method Swift.(file).Int64.Words.index(after:Int) in ' + this.constructor.name;
            };
            /*Swift.(file).Int64.Words.index(before:Int)*/
            /*Swift.(file).RandomAccessCollection.index(before:Self.Index)*/
            /*Swift.(file).BidirectionalCollection.index(before:Self.Index)*/
            class_156.prototype.indexBefore = function ($info, i) {
                throw 'unsupported method Swift.(file).Int64.Words.index(before:Int) in ' + this.constructor.name;
            };
            /*Swift.(file).Int64.Words.subscript(_:Int)*/
            /*Swift.(file).RandomAccessCollection.subscript(_:Self.Index)*/
            /*Swift.(file).BidirectionalCollection.subscript(_:Self.Index)*/
            /*Swift.(file).Collection.subscript(_:Self.Index)*/
            class_156.prototype.subscript$get = function ($info, position) {
                throw 'unsupported method Swift.(file).Int64.Words.subscript(_:Int) in ' + this.constructor.name;
            };
            class_156.prototype.init$vars = function () {
            };
            return class_156;
        }()),
        _132.$struct = true,
        _132.$infoAddress = '',
        _132);
    MIO_Mixin_Int64.SIMD2Storage = (_133 = /** @class */ (function () {
            function class_157() {
            }
            /*Swift.(file).Int64.SIMD2Storage.scalarCount*/
            class_157.prototype.scalarCount$get = function () {
                throw 'unsupported variable Swift.(file).Int64.SIMD2Storage.scalarCount in ' + this.constructor.name;
            };
            Object.defineProperty(class_157.prototype, "scalarCount", {
                get: function () { return this.scalarCount$get(); },
                enumerable: true,
                configurable: true
            });
            ;
            /*Swift.(file).Int64.SIMD2Storage.init()*/
            /*Swift.(file).SIMDStorage.init()*/
            class_157.prototype.init = function ($info) {
                throw 'unsupported method Swift.(file).Int64.SIMD2Storage.init() in ' + this.constructor.name;
            };
            /*Swift.(file).Int64.SIMD2Storage.subscript(_:Int)*/
            /*Swift.(file).SIMDStorage.subscript(_:Int)*/
            class_157.prototype.subscript$get = function ($info, index) {
                throw 'unsupported method Swift.(file).Int64.SIMD2Storage.subscript(_:Int) in ' + this.constructor.name;
            }; /*Swift.(file).Int64.SIMD2Storage.subscript(_:Int)*/
            /*Swift.(file).SIMDStorage.subscript(_:Int)*/
            class_157.prototype.subscript$set = function ($info, newValue, index) {
                throw 'unsupported method Swift.(file).Int64.SIMD2Storage.subscript(_:Int) in ' + this.constructor.name;
            };
            class_157.prototype.init$vars = function () {
            };
            return class_157;
        }()),
        _133.$struct = true,
        _133.$infoAddress = '',
        _133);
    MIO_Mixin_Int64.SIMD4Storage = (_134 = /** @class */ (function () {
            function class_158() {
            }
            /*Swift.(file).Int64.SIMD4Storage.scalarCount*/
            class_158.prototype.scalarCount$get = function () {
                throw 'unsupported variable Swift.(file).Int64.SIMD4Storage.scalarCount in ' + this.constructor.name;
            };
            Object.defineProperty(class_158.prototype, "scalarCount", {
                get: function () { return this.scalarCount$get(); },
                enumerable: true,
                configurable: true
            });
            ;
            /*Swift.(file).Int64.SIMD4Storage.init()*/
            /*Swift.(file).SIMDStorage.init()*/
            class_158.prototype.init = function ($info) {
                throw 'unsupported method Swift.(file).Int64.SIMD4Storage.init() in ' + this.constructor.name;
            };
            /*Swift.(file).Int64.SIMD4Storage.subscript(_:Int)*/
            /*Swift.(file).SIMDStorage.subscript(_:Int)*/
            class_158.prototype.subscript$get = function ($info, index) {
                throw 'unsupported method Swift.(file).Int64.SIMD4Storage.subscript(_:Int) in ' + this.constructor.name;
            }; /*Swift.(file).Int64.SIMD4Storage.subscript(_:Int)*/
            /*Swift.(file).SIMDStorage.subscript(_:Int)*/
            class_158.prototype.subscript$set = function ($info, newValue, index) {
                throw 'unsupported method Swift.(file).Int64.SIMD4Storage.subscript(_:Int) in ' + this.constructor.name;
            };
            class_158.prototype.init$vars = function () {
            };
            return class_158;
        }()),
        _134.$struct = true,
        _134.$infoAddress = '',
        _134);
    MIO_Mixin_Int64.SIMD8Storage = (_135 = /** @class */ (function () {
            function class_159() {
            }
            /*Swift.(file).Int64.SIMD8Storage.scalarCount*/
            class_159.prototype.scalarCount$get = function () {
                throw 'unsupported variable Swift.(file).Int64.SIMD8Storage.scalarCount in ' + this.constructor.name;
            };
            Object.defineProperty(class_159.prototype, "scalarCount", {
                get: function () { return this.scalarCount$get(); },
                enumerable: true,
                configurable: true
            });
            ;
            /*Swift.(file).Int64.SIMD8Storage.init()*/
            /*Swift.(file).SIMDStorage.init()*/
            class_159.prototype.init = function ($info) {
                throw 'unsupported method Swift.(file).Int64.SIMD8Storage.init() in ' + this.constructor.name;
            };
            /*Swift.(file).Int64.SIMD8Storage.subscript(_:Int)*/
            /*Swift.(file).SIMDStorage.subscript(_:Int)*/
            class_159.prototype.subscript$get = function ($info, index) {
                throw 'unsupported method Swift.(file).Int64.SIMD8Storage.subscript(_:Int) in ' + this.constructor.name;
            }; /*Swift.(file).Int64.SIMD8Storage.subscript(_:Int)*/
            /*Swift.(file).SIMDStorage.subscript(_:Int)*/
            class_159.prototype.subscript$set = function ($info, newValue, index) {
                throw 'unsupported method Swift.(file).Int64.SIMD8Storage.subscript(_:Int) in ' + this.constructor.name;
            };
            class_159.prototype.init$vars = function () {
            };
            return class_159;
        }()),
        _135.$struct = true,
        _135.$infoAddress = '',
        _135);
    MIO_Mixin_Int64.SIMD16Storage = (_136 = /** @class */ (function () {
            function class_160() {
            }
            /*Swift.(file).Int64.SIMD16Storage.scalarCount*/
            class_160.prototype.scalarCount$get = function () {
                throw 'unsupported variable Swift.(file).Int64.SIMD16Storage.scalarCount in ' + this.constructor.name;
            };
            Object.defineProperty(class_160.prototype, "scalarCount", {
                get: function () { return this.scalarCount$get(); },
                enumerable: true,
                configurable: true
            });
            ;
            /*Swift.(file).Int64.SIMD16Storage.init()*/
            /*Swift.(file).SIMDStorage.init()*/
            class_160.prototype.init = function ($info) {
                throw 'unsupported method Swift.(file).Int64.SIMD16Storage.init() in ' + this.constructor.name;
            };
            /*Swift.(file).Int64.SIMD16Storage.subscript(_:Int)*/
            /*Swift.(file).SIMDStorage.subscript(_:Int)*/
            class_160.prototype.subscript$get = function ($info, index) {
                throw 'unsupported method Swift.(file).Int64.SIMD16Storage.subscript(_:Int) in ' + this.constructor.name;
            }; /*Swift.(file).Int64.SIMD16Storage.subscript(_:Int)*/
            /*Swift.(file).SIMDStorage.subscript(_:Int)*/
            class_160.prototype.subscript$set = function ($info, newValue, index) {
                throw 'unsupported method Swift.(file).Int64.SIMD16Storage.subscript(_:Int) in ' + this.constructor.name;
            };
            class_160.prototype.init$vars = function () {
            };
            return class_160;
        }()),
        _136.$struct = true,
        _136.$infoAddress = '',
        _136);
    MIO_Mixin_Int64.SIMD32Storage = (_137 = /** @class */ (function () {
            function class_161() {
            }
            /*Swift.(file).Int64.SIMD32Storage.scalarCount*/
            class_161.prototype.scalarCount$get = function () {
                throw 'unsupported variable Swift.(file).Int64.SIMD32Storage.scalarCount in ' + this.constructor.name;
            };
            Object.defineProperty(class_161.prototype, "scalarCount", {
                get: function () { return this.scalarCount$get(); },
                enumerable: true,
                configurable: true
            });
            ;
            /*Swift.(file).Int64.SIMD32Storage.init()*/
            /*Swift.(file).SIMDStorage.init()*/
            class_161.prototype.init = function ($info) {
                throw 'unsupported method Swift.(file).Int64.SIMD32Storage.init() in ' + this.constructor.name;
            };
            /*Swift.(file).Int64.SIMD32Storage.subscript(_:Int)*/
            /*Swift.(file).SIMDStorage.subscript(_:Int)*/
            class_161.prototype.subscript$get = function ($info, index) {
                throw 'unsupported method Swift.(file).Int64.SIMD32Storage.subscript(_:Int) in ' + this.constructor.name;
            }; /*Swift.(file).Int64.SIMD32Storage.subscript(_:Int)*/
            /*Swift.(file).SIMDStorage.subscript(_:Int)*/
            class_161.prototype.subscript$set = function ($info, newValue, index) {
                throw 'unsupported method Swift.(file).Int64.SIMD32Storage.subscript(_:Int) in ' + this.constructor.name;
            };
            class_161.prototype.init$vars = function () {
            };
            return class_161;
        }()),
        _137.$struct = true,
        _137.$infoAddress = '',
        _137);
    MIO_Mixin_Int64.SIMD64Storage = (_138 = /** @class */ (function () {
            function class_162() {
            }
            /*Swift.(file).Int64.SIMD64Storage.scalarCount*/
            class_162.prototype.scalarCount$get = function () {
                throw 'unsupported variable Swift.(file).Int64.SIMD64Storage.scalarCount in ' + this.constructor.name;
            };
            Object.defineProperty(class_162.prototype, "scalarCount", {
                get: function () { return this.scalarCount$get(); },
                enumerable: true,
                configurable: true
            });
            ;
            /*Swift.(file).Int64.SIMD64Storage.init()*/
            /*Swift.(file).SIMDStorage.init()*/
            class_162.prototype.init = function ($info) {
                throw 'unsupported method Swift.(file).Int64.SIMD64Storage.init() in ' + this.constructor.name;
            };
            /*Swift.(file).Int64.SIMD64Storage.subscript(_:Int)*/
            /*Swift.(file).SIMDStorage.subscript(_:Int)*/
            class_162.prototype.subscript$get = function ($info, index) {
                throw 'unsupported method Swift.(file).Int64.SIMD64Storage.subscript(_:Int) in ' + this.constructor.name;
            }; /*Swift.(file).Int64.SIMD64Storage.subscript(_:Int)*/
            /*Swift.(file).SIMDStorage.subscript(_:Int)*/
            class_162.prototype.subscript$set = function ($info, newValue, index) {
                throw 'unsupported method Swift.(file).Int64.SIMD64Storage.subscript(_:Int) in ' + this.constructor.name;
            };
            class_162.prototype.init$vars = function () {
            };
            return class_162;
        }()),
        _138.$struct = true,
        _138.$infoAddress = '',
        _138);
    return MIO_Mixin_Int64;
}());
if (typeof RandomAccessCollection$implementation != 'undefined')
    _mixin(MIO_Mixin_Int64.Words, RandomAccessCollection$implementation, false);
if (typeof SIMDStorage$implementation != 'undefined')
    _mixin(MIO_Mixin_Int64.SIMD2Storage, SIMDStorage$implementation, false);
if (typeof SIMDStorage$implementation != 'undefined')
    _mixin(MIO_Mixin_Int64.SIMD4Storage, SIMDStorage$implementation, false);
if (typeof SIMDStorage$implementation != 'undefined')
    _mixin(MIO_Mixin_Int64.SIMD8Storage, SIMDStorage$implementation, false);
if (typeof SIMDStorage$implementation != 'undefined')
    _mixin(MIO_Mixin_Int64.SIMD16Storage, SIMDStorage$implementation, false);
if (typeof SIMDStorage$implementation != 'undefined')
    _mixin(MIO_Mixin_Int64.SIMD32Storage, SIMDStorage$implementation, false);
if (typeof SIMDStorage$implementation != 'undefined')
    _mixin(MIO_Mixin_Int64.SIMD64Storage, SIMDStorage$implementation, false);
if (typeof FixedWidthInteger$implementation != 'undefined')
    _mixin(MIO_Mixin_Int64, FixedWidthInteger$implementation, false);
if (typeof SignedInteger$implementation != 'undefined')
    _mixin(MIO_Mixin_Int64, SignedInteger$implementation, false);
if (typeof _ExpressibleByBuiltinIntegerLiteral$implementation != 'undefined')
    _mixin(MIO_Mixin_Int64, _ExpressibleByBuiltinIntegerLiteral$implementation, false);
if (typeof Codable$implementation != 'undefined')
    _mixin(MIO_Mixin_Int64, Codable$implementation, false);
if (typeof Hashable$implementation != 'undefined')
    _mixin(MIO_Mixin_Int64, Hashable$implementation, false);
if (typeof _HasCustomAnyHashableRepresentation$implementation != 'undefined')
    _mixin(MIO_Mixin_Int64, _HasCustomAnyHashableRepresentation$implementation, false);
if (typeof CustomReflectable$implementation != 'undefined')
    _mixin(MIO_Mixin_Int64, CustomReflectable$implementation, false);
if (typeof _CustomPlaygroundQuickLookable$implementation != 'undefined')
    _mixin(MIO_Mixin_Int64, _CustomPlaygroundQuickLookable$implementation, false);
if (typeof SIMDScalar$implementation != 'undefined')
    _mixin(MIO_Mixin_Int64, SIMDScalar$implementation, false);
if (typeof CVarArg$implementation != 'undefined')
    _mixin(MIO_Mixin_Int64, CVarArg$implementation, false);
if (typeof _CVarArgAligned$implementation != 'undefined')
    _mixin(MIO_Mixin_Int64, _CVarArgAligned$implementation, false);
_mixin(Number, MIO_Mixin_Int64, true);
var Int64 = /** @class */ (function () {
    function Int64() {
    }
    return Int64;
}());
_mixin(Int64, MIO_Mixin_Int64, true);
var MIO_Mixin_UInt = /** @class */ (function () {
    function MIO_Mixin_UInt() {
    }
    /*Swift.(file).UInt.init(_builtinIntegerLiteral:IntLiteral)*/
    /*Swift.(file)._ExpressibleByBuiltinIntegerLiteral.init(_builtinIntegerLiteral:IntLiteral)*/
    MIO_Mixin_UInt.prototype.init_builtinIntegerLiteralIntLiteral = function ($info, x) {
        throw 'unsupported method Swift.(file).UInt.init(_builtinIntegerLiteral:IntLiteral) in ' + this.constructor.name;
    };
    /*Swift.(file).UInt.init(bitPattern:Int)*/
    /*Swift.(file).UInt.init(bitPattern:Int)*/
    MIO_Mixin_UInt.prototype.initBitPatternInt = function ($info, x) {
        throw 'unsupported method Swift.(file).UInt.init(bitPattern:Int) in ' + this.constructor.name;
    };
    /*Swift.(file).UInt.init(_:Float)*/
    /*Swift.(file).UInt.init(_:Float)*/
    MIO_Mixin_UInt.prototype.initFloat = function ($info, source) {
        throw 'unsupported method Swift.(file).UInt.init(_:Float) in ' + this.constructor.name;
    };
    /*Swift.(file).UInt.init(exactly:Float)*/
    /*Swift.(file).UInt.init(exactly:Float)*/
    MIO_Mixin_UInt.prototype.initExactlyFloat = function ($info, source) {
        throw 'unsupported method Swift.(file).UInt.init(exactly:Float) in ' + this.constructor.name;
    };
    /*Swift.(file).UInt.init(_:Double)*/
    /*Swift.(file).UInt.init(_:Double)*/
    MIO_Mixin_UInt.prototype.initDouble = function ($info, source) {
        throw 'unsupported method Swift.(file).UInt.init(_:Double) in ' + this.constructor.name;
    };
    /*Swift.(file).UInt.init(exactly:Double)*/
    /*Swift.(file).UInt.init(exactly:Double)*/
    MIO_Mixin_UInt.prototype.initExactlyDouble = function ($info, source) {
        throw 'unsupported method Swift.(file).UInt.init(exactly:Double) in ' + this.constructor.name;
    };
    /*Swift.(file).UInt.init(_:Float80)*/
    /*Swift.(file).UInt.init(_:Float80)*/
    MIO_Mixin_UInt.prototype.initFloat80 = function ($info, source) {
        throw 'unsupported method Swift.(file).UInt.init(_:Float80) in ' + this.constructor.name;
    };
    /*Swift.(file).UInt.init(exactly:Float80)*/
    /*Swift.(file).UInt.init(exactly:Float80)*/
    MIO_Mixin_UInt.prototype.initExactlyFloat80 = function ($info, source) {
        throw 'unsupported method Swift.(file).UInt.init(exactly:Float80) in ' + this.constructor.name;
    };
    /*Swift.(file).UInt.==infix(_:UInt,_:UInt)*/
    /*Swift.(file).Equatable.==infix(_:Self,_:Self)*/
    MIO_Mixin_UInt.infix_61_61 = function ($info, lhs, rhs) {
        return lhs == rhs;
    };
    /*Swift.(file).UInt.<infix(_:UInt,_:UInt)*/
    /*Swift.(file).Comparable.<infix(_:Self,_:Self)*/
    MIO_Mixin_UInt.infix_60 = function ($info, lhs, rhs) {
        return lhs < rhs;
    };
    /*Swift.(file).UInt.+=infix(_:UInt,_:UInt)*/
    /*Swift.(file).BinaryInteger.+=infix(_:Self,_:Self)*/
    /*Swift.(file).AdditiveArithmetic.+=infix(_:Self,_:Self)*/
    MIO_Mixin_UInt.infix_43_61 = function ($info, lhs$inout, rhs) {
        lhs$inout.set(lhs$inout.get() + rhs);
    };
    /*Swift.(file).UInt.-=infix(_:UInt,_:UInt)*/
    /*Swift.(file).BinaryInteger.-=infix(_:Self,_:Self)*/
    /*Swift.(file).AdditiveArithmetic.-=infix(_:Self,_:Self)*/
    MIO_Mixin_UInt.infix_45_61 = function ($info, lhs$inout, rhs) {
        lhs$inout.set(lhs$inout.get() - rhs);
    };
    /*Swift.(file).UInt.*=infix(_:UInt,_:UInt)*/
    /*Swift.(file).Numeric.*=infix(_:Self,_:Self)*/
    /*Swift.(file).BinaryInteger.*=infix(_:Self,_:Self)*/
    MIO_Mixin_UInt.infix_42_61 = function ($info, lhs$inout, rhs) {
        lhs$inout.set(lhs$inout.get() * rhs);
    };
    /*Swift.(file).UInt./=infix(_:UInt,_:UInt)*/
    /*Swift.(file).BinaryInteger./=infix(_:Self,_:Self)*/
    MIO_Mixin_UInt.infix_47_61 = function ($info, lhs$inout, rhs) {
        lhs$inout.set((lhs$inout.get() / rhs) | 0);
    };
    /*Swift.(file).UInt.dividedReportingOverflow(by:UInt)*/
    /*Swift.(file).FixedWidthInteger.dividedReportingOverflow(by:Self)*/
    MIO_Mixin_UInt.prototype.dividedReportingOverflowBy = function ($info, other) {
        throw 'unsupported method Swift.(file).UInt.dividedReportingOverflow(by:UInt) in ' + this.constructor.name;
    };
    /*Swift.(file).UInt.remainderReportingOverflow(dividingBy:UInt)*/
    /*Swift.(file).FixedWidthInteger.remainderReportingOverflow(dividingBy:Self)*/
    MIO_Mixin_UInt.prototype.remainderReportingOverflowDividingBy = function ($info, other) {
        throw 'unsupported method Swift.(file).UInt.remainderReportingOverflow(dividingBy:UInt) in ' + this.constructor.name;
    };
    /*Swift.(file).UInt.addingReportingOverflow(_:UInt)*/
    /*Swift.(file).FixedWidthInteger.addingReportingOverflow(_:Self)*/
    MIO_Mixin_UInt.prototype.addingReportingOverflow = function ($info, other) {
        throw 'unsupported method Swift.(file).UInt.addingReportingOverflow(_:UInt) in ' + this.constructor.name;
    };
    /*Swift.(file).UInt.subtractingReportingOverflow(_:UInt)*/
    /*Swift.(file).FixedWidthInteger.subtractingReportingOverflow(_:Self)*/
    MIO_Mixin_UInt.prototype.subtractingReportingOverflow = function ($info, other) {
        throw 'unsupported method Swift.(file).UInt.subtractingReportingOverflow(_:UInt) in ' + this.constructor.name;
    };
    /*Swift.(file).UInt.multipliedReportingOverflow(by:UInt)*/
    /*Swift.(file).FixedWidthInteger.multipliedReportingOverflow(by:Self)*/
    MIO_Mixin_UInt.prototype.multipliedReportingOverflowBy = function ($info, other) {
        throw 'unsupported method Swift.(file).UInt.multipliedReportingOverflow(by:UInt) in ' + this.constructor.name;
    };
    /*Swift.(file).UInt.%=infix(_:UInt,_:UInt)*/
    /*Swift.(file).BinaryInteger.%=infix(_:Self,_:Self)*/
    MIO_Mixin_UInt.infix_37_61 = function ($info, lhs$inout, rhs) {
        lhs$inout.set(lhs$inout.get() % rhs);
    };
    /*Swift.(file).UInt.init(_:Int64)*/
    /*Swift.(file).UInt.init(_:Int64)*/
    MIO_Mixin_UInt.prototype.initInt64 = function ($info, _value) {
        throw 'unsupported method Swift.(file).UInt.init(_:Int64) in ' + this.constructor.name;
    };
    /*Swift.(file).UInt.&=infix(_:UInt,_:UInt)*/
    /*Swift.(file).BinaryInteger.&=infix(_:Self,_:Self)*/
    MIO_Mixin_UInt.infix_38_61 = function ($info, lhs$inout, rhs) {
        lhs$inout.set(lhs$inout.get() & rhs);
    };
    /*Swift.(file).UInt.|=infix(_:UInt,_:UInt)*/
    /*Swift.(file).BinaryInteger.|=infix(_:Self,_:Self)*/
    MIO_Mixin_UInt.infix_124_61 = function ($info, lhs$inout, rhs) {
        lhs$inout.set(lhs$inout.get() | rhs);
    };
    /*Swift.(file).UInt.^=infix(_:UInt,_:UInt)*/
    /*Swift.(file).BinaryInteger.^=infix(_:Self,_:Self)*/
    MIO_Mixin_UInt.infix_94_61 = function ($info, lhs$inout, rhs) {
        lhs$inout.set(lhs$inout.get() ^ rhs);
    };
    /*Swift.(file).UInt.&>>=infix(_:UInt,_:UInt)*/
    /*Swift.(file).FixedWidthInteger.&>>=infix(_:Self,_:Self)*/
    MIO_Mixin_UInt.infix_38_62_62_61 = function ($info, lhs$inout, rhs) {
        lhs$inout.set(lhs$inout.get() >> rhs);
    };
    /*Swift.(file).UInt.&<<=infix(_:UInt,_:UInt)*/
    /*Swift.(file).FixedWidthInteger.&<<=infix(_:Self,_:Self)*/
    MIO_Mixin_UInt.infix_38_60_60_61 = function ($info, lhs$inout, rhs) {
        lhs$inout.set(lhs$inout.get() << rhs);
    };
    /*Swift.(file).UInt.bitWidth*/
    MIO_Mixin_UInt.bitWidth$get = function () {
        var _this = this;
        return _this.constructor.bitWidth;
    };
    Object.defineProperty(MIO_Mixin_UInt, "bitWidth", {
        get: function () { return this.bitWidth$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).UInt.leadingZeroBitCount*/
    MIO_Mixin_UInt.prototype.leadingZeroBitCount$get = function () {
        throw 'unsupported variable Swift.(file).UInt.leadingZeroBitCount in ' + this.constructor.name;
    };
    Object.defineProperty(MIO_Mixin_UInt.prototype, "leadingZeroBitCount", {
        get: function () { return this.leadingZeroBitCount$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).UInt.trailingZeroBitCount*/
    MIO_Mixin_UInt.prototype.trailingZeroBitCount$get = function () {
        throw 'unsupported variable Swift.(file).UInt.trailingZeroBitCount in ' + this.constructor.name;
    };
    Object.defineProperty(MIO_Mixin_UInt.prototype, "trailingZeroBitCount", {
        get: function () { return this.trailingZeroBitCount$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).UInt.nonzeroBitCount*/
    MIO_Mixin_UInt.prototype.nonzeroBitCount$get = function () {
        throw 'unsupported variable Swift.(file).UInt.nonzeroBitCount in ' + this.constructor.name;
    };
    Object.defineProperty(MIO_Mixin_UInt.prototype, "nonzeroBitCount", {
        get: function () { return this.nonzeroBitCount$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).UInt.words*/
    MIO_Mixin_UInt.prototype.words$get = function () {
        throw 'unsupported variable Swift.(file).UInt.words in ' + this.constructor.name;
    };
    Object.defineProperty(MIO_Mixin_UInt.prototype, "words", {
        get: function () { return this.words$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).UInt.init(_truncatingBits:UInt)*/
    /*Swift.(file).FixedWidthInteger.init(_truncatingBits:UInt)*/
    MIO_Mixin_UInt.prototype.init_truncatingBitsUInt = function ($info, bits) {
        throw 'unsupported method Swift.(file).UInt.init(_truncatingBits:UInt) in ' + this.constructor.name;
    };
    /*Swift.(file).UInt.multipliedFullWidth(by:UInt)*/
    /*Swift.(file).FixedWidthInteger.multipliedFullWidth(by:Self)*/
    MIO_Mixin_UInt.prototype.multipliedFullWidthBy = function ($info, other) {
        throw 'unsupported method Swift.(file).UInt.multipliedFullWidth(by:UInt) in ' + this.constructor.name;
    };
    /*Swift.(file).UInt.dividingFullWidth(_:(high: UInt, low: UInt.Magnitude))*/
    /*Swift.(file).FixedWidthInteger.dividingFullWidth(_:(high: Self, low: Self.Magnitude))*/
    MIO_Mixin_UInt.prototype.dividingFullWidth = function ($info, dividend) {
        throw 'unsupported method Swift.(file).UInt.dividingFullWidth(_:(high: UInt, low: UInt.Magnitude)) in ' + this.constructor.name;
    };
    /*Swift.(file).UInt.byteSwapped*/
    MIO_Mixin_UInt.prototype.byteSwapped$get = function () {
        throw 'unsupported variable Swift.(file).UInt.byteSwapped in ' + this.constructor.name;
    };
    Object.defineProperty(MIO_Mixin_UInt.prototype, "byteSwapped", {
        get: function () { return this.byteSwapped$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).UInt.init(_:Word)*/
    /*Swift.(file).UInt.init(_:Word)*/
    MIO_Mixin_UInt.prototype.initWord = function ($info, _v) {
        throw 'unsupported method Swift.(file).UInt.init(_:Word) in ' + this.constructor.name;
    };
    /*Swift.(file).UInt.toIntMax()*/
    /*Swift.(file).UInt.toIntMax()*/
    MIO_Mixin_UInt.prototype.toIntMax = function ($info) {
        throw 'unsupported method Swift.(file).UInt.toIntMax() in ' + this.constructor.name;
    };
    /*Swift.(file).UInt.signum()*/
    /*Swift.(file).BinaryInteger.signum()*/
    MIO_Mixin_UInt.prototype.signum = function ($info) {
        var _this = this;
        return _this.constructor.infix_45({}, (_this.constructor.infix_62({}, _this, _create(_this.constructor, 'initIntegerLiteral', {}, 0)) ? _create(_this.constructor, 'initIntegerLiteral', {}, 1) : _create(_this.constructor, 'initIntegerLiteral', {}, 0)), (_this.constructor.infix_60({}, _this, _create(_this.constructor, 'initIntegerLiteral', {}, 0)) ? _create(_this.constructor, 'initIntegerLiteral', {}, 1) : _create(_this.constructor, 'initIntegerLiteral', {}, 0)));
    };
    /*Swift.(file).UInt.init(from:Decoder)*/
    /*Swift.(file).Decodable.init(from:Decoder)*/
    MIO_Mixin_UInt.prototype.initFromDecoder = function ($info, decoder) {
        throw 'unsupported method Swift.(file).UInt.init(from:Decoder) in ' + this.constructor.name;
    };
    /*Swift.(file).UInt.encode(to:Encoder)*/
    /*Swift.(file).Encodable.encode(to:Encoder)*/
    MIO_Mixin_UInt.prototype.encodeTo = function ($info, encoder) {
        throw 'unsupported method Swift.(file).UInt.encode(to:Encoder) in ' + this.constructor.name;
    };
    /*Swift.(file).UInt.init(bitPattern:OpaquePointer?)*/
    /*Swift.(file).UInt.init(bitPattern:OpaquePointer?)*/
    MIO_Mixin_UInt.prototype.initBitPatternOptional = function ($info, pointer) {
        var _this = this;
        _this.initBitPatternOptional({}, _create(UnsafeRawPointer, 'initOptional', {}, pointer));
        return;
    };
    /*Swift.(file).UInt.hash(into:Hasher)*/
    /*Swift.(file).Hashable.hash(into:Hasher)*/
    MIO_Mixin_UInt.prototype.hashInto = function ($info, hasher$inout) {
        throw 'unsupported method Swift.(file).UInt.hash(into:Hasher) in ' + this.constructor.name;
    };
    /*Swift.(file).UInt.hashValue*/
    MIO_Mixin_UInt.prototype.hashValue$get = function () {
        throw 'unsupported variable Swift.(file).UInt.hashValue in ' + this.constructor.name;
    };
    Object.defineProperty(MIO_Mixin_UInt.prototype, "hashValue", {
        get: function () { return this.hashValue$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).UInt.init(truncatingBitPattern:UInt64)*/
    /*Swift.(file).UInt.init(truncatingBitPattern:UInt64)*/
    MIO_Mixin_UInt.prototype.initTruncatingBitPatternUInt64 = function ($info, source) {
        throw 'unsupported method Swift.(file).UInt.init(truncatingBitPattern:UInt64) in ' + this.constructor.name;
    };
    /*Swift.(file).UInt.init(truncatingBitPattern:Int64)*/
    /*Swift.(file).UInt.init(truncatingBitPattern:Int64)*/
    MIO_Mixin_UInt.prototype.initTruncatingBitPatternInt64 = function ($info, source) {
        throw 'unsupported method Swift.(file).UInt.init(truncatingBitPattern:Int64) in ' + this.constructor.name;
    };
    /*Swift.(file).UInt.&infix(_:UInt,_:UInt)*/
    /*Swift.(file).BinaryInteger.&infix(_:Self,_:Self)*/
    MIO_Mixin_UInt.infix_38 = function ($info, lhs, rhs) {
        return lhs & rhs;
    };
    /*Swift.(file).UInt.|infix(_:UInt,_:UInt)*/
    /*Swift.(file).BinaryInteger.|infix(_:Self,_:Self)*/
    MIO_Mixin_UInt.infix_124 = function ($info, lhs, rhs) {
        return lhs | rhs;
    };
    /*Swift.(file).UInt.^infix(_:UInt,_:UInt)*/
    /*Swift.(file).BinaryInteger.^infix(_:Self,_:Self)*/
    MIO_Mixin_UInt.infix_94 = function ($info, lhs, rhs) {
        return lhs ^ rhs;
    };
    /*Swift.(file).UInt.&>>infix(_:UInt,_:UInt)*/
    /*Swift.(file).FixedWidthInteger.&>>infix(_:Self,_:Self)*/
    MIO_Mixin_UInt.infix_38_62_62 = function ($info, lhs, rhs) {
        return lhs >> rhs;
    };
    /*Swift.(file).UInt.&<<infix(_:UInt,_:UInt)*/
    /*Swift.(file).FixedWidthInteger.&<<infix(_:Self,_:Self)*/
    MIO_Mixin_UInt.infix_38_60_60 = function ($info, lhs, rhs) {
        return lhs << rhs;
    };
    /*Swift.(file).UInt./infix(_:UInt,_:UInt)*/
    /*Swift.(file).BinaryInteger./infix(_:Self,_:Self)*/
    MIO_Mixin_UInt.infix_47 = function ($info, lhs, rhs) {
        return (lhs / rhs) | 0;
    };
    /*Swift.(file).UInt.%infix(_:UInt,_:UInt)*/
    /*Swift.(file).BinaryInteger.%infix(_:Self,_:Self)*/
    MIO_Mixin_UInt.infix_37 = function ($info, lhs, rhs) {
        return lhs % rhs;
    };
    /*Swift.(file).UInt.+infix(_:UInt,_:UInt)*/
    /*Swift.(file).BinaryInteger.+infix(_:Self,_:Self)*/
    /*Swift.(file).AdditiveArithmetic.+infix(_:Self,_:Self)*/
    MIO_Mixin_UInt.infix_43 = function ($info, lhs, rhs) {
        return lhs + rhs;
    };
    /*Swift.(file).UInt.-infix(_:UInt,_:UInt)*/
    /*Swift.(file).BinaryInteger.-infix(_:Self,_:Self)*/
    /*Swift.(file).AdditiveArithmetic.-infix(_:Self,_:Self)*/
    MIO_Mixin_UInt.infix_45 = function ($info, lhs, rhs) {
        return lhs - rhs;
    };
    /*Swift.(file).UInt.*infix(_:UInt,_:UInt)*/
    /*Swift.(file).Numeric.*infix(_:Self,_:Self)*/
    /*Swift.(file).BinaryInteger.*infix(_:Self,_:Self)*/
    MIO_Mixin_UInt.infix_42 = function ($info, lhs, rhs) {
        return lhs * rhs;
    };
    /*Swift.(file).UInt.>>infix(_:UInt,_:UInt)*/
    /*Swift.(file).UInt.>>infix(_:UInt,_:UInt)*/
    MIO_Mixin_UInt.infix_62_62 = function ($info, lhs, rhs) {
        return lhs >> rhs;
    };
    /*Swift.(file).UInt.>>=infix(_:UInt,_:UInt)*/
    /*Swift.(file).UInt.>>=infix(_:UInt,_:UInt)*/
    MIO_Mixin_UInt.infix_62_62_61 = function ($info, lhs$inout, rhs) {
        lhs$inout.set(lhs$inout.get() >> rhs);
    };
    /*Swift.(file).UInt.<<infix(_:UInt,_:UInt)*/
    /*Swift.(file).UInt.<<infix(_:UInt,_:UInt)*/
    MIO_Mixin_UInt.infix_60_60 = function ($info, lhs, rhs) {
        return lhs << rhs;
    };
    /*Swift.(file).UInt.<<=infix(_:UInt,_:UInt)*/
    /*Swift.(file).UInt.<<=infix(_:UInt,_:UInt)*/
    MIO_Mixin_UInt.infix_60_60_61 = function ($info, lhs$inout, rhs) {
        lhs$inout.set(lhs$inout.get() << rhs);
    };
    /*Swift.(file).UInt.<=infix(_:UInt,_:UInt)*/
    /*Swift.(file).Comparable.<=infix(_:Self,_:Self)*/
    MIO_Mixin_UInt.infix_60_61 = function ($info, lhs, rhs) {
        var _this = this;
        return Bool.prefix_33({}, (_.arg0 = rhs).constructor.infix_60({}, _.arg0, lhs));
    };
    /*Swift.(file).UInt.>=infix(_:UInt,_:UInt)*/
    /*Swift.(file).Comparable.>=infix(_:Self,_:Self)*/
    MIO_Mixin_UInt.infix_62_61 = function ($info, lhs, rhs) {
        var _this = this;
        return Bool.prefix_33({}, (_.arg0 = lhs).constructor.infix_60({}, _.arg0, rhs));
    };
    /*Swift.(file).UInt.>infix(_:UInt,_:UInt)*/
    /*Swift.(file).Comparable.>infix(_:Self,_:Self)*/
    MIO_Mixin_UInt.infix_62 = function ($info, lhs, rhs) {
        var _this = this;
        return (_.arg0 = rhs).constructor.infix_60({}, _.arg0, lhs);
    };
    /*Swift.(file).UInt.customMirror*/
    MIO_Mixin_UInt.prototype.customMirror$get = function () {
        throw 'unsupported variable Swift.(file).UInt.customMirror in ' + this.constructor.name;
    };
    Object.defineProperty(MIO_Mixin_UInt.prototype, "customMirror", {
        get: function () { return this.customMirror$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).UInt.customPlaygroundQuickLook*/
    MIO_Mixin_UInt.prototype.customPlaygroundQuickLook$get = function () {
        throw 'unsupported variable Swift.(file).UInt.customPlaygroundQuickLook in ' + this.constructor.name;
    };
    Object.defineProperty(MIO_Mixin_UInt.prototype, "customPlaygroundQuickLook", {
        get: function () { return this.customPlaygroundQuickLook$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).UInt.init(bitPattern:ObjectIdentifier)*/
    /*Swift.(file).UInt.init(bitPattern:ObjectIdentifier)*/
    MIO_Mixin_UInt.prototype.initBitPatternObjectIdentifier = function ($info, objectID) {
        throw 'unsupported method Swift.(file).UInt.init(bitPattern:ObjectIdentifier) in ' + this.constructor.name;
    };
    /*Swift.(file).UInt.init(bitPattern:P?)*/
    /*Swift.(file).UInt.init(bitPattern:P?)*/
    MIO_Mixin_UInt.prototype.initBitPatternOptional = function ($info, pointer) {
        throw 'unsupported method Swift.(file).UInt.init(bitPattern:P?) in ' + this.constructor.name;
    };
    MIO_Mixin_UInt.prototype.init$vars = function () {
    };
    var _139, _140, _141, _142, _143, _144, _145;
    MIO_Mixin_UInt.$struct = true;
    MIO_Mixin_UInt.$mixin = true;
    MIO_Mixin_UInt.$infoAddress = '';
    MIO_Mixin_UInt.initExactlyFloat$failable = true;
    MIO_Mixin_UInt.initExactlyDouble$failable = true;
    MIO_Mixin_UInt.initExactlyFloat80$failable = true;
    MIO_Mixin_UInt.Words = (_139 = /** @class */ (function () {
            function class_163() {
            }
            /*Swift.(file).UInt.Words.init(_:UInt)*/
            /*Swift.(file).UInt.Words.init(_:UInt)*/
            class_163.prototype.initUInt = function ($info, value) {
                throw 'unsupported method Swift.(file).UInt.Words.init(_:UInt) in ' + this.constructor.name;
            };
            /*Swift.(file).UInt.Words.count*/
            class_163.prototype.count$get = function () {
                var _this = this;
                return _this.distanceFromTo({}, _this.startIndex, _this.endIndex);
            };
            Object.defineProperty(class_163.prototype, "count", {
                get: function () { return this.count$get(); },
                enumerable: true,
                configurable: true
            });
            ;
            /*Swift.(file).UInt.Words.startIndex*/
            class_163.prototype.startIndex$get = function () {
                throw 'unsupported variable Swift.(file).UInt.Words.startIndex in ' + this.constructor.name;
            };
            Object.defineProperty(class_163.prototype, "startIndex", {
                get: function () { return this.startIndex$get(); },
                enumerable: true,
                configurable: true
            });
            ;
            /*Swift.(file).UInt.Words.endIndex*/
            class_163.prototype.endIndex$get = function () {
                throw 'unsupported variable Swift.(file).UInt.Words.endIndex in ' + this.constructor.name;
            };
            Object.defineProperty(class_163.prototype, "endIndex", {
                get: function () { return this.endIndex$get(); },
                enumerable: true,
                configurable: true
            });
            ;
            /*Swift.(file).UInt.Words.indices*/
            class_163.prototype.indices$get = function () {
                var _this = this;
                return (_.arg0 = _this.startIndex).constructor.infix_46_46_60({}, _.arg0, _this.endIndex);
            };
            Object.defineProperty(class_163.prototype, "indices", {
                get: function () { return this.indices$get(); },
                enumerable: true,
                configurable: true
            });
            ;
            /*Swift.(file).UInt.Words.index(after:Int)*/
            /*Swift.(file).RandomAccessCollection.index(after:Self.Index)*/
            /*Swift.(file).BidirectionalCollection.index(after:Self.Index)*/
            /*Swift.(file).Collection.index(after:Self.Index)*/
            /*Swift.(file).RandomAccessCollection.index(after:Self.Index)*/
            class_163.prototype.indexAfter = function ($info, i) {
                throw 'unsupported method Swift.(file).UInt.Words.index(after:Int) in ' + this.constructor.name;
            };
            /*Swift.(file).UInt.Words.index(before:Int)*/
            /*Swift.(file).RandomAccessCollection.index(before:Self.Index)*/
            /*Swift.(file).BidirectionalCollection.index(before:Self.Index)*/
            /*Swift.(file).RandomAccessCollection.index(before:Self.Index)*/
            class_163.prototype.indexBefore = function ($info, i) {
                throw 'unsupported method Swift.(file).UInt.Words.index(before:Int) in ' + this.constructor.name;
            };
            /*Swift.(file).UInt.Words.subscript(_:Int)*/
            /*Swift.(file).RandomAccessCollection.subscript(_:Self.Index)*/
            /*Swift.(file).BidirectionalCollection.subscript(_:Self.Index)*/
            /*Swift.(file).Collection.subscript(_:Self.Index)*/
            /*Swift.(file).RandomAccessCollection.subscript(_:Self.Index)*/
            class_163.prototype.subscript$get = function ($info, position) {
                throw 'unsupported method Swift.(file).UInt.Words.subscript(_:Int) in ' + this.constructor.name;
            };
            class_163.prototype.init$vars = function () {
            };
            return class_163;
        }()),
        _139.$struct = true,
        _139.$infoAddress = '',
        _139);
    MIO_Mixin_UInt.SIMD2Storage = (_140 = /** @class */ (function () {
            function class_164() {
            }
            /*Swift.(file).UInt.SIMD2Storage.scalarCount*/
            class_164.prototype.scalarCount$get = function () {
                throw 'unsupported variable Swift.(file).UInt.SIMD2Storage.scalarCount in ' + this.constructor.name;
            };
            Object.defineProperty(class_164.prototype, "scalarCount", {
                get: function () { return this.scalarCount$get(); },
                enumerable: true,
                configurable: true
            });
            ;
            /*Swift.(file).UInt.SIMD2Storage.init()*/
            /*Swift.(file).SIMDStorage.init()*/
            class_164.prototype.init = function ($info) {
                throw 'unsupported method Swift.(file).UInt.SIMD2Storage.init() in ' + this.constructor.name;
            };
            /*Swift.(file).UInt.SIMD2Storage.subscript(_:Int)*/
            /*Swift.(file).SIMDStorage.subscript(_:Int)*/
            class_164.prototype.subscript$get = function ($info, index) {
                throw 'unsupported method Swift.(file).UInt.SIMD2Storage.subscript(_:Int) in ' + this.constructor.name;
            }; /*Swift.(file).UInt.SIMD2Storage.subscript(_:Int)*/
            /*Swift.(file).SIMDStorage.subscript(_:Int)*/
            class_164.prototype.subscript$set = function ($info, newValue, index) {
                throw 'unsupported method Swift.(file).UInt.SIMD2Storage.subscript(_:Int) in ' + this.constructor.name;
            };
            class_164.prototype.init$vars = function () {
            };
            return class_164;
        }()),
        _140.$struct = true,
        _140.$infoAddress = '',
        _140);
    MIO_Mixin_UInt.SIMD4Storage = (_141 = /** @class */ (function () {
            function class_165() {
            }
            /*Swift.(file).UInt.SIMD4Storage.scalarCount*/
            class_165.prototype.scalarCount$get = function () {
                throw 'unsupported variable Swift.(file).UInt.SIMD4Storage.scalarCount in ' + this.constructor.name;
            };
            Object.defineProperty(class_165.prototype, "scalarCount", {
                get: function () { return this.scalarCount$get(); },
                enumerable: true,
                configurable: true
            });
            ;
            /*Swift.(file).UInt.SIMD4Storage.init()*/
            /*Swift.(file).SIMDStorage.init()*/
            class_165.prototype.init = function ($info) {
                throw 'unsupported method Swift.(file).UInt.SIMD4Storage.init() in ' + this.constructor.name;
            };
            /*Swift.(file).UInt.SIMD4Storage.subscript(_:Int)*/
            /*Swift.(file).SIMDStorage.subscript(_:Int)*/
            class_165.prototype.subscript$get = function ($info, index) {
                throw 'unsupported method Swift.(file).UInt.SIMD4Storage.subscript(_:Int) in ' + this.constructor.name;
            }; /*Swift.(file).UInt.SIMD4Storage.subscript(_:Int)*/
            /*Swift.(file).SIMDStorage.subscript(_:Int)*/
            class_165.prototype.subscript$set = function ($info, newValue, index) {
                throw 'unsupported method Swift.(file).UInt.SIMD4Storage.subscript(_:Int) in ' + this.constructor.name;
            };
            class_165.prototype.init$vars = function () {
            };
            return class_165;
        }()),
        _141.$struct = true,
        _141.$infoAddress = '',
        _141);
    MIO_Mixin_UInt.SIMD8Storage = (_142 = /** @class */ (function () {
            function class_166() {
            }
            /*Swift.(file).UInt.SIMD8Storage.scalarCount*/
            class_166.prototype.scalarCount$get = function () {
                throw 'unsupported variable Swift.(file).UInt.SIMD8Storage.scalarCount in ' + this.constructor.name;
            };
            Object.defineProperty(class_166.prototype, "scalarCount", {
                get: function () { return this.scalarCount$get(); },
                enumerable: true,
                configurable: true
            });
            ;
            /*Swift.(file).UInt.SIMD8Storage.init()*/
            /*Swift.(file).SIMDStorage.init()*/
            class_166.prototype.init = function ($info) {
                throw 'unsupported method Swift.(file).UInt.SIMD8Storage.init() in ' + this.constructor.name;
            };
            /*Swift.(file).UInt.SIMD8Storage.subscript(_:Int)*/
            /*Swift.(file).SIMDStorage.subscript(_:Int)*/
            class_166.prototype.subscript$get = function ($info, index) {
                throw 'unsupported method Swift.(file).UInt.SIMD8Storage.subscript(_:Int) in ' + this.constructor.name;
            }; /*Swift.(file).UInt.SIMD8Storage.subscript(_:Int)*/
            /*Swift.(file).SIMDStorage.subscript(_:Int)*/
            class_166.prototype.subscript$set = function ($info, newValue, index) {
                throw 'unsupported method Swift.(file).UInt.SIMD8Storage.subscript(_:Int) in ' + this.constructor.name;
            };
            class_166.prototype.init$vars = function () {
            };
            return class_166;
        }()),
        _142.$struct = true,
        _142.$infoAddress = '',
        _142);
    MIO_Mixin_UInt.SIMD16Storage = (_143 = /** @class */ (function () {
            function class_167() {
            }
            /*Swift.(file).UInt.SIMD16Storage.scalarCount*/
            class_167.prototype.scalarCount$get = function () {
                throw 'unsupported variable Swift.(file).UInt.SIMD16Storage.scalarCount in ' + this.constructor.name;
            };
            Object.defineProperty(class_167.prototype, "scalarCount", {
                get: function () { return this.scalarCount$get(); },
                enumerable: true,
                configurable: true
            });
            ;
            /*Swift.(file).UInt.SIMD16Storage.init()*/
            /*Swift.(file).SIMDStorage.init()*/
            class_167.prototype.init = function ($info) {
                throw 'unsupported method Swift.(file).UInt.SIMD16Storage.init() in ' + this.constructor.name;
            };
            /*Swift.(file).UInt.SIMD16Storage.subscript(_:Int)*/
            /*Swift.(file).SIMDStorage.subscript(_:Int)*/
            class_167.prototype.subscript$get = function ($info, index) {
                throw 'unsupported method Swift.(file).UInt.SIMD16Storage.subscript(_:Int) in ' + this.constructor.name;
            }; /*Swift.(file).UInt.SIMD16Storage.subscript(_:Int)*/
            /*Swift.(file).SIMDStorage.subscript(_:Int)*/
            class_167.prototype.subscript$set = function ($info, newValue, index) {
                throw 'unsupported method Swift.(file).UInt.SIMD16Storage.subscript(_:Int) in ' + this.constructor.name;
            };
            class_167.prototype.init$vars = function () {
            };
            return class_167;
        }()),
        _143.$struct = true,
        _143.$infoAddress = '',
        _143);
    MIO_Mixin_UInt.SIMD32Storage = (_144 = /** @class */ (function () {
            function class_168() {
            }
            /*Swift.(file).UInt.SIMD32Storage.scalarCount*/
            class_168.prototype.scalarCount$get = function () {
                throw 'unsupported variable Swift.(file).UInt.SIMD32Storage.scalarCount in ' + this.constructor.name;
            };
            Object.defineProperty(class_168.prototype, "scalarCount", {
                get: function () { return this.scalarCount$get(); },
                enumerable: true,
                configurable: true
            });
            ;
            /*Swift.(file).UInt.SIMD32Storage.init()*/
            /*Swift.(file).SIMDStorage.init()*/
            class_168.prototype.init = function ($info) {
                throw 'unsupported method Swift.(file).UInt.SIMD32Storage.init() in ' + this.constructor.name;
            };
            /*Swift.(file).UInt.SIMD32Storage.subscript(_:Int)*/
            /*Swift.(file).SIMDStorage.subscript(_:Int)*/
            class_168.prototype.subscript$get = function ($info, index) {
                throw 'unsupported method Swift.(file).UInt.SIMD32Storage.subscript(_:Int) in ' + this.constructor.name;
            }; /*Swift.(file).UInt.SIMD32Storage.subscript(_:Int)*/
            /*Swift.(file).SIMDStorage.subscript(_:Int)*/
            class_168.prototype.subscript$set = function ($info, newValue, index) {
                throw 'unsupported method Swift.(file).UInt.SIMD32Storage.subscript(_:Int) in ' + this.constructor.name;
            };
            class_168.prototype.init$vars = function () {
            };
            return class_168;
        }()),
        _144.$struct = true,
        _144.$infoAddress = '',
        _144);
    MIO_Mixin_UInt.SIMD64Storage = (_145 = /** @class */ (function () {
            function class_169() {
            }
            /*Swift.(file).UInt.SIMD64Storage.scalarCount*/
            class_169.prototype.scalarCount$get = function () {
                throw 'unsupported variable Swift.(file).UInt.SIMD64Storage.scalarCount in ' + this.constructor.name;
            };
            Object.defineProperty(class_169.prototype, "scalarCount", {
                get: function () { return this.scalarCount$get(); },
                enumerable: true,
                configurable: true
            });
            ;
            /*Swift.(file).UInt.SIMD64Storage.init()*/
            /*Swift.(file).SIMDStorage.init()*/
            class_169.prototype.init = function ($info) {
                throw 'unsupported method Swift.(file).UInt.SIMD64Storage.init() in ' + this.constructor.name;
            };
            /*Swift.(file).UInt.SIMD64Storage.subscript(_:Int)*/
            /*Swift.(file).SIMDStorage.subscript(_:Int)*/
            class_169.prototype.subscript$get = function ($info, index) {
                throw 'unsupported method Swift.(file).UInt.SIMD64Storage.subscript(_:Int) in ' + this.constructor.name;
            }; /*Swift.(file).UInt.SIMD64Storage.subscript(_:Int)*/
            /*Swift.(file).SIMDStorage.subscript(_:Int)*/
            class_169.prototype.subscript$set = function ($info, newValue, index) {
                throw 'unsupported method Swift.(file).UInt.SIMD64Storage.subscript(_:Int) in ' + this.constructor.name;
            };
            class_169.prototype.init$vars = function () {
            };
            return class_169;
        }()),
        _145.$struct = true,
        _145.$infoAddress = '',
        _145);
    return MIO_Mixin_UInt;
}());
if (typeof RandomAccessCollection$implementation != 'undefined')
    _mixin(MIO_Mixin_UInt.Words, RandomAccessCollection$implementation, false);
if (typeof SIMDStorage$implementation != 'undefined')
    _mixin(MIO_Mixin_UInt.SIMD2Storage, SIMDStorage$implementation, false);
if (typeof SIMDStorage$implementation != 'undefined')
    _mixin(MIO_Mixin_UInt.SIMD4Storage, SIMDStorage$implementation, false);
if (typeof SIMDStorage$implementation != 'undefined')
    _mixin(MIO_Mixin_UInt.SIMD8Storage, SIMDStorage$implementation, false);
if (typeof SIMDStorage$implementation != 'undefined')
    _mixin(MIO_Mixin_UInt.SIMD16Storage, SIMDStorage$implementation, false);
if (typeof SIMDStorage$implementation != 'undefined')
    _mixin(MIO_Mixin_UInt.SIMD32Storage, SIMDStorage$implementation, false);
if (typeof SIMDStorage$implementation != 'undefined')
    _mixin(MIO_Mixin_UInt.SIMD64Storage, SIMDStorage$implementation, false);
if (typeof FixedWidthInteger$implementation != 'undefined')
    _mixin(MIO_Mixin_UInt, FixedWidthInteger$implementation, false);
if (typeof UnsignedInteger$implementation != 'undefined')
    _mixin(MIO_Mixin_UInt, UnsignedInteger$implementation, false);
if (typeof _ExpressibleByBuiltinIntegerLiteral$implementation != 'undefined')
    _mixin(MIO_Mixin_UInt, _ExpressibleByBuiltinIntegerLiteral$implementation, false);
if (typeof Codable$implementation != 'undefined')
    _mixin(MIO_Mixin_UInt, Codable$implementation, false);
if (typeof Hashable$implementation != 'undefined')
    _mixin(MIO_Mixin_UInt, Hashable$implementation, false);
if (typeof _HasCustomAnyHashableRepresentation$implementation != 'undefined')
    _mixin(MIO_Mixin_UInt, _HasCustomAnyHashableRepresentation$implementation, false);
if (typeof CustomReflectable$implementation != 'undefined')
    _mixin(MIO_Mixin_UInt, CustomReflectable$implementation, false);
if (typeof _CustomPlaygroundQuickLookable$implementation != 'undefined')
    _mixin(MIO_Mixin_UInt, _CustomPlaygroundQuickLookable$implementation, false);
if (typeof SIMDScalar$implementation != 'undefined')
    _mixin(MIO_Mixin_UInt, SIMDScalar$implementation, false);
if (typeof CVarArg$implementation != 'undefined')
    _mixin(MIO_Mixin_UInt, CVarArg$implementation, false);
_mixin(Number, MIO_Mixin_UInt, true);
var UInt = /** @class */ (function () {
    function UInt() {
    }
    return UInt;
}());
_mixin(UInt, MIO_Mixin_UInt, true);
var MIO_Mixin_Int = /** @class */ (function () {
    function MIO_Mixin_Int() {
    }
    /*Swift.(file).Int.init(_builtinIntegerLiteral:IntLiteral)*/
    /*Swift.(file)._ExpressibleByBuiltinIntegerLiteral.init(_builtinIntegerLiteral:IntLiteral)*/
    MIO_Mixin_Int.prototype.init_builtinIntegerLiteralIntLiteral = function ($info, x) {
        throw 'unsupported method Swift.(file).Int.init(_builtinIntegerLiteral:IntLiteral) in ' + this.constructor.name;
    };
    /*Swift.(file).Int.init(bitPattern:UInt)*/
    /*Swift.(file).Int.init(bitPattern:UInt)*/
    MIO_Mixin_Int.prototype.initBitPatternUInt = function ($info, x) {
        throw 'unsupported method Swift.(file).Int.init(bitPattern:UInt) in ' + this.constructor.name;
    };
    /*Swift.(file).Int.init(_:Float)*/
    /*Swift.(file).Int.init(_:Float)*/
    MIO_Mixin_Int.prototype.initFloat = function ($info, source) {
        throw 'unsupported method Swift.(file).Int.init(_:Float) in ' + this.constructor.name;
    };
    /*Swift.(file).Int.init(exactly:Float)*/
    /*Swift.(file).Int.init(exactly:Float)*/
    MIO_Mixin_Int.prototype.initExactlyFloat = function ($info, source) {
        throw 'unsupported method Swift.(file).Int.init(exactly:Float) in ' + this.constructor.name;
    };
    /*Swift.(file).Int.init(_:Double)*/
    /*Swift.(file).Int.init(_:Double)*/
    MIO_Mixin_Int.prototype.initDouble = function ($info, source) {
        return source | 0;
    };
    /*Swift.(file).Int.init(exactly:Double)*/
    /*Swift.(file).Int.init(exactly:Double)*/
    MIO_Mixin_Int.prototype.initExactlyDouble = function ($info, source) {
        throw 'unsupported method Swift.(file).Int.init(exactly:Double) in ' + this.constructor.name;
    };
    /*Swift.(file).Int.init(_:Float80)*/
    /*Swift.(file).Int.init(_:Float80)*/
    MIO_Mixin_Int.prototype.initFloat80 = function ($info, source) {
        throw 'unsupported method Swift.(file).Int.init(_:Float80) in ' + this.constructor.name;
    };
    /*Swift.(file).Int.init(exactly:Float80)*/
    /*Swift.(file).Int.init(exactly:Float80)*/
    MIO_Mixin_Int.prototype.initExactlyFloat80 = function ($info, source) {
        throw 'unsupported method Swift.(file).Int.init(exactly:Float80) in ' + this.constructor.name;
    };
    /*Swift.(file).Int.==infix(_:Int,_:Int)*/
    /*Swift.(file).Equatable.==infix(_:Self,_:Self)*/
    MIO_Mixin_Int.infix_61_61 = function ($info, lhs, rhs) {
        return lhs == rhs;
    };
    /*Swift.(file).Int.<infix(_:Int,_:Int)*/
    /*Swift.(file).Comparable.<infix(_:Self,_:Self)*/
    MIO_Mixin_Int.infix_60 = function ($info, lhs, rhs) {
        return lhs < rhs;
    };
    /*Swift.(file).Int.+=infix(_:Int,_:Int)*/
    /*Swift.(file).BinaryInteger.+=infix(_:Self,_:Self)*/
    /*Swift.(file).AdditiveArithmetic.+=infix(_:Self,_:Self)*/
    MIO_Mixin_Int.infix_43_61 = function ($info, lhs$inout, rhs) {
        lhs$inout.set(lhs$inout.get() + rhs);
    };
    /*Swift.(file).Int.-=infix(_:Int,_:Int)*/
    /*Swift.(file).BinaryInteger.-=infix(_:Self,_:Self)*/
    /*Swift.(file).AdditiveArithmetic.-=infix(_:Self,_:Self)*/
    MIO_Mixin_Int.infix_45_61 = function ($info, lhs$inout, rhs) {
        lhs$inout.set(lhs$inout.get() - rhs);
    };
    /*Swift.(file).Int.*=infix(_:Int,_:Int)*/
    /*Swift.(file).BinaryInteger.*=infix(_:Self,_:Self)*/
    /*Swift.(file).Numeric.*=infix(_:Self,_:Self)*/
    MIO_Mixin_Int.infix_42_61 = function ($info, lhs$inout, rhs) {
        lhs$inout.set(lhs$inout.get() * rhs);
    };
    /*Swift.(file).Int./=infix(_:Int,_:Int)*/
    /*Swift.(file).BinaryInteger./=infix(_:Self,_:Self)*/
    MIO_Mixin_Int.infix_47_61 = function ($info, lhs$inout, rhs) {
        lhs$inout.set((lhs$inout.get() / rhs) | 0);
    };
    /*Swift.(file).Int.dividedReportingOverflow(by:Int)*/
    /*Swift.(file).FixedWidthInteger.dividedReportingOverflow(by:Self)*/
    MIO_Mixin_Int.prototype.dividedReportingOverflowBy = function ($info, other) {
        throw 'unsupported method Swift.(file).Int.dividedReportingOverflow(by:Int) in ' + this.constructor.name;
    };
    /*Swift.(file).Int.remainderReportingOverflow(dividingBy:Int)*/
    /*Swift.(file).FixedWidthInteger.remainderReportingOverflow(dividingBy:Self)*/
    MIO_Mixin_Int.prototype.remainderReportingOverflowDividingBy = function ($info, other) {
        throw 'unsupported method Swift.(file).Int.remainderReportingOverflow(dividingBy:Int) in ' + this.constructor.name;
    };
    /*Swift.(file).Int.addingReportingOverflow(_:Int)*/
    /*Swift.(file).FixedWidthInteger.addingReportingOverflow(_:Self)*/
    MIO_Mixin_Int.prototype.addingReportingOverflow = function ($info, other) {
        throw 'unsupported method Swift.(file).Int.addingReportingOverflow(_:Int) in ' + this.constructor.name;
    };
    /*Swift.(file).Int.subtractingReportingOverflow(_:Int)*/
    /*Swift.(file).FixedWidthInteger.subtractingReportingOverflow(_:Self)*/
    MIO_Mixin_Int.prototype.subtractingReportingOverflow = function ($info, other) {
        throw 'unsupported method Swift.(file).Int.subtractingReportingOverflow(_:Int) in ' + this.constructor.name;
    };
    /*Swift.(file).Int.multipliedReportingOverflow(by:Int)*/
    /*Swift.(file).FixedWidthInteger.multipliedReportingOverflow(by:Self)*/
    MIO_Mixin_Int.prototype.multipliedReportingOverflowBy = function ($info, other) {
        throw 'unsupported method Swift.(file).Int.multipliedReportingOverflow(by:Int) in ' + this.constructor.name;
    };
    /*Swift.(file).Int.%=infix(_:Int,_:Int)*/
    /*Swift.(file).BinaryInteger.%=infix(_:Self,_:Self)*/
    MIO_Mixin_Int.infix_37_61 = function ($info, lhs$inout, rhs) {
        lhs$inout.set(lhs$inout.get() % rhs);
    };
    /*Swift.(file).Int.init(_:Int64)*/
    /*Swift.(file).Int.init(_:Int64)*/
    MIO_Mixin_Int.prototype.initInt64 = function ($info, _value) {
        throw 'unsupported method Swift.(file).Int.init(_:Int64) in ' + this.constructor.name;
    };
    /*Swift.(file).Int.&=infix(_:Int,_:Int)*/
    /*Swift.(file).BinaryInteger.&=infix(_:Self,_:Self)*/
    MIO_Mixin_Int.infix_38_61 = function ($info, lhs$inout, rhs) {
        lhs$inout.set(lhs$inout.get() & rhs);
    };
    /*Swift.(file).Int.|=infix(_:Int,_:Int)*/
    /*Swift.(file).BinaryInteger.|=infix(_:Self,_:Self)*/
    MIO_Mixin_Int.infix_124_61 = function ($info, lhs$inout, rhs) {
        lhs$inout.set(lhs$inout.get() | rhs);
    };
    /*Swift.(file).Int.^=infix(_:Int,_:Int)*/
    /*Swift.(file).BinaryInteger.^=infix(_:Self,_:Self)*/
    MIO_Mixin_Int.infix_94_61 = function ($info, lhs$inout, rhs) {
        lhs$inout.set(lhs$inout.get() ^ rhs);
    };
    /*Swift.(file).Int.&>>=infix(_:Int,_:Int)*/
    /*Swift.(file).FixedWidthInteger.&>>=infix(_:Self,_:Self)*/
    MIO_Mixin_Int.infix_38_62_62_61 = function ($info, lhs$inout, rhs) {
        lhs$inout.set(lhs$inout.get() >> rhs);
    };
    /*Swift.(file).Int.&<<=infix(_:Int,_:Int)*/
    /*Swift.(file).FixedWidthInteger.&<<=infix(_:Self,_:Self)*/
    MIO_Mixin_Int.infix_38_60_60_61 = function ($info, lhs$inout, rhs) {
        lhs$inout.set(lhs$inout.get() << rhs);
    };
    /*Swift.(file).Int.bitWidth*/
    MIO_Mixin_Int.bitWidth$get = function () {
        var _this = this;
        return _this.constructor.bitWidth;
    };
    Object.defineProperty(MIO_Mixin_Int, "bitWidth", {
        get: function () { return this.bitWidth$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).Int.leadingZeroBitCount*/
    MIO_Mixin_Int.prototype.leadingZeroBitCount$get = function () {
        throw 'unsupported variable Swift.(file).Int.leadingZeroBitCount in ' + this.constructor.name;
    };
    Object.defineProperty(MIO_Mixin_Int.prototype, "leadingZeroBitCount", {
        get: function () { return this.leadingZeroBitCount$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).Int.trailingZeroBitCount*/
    MIO_Mixin_Int.prototype.trailingZeroBitCount$get = function () {
        throw 'unsupported variable Swift.(file).Int.trailingZeroBitCount in ' + this.constructor.name;
    };
    Object.defineProperty(MIO_Mixin_Int.prototype, "trailingZeroBitCount", {
        get: function () { return this.trailingZeroBitCount$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).Int.nonzeroBitCount*/
    MIO_Mixin_Int.prototype.nonzeroBitCount$get = function () {
        throw 'unsupported variable Swift.(file).Int.nonzeroBitCount in ' + this.constructor.name;
    };
    Object.defineProperty(MIO_Mixin_Int.prototype, "nonzeroBitCount", {
        get: function () { return this.nonzeroBitCount$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).Int.words*/
    MIO_Mixin_Int.prototype.words$get = function () {
        throw 'unsupported variable Swift.(file).Int.words in ' + this.constructor.name;
    };
    Object.defineProperty(MIO_Mixin_Int.prototype, "words", {
        get: function () { return this.words$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).Int.init(_truncatingBits:UInt)*/
    /*Swift.(file).FixedWidthInteger.init(_truncatingBits:UInt)*/
    MIO_Mixin_Int.prototype.init_truncatingBitsUInt = function ($info, bits) {
        throw 'unsupported method Swift.(file).Int.init(_truncatingBits:UInt) in ' + this.constructor.name;
    };
    /*Swift.(file).Int.magnitude*/
    MIO_Mixin_Int.prototype.magnitude$get = function () {
        throw 'unsupported variable Swift.(file).Int.magnitude in ' + this.constructor.name;
    };
    Object.defineProperty(MIO_Mixin_Int.prototype, "magnitude", {
        get: function () { return this.magnitude$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).Int.multipliedFullWidth(by:Int)*/
    /*Swift.(file).FixedWidthInteger.multipliedFullWidth(by:Self)*/
    MIO_Mixin_Int.prototype.multipliedFullWidthBy = function ($info, other) {
        throw 'unsupported method Swift.(file).Int.multipliedFullWidth(by:Int) in ' + this.constructor.name;
    };
    /*Swift.(file).Int.dividingFullWidth(_:(high: Int, low: Int.Magnitude))*/
    /*Swift.(file).FixedWidthInteger.dividingFullWidth(_:(high: Self, low: Self.Magnitude))*/
    MIO_Mixin_Int.prototype.dividingFullWidth = function ($info, dividend) {
        throw 'unsupported method Swift.(file).Int.dividingFullWidth(_:(high: Int, low: Int.Magnitude)) in ' + this.constructor.name;
    };
    /*Swift.(file).Int.byteSwapped*/
    MIO_Mixin_Int.prototype.byteSwapped$get = function () {
        throw 'unsupported variable Swift.(file).Int.byteSwapped in ' + this.constructor.name;
    };
    Object.defineProperty(MIO_Mixin_Int.prototype, "byteSwapped", {
        get: function () { return this.byteSwapped$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).Int.init(_:Word)*/
    /*Swift.(file).Int.init(_:Word)*/
    MIO_Mixin_Int.prototype.initWord = function ($info, _v) {
        throw 'unsupported method Swift.(file).Int.init(_:Word) in ' + this.constructor.name;
    };
    /*Swift.(file).Int.toUIntMax()*/
    /*Swift.(file).Int.toUIntMax()*/
    MIO_Mixin_Int.prototype.toUIntMax = function ($info) {
        throw 'unsupported method Swift.(file).Int.toUIntMax() in ' + this.constructor.name;
    };
    /*Swift.(file).Int.signum()*/
    /*Swift.(file).BinaryInteger.signum()*/
    MIO_Mixin_Int.prototype.signum = function ($info) {
        var _this = this;
        return _this.constructor.infix_45({}, (_this.constructor.infix_62({}, _this, _create(_this.constructor, 'initIntegerLiteral', {}, 0)) ? _create(_this.constructor, 'initIntegerLiteral', {}, 1) : _create(_this.constructor, 'initIntegerLiteral', {}, 0)), (_this.constructor.infix_60({}, _this, _create(_this.constructor, 'initIntegerLiteral', {}, 0)) ? _create(_this.constructor, 'initIntegerLiteral', {}, 1) : _create(_this.constructor, 'initIntegerLiteral', {}, 0)));
    };
    /*Swift.(file).Int.init(from:Decoder)*/
    /*Swift.(file).Decodable.init(from:Decoder)*/
    MIO_Mixin_Int.prototype.initFromDecoder = function ($info, decoder) {
        throw 'unsupported method Swift.(file).Int.init(from:Decoder) in ' + this.constructor.name;
    };
    /*Swift.(file).Int.encode(to:Encoder)*/
    /*Swift.(file).Encodable.encode(to:Encoder)*/
    MIO_Mixin_Int.prototype.encodeTo = function ($info, encoder) {
        throw 'unsupported method Swift.(file).Int.encode(to:Encoder) in ' + this.constructor.name;
    };
    /*Swift.(file).Int.init(bitPattern:OpaquePointer?)*/
    /*Swift.(file).Int.init(bitPattern:OpaquePointer?)*/
    MIO_Mixin_Int.prototype.initBitPatternOptional = function ($info, pointer) {
        var _this = this;
        _this.initBitPatternOptional({}, _create(UnsafeRawPointer, 'initOptional', {}, pointer));
        return;
    };
    /*Swift.(file).Int.hash(into:Hasher)*/
    /*Swift.(file).Hashable.hash(into:Hasher)*/
    MIO_Mixin_Int.prototype.hashInto = function ($info, hasher$inout) {
        throw 'unsupported method Swift.(file).Int.hash(into:Hasher) in ' + this.constructor.name;
    };
    /*Swift.(file).Int.hashValue*/
    MIO_Mixin_Int.prototype.hashValue$get = function () {
        throw 'unsupported variable Swift.(file).Int.hashValue in ' + this.constructor.name;
    };
    Object.defineProperty(MIO_Mixin_Int.prototype, "hashValue", {
        get: function () { return this.hashValue$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).Int.init(truncatingBitPattern:UInt64)*/
    /*Swift.(file).Int.init(truncatingBitPattern:UInt64)*/
    MIO_Mixin_Int.prototype.initTruncatingBitPatternUInt64 = function ($info, source) {
        throw 'unsupported method Swift.(file).Int.init(truncatingBitPattern:UInt64) in ' + this.constructor.name;
    };
    /*Swift.(file).Int.init(truncatingBitPattern:Int64)*/
    /*Swift.(file).Int.init(truncatingBitPattern:Int64)*/
    MIO_Mixin_Int.prototype.initTruncatingBitPatternInt64 = function ($info, source) {
        throw 'unsupported method Swift.(file).Int.init(truncatingBitPattern:Int64) in ' + this.constructor.name;
    };
    /*Swift.(file).Int.&infix(_:Int,_:Int)*/
    /*Swift.(file).BinaryInteger.&infix(_:Self,_:Self)*/
    MIO_Mixin_Int.infix_38 = function ($info, lhs, rhs) {
        return lhs & rhs;
    };
    /*Swift.(file).Int.|infix(_:Int,_:Int)*/
    /*Swift.(file).BinaryInteger.|infix(_:Self,_:Self)*/
    MIO_Mixin_Int.infix_124 = function ($info, lhs, rhs) {
        return lhs | rhs;
    };
    /*Swift.(file).Int.^infix(_:Int,_:Int)*/
    /*Swift.(file).BinaryInteger.^infix(_:Self,_:Self)*/
    MIO_Mixin_Int.infix_94 = function ($info, lhs, rhs) {
        return lhs ^ rhs;
    };
    /*Swift.(file).Int.&>>infix(_:Int,_:Int)*/
    /*Swift.(file).FixedWidthInteger.&>>infix(_:Self,_:Self)*/
    MIO_Mixin_Int.infix_38_62_62 = function ($info, lhs, rhs) {
        return lhs >> rhs;
    };
    /*Swift.(file).Int.&<<infix(_:Int,_:Int)*/
    /*Swift.(file).FixedWidthInteger.&<<infix(_:Self,_:Self)*/
    MIO_Mixin_Int.infix_38_60_60 = function ($info, lhs, rhs) {
        return lhs << rhs;
    };
    /*Swift.(file).Int./infix(_:Int,_:Int)*/
    /*Swift.(file).BinaryInteger./infix(_:Self,_:Self)*/
    MIO_Mixin_Int.infix_47 = function ($info, lhs, rhs) {
        return (lhs / rhs) | 0;
    };
    /*Swift.(file).Int.%infix(_:Int,_:Int)*/
    /*Swift.(file).BinaryInteger.%infix(_:Self,_:Self)*/
    MIO_Mixin_Int.infix_37 = function ($info, lhs, rhs) {
        return lhs % rhs;
    };
    /*Swift.(file).Int.+infix(_:Int,_:Int)*/
    /*Swift.(file).BinaryInteger.+infix(_:Self,_:Self)*/
    /*Swift.(file).AdditiveArithmetic.+infix(_:Self,_:Self)*/
    MIO_Mixin_Int.infix_43 = function ($info, lhs, rhs) {
        return lhs + rhs;
    };
    /*Swift.(file).Int.-infix(_:Int,_:Int)*/
    /*Swift.(file).BinaryInteger.-infix(_:Self,_:Self)*/
    /*Swift.(file).AdditiveArithmetic.-infix(_:Self,_:Self)*/
    MIO_Mixin_Int.infix_45 = function ($info, lhs, rhs) {
        return lhs - rhs;
    };
    /*Swift.(file).Int.*infix(_:Int,_:Int)*/
    /*Swift.(file).BinaryInteger.*infix(_:Self,_:Self)*/
    /*Swift.(file).Numeric.*infix(_:Self,_:Self)*/
    MIO_Mixin_Int.infix_42 = function ($info, lhs, rhs) {
        return lhs * rhs;
    };
    /*Swift.(file).Int.>>infix(_:Int,_:Int)*/
    /*Swift.(file).Int.>>infix(_:Int,_:Int)*/
    MIO_Mixin_Int.infix_62_62 = function ($info, lhs, rhs) {
        return lhs >> rhs;
    };
    /*Swift.(file).Int.>>=infix(_:Int,_:Int)*/
    /*Swift.(file).Int.>>=infix(_:Int,_:Int)*/
    MIO_Mixin_Int.infix_62_62_61 = function ($info, lhs$inout, rhs) {
        lhs$inout.set(lhs$inout.get() >> rhs);
    };
    /*Swift.(file).Int.<<infix(_:Int,_:Int)*/
    /*Swift.(file).Int.<<infix(_:Int,_:Int)*/
    MIO_Mixin_Int.infix_60_60 = function ($info, lhs, rhs) {
        return lhs << rhs;
    };
    /*Swift.(file).Int.<<=infix(_:Int,_:Int)*/
    /*Swift.(file).Int.<<=infix(_:Int,_:Int)*/
    MIO_Mixin_Int.infix_60_60_61 = function ($info, lhs$inout, rhs) {
        lhs$inout.set(lhs$inout.get() << rhs);
    };
    /*Swift.(file).Int.<=infix(_:Int,_:Int)*/
    /*Swift.(file).Comparable.<=infix(_:Self,_:Self)*/
    MIO_Mixin_Int.infix_60_61 = function ($info, lhs, rhs) {
        var _this = this;
        return Bool.prefix_33({}, (_.arg0 = rhs).constructor.infix_60({}, _.arg0, lhs));
    };
    /*Swift.(file).Int.>=infix(_:Int,_:Int)*/
    /*Swift.(file).Comparable.>=infix(_:Self,_:Self)*/
    MIO_Mixin_Int.infix_62_61 = function ($info, lhs, rhs) {
        var _this = this;
        return Bool.prefix_33({}, (_.arg0 = lhs).constructor.infix_60({}, _.arg0, rhs));
    };
    /*Swift.(file).Int.>infix(_:Int,_:Int)*/
    /*Swift.(file).Comparable.>infix(_:Self,_:Self)*/
    MIO_Mixin_Int.infix_62 = function ($info, lhs, rhs) {
        var _this = this;
        return (_.arg0 = rhs).constructor.infix_60({}, _.arg0, lhs);
    };
    /*Swift.(file).Int.distance(to:Int)*/
    /*Swift.(file).Strideable.distance(to:Self)*/
    MIO_Mixin_Int.prototype.distanceTo = function ($info, other) {
        var _this = this;
        return Int.infix_45({}, other, _this);
    };
    /*Swift.(file).Int.advanced(by:Int)*/
    /*Swift.(file).Strideable.advanced(by:Self.Stride)*/
    MIO_Mixin_Int.prototype.advancedBy = function ($info, n) {
        var _this = this;
        return Int.infix_43({}, _this, n);
    };
    /*Swift.(file).Int.customMirror*/
    MIO_Mixin_Int.prototype.customMirror$get = function () {
        throw 'unsupported variable Swift.(file).Int.customMirror in ' + this.constructor.name;
    };
    Object.defineProperty(MIO_Mixin_Int.prototype, "customMirror", {
        get: function () { return this.customMirror$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).Int.customPlaygroundQuickLook*/
    MIO_Mixin_Int.prototype.customPlaygroundQuickLook$get = function () {
        throw 'unsupported variable Swift.(file).Int.customPlaygroundQuickLook in ' + this.constructor.name;
    };
    Object.defineProperty(MIO_Mixin_Int.prototype, "customPlaygroundQuickLook", {
        get: function () { return this.customPlaygroundQuickLook$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).Int.init(bitPattern:ObjectIdentifier)*/
    /*Swift.(file).Int.init(bitPattern:ObjectIdentifier)*/
    MIO_Mixin_Int.prototype.initBitPatternObjectIdentifier = function ($info, objectID) {
        var _this = this;
        _this.initBitPatternUInt({}, _create(UInt, 'initBitPatternObjectIdentifier', {}, objectID));
        return;
    };
    /*Swift.(file).Int.init(bitPattern:P?)*/
    /*Swift.(file).Int.init(bitPattern:P?)*/
    MIO_Mixin_Int.prototype.initBitPatternOptional = function ($info, pointer) {
        throw 'unsupported method Swift.(file).Int.init(bitPattern:P?) in ' + this.constructor.name;
    };
    MIO_Mixin_Int.prototype.init$vars = function () {
    };
    var _146, _147, _148, _149, _150, _151, _152;
    MIO_Mixin_Int.$struct = true;
    MIO_Mixin_Int.$mixin = true;
    MIO_Mixin_Int.$infoAddress = '';
    MIO_Mixin_Int.initExactlyFloat$failable = true;
    MIO_Mixin_Int.initExactlyDouble$failable = true;
    MIO_Mixin_Int.initExactlyFloat80$failable = true;
    MIO_Mixin_Int.Words = (_146 = /** @class */ (function () {
            function class_170() {
            }
            /*Swift.(file).Int.Words.init(_:Int)*/
            /*Swift.(file).Int.Words.init(_:Int)*/
            class_170.prototype.initInt = function ($info, value) {
                throw 'unsupported method Swift.(file).Int.Words.init(_:Int) in ' + this.constructor.name;
            };
            /*Swift.(file).Int.Words.count*/
            class_170.prototype.count$get = function () {
                var _this = this;
                return _this.distanceFromTo({}, _this.startIndex, _this.endIndex);
            };
            Object.defineProperty(class_170.prototype, "count", {
                get: function () { return this.count$get(); },
                enumerable: true,
                configurable: true
            });
            ;
            /*Swift.(file).Int.Words.startIndex*/
            class_170.prototype.startIndex$get = function () {
                throw 'unsupported variable Swift.(file).Int.Words.startIndex in ' + this.constructor.name;
            };
            Object.defineProperty(class_170.prototype, "startIndex", {
                get: function () { return this.startIndex$get(); },
                enumerable: true,
                configurable: true
            });
            ;
            /*Swift.(file).Int.Words.endIndex*/
            class_170.prototype.endIndex$get = function () {
                throw 'unsupported variable Swift.(file).Int.Words.endIndex in ' + this.constructor.name;
            };
            Object.defineProperty(class_170.prototype, "endIndex", {
                get: function () { return this.endIndex$get(); },
                enumerable: true,
                configurable: true
            });
            ;
            /*Swift.(file).Int.Words.indices*/
            class_170.prototype.indices$get = function () {
                var _this = this;
                return (_.arg0 = _this.startIndex).constructor.infix_46_46_60({}, _.arg0, _this.endIndex);
            };
            Object.defineProperty(class_170.prototype, "indices", {
                get: function () { return this.indices$get(); },
                enumerable: true,
                configurable: true
            });
            ;
            /*Swift.(file).Int.Words.index(after:Int)*/
            /*Swift.(file).RandomAccessCollection.index(after:Self.Index)*/
            /*Swift.(file).BidirectionalCollection.index(after:Self.Index)*/
            /*Swift.(file).Collection.index(after:Self.Index)*/
            /*Swift.(file).RandomAccessCollection.index(after:Self.Index)*/
            class_170.prototype.indexAfter = function ($info, i) {
                throw 'unsupported method Swift.(file).Int.Words.index(after:Int) in ' + this.constructor.name;
            };
            /*Swift.(file).Int.Words.index(before:Int)*/
            /*Swift.(file).RandomAccessCollection.index(before:Self.Index)*/
            /*Swift.(file).BidirectionalCollection.index(before:Self.Index)*/
            /*Swift.(file).RandomAccessCollection.index(before:Self.Index)*/
            class_170.prototype.indexBefore = function ($info, i) {
                throw 'unsupported method Swift.(file).Int.Words.index(before:Int) in ' + this.constructor.name;
            };
            /*Swift.(file).Int.Words.subscript(_:Int)*/
            /*Swift.(file).RandomAccessCollection.subscript(_:Self.Index)*/
            /*Swift.(file).BidirectionalCollection.subscript(_:Self.Index)*/
            /*Swift.(file).Collection.subscript(_:Self.Index)*/
            /*Swift.(file).RandomAccessCollection.subscript(_:Self.Index)*/
            class_170.prototype.subscript$get = function ($info, position) {
                throw 'unsupported method Swift.(file).Int.Words.subscript(_:Int) in ' + this.constructor.name;
            };
            class_170.prototype.init$vars = function () {
            };
            return class_170;
        }()),
        _146.$struct = true,
        _146.$infoAddress = '',
        _146);
    MIO_Mixin_Int.SIMD2Storage = (_147 = /** @class */ (function () {
            function class_171() {
            }
            /*Swift.(file).Int.SIMD2Storage.scalarCount*/
            class_171.prototype.scalarCount$get = function () {
                throw 'unsupported variable Swift.(file).Int.SIMD2Storage.scalarCount in ' + this.constructor.name;
            };
            Object.defineProperty(class_171.prototype, "scalarCount", {
                get: function () { return this.scalarCount$get(); },
                enumerable: true,
                configurable: true
            });
            ;
            /*Swift.(file).Int.SIMD2Storage.init()*/
            /*Swift.(file).SIMDStorage.init()*/
            class_171.prototype.init = function ($info) {
                throw 'unsupported method Swift.(file).Int.SIMD2Storage.init() in ' + this.constructor.name;
            };
            /*Swift.(file).Int.SIMD2Storage.subscript(_:Int)*/
            /*Swift.(file).SIMDStorage.subscript(_:Int)*/
            class_171.prototype.subscript$get = function ($info, index) {
                throw 'unsupported method Swift.(file).Int.SIMD2Storage.subscript(_:Int) in ' + this.constructor.name;
            }; /*Swift.(file).Int.SIMD2Storage.subscript(_:Int)*/
            /*Swift.(file).SIMDStorage.subscript(_:Int)*/
            class_171.prototype.subscript$set = function ($info, newValue, index) {
                throw 'unsupported method Swift.(file).Int.SIMD2Storage.subscript(_:Int) in ' + this.constructor.name;
            };
            class_171.prototype.init$vars = function () {
            };
            return class_171;
        }()),
        _147.$struct = true,
        _147.$infoAddress = '',
        _147);
    MIO_Mixin_Int.SIMD4Storage = (_148 = /** @class */ (function () {
            function class_172() {
            }
            /*Swift.(file).Int.SIMD4Storage.scalarCount*/
            class_172.prototype.scalarCount$get = function () {
                throw 'unsupported variable Swift.(file).Int.SIMD4Storage.scalarCount in ' + this.constructor.name;
            };
            Object.defineProperty(class_172.prototype, "scalarCount", {
                get: function () { return this.scalarCount$get(); },
                enumerable: true,
                configurable: true
            });
            ;
            /*Swift.(file).Int.SIMD4Storage.init()*/
            /*Swift.(file).SIMDStorage.init()*/
            class_172.prototype.init = function ($info) {
                throw 'unsupported method Swift.(file).Int.SIMD4Storage.init() in ' + this.constructor.name;
            };
            /*Swift.(file).Int.SIMD4Storage.subscript(_:Int)*/
            /*Swift.(file).SIMDStorage.subscript(_:Int)*/
            class_172.prototype.subscript$get = function ($info, index) {
                throw 'unsupported method Swift.(file).Int.SIMD4Storage.subscript(_:Int) in ' + this.constructor.name;
            }; /*Swift.(file).Int.SIMD4Storage.subscript(_:Int)*/
            /*Swift.(file).SIMDStorage.subscript(_:Int)*/
            class_172.prototype.subscript$set = function ($info, newValue, index) {
                throw 'unsupported method Swift.(file).Int.SIMD4Storage.subscript(_:Int) in ' + this.constructor.name;
            };
            class_172.prototype.init$vars = function () {
            };
            return class_172;
        }()),
        _148.$struct = true,
        _148.$infoAddress = '',
        _148);
    MIO_Mixin_Int.SIMD8Storage = (_149 = /** @class */ (function () {
            function class_173() {
            }
            /*Swift.(file).Int.SIMD8Storage.scalarCount*/
            class_173.prototype.scalarCount$get = function () {
                throw 'unsupported variable Swift.(file).Int.SIMD8Storage.scalarCount in ' + this.constructor.name;
            };
            Object.defineProperty(class_173.prototype, "scalarCount", {
                get: function () { return this.scalarCount$get(); },
                enumerable: true,
                configurable: true
            });
            ;
            /*Swift.(file).Int.SIMD8Storage.init()*/
            /*Swift.(file).SIMDStorage.init()*/
            class_173.prototype.init = function ($info) {
                throw 'unsupported method Swift.(file).Int.SIMD8Storage.init() in ' + this.constructor.name;
            };
            /*Swift.(file).Int.SIMD8Storage.subscript(_:Int)*/
            /*Swift.(file).SIMDStorage.subscript(_:Int)*/
            class_173.prototype.subscript$get = function ($info, index) {
                throw 'unsupported method Swift.(file).Int.SIMD8Storage.subscript(_:Int) in ' + this.constructor.name;
            }; /*Swift.(file).Int.SIMD8Storage.subscript(_:Int)*/
            /*Swift.(file).SIMDStorage.subscript(_:Int)*/
            class_173.prototype.subscript$set = function ($info, newValue, index) {
                throw 'unsupported method Swift.(file).Int.SIMD8Storage.subscript(_:Int) in ' + this.constructor.name;
            };
            class_173.prototype.init$vars = function () {
            };
            return class_173;
        }()),
        _149.$struct = true,
        _149.$infoAddress = '',
        _149);
    MIO_Mixin_Int.SIMD16Storage = (_150 = /** @class */ (function () {
            function class_174() {
            }
            /*Swift.(file).Int.SIMD16Storage.scalarCount*/
            class_174.prototype.scalarCount$get = function () {
                throw 'unsupported variable Swift.(file).Int.SIMD16Storage.scalarCount in ' + this.constructor.name;
            };
            Object.defineProperty(class_174.prototype, "scalarCount", {
                get: function () { return this.scalarCount$get(); },
                enumerable: true,
                configurable: true
            });
            ;
            /*Swift.(file).Int.SIMD16Storage.init()*/
            /*Swift.(file).SIMDStorage.init()*/
            class_174.prototype.init = function ($info) {
                throw 'unsupported method Swift.(file).Int.SIMD16Storage.init() in ' + this.constructor.name;
            };
            /*Swift.(file).Int.SIMD16Storage.subscript(_:Int)*/
            /*Swift.(file).SIMDStorage.subscript(_:Int)*/
            class_174.prototype.subscript$get = function ($info, index) {
                throw 'unsupported method Swift.(file).Int.SIMD16Storage.subscript(_:Int) in ' + this.constructor.name;
            }; /*Swift.(file).Int.SIMD16Storage.subscript(_:Int)*/
            /*Swift.(file).SIMDStorage.subscript(_:Int)*/
            class_174.prototype.subscript$set = function ($info, newValue, index) {
                throw 'unsupported method Swift.(file).Int.SIMD16Storage.subscript(_:Int) in ' + this.constructor.name;
            };
            class_174.prototype.init$vars = function () {
            };
            return class_174;
        }()),
        _150.$struct = true,
        _150.$infoAddress = '',
        _150);
    MIO_Mixin_Int.SIMD32Storage = (_151 = /** @class */ (function () {
            function class_175() {
            }
            /*Swift.(file).Int.SIMD32Storage.scalarCount*/
            class_175.prototype.scalarCount$get = function () {
                throw 'unsupported variable Swift.(file).Int.SIMD32Storage.scalarCount in ' + this.constructor.name;
            };
            Object.defineProperty(class_175.prototype, "scalarCount", {
                get: function () { return this.scalarCount$get(); },
                enumerable: true,
                configurable: true
            });
            ;
            /*Swift.(file).Int.SIMD32Storage.init()*/
            /*Swift.(file).SIMDStorage.init()*/
            class_175.prototype.init = function ($info) {
                throw 'unsupported method Swift.(file).Int.SIMD32Storage.init() in ' + this.constructor.name;
            };
            /*Swift.(file).Int.SIMD32Storage.subscript(_:Int)*/
            /*Swift.(file).SIMDStorage.subscript(_:Int)*/
            class_175.prototype.subscript$get = function ($info, index) {
                throw 'unsupported method Swift.(file).Int.SIMD32Storage.subscript(_:Int) in ' + this.constructor.name;
            }; /*Swift.(file).Int.SIMD32Storage.subscript(_:Int)*/
            /*Swift.(file).SIMDStorage.subscript(_:Int)*/
            class_175.prototype.subscript$set = function ($info, newValue, index) {
                throw 'unsupported method Swift.(file).Int.SIMD32Storage.subscript(_:Int) in ' + this.constructor.name;
            };
            class_175.prototype.init$vars = function () {
            };
            return class_175;
        }()),
        _151.$struct = true,
        _151.$infoAddress = '',
        _151);
    MIO_Mixin_Int.SIMD64Storage = (_152 = /** @class */ (function () {
            function class_176() {
            }
            /*Swift.(file).Int.SIMD64Storage.scalarCount*/
            class_176.prototype.scalarCount$get = function () {
                throw 'unsupported variable Swift.(file).Int.SIMD64Storage.scalarCount in ' + this.constructor.name;
            };
            Object.defineProperty(class_176.prototype, "scalarCount", {
                get: function () { return this.scalarCount$get(); },
                enumerable: true,
                configurable: true
            });
            ;
            /*Swift.(file).Int.SIMD64Storage.init()*/
            /*Swift.(file).SIMDStorage.init()*/
            class_176.prototype.init = function ($info) {
                throw 'unsupported method Swift.(file).Int.SIMD64Storage.init() in ' + this.constructor.name;
            };
            /*Swift.(file).Int.SIMD64Storage.subscript(_:Int)*/
            /*Swift.(file).SIMDStorage.subscript(_:Int)*/
            class_176.prototype.subscript$get = function ($info, index) {
                throw 'unsupported method Swift.(file).Int.SIMD64Storage.subscript(_:Int) in ' + this.constructor.name;
            }; /*Swift.(file).Int.SIMD64Storage.subscript(_:Int)*/
            /*Swift.(file).SIMDStorage.subscript(_:Int)*/
            class_176.prototype.subscript$set = function ($info, newValue, index) {
                throw 'unsupported method Swift.(file).Int.SIMD64Storage.subscript(_:Int) in ' + this.constructor.name;
            };
            class_176.prototype.init$vars = function () {
            };
            return class_176;
        }()),
        _152.$struct = true,
        _152.$infoAddress = '',
        _152);
    return MIO_Mixin_Int;
}());
if (typeof RandomAccessCollection$implementation != 'undefined')
    _mixin(MIO_Mixin_Int.Words, RandomAccessCollection$implementation, false);
if (typeof SIMDStorage$implementation != 'undefined')
    _mixin(MIO_Mixin_Int.SIMD2Storage, SIMDStorage$implementation, false);
if (typeof SIMDStorage$implementation != 'undefined')
    _mixin(MIO_Mixin_Int.SIMD4Storage, SIMDStorage$implementation, false);
if (typeof SIMDStorage$implementation != 'undefined')
    _mixin(MIO_Mixin_Int.SIMD8Storage, SIMDStorage$implementation, false);
if (typeof SIMDStorage$implementation != 'undefined')
    _mixin(MIO_Mixin_Int.SIMD16Storage, SIMDStorage$implementation, false);
if (typeof SIMDStorage$implementation != 'undefined')
    _mixin(MIO_Mixin_Int.SIMD32Storage, SIMDStorage$implementation, false);
if (typeof SIMDStorage$implementation != 'undefined')
    _mixin(MIO_Mixin_Int.SIMD64Storage, SIMDStorage$implementation, false);
if (typeof FixedWidthInteger$implementation != 'undefined')
    _mixin(MIO_Mixin_Int, FixedWidthInteger$implementation, false);
if (typeof SignedInteger$implementation != 'undefined')
    _mixin(MIO_Mixin_Int, SignedInteger$implementation, false);
if (typeof _ExpressibleByBuiltinIntegerLiteral$implementation != 'undefined')
    _mixin(MIO_Mixin_Int, _ExpressibleByBuiltinIntegerLiteral$implementation, false);
if (typeof Codable$implementation != 'undefined')
    _mixin(MIO_Mixin_Int, Codable$implementation, false);
if (typeof Hashable$implementation != 'undefined')
    _mixin(MIO_Mixin_Int, Hashable$implementation, false);
if (typeof _HasCustomAnyHashableRepresentation$implementation != 'undefined')
    _mixin(MIO_Mixin_Int, _HasCustomAnyHashableRepresentation$implementation, false);
if (typeof CustomReflectable$implementation != 'undefined')
    _mixin(MIO_Mixin_Int, CustomReflectable$implementation, false);
if (typeof _CustomPlaygroundQuickLookable$implementation != 'undefined')
    _mixin(MIO_Mixin_Int, _CustomPlaygroundQuickLookable$implementation, false);
if (typeof MirrorPath$implementation != 'undefined')
    _mixin(MIO_Mixin_Int, MirrorPath$implementation, false);
if (typeof SIMDScalar$implementation != 'undefined')
    _mixin(MIO_Mixin_Int, SIMDScalar$implementation, false);
if (typeof CVarArg$implementation != 'undefined')
    _mixin(MIO_Mixin_Int, CVarArg$implementation, false);
_mixin(Number, MIO_Mixin_Int, true);
var Int = /** @class */ (function () {
    function Int() {
    }
    return Int;
}());
_mixin(Int, MIO_Mixin_Int, true);
var KeyValuePairs = /** @class */ (function () {
    function KeyValuePairs() {
    }
    /*Swift.(file).KeyValuePairs.init(dictionaryLiteral:[(Key, Value)])*/
    /*Swift.(file).ExpressibleByDictionaryLiteral.init(dictionaryLiteral:[(Self.Key, Self.Value)])*/
    KeyValuePairs.prototype.initDictionaryLiteralArray = function ($info, _elements) {
        throw 'unsupported method Swift.(file).KeyValuePairs.init(dictionaryLiteral:[(Key, Value)]) in ' + this.constructor.name;
    };
    /*Swift.(file).KeyValuePairs.startIndex*/
    KeyValuePairs.prototype.startIndex$get = function () {
        var _this = this;
        return 0;
    };
    Object.defineProperty(KeyValuePairs.prototype, "startIndex", {
        get: function () { return this.startIndex$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).KeyValuePairs.endIndex*/
    KeyValuePairs.prototype.endIndex$get = function () {
        var _this = this;
        return _this._elements.endIndex;
    };
    Object.defineProperty(KeyValuePairs.prototype, "endIndex", {
        get: function () { return this.endIndex$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).KeyValuePairs.subscript(_:KeyValuePairs<Key, Value>.Index)*/
    /*Swift.(file).RandomAccessCollection.subscript(_:Self.Index)*/
    /*Swift.(file).BidirectionalCollection.subscript(_:Self.Index)*/
    /*Swift.(file).Collection.subscript(_:Self.Index)*/
    KeyValuePairs.prototype.subscript$get = function ($info, position) {
        var _this = this;
        return _this._elements.subscript$get({}, position);
    };
    /*Swift.(file).KeyValuePairs.description*/
    KeyValuePairs.prototype.description$get = function () {
        var _this = this;
        return _this._makeKeyValuePairDescriptionWithTypeName({}, nil /*!default_value*/);
    };
    Object.defineProperty(KeyValuePairs.prototype, "description", {
        get: function () { return this.description$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).KeyValuePairs.debugDescription*/
    KeyValuePairs.prototype.debugDescription$get = function () {
        var _this = this;
        return _this._makeKeyValuePairDescriptionWithTypeName({}, nil /*!default_value*/);
    };
    Object.defineProperty(KeyValuePairs.prototype, "debugDescription", {
        get: function () { return this.debugDescription$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    KeyValuePairs.prototype.init$vars = function () {
    };
    KeyValuePairs.$struct = true;
    KeyValuePairs.$infoAddress = '';
    return KeyValuePairs;
}());
if (typeof ExpressibleByDictionaryLiteral$implementation != 'undefined')
    _mixin(KeyValuePairs, ExpressibleByDictionaryLiteral$implementation, false);
if (typeof RandomAccessCollection$implementation != 'undefined')
    _mixin(KeyValuePairs, RandomAccessCollection$implementation, false);
if (typeof CustomStringConvertible$implementation != 'undefined')
    _mixin(KeyValuePairs, CustomStringConvertible$implementation, false);
if (typeof CustomDebugStringConvertible$implementation != 'undefined')
    _mixin(KeyValuePairs, CustomDebugStringConvertible$implementation, false);
var LazySequence = /** @class */ (function () {
    function LazySequence() {
    }
    /*Swift.(file).LazySequence.init(_base:Base)*/
    /*Swift.(file).LazySequence.init(_base:Base)*/
    LazySequence.prototype.init_base = function ($info, _base) {
        var _this = this;
        _this._base = _base;
        return;
    };
    /*Swift.(file).LazySequence.startIndex*/
    LazySequence.prototype.startIndex$get = function () {
        throw 'unsupported variable Swift.(file).LazySequence.startIndex in ' + this.constructor.name;
    };
    Object.defineProperty(LazySequence.prototype, "startIndex", {
        get: function () { return this.startIndex$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).LazySequence.endIndex*/
    LazySequence.prototype.endIndex$get = function () {
        throw 'unsupported variable Swift.(file).LazySequence.endIndex in ' + this.constructor.name;
    };
    Object.defineProperty(LazySequence.prototype, "endIndex", {
        get: function () { return this.endIndex$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).LazySequence.indices*/
    LazySequence.prototype.indices$get = function () {
        var _this = this;
        return _create(DefaultIndices, 'init_elementsStartIndexEndIndex', {}, _this, _this.startIndex, _this.endIndex);
    };
    Object.defineProperty(LazySequence.prototype, "indices", {
        get: function () { return this.indices$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).LazySequence.index(after:LazySequence<Base>.Index)*/
    /*Swift.(file).Collection.index(after:Self.Index)*/
    /*Swift.(file).BidirectionalCollection.index(after:Self.Index)*/
    /*Swift.(file).RandomAccessCollection.index(after:Self.Index)*/
    LazySequence.prototype.indexAfter = function ($info, i) {
        throw 'unsupported method Swift.(file).LazySequence.index(after:LazySequence<Base>.Index) in ' + this.constructor.name;
    };
    /*Swift.(file).LazySequence.subscript(_:LazySequence<Base>.Index)*/
    /*Swift.(file).Collection.subscript(_:Self.Index)*/
    /*Swift.(file).BidirectionalCollection.subscript(_:Self.Index)*/
    /*Swift.(file).RandomAccessCollection.subscript(_:Self.Index)*/
    LazySequence.prototype.subscript$get = function ($info, position) {
        throw 'unsupported method Swift.(file).LazySequence.subscript(_:LazySequence<Base>.Index) in ' + this.constructor.name;
    };
    /*Swift.(file).LazySequence.isEmpty*/
    LazySequence.prototype.isEmpty$get = function () {
        var _this = this;
        return (_.arg0 = _this.startIndex).constructor.infix_61_61({}, _.arg0, _this.endIndex);
    };
    Object.defineProperty(LazySequence.prototype, "isEmpty", {
        get: function () { return this.isEmpty$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).LazySequence.count*/
    LazySequence.prototype.count$get = function () {
        var _this = this;
        return _this.distanceFromTo({}, _this.startIndex, _this.endIndex);
    };
    Object.defineProperty(LazySequence.prototype, "count", {
        get: function () { return this.count$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).LazySequence.index(_:LazySequence<Base>.Index,offsetBy:Int)*/
    /*Swift.(file).Collection.index(_:Self.Index,offsetBy:Int)*/
    /*Swift.(file).BidirectionalCollection.index(_:Self.Index,offsetBy:Int)*/
    /*Swift.(file).RandomAccessCollection.index(_:Self.Index,offsetBy:Int)*/
    LazySequence.prototype.indexOffsetBy = function ($info, i, n) {
        var _this = this;
        return _this._advanceForwardBy({}, i, distance);
    };
    /*Swift.(file).LazySequence.index(_:LazySequence<Base>.Index,offsetBy:Int,limitedBy:LazySequence<Base>.Index)*/
    /*Swift.(file).Collection.index(_:Self.Index,offsetBy:Int,limitedBy:Self.Index)*/
    /*Swift.(file).BidirectionalCollection.index(_:Self.Index,offsetBy:Int,limitedBy:Self.Index)*/
    /*Swift.(file).RandomAccessCollection.index(_:Self.Index,offsetBy:Int,limitedBy:Self.Index)*/
    LazySequence.prototype.indexOffsetByLimitedBy = function ($info, i, n, limit) {
        var _this = this;
        return _this._advanceForwardByLimitedBy({}, i, distance, limit);
    };
    /*Swift.(file).LazySequence.distance(from:LazySequence<Base>.Index,to:LazySequence<Base>.Index)*/
    /*Swift.(file).Collection.distance(from:Self.Index,to:Self.Index)*/
    /*Swift.(file).BidirectionalCollection.distance(from:Self.Index,to:Self.Index)*/
    /*Swift.(file).RandomAccessCollection.distance(from:Self.Index,to:Self.Index)*/
    LazySequence.prototype.distanceFromTo = function ($info, start, end) {
        var _this = this;
        preconditionFileLine({}, function () { return (_.arg0 = start).constructor.infix_60_61({}, _.arg0, end); }, function () { return "Only BidirectionalCollections can have end come before start"; }, '?3', '?3');
        var start_dupl = start;
        var count = 0;
        while (true) {
            if (!(((_.arg1 = start_dupl).constructor.infix_33_61({}, _.arg1, end))))
                break;
            count = Int.infix_43({}, count, 1);
            _this.formIndexAfter({}, { get: function () { return start_dupl; }, set: function ($val) { return start_dupl = $val; } });
        }
        ;
        return count;
    };
    /*Swift.(file).LazySequence.index(before:LazySequence<Base>.Index)*/
    /*Swift.(file).BidirectionalCollection.index(before:Self.Index)*/
    /*Swift.(file).RandomAccessCollection.index(before:Self.Index)*/
    LazySequence.prototype.indexBefore = function ($info, i) {
        throw 'unsupported method Swift.(file).LazySequence.index(before:LazySequence<Base>.Index) in ' + this.constructor.name;
    };
    /*Swift.(file).LazySequence.makeIterator()*/
    /*Swift.(file).Collection.makeIterator()*/
    /*Swift.(file).Sequence.makeIterator()*/
    LazySequence.prototype.makeIterator = function ($info) {
        var _this = this;
        return _this._base.makeIterator({});
    };
    /*Swift.(file).LazySequence.underestimatedCount*/
    LazySequence.prototype.underestimatedCount$get = function () {
        var _this = this;
        return _this._base.underestimatedCount;
    };
    Object.defineProperty(LazySequence.prototype, "underestimatedCount", {
        get: function () { return this.underestimatedCount$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    LazySequence.prototype.init$vars = function () {
    };
    LazySequence.$struct = true;
    LazySequence.$infoAddress = '';
    return LazySequence;
}());
if (typeof Collection$implementation != 'undefined')
    _mixin(LazySequence, Collection$implementation, false);
if (typeof LazyCollectionProtocol$implementation != 'undefined')
    _mixin(LazySequence, LazyCollectionProtocol$implementation, false);
if (typeof BidirectionalCollection$implementation != 'undefined')
    _mixin(LazySequence, BidirectionalCollection$implementation, false);
if (typeof RandomAccessCollection$implementation != 'undefined')
    _mixin(LazySequence, RandomAccessCollection$implementation, false);
if (typeof Sequence$implementation != 'undefined')
    _mixin(LazySequence, Sequence$implementation, false);
if (typeof LazySequenceProtocol$implementation != 'undefined')
    _mixin(LazySequence, LazySequenceProtocol$implementation, false);
var LazyMapSequence = /** @class */ (function () {
    function LazyMapSequence() {
    }
    /*Swift.(file).LazyMapSequence.init(_base:Base,transform:(Base.Element) -> Element)*/
    /*Swift.(file).LazyMapSequence.init(_base:Base,transform:(Base.Element) -> Element)*/
    LazyMapSequence.prototype.init_baseTransformfunction_type = function ($info, _base, transform) {
        throw 'unsupported method Swift.(file).LazyMapSequence.init(_base:Base,transform:(Base.Element) -> Element) in ' + this.constructor.name;
    };
    /*Swift.(file).LazyMapSequence.makeIterator()*/
    /*Swift.(file).Sequence.makeIterator()*/
    /*Swift.(file).Collection.makeIterator()*/
    LazyMapSequence.prototype.makeIterator = function ($info) {
        var _this = this;
        return _create(LazyMapSequence.Iterator, 'init_base_transformfunction_type', {}, _this._base.makeIterator({}), _this._transform);
    };
    /*Swift.(file).LazyMapSequence.underestimatedCount*/
    LazyMapSequence.prototype.underestimatedCount$get = function () {
        var _this = this;
        return _this._base.underestimatedCount;
    };
    Object.defineProperty(LazyMapSequence.prototype, "underestimatedCount", {
        get: function () { return this.underestimatedCount$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).LazyMapSequence.startIndex*/
    LazyMapSequence.prototype.startIndex$get = function () {
        throw 'unsupported variable Swift.(file).LazyMapSequence.startIndex in ' + this.constructor.name;
    };
    Object.defineProperty(LazyMapSequence.prototype, "startIndex", {
        get: function () { return this.startIndex$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).LazyMapSequence.endIndex*/
    LazyMapSequence.prototype.endIndex$get = function () {
        throw 'unsupported variable Swift.(file).LazyMapSequence.endIndex in ' + this.constructor.name;
    };
    Object.defineProperty(LazyMapSequence.prototype, "endIndex", {
        get: function () { return this.endIndex$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).LazyMapSequence.index(after:LazyMapSequence<Base, Element>.Index)*/
    /*Swift.(file).Collection.index(after:Self.Index)*/
    /*Swift.(file).BidirectionalCollection.index(after:Self.Index)*/
    /*Swift.(file).RandomAccessCollection.index(after:Self.Index)*/
    LazyMapSequence.prototype.indexAfter = function ($info, i) {
        throw 'unsupported method Swift.(file).LazyMapSequence.index(after:LazyMapSequence<Base, Element>.Index) in ' + this.constructor.name;
    };
    /*Swift.(file).LazyMapSequence.formIndex(after:LazyMapSequence<Base, Element>.Index)*/
    /*Swift.(file).Collection.formIndex(after:Self.Index)*/
    /*Swift.(file).BidirectionalCollection.formIndex(after:Self.Index)*/
    /*Swift.(file).RandomAccessCollection.formIndex(after:Self.Index)*/
    LazyMapSequence.prototype.formIndexAfter = function ($info, i$inout) {
        var _this = this;
        var i = i$inout.get();
        var $result = (function () {
            i = _this.indexAfter({}, i);
        })();
        i$inout.set(i);
        return $result;
    };
    /*Swift.(file).LazyMapSequence.subscript(_:Base.Index)*/
    /*Swift.(file).Collection.subscript(_:Self.Index)*/
    /*Swift.(file).BidirectionalCollection.subscript(_:Self.Index)*/
    /*Swift.(file).RandomAccessCollection.subscript(_:Self.Index)*/
    LazyMapSequence.prototype.subscript$get = function ($info, position) {
        throw 'unsupported method Swift.(file).LazyMapSequence.subscript(_:Base.Index) in ' + this.constructor.name;
    };
    /*Swift.(file).LazyMapSequence.subscript(_:Range<Base.Index>)*/
    /*Swift.(file).Collection.subscript(_:Range<Self.Index>)*/
    /*Swift.(file).BidirectionalCollection.subscript(_:Range<Self.Index>)*/
    /*Swift.(file).RandomAccessCollection.subscript(_:Range<Self.Index>)*/
    LazyMapSequence.prototype.subscriptRange$get = function ($info, bounds) {
        var _this = this;
        return _create(Slice, 'initBaseBoundsRange', {}, _this, bounds);
    };
    /*Swift.(file).LazyMapSequence.indices*/
    LazyMapSequence.prototype.indices$get = function () {
        var _this = this;
        return _create(DefaultIndices, 'init_elementsStartIndexEndIndex', {}, _this, _this.startIndex, _this.endIndex);
    };
    Object.defineProperty(LazyMapSequence.prototype, "indices", {
        get: function () { return this.indices$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).LazyMapSequence.isEmpty*/
    LazyMapSequence.prototype.isEmpty$get = function () {
        var _this = this;
        return (_.arg0 = _this.startIndex).constructor.infix_61_61({}, _.arg0, _this.endIndex);
    };
    Object.defineProperty(LazyMapSequence.prototype, "isEmpty", {
        get: function () { return this.isEmpty$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).LazyMapSequence.count*/
    LazyMapSequence.prototype.count$get = function () {
        var _this = this;
        return _this.distanceFromTo({}, _this.startIndex, _this.endIndex);
    };
    Object.defineProperty(LazyMapSequence.prototype, "count", {
        get: function () { return this.count$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).LazyMapSequence.index(_:LazyMapSequence<Base, Element>.Index,offsetBy:Int)*/
    /*Swift.(file).Collection.index(_:Self.Index,offsetBy:Int)*/
    /*Swift.(file).BidirectionalCollection.index(_:Self.Index,offsetBy:Int)*/
    /*Swift.(file).RandomAccessCollection.index(_:Self.Index,offsetBy:Int)*/
    LazyMapSequence.prototype.indexOffsetBy = function ($info, i, n) {
        var _this = this;
        return _this._advanceForwardBy({}, i, distance);
    };
    /*Swift.(file).LazyMapSequence.index(_:LazyMapSequence<Base, Element>.Index,offsetBy:Int,limitedBy:LazyMapSequence<Base, Element>.Index)*/
    /*Swift.(file).Collection.index(_:Self.Index,offsetBy:Int,limitedBy:Self.Index)*/
    /*Swift.(file).BidirectionalCollection.index(_:Self.Index,offsetBy:Int,limitedBy:Self.Index)*/
    /*Swift.(file).RandomAccessCollection.index(_:Self.Index,offsetBy:Int,limitedBy:Self.Index)*/
    LazyMapSequence.prototype.indexOffsetByLimitedBy = function ($info, i, n, limit) {
        var _this = this;
        return _this._advanceForwardByLimitedBy({}, i, distance, limit);
    };
    /*Swift.(file).LazyMapSequence.distance(from:LazyMapSequence<Base, Element>.Index,to:LazyMapSequence<Base, Element>.Index)*/
    /*Swift.(file).Collection.distance(from:Self.Index,to:Self.Index)*/
    /*Swift.(file).BidirectionalCollection.distance(from:Self.Index,to:Self.Index)*/
    /*Swift.(file).RandomAccessCollection.distance(from:Self.Index,to:Self.Index)*/
    LazyMapSequence.prototype.distanceFromTo = function ($info, start, end) {
        var _this = this;
        preconditionFileLine({}, function () { return (_.arg0 = start).constructor.infix_60_61({}, _.arg0, end); }, function () { return "Only BidirectionalCollections can have end come before start"; }, '?3', '?3');
        var start_dupl = start;
        var count = 0;
        while (true) {
            if (!(((_.arg1 = start_dupl).constructor.infix_33_61({}, _.arg1, end))))
                break;
            count = Int.infix_43({}, count, 1);
            _this.formIndexAfter({}, { get: function () { return start_dupl; }, set: function ($val) { return start_dupl = $val; } });
        }
        ;
        return count;
    };
    /*Swift.(file).LazyMapSequence.index(before:LazyMapSequence<Base, Element>.Index)*/
    /*Swift.(file).BidirectionalCollection.index(before:Self.Index)*/
    /*Swift.(file).RandomAccessCollection.index(before:Self.Index)*/
    LazyMapSequence.prototype.indexBefore = function ($info, i) {
        throw 'unsupported method Swift.(file).LazyMapSequence.index(before:LazyMapSequence<Base, Element>.Index) in ' + this.constructor.name;
    };
    /*Swift.(file).LazyMapSequence.formIndex(before:LazyMapSequence<Base, Element>.Index)*/
    /*Swift.(file).BidirectionalCollection.formIndex(before:Self.Index)*/
    /*Swift.(file).RandomAccessCollection.formIndex(before:Self.Index)*/
    LazyMapSequence.prototype.formIndexBefore = function ($info, i$inout) {
        var _this = this;
        var i = i$inout.get();
        var $result = (function () {
            i = _this.indexBefore({}, i);
        })();
        i$inout.set(i);
        return $result;
    };
    /*Swift.(file).LazyMapSequence.map(_:(Element) -> ElementOfResult)*/
    /*Swift.(file).LazyMapSequence.map(_:(Element) -> ElementOfResult)*/
    LazyMapSequence.prototype.mapSwift = function ($info, transform) {
        var _this = this;
        return _create(LazyMapSequence, 'init_baseTransformfunction_type', {}, _this._base, (function ($info, $0) { return transform({}, _this._transform({}, $0)); }));
    };
    /*Swift.(file).LazyMapSequence.map(_:(Element) -> ElementOfResult)*/
    /*Swift.(file).LazyMapSequence.map(_:(Element) -> ElementOfResult)*/
    LazyMapSequence.prototype.mapSwift = function ($info, transform) {
        var _this = this;
        return _create(LazyMapSequence, 'init_baseTransformfunction_type', {}, _this._base, (function ($info, $0) { return transform({}, _this._transform({}, $0)); }));
    };
    LazyMapSequence.prototype.init$vars = function () {
    };
    var _153;
    LazyMapSequence.$struct = true;
    LazyMapSequence.$infoAddress = '';
    LazyMapSequence.Iterator = (_153 = /** @class */ (function () {
            function class_177() {
            }
            /*Swift.(file).LazyMapSequence.Iterator.base*/
            class_177.prototype.base$get = function () {
                var _this = this;
                return _this._base;
            };
            Object.defineProperty(class_177.prototype, "base", {
                get: function () { return this.base$get(); },
                enumerable: true,
                configurable: true
            });
            ;
            /*Swift.(file).LazyMapSequence.Iterator.init(_base:Base.Iterator,_transform:(Base.Element) -> LazyMapSequence<Base, Element>.Iterator.Element)*/
            /*Swift.(file).LazyMapSequence.Iterator.init(_base:Base.Iterator,_transform:(Base.Element) -> LazyMapSequence<Base, Element>.Iterator.Element)*/
            class_177.prototype.init_base_transformfunction_type = function ($info, _base, _transform) {
                throw 'unsupported method Swift.(file).LazyMapSequence.Iterator.init(_base:Base.Iterator,_transform:(Base.Element) -> LazyMapSequence<Base, Element>.Iterator.Element) in ' + this.constructor.name;
            };
            /*Swift.(file).LazyMapSequence.Iterator.next()*/
            /*Swift.(file).IteratorProtocol.next()*/
            class_177.prototype.next = function ($info) {
                var _this = this;
                return _this._base.next({ $setThis: function ($val) { return _this._base = $val; } }).mapSwift({}, _this._transform);
            };
            class_177.prototype.init$vars = function () {
            };
            return class_177;
        }()),
        _153.$struct = true,
        _153.$infoAddress = '',
        _153);
    return LazyMapSequence;
}());
if (typeof IteratorProtocol$implementation != 'undefined')
    _mixin(LazyMapSequence.Iterator, IteratorProtocol$implementation, false);
if (typeof Sequence$implementation != 'undefined')
    _mixin(LazyMapSequence.Iterator, Sequence$implementation, false);
if (typeof LazySequenceProtocol$implementation != 'undefined')
    _mixin(LazyMapSequence, LazySequenceProtocol$implementation, false);
if (typeof Collection$implementation != 'undefined')
    _mixin(LazyMapSequence, Collection$implementation, false);
if (typeof BidirectionalCollection$implementation != 'undefined')
    _mixin(LazyMapSequence, BidirectionalCollection$implementation, false);
if (typeof LazyCollectionProtocol$implementation != 'undefined')
    _mixin(LazyMapSequence, LazyCollectionProtocol$implementation, false);
if (typeof RandomAccessCollection$implementation != 'undefined')
    _mixin(LazyMapSequence, RandomAccessCollection$implementation, false);
var MIO_Mixin_String = /** @class */ (function () {
    function MIO_Mixin_String() {
    }
    /*Swift.(file).String.init(_:_StringGuts)*/
    /*Swift.(file).String.init(_:_StringGuts)*/
    MIO_Mixin_String.prototype.init_StringGuts = function ($info, _guts) {
        throw 'unsupported method Swift.(file).String.init(_:_StringGuts) in ' + this.constructor.name;
    };
    /*Swift.(file).String.init()*/
    /*Swift.(file).RangeReplaceableCollection.init()*/
    MIO_Mixin_String.prototype.init = function ($info) {
        return "";
    };
    /*Swift.(file).String.init(_:Character)*/
    /*Swift.(file).String.init(_:Character)*/
    MIO_Mixin_String.prototype.initCharacter = function ($info, c) {
        return c;
    };
    /*Swift.(file).String.init(from:Decoder)*/
    /*Swift.(file).Decodable.init(from:Decoder)*/
    MIO_Mixin_String.prototype.initFromDecoder = function ($info, decoder) {
        throw 'unsupported method Swift.(file).String.init(from:Decoder) in ' + this.constructor.name;
    };
    /*Swift.(file).String.encode(to:Encoder)*/
    /*Swift.(file).Encodable.encode(to:Encoder)*/
    MIO_Mixin_String.prototype.encodeTo = function ($info, encoder) {
        throw 'unsupported method Swift.(file).String.encode(to:Encoder) in ' + this.constructor.name;
    };
    /*Swift.(file).String.withUnsafeBytes(_:(UnsafeRawBufferPointer) throws -> R)*/
    /*Swift.(file)._HasContiguousBytes.withUnsafeBytes(_:(UnsafeRawBufferPointer) throws -> R)*/
    MIO_Mixin_String.prototype.withUnsafeBytes = function ($info, body) {
        var _this = this;
        return _this._withUTF8({}, (function ($info, $0) { return body({}, _create(UnsafeRawBufferPointer, 'initUnsafeBufferPointer', {}, $0)); }));
    };
    /*Swift.(file).String.init(cString:UnsafePointer<CChar>)*/
    /*Swift.(file).StringProtocol.init(cString:UnsafePointer<CChar>)*/
    MIO_Mixin_String.prototype.initCStringUnsafePointer = function ($info, cString) {
        var _this = this;
        var len = UTF8._nullCodeUnitOffsetIn({}, cString);
        return _cloneStruct(String._fromUTF8Repairing({}, _create(UnsafeBufferPointer, 'initStartOptionalCountInt', {}, /*pointer_to_pointer*/ cString._asUInt8, len))["0"]);
        return;
    };
    /*Swift.(file).String.init(cString:UnsafePointer<UInt8>)*/
    /*Swift.(file).String.init(cString:UnsafePointer<UInt8>)*/
    MIO_Mixin_String.prototype.initCStringUnsafePointer = function ($info, cString) {
        var _this = this;
        var len = UTF8._nullCodeUnitOffsetIn({}, cString);
        return _cloneStruct(String._fromUTF8Repairing({}, _create(UnsafeBufferPointer, 'initStartOptionalCountInt', {}, /*pointer_to_pointer*/ cString, len))["0"]);
        return;
    };
    /*Swift.(file).String.init(validatingUTF8:UnsafePointer<CChar>)*/
    /*Swift.(file).String.init(validatingUTF8:UnsafePointer<CChar>)*/
    MIO_Mixin_String.prototype.initValidatingUTF8UnsafePointer = function ($info, cString) {
        var _this = this;
        var len = UTF8._nullCodeUnitOffsetIn({}, cString);
        var $ifLet0, str_1;
        if (!((($ifLet0 = String._tryFromUTF8({}, _create(UnsafeBufferPointer, 'initStartOptionalCountInt', {}, /*pointer_to_pointer*/ cString._asUInt8, len))) || true) && $ifLet0 != null && ((str_1 = $ifLet0) || true))) {
            return (this.$failed = true);
        }
        ;
        return _cloneStruct(str_1);
        return;
    };
    /*Swift.(file).String.decodeCString(_:UnsafePointer<Encoding.CodeUnit>?,as:Encoding.Type,repairingInvalidCodeUnits:Bool)*/
    /*Swift.(file).String.decodeCString(_:UnsafePointer<Encoding.CodeUnit>?,as:Encoding.Type,repairingInvalidCodeUnits:Bool)*/
    MIO_Mixin_String.decodeCStringAsRepairingInvalidCodeUnits = function ($info, cString, encoding, isRepairing) {
        var _this = this;
        var $ifLet0, cPtr_1;
        if (!((($ifLet0 = cString) || true) && $ifLet0 != null && ((cPtr_1 = $ifLet0) || true))) {
            return null;
        }
        ;
        if ((_fastPath({}, infix_61_61({}, encoding, Unicode.UTF8)))) {
            var ptr = _cloneStruct(_create(UnsafeRawPointer, 'init', {}, /*pointer_to_pointer*/ cPtr_1).assumingMemoryBoundTo({}, UInt8));
            var len_1 = UTF8._nullCodeUnitOffsetIn({}, ptr);
            var codeUnits_1 = _create(UnsafeBufferPointer, 'initStartOptionalCountInt', {}, /*pointer_to_pointer*/ ptr, len_1);
            if ((isRepairing)) {
                return String._fromUTF8Repairing({}, codeUnits_1);
            }
            else {
                var $ifLet2, str_3;
                if (!((($ifLet2 = String._tryFromUTF8({}, codeUnits_1)) || true) && $ifLet2 != null && ((str_3 = $ifLet2) || true))) {
                    return null;
                }
                ;
                return { 0: str_3, 1: false };
            }
            ;
        }
        ;
        var end = _cloneStruct(cPtr_1);
        while (true) {
            if (!((((function () { throw '!unclarifiedGeneric:Encoding.CodeUnit'; })()).infix_33_61({}, end.pointee, 0))))
                break;
            UnsafePointer.infix_43_61({}, { get: function () { return end; }, set: function ($val) { return end = $val; } }, 1);
        }
        ;
        var len = UnsafePointer.infix_45({}, end, cPtr_1);
        var codeUnits = _create(UnsafeBufferPointer, 'initStartOptionalCountInt', {}, /*pointer_to_pointer*/ cPtr_1, len);
        return (((_.tmp0 = String._fromCodeUnitsEncodingRepair({}, codeUnits, encoding, isRepairing)) != null) ? (_.tmp0) : null);
    };
    /*Swift.(file).String.init(decodingCString:UnsafePointer<Encoding.CodeUnit>,as:Encoding.Type)*/
    /*Swift.(file).StringProtocol.init(decodingCString:UnsafePointer<Encoding.CodeUnit>,as:Encoding.Type)*/
    MIO_Mixin_String.prototype.initDecodingCStringUnsafePointerAs = function ($info, ptr, sourceEncoding) {
        var _this = this;
        return _cloneStruct(String.decodeCStringAsRepairingInvalidCodeUnits({}, /*pointer_to_pointer*/ ptr, sourceEncoding, true /*!default_value*/)["0"]);
        return;
    };
    /*Swift.(file).String.withCString(_:(UnsafePointer<Int8>) throws -> Result)*/
    /*Swift.(file).StringProtocol.withCString(_:(UnsafePointer<CChar>) throws -> Result)*/
    MIO_Mixin_String.prototype.withCString = function ($info, body) {
        throw 'unsupported method Swift.(file).String.withCString(_:(UnsafePointer<Int8>) throws -> Result) in ' + this.constructor.name;
    };
    /*Swift.(file).String.customMirror*/
    MIO_Mixin_String.prototype.customMirror$get = function () {
        throw 'unsupported variable Swift.(file).String.customMirror in ' + this.constructor.name;
    };
    Object.defineProperty(MIO_Mixin_String.prototype, "customMirror", {
        get: function () { return this.customMirror$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).String.customPlaygroundQuickLook*/
    MIO_Mixin_String.prototype.customPlaygroundQuickLook$get = function () {
        throw 'unsupported variable Swift.(file).String.customPlaygroundQuickLook in ' + this.constructor.name;
    };
    Object.defineProperty(MIO_Mixin_String.prototype, "customPlaygroundQuickLook", {
        get: function () { return this.customPlaygroundQuickLook$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).String.write(_:String)*/
    /*Swift.(file).TextOutputStream.write(_:String)*/
    MIO_Mixin_String.prototype.write = function ($info, other) {
        var _this = this;
        String.infix_43_61({}, { get: function () { return _this; }, set: function ($val) { return $info.$setThis(_this = _cloneStruct($val)); } }, other);
    };
    /*Swift.(file).String.write(to:Target)*/
    /*Swift.(file).TextOutputStreamable.write(to:Target)*/
    MIO_Mixin_String.prototype.writeTo = function ($info, target$inout) {
        var _this = this;
        var target = target$inout.get();
        var $result = (function () {
            target.write({ $setThis: function ($val) { return target = $val; } }, _this);
        })();
        target$inout.set(target);
        return $result;
    };
    /*Swift.(file).String.hash(into:Hasher)*/
    /*Swift.(file).Hashable.hash(into:Hasher)*/
    MIO_Mixin_String.prototype.hashInto = function ($info, hasher$inout) {
        throw 'unsupported method Swift.(file).String.hash(into:Hasher) in ' + this.constructor.name;
    };
    /*Swift.(file).String.hashValue*/
    MIO_Mixin_String.prototype.hashValue$get = function () {
        //FIXME compute proper hash, e.g. by xoring
        return this.length;
    };
    Object.defineProperty(MIO_Mixin_String.prototype, "hashValue", {
        get: function () { return this.hashValue$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).String.init(decoding:C,as:Encoding.Type)*/
    /*Swift.(file).StringProtocol.init(decoding:C,as:Encoding.Type)*/
    MIO_Mixin_String.prototype.initDecodingAs = function ($info, codeUnits, sourceEncoding) {
        var _this = this;
        var $ifLet0, contigBytes_1;
        if ((($ifLet0 = codeUnits) || true) && $ifLet0 != null && ((contigBytes_1 = $ifLet0) || true) && (infix_61_61({}, sourceEncoding, UTF8)) && (contigBytes_1._providesContiguousBytesNoCopy)) {
            return _cloneStruct(contigBytes_1.withUnsafeBytes({}, (function ($info, rawBufPtr) {
                var ptr = _cloneStruct(rawBufPtr.baseAddress._unsafelyUnwrappedUnchecked);
                return String._fromUTF8Repairing({}, _create(UnsafeBufferPointer, 'initStartOptionalCountInt', {}, /*pointer_to_pointer*/ ptr.assumingMemoryBoundTo({}, UInt8), rawBufPtr.count))["0"];
            })));
            return;
        }
        ;
        return _cloneStruct(String._fromCodeUnitsEncodingRepair({}, codeUnits, sourceEncoding, true)["0"]);
        return;
    };
    /*Swift.(file).String.withCString(encodedAs:TargetEncoding.Type,_:(UnsafePointer<TargetEncoding.CodeUnit>) throws -> Result)*/
    /*Swift.(file).StringProtocol.withCString(encodedAs:Encoding.Type,_:(UnsafePointer<Encoding.CodeUnit>) throws -> Result)*/
    MIO_Mixin_String.prototype.withCStringEncodedAs = function ($info, targetEncoding, body) {
        var _this = this;
        if ((infix_61_61({}, targetEncoding, UTF8))) {
            return _this.withCString({}, (function ($info, cPtr) {
                var ptr = _cloneStruct(_create(UnsafeRawPointer, 'init', {}, /*pointer_to_pointer*/ cPtr).assumingMemoryBoundTo({}, ((function () { throw '!unclarifiedGeneric:TargetEncoding.CodeUnit'; })())));
                return body({}, ptr);
            }));
        }
        ;
        return _this._slowWithCStringEncodedAs({}, targetEncoding, body);
    };
    /*Swift.(file).String.init(_builtinUnicodeScalarLiteral:Int32)*/
    /*Swift.(file)._ExpressibleByBuiltinUnicodeScalarLiteral.init(_builtinUnicodeScalarLiteral:Int32)*/
    MIO_Mixin_String.prototype.init_builtinUnicodeScalarLiteralInt32 = function ($info, value) {
        throw 'unsupported method Swift.(file).String.init(_builtinUnicodeScalarLiteral:Int32) in ' + this.constructor.name;
    };
    /*Swift.(file).String.init(_:Unicode.Scalar)*/
    /*Swift.(file).String.init(_:Unicode.Scalar)*/
    MIO_Mixin_String.prototype.initUnicodeScalar = function ($info, scalar) {
        var _this = this;
        return _cloneStruct(scalar.withUTF8CodeUnits({}, (function ($info, $0) { return String._uncheckedFromUTF8({}, $0); })));
        return;
    };
    /*Swift.(file).String.init(_builtinExtendedGraphemeClusterLiteral:RawPointer,utf8CodeUnitCount:Word,isASCII:Int1)*/
    /*Swift.(file)._ExpressibleByBuiltinExtendedGraphemeClusterLiteral.init(_builtinExtendedGraphemeClusterLiteral:RawPointer,utf8CodeUnitCount:Word,isASCII:Int1)*/
    MIO_Mixin_String.prototype.init_builtinExtendedGraphemeClusterLiteralRawPointerUtf8CodeUnitCountWordIsASCIIInt1 = function ($info, start, utf8CodeUnitCount, isASCII) {
        throw 'unsupported method Swift.(file).String.init(_builtinExtendedGraphemeClusterLiteral:RawPointer,utf8CodeUnitCount:Word,isASCII:Int1) in ' + this.constructor.name;
    };
    /*Swift.(file).String.init(_builtinStringLiteral:RawPointer,utf8CodeUnitCount:Word,isASCII:Int1)*/
    /*Swift.(file)._ExpressibleByBuiltinStringLiteral.init(_builtinStringLiteral:RawPointer,utf8CodeUnitCount:Word,isASCII:Int1)*/
    MIO_Mixin_String.prototype.init_builtinStringLiteralRawPointerUtf8CodeUnitCountWordIsASCIIInt1 = function ($info, start, utf8CodeUnitCount, isASCII) {
        throw 'unsupported method Swift.(file).String.init(_builtinStringLiteral:RawPointer,utf8CodeUnitCount:Word,isASCII:Int1) in ' + this.constructor.name;
    };
    /*Swift.(file).String.init(stringLiteral:String)*/
    /*Swift.(file).ExpressibleByStringLiteral.init(stringLiteral:Self.StringLiteralType)*/
    MIO_Mixin_String.prototype.initStringLiteral = function ($info, value) {
        var _this = this;
        return _cloneStruct(value);
        return;
    };
    /*Swift.(file).String.debugDescription*/
    MIO_Mixin_String.prototype.debugDescription$get = function () {
        var _this = this;
        var result = "\"";
        {
            var $us$generator_1 = _cloneStruct(_this.unicodeScalars.makeIterator({}));
            while (true) {
                var $ifLet0, us_1;
                if (!((($ifLet0 = $us$generator_1.next({ $setThis: function ($val) { return $us$generator_1 = $val; } })) || true) && $ifLet0 != null && ((us_1 = $ifLet0) || true)))
                    break;
                String.infix_43_61({}, { get: function () { return result; }, set: function ($val) { return result = $val; } }, us_1.escapedAsASCII({}, false));
            }
        }
        ;
        String.infix_43_61({}, { get: function () { return result; }, set: function ($val) { return result = $val; } }, "\"");
        return result;
    };
    Object.defineProperty(MIO_Mixin_String.prototype, "debugDescription", {
        get: function () { return this.debugDescription$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).String.+infix(_:String,_:String)*/
    /*Swift.(file).String.+infix(_:String,_:String)*/
    MIO_Mixin_String.infix_43 = function ($info, lhs, rhs) {
        var _this = this;
        var result = lhs;
        result.append({ $setThis: function ($val) { return result = $val; } }, rhs);
        return result;
    };
    /*Swift.(file).String.+=infix(_:String,_:String)*/
    /*Swift.(file).String.+=infix(_:String,_:String)*/
    MIO_Mixin_String.infix_43_61 = function ($info, lhs$inout, rhs) {
        var _this = this;
        var lhs = lhs$inout.get();
        var $result = (function () {
            lhs.append({ $setThis: function ($val) { return lhs = $val; } }, rhs);
        })();
        lhs$inout.set(lhs);
        return $result;
    };
    /*Swift.(file).String.lowercased()*/
    /*Swift.(file).StringProtocol.lowercased()*/
    MIO_Mixin_String.prototype.lowercased = function ($info) {
        throw 'unsupported method Swift.(file).String.lowercased() in ' + this.constructor.name;
    };
    /*Swift.(file).String.uppercased()*/
    /*Swift.(file).StringProtocol.uppercased()*/
    MIO_Mixin_String.prototype.uppercased = function ($info) {
        throw 'unsupported method Swift.(file).String.uppercased() in ' + this.constructor.name;
    };
    /*Swift.(file).String.init(_:T)*/
    /*Swift.(file).String.init(_:T)*/
    MIO_Mixin_String.prototype.initT = function ($info, value) {
        var _this = this;
        return _cloneStruct(value.description);
        return;
    };
    /*Swift.(file).String.description*/
    MIO_Mixin_String.prototype.description$get = function () {
        var _this = this;
        return _this;
    };
    Object.defineProperty(MIO_Mixin_String.prototype, "description", {
        get: function () { return this.description$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).String.init(_cocoaString:AnyObject)*/
    /*Swift.(file).String.init(_cocoaString:AnyObject)*/
    MIO_Mixin_String.prototype.init_cocoaStringAnyObject = function ($info, _cocoaString) {
        throw 'unsupported method Swift.(file).String.init(_cocoaString:AnyObject) in ' + this.constructor.name;
    };
    /*Swift.(file).String.startIndex*/
    MIO_Mixin_String.prototype.startIndex$get = function () {
        //TODO change once we know what String.Index is about
        return 0;
    };
    Object.defineProperty(MIO_Mixin_String.prototype, "startIndex", {
        get: function () { return this.startIndex$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).String.endIndex*/
    MIO_Mixin_String.prototype.endIndex$get = function () {
        return this.length;
    };
    Object.defineProperty(MIO_Mixin_String.prototype, "endIndex", {
        get: function () { return this.endIndex$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).String.count*/
    MIO_Mixin_String.prototype.count$get = function () {
        return this.length;
    };
    Object.defineProperty(MIO_Mixin_String.prototype, "count", {
        get: function () { return this.count$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).String.index(after:String.Index)*/
    /*Swift.(file).BidirectionalCollection.index(after:Self.Index)*/
    /*Swift.(file).Collection.index(after:Self.Index)*/
    MIO_Mixin_String.prototype.indexAfter = function ($info, i) {
        return i + 1;
    };
    /*Swift.(file).String.index(before:String.Index)*/
    /*Swift.(file).BidirectionalCollection.index(before:Self.Index)*/
    MIO_Mixin_String.prototype.indexBefore = function ($info, i) {
        return i - 1;
    };
    /*Swift.(file).String.index(_:String.Index,offsetBy:String.IndexDistance)*/
    /*Swift.(file).BidirectionalCollection.index(_:Self.Index,offsetBy:Int)*/
    /*Swift.(file).Collection.index(_:Self.Index,offsetBy:Int)*/
    MIO_Mixin_String.prototype.indexOffsetBy = function ($info, i, n) {
        return i + n;
    };
    /*Swift.(file).String.index(_:String.Index,offsetBy:String.IndexDistance,limitedBy:String.Index)*/
    /*Swift.(file).BidirectionalCollection.index(_:Self.Index,offsetBy:Int,limitedBy:Self.Index)*/
    /*Swift.(file).Collection.index(_:Self.Index,offsetBy:Int,limitedBy:Self.Index)*/
    MIO_Mixin_String.prototype.indexOffsetByLimitedBy = function ($info, i, n, limit) {
        var _this = this;
        return _this._indexOffsetByLimitedBy({}, i, n, limit);
    };
    /*Swift.(file).String.distance(from:String.Index,to:String.Index)*/
    /*Swift.(file).BidirectionalCollection.distance(from:Self.Index,to:Self.Index)*/
    /*Swift.(file).Collection.distance(from:Self.Index,to:Self.Index)*/
    MIO_Mixin_String.prototype.distanceFromTo = function ($info, start, end) {
        var _this = this;
        return _this._distanceFromTo({}, start, end);
    };
    /*Swift.(file).String.subscript(_:String.Index)*/
    /*Swift.(file).BidirectionalCollection.subscript(_:Self.Index)*/
    /*Swift.(file).Collection.subscript(_:Self.Index)*/
    /*Swift.(file).RangeReplaceableCollection.subscript(_:Self.Index)*/
    MIO_Mixin_String.prototype.subscript$get = function ($info, i) {
        throw 'unsupported method Swift.(file).String.subscript(_:String.Index) in ' + this.constructor.name;
    };
    /*Swift.(file).String.makeIterator()*/
    /*Swift.(file).Collection.makeIterator()*/
    /*Swift.(file).Sequence.makeIterator()*/
    MIO_Mixin_String.prototype.makeIterator = function ($info) {
        var _this = this;
        return _create(IndexingIterator, 'init_elements', {}, _this);
    };
    /*Swift.(file).String.==infix(_:String,_:String)*/
    /*Swift.(file).Equatable.==infix(_:Self,_:Self)*/
    MIO_Mixin_String.infix_61_61 = function ($info, lhs, rhs) {
        return lhs == rhs;
    };
    /*Swift.(file).String.<infix(_:String,_:String)*/
    /*Swift.(file).Comparable.<infix(_:Self,_:Self)*/
    MIO_Mixin_String.infix_60 = function ($info, lhs, rhs) {
        return lhs < rhs;
    };
    /*Swift.(file).String.init(stringInterpolation:DefaultStringInterpolation)*/
    /*Swift.(file).ExpressibleByStringInterpolation.init(stringInterpolation:Self.StringInterpolation)*/
    MIO_Mixin_String.prototype.initStringInterpolation = function ($info, stringInterpolation) {
        var _this = this;
        return _cloneStruct(stringInterpolation.make({}));
        return;
    };
    /*Swift.(file).String.init(repeating:String,count:Int)*/
    /*Swift.(file).String.init(repeating:String,count:Int)*/
    MIO_Mixin_String.prototype.initRepeatingStringCountInt = function ($info, repeatedValue, count) {
        var _this = this;
        preconditionFileLine({}, function () { return Int.infix_62_61({}, count, 0); }, function () { return "Negative count not allowed"; }, '?3', '?3');
        if (!((Int.infix_62({}, count, 1)))) {
            return _cloneStruct((Int.infix_61_61({}, count, 0) ? "" : repeatedValue));
            return;
        }
        ;
        var result = _create(String, 'init', {});
        {
            var $generator_10 = _cloneStruct(Int.infix_46_46_60({}, 0, count).makeIterator({}));
            while (true) {
                var $ifLet0;
                if (!((($ifLet0 = $generator_10.next({ $setThis: function ($val) { return $generator_10 = $val; } })) || true) && $ifLet0 != null))
                    break;
                String.infix_43_61({}, { get: function () { return result; }, set: function ($val) { return result = $val; } }, repeatedValue);
            }
        }
        ;
        return _cloneStruct(result);
        return;
    };
    /*Swift.(file).String.isEmpty*/
    MIO_Mixin_String.prototype.isEmpty$get = function () {
        var _this = this;
        return (_.arg0 = _this.startIndex).constructor.infix_61_61({}, _.arg0, _this.endIndex);
    };
    Object.defineProperty(MIO_Mixin_String.prototype, "isEmpty", {
        get: function () { return this.isEmpty$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).String.hasPrefix(_:String)*/
    /*Swift.(file).StringProtocol.hasPrefix(_:String)*/
    MIO_Mixin_String.prototype.hasPrefix = function ($info, prefix) {
        throw 'unsupported method Swift.(file).String.hasPrefix(_:String) in ' + this.constructor.name;
    };
    /*Swift.(file).String.hasSuffix(_:String)*/
    /*Swift.(file).StringProtocol.hasSuffix(_:String)*/
    MIO_Mixin_String.prototype.hasSuffix = function ($info, suffix) {
        throw 'unsupported method Swift.(file).String.hasSuffix(_:String) in ' + this.constructor.name;
    };
    /*Swift.(file).String.init(_:T,radix:Int,uppercase:Bool)*/
    /*Swift.(file).String.init(_:T,radix:Int,uppercase:Bool)*/
    MIO_Mixin_String.prototype.initRadixIntUppercaseBool = function ($info, value, radix, uppercase) {
        var _this = this;
        return _cloneStruct(((function () { throw '!unclarifiedGeneric:T'; })()).prototype._descriptionRadixUppercase.call(value, {}, radix, uppercase));
        return;
    };
    /*Swift.(file).String.init(repeating:Character,count:Int)*/
    /*Swift.(file).RangeReplaceableCollection.init(repeating:Self.Element,count:Int)*/
    MIO_Mixin_String.prototype.initRepeatingCountInt = function ($info, repeatedValue, count) {
        var _this = this;
        _this.initRepeatingStringCountInt({}, repeatedValue._str, count);
        return;
    };
    /*Swift.(file).String.init(_:S)*/
    /*Swift.(file).LosslessStringConvertible.init(_:String)*/
    MIO_Mixin_String.prototype.initString = function ($info, other) {
        return String(other);
    };
    /*Swift.(file).String.init(_:S)*/
    /*Swift.(file).RangeReplaceableCollection.init(_:S)*/
    MIO_Mixin_String.prototype.initBuffer = function ($info, characters) {
        return String(other);
    };
    /*Swift.(file).String.reserveCapacity(_:Int)*/
    /*Swift.(file).RangeReplaceableCollection.reserveCapacity(_:Int)*/
    MIO_Mixin_String.prototype.reserveCapacity = function ($info, n) {
    };
    /*Swift.(file).String.append(_:String)*/
    /*Swift.(file).String.append(_:String)*/
    MIO_Mixin_String.prototype.append = function ($info, other) {
        throw 'unsupported method Swift.(file).String.append(_:String) in ' + this.constructor.name;
    };
    /*Swift.(file).String.append(_:Character)*/
    /*Swift.(file).RangeReplaceableCollection.append(_:Self.Element)*/
    MIO_Mixin_String.prototype.append = function ($info, c) {
        $info.$setThis(this + c);
    };
    /*Swift.(file).String.append(contentsOf:String)*/
    /*Swift.(file).String.append(contentsOf:String)*/
    MIO_Mixin_String.prototype.appendContentsOf = function ($info, newElements) {
        var _this = this;
        _this.append({ $setThis: function ($val) { return $info.$setThis(_this = _cloneStruct($val)); } }, newElements);
    };
    /*Swift.(file).String.append(contentsOf:Substring)*/
    /*Swift.(file).String.append(contentsOf:Substring)*/
    MIO_Mixin_String.prototype.appendContentsOf = function ($info, newElements) {
        throw 'unsupported method Swift.(file).String.append(contentsOf:Substring) in ' + this.constructor.name;
    };
    /*Swift.(file).String.append(contentsOf:S)*/
    /*Swift.(file).RangeReplaceableCollection.append(contentsOf:S)*/
    MIO_Mixin_String.prototype.appendContentsOf = function ($info, newElements) {
        var _this = this;
        var $ifLet0, str_1;
        if ((($ifLet0 = newElements) || true) && $ifLet0 != null && ((str_1 = $ifLet0) || true)) {
            _this.append({ $setThis: function ($val) { return $info.$setThis(_this = _cloneStruct($val)); } }, str_1);
            return;
        }
        ;
        var $ifLet2, substr_3;
        if ((($ifLet2 = newElements) || true) && $ifLet2 != null && ((substr_3 = $ifLet2) || true)) {
            _this.appendContentsOf({ $setThis: function ($val) { return $info.$setThis(_this = _cloneStruct($val)); } }, substr_3);
            return;
        }
        ;
        {
            var $c$generator_1 = newElements.makeIterator({});
            while (true) {
                var $ifLet4, c_5;
                if (!((($ifLet4 = $c$generator_1.next({ $setThis: function ($val) { return $c$generator_1 = $val; } })) || true) && $ifLet4 != null && ((c_5 = $ifLet4) || true)))
                    break;
                _this.append({ $setThis: function ($val) { return $info.$setThis(_this = _cloneStruct($val)); } }, c_5._str);
            }
        }
    };
    /*Swift.(file).String.replaceSubrange(_:Range<String.Index>,with:C)*/
    /*Swift.(file).RangeReplaceableCollection.replaceSubrange(_:Range<Self.Index>,with:C)*/
    MIO_Mixin_String.prototype.replaceSubrangeWith = function ($info, bounds, newElements) {
        throw 'unsupported method Swift.(file).String.replaceSubrange(_:Range<String.Index>,with:C) in ' + this.constructor.name;
    };
    /*Swift.(file).String.insert(_:Character,at:String.Index)*/
    /*Swift.(file).RangeReplaceableCollection.insert(_:Self.Element,at:Self.Index)*/
    MIO_Mixin_String.prototype.insertAt = function ($info, newElement, i) {
        var _this = this;
        _this.replaceSubrangeWith({ $setThis: function ($val) { return $info.$setThis(_this = _cloneStruct($val)); } }, String.Index.infix_46_46_60({}, i, i), newElement._str);
    };
    /*Swift.(file).String.insert(contentsOf:S,at:String.Index)*/
    /*Swift.(file).RangeReplaceableCollection.insert(contentsOf:S,at:Self.Index)*/
    MIO_Mixin_String.prototype.insertContentsOfAt = function ($info, newElements, i) {
        var _this = this;
        _this.replaceSubrangeWith({ $setThis: function ($val) { return $info.$setThis(_this = _cloneStruct($val)); } }, String.Index.infix_46_46_60({}, i, i), newElements);
    };
    /*Swift.(file).String.remove(at:String.Index)*/
    /*Swift.(file).RangeReplaceableCollection.remove(at:Self.Index)*/
    MIO_Mixin_String.prototype.removeAt = function ($info, i) {
        var _this = this;
        preconditionFileLine({}, function () { return Bool.prefix_33({}, _this.isEmpty); }, function () { return "Can't remove from an empty collection"; }, '?3', '?3');
        var result = _this.subscript$get({}, position);
        _this.replaceSubrangeWith({ $setThis: function ($val) { return $info.$setThis(_this = _cloneStruct($val)); } }, (_.arg0 = position).constructor.infix_46_46_60({}, _.arg0, _this.indexAfter({}, position)), _create(EmptyCollection, 'init', {}));
        return result;
    };
    /*Swift.(file).String.removeSubrange(_:Range<String.Index>)*/
    /*Swift.(file).RangeReplaceableCollection.removeSubrange(_:Range<Self.Index>)*/
    MIO_Mixin_String.prototype.removeSubrangeRange = function ($info, bounds) {
        var _this = this;
        _this.replaceSubrangeWith({ $setThis: function ($val) { return $info.$setThis(_this = _cloneStruct($val)); } }, bounds, _create(EmptyCollection, 'init', {}));
    };
    /*Swift.(file).String.removeAll(keepingCapacity:Bool)*/
    /*Swift.(file).RangeReplaceableCollection.removeAll(keepingCapacity:Bool)*/
    MIO_Mixin_String.prototype.removeAllKeepingCapacity = function ($info, keepCapacity) {
        var _this = this;
        if ((Bool.prefix_33({}, keepCapacity))) {
            $info.$setThis(_this = _cloneStruct(_create(_this.constructor, 'init', {})));
        }
        else {
            _this.replaceSubrangeWith({ $setThis: function ($val) { return $info.$setThis(_this = _cloneStruct($val)); } }, (_.arg0 = _this.startIndex).constructor.infix_46_46_60({}, _.arg0, _this.endIndex), _create(EmptyCollection, 'init', {}));
        }
    };
    /*Swift.(file).String.max(_:T,_:T)*/
    /*Swift.(file).String.max(_:T,_:T)*/
    MIO_Mixin_String.prototype.max = function ($info, x, y) {
        var _this = this;
        return /*dot_syntax_base_ignored*/ max({}, x, y);
    };
    /*Swift.(file).String.min(_:T,_:T)*/
    /*Swift.(file).String.min(_:T,_:T)*/
    MIO_Mixin_String.prototype.min = function ($info, x, y) {
        var _this = this;
        return /*dot_syntax_base_ignored*/ min({}, x, y);
    };
    /*Swift.(file).String.init(_:String.UnicodeScalarView)*/
    /*Swift.(file).String.init(_:String.UnicodeScalarView)*/
    MIO_Mixin_String.prototype.initStringUnicodeScalarView = function ($info, unicodeScalars) {
        throw 'unsupported method Swift.(file).String.init(_:String.UnicodeScalarView) in ' + this.constructor.name;
    };
    /*Swift.(file).String.unicodeScalars*/
    MIO_Mixin_String.prototype.unicodeScalars$get = function () {
        throw 'unsupported variable Swift.(file).String.unicodeScalars in ' + this.constructor.name;
    };
    Object.defineProperty(MIO_Mixin_String.prototype, "unicodeScalars", {
        get: function () { return this.unicodeScalars$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).String.utf16*/
    MIO_Mixin_String.prototype.utf16$get = function () {
        throw 'unsupported variable Swift.(file).String.utf16 in ' + this.constructor.name;
    };
    Object.defineProperty(MIO_Mixin_String.prototype, "utf16", {
        get: function () { return this.utf16$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).String.init(_:String.UTF16View)*/
    /*Swift.(file).String.init(_:String.UTF16View)*/
    MIO_Mixin_String.prototype.initStringUTF16View = function ($info, utf16) {
        throw 'unsupported method Swift.(file).String.init(_:String.UTF16View) in ' + this.constructor.name;
    };
    /*Swift.(file).String.utf8*/
    MIO_Mixin_String.prototype.utf8$get = function () {
        throw 'unsupported variable Swift.(file).String.utf8 in ' + this.constructor.name;
    };
    Object.defineProperty(MIO_Mixin_String.prototype, "utf8", {
        get: function () { return this.utf8$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).String.utf8CString*/
    MIO_Mixin_String.prototype.utf8CString$get = function () {
        throw 'unsupported variable Swift.(file).String.utf8CString in ' + this.constructor.name;
    };
    Object.defineProperty(MIO_Mixin_String.prototype, "utf8CString", {
        get: function () { return this.utf8CString$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).String.init(_:String.UTF8View)*/
    /*Swift.(file).String.init(_:String.UTF8View)*/
    MIO_Mixin_String.prototype.initStringUTF8View = function ($info, utf8) {
        throw 'unsupported method Swift.(file).String.init(_:String.UTF8View) in ' + this.constructor.name;
    };
    /*Swift.(file).String.init(_:Substring)*/
    /*Swift.(file).String.init(_:Substring)*/
    MIO_Mixin_String.prototype.initSubstring = function ($info, substring) {
        var _this = this;
        return _cloneStruct(String._fromSubstring({}, substring));
        return;
    };
    /*Swift.(file).String.init(_:Substring.UTF8View)*/
    /*Swift.(file).String.init(_:Substring.UTF8View)*/
    MIO_Mixin_String.prototype.initSubstringUTF8View = function ($info, codeUnits) {
        throw 'unsupported method Swift.(file).String.init(_:Substring.UTF8View) in ' + this.constructor.name;
    };
    /*Swift.(file).String.init(_:Substring.UTF16View)*/
    /*Swift.(file).String.init(_:Substring.UTF16View)*/
    MIO_Mixin_String.prototype.initSubstringUTF16View = function ($info, codeUnits) {
        throw 'unsupported method Swift.(file).String.init(_:Substring.UTF16View) in ' + this.constructor.name;
    };
    /*Swift.(file).String.init(_:Substring.UnicodeScalarView)*/
    /*Swift.(file).String.init(_:Substring.UnicodeScalarView)*/
    MIO_Mixin_String.prototype.initSubstringUnicodeScalarView = function ($info, content) {
        var _this = this;
        return _cloneStruct(_create(String, 'initSubstring', {}, _create(Substring, 'initSubstringUnicodeScalarView', {}, content)));
        return;
    };
    /*Swift.(file).String.subscript(_:Range<String.Index>)*/
    /*Swift.(file).BidirectionalCollection.subscript(_:Range<Self.Index>)*/
    /*Swift.(file).Collection.subscript(_:Range<Self.Index>)*/
    /*Swift.(file).RangeReplaceableCollection.subscript(_:Range<Self.Index>)*/
    MIO_Mixin_String.prototype.subscriptRange$get = function ($info, r) {
        var _this = this;
        _this._boundsCheck({}, r);
        return _create(Substring, 'initSlice', {}, _create(Slice, 'initBaseBoundsRange', {}, _this, r));
    };
    /*Swift.(file).String.subscript(_:Int)*/
    /*Swift.(file).String.subscript(_:Int)*/
    MIO_Mixin_String.prototype.subscript$get = function ($info, i) {
        return this[i];
    };
    /*Swift.(file).String.subscript(_:R)*/
    /*Swift.(file).String.subscript(_:R)*/
    MIO_Mixin_String.prototype.subscriptRange$get = function ($info, bounds) {
        return this.slice(bounds.lowerBound, bounds.upperBound);
    };
    /*Swift.(file).String.characters*/
    MIO_Mixin_String.prototype.characters$get = function () {
        var _this = this;
        return _this;
    };
    Object.defineProperty(MIO_Mixin_String.prototype, "characters", {
        get: function () { return this.characters$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).String.withMutableCharacters(_:(inout String) -> R)*/
    /*Swift.(file).String.withMutableCharacters(_:(inout String) -> R)*/
    MIO_Mixin_String.prototype.withMutableCharacters = function ($info, body) {
        var _this = this;
        return body({}, { get: function () { return _this; }, set: function ($val) { return $info.$setThis(_this = _cloneStruct($val)); } });
    };
    /*Swift.(file).String.init(describing:Subject)*/
    /*Swift.(file).String.init(describing:Subject)*/
    MIO_Mixin_String.prototype.initDescribing = function ($info, instance) {
        throw 'unsupported method Swift.(file).String.init(describing:Subject) in ' + this.constructor.name;
    };
    /*Swift.(file).String.init(describing:Subject)*/
    /*Swift.(file).String.init(describing:Subject)*/
    MIO_Mixin_String.prototype.initDescribing = function ($info, instance) {
        throw 'unsupported method Swift.(file).String.init(describing:Subject) in ' + this.constructor.name;
    };
    /*Swift.(file).String.init(describing:Subject)*/
    /*Swift.(file).String.init(describing:Subject)*/
    MIO_Mixin_String.prototype.initDescribing = function ($info, instance) {
        throw 'unsupported method Swift.(file).String.init(describing:Subject) in ' + this.constructor.name;
    };
    /*Swift.(file).String.init(describing:Subject)*/
    /*Swift.(file).String.init(describing:Subject)*/
    MIO_Mixin_String.prototype.initDescribing = function ($info, instance) {
        throw 'unsupported method Swift.(file).String.init(describing:Subject) in ' + this.constructor.name;
    };
    /*Swift.(file).String.init(reflecting:Subject)*/
    /*Swift.(file).String.init(reflecting:Subject)*/
    MIO_Mixin_String.prototype.initReflecting = function ($info, subject) {
        throw 'unsupported method Swift.(file).String.init(reflecting:Subject) in ' + this.constructor.name;
    };
    MIO_Mixin_String.prototype.init$vars = function () {
    };
    var _154, _155, _156, _157, _158, _159, _160;
    MIO_Mixin_String.$struct = true;
    MIO_Mixin_String.$mixin = true;
    MIO_Mixin_String.$infoAddress = '';
    MIO_Mixin_String.initValidatingUTF8UnsafePointer$failable = true;
    MIO_Mixin_String.Iterator = (_154 = /** @class */ (function () {
            function class_178() {
            }
            /*Swift.(file).String.Iterator.init(_:_StringGuts)*/
            /*Swift.(file).String.Iterator.init(_:_StringGuts)*/
            class_178.prototype.init_StringGuts = function ($info, guts) {
                throw 'unsupported method Swift.(file).String.Iterator.init(_:_StringGuts) in ' + this.constructor.name;
            };
            /*Swift.(file).String.Iterator.next()*/
            /*Swift.(file).IteratorProtocol.next()*/
            class_178.prototype.next = function ($info) {
                throw 'unsupported method Swift.(file).String.Iterator.next() in ' + this.constructor.name;
            };
            class_178.prototype.init$vars = function () {
            };
            return class_178;
        }()),
        _154.$struct = true,
        _154.$infoAddress = '',
        _154);
    MIO_Mixin_String.Index = (_155 = /** @class */ (function () {
            function class_179() {
            }
            /*Swift.(file).String.Index.init(_:UInt64)*/
            /*Swift.(file).String.Index.init(_:UInt64)*/
            class_179.prototype.initUInt64 = function ($info, raw) {
                var _this = this;
                _this._rawBits = raw;
                _this._invariantCheck({});
                return;
            };
            /*Swift.(file).String.Index.orderingValue*/
            class_179.prototype.orderingValue$get = function () {
                throw 'unsupported variable Swift.(file).String.Index.orderingValue in ' + this.constructor.name;
            };
            Object.defineProperty(class_179.prototype, "orderingValue", {
                get: function () { return this.orderingValue$get(); },
                enumerable: true,
                configurable: true
            });
            ;
            /*Swift.(file).String.Index.isZeroPosition*/
            class_179.prototype.isZeroPosition$get = function () {
                throw 'unsupported variable Swift.(file).String.Index.isZeroPosition in ' + this.constructor.name;
            };
            Object.defineProperty(class_179.prototype, "isZeroPosition", {
                get: function () { return this.isZeroPosition$get(); },
                enumerable: true,
                configurable: true
            });
            ;
            /*Swift.(file).String.Index.encodedOffset*/
            class_179.prototype.encodedOffset$get = function () {
                throw 'unsupported variable Swift.(file).String.Index.encodedOffset in ' + this.constructor.name;
            };
            Object.defineProperty(class_179.prototype, "encodedOffset", {
                get: function () { return this.encodedOffset$get(); },
                enumerable: true,
                configurable: true
            });
            ;
            /*Swift.(file).String.Index.transcodedOffset*/
            class_179.prototype.transcodedOffset$get = function () {
                throw 'unsupported variable Swift.(file).String.Index.transcodedOffset in ' + this.constructor.name;
            };
            Object.defineProperty(class_179.prototype, "transcodedOffset", {
                get: function () { return this.transcodedOffset$get(); },
                enumerable: true,
                configurable: true
            });
            ;
            /*Swift.(file).String.Index.characterStride*/
            class_179.prototype.characterStride$get = function () {
                throw 'unsupported variable Swift.(file).String.Index.characterStride in ' + this.constructor.name;
            };
            Object.defineProperty(class_179.prototype, "characterStride", {
                get: function () { return this.characterStride$get(); },
                enumerable: true,
                configurable: true
            });
            ;
            /*Swift.(file).String.Index.init(encodedOffset:Int,transcodedOffset:Int)*/
            /*Swift.(file).String.Index.init(encodedOffset:Int,transcodedOffset:Int)*/
            class_179.prototype.initEncodedOffsetIntTranscodedOffsetInt = function ($info, encodedOffset, transcodedOffset) {
                throw 'unsupported method Swift.(file).String.Index.init(encodedOffset:Int,transcodedOffset:Int) in ' + this.constructor.name;
            };
            /*Swift.(file).String.Index.init(encodedOffset:Int)*/
            /*Swift.(file).String.Index.init(encodedOffset:Int)*/
            class_179.prototype.initEncodedOffsetInt = function ($info, encodedOffset) {
                throw 'unsupported method Swift.(file).String.Index.init(encodedOffset:Int) in ' + this.constructor.name;
            };
            /*Swift.(file).String.Index.init(encodedOffset:Int,transcodedOffset:Int,characterStride:Int)*/
            /*Swift.(file).String.Index.init(encodedOffset:Int,transcodedOffset:Int,characterStride:Int)*/
            class_179.prototype.initEncodedOffsetIntTranscodedOffsetIntCharacterStrideInt = function ($info, encodedOffset, transcodedOffset, characterStride) {
                throw 'unsupported method Swift.(file).String.Index.init(encodedOffset:Int,transcodedOffset:Int,characterStride:Int) in ' + this.constructor.name;
            };
            /*Swift.(file).String.Index.init(encodedOffset:Int,characterStride:Int)*/
            /*Swift.(file).String.Index.init(encodedOffset:Int,characterStride:Int)*/
            class_179.prototype.initEncodedOffsetIntCharacterStrideInt = function ($info, pos, char) {
                throw 'unsupported method Swift.(file).String.Index.init(encodedOffset:Int,characterStride:Int) in ' + this.constructor.name;
            };
            /*Swift.(file).String.Index.strippingTranscoding*/
            class_179.prototype.strippingTranscoding$get = function () {
                throw 'unsupported variable Swift.(file).String.Index.strippingTranscoding in ' + this.constructor.name;
            };
            Object.defineProperty(class_179.prototype, "strippingTranscoding", {
                get: function () { return this.strippingTranscoding$get(); },
                enumerable: true,
                configurable: true
            });
            ;
            /*Swift.(file).String.Index.nextEncoded*/
            class_179.prototype.nextEncoded$get = function () {
                throw 'unsupported variable Swift.(file).String.Index.nextEncoded in ' + this.constructor.name;
            };
            Object.defineProperty(class_179.prototype, "nextEncoded", {
                get: function () { return this.nextEncoded$get(); },
                enumerable: true,
                configurable: true
            });
            ;
            /*Swift.(file).String.Index.priorEncoded*/
            class_179.prototype.priorEncoded$get = function () {
                throw 'unsupported variable Swift.(file).String.Index.priorEncoded in ' + this.constructor.name;
            };
            Object.defineProperty(class_179.prototype, "priorEncoded", {
                get: function () { return this.priorEncoded$get(); },
                enumerable: true,
                configurable: true
            });
            ;
            /*Swift.(file).String.Index.nextTranscoded*/
            class_179.prototype.nextTranscoded$get = function () {
                throw 'unsupported variable Swift.(file).String.Index.nextTranscoded in ' + this.constructor.name;
            };
            Object.defineProperty(class_179.prototype, "nextTranscoded", {
                get: function () { return this.nextTranscoded$get(); },
                enumerable: true,
                configurable: true
            });
            ;
            /*Swift.(file).String.Index.priorTranscoded*/
            class_179.prototype.priorTranscoded$get = function () {
                throw 'unsupported variable Swift.(file).String.Index.priorTranscoded in ' + this.constructor.name;
            };
            Object.defineProperty(class_179.prototype, "priorTranscoded", {
                get: function () { return this.priorTranscoded$get(); },
                enumerable: true,
                configurable: true
            });
            ;
            /*Swift.(file).String.Index.encoded(offsetBy:Int)*/
            /*Swift.(file).String.Index.encoded(offsetBy:Int)*/
            class_179.prototype.encodedOffsetBy = function ($info, n) {
                throw 'unsupported method Swift.(file).String.Index.encoded(offsetBy:Int) in ' + this.constructor.name;
            };
            /*Swift.(file).String.Index.transcoded(withOffset:Int)*/
            /*Swift.(file).String.Index.transcoded(withOffset:Int)*/
            class_179.prototype.transcodedWithOffset = function ($info, n) {
                throw 'unsupported method Swift.(file).String.Index.transcoded(withOffset:Int) in ' + this.constructor.name;
            };
            /*Swift.(file).String.Index.==infix(_:String.Index,_:String.Index)*/
            /*Swift.(file).Equatable.==infix(_:Self,_:Self)*/
            class_179.infix_61_61 = function ($info, lhs, rhs) {
                return lhs == rhs;
            };
            /*Swift.(file).String.Index.<infix(_:String.Index,_:String.Index)*/
            /*Swift.(file).Comparable.<infix(_:Self,_:Self)*/
            class_179.infix_60 = function ($info, lhs, rhs) {
                return lhs < rhs;
            };
            /*Swift.(file).String.Index.hash(into:Hasher)*/
            /*Swift.(file).Hashable.hash(into:Hasher)*/
            class_179.prototype.hashInto = function ($info, hasher$inout) {
                throw 'unsupported method Swift.(file).String.Index.hash(into:Hasher) in ' + this.constructor.name;
            };
            /*Swift.(file).String.Index.hashValue*/
            class_179.prototype.hashValue$get = function () {
                throw 'unsupported variable Swift.(file).String.Index.hashValue in ' + this.constructor.name;
            };
            Object.defineProperty(class_179.prototype, "hashValue", {
                get: function () { return this.hashValue$get(); },
                enumerable: true,
                configurable: true
            });
            ;
            /*Swift.(file).String.Index.init(_:String.Index,within:String)*/
            /*Swift.(file).String.Index.init(_:String.Index,within:String)*/
            class_179.prototype.initStringIndexWithinString = function ($info, sourcePosition, target) {
                throw 'unsupported method Swift.(file).String.Index.init(_:String.Index,within:String) in ' + this.constructor.name;
            };
            /*Swift.(file).String.Index.samePosition(in:String.UTF8View)*/
            /*Swift.(file).String.Index.samePosition(in:String.UTF8View)*/
            class_179.prototype.samePositionIn = function ($info, utf8) {
                var _this = this;
                return _create(String.UTF8View.Index, 'initStringIndexWithinStringUTF8View', {}, _this, utf8);
            };
            /*Swift.(file).String.Index.samePosition(in:String.UTF16View)*/
            /*Swift.(file).String.Index.samePosition(in:String.UTF16View)*/
            class_179.prototype.samePositionIn = function ($info, utf16) {
                var _this = this;
                return _create(String.UTF16View.Index, 'initStringIndexWithinStringUTF16View', {}, _this, utf16);
            };
            /*Swift.(file).String.Index.init(_:String.Index,within:String.UnicodeScalarView)*/
            /*Swift.(file).String.Index.init(_:String.Index,within:String.UnicodeScalarView)*/
            class_179.prototype.initStringIndexWithinStringUnicodeScalarView = function ($info, sourcePosition, unicodeScalars) {
                throw 'unsupported method Swift.(file).String.Index.init(_:String.Index,within:String.UnicodeScalarView) in ' + this.constructor.name;
            };
            /*Swift.(file).String.Index.samePosition(in:String)*/
            /*Swift.(file).String.Index.samePosition(in:String)*/
            class_179.prototype.samePositionIn = function ($info, characters) {
                throw 'unsupported method Swift.(file).String.Index.samePosition(in:String) in ' + this.constructor.name;
            };
            /*Swift.(file).String.Index.init(_:String.Index,within:String.UTF16View)*/
            /*Swift.(file).String.Index.init(_:String.Index,within:String.UTF16View)*/
            class_179.prototype.initStringIndexWithinStringUTF16View = function ($info, idx, target) {
                throw 'unsupported method Swift.(file).String.Index.init(_:String.Index,within:String.UTF16View) in ' + this.constructor.name;
            };
            /*Swift.(file).String.Index.samePosition(in:String.UnicodeScalarView)*/
            /*Swift.(file).String.Index.samePosition(in:String.UnicodeScalarView)*/
            class_179.prototype.samePositionIn = function ($info, unicodeScalars) {
                throw 'unsupported method Swift.(file).String.Index.samePosition(in:String.UnicodeScalarView) in ' + this.constructor.name;
            };
            /*Swift.(file).String.Index.init(_:String.Index,within:String.UTF8View)*/
            /*Swift.(file).String.Index.init(_:String.Index,within:String.UTF8View)*/
            class_179.prototype.initStringIndexWithinStringUTF8View = function ($info, idx, target) {
                throw 'unsupported method Swift.(file).String.Index.init(_:String.Index,within:String.UTF8View) in ' + this.constructor.name;
            };
            class_179.prototype.init$vars = function () {
            };
            return class_179;
        }()),
        _155.$struct = true,
        _155.$infoAddress = '',
        _155.initStringIndexWithinString$failable = true,
        _155.initStringIndexWithinStringUnicodeScalarView$failable = true,
        _155.initStringIndexWithinStringUTF16View$failable = true,
        _155.initStringIndexWithinStringUTF8View$failable = true,
        _155);
    MIO_Mixin_String.UnicodeScalarView = (_156 = /** @class */ (function () {
            function class_180() {
            }
            /*Swift.(file).String.UnicodeScalarView.init(_:_StringGuts)*/
            /*Swift.(file).String.UnicodeScalarView.init(_:_StringGuts)*/
            class_180.prototype.init_StringGuts = function ($info, _guts) {
                throw 'unsupported method Swift.(file).String.UnicodeScalarView.init(_:_StringGuts) in ' + this.constructor.name;
            };
            /*Swift.(file).String.UnicodeScalarView.startIndex*/
            class_180.prototype.startIndex$get = function () {
                throw 'unsupported variable Swift.(file).String.UnicodeScalarView.startIndex in ' + this.constructor.name;
            };
            Object.defineProperty(class_180.prototype, "startIndex", {
                get: function () { return this.startIndex$get(); },
                enumerable: true,
                configurable: true
            });
            ;
            /*Swift.(file).String.UnicodeScalarView.endIndex*/
            class_180.prototype.endIndex$get = function () {
                throw 'unsupported variable Swift.(file).String.UnicodeScalarView.endIndex in ' + this.constructor.name;
            };
            Object.defineProperty(class_180.prototype, "endIndex", {
                get: function () { return this.endIndex$get(); },
                enumerable: true,
                configurable: true
            });
            ;
            /*Swift.(file).String.UnicodeScalarView.index(after:String.UnicodeScalarView.Index)*/
            /*Swift.(file).BidirectionalCollection.index(after:Self.Index)*/
            /*Swift.(file).Collection.index(after:Self.Index)*/
            class_180.prototype.indexAfter = function ($info, i) {
                throw 'unsupported method Swift.(file).String.UnicodeScalarView.index(after:String.UnicodeScalarView.Index) in ' + this.constructor.name;
            };
            /*Swift.(file).String.UnicodeScalarView.index(before:String.UnicodeScalarView.Index)*/
            /*Swift.(file).BidirectionalCollection.index(before:Self.Index)*/
            class_180.prototype.indexBefore = function ($info, i) {
                throw 'unsupported method Swift.(file).String.UnicodeScalarView.index(before:String.UnicodeScalarView.Index) in ' + this.constructor.name;
            };
            /*Swift.(file).String.UnicodeScalarView.subscript(_:String.UnicodeScalarView.Index)*/
            /*Swift.(file).BidirectionalCollection.subscript(_:Self.Index)*/
            /*Swift.(file).Collection.subscript(_:Self.Index)*/
            /*Swift.(file).RangeReplaceableCollection.subscript(_:Self.Index)*/
            class_180.prototype.subscript$get = function ($info, position) {
                throw 'unsupported method Swift.(file).String.UnicodeScalarView.subscript(_:String.UnicodeScalarView.Index) in ' + this.constructor.name;
            };
            /*Swift.(file).String.UnicodeScalarView.makeIterator()*/
            /*Swift.(file).Collection.makeIterator()*/
            /*Swift.(file).Sequence.makeIterator()*/
            class_180.prototype.makeIterator = function ($info) {
                var _this = this;
                return _create(IndexingIterator, 'init_elements', {}, _this);
            };
            /*Swift.(file).String.UnicodeScalarView.description*/
            class_180.prototype.description$get = function () {
                throw 'unsupported variable Swift.(file).String.UnicodeScalarView.description in ' + this.constructor.name;
            };
            Object.defineProperty(class_180.prototype, "description", {
                get: function () { return this.description$get(); },
                enumerable: true,
                configurable: true
            });
            ;
            /*Swift.(file).String.UnicodeScalarView.debugDescription*/
            class_180.prototype.debugDescription$get = function () {
                throw 'unsupported variable Swift.(file).String.UnicodeScalarView.debugDescription in ' + this.constructor.name;
            };
            Object.defineProperty(class_180.prototype, "debugDescription", {
                get: function () { return this.debugDescription$get(); },
                enumerable: true,
                configurable: true
            });
            ;
            /*Swift.(file).String.UnicodeScalarView.init()*/
            /*Swift.(file).RangeReplaceableCollection.init()*/
            class_180.prototype.init = function ($info) {
                throw 'unsupported method Swift.(file).String.UnicodeScalarView.init() in ' + this.constructor.name;
            };
            /*Swift.(file).String.UnicodeScalarView.reserveCapacity(_:Int)*/
            /*Swift.(file).RangeReplaceableCollection.reserveCapacity(_:Int)*/
            class_180.prototype.reserveCapacity = function ($info, n) {
            };
            /*Swift.(file).String.UnicodeScalarView.append(_:Unicode.Scalar)*/
            /*Swift.(file).RangeReplaceableCollection.append(_:Self.Element)*/
            class_180.prototype.append = function ($info, c) {
                var _this = this;
                _this.insertAt({ $setThis: function ($val) { return $info.$setThis(_this = _cloneStruct($val)); } }, newElement, _this.endIndex);
            };
            /*Swift.(file).String.UnicodeScalarView.append(contentsOf:S)*/
            /*Swift.(file).RangeReplaceableCollection.append(contentsOf:S)*/
            class_180.prototype.appendContentsOf = function ($info, newElements) {
                var _this = this;
                var approximateCapacity = Int.infix_43({}, _this.count, numericCast({ T: Int, U: Int }, newElements.underestimatedCount));
                {
                    var $element$generator_17 = newElements.makeIterator({});
                    while (true) {
                        var $ifLet0, _element_1;
                        if (!((($ifLet0 = $element$generator_17.next({ $setThis: function ($val) { return $element$generator_17 = $val; } })) || true) && $ifLet0 != null && ((_element_1 = $ifLet0) || true)))
                            break;
                        _this.append({ $setThis: function ($val) { return $info.$setThis(_this = _cloneStruct($val)); } }, _element_1);
                    }
                }
            };
            /*Swift.(file).String.UnicodeScalarView.replaceSubrange(_:Range<String.UnicodeScalarView.Index>,with:C)*/
            /*Swift.(file).RangeReplaceableCollection.replaceSubrange(_:Range<Self.Index>,with:C)*/
            class_180.prototype.replaceSubrangeWith = function ($info, bounds, newElements) {
                throw 'unsupported method Swift.(file).String.UnicodeScalarView.replaceSubrange(_:Range<String.UnicodeScalarView.Index>,with:C) in ' + this.constructor.name;
            };
            /*Swift.(file).String.UnicodeScalarView.customMirror*/
            class_180.prototype.customMirror$get = function () {
                throw 'unsupported variable Swift.(file).String.UnicodeScalarView.customMirror in ' + this.constructor.name;
            };
            Object.defineProperty(class_180.prototype, "customMirror", {
                get: function () { return this.customMirror$get(); },
                enumerable: true,
                configurable: true
            });
            ;
            /*Swift.(file).String.UnicodeScalarView.subscript(_:Range<String.UnicodeScalarView.Index>)*/
            /*Swift.(file).BidirectionalCollection.subscript(_:Range<Self.Index>)*/
            /*Swift.(file).Collection.subscript(_:Range<Self.Index>)*/
            /*Swift.(file).RangeReplaceableCollection.subscript(_:Range<Self.Index>)*/
            class_180.prototype.subscriptRange$get = function ($info, r) {
                var _this = this;
                return _create(Slice, 'initBaseBoundsRange', {}, _this, bounds);
            };
            /*Swift.(file).String.UnicodeScalarView.customPlaygroundQuickLook*/
            class_180.prototype.customPlaygroundQuickLook$get = function () {
                var _this = this;
                return _PlaygroundQuickLook._text({}, _this.description);
            };
            Object.defineProperty(class_180.prototype, "customPlaygroundQuickLook", {
                get: function () { return this.customPlaygroundQuickLook$get(); },
                enumerable: true,
                configurable: true
            });
            ;
            /*Swift.(file).String.UnicodeScalarView.subscript(_:Range<String.UnicodeScalarView.Index>)*/
            /*Swift.(file).String.UnicodeScalarView.subscript(_:Range<String.UnicodeScalarView.Index>)*/
            class_180.prototype.subscript$get = function ($info, bounds) {
                throw 'unsupported method Swift.(file).String.UnicodeScalarView.subscript(_:Range<String.UnicodeScalarView.Index>) in ' + this.constructor.name;
            };
            /*Swift.(file).String.UnicodeScalarView.subscript(_:ClosedRange<String.UnicodeScalarView.Index>)*/
            /*Swift.(file).String.UnicodeScalarView.subscript(_:ClosedRange<String.UnicodeScalarView.Index>)*/
            class_180.prototype.subscript$get = function ($info, bounds) {
                throw 'unsupported method Swift.(file).String.UnicodeScalarView.subscript(_:ClosedRange<String.UnicodeScalarView.Index>) in ' + this.constructor.name;
            };
            class_180.prototype.init$vars = function () {
            };
            return class_180;
        }()),
        _156.$struct = true,
        _156.$infoAddress = '',
        _156.Iterator = (_157 = /** @class */ (function () {
                function class_181() {
                }
                /*Swift.(file).String.UnicodeScalarView.Iterator.init(_:_StringGuts)*/
                /*Swift.(file).String.UnicodeScalarView.Iterator.init(_:_StringGuts)*/
                class_181.prototype.init_StringGuts = function ($info, guts) {
                    throw 'unsupported method Swift.(file).String.UnicodeScalarView.Iterator.init(_:_StringGuts) in ' + this.constructor.name;
                };
                /*Swift.(file).String.UnicodeScalarView.Iterator.next()*/
                /*Swift.(file).IteratorProtocol.next()*/
                class_181.prototype.next = function ($info) {
                    throw 'unsupported method Swift.(file).String.UnicodeScalarView.Iterator.next() in ' + this.constructor.name;
                };
                class_181.prototype.init$vars = function () {
                };
                return class_181;
            }()),
            _157.$struct = true,
            _157.$infoAddress = '',
            _157),
        _156);
    MIO_Mixin_String.UTF16View = (_158 = /** @class */ (function () {
            function class_182() {
            }
            /*Swift.(file).String.UTF16View.init(_:_StringGuts)*/
            /*Swift.(file).String.UTF16View.init(_:_StringGuts)*/
            class_182.prototype.init_StringGuts = function ($info, guts) {
                throw 'unsupported method Swift.(file).String.UTF16View.init(_:_StringGuts) in ' + this.constructor.name;
            };
            /*Swift.(file).String.UTF16View.startIndex*/
            class_182.prototype.startIndex$get = function () {
                throw 'unsupported variable Swift.(file).String.UTF16View.startIndex in ' + this.constructor.name;
            };
            Object.defineProperty(class_182.prototype, "startIndex", {
                get: function () { return this.startIndex$get(); },
                enumerable: true,
                configurable: true
            });
            ;
            /*Swift.(file).String.UTF16View.endIndex*/
            class_182.prototype.endIndex$get = function () {
                throw 'unsupported variable Swift.(file).String.UTF16View.endIndex in ' + this.constructor.name;
            };
            Object.defineProperty(class_182.prototype, "endIndex", {
                get: function () { return this.endIndex$get(); },
                enumerable: true,
                configurable: true
            });
            ;
            /*Swift.(file).String.UTF16View.index(after:String.UTF16View.Index)*/
            /*Swift.(file).BidirectionalCollection.index(after:Self.Index)*/
            /*Swift.(file).Collection.index(after:Self.Index)*/
            class_182.prototype.indexAfter = function ($info, i) {
                throw 'unsupported method Swift.(file).String.UTF16View.index(after:String.UTF16View.Index) in ' + this.constructor.name;
            };
            /*Swift.(file).String.UTF16View.index(before:String.UTF16View.Index)*/
            /*Swift.(file).BidirectionalCollection.index(before:Self.Index)*/
            class_182.prototype.indexBefore = function ($info, i) {
                throw 'unsupported method Swift.(file).String.UTF16View.index(before:String.UTF16View.Index) in ' + this.constructor.name;
            };
            /*Swift.(file).String.UTF16View.index(_:String.UTF16View.Index,offsetBy:Int)*/
            /*Swift.(file).BidirectionalCollection.index(_:Self.Index,offsetBy:Int)*/
            /*Swift.(file).Collection.index(_:Self.Index,offsetBy:Int)*/
            class_182.prototype.indexOffsetBy = function ($info, i, n) {
                var _this = this;
                return _this._indexOffsetBy({}, i, distance);
            };
            /*Swift.(file).String.UTF16View.index(_:String.UTF16View.Index,offsetBy:Int,limitedBy:String.UTF16View.Index)*/
            /*Swift.(file).BidirectionalCollection.index(_:Self.Index,offsetBy:Int,limitedBy:Self.Index)*/
            /*Swift.(file).Collection.index(_:Self.Index,offsetBy:Int,limitedBy:Self.Index)*/
            class_182.prototype.indexOffsetByLimitedBy = function ($info, i, n, limit) {
                var _this = this;
                return _this._indexOffsetByLimitedBy({}, i, distance, limit);
            };
            /*Swift.(file).String.UTF16View.distance(from:String.UTF16View.Index,to:String.UTF16View.Index)*/
            /*Swift.(file).BidirectionalCollection.distance(from:Self.Index,to:Self.Index)*/
            /*Swift.(file).Collection.distance(from:Self.Index,to:Self.Index)*/
            class_182.prototype.distanceFromTo = function ($info, start, end) {
                var _this = this;
                return _this._distanceFromTo({}, start, end);
            };
            /*Swift.(file).String.UTF16View.count*/
            class_182.prototype.count$get = function () {
                var _this = this;
                return _this.distanceFromTo({}, _this.startIndex, _this.endIndex);
            };
            Object.defineProperty(class_182.prototype, "count", {
                get: function () { return this.count$get(); },
                enumerable: true,
                configurable: true
            });
            ;
            /*Swift.(file).String.UTF16View.subscript(_:String.UTF16View.Index)*/
            /*Swift.(file).BidirectionalCollection.subscript(_:Self.Index)*/
            /*Swift.(file).Collection.subscript(_:Self.Index)*/
            class_182.prototype.subscript$get = function ($info, i) {
                throw 'unsupported method Swift.(file).String.UTF16View.subscript(_:String.UTF16View.Index) in ' + this.constructor.name;
            };
            /*Swift.(file).String.UTF16View.makeIterator()*/
            /*Swift.(file).Collection.makeIterator()*/
            /*Swift.(file).Sequence.makeIterator()*/
            class_182.prototype.makeIterator = function ($info) {
                var _this = this;
                return _create(IndexingIterator, 'init_elements', {}, _this);
            };
            /*Swift.(file).String.UTF16View.description*/
            class_182.prototype.description$get = function () {
                throw 'unsupported variable Swift.(file).String.UTF16View.description in ' + this.constructor.name;
            };
            Object.defineProperty(class_182.prototype, "description", {
                get: function () { return this.description$get(); },
                enumerable: true,
                configurable: true
            });
            ;
            /*Swift.(file).String.UTF16View.debugDescription*/
            class_182.prototype.debugDescription$get = function () {
                throw 'unsupported variable Swift.(file).String.UTF16View.debugDescription in ' + this.constructor.name;
            };
            Object.defineProperty(class_182.prototype, "debugDescription", {
                get: function () { return this.debugDescription$get(); },
                enumerable: true,
                configurable: true
            });
            ;
            /*Swift.(file).String.UTF16View.customMirror*/
            class_182.prototype.customMirror$get = function () {
                throw 'unsupported variable Swift.(file).String.UTF16View.customMirror in ' + this.constructor.name;
            };
            Object.defineProperty(class_182.prototype, "customMirror", {
                get: function () { return this.customMirror$get(); },
                enumerable: true,
                configurable: true
            });
            ;
            /*Swift.(file).String.UTF16View.subscript(_:Range<String.UTF16View.Index>)*/
            /*Swift.(file).BidirectionalCollection.subscript(_:Range<Self.Index>)*/
            /*Swift.(file).Collection.subscript(_:Range<Self.Index>)*/
            class_182.prototype.subscriptRange$get = function ($info, r) {
                var _this = this;
                return _create(Slice, 'initBaseBoundsRange', {}, _this, bounds);
            };
            /*Swift.(file).String.UTF16View.customPlaygroundQuickLook*/
            class_182.prototype.customPlaygroundQuickLook$get = function () {
                var _this = this;
                return _PlaygroundQuickLook._text({}, _this.description);
            };
            Object.defineProperty(class_182.prototype, "customPlaygroundQuickLook", {
                get: function () { return this.customPlaygroundQuickLook$get(); },
                enumerable: true,
                configurable: true
            });
            ;
            class_182.prototype.init$vars = function () {
            };
            return class_182;
        }()),
        _158.$struct = true,
        _158.$infoAddress = '',
        _158.Iterator = (_159 = /** @class */ (function () {
                function class_183() {
                }
                /*Swift.(file).String.UTF16View.Iterator.init(_:_StringGuts)*/
                /*Swift.(file).String.UTF16View.Iterator.init(_:_StringGuts)*/
                class_183.prototype.init_StringGuts = function ($info, guts) {
                    throw 'unsupported method Swift.(file).String.UTF16View.Iterator.init(_:_StringGuts) in ' + this.constructor.name;
                };
                /*Swift.(file).String.UTF16View.Iterator.next()*/
                /*Swift.(file).IteratorProtocol.next()*/
                class_183.prototype.next = function ($info) {
                    throw 'unsupported method Swift.(file).String.UTF16View.Iterator.next() in ' + this.constructor.name;
                };
                class_183.prototype.init$vars = function () {
                };
                return class_183;
            }()),
            _159.$struct = true,
            _159.$infoAddress = '',
            _159),
        _158);
    MIO_Mixin_String.UTF8View = (_160 = /** @class */ (function () {
            function class_184() {
            }
            /*Swift.(file).String.UTF8View.init(_:_StringGuts)*/
            /*Swift.(file).String.UTF8View.init(_:_StringGuts)*/
            class_184.prototype.init_StringGuts = function ($info, guts) {
                throw 'unsupported method Swift.(file).String.UTF8View.init(_:_StringGuts) in ' + this.constructor.name;
            };
            /*Swift.(file).String.UTF8View.startIndex*/
            class_184.prototype.startIndex$get = function () {
                throw 'unsupported variable Swift.(file).String.UTF8View.startIndex in ' + this.constructor.name;
            };
            Object.defineProperty(class_184.prototype, "startIndex", {
                get: function () { return this.startIndex$get(); },
                enumerable: true,
                configurable: true
            });
            ;
            /*Swift.(file).String.UTF8View.endIndex*/
            class_184.prototype.endIndex$get = function () {
                throw 'unsupported variable Swift.(file).String.UTF8View.endIndex in ' + this.constructor.name;
            };
            Object.defineProperty(class_184.prototype, "endIndex", {
                get: function () { return this.endIndex$get(); },
                enumerable: true,
                configurable: true
            });
            ;
            /*Swift.(file).String.UTF8View.index(after:String.UTF8View.Index)*/
            /*Swift.(file).Collection.index(after:Self.Index)*/
            /*Swift.(file).BidirectionalCollection.index(after:Self.Index)*/
            class_184.prototype.indexAfter = function ($info, i) {
                throw 'unsupported method Swift.(file).String.UTF8View.index(after:String.UTF8View.Index) in ' + this.constructor.name;
            };
            /*Swift.(file).String.UTF8View.index(before:String.UTF8View.Index)*/
            /*Swift.(file).BidirectionalCollection.index(before:Self.Index)*/
            class_184.prototype.indexBefore = function ($info, i) {
                throw 'unsupported method Swift.(file).String.UTF8View.index(before:String.UTF8View.Index) in ' + this.constructor.name;
            };
            /*Swift.(file).String.UTF8View.index(_:String.UTF8View.Index,offsetBy:Int)*/
            /*Swift.(file).Collection.index(_:Self.Index,offsetBy:Int)*/
            /*Swift.(file).BidirectionalCollection.index(_:Self.Index,offsetBy:Int)*/
            class_184.prototype.indexOffsetBy = function ($info, i, n) {
                var _this = this;
                return _this._advanceForwardBy({}, i, distance);
            };
            /*Swift.(file).String.UTF8View.index(_:String.UTF8View.Index,offsetBy:Int,limitedBy:String.UTF8View.Index)*/
            /*Swift.(file).Collection.index(_:Self.Index,offsetBy:Int,limitedBy:Self.Index)*/
            /*Swift.(file).BidirectionalCollection.index(_:Self.Index,offsetBy:Int,limitedBy:Self.Index)*/
            class_184.prototype.indexOffsetByLimitedBy = function ($info, i, n, limit) {
                var _this = this;
                return _this._advanceForwardByLimitedBy({}, i, distance, limit);
            };
            /*Swift.(file).String.UTF8View.distance(from:String.UTF8View.Index,to:String.UTF8View.Index)*/
            /*Swift.(file).Collection.distance(from:Self.Index,to:Self.Index)*/
            /*Swift.(file).BidirectionalCollection.distance(from:Self.Index,to:Self.Index)*/
            class_184.prototype.distanceFromTo = function ($info, i, j) {
                var _this = this;
                preconditionFileLine({}, function () { return (_.arg0 = start).constructor.infix_60_61({}, _.arg0, end); }, function () { return "Only BidirectionalCollections can have end come before start"; }, '?3', '?3');
                var start_dupl = start;
                var count = 0;
                while (true) {
                    if (!(((_.arg1 = start_dupl).constructor.infix_33_61({}, _.arg1, end))))
                        break;
                    count = Int.infix_43({}, count, 1);
                    _this.formIndexAfter({}, { get: function () { return start_dupl; }, set: function ($val) { return start_dupl = $val; } });
                }
                ;
                return count;
            };
            /*Swift.(file).String.UTF8View.subscript(_:String.UTF8View.Index)*/
            /*Swift.(file).Collection.subscript(_:Self.Index)*/
            /*Swift.(file).BidirectionalCollection.subscript(_:Self.Index)*/
            class_184.prototype.subscript$get = function ($info, i) {
                throw 'unsupported method Swift.(file).String.UTF8View.subscript(_:String.UTF8View.Index) in ' + this.constructor.name;
            };
            /*Swift.(file).String.UTF8View.description*/
            class_184.prototype.description$get = function () {
                throw 'unsupported variable Swift.(file).String.UTF8View.description in ' + this.constructor.name;
            };
            Object.defineProperty(class_184.prototype, "description", {
                get: function () { return this.description$get(); },
                enumerable: true,
                configurable: true
            });
            ;
            /*Swift.(file).String.UTF8View.debugDescription*/
            class_184.prototype.debugDescription$get = function () {
                throw 'unsupported variable Swift.(file).String.UTF8View.debugDescription in ' + this.constructor.name;
            };
            Object.defineProperty(class_184.prototype, "debugDescription", {
                get: function () { return this.debugDescription$get(); },
                enumerable: true,
                configurable: true
            });
            ;
            /*Swift.(file).String.UTF8View.count*/
            class_184.prototype.count$get = function () {
                var _this = this;
                return _this.distanceFromTo({}, _this.startIndex, _this.endIndex);
            };
            Object.defineProperty(class_184.prototype, "count", {
                get: function () { return this.count$get(); },
                enumerable: true,
                configurable: true
            });
            ;
            /*Swift.(file).String.UTF8View.customMirror*/
            class_184.prototype.customMirror$get = function () {
                throw 'unsupported variable Swift.(file).String.UTF8View.customMirror in ' + this.constructor.name;
            };
            Object.defineProperty(class_184.prototype, "customMirror", {
                get: function () { return this.customMirror$get(); },
                enumerable: true,
                configurable: true
            });
            ;
            /*Swift.(file).String.UTF8View.subscript(_:Range<String.UTF8View.Index>)*/
            /*Swift.(file).Collection.subscript(_:Range<Self.Index>)*/
            /*Swift.(file).BidirectionalCollection.subscript(_:Range<Self.Index>)*/
            class_184.prototype.subscriptRange$get = function ($info, r) {
                var _this = this;
                return _create(Slice, 'initBaseBoundsRange', {}, _this, bounds);
            };
            /*Swift.(file).String.UTF8View.withContiguousStorageIfAvailable(_:(UnsafeBufferPointer<String.UTF8View.Element>) throws -> R)*/
            /*Swift.(file).Sequence.withContiguousStorageIfAvailable(_:(UnsafeBufferPointer<Self.Element>) throws -> R)*/
            class_184.prototype.withContiguousStorageIfAvailable = function ($info, body) {
                var _this = this;
                return null;
            };
            /*Swift.(file).String.UTF8View.customPlaygroundQuickLook*/
            class_184.prototype.customPlaygroundQuickLook$get = function () {
                var _this = this;
                return _PlaygroundQuickLook._text({}, _this.description);
            };
            Object.defineProperty(class_184.prototype, "customPlaygroundQuickLook", {
                get: function () { return this.customPlaygroundQuickLook$get(); },
                enumerable: true,
                configurable: true
            });
            ;
            class_184.prototype.init$vars = function () {
            };
            return class_184;
        }()),
        _160.$struct = true,
        _160.$infoAddress = '',
        _160);
    MIO_Mixin_String.initSubstringUTF8View$failable = true;
    MIO_Mixin_String.initSubstringUTF16View$failable = true;
    return MIO_Mixin_String;
}());
if (typeof IteratorProtocol$implementation != 'undefined')
    _mixin(MIO_Mixin_String.Iterator, IteratorProtocol$implementation, false);
if (typeof Equatable$implementation != 'undefined')
    _mixin(MIO_Mixin_String.Index, Equatable$implementation, false);
if (typeof Comparable$implementation != 'undefined')
    _mixin(MIO_Mixin_String.Index, Comparable$implementation, false);
if (typeof Hashable$implementation != 'undefined')
    _mixin(MIO_Mixin_String.Index, Hashable$implementation, false);
if (typeof IteratorProtocol$implementation != 'undefined')
    _mixin(MIO_Mixin_String.UnicodeScalarView.Iterator, IteratorProtocol$implementation, false);
if (typeof BidirectionalCollection$implementation != 'undefined')
    _mixin(MIO_Mixin_String.UnicodeScalarView, BidirectionalCollection$implementation, false);
if (typeof CustomStringConvertible$implementation != 'undefined')
    _mixin(MIO_Mixin_String.UnicodeScalarView, CustomStringConvertible$implementation, false);
if (typeof CustomDebugStringConvertible$implementation != 'undefined')
    _mixin(MIO_Mixin_String.UnicodeScalarView, CustomDebugStringConvertible$implementation, false);
if (typeof RangeReplaceableCollection$implementation != 'undefined')
    _mixin(MIO_Mixin_String.UnicodeScalarView, RangeReplaceableCollection$implementation, false);
if (typeof CustomReflectable$implementation != 'undefined')
    _mixin(MIO_Mixin_String.UnicodeScalarView, CustomReflectable$implementation, false);
if (typeof _CustomPlaygroundQuickLookable$implementation != 'undefined')
    _mixin(MIO_Mixin_String.UnicodeScalarView, _CustomPlaygroundQuickLookable$implementation, false);
if (typeof IteratorProtocol$implementation != 'undefined')
    _mixin(MIO_Mixin_String.UTF16View.Iterator, IteratorProtocol$implementation, false);
if (typeof BidirectionalCollection$implementation != 'undefined')
    _mixin(MIO_Mixin_String.UTF16View, BidirectionalCollection$implementation, false);
if (typeof CustomStringConvertible$implementation != 'undefined')
    _mixin(MIO_Mixin_String.UTF16View, CustomStringConvertible$implementation, false);
if (typeof CustomDebugStringConvertible$implementation != 'undefined')
    _mixin(MIO_Mixin_String.UTF16View, CustomDebugStringConvertible$implementation, false);
if (typeof CustomReflectable$implementation != 'undefined')
    _mixin(MIO_Mixin_String.UTF16View, CustomReflectable$implementation, false);
if (typeof _CustomPlaygroundQuickLookable$implementation != 'undefined')
    _mixin(MIO_Mixin_String.UTF16View, _CustomPlaygroundQuickLookable$implementation, false);
if (typeof BidirectionalCollection$implementation != 'undefined')
    _mixin(MIO_Mixin_String.UTF8View, BidirectionalCollection$implementation, false);
if (typeof CustomStringConvertible$implementation != 'undefined')
    _mixin(MIO_Mixin_String.UTF8View, CustomStringConvertible$implementation, false);
if (typeof CustomDebugStringConvertible$implementation != 'undefined')
    _mixin(MIO_Mixin_String.UTF8View, CustomDebugStringConvertible$implementation, false);
if (typeof CustomReflectable$implementation != 'undefined')
    _mixin(MIO_Mixin_String.UTF8View, CustomReflectable$implementation, false);
if (typeof _CustomPlaygroundQuickLookable$implementation != 'undefined')
    _mixin(MIO_Mixin_String.UTF8View, _CustomPlaygroundQuickLookable$implementation, false);
if (typeof Codable$implementation != 'undefined')
    _mixin(MIO_Mixin_String, Codable$implementation, false);
if (typeof _HasContiguousBytes$implementation != 'undefined')
    _mixin(MIO_Mixin_String, _HasContiguousBytes$implementation, false);
if (typeof CustomReflectable$implementation != 'undefined')
    _mixin(MIO_Mixin_String, CustomReflectable$implementation, false);
if (typeof _CustomPlaygroundQuickLookable$implementation != 'undefined')
    _mixin(MIO_Mixin_String, _CustomPlaygroundQuickLookable$implementation, false);
if (typeof TextOutputStream$implementation != 'undefined')
    _mixin(MIO_Mixin_String, TextOutputStream$implementation, false);
if (typeof TextOutputStreamable$implementation != 'undefined')
    _mixin(MIO_Mixin_String, TextOutputStreamable$implementation, false);
if (typeof Hashable$implementation != 'undefined')
    _mixin(MIO_Mixin_String, Hashable$implementation, false);
if (typeof _ExpressibleByBuiltinUnicodeScalarLiteral$implementation != 'undefined')
    _mixin(MIO_Mixin_String, _ExpressibleByBuiltinUnicodeScalarLiteral$implementation, false);
if (typeof _ExpressibleByBuiltinExtendedGraphemeClusterLiteral$implementation != 'undefined')
    _mixin(MIO_Mixin_String, _ExpressibleByBuiltinExtendedGraphemeClusterLiteral$implementation, false);
if (typeof _ExpressibleByBuiltinStringLiteral$implementation != 'undefined')
    _mixin(MIO_Mixin_String, _ExpressibleByBuiltinStringLiteral$implementation, false);
if (typeof ExpressibleByStringLiteral$implementation != 'undefined')
    _mixin(MIO_Mixin_String, ExpressibleByStringLiteral$implementation, false);
if (typeof CustomDebugStringConvertible$implementation != 'undefined')
    _mixin(MIO_Mixin_String, CustomDebugStringConvertible$implementation, false);
if (typeof CustomStringConvertible$implementation != 'undefined')
    _mixin(MIO_Mixin_String, CustomStringConvertible$implementation, false);
if (typeof BidirectionalCollection$implementation != 'undefined')
    _mixin(MIO_Mixin_String, BidirectionalCollection$implementation, false);
if (typeof Equatable$implementation != 'undefined')
    _mixin(MIO_Mixin_String, Equatable$implementation, false);
if (typeof Comparable$implementation != 'undefined')
    _mixin(MIO_Mixin_String, Comparable$implementation, false);
if (typeof StringProtocol$implementation != 'undefined')
    _mixin(MIO_Mixin_String, StringProtocol$implementation, false);
if (typeof RangeReplaceableCollection$implementation != 'undefined')
    _mixin(MIO_Mixin_String, RangeReplaceableCollection$implementation, false);
if (typeof MirrorPath$implementation != 'undefined')
    _mixin(MIO_Mixin_String, MirrorPath$implementation, false);
_mixin(String, MIO_Mixin_String, true);
var _SliceBuffer = /** @class */ (function () {
    function _SliceBuffer() {
    }
    /*Swift.(file)._SliceBuffer.owner*/
    _SliceBuffer.prototype.owner$get = function () {
        throw 'unsupported variable Swift.(file)._SliceBuffer.owner in ' + this.constructor.name;
    };
    Object.defineProperty(_SliceBuffer.prototype, "owner", {
        get: function () { return this.owner$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file)._SliceBuffer.subscriptBaseAddress*/
    _SliceBuffer.prototype.subscriptBaseAddress$get = function () {
        var _this = this;
        return _this.firstElementAddress;
    };
    Object.defineProperty(_SliceBuffer.prototype, "subscriptBaseAddress", {
        get: function () { return this.subscriptBaseAddress$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file)._SliceBuffer.startIndex*/
    _SliceBuffer.prototype.startIndex$get = function () {
        throw 'unsupported variable Swift.(file)._SliceBuffer.startIndex in ' + this.constructor.name;
    };
    Object.defineProperty(_SliceBuffer.prototype, "startIndex", {
        get: function () { return this.startIndex$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file)._SliceBuffer.endIndexAndFlags*/
    _SliceBuffer.prototype.endIndexAndFlags$get = function () {
        throw 'unsupported variable Swift.(file)._SliceBuffer.endIndexAndFlags in ' + this.constructor.name;
    };
    Object.defineProperty(_SliceBuffer.prototype, "endIndexAndFlags", {
        get: function () { return this.endIndexAndFlags$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file)._SliceBuffer.init(owner:AnyObject,subscriptBaseAddress:UnsafeMutablePointer<Element>,startIndex:Int,endIndexAndFlags:UInt)*/
    /*Swift.(file)._SliceBuffer.init(owner:AnyObject,subscriptBaseAddress:UnsafeMutablePointer<Element>,startIndex:Int,endIndexAndFlags:UInt)*/
    _SliceBuffer.prototype.initOwnerAnyObjectSubscriptBaseAddressUnsafeMutablePointerStartIndexIntEndIndexAndFlagsUInt = function ($info, owner, subscriptBaseAddress, startIndex, endIndexAndFlags) {
        throw 'unsupported method Swift.(file)._SliceBuffer.init(owner:AnyObject,subscriptBaseAddress:UnsafeMutablePointer<Element>,startIndex:Int,endIndexAndFlags:UInt) in ' + this.constructor.name;
    };
    /*Swift.(file)._SliceBuffer.init(owner:AnyObject,subscriptBaseAddress:UnsafeMutablePointer<Element>,indices:Range<Int>,hasNativeBuffer:Bool)*/
    /*Swift.(file)._SliceBuffer.init(owner:AnyObject,subscriptBaseAddress:UnsafeMutablePointer<Element>,indices:Range<Int>,hasNativeBuffer:Bool)*/
    _SliceBuffer.prototype.initOwnerAnyObjectSubscriptBaseAddressUnsafeMutablePointerIndicesRangeHasNativeBufferBool = function ($info, owner, subscriptBaseAddress, indices, hasNativeBuffer) {
        throw 'unsupported method Swift.(file)._SliceBuffer.init(owner:AnyObject,subscriptBaseAddress:UnsafeMutablePointer<Element>,indices:Range<Int>,hasNativeBuffer:Bool) in ' + this.constructor.name;
    };
    /*Swift.(file)._SliceBuffer.init()*/
    /*Swift.(file)._ArrayBufferProtocol.init()*/
    _SliceBuffer.prototype.init = function ($info) {
        throw 'unsupported method Swift.(file)._SliceBuffer.init() in ' + this.constructor.name;
    };
    /*Swift.(file)._SliceBuffer.init(_buffer:_SliceBuffer<Element>.NativeBuffer,shiftedToStartIndex:Int)*/
    /*Swift.(file)._ArrayBufferProtocol.init(_buffer:_ContiguousArrayBuffer<Self.Element>,shiftedToStartIndex:Int)*/
    _SliceBuffer.prototype.init_buffer_ContiguousArrayBufferShiftedToStartIndexInt = function ($info, buffer, shiftedToStartIndex) {
        throw 'unsupported method Swift.(file)._SliceBuffer.init(_buffer:_SliceBuffer<Element>.NativeBuffer,shiftedToStartIndex:Int) in ' + this.constructor.name;
    };
    /*Swift.(file)._SliceBuffer.nativeBuffer*/
    _SliceBuffer.prototype.nativeBuffer$get = function () {
        throw 'unsupported variable Swift.(file)._SliceBuffer.nativeBuffer in ' + this.constructor.name;
    };
    Object.defineProperty(_SliceBuffer.prototype, "nativeBuffer", {
        get: function () { return this.nativeBuffer$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file)._SliceBuffer.nativeOwner*/
    _SliceBuffer.prototype.nativeOwner$get = function () {
        throw 'unsupported variable Swift.(file)._SliceBuffer.nativeOwner in ' + this.constructor.name;
    };
    Object.defineProperty(_SliceBuffer.prototype, "nativeOwner", {
        get: function () { return this.nativeOwner$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file)._SliceBuffer.replaceSubrange(_:Range<Int>,with:Int,elementsOf:C)*/
    /*Swift.(file)._ArrayBufferProtocol.replaceSubrange(_:Range<Int>,with:Int,elementsOf:C)*/
    _SliceBuffer.prototype.replaceSubrangeWithElementsOf = function ($info, subrange, insertCount, newValues) {
        var _this = this;
        var oldCount = _this.count;
        var eraseCount = subrange.count;
        var growth = Int.infix_45({}, newCount, eraseCount);
        _this.count = Int.infix_43({}, oldCount, growth);
        var _elements = _cloneStruct(_this.subscriptBaseAddress);
        var oldTailIndex = subrange.upperBound;
        var oldTailStart = _cloneStruct(UnsafeMutablePointer.infix_43({}, _elements, oldTailIndex));
        var newTailIndex = Int.infix_43({}, oldTailIndex, growth);
        var newTailStart = _cloneStruct(UnsafeMutablePointer.infix_43({}, oldTailStart, growth));
        var tailCount = Int.infix_45({}, oldCount, subrange.upperBound);
        if ((Int.infix_62({}, growth, 0))) {
            newTailStart.moveInitializeFromCount({}, oldTailStart, tailCount);
            var i_4 = newValues.startIndex;
            {
                var $j$generator_3 = _cloneStruct(subrange.makeIterator({}));
                while (true) {
                    var $ifLet0, j_1;
                    if (!((($ifLet0 = $j$generator_3.next({ $setThis: function ($val) { return $j$generator_3 = $val; } })) || true) && $ifLet0 != null && ((j_1 = $ifLet0) || true)))
                        break;
                    _elements.subscript$set({ $setThis: function ($val) { return _elements = _cloneStruct($val); } }, newValues.subscript$get({}, i_4), j_1);
                    newValues.formIndexAfter({}, { get: function () { return i_4; }, set: function ($val) { return i_4 = $val; } });
                }
            }
            ;
            {
                var $j$generator_4 = _cloneStruct(Int.infix_46_46_60({}, oldTailIndex, newTailIndex).makeIterator({}));
                while (true) {
                    var $ifLet2, j_3;
                    if (!((($ifLet2 = $j$generator_4.next({ $setThis: function ($val) { return $j$generator_4 = $val; } })) || true) && $ifLet2 != null && ((j_3 = $ifLet2) || true)))
                        break;
                    UnsafeMutablePointer.infix_43({}, _elements, j_3).initializeTo({}, newValues.subscript$get({}, i_4));
                    newValues.formIndexAfter({}, { get: function () { return i_4; }, set: function ($val) { return i_4 = $val; } });
                }
            }
            ;
        }
        else {
            var i_5 = subrange.lowerBound;
            var j_4 = newValues.startIndex;
            {
                var $generator_11 = _cloneStruct(Int.infix_46_46_60({}, 0, newCount).makeIterator({}));
                while (true) {
                    var $ifLet4;
                    if (!((($ifLet4 = $generator_11.next({ $setThis: function ($val) { return $generator_11 = $val; } })) || true) && $ifLet4 != null))
                        break;
                    _elements.subscript$set({ $setThis: function ($val) { return _elements = _cloneStruct($val); } }, newValues.subscript$get({}, j_4), i_5);
                    Int.infix_43_61({}, { get: function () { return i_5; }, set: function ($val) { return i_5 = $val; } }, 1);
                    newValues.formIndexAfter({}, { get: function () { return j_4; }, set: function ($val) { return j_4 = $val; } });
                }
            }
            ;
            if ((Int.infix_61_61({}, growth, 0))) {
                return;
            }
            ;
            var shrinkage = Int.prefix_45({}, growth);
            if ((Int.infix_62({}, tailCount, shrinkage))) {
                newTailStart.moveAssignFromCount({}, oldTailStart, shrinkage);
                oldTailStart.moveInitializeFromCount({}, UnsafeMutablePointer.infix_43({}, oldTailStart, shrinkage), Int.infix_45({}, tailCount, shrinkage));
            }
            else {
                newTailStart.moveAssignFromCount({}, oldTailStart, tailCount);
                UnsafeMutablePointer.infix_43({}, newTailStart, tailCount).deinitializeCount({}, Int.infix_45({}, shrinkage, tailCount));
            }
            ;
        }
    };
    /*Swift.(file)._SliceBuffer.identity*/
    _SliceBuffer.prototype.identity$get = function () {
        throw 'unsupported variable Swift.(file)._SliceBuffer.identity in ' + this.constructor.name;
    };
    Object.defineProperty(_SliceBuffer.prototype, "identity", {
        get: function () { return this.identity$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file)._SliceBuffer.firstElementAddress*/
    _SliceBuffer.prototype.firstElementAddress$get = function () {
        throw 'unsupported variable Swift.(file)._SliceBuffer.firstElementAddress in ' + this.constructor.name;
    };
    Object.defineProperty(_SliceBuffer.prototype, "firstElementAddress", {
        get: function () { return this.firstElementAddress$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file)._SliceBuffer.firstElementAddressIfContiguous*/
    _SliceBuffer.prototype.firstElementAddressIfContiguous$get = function () {
        throw 'unsupported variable Swift.(file)._SliceBuffer.firstElementAddressIfContiguous in ' + this.constructor.name;
    };
    Object.defineProperty(_SliceBuffer.prototype, "firstElementAddressIfContiguous", {
        get: function () { return this.firstElementAddressIfContiguous$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file)._SliceBuffer.requestUniqueMutableBackingBuffer(minimumCapacity:Int)*/
    /*Swift.(file)._ArrayBufferProtocol.requestUniqueMutableBackingBuffer(minimumCapacity:Int)*/
    _SliceBuffer.prototype.requestUniqueMutableBackingBufferMinimumCapacity = function ($info, minimumCapacity) {
        throw 'unsupported method Swift.(file)._SliceBuffer.requestUniqueMutableBackingBuffer(minimumCapacity:Int) in ' + this.constructor.name;
    };
    /*Swift.(file)._SliceBuffer.isMutableAndUniquelyReferenced()*/
    /*Swift.(file)._ArrayBufferProtocol.isMutableAndUniquelyReferenced()*/
    _SliceBuffer.prototype.isMutableAndUniquelyReferenced = function ($info) {
        throw 'unsupported method Swift.(file)._SliceBuffer.isMutableAndUniquelyReferenced() in ' + this.constructor.name;
    };
    /*Swift.(file)._SliceBuffer.requestNativeBuffer()*/
    /*Swift.(file)._ArrayBufferProtocol.requestNativeBuffer()*/
    _SliceBuffer.prototype.requestNativeBuffer = function ($info) {
        throw 'unsupported method Swift.(file)._SliceBuffer.requestNativeBuffer() in ' + this.constructor.name;
    };
    /*Swift.(file)._SliceBuffer.arrayPropertyIsNativeTypeChecked*/
    _SliceBuffer.prototype.arrayPropertyIsNativeTypeChecked$get = function () {
        throw 'unsupported variable Swift.(file)._SliceBuffer.arrayPropertyIsNativeTypeChecked in ' + this.constructor.name;
    };
    Object.defineProperty(_SliceBuffer.prototype, "arrayPropertyIsNativeTypeChecked", {
        get: function () { return this.arrayPropertyIsNativeTypeChecked$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file)._SliceBuffer.count*/
    _SliceBuffer.prototype.count$get = function () {
        var _this = this;
        return _this.distanceFromTo({}, _this.startIndex, _this.endIndex);
    };
    Object.defineProperty(_SliceBuffer.prototype, "count", {
        get: function () { return this.count$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file)._SliceBuffer.capacity*/
    _SliceBuffer.prototype.capacity$get = function () {
        throw 'unsupported variable Swift.(file)._SliceBuffer.capacity in ' + this.constructor.name;
    };
    Object.defineProperty(_SliceBuffer.prototype, "capacity", {
        get: function () { return this.capacity$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file)._SliceBuffer.isUniquelyReferenced()*/
    /*Swift.(file)._SliceBuffer.isUniquelyReferenced()*/
    _SliceBuffer.prototype.isUniquelyReferenced = function ($info) {
        throw 'unsupported method Swift.(file)._SliceBuffer.isUniquelyReferenced() in ' + this.constructor.name;
    };
    /*Swift.(file)._SliceBuffer.getElement(_:Int)*/
    /*Swift.(file)._SliceBuffer.getElement(_:Int)*/
    _SliceBuffer.prototype.getElement = function ($info, i) {
        throw 'unsupported method Swift.(file)._SliceBuffer.getElement(_:Int) in ' + this.constructor.name;
    };
    /*Swift.(file)._SliceBuffer.subscript(_:Int)*/
    /*Swift.(file).MutableCollection.subscript(_:Self.Index)*/
    /*Swift.(file).RandomAccessCollection.subscript(_:Self.Index)*/
    /*Swift.(file).Collection.subscript(_:Self.Index)*/
    /*Swift.(file).BidirectionalCollection.subscript(_:Self.Index)*/
    _SliceBuffer.prototype.subscript$get = function ($info, position) {
        throw 'unsupported method Swift.(file)._SliceBuffer.subscript(_:Int) in ' + this.constructor.name;
    }; /*Swift.(file)._SliceBuffer.subscript(_:Int)*/
    /*Swift.(file).MutableCollection.subscript(_:Self.Index)*/
    /*Swift.(file).RandomAccessCollection.subscript(_:Self.Index)*/
    /*Swift.(file).Collection.subscript(_:Self.Index)*/
    /*Swift.(file).BidirectionalCollection.subscript(_:Self.Index)*/
    _SliceBuffer.prototype.subscript$set = function ($info, newValue, position) {
        throw 'unsupported method Swift.(file)._SliceBuffer.subscript(_:Int) in ' + this.constructor.name;
    };
    /*Swift.(file)._SliceBuffer.subscript(_:Range<Int>)*/
    /*Swift.(file).MutableCollection.subscript(_:Range<Self.Index>)*/
    /*Swift.(file).RandomAccessCollection.subscript(_:Range<Self.Index>)*/
    /*Swift.(file).Collection.subscript(_:Range<Self.Index>)*/
    /*Swift.(file).BidirectionalCollection.subscript(_:Range<Self.Index>)*/
    /*Swift.(file)._ArrayBufferProtocol.subscript(_:Range<Int>)*/
    _SliceBuffer.prototype.subscriptRange$get = function ($info, bounds) {
        var _this = this;
        return _create(Slice, 'initBaseBoundsRange', {}, _this, bounds);
    };
    _SliceBuffer.prototype.subscript$get = function ($info, bounds) {
        this.subscriptRange$get.apply(this, arguments);
    }; /*Swift.(file)._SliceBuffer.subscript(_:Range<Int>)*/
    /*Swift.(file).MutableCollection.subscript(_:Range<Self.Index>)*/
    /*Swift.(file).RandomAccessCollection.subscript(_:Range<Self.Index>)*/
    /*Swift.(file).Collection.subscript(_:Range<Self.Index>)*/
    /*Swift.(file).BidirectionalCollection.subscript(_:Range<Self.Index>)*/
    /*Swift.(file)._ArrayBufferProtocol.subscript(_:Range<Int>)*/
    _SliceBuffer.prototype.subscriptRange$set = function ($info, newValue, bounds) {
        var _this = this;
        _writeBackMutableSliceBoundsSlice({}, { get: function () { return _this; }, set: function ($val) { return $info.$setThis(_this = _cloneStruct($val)); } }, bounds, newValue);
    };
    _SliceBuffer.prototype.subscript$set = function ($info, newValue, bounds) {
        this.subscriptRange$set.apply(this, arguments);
    };
    /*Swift.(file)._SliceBuffer.endIndex*/
    _SliceBuffer.prototype.endIndex$get = function () {
        throw 'unsupported variable Swift.(file)._SliceBuffer.endIndex in ' + this.constructor.name;
    };
    Object.defineProperty(_SliceBuffer.prototype, "endIndex", {
        get: function () { return this.endIndex$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file)._SliceBuffer.withUnsafeBufferPointer(_:(UnsafeBufferPointer<Element>) throws -> R)*/
    /*Swift.(file)._ArrayBufferProtocol.withUnsafeBufferPointer(_:(UnsafeBufferPointer<Self.Element>) throws -> R)*/
    _SliceBuffer.prototype.withUnsafeBufferPointer = function ($info, body) {
        throw 'unsupported method Swift.(file)._SliceBuffer.withUnsafeBufferPointer(_:(UnsafeBufferPointer<Element>) throws -> R) in ' + this.constructor.name;
    };
    /*Swift.(file)._SliceBuffer.withUnsafeMutableBufferPointer(_:(UnsafeMutableBufferPointer<Element>) throws -> R)*/
    /*Swift.(file)._ArrayBufferProtocol.withUnsafeMutableBufferPointer(_:(UnsafeMutableBufferPointer<Self.Element>) throws -> R)*/
    _SliceBuffer.prototype.withUnsafeMutableBufferPointer = function ($info, body) {
        throw 'unsupported method Swift.(file)._SliceBuffer.withUnsafeMutableBufferPointer(_:(UnsafeMutableBufferPointer<Element>) throws -> R) in ' + this.constructor.name;
    };
    /*Swift.(file)._SliceBuffer.unsafeCastElements(to:T.Type)*/
    /*Swift.(file)._SliceBuffer.unsafeCastElements(to:T.Type)*/
    _SliceBuffer.prototype.unsafeCastElementsTo = function ($info, type) {
        throw 'unsupported method Swift.(file)._SliceBuffer.unsafeCastElements(to:T.Type) in ' + this.constructor.name;
    };
    _SliceBuffer.prototype.init$vars = function () {
    };
    _SliceBuffer.$struct = true;
    _SliceBuffer.$infoAddress = '';
    return _SliceBuffer;
}());
if (typeof _ArrayBufferProtocol$implementation != 'undefined')
    _mixin(_SliceBuffer, _ArrayBufferProtocol$implementation, false);
if (typeof RandomAccessCollection$implementation != 'undefined')
    _mixin(_SliceBuffer, RandomAccessCollection$implementation, false);
var _ArrayBuffer = /** @class */ (function () {
    function _ArrayBuffer() {
    }
    /*Swift.(file)._ArrayBuffer.init()*/
    /*Swift.(file)._ArrayBufferProtocol.init()*/
    _ArrayBuffer.prototype.init = function ($info) {
        throw 'unsupported method Swift.(file)._ArrayBuffer.init() in ' + this.constructor.name;
    };
    /*Swift.(file)._ArrayBuffer.init(nsArray:AnyObject)*/
    /*Swift.(file)._ArrayBuffer.init(nsArray:AnyObject)*/
    _ArrayBuffer.prototype.initNsArrayAnyObject = function ($info, nsArray) {
        throw 'unsupported method Swift.(file)._ArrayBuffer.init(nsArray:AnyObject) in ' + this.constructor.name;
    };
    /*Swift.(file)._ArrayBuffer.cast(toBufferOf:U.Type)*/
    /*Swift.(file)._ArrayBuffer.cast(toBufferOf:U.Type)*/
    _ArrayBuffer.prototype.castToBufferOf = function ($info, _) {
        throw 'unsupported method Swift.(file)._ArrayBuffer.cast(toBufferOf:U.Type) in ' + this.constructor.name;
    };
    /*Swift.(file)._ArrayBuffer.downcast(toBufferWithDeferredTypeCheckOf:U.Type)*/
    /*Swift.(file)._ArrayBuffer.downcast(toBufferWithDeferredTypeCheckOf:U.Type)*/
    _ArrayBuffer.prototype.downcastToBufferWithDeferredTypeCheckOf = function ($info, _) {
        throw 'unsupported method Swift.(file)._ArrayBuffer.downcast(toBufferWithDeferredTypeCheckOf:U.Type) in ' + this.constructor.name;
    };
    /*Swift.(file)._ArrayBuffer.needsElementTypeCheck*/
    _ArrayBuffer.prototype.needsElementTypeCheck$get = function () {
        throw 'unsupported variable Swift.(file)._ArrayBuffer.needsElementTypeCheck in ' + this.constructor.name;
    };
    Object.defineProperty(_ArrayBuffer.prototype, "needsElementTypeCheck", {
        get: function () { return this.needsElementTypeCheck$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file)._ArrayBuffer.init(storage:_ArrayBridgeStorage)*/
    /*Swift.(file)._ArrayBuffer.init(storage:_ArrayBridgeStorage)*/
    _ArrayBuffer.prototype.initStorage_ArrayBridgeStorage = function ($info, storage) {
        throw 'unsupported method Swift.(file)._ArrayBuffer.init(storage:_ArrayBridgeStorage) in ' + this.constructor.name;
    };
    /*Swift.(file)._ArrayBuffer.init(_buffer:_ArrayBuffer<Element>.NativeBuffer,shiftedToStartIndex:Int)*/
    /*Swift.(file)._ArrayBufferProtocol.init(_buffer:_ContiguousArrayBuffer<Self.Element>,shiftedToStartIndex:Int)*/
    _ArrayBuffer.prototype.init_buffer_ContiguousArrayBufferShiftedToStartIndexInt = function ($info, source, shiftedToStartIndex) {
        throw 'unsupported method Swift.(file)._ArrayBuffer.init(_buffer:_ArrayBuffer<Element>.NativeBuffer,shiftedToStartIndex:Int) in ' + this.constructor.name;
    };
    /*Swift.(file)._ArrayBuffer.arrayPropertyIsNativeTypeChecked*/
    _ArrayBuffer.prototype.arrayPropertyIsNativeTypeChecked$get = function () {
        var _this = this;
        return _this._isNativeTypeChecked;
    };
    Object.defineProperty(_ArrayBuffer.prototype, "arrayPropertyIsNativeTypeChecked", {
        get: function () { return this.arrayPropertyIsNativeTypeChecked$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file)._ArrayBuffer.isUniquelyReferenced()*/
    /*Swift.(file)._ArrayBuffer.isUniquelyReferenced()*/
    _ArrayBuffer.prototype.isUniquelyReferenced = function ($info) {
        var _this = this;
        if ((Bool.prefix_33({}, _isClassOrObjCExistential({}, ((function () { throw '!unclarifiedGeneric:Element'; })()))))) {
            return _this._storage.isUniquelyReferencedUnflaggedNative({ $setThis: function ($val) { return _this._storage = $val; } });
        }
        ;
        if ((Bool.prefix_33({}, _this._storage.isUniquelyReferencedNative({ $setThis: function ($val) { return _this._storage = $val; } })))) {
            return false;
        }
        ;
        return _this._isNative;
    };
    /*Swift.(file)._ArrayBuffer.requestUniqueMutableBackingBuffer(minimumCapacity:Int)*/
    /*Swift.(file)._ArrayBufferProtocol.requestUniqueMutableBackingBuffer(minimumCapacity:Int)*/
    _ArrayBuffer.prototype.requestUniqueMutableBackingBufferMinimumCapacity = function ($info, minimumCapacity) {
        var _this = this;
        if ((_fastPath({}, _this.isUniquelyReferenced({ $setThis: function ($val) { return $info.$setThis(_this = _cloneStruct($val)); } })))) {
            var b = _cloneStruct(_this._native);
            if ((_fastPath({}, Int.infix_62_61({}, b.capacity, minimumCapacity)))) {
                return b;
            }
            ;
        }
        ;
        return null;
    };
    /*Swift.(file)._ArrayBuffer.isMutableAndUniquelyReferenced()*/
    /*Swift.(file)._ArrayBufferProtocol.isMutableAndUniquelyReferenced()*/
    _ArrayBuffer.prototype.isMutableAndUniquelyReferenced = function ($info) {
        var _this = this;
        return _this.isUniquelyReferenced({ $setThis: function ($val) { return $info.$setThis(_this = _cloneStruct($val)); } });
    };
    /*Swift.(file)._ArrayBuffer.requestNativeBuffer()*/
    /*Swift.(file)._ArrayBufferProtocol.requestNativeBuffer()*/
    _ArrayBuffer.prototype.requestNativeBuffer = function ($info) {
        var _this = this;
        if ((Bool.prefix_33({}, _isClassOrObjCExistential({}, ((function () { throw '!unclarifiedGeneric:Element'; })()))))) {
            return _this._native;
        }
        ;
        return (_fastPath({}, _this._storage.isNative) ? _this._native : null);
    };
    /*Swift.(file)._ArrayBuffer.subscript(_:Range<Int>)*/
    /*Swift.(file)._ArrayBufferProtocol.subscript(_:Range<Int>)*/
    /*Swift.(file).MutableCollection.subscript(_:Range<Self.Index>)*/
    /*Swift.(file).RandomAccessCollection.subscript(_:Range<Self.Index>)*/
    /*Swift.(file).Collection.subscript(_:Range<Self.Index>)*/
    /*Swift.(file).BidirectionalCollection.subscript(_:Range<Self.Index>)*/
    _ArrayBuffer.prototype.subscript$get = function ($info, bounds) {
        var _this = this;
        _this._typeCheck({}, bounds);
        if ((_fastPath({}, _this._isNative))) {
            return _this._native.subscript$get({}, bounds);
        }
        ;
        return _this._nonNative.subscriptRange$get({}, bounds).unsafeCastElementsTo({}, ((function () { throw '!unclarifiedGeneric:Element'; })()));
    };
    _ArrayBuffer.prototype.subscriptRange$get = function ($info, bounds) {
        this.subscript$get.apply(this, arguments);
    }; /*Swift.(file)._ArrayBuffer.subscript(_:Range<Int>)*/
    /*Swift.(file)._ArrayBufferProtocol.subscript(_:Range<Int>)*/
    /*Swift.(file).MutableCollection.subscript(_:Range<Self.Index>)*/
    /*Swift.(file).RandomAccessCollection.subscript(_:Range<Self.Index>)*/
    /*Swift.(file).Collection.subscript(_:Range<Self.Index>)*/
    /*Swift.(file).BidirectionalCollection.subscript(_:Range<Self.Index>)*/
    _ArrayBuffer.prototype.subscript$set = function ($info, newValue, bounds) {
        var _this = this;
        fatalErrorFileLine({}, function () { return "not implemented"; }, '?3', '?3');
    };
    _ArrayBuffer.prototype.subscriptRange$set = function ($info, newValue, bounds) {
        this.subscript$set.apply(this, arguments);
    };
    /*Swift.(file)._ArrayBuffer.firstElementAddress*/
    _ArrayBuffer.prototype.firstElementAddress$get = function () {
        var _this = this;
        return _this._native.firstElementAddress;
    };
    Object.defineProperty(_ArrayBuffer.prototype, "firstElementAddress", {
        get: function () { return this.firstElementAddress$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file)._ArrayBuffer.firstElementAddressIfContiguous*/
    _ArrayBuffer.prototype.firstElementAddressIfContiguous$get = function () {
        var _this = this;
        return (_fastPath({}, _this._isNative) ? _this.firstElementAddress : null);
    };
    Object.defineProperty(_ArrayBuffer.prototype, "firstElementAddressIfContiguous", {
        get: function () { return this.firstElementAddressIfContiguous$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file)._ArrayBuffer.count*/
    _ArrayBuffer.prototype.count$get = function () {
        var _this = this;
        return (_fastPath({}, _this._isNative) ? _this._native.count : _this._nonNative.count);
    };
    Object.defineProperty(_ArrayBuffer.prototype, "count", {
        get: function () { return this.count$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file)._ArrayBuffer.capacity*/
    _ArrayBuffer.prototype.capacity$get = function () {
        var _this = this;
        return (_fastPath({}, _this._isNative) ? _this._native.capacity : _this._nonNative.count);
    };
    Object.defineProperty(_ArrayBuffer.prototype, "capacity", {
        get: function () { return this.capacity$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file)._ArrayBuffer.getElement(_:Int,wasNativeTypeChecked:Bool)*/
    /*Swift.(file)._ArrayBuffer.getElement(_:Int,wasNativeTypeChecked:Bool)*/
    _ArrayBuffer.prototype.getElementWasNativeTypeChecked = function ($info, i, wasNativeTypeChecked) {
        var _this = this;
        if ((_fastPath({}, wasNativeTypeChecked))) {
            return _this._nativeTypeChecked.subscript$get({}, i);
        }
        ;
        return unsafeBitCastTo({}, _this._getElementSlowPath({}, i), ((function () { throw '!unclarifiedGeneric:Element'; })()));
    };
    /*Swift.(file)._ArrayBuffer.subscript(_:Int)*/
    /*Swift.(file).MutableCollection.subscript(_:Self.Index)*/
    /*Swift.(file).RandomAccessCollection.subscript(_:Self.Index)*/
    /*Swift.(file).Collection.subscript(_:Self.Index)*/
    /*Swift.(file).BidirectionalCollection.subscript(_:Self.Index)*/
    _ArrayBuffer.prototype.subscript$get = function ($info, i) {
        var _this = this;
        return _this.getElementWasNativeTypeChecked({}, i, _this._isNativeTypeChecked);
    }; /*Swift.(file)._ArrayBuffer.subscript(_:Int)*/
    /*Swift.(file).MutableCollection.subscript(_:Self.Index)*/
    /*Swift.(file).RandomAccessCollection.subscript(_:Self.Index)*/
    /*Swift.(file).Collection.subscript(_:Self.Index)*/
    /*Swift.(file).BidirectionalCollection.subscript(_:Self.Index)*/
    _ArrayBuffer.prototype.subscript$set = function ($info, newValue, i) {
        var _this = this;
        if ((_fastPath({}, _this._isNative))) {
            _this._native.subscript$set({ $setThis: function ($val) { return _this._native = _cloneStruct($val); } }, newValue, i);
        }
        else {
            var refCopy_1 = _cloneStruct(_this);
            refCopy_1.replaceSubrangeWithElementsOf({ $setThis: function ($val) { return refCopy_1 = $val; } }, Int.infix_46_46_60({}, i, Int.infix_43({}, i, 1)), 1, _create(CollectionOfOne, 'init', {}, newValue));
        }
    };
    /*Swift.(file)._ArrayBuffer.withUnsafeBufferPointer(_:(UnsafeBufferPointer<Element>) throws -> R)*/
    /*Swift.(file)._ArrayBufferProtocol.withUnsafeBufferPointer(_:(UnsafeBufferPointer<Self.Element>) throws -> R)*/
    _ArrayBuffer.prototype.withUnsafeBufferPointer = function ($info, body) {
        var _this = this;
        if ((_fastPath({}, _this._isNative))) {
            var $defer_5 = function () {
                _fixLifetime({}, _this);
            };
            var $result = (function () {
                try {
                    ;
                    return body({}, _create(UnsafeBufferPointer, 'initStartOptionalCountInt', {}, /*pointer_to_pointer*/ _this.firstElementAddress, _this.count));
                }
                catch ($error) {
                    $defer_5({});
                    throw $error;
                }
            })();
            $defer_5({});
            return $result;
        }
        ;
        return _create(ContiguousArray, 'initBuffer', {}, _this).withUnsafeBufferPointer({}, body);
    };
    /*Swift.(file)._ArrayBuffer.withUnsafeMutableBufferPointer(_:(UnsafeMutableBufferPointer<Element>) throws -> R)*/
    /*Swift.(file)._ArrayBufferProtocol.withUnsafeMutableBufferPointer(_:(UnsafeMutableBufferPointer<Self.Element>) throws -> R)*/
    _ArrayBuffer.prototype.withUnsafeMutableBufferPointer = function ($info, body) {
        throw 'unsupported method Swift.(file)._ArrayBuffer.withUnsafeMutableBufferPointer(_:(UnsafeMutableBufferPointer<Element>) throws -> R) in ' + this.constructor.name;
    };
    /*Swift.(file)._ArrayBuffer.owner*/
    _ArrayBuffer.prototype.owner$get = function () {
        var _this = this;
        return (_fastPath({}, _this._isNative) ? _this._native._storage : _this._nonNative.buffer);
    };
    Object.defineProperty(_ArrayBuffer.prototype, "owner", {
        get: function () { return this.owner$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file)._ArrayBuffer.nativeOwner*/
    _ArrayBuffer.prototype.nativeOwner$get = function () {
        var _this = this;
        return _this._native._storage;
    };
    Object.defineProperty(_ArrayBuffer.prototype, "nativeOwner", {
        get: function () { return this.nativeOwner$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file)._ArrayBuffer.identity*/
    _ArrayBuffer.prototype.identity$get = function () {
        var _this = this;
        if ((_this._isNative)) {
            return _this._native.identity;
        }
        else {
            return _create(UnsafeRawPointer, 'initUnsafeMutableRawPointer', {}, Unmanaged.passUnretained({}, _this._nonNative.buffer).toOpaque({}));
        }
    };
    Object.defineProperty(_ArrayBuffer.prototype, "identity", {
        get: function () { return this.identity$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file)._ArrayBuffer.startIndex*/
    _ArrayBuffer.prototype.startIndex$get = function () {
        var _this = this;
        return 0;
    };
    Object.defineProperty(_ArrayBuffer.prototype, "startIndex", {
        get: function () { return this.startIndex$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file)._ArrayBuffer.endIndex*/
    _ArrayBuffer.prototype.endIndex$get = function () {
        var _this = this;
        return _this.count;
    };
    Object.defineProperty(_ArrayBuffer.prototype, "endIndex", {
        get: function () { return this.endIndex$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    _ArrayBuffer.prototype.init$vars = function () {
    };
    _ArrayBuffer.$struct = true;
    _ArrayBuffer.$infoAddress = '';
    return _ArrayBuffer;
}());
if (typeof _ArrayBufferProtocol$implementation != 'undefined')
    _mixin(_ArrayBuffer, _ArrayBufferProtocol$implementation, false);
var FloatingPointSign = /** @class */ (function () {
    function FloatingPointSign() {
    }
    Object.defineProperty(FloatingPointSign, "plus", {
        get: function () { return Object.assign(new FloatingPointSign(), __assign({ rawValue: "plus" }, Array.from(arguments).slice(1))); },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(FloatingPointSign, "minus", {
        get: function () { return Object.assign(new FloatingPointSign(), __assign({ rawValue: "minus" }, Array.from(arguments).slice(1))); },
        enumerable: true,
        configurable: true
    });
    /*Swift.(file).FloatingPointSign.init(rawValue:Int)*/
    /*Swift.(file).RawRepresentable.init(rawValue:Self.RawValue)*/
    FloatingPointSign.prototype.initRawValue = function ($info, rawValue) {
        var _this = this;
        var $match = rawValue;
        if ((((infix_126_61({}, 0, $match))))) {
            $info.$setThis(_this = _cloneStruct(FloatingPointSign.plus));
        }
        else if ((((infix_126_61({}, 1, $match))))) {
            $info.$setThis(_this = _cloneStruct(FloatingPointSign.minus));
        }
        else if (((true))) {
            return (this.$failed = true);
        }
        ;
        return;
    };
    /*Swift.(file).FloatingPointSign.rawValue*/
    FloatingPointSign.prototype.rawValue$get = function () {
        var _this = this;
        var $match = _this;
        if ((($match.rawValue == FloatingPointSign.plus.rawValue))) {
            return 0;
        }
        else if ((($match.rawValue == FloatingPointSign.minus.rawValue))) {
            return 1;
        }
    };
    Object.defineProperty(FloatingPointSign.prototype, "rawValue", {
        get: function () { return this.rawValue$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).FloatingPointSign.==infix(_:FloatingPointSign,_:FloatingPointSign)*/
    /*Swift.(file).Equatable.==infix(_:Self,_:Self)*/
    FloatingPointSign.infix_61_61 = function ($info, a, b) {
        return a == b;
    };
    /*Swift.(file).FloatingPointSign.hashValue*/
    FloatingPointSign.prototype.hashValue$get = function () {
        var _this = this;
        return Int.prototype.hashValue$get.call(_this.rawValue);
    };
    Object.defineProperty(FloatingPointSign.prototype, "hashValue", {
        get: function () { return this.hashValue$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).FloatingPointSign.hash(into:Hasher)*/
    /*Swift.(file).Hashable.hash(into:Hasher)*/
    FloatingPointSign.prototype.hashInto = function ($info, hasher$inout) {
        var _this = this;
        var hasher = hasher$inout.get();
        var $result = (function () {
            hasher.combine({ $setThis: function ($val) { return hasher = $val; } }, _this.rawValue);
        })();
        hasher$inout.set(hasher);
        return $result;
    };
    FloatingPointSign.prototype.init$vars = function () {
    };
    FloatingPointSign.$infoAddress = '';
    FloatingPointSign.initRawValue$failable = true;
    return FloatingPointSign;
}());
_mixin(FloatingPointSign, _DefaultEnumImplementation, false);
var _ArrayBridgeStorage = _BridgeStorage;
var _BridgingBuffer = ManagedBufferPointer;
var Codable = '?protocol_composition_type';
var CountableClosedRange = ClosedRange;
var CChar = Int8;
var CUnsignedChar = UInt8;
var CUnsignedShort = UInt16;
var CUnsignedInt = UInt32;
var CUnsignedLong = UInt;
var CUnsignedLongLong = UInt64;
var CSignedChar = Int8;
var CShort = Int16;
var CInt = Int32;
var CLong = Int;
var CLongLong = Int64;
var CFloat = Float;
var CDouble = Double;
var CLongDouble = Float80;
var CWideChar = Unicode.Scalar;
var CChar16 = UInt16;
var CChar32 = Unicode.Scalar;
var CBool = Bool;
var DictionaryIndex = Dictionary.Index;
var DictionaryIterator = Dictionary.Iterator;
var LazyDropWhileCollection = LazyDropWhileSequence;
var LazyFilterCollection = LazyFilterSequence;
var FlattenCollection = FlattenSequence;
var IntMax = Int64;
var UIntMax = UInt64;
var KeyPathComputedArgumentLayoutFn = '?function_type';
var KeyPathComputedArgumentInitializerFn = '?function_type';
var MetadataReference = UnsafeRawPointer;
var LazyCollection = LazySequence;
//const _HeapObject = HeapObject
var LazyMapCollection = LazyMapSequence;
var Void = '?tuple_type';
var Float32 = Float;
var Float64 = Double;
var IntegerLiteralType = Int;
var FloatLiteralType = Double;
var BooleanLiteralType = Bool;
var UnicodeScalarType = String;
var ExtendedGraphemeClusterType = String;
var StringLiteralType = String;
//const _MaxBuiltinFloatType = FPIEEE80
var AnyObject = AnyObject;
var AnyClass = AnyObject;
var LazyPrefixWhileCollection = LazyPrefixWhileSequence;
var UnboundedRange = '?function_type';
var CountableRange = Range;
var CountablePartialRangeFrom = PartialRangeFrom;
var NameFreeFunc = '?function_type';
var SetIndex = Set.Index;
var SetIterator = Set.Iterator;
var _SwiftNSZone = OpaquePointer;
var _CocoaString = AnyObject;
var CountAndFlags = _StringObject.CountAndFlags;
var _StringSwitchCache = Dictionary;
var BidirectionalIndexable = BidirectionalCollection$implementation;
var IndexableBase = Collection$implementation;
var Indexable = Collection$implementation;
var MutableIndexable = MutableCollection$implementation;
var RandomAccessIndexable = RandomAccessCollection$implementation;
var RangeReplaceableIndexable = RangeReplaceableCollection$implementation;
var EnumeratedIterator = EnumeratedSequence.Iterator;
var IteratorOverOne = CollectionOfOne.Iterator;
var EmptyIterator = EmptyCollection.Iterator;
var LazyFilterIterator = LazyFilterSequence.Iterator;
var LazyFilterIndex = { $genericType: 'Base', $subchain: 'Index' };
var LazyDropWhileIterator = LazyDropWhileSequence.Iterator;
var LazyDropWhileIndex = LazyDropWhileCollection.Index;
var LazyDropWhileBidirectionalCollection = LazyDropWhileCollection;
var LazyFilterBidirectionalCollection = LazyFilterCollection;
var LazyMapIterator = LazyMapSequence.Iterator;
var LazyMapBidirectionalCollection = LazyMapCollection;
var LazyMapRandomAccessCollection = LazyMapCollection;
var LazyBidirectionalCollection = LazyCollection;
var LazyRandomAccessCollection = LazyCollection;
var FlattenCollectionIndex = FlattenCollection.Index;
var FlattenBidirectionalCollectionIndex = FlattenCollection.Index;
var FlattenBidirectionalCollection = FlattenCollection;
var JoinedIterator = JoinedSequence.Iterator;
var Zip2Iterator = Zip2Sequence.Iterator;
var LazyPrefixWhileIterator = LazyPrefixWhileSequence.Iterator;
var LazyPrefixWhileIndex = LazyPrefixWhileCollection.Index;
var LazyPrefixWhileBidirectionalCollection = LazyPrefixWhileCollection;
var ReversedRandomAccessCollection = ReversedCollection;
var ReversedIndex = ReversedCollection;
var BidirectionalSlice = Slice;
var RandomAccessSlice = Slice;
var RangeReplaceableSlice = Slice;
var RangeReplaceableBidirectionalSlice = Slice;
var RangeReplaceableRandomAccessSlice = Slice;
var MutableSlice = Slice;
var MutableBidirectionalSlice = Slice;
var MutableRandomAccessSlice = Slice;
var MutableRangeReplaceableSlice = Slice;
var MutableRangeReplaceableBidirectionalSlice = Slice;
var MutableRangeReplaceableRandomAccessSlice = Slice;
var DefaultBidirectionalIndices = DefaultIndices;
var DefaultRandomAccessIndices = DefaultIndices;
var NilLiteralConvertible = ExpressibleByNilLiteral$implementation;
var _BuiltinIntegerLiteralConvertible = _ExpressibleByBuiltinIntegerLiteral$implementation;
var IntegerLiteralConvertible = ExpressibleByIntegerLiteral$implementation;
var _BuiltinFloatLiteralConvertible = _ExpressibleByBuiltinFloatLiteral$implementation;
var FloatLiteralConvertible = ExpressibleByFloatLiteral$implementation;
var _BuiltinBooleanLiteralConvertible = _ExpressibleByBuiltinBooleanLiteral$implementation;
var BooleanLiteralConvertible = ExpressibleByBooleanLiteral$implementation;
var _BuiltinUnicodeScalarLiteralConvertible = _ExpressibleByBuiltinUnicodeScalarLiteral$implementation;
var UnicodeScalarLiteralConvertible = ExpressibleByUnicodeScalarLiteral$implementation;
var _BuiltinExtendedGraphemeClusterLiteralConvertible = _ExpressibleByBuiltinExtendedGraphemeClusterLiteral$implementation;
var ExtendedGraphemeClusterLiteralConvertible = ExpressibleByExtendedGraphemeClusterLiteral$implementation;
var _BuiltinStringLiteralConvertible = _ExpressibleByBuiltinStringLiteral$implementation;
var StringLiteralConvertible = ExpressibleByStringLiteral$implementation;
var ArrayLiteralConvertible = ExpressibleByArrayLiteral$implementation;
var DictionaryLiteralConvertible = ExpressibleByDictionaryLiteral$implementation;
var StringInterpolationConvertible = ExpressibleByStringInterpolation$implementation;
var _ColorLiteralConvertible = _ExpressibleByColorLiteral$implementation;
var _ImageLiteralConvertible = _ExpressibleByImageLiteral$implementation;
var _FileReferenceLiteralConvertible = _ExpressibleByFileReferenceLiteral$implementation;
var ClosedRangeIndex = ClosedRange.Index;
var ImplicitlyUnwrappedOptional = Optional;
var DictionaryLiteral = KeyValuePairs;
var UTF8 = Unicode.UTF8;
var UTF16 = Unicode.UTF16;
var UTF32 = Unicode.UTF32;
var UnicodeScalar = Unicode.Scalar;
var UnsafeBufferPointerIterator = UnsafeBufferPointer.Iterator;
var UnsafeRawBufferPointerIterator = UnsafeBufferPointer.Iterator;
var UnsafeMutableRawBufferPointerIterator = UnsafeBufferPointer.Iterator;
var PlaygroundQuickLook = _PlaygroundQuickLook;
var CustomPlaygroundQuickLookable = _CustomPlaygroundQuickLookable$implementation;
var _DefaultCustomPlaygroundQuickLookable = __DefaultCustomPlaygroundQuickLookable$implementation;
var UnfoldFirstSequence = UnfoldSequence;
var _VAUInt = CUnsignedInt;
var _VAInt = Int32;
EnumeratedSequence.Iterator.Element = '?tuple_type';
EnumeratedSequence.Iterator.Iterator = EnumeratedSequence.Iterator;
EnumeratedSequence.Element = '?tuple_type';
_ArrayBuffer.Element = { $genericType: 'Element' };
_ArrayBuffer.Index = Int;
_ArrayBuffer.SubSequence = _SliceBuffer;
_ArrayBuffer.Iterator = IndexingIterator;
_ArrayBuffer.Indices = Range;
_ArrayBuffer.Storage = _ContiguousArrayStorage;
_ArrayBuffer.NativeBuffer = _ContiguousArrayBuffer;
Array._Buffer = _ArrayBuffer;
Array.Index = Int;
Array.Indices = Range;
Array.Iterator = IndexingIterator;
Array.Element = { $genericType: 'Element' };
Array.SubSequence = ArraySlice;
Array.ArrayLiteralElement = { $genericType: 'Element' };
ArraySlice._Buffer = _SliceBuffer;
ArraySlice.Index = Int;
ArraySlice.Indices = Range;
ArraySlice.Iterator = IndexingIterator;
ArraySlice.Element = { $genericType: 'Element' };
ArraySlice.SubSequence = ArraySlice;
ArraySlice.ArrayLiteralElement = { $genericType: 'Element' };
_UnsafeBitset.Element = Int;
_UnsafeBitset.Iterator.Element = Int;
_UnsafeBitset.Word.Element = Int;
_UnsafeBitset.Word.Iterator = _UnsafeBitset.Word;
Bool.BooleanLiteralType = Bool;
_BridgeableMetatype._ObjectiveCType = AnyObject;
AutoreleasingUnsafeMutablePointer.Pointee = { $genericType: 'Pointee' };
AutoreleasingUnsafeMutablePointer.Stride = Int;
_BridgeStorage.Native = { $genericType: 'NativeClass' };
_BridgeStorage.ObjC = AnyObject;
Character.UTF8View = String.UTF8View;
Character.UTF16View = String.UTF16View;
Character.UnicodeScalarView = String.UnicodeScalarView;
Character.ExtendedGraphemeClusterLiteralType = Character;
Character.UnicodeScalarLiteralType = Character;
_CocoaArrayWrapper.Indices = Range;
_CocoaArrayWrapper.Element = AnyObject;
_CocoaArrayWrapper.Index = Int;
_CocoaArrayWrapper.SubSequence = _SliceBuffer;
_CocoaArrayWrapper.Iterator = IndexingIterator;
KeyedEncodingContainer.Key = { $genericType: 'K' };
KeyedDecodingContainer.Key = { $genericType: 'K' };
CodingUserInfoKey.RawValue = String;
_KeyedEncodingContainerBox.Key = { $genericType: 'Concrete', $subchain: 'Key' };
_KeyedDecodingContainerBox.Key = { $genericType: 'Concrete', $subchain: 'Key' };
IndexingIterator.Element = { $genericType: 'Elements', $subchain: 'Element' };
IndexingIterator.Iterator = IndexingIterator;
IndexingIterator.SubSequence = AnySequence;
Collection$implementation.IndexDistance = Int;
Collection$implementation.Generator = { $genericType: 'Self', $subchain: 'Iterator' };
Collection$implementation._Element = { $genericType: 'Self', $subchain: 'Element' };
ContiguousArray._Buffer = _ContiguousArrayBuffer;
ContiguousArray.Index = Int;
ContiguousArray.Indices = Range;
ContiguousArray.Iterator = IndexingIterator;
ContiguousArray.Element = { $genericType: 'Element' };
ContiguousArray.SubSequence = ArraySlice;
ContiguousArray.ArrayLiteralElement = { $genericType: 'Element' };
ClosedRange.Bound = { $genericType: 'Bound' };
ClosedRange.Element = { $genericType: 'Bound' };
ClosedRange.Iterator = IndexingIterator;
ClosedRange.SubSequence = Slice;
ClosedRange.Indices = DefaultIndices;
_ContiguousArrayBuffer.Element = { $genericType: 'Element' };
_ContiguousArrayBuffer.Index = Int;
_ContiguousArrayBuffer.SubSequence = _SliceBuffer;
_ContiguousArrayBuffer.Indices = Range;
_ContiguousArrayBuffer.Iterator = IndexingIterator;
Dictionary.Element = '?tuple_type';
Dictionary.SubSequence = Slice;
Dictionary.Indices = DefaultIndices;
Dictionary.Key = { $genericType: 'Key' };
Dictionary.Value = { $genericType: 'Value' };
Dictionary.Keys.Element = { $genericType: 'Key' };
Dictionary.Keys.SubSequence = Slice;
Dictionary.Keys.Index = Dictionary.Index;
Dictionary.Keys.Indices = DefaultIndices;
Dictionary.Keys.Iterator.Element = { $genericType: 'Key' };
Dictionary.Values.Element = { $genericType: 'Value' };
Dictionary.Values.Index = Dictionary.Index;
Dictionary.Values.SubSequence = Slice;
Dictionary.Values.Indices = DefaultIndices;
Dictionary.Values.Iterator.Element = { $genericType: 'Value' };
Dictionary.Iterator.Element = '?tuple_type';
Dictionary._Variant.Element = '?tuple_type';
Dictionary._Variant.Index = Dictionary.Index;
Dictionary._Variant.Key = { $genericType: 'Key' };
Dictionary._Variant.Value = { $genericType: 'Value' };
_SwiftDeferredNSDictionary.Bucket = _HashTable.Bucket;
_CocoaDictionary.Key = AnyObject;
_CocoaDictionary.Value = AnyObject;
_CocoaDictionary.Iterator.Element = '?tuple_type';
_CocoaDictionary.Element = _CocoaDictionary.Iterator.Element;
LazyDropWhileSequence.Element = { $genericType: 'Base', $subchain: 'Element' };
LazyDropWhileSequence.Iterator.Element = { $genericType: 'Base', $subchain: 'Element' };
LazyDropWhileSequence.Elements = LazyDropWhileSequence;
LazyDropWhileSequence.SubSequence = Slice;
LazyDropWhileSequence.Index = { $genericType: 'Base', $subchain: 'Index' };
LazyDropWhileSequence.Indices = DefaultIndices;
EmptyCollection.Iterator.Element = { $genericType: 'Element' };
EmptyCollection.Iterator.Iterator = EmptyCollection.Iterator;
EmptyCollection.Index = Int;
EmptyCollection.Indices = Range;
EmptyCollection.SubSequence = EmptyCollection;
EmptyCollection.Element = { $genericType: 'Element' };
LazyFilterSequence.Iterator.Element = { $genericType: 'Base', $subchain: 'Element' };
LazyFilterSequence.Iterator.Iterator = LazyFilterSequence.Iterator;
LazyFilterSequence.Element = { $genericType: 'Base', $subchain: 'Element' };
LazyFilterSequence.Elements = LazyFilterSequence;
LazyFilterSequence.SubSequence = LazyFilterCollection;
LazyFilterSequence.Index = { $genericType: 'Base', $subchain: 'Index' };
LazyFilterSequence.Indices = DefaultIndices;
_FixedArray2.Index = Int;
_FixedArray2.Element = { $genericType: 'T' };
_FixedArray2.SubSequence = Slice;
_FixedArray2.Indices = Range;
_FixedArray2.Iterator = IndexingIterator;
_FixedArray4.Index = Int;
_FixedArray4.Element = { $genericType: 'T' };
_FixedArray4.SubSequence = Slice;
_FixedArray4.Indices = Range;
_FixedArray4.Iterator = IndexingIterator;
_FixedArray8.Index = Int;
_FixedArray8.Element = { $genericType: 'T' };
_FixedArray8.SubSequence = Slice;
_FixedArray8.Indices = Range;
_FixedArray8.Iterator = IndexingIterator;
_FixedArray16.Index = Int;
_FixedArray16.Element = { $genericType: 'T' };
_FixedArray16.SubSequence = Slice;
_FixedArray16.Indices = Range;
_FixedArray16.Iterator = IndexingIterator;
FlattenSequence.Iterator.Element = { $genericType: 'Base', $subchain: 'Element.Element' };
FlattenSequence.Iterator.Iterator = FlattenSequence.Iterator;
FlattenSequence.Element = { $genericType: 'Base', $subchain: 'Element.Element' };
FlattenSequence.SubSequence = Slice;
FlattenSequence.Indices = DefaultIndices;
FloatingPointSign.RawValue = Int;
Float.Magnitude = Float;
Float.Exponent = Int;
Float.RawSignificand = UInt32;
Float.FloatLiteralType = Float;
Float.RawExponent = UInt;
Float.IntegerLiteralType = Int64;
Float.Stride = Float;
Float.SIMDMaskScalar = Int32;
Float.SIMD2Storage.Scalar = Float;
Float.SIMD4Storage.Scalar = Float;
Float.SIMD8Storage.Scalar = Float;
Float.SIMD16Storage.Scalar = Float;
Float.SIMD32Storage.Scalar = Float;
Float.SIMD64Storage.Scalar = Float;
_FloatAnyHashableBox.Base = Float;
Double.Magnitude = Double;
Double.Exponent = Int;
Double.RawSignificand = UInt64;
Double.FloatLiteralType = Double;
Double.RawExponent = UInt;
Double.IntegerLiteralType = Int64;
Double.Stride = Double;
Double.SIMDMaskScalar = Int64;
Double.SIMD2Storage.Scalar = Double;
Double.SIMD4Storage.Scalar = Double;
Double.SIMD8Storage.Scalar = Double;
Double.SIMD16Storage.Scalar = Double;
Double.SIMD32Storage.Scalar = Double;
Double.SIMD64Storage.Scalar = Double;
_DoubleAnyHashableBox.Base = Double;
Float80.Magnitude = Float80;
Float80.Exponent = Int;
Float80.RawSignificand = UInt64;
Float80.FloatLiteralType = Float80;
Float80.RawExponent = UInt;
Float80.IntegerLiteralType = Int64;
Float80.Stride = Float80;
_Float80AnyHashableBox.Base = Float80;
_HashTable.Word = _UnsafeBitset.Word;
_HashTable.Iterator.Element = _HashTable.Bucket;
_HashTable.Element = _HashTable.Bucket;
DefaultIndices.Index = { $genericType: 'Elements', $subchain: 'Index' };
DefaultIndices.Element = { $genericType: 'Elements', $subchain: 'Index' };
DefaultIndices.Indices = DefaultIndices;
DefaultIndices.SubSequence = DefaultIndices;
DefaultIndices.Iterator = IndexingIterator;
UInt8.IntegerLiteralType = UInt8;
UInt8.Words.Indices = Range;
UInt8.Words.SubSequence = Slice;
UInt8.Words.Element = UInt;
UInt8.Words.Index = Int;
UInt8.Words.Iterator = IndexingIterator;
UInt8.Magnitude = UInt8;
UInt8.Stride = Int;
UInt8.SIMDMaskScalar = Int8;
UInt8.SIMD2Storage.Scalar = UInt8;
UInt8.SIMD4Storage.Scalar = UInt8;
UInt8.SIMD8Storage.Scalar = UInt8;
UInt8.SIMD16Storage.Scalar = UInt8;
UInt8.SIMD32Storage.Scalar = UInt8;
UInt8.SIMD64Storage.Scalar = UInt8;
Int8.IntegerLiteralType = Int8;
Int8.Words.Indices = Range;
Int8.Words.SubSequence = Slice;
Int8.Words.Element = UInt;
Int8.Words.Index = Int;
Int8.Words.Iterator = IndexingIterator;
Int8.Magnitude = UInt8;
Int8.Stride = Int;
Int8.SIMDMaskScalar = Int8;
Int8.SIMD2Storage.Scalar = Int8;
Int8.SIMD4Storage.Scalar = Int8;
Int8.SIMD8Storage.Scalar = Int8;
Int8.SIMD16Storage.Scalar = Int8;
Int8.SIMD32Storage.Scalar = Int8;
Int8.SIMD64Storage.Scalar = Int8;
UInt16.IntegerLiteralType = UInt16;
UInt16.Words.Indices = Range;
UInt16.Words.SubSequence = Slice;
UInt16.Words.Element = UInt;
UInt16.Words.Index = Int;
UInt16.Words.Iterator = IndexingIterator;
UInt16.Magnitude = UInt16;
UInt16.Stride = Int;
UInt16.SIMDMaskScalar = Int16;
UInt16.SIMD2Storage.Scalar = UInt16;
UInt16.SIMD4Storage.Scalar = UInt16;
UInt16.SIMD8Storage.Scalar = UInt16;
UInt16.SIMD16Storage.Scalar = UInt16;
UInt16.SIMD32Storage.Scalar = UInt16;
UInt16.SIMD64Storage.Scalar = UInt16;
Int16.IntegerLiteralType = Int16;
Int16.Words.Indices = Range;
Int16.Words.SubSequence = Slice;
Int16.Words.Element = UInt;
Int16.Words.Index = Int;
Int16.Words.Iterator = IndexingIterator;
Int16.Magnitude = UInt16;
Int16.Stride = Int;
Int16.SIMDMaskScalar = Int16;
Int16.SIMD2Storage.Scalar = Int16;
Int16.SIMD4Storage.Scalar = Int16;
Int16.SIMD8Storage.Scalar = Int16;
Int16.SIMD16Storage.Scalar = Int16;
Int16.SIMD32Storage.Scalar = Int16;
Int16.SIMD64Storage.Scalar = Int16;
UInt32.IntegerLiteralType = UInt32;
UInt32.Words.Indices = Range;
UInt32.Words.SubSequence = Slice;
UInt32.Words.Element = UInt;
UInt32.Words.Index = Int;
UInt32.Words.Iterator = IndexingIterator;
UInt32.Magnitude = UInt32;
UInt32.Stride = Int;
UInt32.SIMDMaskScalar = Int32;
UInt32.SIMD2Storage.Scalar = UInt32;
UInt32.SIMD4Storage.Scalar = UInt32;
UInt32.SIMD8Storage.Scalar = UInt32;
UInt32.SIMD16Storage.Scalar = UInt32;
UInt32.SIMD32Storage.Scalar = UInt32;
UInt32.SIMD64Storage.Scalar = UInt32;
Int32.IntegerLiteralType = Int32;
Int32.Words.Indices = Range;
Int32.Words.SubSequence = Slice;
Int32.Words.Element = UInt;
Int32.Words.Index = Int;
Int32.Words.Iterator = IndexingIterator;
Int32.Magnitude = UInt32;
Int32.Stride = Int;
Int32.SIMDMaskScalar = Int32;
Int32.SIMD2Storage.Scalar = Int32;
Int32.SIMD4Storage.Scalar = Int32;
Int32.SIMD8Storage.Scalar = Int32;
Int32.SIMD16Storage.Scalar = Int32;
Int32.SIMD32Storage.Scalar = Int32;
Int32.SIMD64Storage.Scalar = Int32;
UInt64.IntegerLiteralType = UInt64;
UInt64.Words.Indices = Range;
UInt64.Words.SubSequence = Slice;
UInt64.Words.Element = UInt;
UInt64.Words.Index = Int;
UInt64.Words.Iterator = IndexingIterator;
UInt64.Magnitude = UInt64;
UInt64.Stride = Int;
UInt64.SIMDMaskScalar = Int64;
UInt64.SIMD2Storage.Scalar = UInt64;
UInt64.SIMD4Storage.Scalar = UInt64;
UInt64.SIMD8Storage.Scalar = UInt64;
UInt64.SIMD16Storage.Scalar = UInt64;
UInt64.SIMD32Storage.Scalar = UInt64;
UInt64.SIMD64Storage.Scalar = UInt64;
Int64.IntegerLiteralType = Int64;
Int64.Words.Indices = Range;
Int64.Words.SubSequence = Slice;
Int64.Words.Element = UInt;
Int64.Words.Index = Int;
Int64.Words.Iterator = IndexingIterator;
Int64.Magnitude = UInt64;
Int64.Stride = Int;
Int64.SIMDMaskScalar = Int64;
Int64.SIMD2Storage.Scalar = Int64;
Int64.SIMD4Storage.Scalar = Int64;
Int64.SIMD8Storage.Scalar = Int64;
Int64.SIMD16Storage.Scalar = Int64;
Int64.SIMD32Storage.Scalar = Int64;
Int64.SIMD64Storage.Scalar = Int64;
UInt.IntegerLiteralType = UInt;
UInt.Words.Indices = Range;
UInt.Words.SubSequence = Slice;
UInt.Words.Element = UInt;
UInt.Words.Index = Int;
UInt.Words.Iterator = IndexingIterator;
UInt.Magnitude = UInt;
UInt.Stride = Int;
UInt.SIMDMaskScalar = Int;
UInt.SIMD2Storage.Scalar = UInt;
UInt.SIMD4Storage.Scalar = UInt;
UInt.SIMD8Storage.Scalar = UInt;
UInt.SIMD16Storage.Scalar = UInt;
UInt.SIMD32Storage.Scalar = UInt;
UInt.SIMD64Storage.Scalar = UInt;
Int.IntegerLiteralType = Int;
Int.Words.Indices = Range;
Int.Words.SubSequence = Slice;
Int.Words.Element = UInt;
Int.Words.Index = Int;
Int.Words.Iterator = IndexingIterator;
Int.Magnitude = UInt;
Int.Stride = Int;
Int.SIMDMaskScalar = Int;
Int.SIMD2Storage.Scalar = Int;
Int.SIMD4Storage.Scalar = Int;
Int.SIMD8Storage.Scalar = Int;
Int.SIMD16Storage.Scalar = Int;
Int.SIMD32Storage.Scalar = Int;
Int.SIMD64Storage.Scalar = Int;
JoinedSequence.Element = { $genericType: 'Base', $subchain: 'Element.Element' };
JoinedSequence.Iterator.Element = { $genericType: 'Base', $subchain: 'Element.Element' };
KeyPath.Kind = KeyPathKind;
ComputedArgumentWitnesses.Destroy = '?function_type';
ComputedArgumentWitnesses.Copy = '?function_type';
ComputedArgumentWitnesses.Equals = '?function_type';
ComputedArgumentWitnesses.Hash = '?function_type';
//ClassHolder.AccessRecord = UnsafeValueBuffer
KeyValuePairs.Key = { $genericType: 'Key' };
KeyValuePairs.Value = { $genericType: 'Value' };
KeyValuePairs.Element = '?tuple_type';
KeyValuePairs.Index = Int;
KeyValuePairs.Indices = Range;
KeyValuePairs.SubSequence = Slice;
KeyValuePairs.Iterator = IndexingIterator;
LazySequence.Index = { $genericType: 'Base', $subchain: 'Index' };
LazySequence.Indices = { $genericType: 'Base', $subchain: 'Indices' };
LazySequence.SubSequence = Slice;
LazySequence.Element = { $genericType: 'Base', $subchain: 'Element' };
LazySequence.Iterator = { $genericType: 'Base', $subchain: 'Iterator' };
LazySequence.Elements = { $genericType: 'Base' };
LazyMapSequence.Elements = LazyMapSequence;
LazyMapSequence.Iterator.Element = { $genericType: 'Element' };
LazyMapSequence.Iterator.Iterator = LazyMapSequence.Iterator;
LazyMapSequence.Element = { $genericType: 'Element' };
LazyMapSequence.Index = { $genericType: 'Base', $subchain: 'Index' };
LazyMapSequence.Indices = { $genericType: 'Base', $subchain: 'Indices' };
LazyMapSequence.SubSequence = LazyMapCollection;
_NativeDictionary.Element = '?tuple_type';
_NativeDictionary.Bucket = _HashTable.Bucket;
_NativeDictionary.Index = Dictionary.Index;
_NativeDictionary.Key = { $genericType: 'Key' };
_NativeDictionary.Value = { $genericType: 'Value' };
_NativeDictionary.Iterator.Element = '?tuple_type';
_NativeSet.Bucket = _HashTable.Bucket;
_NativeSet.Index = Set.Index;
_NativeSet.Iterator.Element = { $genericType: 'Element' };
_NativeSet.Element = { $genericType: 'Element' };
_SwiftNewtypeWrapper$implementation._ObjectiveCType = { $genericType: 'Self', $subchain: 'RawValue._ObjectiveCType' };
_NormalizedUTF8CodeUnitIterator.CodeUnit = UInt8;
_NormalizedUTF8CodeUnitIterator.Element = UInt8;
_NormalizedUTF8CodeUnitIterator.Iterator = _NormalizedUTF8CodeUnitIterator;
_NormalizedUTF16CodeUnitIterator.CodeUnit = UInt16;
_NormalizedUTF16CodeUnitIterator.Element = UInt16;
_NormalizedUTF8CodeUnitIterator_2.Element = UInt8;
_NormalizedUTF8CodeUnitIterator_2.Iterator = _NormalizedUTF8CodeUnitIterator_2;
Optional._ObjectiveCType = AnyObject;
_Pointer$implementation.Distance = Int;
LazyPrefixWhileSequence.Element = { $genericType: 'Base', $subchain: 'Element' };
LazyPrefixWhileSequence.Iterator.Element = { $genericType: 'Base', $subchain: 'Element' };
LazyPrefixWhileSequence.Iterator.Iterator = LazyPrefixWhileSequence.Iterator;
LazyPrefixWhileSequence.Elements = LazyPrefixWhileSequence;
LazyPrefixWhileSequence.SubSequence = Slice;
LazyPrefixWhileSequence.Indices = DefaultIndices;
RandomAccessCollection$implementation._Default_Indices = Range;
Range.Element = { $genericType: 'Bound' };
Range.Iterator = IndexingIterator;
Range.Index = { $genericType: 'Bound' };
Range.Indices = Range;
Range.SubSequence = Range;
Range.Bound = { $genericType: 'Bound' };
PartialRangeUpTo.Bound = { $genericType: 'Bound' };
PartialRangeThrough.Bound = { $genericType: 'Bound' };
PartialRangeFrom.Bound = { $genericType: 'Bound' };
PartialRangeFrom.Element = { $genericType: 'Bound' };
PartialRangeFrom.Iterator.Element = { $genericType: 'Bound' };
Repeated.Indices = Range;
Repeated.Index = Int;
Repeated.Element = { $genericType: 'Element' };
Repeated.Iterator = IndexingIterator;
Repeated.SubSequence = Slice;
ReversedCollection.Elements = ReversedCollection;
ReversedCollection.Iterator.Element = { $genericType: 'Base', $subchain: 'Element' };
ReversedCollection.Iterator.Iterator = ReversedCollection.Iterator;
ReversedCollection.Element = { $genericType: 'Base', $subchain: 'Element' };
ReversedCollection.SubSequence = Slice;
ReversedCollection.Indices = DefaultIndices;
_RuntimeFunctionCounters.RuntimeFunctionCountersUpdateHandler = '?function_type';
_RuntimeFunctionCountersStats$implementation.Counters = _RuntimeFunctionCounters;
_RuntimeFunctionCountersState.Counters = '?tuple_type';
Sequence$implementation._Default_Iterator = { $genericType: 'Self' };
DropFirstSequence.Element = { $genericType: 'Base', $subchain: 'Element' };
DropFirstSequence.Iterator = { $genericType: 'Base', $subchain: 'Iterator' };
DropFirstSequence.SubSequence = AnySequence;
PrefixSequence.Iterator.Element = { $genericType: 'Base', $subchain: 'Element' };
PrefixSequence.Element = { $genericType: 'Base', $subchain: 'Element' };
DropWhileSequence.Element = { $genericType: 'Base', $subchain: 'Element' };
DropWhileSequence.Iterator.Element = { $genericType: 'Base', $subchain: 'Element' };
IteratorSequence.Element = { $genericType: 'Base', $subchain: 'Element' };
IteratorSequence.Iterator = IteratorSequence;
Set.ArrayLiteralElement = { $genericType: 'Element' };
Set.Element = { $genericType: 'Element' };
Set.SubSequence = Slice;
Set.Indices = DefaultIndices;
Set.Iterator.Element = { $genericType: 'Element' };
Set._Variant.Index = Set.Index;
Set._Variant.Element = { $genericType: 'Element' };
_CocoaSet.Element = AnyObject;
_CocoaSet.Iterator.Element = AnyObject;
Slice.Elements = Slice;
Slice.Index = { $genericType: 'Base', $subchain: 'Index' };
Slice.Indices = { $genericType: 'Base', $subchain: 'Indices' };
Slice.Element = { $genericType: 'Base', $subchain: 'Element' };
Slice.SubSequence = Slice;
Slice.Iterator = IndexingIterator;
_SmallString.RawBitPattern = '?tuple_type';
_SmallString.Index = Int;
_SmallString.Element = UInt8;
_SmallString.SubSequence = _SmallString;
_SmallString.Indices = Range;
_SmallString.Iterator = IndexingIterator;
StaticString.StringLiteralType = StaticString;
StaticString.ExtendedGraphemeClusterLiteralType = StaticString;
StaticString.UnicodeScalarLiteralType = StaticString;
StrideToIterator.Element = { $genericType: 'Element' };
StrideTo.Element = { $genericType: 'Element' };
StrideTo.Iterator = StrideToIterator;
StrideThroughIterator.Element = { $genericType: 'Element' };
StrideThrough.Element = { $genericType: 'Element' };
StrideThrough.Iterator = StrideThroughIterator;
String.StringLiteralType = String;
String.ExtendedGraphemeClusterLiteralType = String;
String.UnicodeScalarLiteralType = String;
String.IndexDistance = Int;
String.SubSequence = Substring;
String.Element = Character;
String.Indices = DefaultIndices;
String.Iterator.Element = Character;
String.StringInterpolation = DefaultStringInterpolation;
String.UnicodeScalarView.Index = String.Index;
String.UnicodeScalarView.Element = Unicode.Scalar;
String.UnicodeScalarView.Indices = DefaultIndices;
String.UnicodeScalarView.Iterator.Element = Unicode.Scalar;
String.UnicodeScalarView.SubSequence = Substring.UnicodeScalarView;
String.UnicodeScalarIndex = String.UnicodeScalarView.Index;
String.UTF16View.Index = String.Index;
String.UTF16View.Element = UTF16.CodeUnit;
String.UTF16View.Indices = DefaultIndices;
String.UTF16View.Iterator.Element = UInt16;
String.UTF16View.SubSequence = Substring.UTF16View;
String.UTF8View.Index = String.Index;
String.UTF8View.Element = UTF8.CodeUnit;
String.UTF8View.Indices = DefaultIndices;
String.UTF8View.Iterator = IndexingIterator;
String.UTF8View.SubSequence = Substring.UTF8View;
String.CharacterView = String;
_StringGuts.Index = String.Index;
_StringObject.CountAndFlags.RawBitPattern = UInt64;
_StringObject.RawBitPattern = '?tuple_type';
DefaultStringInterpolation.StringLiteralType = String;
_Normalization._SegmentOutputBuffer = _FixedArray16;
Substring.Index = String.Index;
Substring.SubSequence = Substring;
Substring.Element = Character;
Substring.Iterator = IndexingIterator;
Substring.Indices = DefaultIndices;
Substring.StringInterpolation = DefaultStringInterpolation;
Substring.UTF8View.Index = String.UTF8View.Index;
Substring.UTF8View.Indices = String.UTF8View.Indices;
Substring.UTF8View.Element = String.UTF8View.Element;
Substring.UTF8View.SubSequence = Substring.UTF8View;
Substring.UTF8View.Iterator = IndexingIterator;
Substring.UTF16View.Index = String.UTF16View.Index;
Substring.UTF16View.Indices = String.UTF16View.Indices;
Substring.UTF16View.Element = String.UTF16View.Element;
Substring.UTF16View.SubSequence = Substring.UTF16View;
Substring.UTF16View.Iterator = IndexingIterator;
Substring.UnicodeScalarView.Index = String.UnicodeScalarView.Index;
Substring.UnicodeScalarView.Indices = String.UnicodeScalarView.Indices;
Substring.UnicodeScalarView.Element = String.UnicodeScalarView.Element;
Substring.UnicodeScalarView.SubSequence = Substring.UnicodeScalarView;
Substring.UnicodeScalarView.Iterator = IndexingIterator;
Substring.UnicodeScalarLiteralType = String;
Substring.ExtendedGraphemeClusterLiteralType = String;
Substring.StringLiteralType = String;
Substring.CharacterView = Substring;
_UIntBuffer.Storage = UInt32;
_UIntBuffer.SubSequence = Slice;
_UIntBuffer.Iterator.Element = { $genericType: 'Element' };
_UIntBuffer.Iterator.Iterator = _UIntBuffer.Iterator;
_UIntBuffer.Element = { $genericType: 'Element' };
_UIntBuffer.Indices = DefaultIndices;
UnsafeMutableBufferPointer.Iterator = UnsafeBufferPointer.Iterator;
UnsafeMutableBufferPointer.Index = Int;
UnsafeMutableBufferPointer.Indices = Range;
UnsafeMutableBufferPointer.Element = { $genericType: 'Element' };
UnsafeMutableBufferPointer.SubSequence = Slice;
UnsafeBufferPointer.Iterator.Element = { $genericType: 'Element' };
UnsafeBufferPointer.Index = Int;
UnsafeBufferPointer.Indices = Range;
UnsafeBufferPointer.Element = { $genericType: 'Element' };
UnsafeBufferPointer.SubSequence = Slice;
UnsafeMutableRawBufferPointer.Iterator = UnsafeRawBufferPointer.Iterator;
UnsafeMutableRawBufferPointer.SubSequence = Slice;
UnsafeMutableRawBufferPointer.Element = UInt8;
UnsafeMutableRawBufferPointer.Index = Int;
UnsafeMutableRawBufferPointer.Indices = Range;
UnsafeRawBufferPointer.Iterator.Element = UInt8;
UnsafeRawBufferPointer.Iterator.Iterator = UnsafeRawBufferPointer.Iterator;
UnsafeRawBufferPointer.SubSequence = Slice;
UnsafeRawBufferPointer.Element = UInt8;
UnsafeRawBufferPointer.Index = Int;
UnsafeRawBufferPointer.Indices = Range;
UnsafePointer.Distance = Int;
UnsafePointer.Pointee = { $genericType: 'Pointee' };
UnsafePointer.Stride = Int;
UnsafeMutablePointer.Distance = Int;
UnsafeMutablePointer.Stride = Int;
UnsafeMutablePointer.Pointee = { $genericType: 'Pointee' };
UnsafeRawPointer.Pointee = UInt8;
UnsafeRawPointer.Stride = Int;
UnsafeMutableRawPointer.Pointee = UInt8;
UnsafeMutableRawPointer.Stride = Int;
Unicode.Scalar.UnicodeScalarLiteralType = Unicode.Scalar;
Unicode.Scalar.UTF16View.Indices = Range;
Unicode.Scalar.UTF16View.Element = UTF16.CodeUnit;
Unicode.Scalar.UTF16View.Index = Int;
Unicode.Scalar.UTF16View.SubSequence = Slice;
Unicode.Scalar.UTF16View.Iterator = IndexingIterator;
Unicode.Scalar.Properties._U_StrToX = '?function_type';
Unicode.ASCII.CodeUnit = UInt8;
Unicode.ASCII.EncodedScalar = CollectionOfOne;
Unicode.ASCII.Parser.Encoding = Unicode.ASCII;
Unicode.ASCII.ForwardParser = Unicode.ASCII.Parser;
Unicode.ASCII.ReverseParser = Unicode.ASCII.Parser;
Unicode.Encoding = _UnicodeEncoding$implementation;
Unicode.Parser = _UnicodeParser$implementation;
Unicode.UTF16.CodeUnit = UInt16;
Unicode.UTF16.EncodedScalar = _UIntBuffer;
Unicode.UTF16.ForwardParser._Buffer = _UIntBuffer;
Unicode.UTF16.ForwardParser.Encoding = Unicode.UTF16;
Unicode.UTF16.ReverseParser._Buffer = _UIntBuffer;
Unicode.UTF16.ReverseParser.Encoding = Unicode.UTF16;
Unicode.UTF8.CodeUnit = UInt8;
Unicode.UTF8.EncodedScalar = _ValidUTF8Buffer;
Unicode.UTF8.ForwardParser._Buffer = _UIntBuffer;
Unicode.UTF8.ForwardParser.Encoding = Unicode.UTF8;
Unicode.UTF8.ReverseParser._Buffer = _UIntBuffer;
Unicode.UTF8.ReverseParser.Encoding = Unicode.UTF8;
Unicode.Version = '?tuple_type';
Unicode.CanonicalCombiningClass.RawValue = UInt8;
Unicode.UTF32.CodeUnit = UInt32;
Unicode.UTF32.EncodedScalar = CollectionOfOne;
Unicode.UTF32.Parser.Encoding = Unicode.UTF32;
Unicode.UTF32.ForwardParser = Unicode.UTF32.Parser;
Unicode.UTF32.ReverseParser = Unicode.UTF32.Parser;
_ValidUTF8Buffer.Element = Unicode.UTF8.CodeUnit;
_ValidUTF8Buffer.SubSequence = Slice;
_ValidUTF8Buffer.Iterator.Element = UInt8;
_ValidUTF8Buffer.Iterator.Iterator = _ValidUTF8Buffer.Iterator;
_ValidUTF8Buffer.Indices = DefaultIndices;
CollectionOfOne.Iterator.Element = { $genericType: 'Element' };
CollectionOfOne.Index = Int;
CollectionOfOne.Indices = Range;
CollectionOfOne.SubSequence = Slice;
CollectionOfOne.Element = { $genericType: 'Element' };
AnyIterator.Element = { $genericType: 'Element' };
AnyIterator.Iterator = AnyIterator;
_ClosureBasedIterator.Element = { $genericType: 'Element' };
_AnyIteratorBoxBase.Element = { $genericType: 'Element' };
_SequenceBox.Element = { $genericType: 'S', $subchain: 'Element' };
_CollectionBox.Element = { $genericType: 'S', $subchain: 'Element' };
_BidirectionalCollectionBox.Element = { $genericType: 'S', $subchain: 'Element' };
_RandomAccessCollectionBox.Element = { $genericType: 'S', $subchain: 'Element' };
_ClosureBasedSequence.Element = { $genericType: 'Iterator', $subchain: 'Element' };
_ClosureBasedSequence.Iterator = { $genericType: 'Iterator' };
AnySequence.Iterator = AnyIterator;
AnySequence.Element = { $genericType: 'Element' };
AnyCollection.Indices = DefaultIndices;
AnyCollection.Iterator = AnyIterator;
AnyCollection.Index = AnyIndex;
AnyCollection.SubSequence = AnyCollection;
AnyCollection.Element = { $genericType: 'Element' };
AnyBidirectionalCollection.Indices = DefaultIndices;
AnyBidirectionalCollection.Iterator = AnyIterator;
AnyBidirectionalCollection.Index = AnyIndex;
AnyBidirectionalCollection.SubSequence = AnyBidirectionalCollection;
AnyBidirectionalCollection.Element = { $genericType: 'Element' };
AnyRandomAccessCollection.Indices = DefaultIndices;
AnyRandomAccessCollection.Iterator = AnyIterator;
AnyRandomAccessCollection.Index = AnyIndex;
AnyRandomAccessCollection.SubSequence = AnyRandomAccessCollection;
AnyRandomAccessCollection.Element = { $genericType: 'Element' };
Mirror.Child = '?tuple_type';
Mirror.Children = AnyCollection;
_SliceBuffer.NativeStorage = _ContiguousArrayStorage;
_SliceBuffer.NativeBuffer = _ContiguousArrayBuffer;
_SliceBuffer.Indices = Range;
_SliceBuffer.Element = { $genericType: 'Element' };
_SliceBuffer.Index = Int;
_SliceBuffer.SubSequence = _SliceBuffer;
_SliceBuffer.Iterator = IndexingIterator;
SIMDMask.MaskStorage = { $genericType: 'Storage' };
SIMDMask.Scalar = Bool;
SIMDMask.ArrayLiteralElement = SIMDMask.Scalar;
SIMD2.MaskStorage = SIMD2;
SIMD2.Scalar = { $genericType: 'Scalar' };
SIMD2.ArrayLiteralElement = { $genericType: 'Scalar' };
SIMD4.MaskStorage = SIMD4;
SIMD4.Scalar = { $genericType: 'Scalar' };
SIMD4.ArrayLiteralElement = { $genericType: 'Scalar' };
SIMD8.MaskStorage = SIMD8;
SIMD8.Scalar = { $genericType: 'Scalar' };
SIMD8.ArrayLiteralElement = { $genericType: 'Scalar' };
SIMD16.MaskStorage = SIMD16;
SIMD16.Scalar = { $genericType: 'Scalar' };
SIMD16.ArrayLiteralElement = { $genericType: 'Scalar' };
SIMD32.MaskStorage = SIMD32;
SIMD32.Scalar = { $genericType: 'Scalar' };
SIMD32.ArrayLiteralElement = { $genericType: 'Scalar' };
SIMD64.MaskStorage = SIMD64;
SIMD64.Scalar = { $genericType: 'Scalar' };
SIMD64.ArrayLiteralElement = { $genericType: 'Scalar' };
SIMD3.MaskStorage = SIMD3;
SIMD3.Scalar = { $genericType: 'Scalar' };
SIMD3.ArrayLiteralElement = { $genericType: 'Scalar' };
UnfoldSequence.Element = { $genericType: 'Element' };
UnfoldSequence.Iterator = UnfoldSequence;
Zip2Sequence.Iterator.Element = '?tuple_type';
Zip2Sequence.Stream1 = { $genericType: 'Sequence1', $subchain: 'Iterator' };
Zip2Sequence.Stream2 = { $genericType: 'Sequence2', $subchain: 'Iterator' };
Zip2Sequence.Element = '?tuple_type';
var NSObject = /** @class */ (function () {
    function NSObject() {
    }
    /*ObjectiveC.(file).NSObject.load()*/
    /*ObjectiveC.(file).NSObject.load()*/
    NSObject.load = function ($info) {
        throw 'unsupported method ObjectiveC.(file).NSObject.load() in ' + this.constructor.name;
    };
    /*ObjectiveC.(file).NSObject.initialize()*/
    /*ObjectiveC.(file).NSObject.initialize()*/
    NSObject.initialize = function ($info) {
        throw 'unsupported method ObjectiveC.(file).NSObject.initialize() in ' + this.constructor.name;
    };
    /*ObjectiveC.(file).NSObject.init()*/
    /*ObjectiveC.(file).NSObject.init()*/
    NSObject.prototype.init = function ($info) {
    };
    /*ObjectiveC.(file).NSObject.alloc(with:NSZone?)*/
    /*ObjectiveC.(file).NSObject.alloc(with:NSZone?)*/
    NSObject.allocWith = function ($info, zone) {
        throw 'unsupported method ObjectiveC.(file).NSObject.alloc(with:NSZone?) in ' + this.constructor.name;
    };
    /*ObjectiveC.(file).NSObject.allocWithZone(_:NSZone?)*/
    /*ObjectiveC.(file).NSObject.allocWithZone(_:NSZone?)*/
    NSObject.allocWithZone = function ($info, zone) {
        throw 'unsupported method ObjectiveC.(file).NSObject.allocWithZone(_:NSZone?) in ' + this.constructor.name;
    };
    /*ObjectiveC.(file).NSObject.alloc()*/
    /*ObjectiveC.(file).NSObject.alloc()*/
    NSObject.alloc = function ($info) {
        throw 'unsupported method ObjectiveC.(file).NSObject.alloc() in ' + this.constructor.name;
    };
    /*ObjectiveC.(file).NSObject.finalize()*/
    /*ObjectiveC.(file).NSObject.finalize()*/
    NSObject.finalize = function ($info) {
        throw 'unsupported method ObjectiveC.(file).NSObject.finalize() in ' + this.constructor.name;
    };
    /*ObjectiveC.(file).NSObject.finalize()*/
    /*ObjectiveC.(file).NSObject.finalize()*/
    NSObject.prototype.finalize = function ($info) {
        throw 'unsupported method ObjectiveC.(file).NSObject.finalize() in ' + this.constructor.name;
    };
    /*ObjectiveC.(file).NSObject.copy()*/
    /*ObjectiveC.(file).NSObject.copy()*/
    NSObject.copy = function ($info) {
        throw 'unsupported method ObjectiveC.(file).NSObject.copy() in ' + this.constructor.name;
    };
    /*ObjectiveC.(file).NSObject.copy()*/
    /*ObjectiveC.(file).NSObject.copy()*/
    NSObject.prototype.copy = function ($info) {
        throw 'unsupported method ObjectiveC.(file).NSObject.copy() in ' + this.constructor.name;
    };
    /*ObjectiveC.(file).NSObject.mutableCopy()*/
    /*ObjectiveC.(file).NSObject.mutableCopy()*/
    NSObject.mutableCopy = function ($info) {
        throw 'unsupported method ObjectiveC.(file).NSObject.mutableCopy() in ' + this.constructor.name;
    };
    /*ObjectiveC.(file).NSObject.mutableCopy()*/
    /*ObjectiveC.(file).NSObject.mutableCopy()*/
    NSObject.prototype.mutableCopy = function ($info) {
        throw 'unsupported method ObjectiveC.(file).NSObject.mutableCopy() in ' + this.constructor.name;
    };
    /*ObjectiveC.(file).NSObject.copy(with:NSZone?)*/
    /*ObjectiveC.(file).NSObject.copy(with:NSZone?)*/
    NSObject.copyWith = function ($info, zone) {
        throw 'unsupported method ObjectiveC.(file).NSObject.copy(with:NSZone?) in ' + this.constructor.name;
    };
    /*ObjectiveC.(file).NSObject.copyWithZone(_:NSZone?)*/
    /*ObjectiveC.(file).NSObject.copyWithZone(_:NSZone?)*/
    NSObject.copyWithZone = function ($info, zone) {
        throw 'unsupported method ObjectiveC.(file).NSObject.copyWithZone(_:NSZone?) in ' + this.constructor.name;
    };
    /*ObjectiveC.(file).NSObject.mutableCopy(with:NSZone?)*/
    /*ObjectiveC.(file).NSObject.mutableCopy(with:NSZone?)*/
    NSObject.mutableCopyWith = function ($info, zone) {
        throw 'unsupported method ObjectiveC.(file).NSObject.mutableCopy(with:NSZone?) in ' + this.constructor.name;
    };
    /*ObjectiveC.(file).NSObject.mutableCopyWithZone(_:NSZone?)*/
    /*ObjectiveC.(file).NSObject.mutableCopyWithZone(_:NSZone?)*/
    NSObject.mutableCopyWithZone = function ($info, zone) {
        throw 'unsupported method ObjectiveC.(file).NSObject.mutableCopyWithZone(_:NSZone?) in ' + this.constructor.name;
    };
    /*ObjectiveC.(file).NSObject.instancesRespond(to:Selector?)*/
    /*ObjectiveC.(file).NSObject.instancesRespond(to:Selector?)*/
    NSObject.instancesRespondTo = function ($info, aSelector) {
        throw 'unsupported method ObjectiveC.(file).NSObject.instancesRespond(to:Selector?) in ' + this.constructor.name;
    };
    /*ObjectiveC.(file).NSObject.instancesRespondToSelector(_:Selector?)*/
    /*ObjectiveC.(file).NSObject.instancesRespondToSelector(_:Selector?)*/
    NSObject.instancesRespondToSelector = function ($info, aSelector) {
        throw 'unsupported method ObjectiveC.(file).NSObject.instancesRespondToSelector(_:Selector?) in ' + this.constructor.name;
    };
    /*ObjectiveC.(file).NSObject.conforms(to:Protocol)*/
    /*ObjectiveC.(file).NSObject.conforms(to:Protocol)*/
    NSObject.conformsTo = function ($info, protocol) {
        throw 'unsupported method ObjectiveC.(file).NSObject.conforms(to:Protocol) in ' + this.constructor.name;
    };
    /*ObjectiveC.(file).NSObject.conformsToProtocol(_:Protocol)*/
    /*ObjectiveC.(file).NSObject.conformsToProtocol(_:Protocol)*/
    NSObject.conformsToProtocol = function ($info, protocol) {
        throw 'unsupported method ObjectiveC.(file).NSObject.conformsToProtocol(_:Protocol) in ' + this.constructor.name;
    };
    /*ObjectiveC.(file).NSObject.method(for:Selector?)*/
    /*ObjectiveC.(file).NSObject.method(for:Selector?)*/
    NSObject.methodFor = function ($info, aSelector) {
        throw 'unsupported method ObjectiveC.(file).NSObject.method(for:Selector?) in ' + this.constructor.name;
    };
    /*ObjectiveC.(file).NSObject.method(for:Selector?)*/
    /*ObjectiveC.(file).NSObject.method(for:Selector?)*/
    NSObject.prototype.methodFor = function ($info, aSelector) {
        throw 'unsupported method ObjectiveC.(file).NSObject.method(for:Selector?) in ' + this.constructor.name;
    };
    /*ObjectiveC.(file).NSObject.methodForSelector(_:Selector?)*/
    /*ObjectiveC.(file).NSObject.methodForSelector(_:Selector?)*/
    NSObject.methodForSelector = function ($info, aSelector) {
        throw 'unsupported method ObjectiveC.(file).NSObject.methodForSelector(_:Selector?) in ' + this.constructor.name;
    };
    /*ObjectiveC.(file).NSObject.methodForSelector(_:Selector?)*/
    /*ObjectiveC.(file).NSObject.methodForSelector(_:Selector?)*/
    NSObject.prototype.methodForSelector = function ($info, aSelector) {
        throw 'unsupported method ObjectiveC.(file).NSObject.methodForSelector(_:Selector?) in ' + this.constructor.name;
    };
    /*ObjectiveC.(file).NSObject.instanceMethod(for:Selector?)*/
    /*ObjectiveC.(file).NSObject.instanceMethod(for:Selector?)*/
    NSObject.instanceMethodFor = function ($info, aSelector) {
        throw 'unsupported method ObjectiveC.(file).NSObject.instanceMethod(for:Selector?) in ' + this.constructor.name;
    };
    /*ObjectiveC.(file).NSObject.instanceMethodForSelector(_:Selector?)*/
    /*ObjectiveC.(file).NSObject.instanceMethodForSelector(_:Selector?)*/
    NSObject.instanceMethodForSelector = function ($info, aSelector) {
        throw 'unsupported method ObjectiveC.(file).NSObject.instanceMethodForSelector(_:Selector?) in ' + this.constructor.name;
    };
    /*ObjectiveC.(file).NSObject.doesNotRecognizeSelector(_:Selector?)*/
    /*ObjectiveC.(file).NSObject.doesNotRecognizeSelector(_:Selector?)*/
    NSObject.doesNotRecognizeSelector = function ($info, aSelector) {
        throw 'unsupported method ObjectiveC.(file).NSObject.doesNotRecognizeSelector(_:Selector?) in ' + this.constructor.name;
    };
    /*ObjectiveC.(file).NSObject.doesNotRecognizeSelector(_:Selector?)*/
    /*ObjectiveC.(file).NSObject.doesNotRecognizeSelector(_:Selector?)*/
    NSObject.prototype.doesNotRecognizeSelector = function ($info, aSelector) {
        throw 'unsupported method ObjectiveC.(file).NSObject.doesNotRecognizeSelector(_:Selector?) in ' + this.constructor.name;
    };
    /*ObjectiveC.(file).NSObject.forwardingTarget(for:Selector?)*/
    /*ObjectiveC.(file).NSObject.forwardingTarget(for:Selector?)*/
    NSObject.forwardingTargetFor = function ($info, aSelector) {
        throw 'unsupported method ObjectiveC.(file).NSObject.forwardingTarget(for:Selector?) in ' + this.constructor.name;
    };
    /*ObjectiveC.(file).NSObject.forwardingTarget(for:Selector?)*/
    /*ObjectiveC.(file).NSObject.forwardingTarget(for:Selector?)*/
    NSObject.prototype.forwardingTargetFor = function ($info, aSelector) {
        throw 'unsupported method ObjectiveC.(file).NSObject.forwardingTarget(for:Selector?) in ' + this.constructor.name;
    };
    /*ObjectiveC.(file).NSObject.forwardingTargetForSelector(_:Selector?)*/
    /*ObjectiveC.(file).NSObject.forwardingTargetForSelector(_:Selector?)*/
    NSObject.forwardingTargetForSelector = function ($info, aSelector) {
        throw 'unsupported method ObjectiveC.(file).NSObject.forwardingTargetForSelector(_:Selector?) in ' + this.constructor.name;
    };
    /*ObjectiveC.(file).NSObject.forwardingTargetForSelector(_:Selector?)*/
    /*ObjectiveC.(file).NSObject.forwardingTargetForSelector(_:Selector?)*/
    NSObject.prototype.forwardingTargetForSelector = function ($info, aSelector) {
        throw 'unsupported method ObjectiveC.(file).NSObject.forwardingTargetForSelector(_:Selector?) in ' + this.constructor.name;
    };
    /*ObjectiveC.(file).NSObject.forwardInvocation(_:NSInvocation?)*/
    /*ObjectiveC.(file).NSObject.forwardInvocation(_:NSInvocation?)*/
    NSObject.forwardInvocation = function ($info, anInvocation) {
        throw 'unsupported method ObjectiveC.(file).NSObject.forwardInvocation(_:NSInvocation?) in ' + this.constructor.name;
    };
    /*ObjectiveC.(file).NSObject.forwardInvocation(_:NSInvocation?)*/
    /*ObjectiveC.(file).NSObject.forwardInvocation(_:NSInvocation?)*/
    NSObject.prototype.forwardInvocation = function ($info, anInvocation) {
        throw 'unsupported method ObjectiveC.(file).NSObject.forwardInvocation(_:NSInvocation?) in ' + this.constructor.name;
    };
    /*ObjectiveC.(file).NSObject.methodSignature(for:Selector?)*/
    /*ObjectiveC.(file).NSObject.methodSignature(for:Selector?)*/
    NSObject.methodSignatureFor = function ($info, aSelector) {
        throw 'unsupported method ObjectiveC.(file).NSObject.methodSignature(for:Selector?) in ' + this.constructor.name;
    };
    /*ObjectiveC.(file).NSObject.methodSignature(for:Selector?)*/
    /*ObjectiveC.(file).NSObject.methodSignature(for:Selector?)*/
    NSObject.prototype.methodSignatureFor = function ($info, aSelector) {
        throw 'unsupported method ObjectiveC.(file).NSObject.methodSignature(for:Selector?) in ' + this.constructor.name;
    };
    /*ObjectiveC.(file).NSObject.methodSignatureForSelector(_:Selector?)*/
    /*ObjectiveC.(file).NSObject.methodSignatureForSelector(_:Selector?)*/
    NSObject.methodSignatureForSelector = function ($info, aSelector) {
        throw 'unsupported method ObjectiveC.(file).NSObject.methodSignatureForSelector(_:Selector?) in ' + this.constructor.name;
    };
    /*ObjectiveC.(file).NSObject.methodSignatureForSelector(_:Selector?)*/
    /*ObjectiveC.(file).NSObject.methodSignatureForSelector(_:Selector?)*/
    NSObject.prototype.methodSignatureForSelector = function ($info, aSelector) {
        throw 'unsupported method ObjectiveC.(file).NSObject.methodSignatureForSelector(_:Selector?) in ' + this.constructor.name;
    };
    /*ObjectiveC.(file).NSObject.instanceMethodSignature(for:Selector?)*/
    /*ObjectiveC.(file).NSObject.instanceMethodSignature(for:Selector?)*/
    NSObject.instanceMethodSignatureFor = function ($info, aSelector) {
        throw 'unsupported method ObjectiveC.(file).NSObject.instanceMethodSignature(for:Selector?) in ' + this.constructor.name;
    };
    /*ObjectiveC.(file).NSObject.instanceMethodSignatureForSelector(_:Selector?)*/
    /*ObjectiveC.(file).NSObject.instanceMethodSignatureForSelector(_:Selector?)*/
    NSObject.instanceMethodSignatureForSelector = function ($info, aSelector) {
        throw 'unsupported method ObjectiveC.(file).NSObject.instanceMethodSignatureForSelector(_:Selector?) in ' + this.constructor.name;
    };
    /*ObjectiveC.(file).NSObject.allowsWeakReference()*/
    /*ObjectiveC.(file).NSObject.allowsWeakReference()*/
    NSObject.allowsWeakReference = function ($info) {
        throw 'unsupported method ObjectiveC.(file).NSObject.allowsWeakReference() in ' + this.constructor.name;
    };
    /*ObjectiveC.(file).NSObject.allowsWeakReference()*/
    /*ObjectiveC.(file).NSObject.allowsWeakReference()*/
    NSObject.prototype.allowsWeakReference = function ($info) {
        throw 'unsupported method ObjectiveC.(file).NSObject.allowsWeakReference() in ' + this.constructor.name;
    };
    /*ObjectiveC.(file).NSObject.retainWeakReference()*/
    /*ObjectiveC.(file).NSObject.retainWeakReference()*/
    NSObject.retainWeakReference = function ($info) {
        throw 'unsupported method ObjectiveC.(file).NSObject.retainWeakReference() in ' + this.constructor.name;
    };
    /*ObjectiveC.(file).NSObject.retainWeakReference()*/
    /*ObjectiveC.(file).NSObject.retainWeakReference()*/
    NSObject.prototype.retainWeakReference = function ($info) {
        throw 'unsupported method ObjectiveC.(file).NSObject.retainWeakReference() in ' + this.constructor.name;
    };
    /*ObjectiveC.(file).NSObject.isSubclass(of:AnyClass)*/
    /*ObjectiveC.(file).NSObject.isSubclass(of:AnyClass)*/
    NSObject.isSubclassOf = function ($info, aClass) {
        throw 'unsupported method ObjectiveC.(file).NSObject.isSubclass(of:AnyClass) in ' + this.constructor.name;
    };
    /*ObjectiveC.(file).NSObject.isSubclassOfClass(_:AnyClass)*/
    /*ObjectiveC.(file).NSObject.isSubclassOfClass(_:AnyClass)*/
    NSObject.isSubclassOfClass = function ($info, aClass) {
        throw 'unsupported method ObjectiveC.(file).NSObject.isSubclassOfClass(_:AnyClass) in ' + this.constructor.name;
    };
    /*ObjectiveC.(file).NSObject.resolveClassMethod(_:Selector?)*/
    /*ObjectiveC.(file).NSObject.resolveClassMethod(_:Selector?)*/
    NSObject.resolveClassMethod = function ($info, sel) {
        throw 'unsupported method ObjectiveC.(file).NSObject.resolveClassMethod(_:Selector?) in ' + this.constructor.name;
    };
    /*ObjectiveC.(file).NSObject.resolveInstanceMethod(_:Selector?)*/
    /*ObjectiveC.(file).NSObject.resolveInstanceMethod(_:Selector?)*/
    NSObject.resolveInstanceMethod = function ($info, sel) {
        throw 'unsupported method ObjectiveC.(file).NSObject.resolveInstanceMethod(_:Selector?) in ' + this.constructor.name;
    };
    /*ObjectiveC.(file).NSObject.hash()*/
    /*ObjectiveC.(file).NSObject.hash()*/
    NSObject.hash = function ($info) {
        throw 'unsupported method ObjectiveC.(file).NSObject.hash() in ' + this.constructor.name;
    };
    /*ObjectiveC.(file).NSObject.superclass()*/
    /*ObjectiveC.(file).NSObject.superclass()*/
    NSObject.superclass = function ($info) {
        throw 'unsupported method ObjectiveC.(file).NSObject.superclass() in ' + this.constructor.name;
    };
    /*ObjectiveC.(file).NSObject.description()*/
    /*ObjectiveC.(file).NSObject.description()*/
    NSObject.description = function ($info) {
        throw 'unsupported method ObjectiveC.(file).NSObject.description() in ' + this.constructor.name;
    };
    /*ObjectiveC.(file).NSObject.debugDescription()*/
    /*ObjectiveC.(file).NSObject.debugDescription()*/
    NSObject.debugDescription = function ($info) {
        throw 'unsupported method ObjectiveC.(file).NSObject.debugDescription() in ' + this.constructor.name;
    };
    /*ObjectiveC.(file).NSObject.isEqual(_:Any?)*/
    /*ObjectiveC.(file).NSObject.isEqual(_:Any?)*/
    NSObject.prototype.isEqual = function ($info, object) {
        throw 'unsupported method ObjectiveC.(file).NSObject.isEqual(_:Any?) in ' + this.constructor.name;
    };
    /*ObjectiveC.(file).NSObject.isEqual(_:Any?)*/
    /*ObjectiveC.(file).NSObject.isEqual(_:Any?)*/
    NSObject.isEqual = function ($info, object) {
        throw 'unsupported method ObjectiveC.(file).NSObject.isEqual(_:Any?) in ' + this.constructor.name;
    };
    /*ObjectiveC.(file).NSObject.perform(_:Selector?)*/
    /*ObjectiveC.(file).NSObject.perform(_:Selector?)*/
    NSObject.prototype.perform = function ($info, aSelector) {
        throw 'unsupported method ObjectiveC.(file).NSObject.perform(_:Selector?) in ' + this.constructor.name;
    };
    /*ObjectiveC.(file).NSObject.perform(_:Selector?)*/
    /*ObjectiveC.(file).NSObject.perform(_:Selector?)*/
    NSObject.perform = function ($info, aSelector) {
        throw 'unsupported method ObjectiveC.(file).NSObject.perform(_:Selector?) in ' + this.constructor.name;
    };
    /*ObjectiveC.(file).NSObject.perform(_:Selector?,with:Any?)*/
    /*ObjectiveC.(file).NSObject.perform(_:Selector?,with:Any?)*/
    NSObject.prototype.performWith = function ($info, aSelector, object) {
        throw 'unsupported method ObjectiveC.(file).NSObject.perform(_:Selector?,with:Any?) in ' + this.constructor.name;
    };
    /*ObjectiveC.(file).NSObject.perform(_:Selector?,with:Any?)*/
    /*ObjectiveC.(file).NSObject.perform(_:Selector?,with:Any?)*/
    NSObject.performWith = function ($info, aSelector, object) {
        throw 'unsupported method ObjectiveC.(file).NSObject.perform(_:Selector?,with:Any?) in ' + this.constructor.name;
    };
    /*ObjectiveC.(file).NSObject.perform(_:Selector?,with:Any?,with:Any?)*/
    /*ObjectiveC.(file).NSObject.perform(_:Selector?,with:Any?,with:Any?)*/
    NSObject.prototype.performWithWith = function ($info, aSelector, object1, object2) {
        throw 'unsupported method ObjectiveC.(file).NSObject.perform(_:Selector?,with:Any?,with:Any?) in ' + this.constructor.name;
    };
    /*ObjectiveC.(file).NSObject.perform(_:Selector?,with:Any?,with:Any?)*/
    /*ObjectiveC.(file).NSObject.perform(_:Selector?,with:Any?,with:Any?)*/
    NSObject.performWithWith = function ($info, aSelector, object1, object2) {
        throw 'unsupported method ObjectiveC.(file).NSObject.perform(_:Selector?,with:Any?,with:Any?) in ' + this.constructor.name;
    };
    /*ObjectiveC.(file).NSObject.isProxy()*/
    /*ObjectiveC.(file).NSObject.isProxy()*/
    NSObject.prototype.isProxy = function ($info) {
        throw 'unsupported method ObjectiveC.(file).NSObject.isProxy() in ' + this.constructor.name;
    };
    /*ObjectiveC.(file).NSObject.isProxy()*/
    /*ObjectiveC.(file).NSObject.isProxy()*/
    NSObject.isProxy = function ($info) {
        throw 'unsupported method ObjectiveC.(file).NSObject.isProxy() in ' + this.constructor.name;
    };
    /*ObjectiveC.(file).NSObject.isKind(of:AnyClass)*/
    /*ObjectiveC.(file).NSObject.isKind(of:AnyClass)*/
    NSObject.prototype.isKindOf = function ($info, aClass) {
        throw 'unsupported method ObjectiveC.(file).NSObject.isKind(of:AnyClass) in ' + this.constructor.name;
    };
    /*ObjectiveC.(file).NSObject.isKind(of:AnyClass)*/
    /*ObjectiveC.(file).NSObject.isKind(of:AnyClass)*/
    NSObject.isKindOf = function ($info, aClass) {
        throw 'unsupported method ObjectiveC.(file).NSObject.isKind(of:AnyClass) in ' + this.constructor.name;
    };
    /*ObjectiveC.(file).NSObject.isMember(of:AnyClass)*/
    /*ObjectiveC.(file).NSObject.isMember(of:AnyClass)*/
    NSObject.prototype.isMemberOf = function ($info, aClass) {
        throw 'unsupported method ObjectiveC.(file).NSObject.isMember(of:AnyClass) in ' + this.constructor.name;
    };
    /*ObjectiveC.(file).NSObject.isMember(of:AnyClass)*/
    /*ObjectiveC.(file).NSObject.isMember(of:AnyClass)*/
    NSObject.isMemberOf = function ($info, aClass) {
        throw 'unsupported method ObjectiveC.(file).NSObject.isMember(of:AnyClass) in ' + this.constructor.name;
    };
    /*ObjectiveC.(file).NSObject.conforms(to:Protocol)*/
    /*ObjectiveC.(file).NSObject.conforms(to:Protocol)*/
    NSObject.prototype.conformsTo = function ($info, aProtocol) {
        throw 'unsupported method ObjectiveC.(file).NSObject.conforms(to:Protocol) in ' + this.constructor.name;
    };
    /*ObjectiveC.(file).NSObject.responds(to:Selector?)*/
    /*ObjectiveC.(file).NSObject.responds(to:Selector?)*/
    NSObject.prototype.respondsTo = function ($info, aSelector) {
        throw 'unsupported method ObjectiveC.(file).NSObject.responds(to:Selector?) in ' + this.constructor.name;
    };
    /*ObjectiveC.(file).NSObject.responds(to:Selector?)*/
    /*ObjectiveC.(file).NSObject.responds(to:Selector?)*/
    NSObject.respondsTo = function ($info, aSelector) {
        throw 'unsupported method ObjectiveC.(file).NSObject.responds(to:Selector?) in ' + this.constructor.name;
    };
    /*ObjectiveC.(file).NSObject.retain()*/
    /*ObjectiveC.(file).NSObject.retain()*/
    NSObject.prototype.retain = function ($info) {
        throw 'unsupported method ObjectiveC.(file).NSObject.retain() in ' + this.constructor.name;
    };
    /*ObjectiveC.(file).NSObject.release()*/
    /*ObjectiveC.(file).NSObject.release()*/
    NSObject.prototype.release = function ($info) {
        throw 'unsupported method ObjectiveC.(file).NSObject.release() in ' + this.constructor.name;
    };
    /*ObjectiveC.(file).NSObject.release()*/
    /*ObjectiveC.(file).NSObject.release()*/
    NSObject.release = function ($info) {
        throw 'unsupported method ObjectiveC.(file).NSObject.release() in ' + this.constructor.name;
    };
    /*ObjectiveC.(file).NSObject.autorelease()*/
    /*ObjectiveC.(file).NSObject.autorelease()*/
    NSObject.prototype.autorelease = function ($info) {
        throw 'unsupported method ObjectiveC.(file).NSObject.autorelease() in ' + this.constructor.name;
    };
    /*ObjectiveC.(file).NSObject.retainCount()*/
    /*ObjectiveC.(file).NSObject.retainCount()*/
    NSObject.prototype.retainCount = function ($info) {
        throw 'unsupported method ObjectiveC.(file).NSObject.retainCount() in ' + this.constructor.name;
    };
    /*ObjectiveC.(file).NSObject.retainCount()*/
    /*ObjectiveC.(file).NSObject.retainCount()*/
    NSObject.retainCount = function ($info) {
        throw 'unsupported method ObjectiveC.(file).NSObject.retainCount() in ' + this.constructor.name;
    };
    /*ObjectiveC.(file).NSObject.zone()*/
    /*ObjectiveC.(file).NSObject.zone()*/
    NSObject.prototype.zone = function ($info) {
        throw 'unsupported method ObjectiveC.(file).NSObject.zone() in ' + this.constructor.name;
    };
    /*ObjectiveC.(file).NSObject.zone()*/
    /*ObjectiveC.(file).NSObject.zone()*/
    NSObject.zone = function ($info) {
        throw 'unsupported method ObjectiveC.(file).NSObject.zone() in ' + this.constructor.name;
    };
    /*ObjectiveC.(file).NSObject.==infix(_:NSObject,_:NSObject)*/
    /*Swift.(file).Equatable.==infix(_:Self,_:Self)*/
    NSObject.infix_61_61 = function ($info, lhs, rhs) {
        return lhs == rhs;
    };
    /*ObjectiveC.(file).NSObject.hashValue*/
    NSObject.prototype.hashValue$get = function () {
        throw 'unsupported variable ObjectiveC.(file).NSObject.hashValue in ' + this.constructor.name;
    };
    Object.defineProperty(NSObject.prototype, "hashValue", {
        get: function () { return this.hashValue$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*ObjectiveC.(file).NSObject.hash(into:Hasher)*/
    /*Swift.(file).Hashable.hash(into:Hasher)*/
    NSObject.prototype.hashInto = function ($info, hasher$inout) {
        throw 'unsupported method ObjectiveC.(file).NSObject.hash(into:Hasher) in ' + this.constructor.name;
    };
    /*AppKit.(file).NSObject.tableView(_:NSTableView,writeRows:[Any],to:NSPasteboard)*/
    /*AppKit.(file).NSObject.tableView(_:NSTableView,writeRows:[Any],to:NSPasteboard)*/
    NSObject.tableView = function ($info, tableView, rows, pboard) {
        throw 'unsupported method AppKit.(file).NSObject.tableView(_:NSTableView,writeRows:[Any],to:NSPasteboard) in ' + this.constructor.name;
    };
    /*AppKit.(file).NSObject.tableView(_:NSTableView,writeRows:[Any],to:NSPasteboard)*/
    /*AppKit.(file).NSObject.tableView(_:NSTableView,writeRows:[Any],to:NSPasteboard)*/
    NSObject.prototype.tableView = function ($info, tableView, rows, pboard) {
        throw 'unsupported method AppKit.(file).NSObject.tableView(_:NSTableView,writeRows:[Any],to:NSPasteboard) in ' + this.constructor.name;
    };
    /*AppKit.(file).NSObject.tableView(_:NSTableView,writeRows:[Any],toPasteboard:NSPasteboard)*/
    /*AppKit.(file).NSObject.tableView(_:NSTableView,writeRows:[Any],toPasteboard:NSPasteboard)*/
    NSObject.tableView1 = function ($info, tableView, rows, pboard) {
        throw 'unsupported method AppKit.(file).NSObject.tableView(_:NSTableView,writeRows:[Any],toPasteboard:NSPasteboard) in ' + this.constructor.name;
    };
    /*AppKit.(file).NSObject.tableView(_:NSTableView,writeRows:[Any],toPasteboard:NSPasteboard)*/
    /*AppKit.(file).NSObject.tableView(_:NSTableView,writeRows:[Any],toPasteboard:NSPasteboard)*/
    NSObject.prototype.tableView1 = function ($info, tableView, rows, pboard) {
        throw 'unsupported method AppKit.(file).NSObject.tableView(_:NSTableView,writeRows:[Any],toPasteboard:NSPasteboard) in ' + this.constructor.name;
    };
    /*AppKit.(file).NSObject.textStorageWillProcessEditing(_:Notification)*/
    /*AppKit.(file).NSObject.textStorageWillProcessEditing(_:Notification)*/
    NSObject.textStorageWillProcessEditing = function ($info, notification) {
        throw 'unsupported method AppKit.(file).NSObject.textStorageWillProcessEditing(_:Notification) in ' + this.constructor.name;
    };
    /*AppKit.(file).NSObject.textStorageWillProcessEditing(_:Notification)*/
    /*AppKit.(file).NSObject.textStorageWillProcessEditing(_:Notification)*/
    NSObject.prototype.textStorageWillProcessEditing = function ($info, notification) {
        throw 'unsupported method AppKit.(file).NSObject.textStorageWillProcessEditing(_:Notification) in ' + this.constructor.name;
    };
    /*AppKit.(file).NSObject.textStorageDidProcessEditing(_:Notification)*/
    /*AppKit.(file).NSObject.textStorageDidProcessEditing(_:Notification)*/
    NSObject.textStorageDidProcessEditing = function ($info, notification) {
        throw 'unsupported method AppKit.(file).NSObject.textStorageDidProcessEditing(_:Notification) in ' + this.constructor.name;
    };
    /*AppKit.(file).NSObject.textStorageDidProcessEditing(_:Notification)*/
    /*AppKit.(file).NSObject.textStorageDidProcessEditing(_:Notification)*/
    NSObject.prototype.textStorageDidProcessEditing = function ($info, notification) {
        throw 'unsupported method AppKit.(file).NSObject.textStorageDidProcessEditing(_:Notification) in ' + this.constructor.name;
    };
    /*AppKit.(file).NSObject.panel(_:Any,isValidFilename:String)*/
    /*AppKit.(file).NSObject.panel(_:Any,isValidFilename:String)*/
    NSObject.panel = function ($info, sender, filename) {
        throw 'unsupported method AppKit.(file).NSObject.panel(_:Any,isValidFilename:String) in ' + this.constructor.name;
    };
    /*AppKit.(file).NSObject.panel(_:Any,isValidFilename:String)*/
    /*AppKit.(file).NSObject.panel(_:Any,isValidFilename:String)*/
    NSObject.prototype.panel = function ($info, sender, filename) {
        throw 'unsupported method AppKit.(file).NSObject.panel(_:Any,isValidFilename:String) in ' + this.constructor.name;
    };
    /*AppKit.(file).NSObject.panel(_:Any,directoryDidChange:String)*/
    /*AppKit.(file).NSObject.panel(_:Any,directoryDidChange:String)*/
    NSObject.panel1 = function ($info, sender, path) {
        throw 'unsupported method AppKit.(file).NSObject.panel(_:Any,directoryDidChange:String) in ' + this.constructor.name;
    };
    /*AppKit.(file).NSObject.panel(_:Any,directoryDidChange:String)*/
    /*AppKit.(file).NSObject.panel(_:Any,directoryDidChange:String)*/
    NSObject.prototype.panel1 = function ($info, sender, path) {
        throw 'unsupported method AppKit.(file).NSObject.panel(_:Any,directoryDidChange:String) in ' + this.constructor.name;
    };
    /*AppKit.(file).NSObject.panel(_:Any,compareFilename:String,with:String,caseSensitive:Bool)*/
    /*AppKit.(file).NSObject.panel(_:Any,compareFilename:String,with:String,caseSensitive:Bool)*/
    NSObject.panel2 = function ($info, sender, name1, name2, caseSensitive) {
        throw 'unsupported method AppKit.(file).NSObject.panel(_:Any,compareFilename:String,with:String,caseSensitive:Bool) in ' + this.constructor.name;
    };
    /*AppKit.(file).NSObject.panel(_:Any,compareFilename:String,with:String,caseSensitive:Bool)*/
    /*AppKit.(file).NSObject.panel(_:Any,compareFilename:String,with:String,caseSensitive:Bool)*/
    NSObject.prototype.panel2 = function ($info, sender, name1, name2, caseSensitive) {
        throw 'unsupported method AppKit.(file).NSObject.panel(_:Any,compareFilename:String,with:String,caseSensitive:Bool) in ' + this.constructor.name;
    };
    /*AppKit.(file).NSObject.panel(_:Any,shouldShowFilename:String)*/
    /*AppKit.(file).NSObject.panel(_:Any,shouldShowFilename:String)*/
    NSObject.panel3 = function ($info, sender, filename) {
        throw 'unsupported method AppKit.(file).NSObject.panel(_:Any,shouldShowFilename:String) in ' + this.constructor.name;
    };
    /*AppKit.(file).NSObject.panel(_:Any,shouldShowFilename:String)*/
    /*AppKit.(file).NSObject.panel(_:Any,shouldShowFilename:String)*/
    NSObject.prototype.panel3 = function ($info, sender, filename) {
        throw 'unsupported method AppKit.(file).NSObject.panel(_:Any,shouldShowFilename:String) in ' + this.constructor.name;
    };
    /*AppKit.(file).NSObject.awakeFromNib()*/
    /*AppKit.(file).NSObject.awakeFromNib()*/
    NSObject.awakeFromNib = function ($info) {
        throw 'unsupported method AppKit.(file).NSObject.awakeFromNib() in ' + this.constructor.name;
    };
    /*AppKit.(file).NSObject.awakeFromNib()*/
    /*AppKit.(file).NSObject.awakeFromNib()*/
    NSObject.prototype.awakeFromNib = function ($info) {
        throw 'unsupported method AppKit.(file).NSObject.awakeFromNib() in ' + this.constructor.name;
    };
    /*AppKit.(file).NSObject.prepareForInterfaceBuilder()*/
    /*AppKit.(file).NSObject.prepareForInterfaceBuilder()*/
    NSObject.prepareForInterfaceBuilder = function ($info) {
        throw 'unsupported method AppKit.(file).NSObject.prepareForInterfaceBuilder() in ' + this.constructor.name;
    };
    /*AppKit.(file).NSObject.prepareForInterfaceBuilder()*/
    /*AppKit.(file).NSObject.prepareForInterfaceBuilder()*/
    NSObject.prototype.prepareForInterfaceBuilder = function ($info) {
        throw 'unsupported method AppKit.(file).NSObject.prepareForInterfaceBuilder() in ' + this.constructor.name;
    };
    /*AppKit.(file).NSObject.fontManager(_:Any,willIncludeFont:String)*/
    /*AppKit.(file).NSObject.fontManager(_:Any,willIncludeFont:String)*/
    NSObject.fontManager = function ($info, sender, fontName) {
        throw 'unsupported method AppKit.(file).NSObject.fontManager(_:Any,willIncludeFont:String) in ' + this.constructor.name;
    };
    /*AppKit.(file).NSObject.fontManager(_:Any,willIncludeFont:String)*/
    /*AppKit.(file).NSObject.fontManager(_:Any,willIncludeFont:String)*/
    NSObject.prototype.fontManager = function ($info, sender, fontName) {
        throw 'unsupported method AppKit.(file).NSObject.fontManager(_:Any,willIncludeFont:String) in ' + this.constructor.name;
    };
    /*AppKit.(file).NSObject.setDefaultPlaceholder(_:Any?,for:NSBindingSelectionMarker?,with:NSBindingName)*/
    /*AppKit.(file).NSObject.setDefaultPlaceholder(_:Any?,for:NSBindingSelectionMarker?,with:NSBindingName)*/
    NSObject.setDefaultPlaceholder = function ($info, placeholder, marker, binding) {
        throw 'unsupported method AppKit.(file).NSObject.setDefaultPlaceholder(_:Any?,for:NSBindingSelectionMarker?,with:NSBindingName) in ' + this.constructor.name;
    };
    /*AppKit.(file).NSObject.setDefaultPlaceholder(_:Any?,forMarker:NSBindingSelectionMarker?,withBinding:NSBindingName)*/
    /*AppKit.(file).NSObject.setDefaultPlaceholder(_:Any?,forMarker:NSBindingSelectionMarker?,withBinding:NSBindingName)*/
    NSObject.setDefaultPlaceholder1 = function ($info, placeholder, marker, binding) {
        throw 'unsupported method AppKit.(file).NSObject.setDefaultPlaceholder(_:Any?,forMarker:NSBindingSelectionMarker?,withBinding:NSBindingName) in ' + this.constructor.name;
    };
    /*AppKit.(file).NSObject.defaultPlaceholder(for:NSBindingSelectionMarker?,with:NSBindingName)*/
    /*AppKit.(file).NSObject.defaultPlaceholder(for:NSBindingSelectionMarker?,with:NSBindingName)*/
    NSObject.defaultPlaceholder = function ($info, marker, binding) {
        throw 'unsupported method AppKit.(file).NSObject.defaultPlaceholder(for:NSBindingSelectionMarker?,with:NSBindingName) in ' + this.constructor.name;
    };
    /*AppKit.(file).NSObject.defaultPlaceholder(forMarker:NSBindingSelectionMarker?,withBinding:NSBindingName)*/
    /*AppKit.(file).NSObject.defaultPlaceholder(forMarker:NSBindingSelectionMarker?,withBinding:NSBindingName)*/
    NSObject.defaultPlaceholder1 = function ($info, marker, binding) {
        throw 'unsupported method AppKit.(file).NSObject.defaultPlaceholder(forMarker:NSBindingSelectionMarker?,withBinding:NSBindingName) in ' + this.constructor.name;
    };
    /*AppKit.(file).NSObject.defaultPlaceholderForMarker(_:NSBindingSelectionMarker?,withBinding:NSBindingName)*/
    /*AppKit.(file).NSObject.defaultPlaceholderForMarker(_:NSBindingSelectionMarker?,withBinding:NSBindingName)*/
    NSObject.defaultPlaceholderForMarker = function ($info, marker, binding) {
        throw 'unsupported method AppKit.(file).NSObject.defaultPlaceholderForMarker(_:NSBindingSelectionMarker?,withBinding:NSBindingName) in ' + this.constructor.name;
    };
    /*AppKit.(file).NSObject.exposeBinding(_:NSBindingName)*/
    /*AppKit.(file).NSObject.exposeBinding(_:NSBindingName)*/
    NSObject.exposeBinding = function ($info, binding) {
        throw 'unsupported method AppKit.(file).NSObject.exposeBinding(_:NSBindingName) in ' + this.constructor.name;
    };
    /*AppKit.(file).NSObject.valueClassForBinding(_:NSBindingName)*/
    /*AppKit.(file).NSObject.valueClassForBinding(_:NSBindingName)*/
    NSObject.valueClassForBinding = function ($info, binding) {
        throw 'unsupported method AppKit.(file).NSObject.valueClassForBinding(_:NSBindingName) in ' + this.constructor.name;
    };
    /*AppKit.(file).NSObject.valueClassForBinding(_:NSBindingName)*/
    /*AppKit.(file).NSObject.valueClassForBinding(_:NSBindingName)*/
    NSObject.prototype.valueClassForBinding = function ($info, binding) {
        throw 'unsupported method AppKit.(file).NSObject.valueClassForBinding(_:NSBindingName) in ' + this.constructor.name;
    };
    /*AppKit.(file).NSObject.bind(_:NSBindingName,to:Any,withKeyPath:String,options:[NSBindingOption : Any]?)*/
    /*AppKit.(file).NSObject.bind(_:NSBindingName,to:Any,withKeyPath:String,options:[NSBindingOption : Any]?)*/
    NSObject.bind = function ($info, binding, observable, keyPath, options) {
        throw 'unsupported method AppKit.(file).NSObject.bind(_:NSBindingName,to:Any,withKeyPath:String,options:[NSBindingOption : Any]?) in ' + this.constructor.name;
    };
    /*AppKit.(file).NSObject.bind(_:NSBindingName,to:Any,withKeyPath:String,options:[NSBindingOption : Any]?)*/
    /*AppKit.(file).NSObject.bind(_:NSBindingName,to:Any,withKeyPath:String,options:[NSBindingOption : Any]?)*/
    NSObject.prototype.bind = function ($info, binding, observable, keyPath, options) {
        throw 'unsupported method AppKit.(file).NSObject.bind(_:NSBindingName,to:Any,withKeyPath:String,options:[NSBindingOption : Any]?) in ' + this.constructor.name;
    };
    /*AppKit.(file).NSObject.bind(_:NSBindingName,toObject:Any,withKeyPath:String,options:[NSBindingOption : Any]?)*/
    /*AppKit.(file).NSObject.bind(_:NSBindingName,toObject:Any,withKeyPath:String,options:[NSBindingOption : Any]?)*/
    NSObject.bind1 = function ($info, binding, observable, keyPath, options) {
        throw 'unsupported method AppKit.(file).NSObject.bind(_:NSBindingName,toObject:Any,withKeyPath:String,options:[NSBindingOption : Any]?) in ' + this.constructor.name;
    };
    /*AppKit.(file).NSObject.bind(_:NSBindingName,toObject:Any,withKeyPath:String,options:[NSBindingOption : Any]?)*/
    /*AppKit.(file).NSObject.bind(_:NSBindingName,toObject:Any,withKeyPath:String,options:[NSBindingOption : Any]?)*/
    NSObject.prototype.bind1 = function ($info, binding, observable, keyPath, options) {
        throw 'unsupported method AppKit.(file).NSObject.bind(_:NSBindingName,toObject:Any,withKeyPath:String,options:[NSBindingOption : Any]?) in ' + this.constructor.name;
    };
    /*AppKit.(file).NSObject.unbind(_:NSBindingName)*/
    /*AppKit.(file).NSObject.unbind(_:NSBindingName)*/
    NSObject.unbind = function ($info, binding) {
        throw 'unsupported method AppKit.(file).NSObject.unbind(_:NSBindingName) in ' + this.constructor.name;
    };
    /*AppKit.(file).NSObject.unbind(_:NSBindingName)*/
    /*AppKit.(file).NSObject.unbind(_:NSBindingName)*/
    NSObject.prototype.unbind = function ($info, binding) {
        throw 'unsupported method AppKit.(file).NSObject.unbind(_:NSBindingName) in ' + this.constructor.name;
    };
    /*AppKit.(file).NSObject.infoForBinding(_:NSBindingName)*/
    /*AppKit.(file).NSObject.infoForBinding(_:NSBindingName)*/
    NSObject.infoForBinding = function ($info, binding) {
        throw 'unsupported method AppKit.(file).NSObject.infoForBinding(_:NSBindingName) in ' + this.constructor.name;
    };
    /*AppKit.(file).NSObject.infoForBinding(_:NSBindingName)*/
    /*AppKit.(file).NSObject.infoForBinding(_:NSBindingName)*/
    NSObject.prototype.infoForBinding = function ($info, binding) {
        throw 'unsupported method AppKit.(file).NSObject.infoForBinding(_:NSBindingName) in ' + this.constructor.name;
    };
    /*AppKit.(file).NSObject.optionDescriptionsForBinding(_:NSBindingName)*/
    /*AppKit.(file).NSObject.optionDescriptionsForBinding(_:NSBindingName)*/
    NSObject.optionDescriptionsForBinding = function ($info, binding) {
        throw 'unsupported method AppKit.(file).NSObject.optionDescriptionsForBinding(_:NSBindingName) in ' + this.constructor.name;
    };
    /*AppKit.(file).NSObject.optionDescriptionsForBinding(_:NSBindingName)*/
    /*AppKit.(file).NSObject.optionDescriptionsForBinding(_:NSBindingName)*/
    NSObject.prototype.optionDescriptionsForBinding = function ($info, binding) {
        throw 'unsupported method AppKit.(file).NSObject.optionDescriptionsForBinding(_:NSBindingName) in ' + this.constructor.name;
    };
    /*AppKit.(file).NSObject.exposedBindings()*/
    /*AppKit.(file).NSObject.exposedBindings()*/
    NSObject.exposedBindings = function ($info) {
        throw 'unsupported method AppKit.(file).NSObject.exposedBindings() in ' + this.constructor.name;
    };
    /*AppKit.(file).NSObject.namesOfPromisedFilesDropped(atDestination:URL)*/
    /*AppKit.(file).NSObject.namesOfPromisedFilesDropped(atDestination:URL)*/
    NSObject.namesOfPromisedFilesDropped = function ($info, dropDestination) {
        throw 'unsupported method AppKit.(file).NSObject.namesOfPromisedFilesDropped(atDestination:URL) in ' + this.constructor.name;
    };
    /*AppKit.(file).NSObject.namesOfPromisedFilesDropped(atDestination:URL)*/
    /*AppKit.(file).NSObject.namesOfPromisedFilesDropped(atDestination:URL)*/
    NSObject.prototype.namesOfPromisedFilesDropped = function ($info, dropDestination) {
        throw 'unsupported method AppKit.(file).NSObject.namesOfPromisedFilesDropped(atDestination:URL) in ' + this.constructor.name;
    };
    /*AppKit.(file).NSObject.namesOfPromisedFilesDroppedAtDestination(_:URL)*/
    /*AppKit.(file).NSObject.namesOfPromisedFilesDroppedAtDestination(_:URL)*/
    NSObject.namesOfPromisedFilesDroppedAtDestination = function ($info, dropDestination) {
        throw 'unsupported method AppKit.(file).NSObject.namesOfPromisedFilesDroppedAtDestination(_:URL) in ' + this.constructor.name;
    };
    /*AppKit.(file).NSObject.namesOfPromisedFilesDroppedAtDestination(_:URL)*/
    /*AppKit.(file).NSObject.namesOfPromisedFilesDroppedAtDestination(_:URL)*/
    NSObject.prototype.namesOfPromisedFilesDroppedAtDestination = function ($info, dropDestination) {
        throw 'unsupported method AppKit.(file).NSObject.namesOfPromisedFilesDroppedAtDestination(_:URL) in ' + this.constructor.name;
    };
    /*AppKit.(file).NSObject.draggingSourceOperationMask(forLocal:Bool)*/
    /*AppKit.(file).NSObject.draggingSourceOperationMask(forLocal:Bool)*/
    NSObject.draggingSourceOperationMask = function ($info, flag) {
        throw 'unsupported method AppKit.(file).NSObject.draggingSourceOperationMask(forLocal:Bool) in ' + this.constructor.name;
    };
    /*AppKit.(file).NSObject.draggingSourceOperationMask(forLocal:Bool)*/
    /*AppKit.(file).NSObject.draggingSourceOperationMask(forLocal:Bool)*/
    NSObject.prototype.draggingSourceOperationMask = function ($info, flag) {
        throw 'unsupported method AppKit.(file).NSObject.draggingSourceOperationMask(forLocal:Bool) in ' + this.constructor.name;
    };
    /*AppKit.(file).NSObject.draggingSourceOperationMaskForLocal(_:Bool)*/
    /*AppKit.(file).NSObject.draggingSourceOperationMaskForLocal(_:Bool)*/
    NSObject.draggingSourceOperationMaskForLocal = function ($info, flag) {
        throw 'unsupported method AppKit.(file).NSObject.draggingSourceOperationMaskForLocal(_:Bool) in ' + this.constructor.name;
    };
    /*AppKit.(file).NSObject.draggingSourceOperationMaskForLocal(_:Bool)*/
    /*AppKit.(file).NSObject.draggingSourceOperationMaskForLocal(_:Bool)*/
    NSObject.prototype.draggingSourceOperationMaskForLocal = function ($info, flag) {
        throw 'unsupported method AppKit.(file).NSObject.draggingSourceOperationMaskForLocal(_:Bool) in ' + this.constructor.name;
    };
    /*AppKit.(file).NSObject.draggedImage(_:NSImage?,beganAt:NSPoint)*/
    /*AppKit.(file).NSObject.draggedImage(_:NSImage?,beganAt:NSPoint)*/
    NSObject.draggedImage = function ($info, _image, screenPoint) {
        throw 'unsupported method AppKit.(file).NSObject.draggedImage(_:NSImage?,beganAt:NSPoint) in ' + this.constructor.name;
    };
    /*AppKit.(file).NSObject.draggedImage(_:NSImage?,beganAt:NSPoint)*/
    /*AppKit.(file).NSObject.draggedImage(_:NSImage?,beganAt:NSPoint)*/
    NSObject.prototype.draggedImage = function ($info, _image, screenPoint) {
        throw 'unsupported method AppKit.(file).NSObject.draggedImage(_:NSImage?,beganAt:NSPoint) in ' + this.constructor.name;
    };
    /*AppKit.(file).NSObject.draggedImage(_:NSImage?,endedAt:NSPoint,operation:NSDragOperation)*/
    /*AppKit.(file).NSObject.draggedImage(_:NSImage?,endedAt:NSPoint,operation:NSDragOperation)*/
    NSObject.draggedImage1 = function ($info, _image, screenPoint, operation) {
        throw 'unsupported method AppKit.(file).NSObject.draggedImage(_:NSImage?,endedAt:NSPoint,operation:NSDragOperation) in ' + this.constructor.name;
    };
    /*AppKit.(file).NSObject.draggedImage(_:NSImage?,endedAt:NSPoint,operation:NSDragOperation)*/
    /*AppKit.(file).NSObject.draggedImage(_:NSImage?,endedAt:NSPoint,operation:NSDragOperation)*/
    NSObject.prototype.draggedImage1 = function ($info, _image, screenPoint, operation) {
        throw 'unsupported method AppKit.(file).NSObject.draggedImage(_:NSImage?,endedAt:NSPoint,operation:NSDragOperation) in ' + this.constructor.name;
    };
    /*AppKit.(file).NSObject.draggedImage(_:NSImage?,movedTo:NSPoint)*/
    /*AppKit.(file).NSObject.draggedImage(_:NSImage?,movedTo:NSPoint)*/
    NSObject.draggedImage2 = function ($info, _image, screenPoint) {
        throw 'unsupported method AppKit.(file).NSObject.draggedImage(_:NSImage?,movedTo:NSPoint) in ' + this.constructor.name;
    };
    /*AppKit.(file).NSObject.draggedImage(_:NSImage?,movedTo:NSPoint)*/
    /*AppKit.(file).NSObject.draggedImage(_:NSImage?,movedTo:NSPoint)*/
    NSObject.prototype.draggedImage2 = function ($info, _image, screenPoint) {
        throw 'unsupported method AppKit.(file).NSObject.draggedImage(_:NSImage?,movedTo:NSPoint) in ' + this.constructor.name;
    };
    /*AppKit.(file).NSObject.ignoreModifierKeysWhileDragging()*/
    /*AppKit.(file).NSObject.ignoreModifierKeysWhileDragging()*/
    NSObject.ignoreModifierKeysWhileDragging = function ($info) {
        throw 'unsupported method AppKit.(file).NSObject.ignoreModifierKeysWhileDragging() in ' + this.constructor.name;
    };
    /*AppKit.(file).NSObject.ignoreModifierKeysWhileDragging()*/
    /*AppKit.(file).NSObject.ignoreModifierKeysWhileDragging()*/
    NSObject.prototype.ignoreModifierKeysWhileDragging = function ($info) {
        throw 'unsupported method AppKit.(file).NSObject.ignoreModifierKeysWhileDragging() in ' + this.constructor.name;
    };
    /*AppKit.(file).NSObject.draggedImage(_:NSImage?,endedAt:NSPoint,deposited:Bool)*/
    /*AppKit.(file).NSObject.draggedImage(_:NSImage?,endedAt:NSPoint,deposited:Bool)*/
    NSObject.draggedImage3 = function ($info, _image, screenPoint, flag) {
        throw 'unsupported method AppKit.(file).NSObject.draggedImage(_:NSImage?,endedAt:NSPoint,deposited:Bool) in ' + this.constructor.name;
    };
    /*AppKit.(file).NSObject.draggedImage(_:NSImage?,endedAt:NSPoint,deposited:Bool)*/
    /*AppKit.(file).NSObject.draggedImage(_:NSImage?,endedAt:NSPoint,deposited:Bool)*/
    NSObject.prototype.draggedImage3 = function ($info, _image, screenPoint, flag) {
        throw 'unsupported method AppKit.(file).NSObject.draggedImage(_:NSImage?,endedAt:NSPoint,deposited:Bool) in ' + this.constructor.name;
    };
    /*AppKit.(file).NSObject.accessibilitySetOverrideValue(_:Any?,forAttribute:NSAccessibility.Attribute)*/
    /*AppKit.(file).NSObject.accessibilitySetOverrideValue(_:Any?,forAttribute:NSAccessibility.Attribute)*/
    NSObject.accessibilitySetOverrideValue = function ($info, value, attribute) {
        throw 'unsupported method AppKit.(file).NSObject.accessibilitySetOverrideValue(_:Any?,forAttribute:NSAccessibility.Attribute) in ' + this.constructor.name;
    };
    /*AppKit.(file).NSObject.accessibilitySetOverrideValue(_:Any?,forAttribute:NSAccessibility.Attribute)*/
    /*AppKit.(file).NSObject.accessibilitySetOverrideValue(_:Any?,forAttribute:NSAccessibility.Attribute)*/
    NSObject.prototype.accessibilitySetOverrideValue = function ($info, value, attribute) {
        throw 'unsupported method AppKit.(file).NSObject.accessibilitySetOverrideValue(_:Any?,forAttribute:NSAccessibility.Attribute) in ' + this.constructor.name;
    };
    /*AppKit.(file).NSObject.accessibilityAttributeNames()*/
    /*AppKit.(file).NSObject.accessibilityAttributeNames()*/
    NSObject.accessibilityAttributeNames = function ($info) {
        throw 'unsupported method AppKit.(file).NSObject.accessibilityAttributeNames() in ' + this.constructor.name;
    };
    /*AppKit.(file).NSObject.accessibilityAttributeNames()*/
    /*AppKit.(file).NSObject.accessibilityAttributeNames()*/
    NSObject.prototype.accessibilityAttributeNames = function ($info) {
        throw 'unsupported method AppKit.(file).NSObject.accessibilityAttributeNames() in ' + this.constructor.name;
    };
    /*AppKit.(file).NSObject.accessibilityAttributeValue(_:NSAccessibility.Attribute)*/
    /*AppKit.(file).NSObject.accessibilityAttributeValue(_:NSAccessibility.Attribute)*/
    NSObject.accessibilityAttributeValue = function ($info, attribute) {
        throw 'unsupported method AppKit.(file).NSObject.accessibilityAttributeValue(_:NSAccessibility.Attribute) in ' + this.constructor.name;
    };
    /*AppKit.(file).NSObject.accessibilityAttributeValue(_:NSAccessibility.Attribute)*/
    /*AppKit.(file).NSObject.accessibilityAttributeValue(_:NSAccessibility.Attribute)*/
    NSObject.prototype.accessibilityAttributeValue = function ($info, attribute) {
        throw 'unsupported method AppKit.(file).NSObject.accessibilityAttributeValue(_:NSAccessibility.Attribute) in ' + this.constructor.name;
    };
    /*AppKit.(file).NSObject.accessibilityIsAttributeSettable(_:NSAccessibility.Attribute)*/
    /*AppKit.(file).NSObject.accessibilityIsAttributeSettable(_:NSAccessibility.Attribute)*/
    NSObject.accessibilityIsAttributeSettable = function ($info, attribute) {
        throw 'unsupported method AppKit.(file).NSObject.accessibilityIsAttributeSettable(_:NSAccessibility.Attribute) in ' + this.constructor.name;
    };
    /*AppKit.(file).NSObject.accessibilityIsAttributeSettable(_:NSAccessibility.Attribute)*/
    /*AppKit.(file).NSObject.accessibilityIsAttributeSettable(_:NSAccessibility.Attribute)*/
    NSObject.prototype.accessibilityIsAttributeSettable = function ($info, attribute) {
        throw 'unsupported method AppKit.(file).NSObject.accessibilityIsAttributeSettable(_:NSAccessibility.Attribute) in ' + this.constructor.name;
    };
    /*AppKit.(file).NSObject.accessibilitySetValue(_:Any?,forAttribute:NSAccessibility.Attribute)*/
    /*AppKit.(file).NSObject.accessibilitySetValue(_:Any?,forAttribute:NSAccessibility.Attribute)*/
    NSObject.accessibilitySetValue = function ($info, value, attribute) {
        throw 'unsupported method AppKit.(file).NSObject.accessibilitySetValue(_:Any?,forAttribute:NSAccessibility.Attribute) in ' + this.constructor.name;
    };
    /*AppKit.(file).NSObject.accessibilitySetValue(_:Any?,forAttribute:NSAccessibility.Attribute)*/
    /*AppKit.(file).NSObject.accessibilitySetValue(_:Any?,forAttribute:NSAccessibility.Attribute)*/
    NSObject.prototype.accessibilitySetValue = function ($info, value, attribute) {
        throw 'unsupported method AppKit.(file).NSObject.accessibilitySetValue(_:Any?,forAttribute:NSAccessibility.Attribute) in ' + this.constructor.name;
    };
    /*AppKit.(file).NSObject.accessibilityParameterizedAttributeNames()*/
    /*AppKit.(file).NSObject.accessibilityParameterizedAttributeNames()*/
    NSObject.accessibilityParameterizedAttributeNames = function ($info) {
        throw 'unsupported method AppKit.(file).NSObject.accessibilityParameterizedAttributeNames() in ' + this.constructor.name;
    };
    /*AppKit.(file).NSObject.accessibilityParameterizedAttributeNames()*/
    /*AppKit.(file).NSObject.accessibilityParameterizedAttributeNames()*/
    NSObject.prototype.accessibilityParameterizedAttributeNames = function ($info) {
        throw 'unsupported method AppKit.(file).NSObject.accessibilityParameterizedAttributeNames() in ' + this.constructor.name;
    };
    /*AppKit.(file).NSObject.accessibilityAttributeValue(_:NSAccessibility.ParameterizedAttribute,forParameter:Any?)*/
    /*AppKit.(file).NSObject.accessibilityAttributeValue(_:NSAccessibility.ParameterizedAttribute,forParameter:Any?)*/
    NSObject.accessibilityAttributeValue1 = function ($info, attribute, parameter) {
        throw 'unsupported method AppKit.(file).NSObject.accessibilityAttributeValue(_:NSAccessibility.ParameterizedAttribute,forParameter:Any?) in ' + this.constructor.name;
    };
    /*AppKit.(file).NSObject.accessibilityAttributeValue(_:NSAccessibility.ParameterizedAttribute,forParameter:Any?)*/
    /*AppKit.(file).NSObject.accessibilityAttributeValue(_:NSAccessibility.ParameterizedAttribute,forParameter:Any?)*/
    NSObject.prototype.accessibilityAttributeValue1 = function ($info, attribute, parameter) {
        throw 'unsupported method AppKit.(file).NSObject.accessibilityAttributeValue(_:NSAccessibility.ParameterizedAttribute,forParameter:Any?) in ' + this.constructor.name;
    };
    /*AppKit.(file).NSObject.accessibilityActionNames()*/
    /*AppKit.(file).NSObject.accessibilityActionNames()*/
    NSObject.accessibilityActionNames = function ($info) {
        throw 'unsupported method AppKit.(file).NSObject.accessibilityActionNames() in ' + this.constructor.name;
    };
    /*AppKit.(file).NSObject.accessibilityActionNames()*/
    /*AppKit.(file).NSObject.accessibilityActionNames()*/
    NSObject.prototype.accessibilityActionNames = function ($info) {
        throw 'unsupported method AppKit.(file).NSObject.accessibilityActionNames() in ' + this.constructor.name;
    };
    /*AppKit.(file).NSObject.accessibilityActionDescription(_:NSAccessibility.Action)*/
    /*AppKit.(file).NSObject.accessibilityActionDescription(_:NSAccessibility.Action)*/
    NSObject.accessibilityActionDescription = function ($info, action) {
        throw 'unsupported method AppKit.(file).NSObject.accessibilityActionDescription(_:NSAccessibility.Action) in ' + this.constructor.name;
    };
    /*AppKit.(file).NSObject.accessibilityActionDescription(_:NSAccessibility.Action)*/
    /*AppKit.(file).NSObject.accessibilityActionDescription(_:NSAccessibility.Action)*/
    NSObject.prototype.accessibilityActionDescription = function ($info, action) {
        throw 'unsupported method AppKit.(file).NSObject.accessibilityActionDescription(_:NSAccessibility.Action) in ' + this.constructor.name;
    };
    /*AppKit.(file).NSObject.accessibilityPerformAction(_:NSAccessibility.Action)*/
    /*AppKit.(file).NSObject.accessibilityPerformAction(_:NSAccessibility.Action)*/
    NSObject.accessibilityPerformAction = function ($info, action) {
        throw 'unsupported method AppKit.(file).NSObject.accessibilityPerformAction(_:NSAccessibility.Action) in ' + this.constructor.name;
    };
    /*AppKit.(file).NSObject.accessibilityPerformAction(_:NSAccessibility.Action)*/
    /*AppKit.(file).NSObject.accessibilityPerformAction(_:NSAccessibility.Action)*/
    NSObject.prototype.accessibilityPerformAction = function ($info, action) {
        throw 'unsupported method AppKit.(file).NSObject.accessibilityPerformAction(_:NSAccessibility.Action) in ' + this.constructor.name;
    };
    /*AppKit.(file).NSObject.accessibilityIsIgnored()*/
    /*AppKit.(file).NSObject.accessibilityIsIgnored()*/
    NSObject.accessibilityIsIgnored = function ($info) {
        throw 'unsupported method AppKit.(file).NSObject.accessibilityIsIgnored() in ' + this.constructor.name;
    };
    /*AppKit.(file).NSObject.accessibilityIsIgnored()*/
    /*AppKit.(file).NSObject.accessibilityIsIgnored()*/
    NSObject.prototype.accessibilityIsIgnored = function ($info) {
        throw 'unsupported method AppKit.(file).NSObject.accessibilityIsIgnored() in ' + this.constructor.name;
    };
    /*AppKit.(file).NSObject.accessibilityHitTest(_:NSPoint)*/
    /*AppKit.(file).NSObject.accessibilityHitTest(_:NSPoint)*/
    NSObject.accessibilityHitTest = function ($info, point) {
        throw 'unsupported method AppKit.(file).NSObject.accessibilityHitTest(_:NSPoint) in ' + this.constructor.name;
    };
    /*AppKit.(file).NSObject.accessibilityHitTest(_:NSPoint)*/
    /*AppKit.(file).NSObject.accessibilityHitTest(_:NSPoint)*/
    NSObject.prototype.accessibilityHitTest = function ($info, point) {
        throw 'unsupported method AppKit.(file).NSObject.accessibilityHitTest(_:NSPoint) in ' + this.constructor.name;
    };
    /*AppKit.(file).NSObject.accessibilityIndex(ofChild:Any)*/
    /*AppKit.(file).NSObject.accessibilityIndex(ofChild:Any)*/
    NSObject.accessibilityIndex = function ($info, child) {
        throw 'unsupported method AppKit.(file).NSObject.accessibilityIndex(ofChild:Any) in ' + this.constructor.name;
    };
    /*AppKit.(file).NSObject.accessibilityIndex(ofChild:Any)*/
    /*AppKit.(file).NSObject.accessibilityIndex(ofChild:Any)*/
    NSObject.prototype.accessibilityIndex = function ($info, child) {
        throw 'unsupported method AppKit.(file).NSObject.accessibilityIndex(ofChild:Any) in ' + this.constructor.name;
    };
    /*AppKit.(file).NSObject.accessibilityIndexOfChild(_:Any)*/
    /*AppKit.(file).NSObject.accessibilityIndexOfChild(_:Any)*/
    NSObject.accessibilityIndexOfChild = function ($info, child) {
        throw 'unsupported method AppKit.(file).NSObject.accessibilityIndexOfChild(_:Any) in ' + this.constructor.name;
    };
    /*AppKit.(file).NSObject.accessibilityIndexOfChild(_:Any)*/
    /*AppKit.(file).NSObject.accessibilityIndexOfChild(_:Any)*/
    NSObject.prototype.accessibilityIndexOfChild = function ($info, child) {
        throw 'unsupported method AppKit.(file).NSObject.accessibilityIndexOfChild(_:Any) in ' + this.constructor.name;
    };
    /*AppKit.(file).NSObject.accessibilityArrayAttributeCount(_:NSAccessibility.Attribute)*/
    /*AppKit.(file).NSObject.accessibilityArrayAttributeCount(_:NSAccessibility.Attribute)*/
    NSObject.accessibilityArrayAttributeCount = function ($info, attribute) {
        throw 'unsupported method AppKit.(file).NSObject.accessibilityArrayAttributeCount(_:NSAccessibility.Attribute) in ' + this.constructor.name;
    };
    /*AppKit.(file).NSObject.accessibilityArrayAttributeCount(_:NSAccessibility.Attribute)*/
    /*AppKit.(file).NSObject.accessibilityArrayAttributeCount(_:NSAccessibility.Attribute)*/
    NSObject.prototype.accessibilityArrayAttributeCount = function ($info, attribute) {
        throw 'unsupported method AppKit.(file).NSObject.accessibilityArrayAttributeCount(_:NSAccessibility.Attribute) in ' + this.constructor.name;
    };
    /*AppKit.(file).NSObject.accessibilityArrayAttributeValues(_:NSAccessibility.Attribute,index:Int,maxCount:Int)*/
    /*AppKit.(file).NSObject.accessibilityArrayAttributeValues(_:NSAccessibility.Attribute,index:Int,maxCount:Int)*/
    NSObject.accessibilityArrayAttributeValues = function ($info, attribute, index, maxCount) {
        throw 'unsupported method AppKit.(file).NSObject.accessibilityArrayAttributeValues(_:NSAccessibility.Attribute,index:Int,maxCount:Int) in ' + this.constructor.name;
    };
    /*AppKit.(file).NSObject.accessibilityArrayAttributeValues(_:NSAccessibility.Attribute,index:Int,maxCount:Int)*/
    /*AppKit.(file).NSObject.accessibilityArrayAttributeValues(_:NSAccessibility.Attribute,index:Int,maxCount:Int)*/
    NSObject.prototype.accessibilityArrayAttributeValues = function ($info, attribute, index, maxCount) {
        throw 'unsupported method AppKit.(file).NSObject.accessibilityArrayAttributeValues(_:NSAccessibility.Attribute,index:Int,maxCount:Int) in ' + this.constructor.name;
    };
    /*AppKit.(file).NSObject.accessibilityFocusedUIElement()*/
    /*AppKit.(file).NSObject.accessibilityFocusedUIElement()*/
    NSObject.accessibilityFocusedUIElement = function ($info) {
        throw 'unsupported method AppKit.(file).NSObject.accessibilityFocusedUIElement() in ' + this.constructor.name;
    };
    /*AppKit.(file).NSObject.accessibilityNotifiesWhenDestroyed()*/
    /*AppKit.(file).NSObject.accessibilityNotifiesWhenDestroyed()*/
    NSObject.accessibilityNotifiesWhenDestroyed = function ($info) {
        throw 'unsupported method AppKit.(file).NSObject.accessibilityNotifiesWhenDestroyed() in ' + this.constructor.name;
    };
    /*Foundation.(file).NSObject.scriptingIsEqual(to:Any)*/
    /*Foundation.(file).NSObject.scriptingIsEqual(to:Any)*/
    NSObject.scriptingIsEqualTo = function ($info, object) {
        throw 'unsupported method Foundation.(file).NSObject.scriptingIsEqual(to:Any) in ' + this.constructor.name;
    };
    /*Foundation.(file).NSObject.scriptingIsEqual(to:Any)*/
    /*Foundation.(file).NSObject.scriptingIsEqual(to:Any)*/
    NSObject.prototype.scriptingIsEqualTo = function ($info, object) {
        throw 'unsupported method Foundation.(file).NSObject.scriptingIsEqual(to:Any) in ' + this.constructor.name;
    };
    /*Foundation.(file).NSObject.scriptingIsEqualTo(_:Any)*/
    /*Foundation.(file).NSObject.scriptingIsEqualTo(_:Any)*/
    NSObject.scriptingIsEqualTo = function ($info, object) {
        throw 'unsupported method Foundation.(file).NSObject.scriptingIsEqualTo(_:Any) in ' + this.constructor.name;
    };
    /*Foundation.(file).NSObject.scriptingIsEqualTo(_:Any)*/
    /*Foundation.(file).NSObject.scriptingIsEqualTo(_:Any)*/
    NSObject.prototype.scriptingIsEqualTo = function ($info, object) {
        throw 'unsupported method Foundation.(file).NSObject.scriptingIsEqualTo(_:Any) in ' + this.constructor.name;
    };
    /*Foundation.(file).NSObject.scriptingIsLessThanOrEqual(to:Any)*/
    /*Foundation.(file).NSObject.scriptingIsLessThanOrEqual(to:Any)*/
    NSObject.scriptingIsLessThanOrEqualTo = function ($info, object) {
        throw 'unsupported method Foundation.(file).NSObject.scriptingIsLessThanOrEqual(to:Any) in ' + this.constructor.name;
    };
    /*Foundation.(file).NSObject.scriptingIsLessThanOrEqual(to:Any)*/
    /*Foundation.(file).NSObject.scriptingIsLessThanOrEqual(to:Any)*/
    NSObject.prototype.scriptingIsLessThanOrEqualTo = function ($info, object) {
        throw 'unsupported method Foundation.(file).NSObject.scriptingIsLessThanOrEqual(to:Any) in ' + this.constructor.name;
    };
    /*Foundation.(file).NSObject.scriptingIsLessThanOrEqualTo(_:Any)*/
    /*Foundation.(file).NSObject.scriptingIsLessThanOrEqualTo(_:Any)*/
    NSObject.scriptingIsLessThanOrEqualTo = function ($info, object) {
        throw 'unsupported method Foundation.(file).NSObject.scriptingIsLessThanOrEqualTo(_:Any) in ' + this.constructor.name;
    };
    /*Foundation.(file).NSObject.scriptingIsLessThanOrEqualTo(_:Any)*/
    /*Foundation.(file).NSObject.scriptingIsLessThanOrEqualTo(_:Any)*/
    NSObject.prototype.scriptingIsLessThanOrEqualTo = function ($info, object) {
        throw 'unsupported method Foundation.(file).NSObject.scriptingIsLessThanOrEqualTo(_:Any) in ' + this.constructor.name;
    };
    /*Foundation.(file).NSObject.scriptingIsLessThan(_:Any)*/
    /*Foundation.(file).NSObject.scriptingIsLessThan(_:Any)*/
    NSObject.scriptingIsLessThan = function ($info, object) {
        throw 'unsupported method Foundation.(file).NSObject.scriptingIsLessThan(_:Any) in ' + this.constructor.name;
    };
    /*Foundation.(file).NSObject.scriptingIsLessThan(_:Any)*/
    /*Foundation.(file).NSObject.scriptingIsLessThan(_:Any)*/
    NSObject.prototype.scriptingIsLessThan = function ($info, object) {
        throw 'unsupported method Foundation.(file).NSObject.scriptingIsLessThan(_:Any) in ' + this.constructor.name;
    };
    /*Foundation.(file).NSObject.scriptingIsGreaterThanOrEqual(to:Any)*/
    /*Foundation.(file).NSObject.scriptingIsGreaterThanOrEqual(to:Any)*/
    NSObject.scriptingIsGreaterThanOrEqualTo = function ($info, object) {
        throw 'unsupported method Foundation.(file).NSObject.scriptingIsGreaterThanOrEqual(to:Any) in ' + this.constructor.name;
    };
    /*Foundation.(file).NSObject.scriptingIsGreaterThanOrEqual(to:Any)*/
    /*Foundation.(file).NSObject.scriptingIsGreaterThanOrEqual(to:Any)*/
    NSObject.prototype.scriptingIsGreaterThanOrEqualTo = function ($info, object) {
        throw 'unsupported method Foundation.(file).NSObject.scriptingIsGreaterThanOrEqual(to:Any) in ' + this.constructor.name;
    };
    /*Foundation.(file).NSObject.scriptingIsGreaterThanOrEqualTo(_:Any)*/
    /*Foundation.(file).NSObject.scriptingIsGreaterThanOrEqualTo(_:Any)*/
    NSObject.scriptingIsGreaterThanOrEqualTo = function ($info, object) {
        throw 'unsupported method Foundation.(file).NSObject.scriptingIsGreaterThanOrEqualTo(_:Any) in ' + this.constructor.name;
    };
    /*Foundation.(file).NSObject.scriptingIsGreaterThanOrEqualTo(_:Any)*/
    /*Foundation.(file).NSObject.scriptingIsGreaterThanOrEqualTo(_:Any)*/
    NSObject.prototype.scriptingIsGreaterThanOrEqualTo = function ($info, object) {
        throw 'unsupported method Foundation.(file).NSObject.scriptingIsGreaterThanOrEqualTo(_:Any) in ' + this.constructor.name;
    };
    /*Foundation.(file).NSObject.scriptingIsGreaterThan(_:Any)*/
    /*Foundation.(file).NSObject.scriptingIsGreaterThan(_:Any)*/
    NSObject.scriptingIsGreaterThan = function ($info, object) {
        throw 'unsupported method Foundation.(file).NSObject.scriptingIsGreaterThan(_:Any) in ' + this.constructor.name;
    };
    /*Foundation.(file).NSObject.scriptingIsGreaterThan(_:Any)*/
    /*Foundation.(file).NSObject.scriptingIsGreaterThan(_:Any)*/
    NSObject.prototype.scriptingIsGreaterThan = function ($info, object) {
        throw 'unsupported method Foundation.(file).NSObject.scriptingIsGreaterThan(_:Any) in ' + this.constructor.name;
    };
    /*Foundation.(file).NSObject.scriptingBegins(with:Any)*/
    /*Foundation.(file).NSObject.scriptingBegins(with:Any)*/
    NSObject.scriptingBeginsWith = function ($info, object) {
        throw 'unsupported method Foundation.(file).NSObject.scriptingBegins(with:Any) in ' + this.constructor.name;
    };
    /*Foundation.(file).NSObject.scriptingBegins(with:Any)*/
    /*Foundation.(file).NSObject.scriptingBegins(with:Any)*/
    NSObject.prototype.scriptingBeginsWith = function ($info, object) {
        throw 'unsupported method Foundation.(file).NSObject.scriptingBegins(with:Any) in ' + this.constructor.name;
    };
    /*Foundation.(file).NSObject.scriptingBeginsWith(_:Any)*/
    /*Foundation.(file).NSObject.scriptingBeginsWith(_:Any)*/
    NSObject.scriptingBeginsWith = function ($info, object) {
        throw 'unsupported method Foundation.(file).NSObject.scriptingBeginsWith(_:Any) in ' + this.constructor.name;
    };
    /*Foundation.(file).NSObject.scriptingBeginsWith(_:Any)*/
    /*Foundation.(file).NSObject.scriptingBeginsWith(_:Any)*/
    NSObject.prototype.scriptingBeginsWith = function ($info, object) {
        throw 'unsupported method Foundation.(file).NSObject.scriptingBeginsWith(_:Any) in ' + this.constructor.name;
    };
    /*Foundation.(file).NSObject.scriptingEnds(with:Any)*/
    /*Foundation.(file).NSObject.scriptingEnds(with:Any)*/
    NSObject.scriptingEndsWith = function ($info, object) {
        throw 'unsupported method Foundation.(file).NSObject.scriptingEnds(with:Any) in ' + this.constructor.name;
    };
    /*Foundation.(file).NSObject.scriptingEnds(with:Any)*/
    /*Foundation.(file).NSObject.scriptingEnds(with:Any)*/
    NSObject.prototype.scriptingEndsWith = function ($info, object) {
        throw 'unsupported method Foundation.(file).NSObject.scriptingEnds(with:Any) in ' + this.constructor.name;
    };
    /*Foundation.(file).NSObject.scriptingEndsWith(_:Any)*/
    /*Foundation.(file).NSObject.scriptingEndsWith(_:Any)*/
    NSObject.scriptingEndsWith = function ($info, object) {
        throw 'unsupported method Foundation.(file).NSObject.scriptingEndsWith(_:Any) in ' + this.constructor.name;
    };
    /*Foundation.(file).NSObject.scriptingEndsWith(_:Any)*/
    /*Foundation.(file).NSObject.scriptingEndsWith(_:Any)*/
    NSObject.prototype.scriptingEndsWith = function ($info, object) {
        throw 'unsupported method Foundation.(file).NSObject.scriptingEndsWith(_:Any) in ' + this.constructor.name;
    };
    /*Foundation.(file).NSObject.scriptingContains(_:Any)*/
    /*Foundation.(file).NSObject.scriptingContains(_:Any)*/
    NSObject.scriptingContains = function ($info, object) {
        throw 'unsupported method Foundation.(file).NSObject.scriptingContains(_:Any) in ' + this.constructor.name;
    };
    /*Foundation.(file).NSObject.scriptingContains(_:Any)*/
    /*Foundation.(file).NSObject.scriptingContains(_:Any)*/
    NSObject.prototype.scriptingContains = function ($info, object) {
        throw 'unsupported method Foundation.(file).NSObject.scriptingContains(_:Any) in ' + this.constructor.name;
    };
    /*Foundation.(file).NSObject.isEqual(to:Any?)*/
    /*Foundation.(file).NSObject.isEqual(to:Any?)*/
    NSObject.isEqualTo = function ($info, object) {
        throw 'unsupported method Foundation.(file).NSObject.isEqual(to:Any?) in ' + this.constructor.name;
    };
    /*Foundation.(file).NSObject.isEqual(to:Any?)*/
    /*Foundation.(file).NSObject.isEqual(to:Any?)*/
    NSObject.prototype.isEqualTo = function ($info, object) {
        throw 'unsupported method Foundation.(file).NSObject.isEqual(to:Any?) in ' + this.constructor.name;
    };
    /*Foundation.(file).NSObject.isEqualTo(_:Any?)*/
    /*Foundation.(file).NSObject.isEqualTo(_:Any?)*/
    NSObject.isEqualTo = function ($info, object) {
        throw 'unsupported method Foundation.(file).NSObject.isEqualTo(_:Any?) in ' + this.constructor.name;
    };
    /*Foundation.(file).NSObject.isEqualTo(_:Any?)*/
    /*Foundation.(file).NSObject.isEqualTo(_:Any?)*/
    NSObject.prototype.isEqualTo = function ($info, object) {
        throw 'unsupported method Foundation.(file).NSObject.isEqualTo(_:Any?) in ' + this.constructor.name;
    };
    /*Foundation.(file).NSObject.isLessThanOrEqual(to:Any?)*/
    /*Foundation.(file).NSObject.isLessThanOrEqual(to:Any?)*/
    NSObject.isLessThanOrEqualTo = function ($info, object) {
        throw 'unsupported method Foundation.(file).NSObject.isLessThanOrEqual(to:Any?) in ' + this.constructor.name;
    };
    /*Foundation.(file).NSObject.isLessThanOrEqual(to:Any?)*/
    /*Foundation.(file).NSObject.isLessThanOrEqual(to:Any?)*/
    NSObject.prototype.isLessThanOrEqualTo = function ($info, object) {
        throw 'unsupported method Foundation.(file).NSObject.isLessThanOrEqual(to:Any?) in ' + this.constructor.name;
    };
    /*Foundation.(file).NSObject.isLessThanOrEqualTo(_:Any?)*/
    /*Foundation.(file).NSObject.isLessThanOrEqualTo(_:Any?)*/
    NSObject.isLessThanOrEqualTo = function ($info, object) {
        throw 'unsupported method Foundation.(file).NSObject.isLessThanOrEqualTo(_:Any?) in ' + this.constructor.name;
    };
    /*Foundation.(file).NSObject.isLessThanOrEqualTo(_:Any?)*/
    /*Foundation.(file).NSObject.isLessThanOrEqualTo(_:Any?)*/
    NSObject.prototype.isLessThanOrEqualTo = function ($info, object) {
        throw 'unsupported method Foundation.(file).NSObject.isLessThanOrEqualTo(_:Any?) in ' + this.constructor.name;
    };
    /*Foundation.(file).NSObject.isLessThan(_:Any?)*/
    /*Foundation.(file).NSObject.isLessThan(_:Any?)*/
    NSObject.isLessThan = function ($info, object) {
        throw 'unsupported method Foundation.(file).NSObject.isLessThan(_:Any?) in ' + this.constructor.name;
    };
    /*Foundation.(file).NSObject.isLessThan(_:Any?)*/
    /*Foundation.(file).NSObject.isLessThan(_:Any?)*/
    NSObject.prototype.isLessThan = function ($info, object) {
        throw 'unsupported method Foundation.(file).NSObject.isLessThan(_:Any?) in ' + this.constructor.name;
    };
    /*Foundation.(file).NSObject.isGreaterThanOrEqual(to:Any?)*/
    /*Foundation.(file).NSObject.isGreaterThanOrEqual(to:Any?)*/
    NSObject.isGreaterThanOrEqualTo = function ($info, object) {
        throw 'unsupported method Foundation.(file).NSObject.isGreaterThanOrEqual(to:Any?) in ' + this.constructor.name;
    };
    /*Foundation.(file).NSObject.isGreaterThanOrEqual(to:Any?)*/
    /*Foundation.(file).NSObject.isGreaterThanOrEqual(to:Any?)*/
    NSObject.prototype.isGreaterThanOrEqualTo = function ($info, object) {
        throw 'unsupported method Foundation.(file).NSObject.isGreaterThanOrEqual(to:Any?) in ' + this.constructor.name;
    };
    /*Foundation.(file).NSObject.isGreaterThanOrEqualTo(_:Any?)*/
    /*Foundation.(file).NSObject.isGreaterThanOrEqualTo(_:Any?)*/
    NSObject.isGreaterThanOrEqualTo = function ($info, object) {
        throw 'unsupported method Foundation.(file).NSObject.isGreaterThanOrEqualTo(_:Any?) in ' + this.constructor.name;
    };
    /*Foundation.(file).NSObject.isGreaterThanOrEqualTo(_:Any?)*/
    /*Foundation.(file).NSObject.isGreaterThanOrEqualTo(_:Any?)*/
    NSObject.prototype.isGreaterThanOrEqualTo = function ($info, object) {
        throw 'unsupported method Foundation.(file).NSObject.isGreaterThanOrEqualTo(_:Any?) in ' + this.constructor.name;
    };
    /*Foundation.(file).NSObject.isGreaterThan(_:Any?)*/
    /*Foundation.(file).NSObject.isGreaterThan(_:Any?)*/
    NSObject.isGreaterThan = function ($info, object) {
        throw 'unsupported method Foundation.(file).NSObject.isGreaterThan(_:Any?) in ' + this.constructor.name;
    };
    /*Foundation.(file).NSObject.isGreaterThan(_:Any?)*/
    /*Foundation.(file).NSObject.isGreaterThan(_:Any?)*/
    NSObject.prototype.isGreaterThan = function ($info, object) {
        throw 'unsupported method Foundation.(file).NSObject.isGreaterThan(_:Any?) in ' + this.constructor.name;
    };
    /*Foundation.(file).NSObject.isNotEqual(to:Any?)*/
    /*Foundation.(file).NSObject.isNotEqual(to:Any?)*/
    NSObject.isNotEqualTo = function ($info, object) {
        throw 'unsupported method Foundation.(file).NSObject.isNotEqual(to:Any?) in ' + this.constructor.name;
    };
    /*Foundation.(file).NSObject.isNotEqual(to:Any?)*/
    /*Foundation.(file).NSObject.isNotEqual(to:Any?)*/
    NSObject.prototype.isNotEqualTo = function ($info, object) {
        throw 'unsupported method Foundation.(file).NSObject.isNotEqual(to:Any?) in ' + this.constructor.name;
    };
    /*Foundation.(file).NSObject.isNotEqualTo(_:Any?)*/
    /*Foundation.(file).NSObject.isNotEqualTo(_:Any?)*/
    NSObject.isNotEqualTo = function ($info, object) {
        throw 'unsupported method Foundation.(file).NSObject.isNotEqualTo(_:Any?) in ' + this.constructor.name;
    };
    /*Foundation.(file).NSObject.isNotEqualTo(_:Any?)*/
    /*Foundation.(file).NSObject.isNotEqualTo(_:Any?)*/
    NSObject.prototype.isNotEqualTo = function ($info, object) {
        throw 'unsupported method Foundation.(file).NSObject.isNotEqualTo(_:Any?) in ' + this.constructor.name;
    };
    /*Foundation.(file).NSObject.doesContain(_:Any)*/
    /*Foundation.(file).NSObject.doesContain(_:Any)*/
    NSObject.doesContain = function ($info, object) {
        throw 'unsupported method Foundation.(file).NSObject.doesContain(_:Any) in ' + this.constructor.name;
    };
    /*Foundation.(file).NSObject.doesContain(_:Any)*/
    /*Foundation.(file).NSObject.doesContain(_:Any)*/
    NSObject.prototype.doesContain = function ($info, object) {
        throw 'unsupported method Foundation.(file).NSObject.doesContain(_:Any) in ' + this.constructor.name;
    };
    /*Foundation.(file).NSObject.isLike(_:String)*/
    /*Foundation.(file).NSObject.isLike(_:String)*/
    NSObject.isLike = function ($info, object) {
        throw 'unsupported method Foundation.(file).NSObject.isLike(_:String) in ' + this.constructor.name;
    };
    /*Foundation.(file).NSObject.isLike(_:String)*/
    /*Foundation.(file).NSObject.isLike(_:String)*/
    NSObject.prototype.isLike = function ($info, object) {
        throw 'unsupported method Foundation.(file).NSObject.isLike(_:String) in ' + this.constructor.name;
    };
    /*Foundation.(file).NSObject.isCaseInsensitiveLike(_:String)*/
    /*Foundation.(file).NSObject.isCaseInsensitiveLike(_:String)*/
    NSObject.isCaseInsensitiveLike = function ($info, object) {
        throw 'unsupported method Foundation.(file).NSObject.isCaseInsensitiveLike(_:String) in ' + this.constructor.name;
    };
    /*Foundation.(file).NSObject.isCaseInsensitiveLike(_:String)*/
    /*Foundation.(file).NSObject.isCaseInsensitiveLike(_:String)*/
    NSObject.prototype.isCaseInsensitiveLike = function ($info, object) {
        throw 'unsupported method Foundation.(file).NSObject.isCaseInsensitiveLike(_:String) in ' + this.constructor.name;
    };
    /*Foundation.(file).NSObject.indicesOfObjects(byEvaluatingObjectSpecifier:NSScriptObjectSpecifier)*/
    /*Foundation.(file).NSObject.indicesOfObjects(byEvaluatingObjectSpecifier:NSScriptObjectSpecifier)*/
    NSObject.indicesOfObjectsByEvaluatingObjectSpecifier = function ($info, specifier) {
        throw 'unsupported method Foundation.(file).NSObject.indicesOfObjects(byEvaluatingObjectSpecifier:NSScriptObjectSpecifier) in ' + this.constructor.name;
    };
    /*Foundation.(file).NSObject.indicesOfObjects(byEvaluatingObjectSpecifier:NSScriptObjectSpecifier)*/
    /*Foundation.(file).NSObject.indicesOfObjects(byEvaluatingObjectSpecifier:NSScriptObjectSpecifier)*/
    NSObject.prototype.indicesOfObjectsByEvaluatingObjectSpecifier = function ($info, specifier) {
        throw 'unsupported method Foundation.(file).NSObject.indicesOfObjects(byEvaluatingObjectSpecifier:NSScriptObjectSpecifier) in ' + this.constructor.name;
    };
    /*Foundation.(file).NSObject.indicesOfObjectsByEvaluatingObjectSpecifier(_:NSScriptObjectSpecifier)*/
    /*Foundation.(file).NSObject.indicesOfObjectsByEvaluatingObjectSpecifier(_:NSScriptObjectSpecifier)*/
    NSObject.indicesOfObjectsByEvaluatingObjectSpecifier = function ($info, specifier) {
        throw 'unsupported method Foundation.(file).NSObject.indicesOfObjectsByEvaluatingObjectSpecifier(_:NSScriptObjectSpecifier) in ' + this.constructor.name;
    };
    /*Foundation.(file).NSObject.indicesOfObjectsByEvaluatingObjectSpecifier(_:NSScriptObjectSpecifier)*/
    /*Foundation.(file).NSObject.indicesOfObjectsByEvaluatingObjectSpecifier(_:NSScriptObjectSpecifier)*/
    NSObject.prototype.indicesOfObjectsByEvaluatingObjectSpecifier = function ($info, specifier) {
        throw 'unsupported method Foundation.(file).NSObject.indicesOfObjectsByEvaluatingObjectSpecifier(_:NSScriptObjectSpecifier) in ' + this.constructor.name;
    };
    /*Foundation.(file).NSObject.objectSpecifier()*/
    /*Foundation.(file).NSObject.objectSpecifier()*/
    NSObject.objectSpecifier = function ($info) {
        throw 'unsupported method Foundation.(file).NSObject.objectSpecifier() in ' + this.constructor.name;
    };
    /*Foundation.(file).NSObject.value(at:Int,inPropertyWithKey:String)*/
    /*Foundation.(file).NSObject.value(at:Int,inPropertyWithKey:String)*/
    NSObject.valueAtInPropertyWithKey = function ($info, index, key) {
        throw 'unsupported method Foundation.(file).NSObject.value(at:Int,inPropertyWithKey:String) in ' + this.constructor.name;
    };
    /*Foundation.(file).NSObject.value(at:Int,inPropertyWithKey:String)*/
    /*Foundation.(file).NSObject.value(at:Int,inPropertyWithKey:String)*/
    NSObject.prototype.valueAtInPropertyWithKey = function ($info, index, key) {
        throw 'unsupported method Foundation.(file).NSObject.value(at:Int,inPropertyWithKey:String) in ' + this.constructor.name;
    };
    /*Foundation.(file).NSObject.valueAtIndex(_:Int,inPropertyWithKey:String)*/
    /*Foundation.(file).NSObject.valueAtIndex(_:Int,inPropertyWithKey:String)*/
    NSObject.valueAtIndexInPropertyWithKey = function ($info, index, key) {
        throw 'unsupported method Foundation.(file).NSObject.valueAtIndex(_:Int,inPropertyWithKey:String) in ' + this.constructor.name;
    };
    /*Foundation.(file).NSObject.valueAtIndex(_:Int,inPropertyWithKey:String)*/
    /*Foundation.(file).NSObject.valueAtIndex(_:Int,inPropertyWithKey:String)*/
    NSObject.prototype.valueAtIndexInPropertyWithKey = function ($info, index, key) {
        throw 'unsupported method Foundation.(file).NSObject.valueAtIndex(_:Int,inPropertyWithKey:String) in ' + this.constructor.name;
    };
    /*Foundation.(file).NSObject.value(withName:String,inPropertyWithKey:String)*/
    /*Foundation.(file).NSObject.value(withName:String,inPropertyWithKey:String)*/
    NSObject.valueWithNameInPropertyWithKey = function ($info, _name, key) {
        throw 'unsupported method Foundation.(file).NSObject.value(withName:String,inPropertyWithKey:String) in ' + this.constructor.name;
    };
    /*Foundation.(file).NSObject.value(withName:String,inPropertyWithKey:String)*/
    /*Foundation.(file).NSObject.value(withName:String,inPropertyWithKey:String)*/
    NSObject.prototype.valueWithNameInPropertyWithKey = function ($info, _name, key) {
        throw 'unsupported method Foundation.(file).NSObject.value(withName:String,inPropertyWithKey:String) in ' + this.constructor.name;
    };
    /*Foundation.(file).NSObject.valueWithName(_:String,inPropertyWithKey:String)*/
    /*Foundation.(file).NSObject.valueWithName(_:String,inPropertyWithKey:String)*/
    NSObject.valueWithNameInPropertyWithKey = function ($info, _name, key) {
        throw 'unsupported method Foundation.(file).NSObject.valueWithName(_:String,inPropertyWithKey:String) in ' + this.constructor.name;
    };
    /*Foundation.(file).NSObject.valueWithName(_:String,inPropertyWithKey:String)*/
    /*Foundation.(file).NSObject.valueWithName(_:String,inPropertyWithKey:String)*/
    NSObject.prototype.valueWithNameInPropertyWithKey = function ($info, _name, key) {
        throw 'unsupported method Foundation.(file).NSObject.valueWithName(_:String,inPropertyWithKey:String) in ' + this.constructor.name;
    };
    /*Foundation.(file).NSObject.value(withUniqueID:Any,inPropertyWithKey:String)*/
    /*Foundation.(file).NSObject.value(withUniqueID:Any,inPropertyWithKey:String)*/
    NSObject.valueWithUniqueIDInPropertyWithKey = function ($info, uniqueID, key) {
        throw 'unsupported method Foundation.(file).NSObject.value(withUniqueID:Any,inPropertyWithKey:String) in ' + this.constructor.name;
    };
    /*Foundation.(file).NSObject.value(withUniqueID:Any,inPropertyWithKey:String)*/
    /*Foundation.(file).NSObject.value(withUniqueID:Any,inPropertyWithKey:String)*/
    NSObject.prototype.valueWithUniqueIDInPropertyWithKey = function ($info, uniqueID, key) {
        throw 'unsupported method Foundation.(file).NSObject.value(withUniqueID:Any,inPropertyWithKey:String) in ' + this.constructor.name;
    };
    /*Foundation.(file).NSObject.valueWithUniqueID(_:Any,inPropertyWithKey:String)*/
    /*Foundation.(file).NSObject.valueWithUniqueID(_:Any,inPropertyWithKey:String)*/
    NSObject.valueWithUniqueIDInPropertyWithKey = function ($info, uniqueID, key) {
        throw 'unsupported method Foundation.(file).NSObject.valueWithUniqueID(_:Any,inPropertyWithKey:String) in ' + this.constructor.name;
    };
    /*Foundation.(file).NSObject.valueWithUniqueID(_:Any,inPropertyWithKey:String)*/
    /*Foundation.(file).NSObject.valueWithUniqueID(_:Any,inPropertyWithKey:String)*/
    NSObject.prototype.valueWithUniqueIDInPropertyWithKey = function ($info, uniqueID, key) {
        throw 'unsupported method Foundation.(file).NSObject.valueWithUniqueID(_:Any,inPropertyWithKey:String) in ' + this.constructor.name;
    };
    /*Foundation.(file).NSObject.insertValue(_:Any,at:Int,inPropertyWithKey:String)*/
    /*Foundation.(file).NSObject.insertValue(_:Any,at:Int,inPropertyWithKey:String)*/
    NSObject.insertValueAtInPropertyWithKey = function ($info, value, index, key) {
        throw 'unsupported method Foundation.(file).NSObject.insertValue(_:Any,at:Int,inPropertyWithKey:String) in ' + this.constructor.name;
    };
    /*Foundation.(file).NSObject.insertValue(_:Any,at:Int,inPropertyWithKey:String)*/
    /*Foundation.(file).NSObject.insertValue(_:Any,at:Int,inPropertyWithKey:String)*/
    NSObject.prototype.insertValueAtInPropertyWithKey = function ($info, value, index, key) {
        throw 'unsupported method Foundation.(file).NSObject.insertValue(_:Any,at:Int,inPropertyWithKey:String) in ' + this.constructor.name;
    };
    /*Foundation.(file).NSObject.insertValue(_:Any,atIndex:Int,inPropertyWithKey:String)*/
    /*Foundation.(file).NSObject.insertValue(_:Any,atIndex:Int,inPropertyWithKey:String)*/
    NSObject.insertValueAtIndexInPropertyWithKey = function ($info, value, index, key) {
        throw 'unsupported method Foundation.(file).NSObject.insertValue(_:Any,atIndex:Int,inPropertyWithKey:String) in ' + this.constructor.name;
    };
    /*Foundation.(file).NSObject.insertValue(_:Any,atIndex:Int,inPropertyWithKey:String)*/
    /*Foundation.(file).NSObject.insertValue(_:Any,atIndex:Int,inPropertyWithKey:String)*/
    NSObject.prototype.insertValueAtIndexInPropertyWithKey = function ($info, value, index, key) {
        throw 'unsupported method Foundation.(file).NSObject.insertValue(_:Any,atIndex:Int,inPropertyWithKey:String) in ' + this.constructor.name;
    };
    /*Foundation.(file).NSObject.removeValue(at:Int,fromPropertyWithKey:String)*/
    /*Foundation.(file).NSObject.removeValue(at:Int,fromPropertyWithKey:String)*/
    NSObject.removeValueAtFromPropertyWithKey = function ($info, index, key) {
        throw 'unsupported method Foundation.(file).NSObject.removeValue(at:Int,fromPropertyWithKey:String) in ' + this.constructor.name;
    };
    /*Foundation.(file).NSObject.removeValue(at:Int,fromPropertyWithKey:String)*/
    /*Foundation.(file).NSObject.removeValue(at:Int,fromPropertyWithKey:String)*/
    NSObject.prototype.removeValueAtFromPropertyWithKey = function ($info, index, key) {
        throw 'unsupported method Foundation.(file).NSObject.removeValue(at:Int,fromPropertyWithKey:String) in ' + this.constructor.name;
    };
    /*Foundation.(file).NSObject.removeValueAtIndex(_:Int,fromPropertyWithKey:String)*/
    /*Foundation.(file).NSObject.removeValueAtIndex(_:Int,fromPropertyWithKey:String)*/
    NSObject.removeValueAtIndexFromPropertyWithKey = function ($info, index, key) {
        throw 'unsupported method Foundation.(file).NSObject.removeValueAtIndex(_:Int,fromPropertyWithKey:String) in ' + this.constructor.name;
    };
    /*Foundation.(file).NSObject.removeValueAtIndex(_:Int,fromPropertyWithKey:String)*/
    /*Foundation.(file).NSObject.removeValueAtIndex(_:Int,fromPropertyWithKey:String)*/
    NSObject.prototype.removeValueAtIndexFromPropertyWithKey = function ($info, index, key) {
        throw 'unsupported method Foundation.(file).NSObject.removeValueAtIndex(_:Int,fromPropertyWithKey:String) in ' + this.constructor.name;
    };
    /*Foundation.(file).NSObject.replaceValue(at:Int,inPropertyWithKey:String,withValue:Any)*/
    /*Foundation.(file).NSObject.replaceValue(at:Int,inPropertyWithKey:String,withValue:Any)*/
    NSObject.replaceValueAtInPropertyWithKeyWithValue = function ($info, index, key, value) {
        throw 'unsupported method Foundation.(file).NSObject.replaceValue(at:Int,inPropertyWithKey:String,withValue:Any) in ' + this.constructor.name;
    };
    /*Foundation.(file).NSObject.replaceValue(at:Int,inPropertyWithKey:String,withValue:Any)*/
    /*Foundation.(file).NSObject.replaceValue(at:Int,inPropertyWithKey:String,withValue:Any)*/
    NSObject.prototype.replaceValueAtInPropertyWithKeyWithValue = function ($info, index, key, value) {
        throw 'unsupported method Foundation.(file).NSObject.replaceValue(at:Int,inPropertyWithKey:String,withValue:Any) in ' + this.constructor.name;
    };
    /*Foundation.(file).NSObject.replaceValueAtIndex(_:Int,inPropertyWithKey:String,withValue:Any)*/
    /*Foundation.(file).NSObject.replaceValueAtIndex(_:Int,inPropertyWithKey:String,withValue:Any)*/
    NSObject.replaceValueAtIndexInPropertyWithKeyWithValue = function ($info, index, key, value) {
        throw 'unsupported method Foundation.(file).NSObject.replaceValueAtIndex(_:Int,inPropertyWithKey:String,withValue:Any) in ' + this.constructor.name;
    };
    /*Foundation.(file).NSObject.replaceValueAtIndex(_:Int,inPropertyWithKey:String,withValue:Any)*/
    /*Foundation.(file).NSObject.replaceValueAtIndex(_:Int,inPropertyWithKey:String,withValue:Any)*/
    NSObject.prototype.replaceValueAtIndexInPropertyWithKeyWithValue = function ($info, index, key, value) {
        throw 'unsupported method Foundation.(file).NSObject.replaceValueAtIndex(_:Int,inPropertyWithKey:String,withValue:Any) in ' + this.constructor.name;
    };
    /*Foundation.(file).NSObject.insertValue(_:Any,inPropertyWithKey:String)*/
    /*Foundation.(file).NSObject.insertValue(_:Any,inPropertyWithKey:String)*/
    NSObject.insertValueInPropertyWithKey = function ($info, value, key) {
        throw 'unsupported method Foundation.(file).NSObject.insertValue(_:Any,inPropertyWithKey:String) in ' + this.constructor.name;
    };
    /*Foundation.(file).NSObject.insertValue(_:Any,inPropertyWithKey:String)*/
    /*Foundation.(file).NSObject.insertValue(_:Any,inPropertyWithKey:String)*/
    NSObject.prototype.insertValueInPropertyWithKey = function ($info, value, key) {
        throw 'unsupported method Foundation.(file).NSObject.insertValue(_:Any,inPropertyWithKey:String) in ' + this.constructor.name;
    };
    /*Foundation.(file).NSObject.coerceValue(_:Any?,forKey:String)*/
    /*Foundation.(file).NSObject.coerceValue(_:Any?,forKey:String)*/
    NSObject.coerceValueForKey = function ($info, value, key) {
        throw 'unsupported method Foundation.(file).NSObject.coerceValue(_:Any?,forKey:String) in ' + this.constructor.name;
    };
    /*Foundation.(file).NSObject.coerceValue(_:Any?,forKey:String)*/
    /*Foundation.(file).NSObject.coerceValue(_:Any?,forKey:String)*/
    NSObject.prototype.coerceValueForKey = function ($info, value, key) {
        throw 'unsupported method Foundation.(file).NSObject.coerceValue(_:Any?,forKey:String) in ' + this.constructor.name;
    };
    /*Foundation.(file).NSObject.classCode()*/
    /*Foundation.(file).NSObject.classCode()*/
    NSObject.classCode = function ($info) {
        throw 'unsupported method Foundation.(file).NSObject.classCode() in ' + this.constructor.name;
    };
    /*Foundation.(file).NSObject.className()*/
    /*Foundation.(file).NSObject.className()*/
    NSObject.className = function ($info) {
        throw 'unsupported method Foundation.(file).NSObject.className() in ' + this.constructor.name;
    };
    /*Foundation.(file).NSObject.scriptingValue(for:NSScriptObjectSpecifier)*/
    /*Foundation.(file).NSObject.scriptingValue(for:NSScriptObjectSpecifier)*/
    NSObject.scriptingValueFor = function ($info, objectSpecifier) {
        throw 'unsupported method Foundation.(file).NSObject.scriptingValue(for:NSScriptObjectSpecifier) in ' + this.constructor.name;
    };
    /*Foundation.(file).NSObject.scriptingValue(for:NSScriptObjectSpecifier)*/
    /*Foundation.(file).NSObject.scriptingValue(for:NSScriptObjectSpecifier)*/
    NSObject.prototype.scriptingValueFor = function ($info, objectSpecifier) {
        throw 'unsupported method Foundation.(file).NSObject.scriptingValue(for:NSScriptObjectSpecifier) in ' + this.constructor.name;
    };
    /*Foundation.(file).NSObject.scriptingValueForSpecifier(_:NSScriptObjectSpecifier)*/
    /*Foundation.(file).NSObject.scriptingValueForSpecifier(_:NSScriptObjectSpecifier)*/
    NSObject.scriptingValueForSpecifier = function ($info, objectSpecifier) {
        throw 'unsupported method Foundation.(file).NSObject.scriptingValueForSpecifier(_:NSScriptObjectSpecifier) in ' + this.constructor.name;
    };
    /*Foundation.(file).NSObject.scriptingValueForSpecifier(_:NSScriptObjectSpecifier)*/
    /*Foundation.(file).NSObject.scriptingValueForSpecifier(_:NSScriptObjectSpecifier)*/
    NSObject.prototype.scriptingValueForSpecifier = function ($info, objectSpecifier) {
        throw 'unsupported method Foundation.(file).NSObject.scriptingValueForSpecifier(_:NSScriptObjectSpecifier) in ' + this.constructor.name;
    };
    /*Foundation.(file).NSObject.copyScriptingValue(_:Any,forKey:String,withProperties:[String : Any])*/
    /*Foundation.(file).NSObject.copyScriptingValue(_:Any,forKey:String,withProperties:[String : Any])*/
    NSObject.copyScriptingValueForKeyWithProperties = function ($info, value, key, properties) {
        throw 'unsupported method Foundation.(file).NSObject.copyScriptingValue(_:Any,forKey:String,withProperties:[String : Any]) in ' + this.constructor.name;
    };
    /*Foundation.(file).NSObject.copyScriptingValue(_:Any,forKey:String,withProperties:[String : Any])*/
    /*Foundation.(file).NSObject.copyScriptingValue(_:Any,forKey:String,withProperties:[String : Any])*/
    NSObject.prototype.copyScriptingValueForKeyWithProperties = function ($info, value, key, properties) {
        throw 'unsupported method Foundation.(file).NSObject.copyScriptingValue(_:Any,forKey:String,withProperties:[String : Any]) in ' + this.constructor.name;
    };
    /*Foundation.(file).NSObject.newScriptingObject(of:AnyClass,forValueForKey:String,withContentsValue:Any?,properties:[String : Any])*/
    /*Foundation.(file).NSObject.newScriptingObject(of:AnyClass,forValueForKey:String,withContentsValue:Any?,properties:[String : Any])*/
    NSObject.newScriptingObjectOfForValueForKeyWithContentsValueProperties = function ($info, objectClass, key, contentsValue, properties) {
        throw 'unsupported method Foundation.(file).NSObject.newScriptingObject(of:AnyClass,forValueForKey:String,withContentsValue:Any?,properties:[String : Any]) in ' + this.constructor.name;
    };
    /*Foundation.(file).NSObject.newScriptingObject(of:AnyClass,forValueForKey:String,withContentsValue:Any?,properties:[String : Any])*/
    /*Foundation.(file).NSObject.newScriptingObject(of:AnyClass,forValueForKey:String,withContentsValue:Any?,properties:[String : Any])*/
    NSObject.prototype.newScriptingObjectOfForValueForKeyWithContentsValueProperties = function ($info, objectClass, key, contentsValue, properties) {
        throw 'unsupported method Foundation.(file).NSObject.newScriptingObject(of:AnyClass,forValueForKey:String,withContentsValue:Any?,properties:[String : Any]) in ' + this.constructor.name;
    };
    /*Foundation.(file).NSObject.newScriptingObjectOfClass(_:AnyClass,forValueForKey:String,withContentsValue:Any?,properties:[String : Any])*/
    /*Foundation.(file).NSObject.newScriptingObjectOfClass(_:AnyClass,forValueForKey:String,withContentsValue:Any?,properties:[String : Any])*/
    NSObject.newScriptingObjectOfClassForValueForKeyWithContentsValueProperties = function ($info, objectClass, key, contentsValue, properties) {
        throw 'unsupported method Foundation.(file).NSObject.newScriptingObjectOfClass(_:AnyClass,forValueForKey:String,withContentsValue:Any?,properties:[String : Any]) in ' + this.constructor.name;
    };
    /*Foundation.(file).NSObject.newScriptingObjectOfClass(_:AnyClass,forValueForKey:String,withContentsValue:Any?,properties:[String : Any])*/
    /*Foundation.(file).NSObject.newScriptingObjectOfClass(_:AnyClass,forValueForKey:String,withContentsValue:Any?,properties:[String : Any])*/
    NSObject.prototype.newScriptingObjectOfClassForValueForKeyWithContentsValueProperties = function ($info, objectClass, key, contentsValue, properties) {
        throw 'unsupported method Foundation.(file).NSObject.newScriptingObjectOfClass(_:AnyClass,forValueForKey:String,withContentsValue:Any?,properties:[String : Any]) in ' + this.constructor.name;
    };
    /*Foundation.(file).NSObject.scriptingProperties()*/
    /*Foundation.(file).NSObject.scriptingProperties()*/
    NSObject.scriptingProperties = function ($info) {
        throw 'unsupported method Foundation.(file).NSObject.scriptingProperties() in ' + this.constructor.name;
    };
    /*Foundation.(file).NSObject.setScriptingProperties(_:[String : Any]?)*/
    /*Foundation.(file).NSObject.setScriptingProperties(_:[String : Any]?)*/
    NSObject.setScriptingProperties = function ($info, scriptingProperties) {
        throw 'unsupported method Foundation.(file).NSObject.setScriptingProperties(_:[String : Any]?) in ' + this.constructor.name;
    };
    /*Foundation.(file).NSObject.inverse(forRelationshipKey:String)*/
    /*Foundation.(file).NSObject.inverse(forRelationshipKey:String)*/
    NSObject.inverseForRelationshipKey = function ($info, relationshipKey) {
        throw 'unsupported method Foundation.(file).NSObject.inverse(forRelationshipKey:String) in ' + this.constructor.name;
    };
    /*Foundation.(file).NSObject.inverse(forRelationshipKey:String)*/
    /*Foundation.(file).NSObject.inverse(forRelationshipKey:String)*/
    NSObject.prototype.inverseForRelationshipKey = function ($info, relationshipKey) {
        throw 'unsupported method Foundation.(file).NSObject.inverse(forRelationshipKey:String) in ' + this.constructor.name;
    };
    /*Foundation.(file).NSObject.inverseForRelationshipKey(_:String)*/
    /*Foundation.(file).NSObject.inverseForRelationshipKey(_:String)*/
    NSObject.inverseForRelationshipKey = function ($info, relationshipKey) {
        throw 'unsupported method Foundation.(file).NSObject.inverseForRelationshipKey(_:String) in ' + this.constructor.name;
    };
    /*Foundation.(file).NSObject.inverseForRelationshipKey(_:String)*/
    /*Foundation.(file).NSObject.inverseForRelationshipKey(_:String)*/
    NSObject.prototype.inverseForRelationshipKey = function ($info, relationshipKey) {
        throw 'unsupported method Foundation.(file).NSObject.inverseForRelationshipKey(_:String) in ' + this.constructor.name;
    };
    /*Foundation.(file).NSObject.classDescription()*/
    /*Foundation.(file).NSObject.classDescription()*/
    NSObject.classDescription = function ($info) {
        throw 'unsupported method Foundation.(file).NSObject.classDescription() in ' + this.constructor.name;
    };
    /*Foundation.(file).NSObject.attributeKeys()*/
    /*Foundation.(file).NSObject.attributeKeys()*/
    NSObject.attributeKeys = function ($info) {
        throw 'unsupported method Foundation.(file).NSObject.attributeKeys() in ' + this.constructor.name;
    };
    /*Foundation.(file).NSObject.toOneRelationshipKeys()*/
    /*Foundation.(file).NSObject.toOneRelationshipKeys()*/
    NSObject.toOneRelationshipKeys = function ($info) {
        throw 'unsupported method Foundation.(file).NSObject.toOneRelationshipKeys() in ' + this.constructor.name;
    };
    /*Foundation.(file).NSObject.toManyRelationshipKeys()*/
    /*Foundation.(file).NSObject.toManyRelationshipKeys()*/
    NSObject.toManyRelationshipKeys = function ($info) {
        throw 'unsupported method Foundation.(file).NSObject.toManyRelationshipKeys() in ' + this.constructor.name;
    };
    /*Foundation.(file).NSObject.replacementObject(for:NSPortCoder)*/
    /*Foundation.(file).NSObject.replacementObject(for:NSPortCoder)*/
    NSObject.replacementObjectFor = function ($info, coder) {
        throw 'unsupported method Foundation.(file).NSObject.replacementObject(for:NSPortCoder) in ' + this.constructor.name;
    };
    /*Foundation.(file).NSObject.replacementObject(for:NSPortCoder)*/
    /*Foundation.(file).NSObject.replacementObject(for:NSPortCoder)*/
    NSObject.prototype.replacementObjectFor = function ($info, coder) {
        throw 'unsupported method Foundation.(file).NSObject.replacementObject(for:NSPortCoder) in ' + this.constructor.name;
    };
    /*Foundation.(file).NSObject.replacementObjectForPortCoder(_:NSPortCoder)*/
    /*Foundation.(file).NSObject.replacementObjectForPortCoder(_:NSPortCoder)*/
    NSObject.replacementObjectForPortCoder = function ($info, coder) {
        throw 'unsupported method Foundation.(file).NSObject.replacementObjectForPortCoder(_:NSPortCoder) in ' + this.constructor.name;
    };
    /*Foundation.(file).NSObject.replacementObjectForPortCoder(_:NSPortCoder)*/
    /*Foundation.(file).NSObject.replacementObjectForPortCoder(_:NSPortCoder)*/
    NSObject.prototype.replacementObjectForPortCoder = function ($info, coder) {
        throw 'unsupported method Foundation.(file).NSObject.replacementObjectForPortCoder(_:NSPortCoder) in ' + this.constructor.name;
    };
    /*Foundation.(file).NSObject.classForPortCoder()*/
    /*Foundation.(file).NSObject.classForPortCoder()*/
    NSObject.classForPortCoder = function ($info) {
        throw 'unsupported method Foundation.(file).NSObject.classForPortCoder() in ' + this.constructor.name;
    };
    /*Foundation.(file).NSObject.replacementObject(for:NSArchiver)*/
    /*Foundation.(file).NSObject.replacementObject(for:NSArchiver)*/
    NSObject.replacementObjectFor = function ($info, archiver) {
        throw 'unsupported method Foundation.(file).NSObject.replacementObject(for:NSArchiver) in ' + this.constructor.name;
    };
    /*Foundation.(file).NSObject.replacementObject(for:NSArchiver)*/
    /*Foundation.(file).NSObject.replacementObject(for:NSArchiver)*/
    NSObject.prototype.replacementObjectFor = function ($info, archiver) {
        throw 'unsupported method Foundation.(file).NSObject.replacementObject(for:NSArchiver) in ' + this.constructor.name;
    };
    /*Foundation.(file).NSObject.replacementObjectForArchiver(_:NSArchiver)*/
    /*Foundation.(file).NSObject.replacementObjectForArchiver(_:NSArchiver)*/
    NSObject.replacementObjectForArchiver = function ($info, archiver) {
        throw 'unsupported method Foundation.(file).NSObject.replacementObjectForArchiver(_:NSArchiver) in ' + this.constructor.name;
    };
    /*Foundation.(file).NSObject.replacementObjectForArchiver(_:NSArchiver)*/
    /*Foundation.(file).NSObject.replacementObjectForArchiver(_:NSArchiver)*/
    NSObject.prototype.replacementObjectForArchiver = function ($info, archiver) {
        throw 'unsupported method Foundation.(file).NSObject.replacementObjectForArchiver(_:NSArchiver) in ' + this.constructor.name;
    };
    /*Foundation.(file).NSObject.classForArchiver()*/
    /*Foundation.(file).NSObject.classForArchiver()*/
    NSObject.classForArchiver = function ($info) {
        throw 'unsupported method Foundation.(file).NSObject.classForArchiver() in ' + this.constructor.name;
    };
    /*Foundation.(file).NSObject.performSelector(onMainThread:Selector,with:Any?,waitUntilDone:Bool,modes:[String]?)*/
    /*Foundation.(file).NSObject.performSelector(onMainThread:Selector,with:Any?,waitUntilDone:Bool,modes:[String]?)*/
    NSObject.performSelectorOnMainThreadWithWaitUntilDoneModes = function ($info, aSelector, arg, wait, array) {
        throw 'unsupported method Foundation.(file).NSObject.performSelector(onMainThread:Selector,with:Any?,waitUntilDone:Bool,modes:[String]?) in ' + this.constructor.name;
    };
    /*Foundation.(file).NSObject.performSelector(onMainThread:Selector,with:Any?,waitUntilDone:Bool,modes:[String]?)*/
    /*Foundation.(file).NSObject.performSelector(onMainThread:Selector,with:Any?,waitUntilDone:Bool,modes:[String]?)*/
    NSObject.prototype.performSelectorOnMainThreadWithWaitUntilDoneModes = function ($info, aSelector, arg, wait, array) {
        throw 'unsupported method Foundation.(file).NSObject.performSelector(onMainThread:Selector,with:Any?,waitUntilDone:Bool,modes:[String]?) in ' + this.constructor.name;
    };
    /*Foundation.(file).NSObject.performSelectorOnMainThread(_:Selector,withObject:Any?,waitUntilDone:Bool,modes:[String]?)*/
    /*Foundation.(file).NSObject.performSelectorOnMainThread(_:Selector,withObject:Any?,waitUntilDone:Bool,modes:[String]?)*/
    NSObject.performSelectorOnMainThreadWithObjectWaitUntilDoneModes = function ($info, aSelector, arg, wait, array) {
        throw 'unsupported method Foundation.(file).NSObject.performSelectorOnMainThread(_:Selector,withObject:Any?,waitUntilDone:Bool,modes:[String]?) in ' + this.constructor.name;
    };
    /*Foundation.(file).NSObject.performSelectorOnMainThread(_:Selector,withObject:Any?,waitUntilDone:Bool,modes:[String]?)*/
    /*Foundation.(file).NSObject.performSelectorOnMainThread(_:Selector,withObject:Any?,waitUntilDone:Bool,modes:[String]?)*/
    NSObject.prototype.performSelectorOnMainThreadWithObjectWaitUntilDoneModes = function ($info, aSelector, arg, wait, array) {
        throw 'unsupported method Foundation.(file).NSObject.performSelectorOnMainThread(_:Selector,withObject:Any?,waitUntilDone:Bool,modes:[String]?) in ' + this.constructor.name;
    };
    /*Foundation.(file).NSObject.performSelector(onMainThread:Selector,with:Any?,waitUntilDone:Bool)*/
    /*Foundation.(file).NSObject.performSelector(onMainThread:Selector,with:Any?,waitUntilDone:Bool)*/
    NSObject.performSelectorOnMainThreadWithWaitUntilDone = function ($info, aSelector, arg, wait) {
        throw 'unsupported method Foundation.(file).NSObject.performSelector(onMainThread:Selector,with:Any?,waitUntilDone:Bool) in ' + this.constructor.name;
    };
    /*Foundation.(file).NSObject.performSelector(onMainThread:Selector,with:Any?,waitUntilDone:Bool)*/
    /*Foundation.(file).NSObject.performSelector(onMainThread:Selector,with:Any?,waitUntilDone:Bool)*/
    NSObject.prototype.performSelectorOnMainThreadWithWaitUntilDone = function ($info, aSelector, arg, wait) {
        throw 'unsupported method Foundation.(file).NSObject.performSelector(onMainThread:Selector,with:Any?,waitUntilDone:Bool) in ' + this.constructor.name;
    };
    /*Foundation.(file).NSObject.performSelectorOnMainThread(_:Selector,withObject:Any?,waitUntilDone:Bool)*/
    /*Foundation.(file).NSObject.performSelectorOnMainThread(_:Selector,withObject:Any?,waitUntilDone:Bool)*/
    NSObject.performSelectorOnMainThreadWithObjectWaitUntilDone = function ($info, aSelector, arg, wait) {
        throw 'unsupported method Foundation.(file).NSObject.performSelectorOnMainThread(_:Selector,withObject:Any?,waitUntilDone:Bool) in ' + this.constructor.name;
    };
    /*Foundation.(file).NSObject.performSelectorOnMainThread(_:Selector,withObject:Any?,waitUntilDone:Bool)*/
    /*Foundation.(file).NSObject.performSelectorOnMainThread(_:Selector,withObject:Any?,waitUntilDone:Bool)*/
    NSObject.prototype.performSelectorOnMainThreadWithObjectWaitUntilDone = function ($info, aSelector, arg, wait) {
        throw 'unsupported method Foundation.(file).NSObject.performSelectorOnMainThread(_:Selector,withObject:Any?,waitUntilDone:Bool) in ' + this.constructor.name;
    };
    /*Foundation.(file).NSObject.perform(_:Selector,on:Thread,with:Any?,waitUntilDone:Bool,modes:[String]?)*/
    /*Foundation.(file).NSObject.perform(_:Selector,on:Thread,with:Any?,waitUntilDone:Bool,modes:[String]?)*/
    NSObject.performOnWithWaitUntilDoneModes = function ($info, aSelector, thr, arg, wait, array) {
        throw 'unsupported method Foundation.(file).NSObject.perform(_:Selector,on:Thread,with:Any?,waitUntilDone:Bool,modes:[String]?) in ' + this.constructor.name;
    };
    /*Foundation.(file).NSObject.perform(_:Selector,on:Thread,with:Any?,waitUntilDone:Bool,modes:[String]?)*/
    /*Foundation.(file).NSObject.perform(_:Selector,on:Thread,with:Any?,waitUntilDone:Bool,modes:[String]?)*/
    NSObject.prototype.performOnWithWaitUntilDoneModes = function ($info, aSelector, thr, arg, wait, array) {
        throw 'unsupported method Foundation.(file).NSObject.perform(_:Selector,on:Thread,with:Any?,waitUntilDone:Bool,modes:[String]?) in ' + this.constructor.name;
    };
    /*Foundation.(file).NSObject.performSelector(_:Selector,onThread:Thread,withObject:Any?,waitUntilDone:Bool,modes:[String]?)*/
    /*Foundation.(file).NSObject.performSelector(_:Selector,onThread:Thread,withObject:Any?,waitUntilDone:Bool,modes:[String]?)*/
    NSObject.performSelectorOnThreadWithObjectWaitUntilDoneModes = function ($info, aSelector, thr, arg, wait, array) {
        throw 'unsupported method Foundation.(file).NSObject.performSelector(_:Selector,onThread:Thread,withObject:Any?,waitUntilDone:Bool,modes:[String]?) in ' + this.constructor.name;
    };
    /*Foundation.(file).NSObject.performSelector(_:Selector,onThread:Thread,withObject:Any?,waitUntilDone:Bool,modes:[String]?)*/
    /*Foundation.(file).NSObject.performSelector(_:Selector,onThread:Thread,withObject:Any?,waitUntilDone:Bool,modes:[String]?)*/
    NSObject.prototype.performSelectorOnThreadWithObjectWaitUntilDoneModes = function ($info, aSelector, thr, arg, wait, array) {
        throw 'unsupported method Foundation.(file).NSObject.performSelector(_:Selector,onThread:Thread,withObject:Any?,waitUntilDone:Bool,modes:[String]?) in ' + this.constructor.name;
    };
    /*Foundation.(file).NSObject.perform(_:Selector,on:Thread,with:Any?,waitUntilDone:Bool)*/
    /*Foundation.(file).NSObject.perform(_:Selector,on:Thread,with:Any?,waitUntilDone:Bool)*/
    NSObject.performOnWithWaitUntilDone = function ($info, aSelector, thr, arg, wait) {
        throw 'unsupported method Foundation.(file).NSObject.perform(_:Selector,on:Thread,with:Any?,waitUntilDone:Bool) in ' + this.constructor.name;
    };
    /*Foundation.(file).NSObject.perform(_:Selector,on:Thread,with:Any?,waitUntilDone:Bool)*/
    /*Foundation.(file).NSObject.perform(_:Selector,on:Thread,with:Any?,waitUntilDone:Bool)*/
    NSObject.prototype.performOnWithWaitUntilDone = function ($info, aSelector, thr, arg, wait) {
        throw 'unsupported method Foundation.(file).NSObject.perform(_:Selector,on:Thread,with:Any?,waitUntilDone:Bool) in ' + this.constructor.name;
    };
    /*Foundation.(file).NSObject.performSelector(_:Selector,onThread:Thread,withObject:Any?,waitUntilDone:Bool)*/
    /*Foundation.(file).NSObject.performSelector(_:Selector,onThread:Thread,withObject:Any?,waitUntilDone:Bool)*/
    NSObject.performSelectorOnThreadWithObjectWaitUntilDone = function ($info, aSelector, thr, arg, wait) {
        throw 'unsupported method Foundation.(file).NSObject.performSelector(_:Selector,onThread:Thread,withObject:Any?,waitUntilDone:Bool) in ' + this.constructor.name;
    };
    /*Foundation.(file).NSObject.performSelector(_:Selector,onThread:Thread,withObject:Any?,waitUntilDone:Bool)*/
    /*Foundation.(file).NSObject.performSelector(_:Selector,onThread:Thread,withObject:Any?,waitUntilDone:Bool)*/
    NSObject.prototype.performSelectorOnThreadWithObjectWaitUntilDone = function ($info, aSelector, thr, arg, wait) {
        throw 'unsupported method Foundation.(file).NSObject.performSelector(_:Selector,onThread:Thread,withObject:Any?,waitUntilDone:Bool) in ' + this.constructor.name;
    };
    /*Foundation.(file).NSObject.performSelector(inBackground:Selector,with:Any?)*/
    /*Foundation.(file).NSObject.performSelector(inBackground:Selector,with:Any?)*/
    NSObject.performSelectorInBackgroundWith = function ($info, aSelector, arg) {
        throw 'unsupported method Foundation.(file).NSObject.performSelector(inBackground:Selector,with:Any?) in ' + this.constructor.name;
    };
    /*Foundation.(file).NSObject.performSelector(inBackground:Selector,with:Any?)*/
    /*Foundation.(file).NSObject.performSelector(inBackground:Selector,with:Any?)*/
    NSObject.prototype.performSelectorInBackgroundWith = function ($info, aSelector, arg) {
        throw 'unsupported method Foundation.(file).NSObject.performSelector(inBackground:Selector,with:Any?) in ' + this.constructor.name;
    };
    /*Foundation.(file).NSObject.performSelectorInBackground(_:Selector,withObject:Any?)*/
    /*Foundation.(file).NSObject.performSelectorInBackground(_:Selector,withObject:Any?)*/
    NSObject.performSelectorInBackgroundWithObject = function ($info, aSelector, arg) {
        throw 'unsupported method Foundation.(file).NSObject.performSelectorInBackground(_:Selector,withObject:Any?) in ' + this.constructor.name;
    };
    /*Foundation.(file).NSObject.performSelectorInBackground(_:Selector,withObject:Any?)*/
    /*Foundation.(file).NSObject.performSelectorInBackground(_:Selector,withObject:Any?)*/
    NSObject.prototype.performSelectorInBackgroundWithObject = function ($info, aSelector, arg) {
        throw 'unsupported method Foundation.(file).NSObject.performSelectorInBackground(_:Selector,withObject:Any?) in ' + this.constructor.name;
    };
    /*Foundation.(file).NSObject.classForKeyedUnarchiver()*/
    /*Foundation.(file).NSObject.classForKeyedUnarchiver()*/
    NSObject.classForKeyedUnarchiver = function ($info) {
        throw 'unsupported method Foundation.(file).NSObject.classForKeyedUnarchiver() in ' + this.constructor.name;
    };
    /*Foundation.(file).NSObject.replacementObject(for:NSKeyedArchiver)*/
    /*Foundation.(file).NSObject.replacementObject(for:NSKeyedArchiver)*/
    NSObject.replacementObjectFor = function ($info, archiver) {
        throw 'unsupported method Foundation.(file).NSObject.replacementObject(for:NSKeyedArchiver) in ' + this.constructor.name;
    };
    /*Foundation.(file).NSObject.replacementObject(for:NSKeyedArchiver)*/
    /*Foundation.(file).NSObject.replacementObject(for:NSKeyedArchiver)*/
    NSObject.prototype.replacementObjectFor = function ($info, archiver) {
        throw 'unsupported method Foundation.(file).NSObject.replacementObject(for:NSKeyedArchiver) in ' + this.constructor.name;
    };
    /*Foundation.(file).NSObject.replacementObjectForKeyedArchiver(_:NSKeyedArchiver)*/
    /*Foundation.(file).NSObject.replacementObjectForKeyedArchiver(_:NSKeyedArchiver)*/
    NSObject.replacementObjectForKeyedArchiver = function ($info, archiver) {
        throw 'unsupported method Foundation.(file).NSObject.replacementObjectForKeyedArchiver(_:NSKeyedArchiver) in ' + this.constructor.name;
    };
    /*Foundation.(file).NSObject.replacementObjectForKeyedArchiver(_:NSKeyedArchiver)*/
    /*Foundation.(file).NSObject.replacementObjectForKeyedArchiver(_:NSKeyedArchiver)*/
    NSObject.prototype.replacementObjectForKeyedArchiver = function ($info, archiver) {
        throw 'unsupported method Foundation.(file).NSObject.replacementObjectForKeyedArchiver(_:NSKeyedArchiver) in ' + this.constructor.name;
    };
    /*Foundation.(file).NSObject.classFallbacksForKeyedArchiver()*/
    /*Foundation.(file).NSObject.classFallbacksForKeyedArchiver()*/
    NSObject.classFallbacksForKeyedArchiver = function ($info) {
        throw 'unsupported method Foundation.(file).NSObject.classFallbacksForKeyedArchiver() in ' + this.constructor.name;
    };
    /*Foundation.(file).NSObject.classForKeyedArchiver()*/
    /*Foundation.(file).NSObject.classForKeyedArchiver()*/
    NSObject.classForKeyedArchiver = function ($info) {
        throw 'unsupported method Foundation.(file).NSObject.classForKeyedArchiver() in ' + this.constructor.name;
    };
    /*Foundation.(file).NSObject.setKeys(_:[Any],triggerChangeNotificationsForDependentKey:String)*/
    /*Foundation.(file).NSObject.setKeys(_:[Any],triggerChangeNotificationsForDependentKey:String)*/
    NSObject.setKeysTriggerChangeNotificationsForDependentKey = function ($info, keys, dependentKey) {
        throw 'unsupported method Foundation.(file).NSObject.setKeys(_:[Any],triggerChangeNotificationsForDependentKey:String) in ' + this.constructor.name;
    };
    /*Foundation.(file).NSObject.keyPathsForValuesAffectingValue(forKey:String)*/
    /*Foundation.(file).NSObject.keyPathsForValuesAffectingValue(forKey:String)*/
    NSObject.keyPathsForValuesAffectingValueForKey = function ($info, key) {
        throw 'unsupported method Foundation.(file).NSObject.keyPathsForValuesAffectingValue(forKey:String) in ' + this.constructor.name;
    };
    /*Foundation.(file).NSObject.keyPathsForValuesAffectingValueForKey(_:String)*/
    /*Foundation.(file).NSObject.keyPathsForValuesAffectingValueForKey(_:String)*/
    NSObject.keyPathsForValuesAffectingValueForKey = function ($info, key) {
        throw 'unsupported method Foundation.(file).NSObject.keyPathsForValuesAffectingValueForKey(_:String) in ' + this.constructor.name;
    };
    /*Foundation.(file).NSObject.automaticallyNotifiesObservers(forKey:String)*/
    /*Foundation.(file).NSObject.automaticallyNotifiesObservers(forKey:String)*/
    NSObject.automaticallyNotifiesObserversForKey = function ($info, key) {
        throw 'unsupported method Foundation.(file).NSObject.automaticallyNotifiesObservers(forKey:String) in ' + this.constructor.name;
    };
    /*Foundation.(file).NSObject.automaticallyNotifiesObserversForKey(_:String)*/
    /*Foundation.(file).NSObject.automaticallyNotifiesObserversForKey(_:String)*/
    NSObject.automaticallyNotifiesObserversForKey = function ($info, key) {
        throw 'unsupported method Foundation.(file).NSObject.automaticallyNotifiesObserversForKey(_:String) in ' + this.constructor.name;
    };
    /*Foundation.(file).NSObject.observationInfo()*/
    /*Foundation.(file).NSObject.observationInfo()*/
    NSObject.observationInfo = function ($info) {
        throw 'unsupported method Foundation.(file).NSObject.observationInfo() in ' + this.constructor.name;
    };
    /*Foundation.(file).NSObject.setObservationInfo(_:UnsafeMutableRawPointer?)*/
    /*Foundation.(file).NSObject.setObservationInfo(_:UnsafeMutableRawPointer?)*/
    NSObject.setObservationInfo = function ($info, observationInfo) {
        throw 'unsupported method Foundation.(file).NSObject.setObservationInfo(_:UnsafeMutableRawPointer?) in ' + this.constructor.name;
    };
    /*Foundation.(file).NSObject.willChangeValue(forKey:String)*/
    /*Foundation.(file).NSObject.willChangeValue(forKey:String)*/
    NSObject.willChangeValueForKey = function ($info, key) {
        throw 'unsupported method Foundation.(file).NSObject.willChangeValue(forKey:String) in ' + this.constructor.name;
    };
    /*Foundation.(file).NSObject.willChangeValue(forKey:String)*/
    /*Foundation.(file).NSObject.willChangeValue(forKey:String)*/
    NSObject.prototype.willChangeValueForKey = function ($info, key) {
        throw 'unsupported method Foundation.(file).NSObject.willChangeValue(forKey:String) in ' + this.constructor.name;
    };
    /*Foundation.(file).NSObject.willChangeValueForKey(_:String)*/
    /*Foundation.(file).NSObject.willChangeValueForKey(_:String)*/
    NSObject.willChangeValueForKey = function ($info, key) {
        throw 'unsupported method Foundation.(file).NSObject.willChangeValueForKey(_:String) in ' + this.constructor.name;
    };
    /*Foundation.(file).NSObject.willChangeValueForKey(_:String)*/
    /*Foundation.(file).NSObject.willChangeValueForKey(_:String)*/
    NSObject.prototype.willChangeValueForKey = function ($info, key) {
        throw 'unsupported method Foundation.(file).NSObject.willChangeValueForKey(_:String) in ' + this.constructor.name;
    };
    /*Foundation.(file).NSObject.didChangeValue(forKey:String)*/
    /*Foundation.(file).NSObject.didChangeValue(forKey:String)*/
    NSObject.didChangeValueForKey = function ($info, key) {
        throw 'unsupported method Foundation.(file).NSObject.didChangeValue(forKey:String) in ' + this.constructor.name;
    };
    /*Foundation.(file).NSObject.didChangeValue(forKey:String)*/
    /*Foundation.(file).NSObject.didChangeValue(forKey:String)*/
    NSObject.prototype.didChangeValueForKey = function ($info, key) {
        throw 'unsupported method Foundation.(file).NSObject.didChangeValue(forKey:String) in ' + this.constructor.name;
    };
    /*Foundation.(file).NSObject.didChangeValueForKey(_:String)*/
    /*Foundation.(file).NSObject.didChangeValueForKey(_:String)*/
    NSObject.didChangeValueForKey = function ($info, key) {
        throw 'unsupported method Foundation.(file).NSObject.didChangeValueForKey(_:String) in ' + this.constructor.name;
    };
    /*Foundation.(file).NSObject.didChangeValueForKey(_:String)*/
    /*Foundation.(file).NSObject.didChangeValueForKey(_:String)*/
    NSObject.prototype.didChangeValueForKey = function ($info, key) {
        throw 'unsupported method Foundation.(file).NSObject.didChangeValueForKey(_:String) in ' + this.constructor.name;
    };
    /*Foundation.(file).NSObject.willChange(_:NSKeyValueChange,valuesAt:IndexSet,forKey:String)*/
    /*Foundation.(file).NSObject.willChange(_:NSKeyValueChange,valuesAt:IndexSet,forKey:String)*/
    NSObject.willChangeValuesAtForKey = function ($info, changeKind, indexes, key) {
        throw 'unsupported method Foundation.(file).NSObject.willChange(_:NSKeyValueChange,valuesAt:IndexSet,forKey:String) in ' + this.constructor.name;
    };
    /*Foundation.(file).NSObject.willChange(_:NSKeyValueChange,valuesAt:IndexSet,forKey:String)*/
    /*Foundation.(file).NSObject.willChange(_:NSKeyValueChange,valuesAt:IndexSet,forKey:String)*/
    NSObject.prototype.willChangeValuesAtForKey = function ($info, changeKind, indexes, key) {
        throw 'unsupported method Foundation.(file).NSObject.willChange(_:NSKeyValueChange,valuesAt:IndexSet,forKey:String) in ' + this.constructor.name;
    };
    /*Foundation.(file).NSObject.willChange(_:NSKeyValueChange,valuesAtIndexes:IndexSet,forKey:String)*/
    /*Foundation.(file).NSObject.willChange(_:NSKeyValueChange,valuesAtIndexes:IndexSet,forKey:String)*/
    NSObject.willChangeValuesAtIndexesForKey = function ($info, changeKind, indexes, key) {
        throw 'unsupported method Foundation.(file).NSObject.willChange(_:NSKeyValueChange,valuesAtIndexes:IndexSet,forKey:String) in ' + this.constructor.name;
    };
    /*Foundation.(file).NSObject.willChange(_:NSKeyValueChange,valuesAtIndexes:IndexSet,forKey:String)*/
    /*Foundation.(file).NSObject.willChange(_:NSKeyValueChange,valuesAtIndexes:IndexSet,forKey:String)*/
    NSObject.prototype.willChangeValuesAtIndexesForKey = function ($info, changeKind, indexes, key) {
        throw 'unsupported method Foundation.(file).NSObject.willChange(_:NSKeyValueChange,valuesAtIndexes:IndexSet,forKey:String) in ' + this.constructor.name;
    };
    /*Foundation.(file).NSObject.didChange(_:NSKeyValueChange,valuesAt:IndexSet,forKey:String)*/
    /*Foundation.(file).NSObject.didChange(_:NSKeyValueChange,valuesAt:IndexSet,forKey:String)*/
    NSObject.didChangeValuesAtForKey = function ($info, changeKind, indexes, key) {
        throw 'unsupported method Foundation.(file).NSObject.didChange(_:NSKeyValueChange,valuesAt:IndexSet,forKey:String) in ' + this.constructor.name;
    };
    /*Foundation.(file).NSObject.didChange(_:NSKeyValueChange,valuesAt:IndexSet,forKey:String)*/
    /*Foundation.(file).NSObject.didChange(_:NSKeyValueChange,valuesAt:IndexSet,forKey:String)*/
    NSObject.prototype.didChangeValuesAtForKey = function ($info, changeKind, indexes, key) {
        throw 'unsupported method Foundation.(file).NSObject.didChange(_:NSKeyValueChange,valuesAt:IndexSet,forKey:String) in ' + this.constructor.name;
    };
    /*Foundation.(file).NSObject.didChange(_:NSKeyValueChange,valuesAtIndexes:IndexSet,forKey:String)*/
    /*Foundation.(file).NSObject.didChange(_:NSKeyValueChange,valuesAtIndexes:IndexSet,forKey:String)*/
    NSObject.didChangeValuesAtIndexesForKey = function ($info, changeKind, indexes, key) {
        throw 'unsupported method Foundation.(file).NSObject.didChange(_:NSKeyValueChange,valuesAtIndexes:IndexSet,forKey:String) in ' + this.constructor.name;
    };
    /*Foundation.(file).NSObject.didChange(_:NSKeyValueChange,valuesAtIndexes:IndexSet,forKey:String)*/
    /*Foundation.(file).NSObject.didChange(_:NSKeyValueChange,valuesAtIndexes:IndexSet,forKey:String)*/
    NSObject.prototype.didChangeValuesAtIndexesForKey = function ($info, changeKind, indexes, key) {
        throw 'unsupported method Foundation.(file).NSObject.didChange(_:NSKeyValueChange,valuesAtIndexes:IndexSet,forKey:String) in ' + this.constructor.name;
    };
    /*Foundation.(file).NSObject.willChangeValue(forKey:String,withSetMutation:NSKeyValueSetMutationKind,using:Set<AnyHashable>)*/
    /*Foundation.(file).NSObject.willChangeValue(forKey:String,withSetMutation:NSKeyValueSetMutationKind,using:Set<AnyHashable>)*/
    NSObject.willChangeValueForKeyWithSetMutationUsing = function ($info, key, mutationKind, objects) {
        throw 'unsupported method Foundation.(file).NSObject.willChangeValue(forKey:String,withSetMutation:NSKeyValueSetMutationKind,using:Set<AnyHashable>) in ' + this.constructor.name;
    };
    /*Foundation.(file).NSObject.willChangeValue(forKey:String,withSetMutation:NSKeyValueSetMutationKind,using:Set<AnyHashable>)*/
    /*Foundation.(file).NSObject.willChangeValue(forKey:String,withSetMutation:NSKeyValueSetMutationKind,using:Set<AnyHashable>)*/
    NSObject.prototype.willChangeValueForKeyWithSetMutationUsing = function ($info, key, mutationKind, objects) {
        throw 'unsupported method Foundation.(file).NSObject.willChangeValue(forKey:String,withSetMutation:NSKeyValueSetMutationKind,using:Set<AnyHashable>) in ' + this.constructor.name;
    };
    /*Foundation.(file).NSObject.willChangeValueForKey(_:String,withSetMutation:NSKeyValueSetMutationKind,usingObjects:Set<AnyHashable>)*/
    /*Foundation.(file).NSObject.willChangeValueForKey(_:String,withSetMutation:NSKeyValueSetMutationKind,usingObjects:Set<AnyHashable>)*/
    NSObject.willChangeValueForKeyWithSetMutationUsingObjects = function ($info, key, mutationKind, objects) {
        throw 'unsupported method Foundation.(file).NSObject.willChangeValueForKey(_:String,withSetMutation:NSKeyValueSetMutationKind,usingObjects:Set<AnyHashable>) in ' + this.constructor.name;
    };
    /*Foundation.(file).NSObject.willChangeValueForKey(_:String,withSetMutation:NSKeyValueSetMutationKind,usingObjects:Set<AnyHashable>)*/
    /*Foundation.(file).NSObject.willChangeValueForKey(_:String,withSetMutation:NSKeyValueSetMutationKind,usingObjects:Set<AnyHashable>)*/
    NSObject.prototype.willChangeValueForKeyWithSetMutationUsingObjects = function ($info, key, mutationKind, objects) {
        throw 'unsupported method Foundation.(file).NSObject.willChangeValueForKey(_:String,withSetMutation:NSKeyValueSetMutationKind,usingObjects:Set<AnyHashable>) in ' + this.constructor.name;
    };
    /*Foundation.(file).NSObject.didChangeValue(forKey:String,withSetMutation:NSKeyValueSetMutationKind,using:Set<AnyHashable>)*/
    /*Foundation.(file).NSObject.didChangeValue(forKey:String,withSetMutation:NSKeyValueSetMutationKind,using:Set<AnyHashable>)*/
    NSObject.didChangeValueForKeyWithSetMutationUsing = function ($info, key, mutationKind, objects) {
        throw 'unsupported method Foundation.(file).NSObject.didChangeValue(forKey:String,withSetMutation:NSKeyValueSetMutationKind,using:Set<AnyHashable>) in ' + this.constructor.name;
    };
    /*Foundation.(file).NSObject.didChangeValue(forKey:String,withSetMutation:NSKeyValueSetMutationKind,using:Set<AnyHashable>)*/
    /*Foundation.(file).NSObject.didChangeValue(forKey:String,withSetMutation:NSKeyValueSetMutationKind,using:Set<AnyHashable>)*/
    NSObject.prototype.didChangeValueForKeyWithSetMutationUsing = function ($info, key, mutationKind, objects) {
        throw 'unsupported method Foundation.(file).NSObject.didChangeValue(forKey:String,withSetMutation:NSKeyValueSetMutationKind,using:Set<AnyHashable>) in ' + this.constructor.name;
    };
    /*Foundation.(file).NSObject.didChangeValueForKey(_:String,withSetMutation:NSKeyValueSetMutationKind,usingObjects:Set<AnyHashable>)*/
    /*Foundation.(file).NSObject.didChangeValueForKey(_:String,withSetMutation:NSKeyValueSetMutationKind,usingObjects:Set<AnyHashable>)*/
    NSObject.didChangeValueForKeyWithSetMutationUsingObjects = function ($info, key, mutationKind, objects) {
        throw 'unsupported method Foundation.(file).NSObject.didChangeValueForKey(_:String,withSetMutation:NSKeyValueSetMutationKind,usingObjects:Set<AnyHashable>) in ' + this.constructor.name;
    };
    /*Foundation.(file).NSObject.didChangeValueForKey(_:String,withSetMutation:NSKeyValueSetMutationKind,usingObjects:Set<AnyHashable>)*/
    /*Foundation.(file).NSObject.didChangeValueForKey(_:String,withSetMutation:NSKeyValueSetMutationKind,usingObjects:Set<AnyHashable>)*/
    NSObject.prototype.didChangeValueForKeyWithSetMutationUsingObjects = function ($info, key, mutationKind, objects) {
        throw 'unsupported method Foundation.(file).NSObject.didChangeValueForKey(_:String,withSetMutation:NSKeyValueSetMutationKind,usingObjects:Set<AnyHashable>) in ' + this.constructor.name;
    };
    /*Foundation.(file).NSObject.addObserver(_:NSObject,forKeyPath:String,options:NSKeyValueObservingOptions,context:UnsafeMutableRawPointer?)*/
    /*Foundation.(file).NSObject.addObserver(_:NSObject,forKeyPath:String,options:NSKeyValueObservingOptions,context:UnsafeMutableRawPointer?)*/
    NSObject.addObserverForKeyPathOptionsContext = function ($info, observer, keyPath, options, context) {
        throw 'unsupported method Foundation.(file).NSObject.addObserver(_:NSObject,forKeyPath:String,options:NSKeyValueObservingOptions,context:UnsafeMutableRawPointer?) in ' + this.constructor.name;
    };
    /*Foundation.(file).NSObject.addObserver(_:NSObject,forKeyPath:String,options:NSKeyValueObservingOptions,context:UnsafeMutableRawPointer?)*/
    /*Foundation.(file).NSObject.addObserver(_:NSObject,forKeyPath:String,options:NSKeyValueObservingOptions,context:UnsafeMutableRawPointer?)*/
    NSObject.prototype.addObserverForKeyPathOptionsContext = function ($info, observer, keyPath, options, context) {
        throw 'unsupported method Foundation.(file).NSObject.addObserver(_:NSObject,forKeyPath:String,options:NSKeyValueObservingOptions,context:UnsafeMutableRawPointer?) in ' + this.constructor.name;
    };
    /*Foundation.(file).NSObject.removeObserver(_:NSObject,forKeyPath:String,context:UnsafeMutableRawPointer?)*/
    /*Foundation.(file).NSObject.removeObserver(_:NSObject,forKeyPath:String,context:UnsafeMutableRawPointer?)*/
    NSObject.removeObserverForKeyPathContext = function ($info, observer, keyPath, context) {
        throw 'unsupported method Foundation.(file).NSObject.removeObserver(_:NSObject,forKeyPath:String,context:UnsafeMutableRawPointer?) in ' + this.constructor.name;
    };
    /*Foundation.(file).NSObject.removeObserver(_:NSObject,forKeyPath:String,context:UnsafeMutableRawPointer?)*/
    /*Foundation.(file).NSObject.removeObserver(_:NSObject,forKeyPath:String,context:UnsafeMutableRawPointer?)*/
    NSObject.prototype.removeObserverForKeyPathContext = function ($info, observer, keyPath, context) {
        throw 'unsupported method Foundation.(file).NSObject.removeObserver(_:NSObject,forKeyPath:String,context:UnsafeMutableRawPointer?) in ' + this.constructor.name;
    };
    /*Foundation.(file).NSObject.removeObserver(_:NSObject,forKeyPath:String)*/
    /*Foundation.(file).NSObject.removeObserver(_:NSObject,forKeyPath:String)*/
    NSObject.removeObserverForKeyPath = function ($info, observer, keyPath) {
        throw 'unsupported method Foundation.(file).NSObject.removeObserver(_:NSObject,forKeyPath:String) in ' + this.constructor.name;
    };
    /*Foundation.(file).NSObject.removeObserver(_:NSObject,forKeyPath:String)*/
    /*Foundation.(file).NSObject.removeObserver(_:NSObject,forKeyPath:String)*/
    NSObject.prototype.removeObserverForKeyPath = function ($info, observer, keyPath) {
        throw 'unsupported method Foundation.(file).NSObject.removeObserver(_:NSObject,forKeyPath:String) in ' + this.constructor.name;
    };
    /*Foundation.(file).NSObject.observeValue(forKeyPath:String?,of:Any?,change:[NSKeyValueChangeKey : Any]?,context:UnsafeMutableRawPointer?)*/
    /*Foundation.(file).NSObject.observeValue(forKeyPath:String?,of:Any?,change:[NSKeyValueChangeKey : Any]?,context:UnsafeMutableRawPointer?)*/
    NSObject.observeValueForKeyPathOfChangeContext = function ($info, keyPath, object, change, context) {
        throw 'unsupported method Foundation.(file).NSObject.observeValue(forKeyPath:String?,of:Any?,change:[NSKeyValueChangeKey : Any]?,context:UnsafeMutableRawPointer?) in ' + this.constructor.name;
    };
    /*Foundation.(file).NSObject.observeValue(forKeyPath:String?,of:Any?,change:[NSKeyValueChangeKey : Any]?,context:UnsafeMutableRawPointer?)*/
    /*Foundation.(file).NSObject.observeValue(forKeyPath:String?,of:Any?,change:[NSKeyValueChangeKey : Any]?,context:UnsafeMutableRawPointer?)*/
    NSObject.prototype.observeValueForKeyPathOfChangeContext = function ($info, keyPath, object, change, context) {
        throw 'unsupported method Foundation.(file).NSObject.observeValue(forKeyPath:String?,of:Any?,change:[NSKeyValueChangeKey : Any]?,context:UnsafeMutableRawPointer?) in ' + this.constructor.name;
    };
    /*Foundation.(file).NSObject.observeValueForKeyPath(_:String?,ofObject:Any?,change:[NSKeyValueChangeKey : Any]?,context:UnsafeMutableRawPointer?)*/
    /*Foundation.(file).NSObject.observeValueForKeyPath(_:String?,ofObject:Any?,change:[NSKeyValueChangeKey : Any]?,context:UnsafeMutableRawPointer?)*/
    NSObject.observeValueForKeyPathOfObjectChangeContext = function ($info, keyPath, object, change, context) {
        throw 'unsupported method Foundation.(file).NSObject.observeValueForKeyPath(_:String?,ofObject:Any?,change:[NSKeyValueChangeKey : Any]?,context:UnsafeMutableRawPointer?) in ' + this.constructor.name;
    };
    /*Foundation.(file).NSObject.observeValueForKeyPath(_:String?,ofObject:Any?,change:[NSKeyValueChangeKey : Any]?,context:UnsafeMutableRawPointer?)*/
    /*Foundation.(file).NSObject.observeValueForKeyPath(_:String?,ofObject:Any?,change:[NSKeyValueChangeKey : Any]?,context:UnsafeMutableRawPointer?)*/
    NSObject.prototype.observeValueForKeyPathOfObjectChangeContext = function ($info, keyPath, object, change, context) {
        throw 'unsupported method Foundation.(file).NSObject.observeValueForKeyPath(_:String?,ofObject:Any?,change:[NSKeyValueChangeKey : Any]?,context:UnsafeMutableRawPointer?) in ' + this.constructor.name;
    };
    /*Foundation.(file).NSObject.useStoredAccessor()*/
    /*Foundation.(file).NSObject.useStoredAccessor()*/
    NSObject.useStoredAccessor = function ($info) {
        throw 'unsupported method Foundation.(file).NSObject.useStoredAccessor() in ' + this.constructor.name;
    };
    /*Foundation.(file).NSObject.storedValue(forKey:String)*/
    /*Foundation.(file).NSObject.storedValue(forKey:String)*/
    NSObject.storedValueForKey = function ($info, key) {
        throw 'unsupported method Foundation.(file).NSObject.storedValue(forKey:String) in ' + this.constructor.name;
    };
    /*Foundation.(file).NSObject.storedValue(forKey:String)*/
    /*Foundation.(file).NSObject.storedValue(forKey:String)*/
    NSObject.prototype.storedValueForKey = function ($info, key) {
        throw 'unsupported method Foundation.(file).NSObject.storedValue(forKey:String) in ' + this.constructor.name;
    };
    /*Foundation.(file).NSObject.storedValueForKey(_:String)*/
    /*Foundation.(file).NSObject.storedValueForKey(_:String)*/
    NSObject.storedValueForKey = function ($info, key) {
        throw 'unsupported method Foundation.(file).NSObject.storedValueForKey(_:String) in ' + this.constructor.name;
    };
    /*Foundation.(file).NSObject.storedValueForKey(_:String)*/
    /*Foundation.(file).NSObject.storedValueForKey(_:String)*/
    NSObject.prototype.storedValueForKey = function ($info, key) {
        throw 'unsupported method Foundation.(file).NSObject.storedValueForKey(_:String) in ' + this.constructor.name;
    };
    /*Foundation.(file).NSObject.takeStoredValue(_:Any?,forKey:String)*/
    /*Foundation.(file).NSObject.takeStoredValue(_:Any?,forKey:String)*/
    NSObject.takeStoredValueForKey = function ($info, value, key) {
        throw 'unsupported method Foundation.(file).NSObject.takeStoredValue(_:Any?,forKey:String) in ' + this.constructor.name;
    };
    /*Foundation.(file).NSObject.takeStoredValue(_:Any?,forKey:String)*/
    /*Foundation.(file).NSObject.takeStoredValue(_:Any?,forKey:String)*/
    NSObject.prototype.takeStoredValueForKey = function ($info, value, key) {
        throw 'unsupported method Foundation.(file).NSObject.takeStoredValue(_:Any?,forKey:String) in ' + this.constructor.name;
    };
    /*Foundation.(file).NSObject.takeValue(_:Any?,forKey:String)*/
    /*Foundation.(file).NSObject.takeValue(_:Any?,forKey:String)*/
    NSObject.takeValueForKey = function ($info, value, key) {
        throw 'unsupported method Foundation.(file).NSObject.takeValue(_:Any?,forKey:String) in ' + this.constructor.name;
    };
    /*Foundation.(file).NSObject.takeValue(_:Any?,forKey:String)*/
    /*Foundation.(file).NSObject.takeValue(_:Any?,forKey:String)*/
    NSObject.prototype.takeValueForKey = function ($info, value, key) {
        throw 'unsupported method Foundation.(file).NSObject.takeValue(_:Any?,forKey:String) in ' + this.constructor.name;
    };
    /*Foundation.(file).NSObject.takeValue(_:Any?,forKeyPath:String)*/
    /*Foundation.(file).NSObject.takeValue(_:Any?,forKeyPath:String)*/
    NSObject.takeValueForKeyPath = function ($info, value, keyPath) {
        throw 'unsupported method Foundation.(file).NSObject.takeValue(_:Any?,forKeyPath:String) in ' + this.constructor.name;
    };
    /*Foundation.(file).NSObject.takeValue(_:Any?,forKeyPath:String)*/
    /*Foundation.(file).NSObject.takeValue(_:Any?,forKeyPath:String)*/
    NSObject.prototype.takeValueForKeyPath = function ($info, value, keyPath) {
        throw 'unsupported method Foundation.(file).NSObject.takeValue(_:Any?,forKeyPath:String) in ' + this.constructor.name;
    };
    /*Foundation.(file).NSObject.handleQuery(withUnboundKey:String)*/
    /*Foundation.(file).NSObject.handleQuery(withUnboundKey:String)*/
    NSObject.handleQueryWithUnboundKey = function ($info, key) {
        throw 'unsupported method Foundation.(file).NSObject.handleQuery(withUnboundKey:String) in ' + this.constructor.name;
    };
    /*Foundation.(file).NSObject.handleQuery(withUnboundKey:String)*/
    /*Foundation.(file).NSObject.handleQuery(withUnboundKey:String)*/
    NSObject.prototype.handleQueryWithUnboundKey = function ($info, key) {
        throw 'unsupported method Foundation.(file).NSObject.handleQuery(withUnboundKey:String) in ' + this.constructor.name;
    };
    /*Foundation.(file).NSObject.handleQueryWithUnboundKey(_:String)*/
    /*Foundation.(file).NSObject.handleQueryWithUnboundKey(_:String)*/
    NSObject.handleQueryWithUnboundKey = function ($info, key) {
        throw 'unsupported method Foundation.(file).NSObject.handleQueryWithUnboundKey(_:String) in ' + this.constructor.name;
    };
    /*Foundation.(file).NSObject.handleQueryWithUnboundKey(_:String)*/
    /*Foundation.(file).NSObject.handleQueryWithUnboundKey(_:String)*/
    NSObject.prototype.handleQueryWithUnboundKey = function ($info, key) {
        throw 'unsupported method Foundation.(file).NSObject.handleQueryWithUnboundKey(_:String) in ' + this.constructor.name;
    };
    /*Foundation.(file).NSObject.handleTakeValue(_:Any?,forUnboundKey:String)*/
    /*Foundation.(file).NSObject.handleTakeValue(_:Any?,forUnboundKey:String)*/
    NSObject.handleTakeValueForUnboundKey = function ($info, value, key) {
        throw 'unsupported method Foundation.(file).NSObject.handleTakeValue(_:Any?,forUnboundKey:String) in ' + this.constructor.name;
    };
    /*Foundation.(file).NSObject.handleTakeValue(_:Any?,forUnboundKey:String)*/
    /*Foundation.(file).NSObject.handleTakeValue(_:Any?,forUnboundKey:String)*/
    NSObject.prototype.handleTakeValueForUnboundKey = function ($info, value, key) {
        throw 'unsupported method Foundation.(file).NSObject.handleTakeValue(_:Any?,forUnboundKey:String) in ' + this.constructor.name;
    };
    /*Foundation.(file).NSObject.unableToSetNil(forKey:String)*/
    /*Foundation.(file).NSObject.unableToSetNil(forKey:String)*/
    NSObject.unableToSetNilForKey = function ($info, key) {
        throw 'unsupported method Foundation.(file).NSObject.unableToSetNil(forKey:String) in ' + this.constructor.name;
    };
    /*Foundation.(file).NSObject.unableToSetNil(forKey:String)*/
    /*Foundation.(file).NSObject.unableToSetNil(forKey:String)*/
    NSObject.prototype.unableToSetNilForKey = function ($info, key) {
        throw 'unsupported method Foundation.(file).NSObject.unableToSetNil(forKey:String) in ' + this.constructor.name;
    };
    /*Foundation.(file).NSObject.unableToSetNilForKey(_:String)*/
    /*Foundation.(file).NSObject.unableToSetNilForKey(_:String)*/
    NSObject.unableToSetNilForKey = function ($info, key) {
        throw 'unsupported method Foundation.(file).NSObject.unableToSetNilForKey(_:String) in ' + this.constructor.name;
    };
    /*Foundation.(file).NSObject.unableToSetNilForKey(_:String)*/
    /*Foundation.(file).NSObject.unableToSetNilForKey(_:String)*/
    NSObject.prototype.unableToSetNilForKey = function ($info, key) {
        throw 'unsupported method Foundation.(file).NSObject.unableToSetNilForKey(_:String) in ' + this.constructor.name;
    };
    /*Foundation.(file).NSObject.values(forKeys:[Any])*/
    /*Foundation.(file).NSObject.values(forKeys:[Any])*/
    NSObject.valuesForKeys = function ($info, keys) {
        throw 'unsupported method Foundation.(file).NSObject.values(forKeys:[Any]) in ' + this.constructor.name;
    };
    /*Foundation.(file).NSObject.values(forKeys:[Any])*/
    /*Foundation.(file).NSObject.values(forKeys:[Any])*/
    NSObject.prototype.valuesForKeys = function ($info, keys) {
        throw 'unsupported method Foundation.(file).NSObject.values(forKeys:[Any]) in ' + this.constructor.name;
    };
    /*Foundation.(file).NSObject.valuesForKeys(_:[Any])*/
    /*Foundation.(file).NSObject.valuesForKeys(_:[Any])*/
    NSObject.valuesForKeys = function ($info, keys) {
        throw 'unsupported method Foundation.(file).NSObject.valuesForKeys(_:[Any]) in ' + this.constructor.name;
    };
    /*Foundation.(file).NSObject.valuesForKeys(_:[Any])*/
    /*Foundation.(file).NSObject.valuesForKeys(_:[Any])*/
    NSObject.prototype.valuesForKeys = function ($info, keys) {
        throw 'unsupported method Foundation.(file).NSObject.valuesForKeys(_:[Any]) in ' + this.constructor.name;
    };
    /*Foundation.(file).NSObject.takeValues(from:[AnyHashable : Any])*/
    /*Foundation.(file).NSObject.takeValues(from:[AnyHashable : Any])*/
    NSObject.takeValuesFrom = function ($info, properties) {
        throw 'unsupported method Foundation.(file).NSObject.takeValues(from:[AnyHashable : Any]) in ' + this.constructor.name;
    };
    /*Foundation.(file).NSObject.takeValues(from:[AnyHashable : Any])*/
    /*Foundation.(file).NSObject.takeValues(from:[AnyHashable : Any])*/
    NSObject.prototype.takeValuesFrom = function ($info, properties) {
        throw 'unsupported method Foundation.(file).NSObject.takeValues(from:[AnyHashable : Any]) in ' + this.constructor.name;
    };
    /*Foundation.(file).NSObject.takeValuesFromDictionary(_:[AnyHashable : Any])*/
    /*Foundation.(file).NSObject.takeValuesFromDictionary(_:[AnyHashable : Any])*/
    NSObject.takeValuesFromDictionary = function ($info, properties) {
        throw 'unsupported method Foundation.(file).NSObject.takeValuesFromDictionary(_:[AnyHashable : Any]) in ' + this.constructor.name;
    };
    /*Foundation.(file).NSObject.takeValuesFromDictionary(_:[AnyHashable : Any])*/
    /*Foundation.(file).NSObject.takeValuesFromDictionary(_:[AnyHashable : Any])*/
    NSObject.prototype.takeValuesFromDictionary = function ($info, properties) {
        throw 'unsupported method Foundation.(file).NSObject.takeValuesFromDictionary(_:[AnyHashable : Any]) in ' + this.constructor.name;
    };
    /*Foundation.(file).NSObject.value(forKey:String)*/
    /*Foundation.(file).NSObject.value(forKey:String)*/
    NSObject.valueForKey = function ($info, key) {
        throw 'unsupported method Foundation.(file).NSObject.value(forKey:String) in ' + this.constructor.name;
    };
    /*Foundation.(file).NSObject.value(forKey:String)*/
    /*Foundation.(file).NSObject.value(forKey:String)*/
    NSObject.prototype.valueForKey = function ($info, key) {
        throw 'unsupported method Foundation.(file).NSObject.value(forKey:String) in ' + this.constructor.name;
    };
    /*Foundation.(file).NSObject.valueForKey(_:String)*/
    /*Foundation.(file).NSObject.valueForKey(_:String)*/
    NSObject.valueForKey = function ($info, key) {
        throw 'unsupported method Foundation.(file).NSObject.valueForKey(_:String) in ' + this.constructor.name;
    };
    /*Foundation.(file).NSObject.valueForKey(_:String)*/
    /*Foundation.(file).NSObject.valueForKey(_:String)*/
    NSObject.prototype.valueForKey = function ($info, key) {
        throw 'unsupported method Foundation.(file).NSObject.valueForKey(_:String) in ' + this.constructor.name;
    };
    /*Foundation.(file).NSObject.setValue(_:Any?,forKey:String)*/
    /*Foundation.(file).NSObject.setValue(_:Any?,forKey:String)*/
    NSObject.setValueForKey = function ($info, value, key) {
        throw 'unsupported method Foundation.(file).NSObject.setValue(_:Any?,forKey:String) in ' + this.constructor.name;
    };
    /*Foundation.(file).NSObject.setValue(_:Any?,forKey:String)*/
    /*Foundation.(file).NSObject.setValue(_:Any?,forKey:String)*/
    NSObject.prototype.setValueForKey = function ($info, value, key) {
        throw 'unsupported method Foundation.(file).NSObject.setValue(_:Any?,forKey:String) in ' + this.constructor.name;
    };
    /*Foundation.(file).NSObject.validateValue(_:AutoreleasingUnsafeMutablePointer<AnyObject?>,forKey:String)*/
    /*Foundation.(file).NSObject.validateValue(_:AutoreleasingUnsafeMutablePointer<AnyObject?>,forKey:String)*/
    NSObject.validateValueForKey = function ($info, ioValue, inKey) {
        throw 'unsupported method Foundation.(file).NSObject.validateValue(_:AutoreleasingUnsafeMutablePointer<AnyObject?>,forKey:String) in ' + this.constructor.name;
    };
    /*Foundation.(file).NSObject.validateValue(_:AutoreleasingUnsafeMutablePointer<AnyObject?>,forKey:String)*/
    /*Foundation.(file).NSObject.validateValue(_:AutoreleasingUnsafeMutablePointer<AnyObject?>,forKey:String)*/
    NSObject.prototype.validateValueForKey = function ($info, ioValue, inKey) {
        throw 'unsupported method Foundation.(file).NSObject.validateValue(_:AutoreleasingUnsafeMutablePointer<AnyObject?>,forKey:String) in ' + this.constructor.name;
    };
    /*Foundation.(file).NSObject.mutableArrayValue(forKey:String)*/
    /*Foundation.(file).NSObject.mutableArrayValue(forKey:String)*/
    NSObject.mutableArrayValueForKey = function ($info, key) {
        throw 'unsupported method Foundation.(file).NSObject.mutableArrayValue(forKey:String) in ' + this.constructor.name;
    };
    /*Foundation.(file).NSObject.mutableArrayValue(forKey:String)*/
    /*Foundation.(file).NSObject.mutableArrayValue(forKey:String)*/
    NSObject.prototype.mutableArrayValueForKey = function ($info, key) {
        throw 'unsupported method Foundation.(file).NSObject.mutableArrayValue(forKey:String) in ' + this.constructor.name;
    };
    /*Foundation.(file).NSObject.mutableArrayValueForKey(_:String)*/
    /*Foundation.(file).NSObject.mutableArrayValueForKey(_:String)*/
    NSObject.mutableArrayValueForKey = function ($info, key) {
        throw 'unsupported method Foundation.(file).NSObject.mutableArrayValueForKey(_:String) in ' + this.constructor.name;
    };
    /*Foundation.(file).NSObject.mutableArrayValueForKey(_:String)*/
    /*Foundation.(file).NSObject.mutableArrayValueForKey(_:String)*/
    NSObject.prototype.mutableArrayValueForKey = function ($info, key) {
        throw 'unsupported method Foundation.(file).NSObject.mutableArrayValueForKey(_:String) in ' + this.constructor.name;
    };
    /*Foundation.(file).NSObject.mutableOrderedSetValue(forKey:String)*/
    /*Foundation.(file).NSObject.mutableOrderedSetValue(forKey:String)*/
    NSObject.mutableOrderedSetValueForKey = function ($info, key) {
        throw 'unsupported method Foundation.(file).NSObject.mutableOrderedSetValue(forKey:String) in ' + this.constructor.name;
    };
    /*Foundation.(file).NSObject.mutableOrderedSetValue(forKey:String)*/
    /*Foundation.(file).NSObject.mutableOrderedSetValue(forKey:String)*/
    NSObject.prototype.mutableOrderedSetValueForKey = function ($info, key) {
        throw 'unsupported method Foundation.(file).NSObject.mutableOrderedSetValue(forKey:String) in ' + this.constructor.name;
    };
    /*Foundation.(file).NSObject.mutableOrderedSetValueForKey(_:String)*/
    /*Foundation.(file).NSObject.mutableOrderedSetValueForKey(_:String)*/
    NSObject.mutableOrderedSetValueForKey = function ($info, key) {
        throw 'unsupported method Foundation.(file).NSObject.mutableOrderedSetValueForKey(_:String) in ' + this.constructor.name;
    };
    /*Foundation.(file).NSObject.mutableOrderedSetValueForKey(_:String)*/
    /*Foundation.(file).NSObject.mutableOrderedSetValueForKey(_:String)*/
    NSObject.prototype.mutableOrderedSetValueForKey = function ($info, key) {
        throw 'unsupported method Foundation.(file).NSObject.mutableOrderedSetValueForKey(_:String) in ' + this.constructor.name;
    };
    /*Foundation.(file).NSObject.mutableSetValue(forKey:String)*/
    /*Foundation.(file).NSObject.mutableSetValue(forKey:String)*/
    NSObject.mutableSetValueForKey = function ($info, key) {
        throw 'unsupported method Foundation.(file).NSObject.mutableSetValue(forKey:String) in ' + this.constructor.name;
    };
    /*Foundation.(file).NSObject.mutableSetValue(forKey:String)*/
    /*Foundation.(file).NSObject.mutableSetValue(forKey:String)*/
    NSObject.prototype.mutableSetValueForKey = function ($info, key) {
        throw 'unsupported method Foundation.(file).NSObject.mutableSetValue(forKey:String) in ' + this.constructor.name;
    };
    /*Foundation.(file).NSObject.mutableSetValueForKey(_:String)*/
    /*Foundation.(file).NSObject.mutableSetValueForKey(_:String)*/
    NSObject.mutableSetValueForKey = function ($info, key) {
        throw 'unsupported method Foundation.(file).NSObject.mutableSetValueForKey(_:String) in ' + this.constructor.name;
    };
    /*Foundation.(file).NSObject.mutableSetValueForKey(_:String)*/
    /*Foundation.(file).NSObject.mutableSetValueForKey(_:String)*/
    NSObject.prototype.mutableSetValueForKey = function ($info, key) {
        throw 'unsupported method Foundation.(file).NSObject.mutableSetValueForKey(_:String) in ' + this.constructor.name;
    };
    /*Foundation.(file).NSObject.value(forKeyPath:String)*/
    /*Foundation.(file).NSObject.value(forKeyPath:String)*/
    NSObject.valueForKeyPath = function ($info, keyPath) {
        throw 'unsupported method Foundation.(file).NSObject.value(forKeyPath:String) in ' + this.constructor.name;
    };
    /*Foundation.(file).NSObject.value(forKeyPath:String)*/
    /*Foundation.(file).NSObject.value(forKeyPath:String)*/
    NSObject.prototype.valueForKeyPath = function ($info, keyPath) {
        throw 'unsupported method Foundation.(file).NSObject.value(forKeyPath:String) in ' + this.constructor.name;
    };
    /*Foundation.(file).NSObject.valueForKeyPath(_:String)*/
    /*Foundation.(file).NSObject.valueForKeyPath(_:String)*/
    NSObject.valueForKeyPath = function ($info, keyPath) {
        throw 'unsupported method Foundation.(file).NSObject.valueForKeyPath(_:String) in ' + this.constructor.name;
    };
    /*Foundation.(file).NSObject.valueForKeyPath(_:String)*/
    /*Foundation.(file).NSObject.valueForKeyPath(_:String)*/
    NSObject.prototype.valueForKeyPath = function ($info, keyPath) {
        throw 'unsupported method Foundation.(file).NSObject.valueForKeyPath(_:String) in ' + this.constructor.name;
    };
    /*Foundation.(file).NSObject.setValue(_:Any?,forKeyPath:String)*/
    /*Foundation.(file).NSObject.setValue(_:Any?,forKeyPath:String)*/
    NSObject.setValueForKeyPath = function ($info, value, keyPath) {
        throw 'unsupported method Foundation.(file).NSObject.setValue(_:Any?,forKeyPath:String) in ' + this.constructor.name;
    };
    /*Foundation.(file).NSObject.setValue(_:Any?,forKeyPath:String)*/
    /*Foundation.(file).NSObject.setValue(_:Any?,forKeyPath:String)*/
    NSObject.prototype.setValueForKeyPath = function ($info, value, keyPath) {
        throw 'unsupported method Foundation.(file).NSObject.setValue(_:Any?,forKeyPath:String) in ' + this.constructor.name;
    };
    /*Foundation.(file).NSObject.validateValue(_:AutoreleasingUnsafeMutablePointer<AnyObject?>,forKeyPath:String)*/
    /*Foundation.(file).NSObject.validateValue(_:AutoreleasingUnsafeMutablePointer<AnyObject?>,forKeyPath:String)*/
    NSObject.validateValueForKeyPath = function ($info, ioValue, inKeyPath) {
        throw 'unsupported method Foundation.(file).NSObject.validateValue(_:AutoreleasingUnsafeMutablePointer<AnyObject?>,forKeyPath:String) in ' + this.constructor.name;
    };
    /*Foundation.(file).NSObject.validateValue(_:AutoreleasingUnsafeMutablePointer<AnyObject?>,forKeyPath:String)*/
    /*Foundation.(file).NSObject.validateValue(_:AutoreleasingUnsafeMutablePointer<AnyObject?>,forKeyPath:String)*/
    NSObject.prototype.validateValueForKeyPath = function ($info, ioValue, inKeyPath) {
        throw 'unsupported method Foundation.(file).NSObject.validateValue(_:AutoreleasingUnsafeMutablePointer<AnyObject?>,forKeyPath:String) in ' + this.constructor.name;
    };
    /*Foundation.(file).NSObject.mutableArrayValue(forKeyPath:String)*/
    /*Foundation.(file).NSObject.mutableArrayValue(forKeyPath:String)*/
    NSObject.mutableArrayValueForKeyPath = function ($info, keyPath) {
        throw 'unsupported method Foundation.(file).NSObject.mutableArrayValue(forKeyPath:String) in ' + this.constructor.name;
    };
    /*Foundation.(file).NSObject.mutableArrayValue(forKeyPath:String)*/
    /*Foundation.(file).NSObject.mutableArrayValue(forKeyPath:String)*/
    NSObject.prototype.mutableArrayValueForKeyPath = function ($info, keyPath) {
        throw 'unsupported method Foundation.(file).NSObject.mutableArrayValue(forKeyPath:String) in ' + this.constructor.name;
    };
    /*Foundation.(file).NSObject.mutableArrayValueForKeyPath(_:String)*/
    /*Foundation.(file).NSObject.mutableArrayValueForKeyPath(_:String)*/
    NSObject.mutableArrayValueForKeyPath = function ($info, keyPath) {
        throw 'unsupported method Foundation.(file).NSObject.mutableArrayValueForKeyPath(_:String) in ' + this.constructor.name;
    };
    /*Foundation.(file).NSObject.mutableArrayValueForKeyPath(_:String)*/
    /*Foundation.(file).NSObject.mutableArrayValueForKeyPath(_:String)*/
    NSObject.prototype.mutableArrayValueForKeyPath = function ($info, keyPath) {
        throw 'unsupported method Foundation.(file).NSObject.mutableArrayValueForKeyPath(_:String) in ' + this.constructor.name;
    };
    /*Foundation.(file).NSObject.mutableOrderedSetValue(forKeyPath:String)*/
    /*Foundation.(file).NSObject.mutableOrderedSetValue(forKeyPath:String)*/
    NSObject.mutableOrderedSetValueForKeyPath = function ($info, keyPath) {
        throw 'unsupported method Foundation.(file).NSObject.mutableOrderedSetValue(forKeyPath:String) in ' + this.constructor.name;
    };
    /*Foundation.(file).NSObject.mutableOrderedSetValue(forKeyPath:String)*/
    /*Foundation.(file).NSObject.mutableOrderedSetValue(forKeyPath:String)*/
    NSObject.prototype.mutableOrderedSetValueForKeyPath = function ($info, keyPath) {
        throw 'unsupported method Foundation.(file).NSObject.mutableOrderedSetValue(forKeyPath:String) in ' + this.constructor.name;
    };
    /*Foundation.(file).NSObject.mutableOrderedSetValueForKeyPath(_:String)*/
    /*Foundation.(file).NSObject.mutableOrderedSetValueForKeyPath(_:String)*/
    NSObject.mutableOrderedSetValueForKeyPath = function ($info, keyPath) {
        throw 'unsupported method Foundation.(file).NSObject.mutableOrderedSetValueForKeyPath(_:String) in ' + this.constructor.name;
    };
    /*Foundation.(file).NSObject.mutableOrderedSetValueForKeyPath(_:String)*/
    /*Foundation.(file).NSObject.mutableOrderedSetValueForKeyPath(_:String)*/
    NSObject.prototype.mutableOrderedSetValueForKeyPath = function ($info, keyPath) {
        throw 'unsupported method Foundation.(file).NSObject.mutableOrderedSetValueForKeyPath(_:String) in ' + this.constructor.name;
    };
    /*Foundation.(file).NSObject.mutableSetValue(forKeyPath:String)*/
    /*Foundation.(file).NSObject.mutableSetValue(forKeyPath:String)*/
    NSObject.mutableSetValueForKeyPath = function ($info, keyPath) {
        throw 'unsupported method Foundation.(file).NSObject.mutableSetValue(forKeyPath:String) in ' + this.constructor.name;
    };
    /*Foundation.(file).NSObject.mutableSetValue(forKeyPath:String)*/
    /*Foundation.(file).NSObject.mutableSetValue(forKeyPath:String)*/
    NSObject.prototype.mutableSetValueForKeyPath = function ($info, keyPath) {
        throw 'unsupported method Foundation.(file).NSObject.mutableSetValue(forKeyPath:String) in ' + this.constructor.name;
    };
    /*Foundation.(file).NSObject.mutableSetValueForKeyPath(_:String)*/
    /*Foundation.(file).NSObject.mutableSetValueForKeyPath(_:String)*/
    NSObject.mutableSetValueForKeyPath = function ($info, keyPath) {
        throw 'unsupported method Foundation.(file).NSObject.mutableSetValueForKeyPath(_:String) in ' + this.constructor.name;
    };
    /*Foundation.(file).NSObject.mutableSetValueForKeyPath(_:String)*/
    /*Foundation.(file).NSObject.mutableSetValueForKeyPath(_:String)*/
    NSObject.prototype.mutableSetValueForKeyPath = function ($info, keyPath) {
        throw 'unsupported method Foundation.(file).NSObject.mutableSetValueForKeyPath(_:String) in ' + this.constructor.name;
    };
    /*Foundation.(file).NSObject.value(forUndefinedKey:String)*/
    /*Foundation.(file).NSObject.value(forUndefinedKey:String)*/
    NSObject.valueForUndefinedKey = function ($info, key) {
        throw 'unsupported method Foundation.(file).NSObject.value(forUndefinedKey:String) in ' + this.constructor.name;
    };
    /*Foundation.(file).NSObject.value(forUndefinedKey:String)*/
    /*Foundation.(file).NSObject.value(forUndefinedKey:String)*/
    NSObject.prototype.valueForUndefinedKey = function ($info, key) {
        throw 'unsupported method Foundation.(file).NSObject.value(forUndefinedKey:String) in ' + this.constructor.name;
    };
    /*Foundation.(file).NSObject.valueForUndefinedKey(_:String)*/
    /*Foundation.(file).NSObject.valueForUndefinedKey(_:String)*/
    NSObject.valueForUndefinedKey = function ($info, key) {
        throw 'unsupported method Foundation.(file).NSObject.valueForUndefinedKey(_:String) in ' + this.constructor.name;
    };
    /*Foundation.(file).NSObject.valueForUndefinedKey(_:String)*/
    /*Foundation.(file).NSObject.valueForUndefinedKey(_:String)*/
    NSObject.prototype.valueForUndefinedKey = function ($info, key) {
        throw 'unsupported method Foundation.(file).NSObject.valueForUndefinedKey(_:String) in ' + this.constructor.name;
    };
    /*Foundation.(file).NSObject.setValue(_:Any?,forUndefinedKey:String)*/
    /*Foundation.(file).NSObject.setValue(_:Any?,forUndefinedKey:String)*/
    NSObject.setValueForUndefinedKey = function ($info, value, key) {
        throw 'unsupported method Foundation.(file).NSObject.setValue(_:Any?,forUndefinedKey:String) in ' + this.constructor.name;
    };
    /*Foundation.(file).NSObject.setValue(_:Any?,forUndefinedKey:String)*/
    /*Foundation.(file).NSObject.setValue(_:Any?,forUndefinedKey:String)*/
    NSObject.prototype.setValueForUndefinedKey = function ($info, value, key) {
        throw 'unsupported method Foundation.(file).NSObject.setValue(_:Any?,forUndefinedKey:String) in ' + this.constructor.name;
    };
    /*Foundation.(file).NSObject.setNilValueForKey(_:String)*/
    /*Foundation.(file).NSObject.setNilValueForKey(_:String)*/
    NSObject.setNilValueForKey = function ($info, key) {
        throw 'unsupported method Foundation.(file).NSObject.setNilValueForKey(_:String) in ' + this.constructor.name;
    };
    /*Foundation.(file).NSObject.setNilValueForKey(_:String)*/
    /*Foundation.(file).NSObject.setNilValueForKey(_:String)*/
    NSObject.prototype.setNilValueForKey = function ($info, key) {
        throw 'unsupported method Foundation.(file).NSObject.setNilValueForKey(_:String) in ' + this.constructor.name;
    };
    /*Foundation.(file).NSObject.dictionaryWithValues(forKeys:[String])*/
    /*Foundation.(file).NSObject.dictionaryWithValues(forKeys:[String])*/
    NSObject.dictionaryWithValuesForKeys = function ($info, keys) {
        throw 'unsupported method Foundation.(file).NSObject.dictionaryWithValues(forKeys:[String]) in ' + this.constructor.name;
    };
    /*Foundation.(file).NSObject.dictionaryWithValues(forKeys:[String])*/
    /*Foundation.(file).NSObject.dictionaryWithValues(forKeys:[String])*/
    NSObject.prototype.dictionaryWithValuesForKeys = function ($info, keys) {
        throw 'unsupported method Foundation.(file).NSObject.dictionaryWithValues(forKeys:[String]) in ' + this.constructor.name;
    };
    /*Foundation.(file).NSObject.dictionaryWithValuesForKeys(_:[String])*/
    /*Foundation.(file).NSObject.dictionaryWithValuesForKeys(_:[String])*/
    NSObject.dictionaryWithValuesForKeys = function ($info, keys) {
        throw 'unsupported method Foundation.(file).NSObject.dictionaryWithValuesForKeys(_:[String]) in ' + this.constructor.name;
    };
    /*Foundation.(file).NSObject.dictionaryWithValuesForKeys(_:[String])*/
    /*Foundation.(file).NSObject.dictionaryWithValuesForKeys(_:[String])*/
    NSObject.prototype.dictionaryWithValuesForKeys = function ($info, keys) {
        throw 'unsupported method Foundation.(file).NSObject.dictionaryWithValuesForKeys(_:[String]) in ' + this.constructor.name;
    };
    /*Foundation.(file).NSObject.setValuesForKeys(_:[String : Any])*/
    /*Foundation.(file).NSObject.setValuesForKeys(_:[String : Any])*/
    NSObject.setValuesForKeys = function ($info, keyedValues) {
        throw 'unsupported method Foundation.(file).NSObject.setValuesForKeys(_:[String : Any]) in ' + this.constructor.name;
    };
    /*Foundation.(file).NSObject.setValuesForKeys(_:[String : Any])*/
    /*Foundation.(file).NSObject.setValuesForKeys(_:[String : Any])*/
    NSObject.prototype.setValuesForKeys = function ($info, keyedValues) {
        throw 'unsupported method Foundation.(file).NSObject.setValuesForKeys(_:[String : Any]) in ' + this.constructor.name;
    };
    /*Foundation.(file).NSObject.setValuesForKeysWithDictionary(_:[String : Any])*/
    /*Foundation.(file).NSObject.setValuesForKeysWithDictionary(_:[String : Any])*/
    NSObject.setValuesForKeysWithDictionary = function ($info, keyedValues) {
        throw 'unsupported method Foundation.(file).NSObject.setValuesForKeysWithDictionary(_:[String : Any]) in ' + this.constructor.name;
    };
    /*Foundation.(file).NSObject.setValuesForKeysWithDictionary(_:[String : Any])*/
    /*Foundation.(file).NSObject.setValuesForKeysWithDictionary(_:[String : Any])*/
    NSObject.prototype.setValuesForKeysWithDictionary = function ($info, keyedValues) {
        throw 'unsupported method Foundation.(file).NSObject.setValuesForKeysWithDictionary(_:[String : Any]) in ' + this.constructor.name;
    };
    /*Foundation.(file).NSObject.fileManager(_:FileManager,shouldProceedAfterError:[AnyHashable : Any])*/
    /*Foundation.(file).NSObject.fileManager(_:FileManager,shouldProceedAfterError:[AnyHashable : Any])*/
    NSObject.fileManagerShouldProceedAfterError = function ($info, fm, errorInfo) {
        throw 'unsupported method Foundation.(file).NSObject.fileManager(_:FileManager,shouldProceedAfterError:[AnyHashable : Any]) in ' + this.constructor.name;
    };
    /*Foundation.(file).NSObject.fileManager(_:FileManager,shouldProceedAfterError:[AnyHashable : Any])*/
    /*Foundation.(file).NSObject.fileManager(_:FileManager,shouldProceedAfterError:[AnyHashable : Any])*/
    NSObject.prototype.fileManagerShouldProceedAfterError = function ($info, fm, errorInfo) {
        throw 'unsupported method Foundation.(file).NSObject.fileManager(_:FileManager,shouldProceedAfterError:[AnyHashable : Any]) in ' + this.constructor.name;
    };
    /*Foundation.(file).NSObject.fileManager(_:FileManager,willProcessPath:String)*/
    /*Foundation.(file).NSObject.fileManager(_:FileManager,willProcessPath:String)*/
    NSObject.fileManagerWillProcessPath = function ($info, fm, path) {
        throw 'unsupported method Foundation.(file).NSObject.fileManager(_:FileManager,willProcessPath:String) in ' + this.constructor.name;
    };
    /*Foundation.(file).NSObject.fileManager(_:FileManager,willProcessPath:String)*/
    /*Foundation.(file).NSObject.fileManager(_:FileManager,willProcessPath:String)*/
    NSObject.prototype.fileManagerWillProcessPath = function ($info, fm, path) {
        throw 'unsupported method Foundation.(file).NSObject.fileManager(_:FileManager,willProcessPath:String) in ' + this.constructor.name;
    };
    /*Foundation.(file).NSObject.perform(_:Selector,with:Any?,afterDelay:TimeInterval,inModes:[RunLoop.Mode])*/
    /*Foundation.(file).NSObject.perform(_:Selector,with:Any?,afterDelay:TimeInterval,inModes:[RunLoop.Mode])*/
    NSObject.performWithAfterDelayInModes = function ($info, aSelector, anArgument, delay, modes) {
        throw 'unsupported method Foundation.(file).NSObject.perform(_:Selector,with:Any?,afterDelay:TimeInterval,inModes:[RunLoop.Mode]) in ' + this.constructor.name;
    };
    /*Foundation.(file).NSObject.perform(_:Selector,with:Any?,afterDelay:TimeInterval,inModes:[RunLoop.Mode])*/
    /*Foundation.(file).NSObject.perform(_:Selector,with:Any?,afterDelay:TimeInterval,inModes:[RunLoop.Mode])*/
    NSObject.prototype.performWithAfterDelayInModes = function ($info, aSelector, anArgument, delay, modes) {
        throw 'unsupported method Foundation.(file).NSObject.perform(_:Selector,with:Any?,afterDelay:TimeInterval,inModes:[RunLoop.Mode]) in ' + this.constructor.name;
    };
    /*Foundation.(file).NSObject.performSelector(_:Selector,withObject:Any?,afterDelay:TimeInterval,inModes:[RunLoop.Mode])*/
    /*Foundation.(file).NSObject.performSelector(_:Selector,withObject:Any?,afterDelay:TimeInterval,inModes:[RunLoop.Mode])*/
    NSObject.performSelectorWithObjectAfterDelayInModes = function ($info, aSelector, anArgument, delay, modes) {
        throw 'unsupported method Foundation.(file).NSObject.performSelector(_:Selector,withObject:Any?,afterDelay:TimeInterval,inModes:[RunLoop.Mode]) in ' + this.constructor.name;
    };
    /*Foundation.(file).NSObject.performSelector(_:Selector,withObject:Any?,afterDelay:TimeInterval,inModes:[RunLoop.Mode])*/
    /*Foundation.(file).NSObject.performSelector(_:Selector,withObject:Any?,afterDelay:TimeInterval,inModes:[RunLoop.Mode])*/
    NSObject.prototype.performSelectorWithObjectAfterDelayInModes = function ($info, aSelector, anArgument, delay, modes) {
        throw 'unsupported method Foundation.(file).NSObject.performSelector(_:Selector,withObject:Any?,afterDelay:TimeInterval,inModes:[RunLoop.Mode]) in ' + this.constructor.name;
    };
    /*Foundation.(file).NSObject.perform(_:Selector,with:Any?,afterDelay:TimeInterval)*/
    /*Foundation.(file).NSObject.perform(_:Selector,with:Any?,afterDelay:TimeInterval)*/
    NSObject.performWithAfterDelay = function ($info, aSelector, anArgument, delay) {
        throw 'unsupported method Foundation.(file).NSObject.perform(_:Selector,with:Any?,afterDelay:TimeInterval) in ' + this.constructor.name;
    };
    /*Foundation.(file).NSObject.perform(_:Selector,with:Any?,afterDelay:TimeInterval)*/
    /*Foundation.(file).NSObject.perform(_:Selector,with:Any?,afterDelay:TimeInterval)*/
    NSObject.prototype.performWithAfterDelay = function ($info, aSelector, anArgument, delay) {
        throw 'unsupported method Foundation.(file).NSObject.perform(_:Selector,with:Any?,afterDelay:TimeInterval) in ' + this.constructor.name;
    };
    /*Foundation.(file).NSObject.performSelector(_:Selector,withObject:Any?,afterDelay:TimeInterval)*/
    /*Foundation.(file).NSObject.performSelector(_:Selector,withObject:Any?,afterDelay:TimeInterval)*/
    NSObject.performSelectorWithObjectAfterDelay = function ($info, aSelector, anArgument, delay) {
        throw 'unsupported method Foundation.(file).NSObject.performSelector(_:Selector,withObject:Any?,afterDelay:TimeInterval) in ' + this.constructor.name;
    };
    /*Foundation.(file).NSObject.performSelector(_:Selector,withObject:Any?,afterDelay:TimeInterval)*/
    /*Foundation.(file).NSObject.performSelector(_:Selector,withObject:Any?,afterDelay:TimeInterval)*/
    NSObject.prototype.performSelectorWithObjectAfterDelay = function ($info, aSelector, anArgument, delay) {
        throw 'unsupported method Foundation.(file).NSObject.performSelector(_:Selector,withObject:Any?,afterDelay:TimeInterval) in ' + this.constructor.name;
    };
    /*Foundation.(file).NSObject.cancelPreviousPerformRequests(withTarget:Any,selector:Selector,object:Any?)*/
    /*Foundation.(file).NSObject.cancelPreviousPerformRequests(withTarget:Any,selector:Selector,object:Any?)*/
    NSObject.cancelPreviousPerformRequestsWithTargetSelectorObject = function ($info, aTarget, aSelector, anArgument) {
        throw 'unsupported method Foundation.(file).NSObject.cancelPreviousPerformRequests(withTarget:Any,selector:Selector,object:Any?) in ' + this.constructor.name;
    };
    /*Foundation.(file).NSObject.cancelPreviousPerformRequestsWithTarget(_:Any,selector:Selector,object:Any?)*/
    /*Foundation.(file).NSObject.cancelPreviousPerformRequestsWithTarget(_:Any,selector:Selector,object:Any?)*/
    NSObject.cancelPreviousPerformRequestsWithTargetSelectorObject = function ($info, aTarget, aSelector, anArgument) {
        throw 'unsupported method Foundation.(file).NSObject.cancelPreviousPerformRequestsWithTarget(_:Any,selector:Selector,object:Any?) in ' + this.constructor.name;
    };
    /*Foundation.(file).NSObject.cancelPreviousPerformRequests(withTarget:Any)*/
    /*Foundation.(file).NSObject.cancelPreviousPerformRequests(withTarget:Any)*/
    NSObject.cancelPreviousPerformRequestsWithTarget = function ($info, aTarget) {
        throw 'unsupported method Foundation.(file).NSObject.cancelPreviousPerformRequests(withTarget:Any) in ' + this.constructor.name;
    };
    /*Foundation.(file).NSObject.cancelPreviousPerformRequestsWithTarget(_:Any)*/
    /*Foundation.(file).NSObject.cancelPreviousPerformRequestsWithTarget(_:Any)*/
    NSObject.cancelPreviousPerformRequestsWithTarget = function ($info, aTarget) {
        throw 'unsupported method Foundation.(file).NSObject.cancelPreviousPerformRequestsWithTarget(_:Any) in ' + this.constructor.name;
    };
    /*Foundation.(file).NSObject.attemptRecovery(fromError:Error,optionIndex:Int,delegate:Any?,didRecoverSelector:Selector?,contextInfo:UnsafeMutableRawPointer?)*/
    /*Foundation.(file).NSObject.attemptRecovery(fromError:Error,optionIndex:Int,delegate:Any?,didRecoverSelector:Selector?,contextInfo:UnsafeMutableRawPointer?)*/
    NSObject.attemptRecoveryFromErrorOptionIndexDelegateDidRecoverSelectorContextInfo = function ($info, error, recoveryOptionIndex, delegate, didRecoverSelector, contextInfo) {
        throw 'unsupported method Foundation.(file).NSObject.attemptRecovery(fromError:Error,optionIndex:Int,delegate:Any?,didRecoverSelector:Selector?,contextInfo:UnsafeMutableRawPointer?) in ' + this.constructor.name;
    };
    /*Foundation.(file).NSObject.attemptRecovery(fromError:Error,optionIndex:Int,delegate:Any?,didRecoverSelector:Selector?,contextInfo:UnsafeMutableRawPointer?)*/
    /*Foundation.(file).NSObject.attemptRecovery(fromError:Error,optionIndex:Int,delegate:Any?,didRecoverSelector:Selector?,contextInfo:UnsafeMutableRawPointer?)*/
    NSObject.prototype.attemptRecoveryFromErrorOptionIndexDelegateDidRecoverSelectorContextInfo = function ($info, error, recoveryOptionIndex, delegate, didRecoverSelector, contextInfo) {
        throw 'unsupported method Foundation.(file).NSObject.attemptRecovery(fromError:Error,optionIndex:Int,delegate:Any?,didRecoverSelector:Selector?,contextInfo:UnsafeMutableRawPointer?) in ' + this.constructor.name;
    };
    /*Foundation.(file).NSObject.attemptRecoveryFromError(_:Error,optionIndex:Int,delegate:Any?,didRecoverSelector:Selector?,contextInfo:UnsafeMutableRawPointer?)*/
    /*Foundation.(file).NSObject.attemptRecoveryFromError(_:Error,optionIndex:Int,delegate:Any?,didRecoverSelector:Selector?,contextInfo:UnsafeMutableRawPointer?)*/
    NSObject.attemptRecoveryFromErrorOptionIndexDelegateDidRecoverSelectorContextInfo = function ($info, error, recoveryOptionIndex, delegate, didRecoverSelector, contextInfo) {
        throw 'unsupported method Foundation.(file).NSObject.attemptRecoveryFromError(_:Error,optionIndex:Int,delegate:Any?,didRecoverSelector:Selector?,contextInfo:UnsafeMutableRawPointer?) in ' + this.constructor.name;
    };
    /*Foundation.(file).NSObject.attemptRecoveryFromError(_:Error,optionIndex:Int,delegate:Any?,didRecoverSelector:Selector?,contextInfo:UnsafeMutableRawPointer?)*/
    /*Foundation.(file).NSObject.attemptRecoveryFromError(_:Error,optionIndex:Int,delegate:Any?,didRecoverSelector:Selector?,contextInfo:UnsafeMutableRawPointer?)*/
    NSObject.prototype.attemptRecoveryFromErrorOptionIndexDelegateDidRecoverSelectorContextInfo = function ($info, error, recoveryOptionIndex, delegate, didRecoverSelector, contextInfo) {
        throw 'unsupported method Foundation.(file).NSObject.attemptRecoveryFromError(_:Error,optionIndex:Int,delegate:Any?,didRecoverSelector:Selector?,contextInfo:UnsafeMutableRawPointer?) in ' + this.constructor.name;
    };
    /*Foundation.(file).NSObject.attemptRecovery(fromError:Error,optionIndex:Int)*/
    /*Foundation.(file).NSObject.attemptRecovery(fromError:Error,optionIndex:Int)*/
    NSObject.attemptRecoveryFromErrorOptionIndex = function ($info, error, recoveryOptionIndex) {
        throw 'unsupported method Foundation.(file).NSObject.attemptRecovery(fromError:Error,optionIndex:Int) in ' + this.constructor.name;
    };
    /*Foundation.(file).NSObject.attemptRecovery(fromError:Error,optionIndex:Int)*/
    /*Foundation.(file).NSObject.attemptRecovery(fromError:Error,optionIndex:Int)*/
    NSObject.prototype.attemptRecoveryFromErrorOptionIndex = function ($info, error, recoveryOptionIndex) {
        throw 'unsupported method Foundation.(file).NSObject.attemptRecovery(fromError:Error,optionIndex:Int) in ' + this.constructor.name;
    };
    /*Foundation.(file).NSObject.attemptRecoveryFromError(_:Error,optionIndex:Int)*/
    /*Foundation.(file).NSObject.attemptRecoveryFromError(_:Error,optionIndex:Int)*/
    NSObject.attemptRecoveryFromErrorOptionIndex = function ($info, error, recoveryOptionIndex) {
        throw 'unsupported method Foundation.(file).NSObject.attemptRecoveryFromError(_:Error,optionIndex:Int) in ' + this.constructor.name;
    };
    /*Foundation.(file).NSObject.attemptRecoveryFromError(_:Error,optionIndex:Int)*/
    /*Foundation.(file).NSObject.attemptRecoveryFromError(_:Error,optionIndex:Int)*/
    NSObject.prototype.attemptRecoveryFromErrorOptionIndex = function ($info, error, recoveryOptionIndex) {
        throw 'unsupported method Foundation.(file).NSObject.attemptRecoveryFromError(_:Error,optionIndex:Int) in ' + this.constructor.name;
    };
    /*Foundation.(file).NSObject.autoContentAccessingProxy()*/
    /*Foundation.(file).NSObject.autoContentAccessingProxy()*/
    NSObject.autoContentAccessingProxy = function ($info) {
        throw 'unsupported method Foundation.(file).NSObject.autoContentAccessingProxy() in ' + this.constructor.name;
    };
    /*Foundation.(file).NSObject.pose(as:AnyClass)*/
    /*Foundation.(file).NSObject.pose(as:AnyClass)*/
    NSObject.poseAs = function ($info, aClass) {
        throw 'unsupported method Foundation.(file).NSObject.pose(as:AnyClass) in ' + this.constructor.name;
    };
    /*Foundation.(file).NSObject.poseAsClass(_:AnyClass)*/
    /*Foundation.(file).NSObject.poseAsClass(_:AnyClass)*/
    NSObject.poseAsClass = function ($info, aClass) {
        throw 'unsupported method Foundation.(file).NSObject.poseAsClass(_:AnyClass) in ' + this.constructor.name;
    };
    /*Foundation.(file).NSObject.version()*/
    /*Foundation.(file).NSObject.version()*/
    NSObject.version = function ($info) {
        throw 'unsupported method Foundation.(file).NSObject.version() in ' + this.constructor.name;
    };
    /*Foundation.(file).NSObject.setVersion(_:Int)*/
    /*Foundation.(file).NSObject.setVersion(_:Int)*/
    NSObject.setVersion = function ($info, aVersion) {
        throw 'unsupported method Foundation.(file).NSObject.setVersion(_:Int) in ' + this.constructor.name;
    };
    /*Foundation.(file).NSObject.replacementObject(for:NSCoder)*/
    /*Foundation.(file).NSObject.replacementObject(for:NSCoder)*/
    NSObject.replacementObjectFor = function ($info, aCoder) {
        throw 'unsupported method Foundation.(file).NSObject.replacementObject(for:NSCoder) in ' + this.constructor.name;
    };
    /*Foundation.(file).NSObject.replacementObject(for:NSCoder)*/
    /*Foundation.(file).NSObject.replacementObject(for:NSCoder)*/
    NSObject.prototype.replacementObjectFor = function ($info, aCoder) {
        throw 'unsupported method Foundation.(file).NSObject.replacementObject(for:NSCoder) in ' + this.constructor.name;
    };
    /*Foundation.(file).NSObject.replacementObjectForCoder(_:NSCoder)*/
    /*Foundation.(file).NSObject.replacementObjectForCoder(_:NSCoder)*/
    NSObject.replacementObjectForCoder = function ($info, aCoder) {
        throw 'unsupported method Foundation.(file).NSObject.replacementObjectForCoder(_:NSCoder) in ' + this.constructor.name;
    };
    /*Foundation.(file).NSObject.replacementObjectForCoder(_:NSCoder)*/
    /*Foundation.(file).NSObject.replacementObjectForCoder(_:NSCoder)*/
    NSObject.prototype.replacementObjectForCoder = function ($info, aCoder) {
        throw 'unsupported method Foundation.(file).NSObject.replacementObjectForCoder(_:NSCoder) in ' + this.constructor.name;
    };
    /*Foundation.(file).NSObject.awakeAfter(using:NSCoder)*/
    /*Foundation.(file).NSObject.awakeAfter(using:NSCoder)*/
    NSObject.awakeAfterUsing = function ($info, aDecoder) {
        throw 'unsupported method Foundation.(file).NSObject.awakeAfter(using:NSCoder) in ' + this.constructor.name;
    };
    /*Foundation.(file).NSObject.awakeAfter(using:NSCoder)*/
    /*Foundation.(file).NSObject.awakeAfter(using:NSCoder)*/
    NSObject.prototype.awakeAfterUsing = function ($info, aDecoder) {
        throw 'unsupported method Foundation.(file).NSObject.awakeAfter(using:NSCoder) in ' + this.constructor.name;
    };
    /*Foundation.(file).NSObject.awakeAfterUsingCoder(_:NSCoder)*/
    /*Foundation.(file).NSObject.awakeAfterUsingCoder(_:NSCoder)*/
    NSObject.awakeAfterUsingCoder = function ($info, aDecoder) {
        throw 'unsupported method Foundation.(file).NSObject.awakeAfterUsingCoder(_:NSCoder) in ' + this.constructor.name;
    };
    /*Foundation.(file).NSObject.awakeAfterUsingCoder(_:NSCoder)*/
    /*Foundation.(file).NSObject.awakeAfterUsingCoder(_:NSCoder)*/
    NSObject.prototype.awakeAfterUsingCoder = function ($info, aDecoder) {
        throw 'unsupported method Foundation.(file).NSObject.awakeAfterUsingCoder(_:NSCoder) in ' + this.constructor.name;
    };
    /*Foundation.(file).NSObject.classForCoder()*/
    /*Foundation.(file).NSObject.classForCoder()*/
    NSObject.classForCoder = function ($info) {
        throw 'unsupported method Foundation.(file).NSObject.classForCoder() in ' + this.constructor.name;
    };
    /*CoreImage.(file).NSObject.provideImageData(_:UnsafeMutableRawPointer,bytesPerRow:Int,origin:Int,_:Int,size:Int,_:Int,userInfo:Any?)*/
    /*CoreImage.(file).NSObject.provideImageData(_:UnsafeMutableRawPointer,bytesPerRow:Int,origin:Int,_:Int,size:Int,_:Int,userInfo:Any?)*/
    NSObject.provideImageData = function ($info, data, rowbytes, x, y, width, height, info) {
        throw 'unsupported method CoreImage.(file).NSObject.provideImageData(_:UnsafeMutableRawPointer,bytesPerRow:Int,origin:Int,_:Int,size:Int,_:Int,userInfo:Any?) in ' + this.constructor.name;
    };
    /*CoreImage.(file).NSObject.provideImageData(_:UnsafeMutableRawPointer,bytesPerRow:Int,origin:Int,_:Int,size:Int,_:Int,userInfo:Any?)*/
    /*CoreImage.(file).NSObject.provideImageData(_:UnsafeMutableRawPointer,bytesPerRow:Int,origin:Int,_:Int,size:Int,_:Int,userInfo:Any?)*/
    NSObject.prototype.provideImageData = function ($info, data, rowbytes, x, y, width, height, info) {
        throw 'unsupported method CoreImage.(file).NSObject.provideImageData(_:UnsafeMutableRawPointer,bytesPerRow:Int,origin:Int,_:Int,size:Int,_:Int,userInfo:Any?) in ' + this.constructor.name;
    };
    NSObject.prototype.init$vars = function () {
    };
    NSObject.$infoAddress = '';
    return NSObject;
}());
if (typeof NSObjectProtocol$implementation != 'undefined')
    _mixin(NSObject, NSObjectProtocol$implementation, false);
if (typeof Equatable$implementation != 'undefined')
    _mixin(NSObject, Equatable$implementation, false);
if (typeof Hashable$implementation != 'undefined')
    _mixin(NSObject, Hashable$implementation, false);
if (typeof CVarArg$implementation != 'undefined')
    _mixin(NSObject, CVarArg$implementation, false);
if (typeof CustomStringConvertible$implementation != 'undefined')
    _mixin(NSObject, CustomStringConvertible$implementation, false);
if (typeof CustomDebugStringConvertible$implementation != 'undefined')
    _mixin(NSObject, CustomDebugStringConvertible$implementation, false);
if (typeof _KeyValueCodingAndObserving$implementation != 'undefined')
    _mixin(NSObject, _KeyValueCodingAndObserving$implementation, false);
/*Darwin.(file).arc4random()*/
/*Darwin.(file).arc4random()*/
function arc4random($info) {
    return arc4random_uniform(null, Math.pow(2, 32));
}
/*Darwin.(file).arc4random_uniform(_:UInt32)*/
/*Darwin.(file).arc4random_uniform(_:UInt32)*/
function arc4random_uniform($info, __upper_bound) {
    return Math.floor(Math.random() * __upper_bound);
}
/*Darwin.(file).ceil(_:T)*/
/*Darwin.(file).ceil(_:T)*/
function ceil($info, x) {
    return Math.ceil(x);
}
/*Darwin.(file).floor(_:T)*/
/*Darwin.(file).floor(_:T)*/
function floor($info, x) {
    return Math.floor(x);
}
/*Darwin.(file).pow(_:Float80,_:Float80)*/
/*Darwin.(file).pow(_:Float80,_:Float80)*/
function pow($info, lhs, rhs) {
    return Math.pow(lhs, rhs);
}
/*Darwin.(file).pow(_:Float,_:Float)*/
/*Darwin.(file).pow(_:Float,_:Float)*/
/*function pow1($info0x7ff1c68c4ed0, lhs, rhs) {
return this.pow(lhs, rhs)
}*/
/*Darwin.(file).sqrt(_:T)*/
/*Darwin.(file).sqrt(_:T)*/
function sqrt($info, x) {
    return Math.sqrt(x);
}
var NSException = /** @class */ (function (_super) {
    __extends(NSException, _super);
    function NSException() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    /*Foundation.(file).NSException.init(name:NSExceptionName,reason:String?,userInfo:[AnyHashable : Any]?)*/
    /*Foundation.(file).NSException.init(name:NSExceptionName,reason:String?,userInfo:[AnyHashable : Any]?)*/
    NSException.prototype.initNameNSExceptionNameReasonOptionalUserInfoOptional = function ($info, _name, reason, userInfo) {
        throw 'unsupported method Foundation.(file).NSException.init(name:NSExceptionName,reason:String?,userInfo:[AnyHashable : Any]?) in ' + this.constructor.name;
    };
    /*Foundation.(file).NSException.exceptionWithName(_:NSExceptionName,reason:String?,userInfo:[AnyHashable : Any]?)*/
    /*Foundation.(file).NSException.exceptionWithName(_:NSExceptionName,reason:String?,userInfo:[AnyHashable : Any]?)*/
    NSException.exceptionWithNameReasonUserInfo = function ($info, _name, reason, userInfo) {
        throw 'unsupported method Foundation.(file).NSException.exceptionWithName(_:NSExceptionName,reason:String?,userInfo:[AnyHashable : Any]?) in ' + this.constructor.name;
    };
    /*Foundation.(file).NSException.init(name:NSExceptionName,reason:String?,userInfo:[AnyHashable : Any]?)*/
    /*Foundation.(file).NSException.init(name:NSExceptionName,reason:String?,userInfo:[AnyHashable : Any]?)*/
    NSException.prototype.initNameNSExceptionNameReasonOptionalUserInfoOptional = function ($info, aName, aReason, aUserInfo) {
        throw 'unsupported method Foundation.(file).NSException.init(name:NSExceptionName,reason:String?,userInfo:[AnyHashable : Any]?) in ' + this.constructor.name;
    };
    /*Foundation.(file).NSException.raise()*/
    /*Foundation.(file).NSException.raise()*/
    NSException.prototype.raise = function ($info) {
        throw 'unsupported method Foundation.(file).NSException.raise() in ' + this.constructor.name;
    };
    /*Foundation.(file).NSException.init()*/
    /*ObjectiveC.(file).NSObject.init()*/
    NSException.prototype.init = function ($info) {
    };
    /*Foundation.(file).NSException.copy(with:NSZone?)*/
    /*Foundation.(file).NSException.copy(with:NSZone?)*/
    NSException.prototype.copyWith = function ($info, zone) {
        throw 'unsupported method Foundation.(file).NSException.copy(with:NSZone?) in ' + this.constructor.name;
    };
    /*Foundation.(file).NSException.encode(with:NSCoder)*/
    /*Foundation.(file).NSException.encode(with:NSCoder)*/
    NSException.prototype.encodeWith = function ($info, aCoder) {
        throw 'unsupported method Foundation.(file).NSException.encode(with:NSCoder) in ' + this.constructor.name;
    };
    /*Foundation.(file).NSException.init(coder:NSCoder)*/
    /*Foundation.(file).NSException.init(coder:NSCoder)*/
    NSException.prototype.initCoderNSCoder = function ($info, aDecoder) {
        throw 'unsupported method Foundation.(file).NSException.init(coder:NSCoder) in ' + this.constructor.name;
    };
    /*Foundation.(file).NSException.raise(_:NSExceptionName,format:String,arguments:CVaListPointer)*/
    /*Foundation.(file).NSException.raise(_:NSExceptionName,format:String,arguments:CVaListPointer)*/
    NSException.raiseFormatArguments = function ($info, _name, format, argList) {
        throw 'unsupported method Foundation.(file).NSException.raise(_:NSExceptionName,format:String,arguments:CVaListPointer) in ' + this.constructor.name;
    };
    NSException.prototype.init$vars = function () {
        if (_super.prototype.init$vars)
            _super.prototype.init$vars.call(this);
    };
    NSException.$infoAddress = '';
    NSException.initCoderNSCoder$failable = true;
    return NSException;
}(NSObject));
if (typeof NSCopying$implementation != 'undefined')
    _mixin(NSException, NSCopying$implementation, false);
if (typeof NSCoding$implementation != 'undefined')
    _mixin(NSException, NSCoding$implementation, false);
/*XCTest.(file).XCTSelfTestMain()*/
/*XCTest.(file).XCTSelfTestMain()*/
function XCTSelfTestMain($info) {
    throw 'unsupported method XCTest.(file).XCTSelfTestMain() in ' + this.constructor.name;
}
/*XCTest.(file).XCTFail(_:String,file:StaticString,line:UInt)*/
/*XCTest.(file).XCTFail(_:String,file:StaticString,line:UInt)*/
function XCTFailFileLine($info, message, file, line) {
    assertionFailureFileLine({}, function () { return message; }, '?3', '?3');
}
/*XCTest.(file).XCTAssertNil(_:() throws -> Any?,_:() -> String,file:StaticString,line:UInt)*/
/*XCTest.(file).XCTAssertNil(_:() throws -> Any?,_:() -> String,file:StaticString,line:UInt)*/
function XCTAssertNilFileLine($info, expression, message, file, line) {
    preconditionFileLine({}, function () { return Optional.wrappedEqualsOptionalNilComparisonType({}, expression({}), null); }, function () { return message({}); }, '?3', '?3');
}
/*XCTest.(file).XCTAssertNotNil(_:() throws -> Any?,_:() -> String,file:StaticString,line:UInt)*/
/*XCTest.(file).XCTAssertNotNil(_:() throws -> Any?,_:() -> String,file:StaticString,line:UInt)*/
function XCTAssertNotNilFileLine($info, expression, message, file, line) {
    preconditionFileLine({}, function () { return Optional.wrappedNotEqualsOptionalNilComparisonType({}, expression({}), null); }, function () { return message({}); }, '?3', '?3');
}
/*XCTest.(file).XCTAssert(_:() throws -> Bool,_:() -> String,file:StaticString,line:UInt)*/
/*XCTest.(file).XCTAssert(_:() throws -> Bool,_:() -> String,file:StaticString,line:UInt)*/
function XCTAssertFileLine($info, expression, message, file, line) {
    preconditionFileLine({}, function () { return expression({}); }, function () { return message({}); }, '?3', '?3');
}
/*XCTest.(file).XCTAssertTrue(_:() throws -> Bool,_:() -> String,file:StaticString,line:UInt)*/
/*XCTest.(file).XCTAssertTrue(_:() throws -> Bool,_:() -> String,file:StaticString,line:UInt)*/
function XCTAssertTrueFileLine($info, expression, message, file, line) {
    preconditionFileLine({}, function () { return Bool.infix_61_61({}, expression({}), true); }, function () { return message({}); }, '?3', '?3');
}
/*XCTest.(file).XCTAssertFalse(_:() throws -> Bool,_:() -> String,file:StaticString,line:UInt)*/
/*XCTest.(file).XCTAssertFalse(_:() throws -> Bool,_:() -> String,file:StaticString,line:UInt)*/
function XCTAssertFalseFileLine($info, expression, message, file, line) {
    preconditionFileLine({}, function () { return Bool.prefix_33({}, expression({})); }, function () { return message({}); }, '?3', '?3');
}
/*XCTest.(file).XCTAssertEqual(_:() throws -> T,_:() throws -> T,_:() -> String,file:StaticString,line:UInt)*/
/*XCTest.(file).XCTAssertEqual(_:() throws -> T,_:() throws -> T,_:() -> String,file:StaticString,line:UInt)*/
function XCTAssertEqualFileLine($info, expression1, expression2, message, file, line) {
    preconditionFileLine({}, function () { return (_.arg0 = expression1({})).constructor.infix_61_61({}, _.arg0, expression2({})); }, function () { return message({}); }, '?3', '?3');
}
/*XCTest.(file).XCTAssertNotEqual(_:() throws -> T,_:() throws -> T,_:() -> String,file:StaticString,line:UInt)*/
/*XCTest.(file).XCTAssertNotEqual(_:() throws -> T,_:() throws -> T,_:() -> String,file:StaticString,line:UInt)*/
function XCTAssertNotEqualFileLine($info, expression1, expression2, message, file, line) {
    preconditionFileLine({}, function () { return (_.arg0 = expression1({})).constructor.infix_33_61({}, _.arg0, expression2({})); }, function () { return message({}); }, '?3', '?3');
}
/*XCTest.(file).XCTAssertEqual(_:() throws -> T,_:() throws -> T,accuracy:T,_:() -> String,file:StaticString,line:UInt)*/
/*XCTest.(file).XCTAssertEqual(_:() throws -> T,_:() throws -> T,accuracy:T,_:() -> String,file:StaticString,line:UInt)*/
function XCTAssertEqualAccuracyFileLine($info, expression1, expression2, accuracy, message, file, line) {
    throw 'unsupported method XCTest.(file).XCTAssertEqual(_:() throws -> T,_:() throws -> T,accuracy:T,_:() -> String,file:StaticString,line:UInt) in ' + this.constructor.name;
}
/*XCTest.(file).XCTAssertEqualWithAccuracy(_:() throws -> T,_:() throws -> T,accuracy:T,_:() -> String,file:StaticString,line:UInt)*/
/*XCTest.(file).XCTAssertEqualWithAccuracy(_:() throws -> T,_:() throws -> T,accuracy:T,_:() -> String,file:StaticString,line:UInt)*/
function XCTAssertEqualWithAccuracyAccuracyFileLine($info, expression1, expression2, accuracy, message, file, line) {
    throw 'unsupported method XCTest.(file).XCTAssertEqualWithAccuracy(_:() throws -> T,_:() throws -> T,accuracy:T,_:() -> String,file:StaticString,line:UInt) in ' + this.constructor.name;
}
/*XCTest.(file).XCTAssertNotEqual(_:() throws -> T,_:() throws -> T,accuracy:T,_:() -> String,file:StaticString,line:UInt)*/
/*XCTest.(file).XCTAssertNotEqual(_:() throws -> T,_:() throws -> T,accuracy:T,_:() -> String,file:StaticString,line:UInt)*/
function XCTAssertNotEqualAccuracyFileLine($info, expression1, expression2, accuracy, message, file, line) {
    throw 'unsupported method XCTest.(file).XCTAssertNotEqual(_:() throws -> T,_:() throws -> T,accuracy:T,_:() -> String,file:StaticString,line:UInt) in ' + this.constructor.name;
}
/*XCTest.(file).XCTAssertNotEqualWithAccuracy(_:() throws -> T,_:() throws -> T,_:T,_:() -> String,file:StaticString,line:UInt)*/
/*XCTest.(file).XCTAssertNotEqualWithAccuracy(_:() throws -> T,_:() throws -> T,_:T,_:() -> String,file:StaticString,line:UInt)*/
function XCTAssertNotEqualWithAccuracyFileLine($info, expression1, expression2, accuracy, message, file, line) {
    throw 'unsupported method XCTest.(file).XCTAssertNotEqualWithAccuracy(_:() throws -> T,_:() throws -> T,_:T,_:() -> String,file:StaticString,line:UInt) in ' + this.constructor.name;
}
/*XCTest.(file).XCTAssertGreaterThan(_:() throws -> T,_:() throws -> T,_:() -> String,file:StaticString,line:UInt)*/
/*XCTest.(file).XCTAssertGreaterThan(_:() throws -> T,_:() throws -> T,_:() -> String,file:StaticString,line:UInt)*/
function XCTAssertGreaterThanFileLine($info, expression1, expression2, message, file, line) {
    preconditionFileLine({}, function () { return (_.arg0 = expression1({})).constructor.infix_62({}, _.arg0, expression2({})); }, function () { return message({}); }, '?3', '?3');
}
/*XCTest.(file).XCTAssertGreaterThanOrEqual(_:() throws -> T,_:() throws -> T,_:() -> String,file:StaticString,line:UInt)*/
/*XCTest.(file).XCTAssertGreaterThanOrEqual(_:() throws -> T,_:() throws -> T,_:() -> String,file:StaticString,line:UInt)*/
function XCTAssertGreaterThanOrEqualFileLine($info, expression1, expression2, message, file, line) {
    preconditionFileLine({}, function () { return (_.arg0 = expression1({})).constructor.infix_62_61({}, _.arg0, expression2({})); }, function () { return message({}); }, '?3', '?3');
}
/*XCTest.(file).XCTAssertLessThan(_:() throws -> T,_:() throws -> T,_:() -> String,file:StaticString,line:UInt)*/
/*XCTest.(file).XCTAssertLessThan(_:() throws -> T,_:() throws -> T,_:() -> String,file:StaticString,line:UInt)*/
function XCTAssertLessThanFileLine($info, expression1, expression2, message, file, line) {
    preconditionFileLine({}, function () { return (_.arg0 = expression1({})).constructor.infix_60({}, _.arg0, expression2({})); }, function () { return message({}); }, '?3', '?3');
}
/*XCTest.(file).XCTAssertLessThanOrEqual(_:() throws -> T,_:() throws -> T,_:() -> String,file:StaticString,line:UInt)*/
/*XCTest.(file).XCTAssertLessThanOrEqual(_:() throws -> T,_:() throws -> T,_:() -> String,file:StaticString,line:UInt)*/
function XCTAssertLessThanOrEqualFileLine($info, expression1, expression2, message, file, line) {
    preconditionFileLine({}, function () { return (_.arg0 = expression1({})).constructor.infix_60_61({}, _.arg0, expression2({})); }, function () { return message({}); }, '?3', '?3');
}
/*XCTest.(file).XCTAssertThrowsError(_:() throws -> T,_:() -> String,file:StaticString,line:UInt,_:(Error) -> Void)*/
/*XCTest.(file).XCTAssertThrowsError(_:() throws -> T,_:() -> String,file:StaticString,line:UInt,_:(Error) -> Void)*/
function XCTAssertThrowsErrorFileLine($info, expression, message, file, line, errorHandler) {
    throw 'unsupported method XCTest.(file).XCTAssertThrowsError(_:() throws -> T,_:() -> String,file:StaticString,line:UInt,_:(Error) -> Void) in ' + this.constructor.name;
}
/*XCTest.(file).XCTAssertNoThrow(_:() throws -> T,_:() -> String,file:StaticString,line:UInt)*/
/*XCTest.(file).XCTAssertNoThrow(_:() throws -> T,_:() -> String,file:StaticString,line:UInt)*/
function XCTAssertNoThrowFileLine($info, expression, message, file, line) {
    throw 'unsupported method XCTest.(file).XCTAssertNoThrow(_:() throws -> T,_:() -> String,file:StaticString,line:UInt) in ' + this.constructor.name;
}
var XCTActivity$implementation = /** @class */ (function () {
    function XCTActivity$implementation() {
    }
    return XCTActivity$implementation;
}());
if (typeof NSObjectProtocol$implementation != 'undefined')
    _mixin(XCTActivity$implementation, NSObjectProtocol$implementation, false);
var XCTAttachment = /** @class */ (function (_super) {
    __extends(XCTAttachment, _super);
    function XCTAttachment() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    /*XCTest.(file).XCTAttachment.init()*/
    /*ObjectiveC.(file).NSObject.init()*/
    XCTAttachment.prototype.init = function ($info) {
    };
    /*XCTest.(file).XCTAttachment.init(uniformTypeIdentifier:String?,name:String?,payload:Data?,userInfo:[AnyHashable : Any]?)*/
    /*XCTest.(file).XCTAttachment.init(uniformTypeIdentifier:String?,name:String?,payload:Data?,userInfo:[AnyHashable : Any]?)*/
    XCTAttachment.prototype.initUniformTypeIdentifierOptionalNameOptionalPayloadOptionalUserInfoOptional = function ($info, identifier, _name, payload, userInfo) {
        throw 'unsupported method XCTest.(file).XCTAttachment.init(uniformTypeIdentifier:String?,name:String?,payload:Data?,userInfo:[AnyHashable : Any]?) in ' + this.constructor.name;
    };
    /*XCTest.(file).XCTAttachment.attachmentWithUniformTypeIdentifier(_:String?,name:String?,payload:Data?,userInfo:[AnyHashable : Any]?)*/
    /*XCTest.(file).XCTAttachment.attachmentWithUniformTypeIdentifier(_:String?,name:String?,payload:Data?,userInfo:[AnyHashable : Any]?)*/
    XCTAttachment.attachmentWithUniformTypeIdentifierNamePayloadUserInfo = function ($info, identifier, _name, payload, userInfo) {
        throw 'unsupported method XCTest.(file).XCTAttachment.attachmentWithUniformTypeIdentifier(_:String?,name:String?,payload:Data?,userInfo:[AnyHashable : Any]?) in ' + this.constructor.name;
    };
    /*XCTest.(file).XCTAttachment.encode(with:NSCoder)*/
    /*XCTest.(file).XCTAttachment.encode(with:NSCoder)*/
    XCTAttachment.prototype.encodeWith = function ($info, aCoder) {
        throw 'unsupported method XCTest.(file).XCTAttachment.encode(with:NSCoder) in ' + this.constructor.name;
    };
    /*XCTest.(file).XCTAttachment.init(coder:NSCoder)*/
    /*XCTest.(file).XCTAttachment.init(coder:NSCoder)*/
    XCTAttachment.prototype.initCoderNSCoder = function ($info, aDecoder) {
        throw 'unsupported method XCTest.(file).XCTAttachment.init(coder:NSCoder) in ' + this.constructor.name;
    };
    /*XCTest.(file).XCTAttachment.init(data:Data)*/
    /*XCTest.(file).XCTAttachment.init(data:Data)*/
    XCTAttachment.prototype.initDataData = function ($info, payload) {
        throw 'unsupported method XCTest.(file).XCTAttachment.init(data:Data) in ' + this.constructor.name;
    };
    /*XCTest.(file).XCTAttachment.attachmentWithData(_:Data)*/
    /*XCTest.(file).XCTAttachment.attachmentWithData(_:Data)*/
    XCTAttachment.attachmentWithData = function ($info, payload) {
        throw 'unsupported method XCTest.(file).XCTAttachment.attachmentWithData(_:Data) in ' + this.constructor.name;
    };
    /*XCTest.(file).XCTAttachment.init(data:Data,uniformTypeIdentifier:String)*/
    /*XCTest.(file).XCTAttachment.init(data:Data,uniformTypeIdentifier:String)*/
    XCTAttachment.prototype.initDataDataUniformTypeIdentifierString = function ($info, payload, identifier) {
        throw 'unsupported method XCTest.(file).XCTAttachment.init(data:Data,uniformTypeIdentifier:String) in ' + this.constructor.name;
    };
    /*XCTest.(file).XCTAttachment.attachmentWithData(_:Data,uniformTypeIdentifier:String)*/
    /*XCTest.(file).XCTAttachment.attachmentWithData(_:Data,uniformTypeIdentifier:String)*/
    XCTAttachment.attachmentWithDataUniformTypeIdentifier = function ($info, payload, identifier) {
        throw 'unsupported method XCTest.(file).XCTAttachment.attachmentWithData(_:Data,uniformTypeIdentifier:String) in ' + this.constructor.name;
    };
    /*XCTest.(file).XCTAttachment.init(string:String)*/
    /*XCTest.(file).XCTAttachment.init(string:String)*/
    XCTAttachment.prototype.initStringString = function ($info, string) {
        throw 'unsupported method XCTest.(file).XCTAttachment.init(string:String) in ' + this.constructor.name;
    };
    /*XCTest.(file).XCTAttachment.attachmentWithString(_:String)*/
    /*XCTest.(file).XCTAttachment.attachmentWithString(_:String)*/
    XCTAttachment.attachmentWithString = function ($info, string) {
        throw 'unsupported method XCTest.(file).XCTAttachment.attachmentWithString(_:String) in ' + this.constructor.name;
    };
    /*XCTest.(file).XCTAttachment.init(archivableObject:NSSecureCoding)*/
    /*XCTest.(file).XCTAttachment.init(archivableObject:NSSecureCoding)*/
    XCTAttachment.prototype.initArchivableObjectNSSecureCoding = function ($info, object) {
        throw 'unsupported method XCTest.(file).XCTAttachment.init(archivableObject:NSSecureCoding) in ' + this.constructor.name;
    };
    /*XCTest.(file).XCTAttachment.attachmentWithArchivableObject(_:NSSecureCoding)*/
    /*XCTest.(file).XCTAttachment.attachmentWithArchivableObject(_:NSSecureCoding)*/
    XCTAttachment.attachmentWithArchivableObject = function ($info, object) {
        throw 'unsupported method XCTest.(file).XCTAttachment.attachmentWithArchivableObject(_:NSSecureCoding) in ' + this.constructor.name;
    };
    /*XCTest.(file).XCTAttachment.init(archivableObject:NSSecureCoding,uniformTypeIdentifier:String)*/
    /*XCTest.(file).XCTAttachment.init(archivableObject:NSSecureCoding,uniformTypeIdentifier:String)*/
    XCTAttachment.prototype.initArchivableObjectNSSecureCodingUniformTypeIdentifierString = function ($info, object, identifier) {
        throw 'unsupported method XCTest.(file).XCTAttachment.init(archivableObject:NSSecureCoding,uniformTypeIdentifier:String) in ' + this.constructor.name;
    };
    /*XCTest.(file).XCTAttachment.attachmentWithArchivableObject(_:NSSecureCoding,uniformTypeIdentifier:String)*/
    /*XCTest.(file).XCTAttachment.attachmentWithArchivableObject(_:NSSecureCoding,uniformTypeIdentifier:String)*/
    XCTAttachment.attachmentWithArchivableObjectUniformTypeIdentifier = function ($info, object, identifier) {
        throw 'unsupported method XCTest.(file).XCTAttachment.attachmentWithArchivableObject(_:NSSecureCoding,uniformTypeIdentifier:String) in ' + this.constructor.name;
    };
    /*XCTest.(file).XCTAttachment.init(plistObject:Any)*/
    /*XCTest.(file).XCTAttachment.init(plistObject:Any)*/
    XCTAttachment.prototype.initPlistObjectprotocol_composition_type = function ($info, object) {
        throw 'unsupported method XCTest.(file).XCTAttachment.init(plistObject:Any) in ' + this.constructor.name;
    };
    /*XCTest.(file).XCTAttachment.attachmentWithPlistObject(_:Any)*/
    /*XCTest.(file).XCTAttachment.attachmentWithPlistObject(_:Any)*/
    XCTAttachment.attachmentWithPlistObject = function ($info, object) {
        throw 'unsupported method XCTest.(file).XCTAttachment.attachmentWithPlistObject(_:Any) in ' + this.constructor.name;
    };
    /*XCTest.(file).XCTAttachment.init(contentsOfFile:URL)*/
    /*XCTest.(file).XCTAttachment.init(contentsOfFile:URL)*/
    XCTAttachment.prototype.initContentsOfFileURL = function ($info, url) {
        throw 'unsupported method XCTest.(file).XCTAttachment.init(contentsOfFile:URL) in ' + this.constructor.name;
    };
    /*XCTest.(file).XCTAttachment.init(contentsOfFileAtURL:URL)*/
    /*XCTest.(file).XCTAttachment.init(contentsOfFileAtURL:URL)*/
    XCTAttachment.prototype.initContentsOfFileAtURLURL = function ($info, url) {
        throw 'unsupported method XCTest.(file).XCTAttachment.init(contentsOfFileAtURL:URL) in ' + this.constructor.name;
    };
    /*XCTest.(file).XCTAttachment.attachmentWithContentsOfFileAtURL(_:URL)*/
    /*XCTest.(file).XCTAttachment.attachmentWithContentsOfFileAtURL(_:URL)*/
    XCTAttachment.attachmentWithContentsOfFileAtURL = function ($info, url) {
        throw 'unsupported method XCTest.(file).XCTAttachment.attachmentWithContentsOfFileAtURL(_:URL) in ' + this.constructor.name;
    };
    /*XCTest.(file).XCTAttachment.init(contentsOfFile:URL,uniformTypeIdentifier:String)*/
    /*XCTest.(file).XCTAttachment.init(contentsOfFile:URL,uniformTypeIdentifier:String)*/
    XCTAttachment.prototype.initContentsOfFileURLUniformTypeIdentifierString = function ($info, url, identifier) {
        throw 'unsupported method XCTest.(file).XCTAttachment.init(contentsOfFile:URL,uniformTypeIdentifier:String) in ' + this.constructor.name;
    };
    /*XCTest.(file).XCTAttachment.init(contentsOfFileAtURL:URL,uniformTypeIdentifier:String)*/
    /*XCTest.(file).XCTAttachment.init(contentsOfFileAtURL:URL,uniformTypeIdentifier:String)*/
    XCTAttachment.prototype.initContentsOfFileAtURLURLUniformTypeIdentifierString = function ($info, url, identifier) {
        throw 'unsupported method XCTest.(file).XCTAttachment.init(contentsOfFileAtURL:URL,uniformTypeIdentifier:String) in ' + this.constructor.name;
    };
    /*XCTest.(file).XCTAttachment.attachmentWithContentsOfFileAtURL(_:URL,uniformTypeIdentifier:String)*/
    /*XCTest.(file).XCTAttachment.attachmentWithContentsOfFileAtURL(_:URL,uniformTypeIdentifier:String)*/
    XCTAttachment.attachmentWithContentsOfFileAtURLUniformTypeIdentifier = function ($info, url, identifier) {
        throw 'unsupported method XCTest.(file).XCTAttachment.attachmentWithContentsOfFileAtURL(_:URL,uniformTypeIdentifier:String) in ' + this.constructor.name;
    };
    /*XCTest.(file).XCTAttachment.init(compressedContentsOfDirectory:URL)*/
    /*XCTest.(file).XCTAttachment.init(compressedContentsOfDirectory:URL)*/
    XCTAttachment.prototype.initCompressedContentsOfDirectoryURL = function ($info, url) {
        throw 'unsupported method XCTest.(file).XCTAttachment.init(compressedContentsOfDirectory:URL) in ' + this.constructor.name;
    };
    /*XCTest.(file).XCTAttachment.init(compressedContentsOfDirectoryAtURL:URL)*/
    /*XCTest.(file).XCTAttachment.init(compressedContentsOfDirectoryAtURL:URL)*/
    XCTAttachment.prototype.initCompressedContentsOfDirectoryAtURLURL = function ($info, url) {
        throw 'unsupported method XCTest.(file).XCTAttachment.init(compressedContentsOfDirectoryAtURL:URL) in ' + this.constructor.name;
    };
    /*XCTest.(file).XCTAttachment.attachmentWithCompressedContentsOfDirectoryAtURL(_:URL)*/
    /*XCTest.(file).XCTAttachment.attachmentWithCompressedContentsOfDirectoryAtURL(_:URL)*/
    XCTAttachment.attachmentWithCompressedContentsOfDirectoryAtURL = function ($info, url) {
        throw 'unsupported method XCTest.(file).XCTAttachment.attachmentWithCompressedContentsOfDirectoryAtURL(_:URL) in ' + this.constructor.name;
    };
    /*XCTest.(file).XCTAttachment.init(image:NSImage)*/
    /*XCTest.(file).XCTAttachment.init(image:NSImage)*/
    XCTAttachment.prototype.initImageNSImage = function ($info, _image) {
        throw 'unsupported method XCTest.(file).XCTAttachment.init(image:NSImage) in ' + this.constructor.name;
    };
    /*XCTest.(file).XCTAttachment.attachmentWithImage(_:NSImage)*/
    /*XCTest.(file).XCTAttachment.attachmentWithImage(_:NSImage)*/
    XCTAttachment.attachmentWithImage = function ($info, _image) {
        throw 'unsupported method XCTest.(file).XCTAttachment.attachmentWithImage(_:NSImage) in ' + this.constructor.name;
    };
    /*XCTest.(file).XCTAttachment.init(image:NSImage,quality:XCTAttachment.ImageQuality)*/
    /*XCTest.(file).XCTAttachment.init(image:NSImage,quality:XCTAttachment.ImageQuality)*/
    XCTAttachment.prototype.initImageNSImageQualityXCTAttachmentImageQuality = function ($info, _image, quality) {
        throw 'unsupported method XCTest.(file).XCTAttachment.init(image:NSImage,quality:XCTAttachment.ImageQuality) in ' + this.constructor.name;
    };
    /*XCTest.(file).XCTAttachment.attachmentWithImage(_:NSImage,quality:XCTAttachment.ImageQuality)*/
    /*XCTest.(file).XCTAttachment.attachmentWithImage(_:NSImage,quality:XCTAttachment.ImageQuality)*/
    XCTAttachment.attachmentWithImageQuality = function ($info, _image, quality) {
        throw 'unsupported method XCTest.(file).XCTAttachment.attachmentWithImage(_:NSImage,quality:XCTAttachment.ImageQuality) in ' + this.constructor.name;
    };
    /*XCTest.(file).XCTAttachment.init(screenshot:XCUIScreenshot)*/
    /*XCTest.(file).XCTAttachment.init(screenshot:XCUIScreenshot)*/
    XCTAttachment.prototype.initScreenshotXCUIScreenshot = function ($info, screenshot) {
        throw 'unsupported method XCTest.(file).XCTAttachment.init(screenshot:XCUIScreenshot) in ' + this.constructor.name;
    };
    /*XCTest.(file).XCTAttachment.attachmentWithScreenshot(_:XCUIScreenshot)*/
    /*XCTest.(file).XCTAttachment.attachmentWithScreenshot(_:XCUIScreenshot)*/
    XCTAttachment.attachmentWithScreenshot = function ($info, screenshot) {
        throw 'unsupported method XCTest.(file).XCTAttachment.attachmentWithScreenshot(_:XCUIScreenshot) in ' + this.constructor.name;
    };
    /*XCTest.(file).XCTAttachment.init(screenshot:XCUIScreenshot,quality:XCTAttachment.ImageQuality)*/
    /*XCTest.(file).XCTAttachment.init(screenshot:XCUIScreenshot,quality:XCTAttachment.ImageQuality)*/
    XCTAttachment.prototype.initScreenshotXCUIScreenshotQualityXCTAttachmentImageQuality = function ($info, screenshot, quality) {
        throw 'unsupported method XCTest.(file).XCTAttachment.init(screenshot:XCUIScreenshot,quality:XCTAttachment.ImageQuality) in ' + this.constructor.name;
    };
    /*XCTest.(file).XCTAttachment.attachmentWithScreenshot(_:XCUIScreenshot,quality:XCTAttachment.ImageQuality)*/
    /*XCTest.(file).XCTAttachment.attachmentWithScreenshot(_:XCUIScreenshot,quality:XCTAttachment.ImageQuality)*/
    XCTAttachment.attachmentWithScreenshotQuality = function ($info, screenshot, quality) {
        throw 'unsupported method XCTest.(file).XCTAttachment.attachmentWithScreenshot(_:XCUIScreenshot,quality:XCTAttachment.ImageQuality) in ' + this.constructor.name;
    };
    XCTAttachment.prototype.init$vars = function () {
        if (_super.prototype.init$vars)
            _super.prototype.init$vars.call(this);
    };
    var _161, _162;
    XCTAttachment.$infoAddress = '';
    XCTAttachment.initCoderNSCoder$failable = true;
    XCTAttachment.ImageQuality = (_161 = /** @class */ (function () {
            function class_185() {
            }
            /*XCTest.(file).XCTAttachment.ImageQuality.init(rawValue:Int)*/
            /*XCTest.(file).XCTAttachment.ImageQuality.init(rawValue:Int)*/
            class_185.prototype.initRawValueInt = function ($info, rawValue) {
                throw 'unsupported method XCTest.(file).XCTAttachment.ImageQuality.init(rawValue:Int) in ' + this.constructor.name;
            };
            /*XCTest.(file).XCTAttachment.ImageQuality.rawValue*/
            class_185.prototype.rawValue$get = function () {
                throw 'unsupported variable XCTest.(file).XCTAttachment.ImageQuality.rawValue in ' + this.constructor.name;
            };
            Object.defineProperty(class_185.prototype, "rawValue", {
                get: function () { return this.rawValue$get(); },
                enumerable: true,
                configurable: true
            });
            ;
            Object.defineProperty(class_185, "original", {
                get: function () { return Object.assign(new XCTAttachment.ImageQuality(), __assign({ rawValue: 0 }, Array.from(arguments).slice(1))); },
                enumerable: true,
                configurable: true
            });
            Object.defineProperty(class_185, "medium", {
                get: function () { return Object.assign(new XCTAttachment.ImageQuality(), __assign({ rawValue: 1 }, Array.from(arguments).slice(1))); },
                enumerable: true,
                configurable: true
            });
            Object.defineProperty(class_185, "low", {
                get: function () { return Object.assign(new XCTAttachment.ImageQuality(), __assign({ rawValue: 2 }, Array.from(arguments).slice(1))); },
                enumerable: true,
                configurable: true
            });
            class_185.prototype.init$vars = function () {
            };
            return class_185;
        }()),
        _161.$infoAddress = '',
        _161.initRawValueInt$failable = true,
        _161);
    XCTAttachment.Lifetime = (_162 = /** @class */ (function () {
            function class_186() {
            }
            /*XCTest.(file).XCTAttachment.Lifetime.init(rawValue:Int)*/
            /*XCTest.(file).XCTAttachment.Lifetime.init(rawValue:Int)*/
            class_186.prototype.initRawValueInt = function ($info, rawValue) {
                throw 'unsupported method XCTest.(file).XCTAttachment.Lifetime.init(rawValue:Int) in ' + this.constructor.name;
            };
            /*XCTest.(file).XCTAttachment.Lifetime.rawValue*/
            class_186.prototype.rawValue$get = function () {
                throw 'unsupported variable XCTest.(file).XCTAttachment.Lifetime.rawValue in ' + this.constructor.name;
            };
            Object.defineProperty(class_186.prototype, "rawValue", {
                get: function () { return this.rawValue$get(); },
                enumerable: true,
                configurable: true
            });
            ;
            Object.defineProperty(class_186, "keepAlways", {
                get: function () { return Object.assign(new XCTAttachment.Lifetime(), __assign({ rawValue: 0 }, Array.from(arguments).slice(1))); },
                enumerable: true,
                configurable: true
            });
            Object.defineProperty(class_186, "deleteOnSuccess", {
                get: function () { return Object.assign(new XCTAttachment.Lifetime(), __assign({ rawValue: 1 }, Array.from(arguments).slice(1))); },
                enumerable: true,
                configurable: true
            });
            class_186.prototype.init$vars = function () {
            };
            return class_186;
        }()),
        _162.$infoAddress = '',
        _162.initRawValueInt$failable = true,
        _162);
    return XCTAttachment;
}(NSObject));
_mixin(XCTAttachment.ImageQuality, _DefaultEnumImplementation, false);
_mixin(XCTAttachment.Lifetime, _DefaultEnumImplementation, false);
if (typeof NSSecureCoding$implementation != 'undefined')
    _mixin(XCTAttachment, NSSecureCoding$implementation, false);
var XCTContext = /** @class */ (function (_super) {
    __extends(XCTContext, _super);
    function XCTContext() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    /*XCTest.(file).XCTContext.init()*/
    /*ObjectiveC.(file).NSObject.init()*/
    XCTContext.prototype.init = function ($info) {
    };
    /*XCTest.(file).XCTContext.runActivity(named:String,block:(XCTActivity) throws -> Result)*/
    /*XCTest.(file).XCTContext.runActivity(named:String,block:(XCTActivity) throws -> Result)*/
    XCTContext.runActivityNamedBlock = function ($info, _name, block) {
        throw 'unsupported method XCTest.(file).XCTContext.runActivity(named:String,block:(XCTActivity) throws -> Result) in ' + this.constructor.name;
    };
    XCTContext.prototype.init$vars = function () {
        if (_super.prototype.init$vars)
            _super.prototype.init$vars.call(this);
    };
    XCTContext.$infoAddress = '';
    return XCTContext;
}(NSObject));
var XCTPerformanceMetric = /** @class */ (function () {
    function XCTPerformanceMetric() {
    }
    /*XCTest.(file).XCTPerformanceMetric.init(_:String)*/
    /*XCTest.(file).XCTPerformanceMetric.init(_:String)*/
    XCTPerformanceMetric.prototype.initString = function ($info, rawValue) {
        throw 'unsupported method XCTest.(file).XCTPerformanceMetric.init(_:String) in ' + this.constructor.name;
    };
    /*XCTest.(file).XCTPerformanceMetric.init(rawValue:String)*/
    /*XCTest.(file).XCTPerformanceMetric.init(rawValue:String)*/
    XCTPerformanceMetric.prototype.initRawValueString = function ($info, rawValue) {
        throw 'unsupported method XCTest.(file).XCTPerformanceMetric.init(rawValue:String) in ' + this.constructor.name;
    };
    /*XCTest.(file).XCTPerformanceMetric.rawValue*/
    XCTPerformanceMetric.prototype.rawValue$get = function () {
        throw 'unsupported variable XCTest.(file).XCTPerformanceMetric.rawValue in ' + this.constructor.name;
    };
    Object.defineProperty(XCTPerformanceMetric.prototype, "rawValue", {
        get: function () { return this.rawValue$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    XCTPerformanceMetric.prototype.init$vars = function () {
    };
    XCTPerformanceMetric.$struct = true;
    XCTPerformanceMetric.$infoAddress = '';
    return XCTPerformanceMetric;
}());
var XCTWaiter = /** @class */ (function (_super) {
    __extends(XCTWaiter, _super);
    function XCTWaiter() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    /*XCTest.(file).XCTWaiter.init(delegate:XCTWaiterDelegate?)*/
    /*XCTest.(file).XCTWaiter.init(delegate:XCTWaiterDelegate?)*/
    XCTWaiter.prototype.initDelegateOptional = function ($info, delegate) {
        throw 'unsupported method XCTest.(file).XCTWaiter.init(delegate:XCTWaiterDelegate?) in ' + this.constructor.name;
    };
    /*XCTest.(file).XCTWaiter.wait(for:[XCTestExpectation],timeout:TimeInterval)*/
    /*XCTest.(file).XCTWaiter.wait(for:[XCTestExpectation],timeout:TimeInterval)*/
    XCTWaiter.prototype.waitForTimeout = function ($info, expectations, seconds) {
        throw 'unsupported method XCTest.(file).XCTWaiter.wait(for:[XCTestExpectation],timeout:TimeInterval) in ' + this.constructor.name;
    };
    /*XCTest.(file).XCTWaiter.waitForExpectations(_:[XCTestExpectation],timeout:TimeInterval)*/
    /*XCTest.(file).XCTWaiter.waitForExpectations(_:[XCTestExpectation],timeout:TimeInterval)*/
    XCTWaiter.prototype.waitForExpectationsTimeout = function ($info, expectations, seconds) {
        throw 'unsupported method XCTest.(file).XCTWaiter.waitForExpectations(_:[XCTestExpectation],timeout:TimeInterval) in ' + this.constructor.name;
    };
    /*XCTest.(file).XCTWaiter.wait(for:[XCTestExpectation],timeout:TimeInterval,enforceOrder:Bool)*/
    /*XCTest.(file).XCTWaiter.wait(for:[XCTestExpectation],timeout:TimeInterval,enforceOrder:Bool)*/
    XCTWaiter.prototype.waitForTimeoutEnforceOrder = function ($info, expectations, seconds, enforceOrderOfFulfillment) {
        throw 'unsupported method XCTest.(file).XCTWaiter.wait(for:[XCTestExpectation],timeout:TimeInterval,enforceOrder:Bool) in ' + this.constructor.name;
    };
    /*XCTest.(file).XCTWaiter.waitForExpectations(_:[XCTestExpectation],timeout:TimeInterval,enforceOrder:Bool)*/
    /*XCTest.(file).XCTWaiter.waitForExpectations(_:[XCTestExpectation],timeout:TimeInterval,enforceOrder:Bool)*/
    XCTWaiter.prototype.waitForExpectationsTimeoutEnforceOrder = function ($info, expectations, seconds, enforceOrderOfFulfillment) {
        throw 'unsupported method XCTest.(file).XCTWaiter.waitForExpectations(_:[XCTestExpectation],timeout:TimeInterval,enforceOrder:Bool) in ' + this.constructor.name;
    };
    /*XCTest.(file).XCTWaiter.wait(for:[XCTestExpectation],timeout:TimeInterval)*/
    /*XCTest.(file).XCTWaiter.wait(for:[XCTestExpectation],timeout:TimeInterval)*/
    XCTWaiter.waitForTimeout = function ($info, expectations, seconds) {
        throw 'unsupported method XCTest.(file).XCTWaiter.wait(for:[XCTestExpectation],timeout:TimeInterval) in ' + this.constructor.name;
    };
    /*XCTest.(file).XCTWaiter.waitForExpectations(_:[XCTestExpectation],timeout:TimeInterval)*/
    /*XCTest.(file).XCTWaiter.waitForExpectations(_:[XCTestExpectation],timeout:TimeInterval)*/
    XCTWaiter.waitForExpectationsTimeout = function ($info, expectations, seconds) {
        throw 'unsupported method XCTest.(file).XCTWaiter.waitForExpectations(_:[XCTestExpectation],timeout:TimeInterval) in ' + this.constructor.name;
    };
    /*XCTest.(file).XCTWaiter.wait(for:[XCTestExpectation],timeout:TimeInterval,enforceOrder:Bool)*/
    /*XCTest.(file).XCTWaiter.wait(for:[XCTestExpectation],timeout:TimeInterval,enforceOrder:Bool)*/
    XCTWaiter.waitForTimeoutEnforceOrder = function ($info, expectations, seconds, enforceOrderOfFulfillment) {
        throw 'unsupported method XCTest.(file).XCTWaiter.wait(for:[XCTestExpectation],timeout:TimeInterval,enforceOrder:Bool) in ' + this.constructor.name;
    };
    /*XCTest.(file).XCTWaiter.waitForExpectations(_:[XCTestExpectation],timeout:TimeInterval,enforceOrder:Bool)*/
    /*XCTest.(file).XCTWaiter.waitForExpectations(_:[XCTestExpectation],timeout:TimeInterval,enforceOrder:Bool)*/
    XCTWaiter.waitForExpectationsTimeoutEnforceOrder = function ($info, expectations, seconds, enforceOrderOfFulfillment) {
        throw 'unsupported method XCTest.(file).XCTWaiter.waitForExpectations(_:[XCTestExpectation],timeout:TimeInterval,enforceOrder:Bool) in ' + this.constructor.name;
    };
    /*XCTest.(file).XCTWaiter.init()*/
    /*ObjectiveC.(file).NSObject.init()*/
    XCTWaiter.prototype.init = function ($info) {
    };
    XCTWaiter.prototype.init$vars = function () {
        if (_super.prototype.init$vars)
            _super.prototype.init$vars.call(this);
    };
    var _163;
    XCTWaiter.$infoAddress = '';
    XCTWaiter.Result = (_163 = /** @class */ (function () {
            function class_187() {
            }
            /*XCTest.(file).XCTWaiter.Result.init(rawValue:Int)*/
            /*XCTest.(file).XCTWaiter.Result.init(rawValue:Int)*/
            class_187.prototype.initRawValueInt = function ($info, rawValue) {
                throw 'unsupported method XCTest.(file).XCTWaiter.Result.init(rawValue:Int) in ' + this.constructor.name;
            };
            /*XCTest.(file).XCTWaiter.Result.rawValue*/
            class_187.prototype.rawValue$get = function () {
                throw 'unsupported variable XCTest.(file).XCTWaiter.Result.rawValue in ' + this.constructor.name;
            };
            Object.defineProperty(class_187.prototype, "rawValue", {
                get: function () { return this.rawValue$get(); },
                enumerable: true,
                configurable: true
            });
            ;
            Object.defineProperty(class_187, "completed", {
                get: function () { return Object.assign(new XCTWaiter.Result(), __assign({ rawValue: 1 }, Array.from(arguments).slice(1))); },
                enumerable: true,
                configurable: true
            });
            Object.defineProperty(class_187, "timedOut", {
                get: function () { return Object.assign(new XCTWaiter.Result(), __assign({ rawValue: 2 }, Array.from(arguments).slice(1))); },
                enumerable: true,
                configurable: true
            });
            Object.defineProperty(class_187, "incorrectOrder", {
                get: function () { return Object.assign(new XCTWaiter.Result(), __assign({ rawValue: 3 }, Array.from(arguments).slice(1))); },
                enumerable: true,
                configurable: true
            });
            Object.defineProperty(class_187, "invertedFulfillment", {
                get: function () { return Object.assign(new XCTWaiter.Result(), __assign({ rawValue: 4 }, Array.from(arguments).slice(1))); },
                enumerable: true,
                configurable: true
            });
            Object.defineProperty(class_187, "interrupted", {
                get: function () { return Object.assign(new XCTWaiter.Result(), __assign({ rawValue: 5 }, Array.from(arguments).slice(1))); },
                enumerable: true,
                configurable: true
            });
            class_187.prototype.init$vars = function () {
            };
            return class_187;
        }()),
        _163.$infoAddress = '',
        _163.initRawValueInt$failable = true,
        _163);
    return XCTWaiter;
}(NSObject));
_mixin(XCTWaiter.Result, _DefaultEnumImplementation, false);
var XCTWaiterDelegate$implementation = /** @class */ (function () {
    function XCTWaiterDelegate$implementation() {
    }
    return XCTWaiterDelegate$implementation;
}());
if (typeof NSObjectProtocol$implementation != 'undefined')
    _mixin(XCTWaiterDelegate$implementation, NSObjectProtocol$implementation, false);
var XCTest = /** @class */ (function (_super) {
    __extends(XCTest, _super);
    function XCTest() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    /*XCTest.(file).XCTest.perform(_:XCTestRun)*/
    /*XCTest.(file).XCTest.perform(_:XCTestRun)*/
    XCTest.prototype.perform = function ($info, run) {
        throw 'unsupported method XCTest.(file).XCTest.perform(_:XCTestRun) in ' + this.constructor.name;
    };
    /*XCTest.(file).XCTest.performTest(_:XCTestRun)*/
    /*XCTest.(file).XCTest.performTest(_:XCTestRun)*/
    XCTest.prototype.performTest = function ($info, run) {
        throw 'unsupported method XCTest.(file).XCTest.performTest(_:XCTestRun) in ' + this.constructor.name;
    };
    /*XCTest.(file).XCTest.run()*/
    /*XCTest.(file).XCTest.run()*/
    XCTest.prototype.run = function ($info) {
        throw 'unsupported method XCTest.(file).XCTest.run() in ' + this.constructor.name;
    };
    /*XCTest.(file).XCTest.runTest()*/
    /*XCTest.(file).XCTest.runTest()*/
    XCTest.prototype.runTest = function ($info) {
        throw 'unsupported method XCTest.(file).XCTest.runTest() in ' + this.constructor.name;
    };
    /*XCTest.(file).XCTest.setUp()*/
    /*XCTest.(file).XCTest.setUp()*/
    XCTest.prototype.setUp = function ($info) {
    };
    /*XCTest.(file).XCTest.tearDown()*/
    /*XCTest.(file).XCTest.tearDown()*/
    XCTest.prototype.tearDown = function ($info) {
    };
    /*XCTest.(file).XCTest.init()*/
    /*ObjectiveC.(file).NSObject.init()*/
    XCTest.prototype.init = function ($info) {
    };
    XCTest.prototype.init$vars = function () {
        if (_super.prototype.init$vars)
            _super.prototype.init$vars.call(this);
    };
    XCTest.$infoAddress = '';
    return XCTest;
}(NSObject));
var XCTestCase = /** @class */ (function (_super) {
    __extends(XCTestCase, _super);
    function XCTestCase() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    /*XCTest.(file).XCTestCase.init(invocation:NSInvocation?)*/
    /*XCTest.(file).XCTestCase.init(invocation:NSInvocation?)*/
    XCTestCase.prototype.initInvocationOptional = function ($info, invocation) {
        throw 'unsupported method XCTest.(file).XCTestCase.init(invocation:NSInvocation?) in ' + this.constructor.name;
    };
    /*XCTest.(file).XCTestCase.testCaseWithInvocation(_:NSInvocation?)*/
    /*XCTest.(file).XCTestCase.testCaseWithInvocation(_:NSInvocation?)*/
    XCTestCase.testCaseWithInvocation = function ($info, invocation) {
        throw 'unsupported method XCTest.(file).XCTestCase.testCaseWithInvocation(_:NSInvocation?) in ' + this.constructor.name;
    };
    /*XCTest.(file).XCTestCase.init(invocation:NSInvocation?)*/
    /*XCTest.(file).XCTestCase.init(invocation:NSInvocation?)*/
    XCTestCase.prototype.initInvocationOptional = function ($info, invocation) {
        throw 'unsupported method XCTest.(file).XCTestCase.init(invocation:NSInvocation?) in ' + this.constructor.name;
    };
    /*XCTest.(file).XCTestCase.init(selector:Selector)*/
    /*XCTest.(file).XCTestCase.init(selector:Selector)*/
    XCTestCase.prototype.initSelectorSelector = function ($info, selector) {
        throw 'unsupported method XCTest.(file).XCTestCase.init(selector:Selector) in ' + this.constructor.name;
    };
    /*XCTest.(file).XCTestCase.testCaseWithSelector(_:Selector)*/
    /*XCTest.(file).XCTestCase.testCaseWithSelector(_:Selector)*/
    XCTestCase.testCaseWithSelector = function ($info, selector) {
        throw 'unsupported method XCTest.(file).XCTestCase.testCaseWithSelector(_:Selector) in ' + this.constructor.name;
    };
    /*XCTest.(file).XCTestCase.init(selector:Selector)*/
    /*XCTest.(file).XCTestCase.init(selector:Selector)*/
    XCTestCase.prototype.initSelectorSelector = function ($info, selector) {
        throw 'unsupported method XCTest.(file).XCTestCase.init(selector:Selector) in ' + this.constructor.name;
    };
    /*XCTest.(file).XCTestCase.invokeTest()*/
    /*XCTest.(file).XCTestCase.invokeTest()*/
    XCTestCase.prototype.invokeTest = function ($info) {
        throw 'unsupported method XCTest.(file).XCTestCase.invokeTest() in ' + this.constructor.name;
    };
    /*XCTest.(file).XCTestCase.recordFailure(withDescription:String,inFile:String,atLine:Int,expected:Bool)*/
    /*XCTest.(file).XCTestCase.recordFailure(withDescription:String,inFile:String,atLine:Int,expected:Bool)*/
    XCTestCase.prototype.recordFailureWithDescriptionInFileAtLineExpected = function ($info, description, filePath, lineNumber, expected) {
        throw 'unsupported method XCTest.(file).XCTestCase.recordFailure(withDescription:String,inFile:String,atLine:Int,expected:Bool) in ' + this.constructor.name;
    };
    /*XCTest.(file).XCTestCase.recordFailureWithDescription(_:String,inFile:String,atLine:Int,expected:Bool)*/
    /*XCTest.(file).XCTestCase.recordFailureWithDescription(_:String,inFile:String,atLine:Int,expected:Bool)*/
    XCTestCase.prototype.recordFailureWithDescriptionInFileAtLineExpected = function ($info, description, filePath, lineNumber, expected) {
        throw 'unsupported method XCTest.(file).XCTestCase.recordFailureWithDescription(_:String,inFile:String,atLine:Int,expected:Bool) in ' + this.constructor.name;
    };
    /*XCTest.(file).XCTestCase.addTeardownBlock(_:() -> Void)*/
    /*XCTest.(file).XCTestCase.addTeardownBlock(_:() -> Void)*/
    XCTestCase.prototype.addTeardownBlock = function ($info, block) {
        throw 'unsupported method XCTest.(file).XCTestCase.addTeardownBlock(_:() -> Void) in ' + this.constructor.name;
    };
    /*XCTest.(file).XCTestCase.measure(_:() -> Void)*/
    /*XCTest.(file).XCTestCase.measure(_:() -> Void)*/
    XCTestCase.prototype.measure = function ($info, block) {
    };
    /*XCTest.(file).XCTestCase.measureBlock(_:() -> Void)*/
    /*XCTest.(file).XCTestCase.measureBlock(_:() -> Void)*/
    XCTestCase.prototype.measureBlock = function ($info, block) {
        throw 'unsupported method XCTest.(file).XCTestCase.measureBlock(_:() -> Void) in ' + this.constructor.name;
    };
    /*XCTest.(file).XCTestCase.measureMetrics(_:[XCTPerformanceMetric],automaticallyStartMeasuring:Bool,for:() -> Void)*/
    /*XCTest.(file).XCTestCase.measureMetrics(_:[XCTPerformanceMetric],automaticallyStartMeasuring:Bool,for:() -> Void)*/
    XCTestCase.prototype.measureMetricsAutomaticallyStartMeasuringFor = function ($info, metrics, automaticallyStartMeasuring, block) {
        throw 'unsupported method XCTest.(file).XCTestCase.measureMetrics(_:[XCTPerformanceMetric],automaticallyStartMeasuring:Bool,for:() -> Void) in ' + this.constructor.name;
    };
    /*XCTest.(file).XCTestCase.measureMetrics(_:[XCTPerformanceMetric],automaticallyStartMeasuring:Bool,forBlock:() -> Void)*/
    /*XCTest.(file).XCTestCase.measureMetrics(_:[XCTPerformanceMetric],automaticallyStartMeasuring:Bool,forBlock:() -> Void)*/
    XCTestCase.prototype.measureMetricsAutomaticallyStartMeasuringForBlock = function ($info, metrics, automaticallyStartMeasuring, block) {
        throw 'unsupported method XCTest.(file).XCTestCase.measureMetrics(_:[XCTPerformanceMetric],automaticallyStartMeasuring:Bool,forBlock:() -> Void) in ' + this.constructor.name;
    };
    /*XCTest.(file).XCTestCase.startMeasuring()*/
    /*XCTest.(file).XCTestCase.startMeasuring()*/
    XCTestCase.prototype.startMeasuring = function ($info) {
        throw 'unsupported method XCTest.(file).XCTestCase.startMeasuring() in ' + this.constructor.name;
    };
    /*XCTest.(file).XCTestCase.stopMeasuring()*/
    /*XCTest.(file).XCTestCase.stopMeasuring()*/
    XCTestCase.prototype.stopMeasuring = function ($info) {
        throw 'unsupported method XCTest.(file).XCTestCase.stopMeasuring() in ' + this.constructor.name;
    };
    /*XCTest.(file).XCTestCase.addUIInterruptionMonitor(withDescription:String,handler:(XCUIElement) -> Bool)*/
    /*XCTest.(file).XCTestCase.addUIInterruptionMonitor(withDescription:String,handler:(XCUIElement) -> Bool)*/
    XCTestCase.prototype.addUIInterruptionMonitorWithDescriptionHandler = function ($info, handlerDescription, handler) {
        throw 'unsupported method XCTest.(file).XCTestCase.addUIInterruptionMonitor(withDescription:String,handler:(XCUIElement) -> Bool) in ' + this.constructor.name;
    };
    /*XCTest.(file).XCTestCase.addUIInterruptionMonitorWithDescription(_:String,handler:(XCUIElement) -> Bool)*/
    /*XCTest.(file).XCTestCase.addUIInterruptionMonitorWithDescription(_:String,handler:(XCUIElement) -> Bool)*/
    XCTestCase.prototype.addUIInterruptionMonitorWithDescriptionHandler = function ($info, handlerDescription, handler) {
        throw 'unsupported method XCTest.(file).XCTestCase.addUIInterruptionMonitorWithDescription(_:String,handler:(XCUIElement) -> Bool) in ' + this.constructor.name;
    };
    /*XCTest.(file).XCTestCase.removeUIInterruptionMonitor(_:NSObjectProtocol)*/
    /*XCTest.(file).XCTestCase.removeUIInterruptionMonitor(_:NSObjectProtocol)*/
    XCTestCase.prototype.removeUIInterruptionMonitor = function ($info, monitor) {
        throw 'unsupported method XCTest.(file).XCTestCase.removeUIInterruptionMonitor(_:NSObjectProtocol) in ' + this.constructor.name;
    };
    /*XCTest.(file).XCTestCase.init()*/
    /*ObjectiveC.(file).NSObject.init()*/
    XCTestCase.prototype.init = function ($info) {
        var proto = Object.getPrototypeOf(this);
        var protoKeys = Object.keys(proto);
        for (var _i = 0, protoKeys_1 = protoKeys; _i < protoKeys_1.length; _i++) {
            var testFunction = protoKeys_1[_i];
            if (!testFunction.startsWith('test') || testFunction.endsWith('$get') || testFunction.endsWith('$set') || typeof Object.getOwnPropertyDescriptor(proto, testFunction).value !== 'function' || this[testFunction].length !== 1)
                continue;
            this.init$vars();
            if (this.setUp)
                this.setUp();
            this[testFunction]();
            if (this.tearDown)
                this.tearDown();
        }
    };
    /*XCTest.(file).XCTestCase.setUp()*/
    /*XCTest.(file).XCTestCase.setUp()*/
    XCTestCase.setUp = function ($info) {
        throw 'unsupported method XCTest.(file).XCTestCase.setUp() in ' + this.constructor.name;
    };
    /*XCTest.(file).XCTestCase.tearDown()*/
    /*XCTest.(file).XCTestCase.tearDown()*/
    XCTestCase.tearDown = function ($info) {
        throw 'unsupported method XCTest.(file).XCTestCase.tearDown() in ' + this.constructor.name;
    };
    /*XCTest.(file).XCTestCase.add(_:XCTAttachment)*/
    /*XCTest.(file).XCTestCase.add(_:XCTAttachment)*/
    XCTestCase.prototype.add = function ($info, attachment) {
        throw 'unsupported method XCTest.(file).XCTestCase.add(_:XCTAttachment) in ' + this.constructor.name;
    };
    /*XCTest.(file).XCTestCase.expectation(description:String)*/
    /*XCTest.(file).XCTestCase.expectation(description:String)*/
    XCTestCase.prototype.expectationDescription = function ($info, description) {
        throw 'unsupported method XCTest.(file).XCTestCase.expectation(description:String) in ' + this.constructor.name;
    };
    /*XCTest.(file).XCTestCase.expectationWithDescription(_:String)*/
    /*XCTest.(file).XCTestCase.expectationWithDescription(_:String)*/
    XCTestCase.prototype.expectationWithDescription = function ($info, description) {
        throw 'unsupported method XCTest.(file).XCTestCase.expectationWithDescription(_:String) in ' + this.constructor.name;
    };
    /*XCTest.(file).XCTestCase.waitForExpectations(timeout:TimeInterval,handler:XCWaitCompletionHandler?)*/
    /*XCTest.(file).XCTestCase.waitForExpectations(timeout:TimeInterval,handler:XCWaitCompletionHandler?)*/
    XCTestCase.prototype.waitForExpectationsTimeoutHandler = function ($info, timeout, handler) {
        throw 'unsupported method XCTest.(file).XCTestCase.waitForExpectations(timeout:TimeInterval,handler:XCWaitCompletionHandler?) in ' + this.constructor.name;
    };
    /*XCTest.(file).XCTestCase.waitForExpectationsWithTimeout(_:TimeInterval,handler:XCWaitCompletionHandler?)*/
    /*XCTest.(file).XCTestCase.waitForExpectationsWithTimeout(_:TimeInterval,handler:XCWaitCompletionHandler?)*/
    XCTestCase.prototype.waitForExpectationsWithTimeoutHandler = function ($info, timeout, handler) {
        throw 'unsupported method XCTest.(file).XCTestCase.waitForExpectationsWithTimeout(_:TimeInterval,handler:XCWaitCompletionHandler?) in ' + this.constructor.name;
    };
    /*XCTest.(file).XCTestCase.wait(for:[XCTestExpectation],timeout:TimeInterval)*/
    /*XCTest.(file).XCTestCase.wait(for:[XCTestExpectation],timeout:TimeInterval)*/
    XCTestCase.prototype.waitForTimeout = function ($info, expectations, seconds) {
        throw 'unsupported method XCTest.(file).XCTestCase.wait(for:[XCTestExpectation],timeout:TimeInterval) in ' + this.constructor.name;
    };
    /*XCTest.(file).XCTestCase.waitForExpectations(_:[XCTestExpectation],timeout:TimeInterval)*/
    /*XCTest.(file).XCTestCase.waitForExpectations(_:[XCTestExpectation],timeout:TimeInterval)*/
    XCTestCase.prototype.waitForExpectationsTimeout = function ($info, expectations, seconds) {
        throw 'unsupported method XCTest.(file).XCTestCase.waitForExpectations(_:[XCTestExpectation],timeout:TimeInterval) in ' + this.constructor.name;
    };
    /*XCTest.(file).XCTestCase.wait(for:[XCTestExpectation],timeout:TimeInterval,enforceOrder:Bool)*/
    /*XCTest.(file).XCTestCase.wait(for:[XCTestExpectation],timeout:TimeInterval,enforceOrder:Bool)*/
    XCTestCase.prototype.waitForTimeoutEnforceOrder = function ($info, expectations, seconds, enforceOrderOfFulfillment) {
        throw 'unsupported method XCTest.(file).XCTestCase.wait(for:[XCTestExpectation],timeout:TimeInterval,enforceOrder:Bool) in ' + this.constructor.name;
    };
    /*XCTest.(file).XCTestCase.waitForExpectations(_:[XCTestExpectation],timeout:TimeInterval,enforceOrder:Bool)*/
    /*XCTest.(file).XCTestCase.waitForExpectations(_:[XCTestExpectation],timeout:TimeInterval,enforceOrder:Bool)*/
    XCTestCase.prototype.waitForExpectationsTimeoutEnforceOrder = function ($info, expectations, seconds, enforceOrderOfFulfillment) {
        throw 'unsupported method XCTest.(file).XCTestCase.waitForExpectations(_:[XCTestExpectation],timeout:TimeInterval,enforceOrder:Bool) in ' + this.constructor.name;
    };
    /*XCTest.(file).XCTestCase.keyValueObservingExpectation(for:Any,keyPath:String,expectedValue:Any?)*/
    /*XCTest.(file).XCTestCase.keyValueObservingExpectation(for:Any,keyPath:String,expectedValue:Any?)*/
    XCTestCase.prototype.keyValueObservingExpectationForKeyPathExpectedValue = function ($info, objectToObserve, keyPath, expectedValue) {
        throw 'unsupported method XCTest.(file).XCTestCase.keyValueObservingExpectation(for:Any,keyPath:String,expectedValue:Any?) in ' + this.constructor.name;
    };
    /*XCTest.(file).XCTestCase.keyValueObservingExpectationForObject(_:Any,keyPath:String,expectedValue:Any?)*/
    /*XCTest.(file).XCTestCase.keyValueObservingExpectationForObject(_:Any,keyPath:String,expectedValue:Any?)*/
    XCTestCase.prototype.keyValueObservingExpectationForObjectKeyPathExpectedValue = function ($info, objectToObserve, keyPath, expectedValue) {
        throw 'unsupported method XCTest.(file).XCTestCase.keyValueObservingExpectationForObject(_:Any,keyPath:String,expectedValue:Any?) in ' + this.constructor.name;
    };
    /*XCTest.(file).XCTestCase.keyValueObservingExpectation(for:Any,keyPath:String,handler:XCTKVOExpectation.Handler?)*/
    /*XCTest.(file).XCTestCase.keyValueObservingExpectation(for:Any,keyPath:String,handler:XCTKVOExpectation.Handler?)*/
    XCTestCase.prototype.keyValueObservingExpectationForKeyPathHandler = function ($info, objectToObserve, keyPath, handler) {
        throw 'unsupported method XCTest.(file).XCTestCase.keyValueObservingExpectation(for:Any,keyPath:String,handler:XCTKVOExpectation.Handler?) in ' + this.constructor.name;
    };
    /*XCTest.(file).XCTestCase.keyValueObservingExpectationForObject(_:Any,keyPath:String,handler:XCTKVOExpectation.Handler?)*/
    /*XCTest.(file).XCTestCase.keyValueObservingExpectationForObject(_:Any,keyPath:String,handler:XCTKVOExpectation.Handler?)*/
    XCTestCase.prototype.keyValueObservingExpectationForObjectKeyPathHandler = function ($info, objectToObserve, keyPath, handler) {
        throw 'unsupported method XCTest.(file).XCTestCase.keyValueObservingExpectationForObject(_:Any,keyPath:String,handler:XCTKVOExpectation.Handler?) in ' + this.constructor.name;
    };
    /*XCTest.(file).XCTestCase.expectation(forNotification:NSNotification.Name,object:Any?,handler:XCTNSNotificationExpectation.Handler?)*/
    /*XCTest.(file).XCTestCase.expectation(forNotification:NSNotification.Name,object:Any?,handler:XCTNSNotificationExpectation.Handler?)*/
    XCTestCase.prototype.expectationForNotificationObjectHandler = function ($info, notificationName, objectToObserve, handler) {
        throw 'unsupported method XCTest.(file).XCTestCase.expectation(forNotification:NSNotification.Name,object:Any?,handler:XCTNSNotificationExpectation.Handler?) in ' + this.constructor.name;
    };
    /*XCTest.(file).XCTestCase.expectationForNotification(_:NSNotification.Name,object:Any?,handler:XCTNSNotificationExpectation.Handler?)*/
    /*XCTest.(file).XCTestCase.expectationForNotification(_:NSNotification.Name,object:Any?,handler:XCTNSNotificationExpectation.Handler?)*/
    XCTestCase.prototype.expectationForNotificationObjectHandler = function ($info, notificationName, objectToObserve, handler) {
        throw 'unsupported method XCTest.(file).XCTestCase.expectationForNotification(_:NSNotification.Name,object:Any?,handler:XCTNSNotificationExpectation.Handler?) in ' + this.constructor.name;
    };
    /*XCTest.(file).XCTestCase.expectation(for:NSPredicate,evaluatedWith:Any,handler:XCTNSPredicateExpectation.Handler?)*/
    /*XCTest.(file).XCTestCase.expectation(for:NSPredicate,evaluatedWith:Any,handler:XCTNSPredicateExpectation.Handler?)*/
    XCTestCase.prototype.expectationForEvaluatedWithHandler = function ($info, predicate, object, handler) {
        throw 'unsupported method XCTest.(file).XCTestCase.expectation(for:NSPredicate,evaluatedWith:Any,handler:XCTNSPredicateExpectation.Handler?) in ' + this.constructor.name;
    };
    /*XCTest.(file).XCTestCase.expectationForPredicate(_:NSPredicate,evaluatedWithObject:Any,handler:XCTNSPredicateExpectation.Handler?)*/
    /*XCTest.(file).XCTestCase.expectationForPredicate(_:NSPredicate,evaluatedWithObject:Any,handler:XCTNSPredicateExpectation.Handler?)*/
    XCTestCase.prototype.expectationForPredicateEvaluatedWithObjectHandler = function ($info, predicate, object, handler) {
        throw 'unsupported method XCTest.(file).XCTestCase.expectationForPredicate(_:NSPredicate,evaluatedWithObject:Any,handler:XCTNSPredicateExpectation.Handler?) in ' + this.constructor.name;
    };
    /*XCTest.(file).XCTestCase.waiter(_:XCTWaiter,didTimeoutWithUnfulfilledExpectations:[XCTestExpectation])*/
    /*XCTest.(file).XCTestCase.waiter(_:XCTWaiter,didTimeoutWithUnfulfilledExpectations:[XCTestExpectation])*/
    XCTestCase.prototype.waiterDidTimeoutWithUnfulfilledExpectations = function ($info, waiter, unfulfilledExpectations) {
        throw 'unsupported method XCTest.(file).XCTestCase.waiter(_:XCTWaiter,didTimeoutWithUnfulfilledExpectations:[XCTestExpectation]) in ' + this.constructor.name;
    };
    /*XCTest.(file).XCTestCase.waiter(_:XCTWaiter,fulfillmentDidViolateOrderingConstraintsFor:XCTestExpectation,requiredExpectation:XCTestExpectation)*/
    /*XCTest.(file).XCTestCase.waiter(_:XCTWaiter,fulfillmentDidViolateOrderingConstraintsFor:XCTestExpectation,requiredExpectation:XCTestExpectation)*/
    XCTestCase.prototype.waiterFulfillmentDidViolateOrderingConstraintsForRequiredExpectation = function ($info, waiter, expectation, requiredExpectation) {
        throw 'unsupported method XCTest.(file).XCTestCase.waiter(_:XCTWaiter,fulfillmentDidViolateOrderingConstraintsFor:XCTestExpectation,requiredExpectation:XCTestExpectation) in ' + this.constructor.name;
    };
    /*XCTest.(file).XCTestCase.waiter(_:XCTWaiter,didFulfillInvertedExpectation:XCTestExpectation)*/
    /*XCTest.(file).XCTestCase.waiter(_:XCTWaiter,didFulfillInvertedExpectation:XCTestExpectation)*/
    XCTestCase.prototype.waiterDidFulfillInvertedExpectation = function ($info, waiter, expectation) {
        throw 'unsupported method XCTest.(file).XCTestCase.waiter(_:XCTWaiter,didFulfillInvertedExpectation:XCTestExpectation) in ' + this.constructor.name;
    };
    /*XCTest.(file).XCTestCase.nestedWaiter(_:XCTWaiter,wasInterruptedByTimedOutWaiter:XCTWaiter)*/
    /*XCTest.(file).XCTestCase.nestedWaiter(_:XCTWaiter,wasInterruptedByTimedOutWaiter:XCTWaiter)*/
    XCTestCase.prototype.nestedWaiterWasInterruptedByTimedOutWaiter = function ($info, waiter, outerWaiter) {
        throw 'unsupported method XCTest.(file).XCTestCase.nestedWaiter(_:XCTWaiter,wasInterruptedByTimedOutWaiter:XCTWaiter) in ' + this.constructor.name;
    };
    XCTestCase.prototype.init$vars = function () {
        if (_super.prototype.init$vars)
            _super.prototype.init$vars.call(this);
    };
    XCTestCase.$infoAddress = '';
    XCTestCase.initSelectorSelector$failable = true;
    return XCTestCase;
}(XCTest));
if (typeof XCTActivity$implementation != 'undefined')
    _mixin(XCTestCase, XCTActivity$implementation, false);
if (typeof XCTWaiterDelegate$implementation != 'undefined')
    _mixin(XCTestCase, XCTWaiterDelegate$implementation, false);
var XCTestError = /** @class */ (function () {
    function XCTestError() {
    }
    /*XCTest.(file).XCTestError.init(_nsError:NSError)*/
    /*XCTest.(file).XCTestError.init(_nsError:NSError)*/
    XCTestError.prototype.init_nsErrorNSError = function ($info, _nsError) {
        throw 'unsupported method XCTest.(file).XCTestError.init(_nsError:NSError) in ' + this.constructor.name;
    };
    XCTestError.prototype.init$vars = function () {
    };
    var _164;
    XCTestError.$struct = true;
    XCTestError.$infoAddress = '';
    XCTestError.Code = (_164 = /** @class */ (function () {
            function class_188() {
            }
            /*XCTest.(file).XCTestError.Code.init(rawValue:Int)*/
            /*XCTest.(file).XCTestError.Code.init(rawValue:Int)*/
            class_188.prototype.initRawValueInt = function ($info, rawValue) {
                throw 'unsupported method XCTest.(file).XCTestError.Code.init(rawValue:Int) in ' + this.constructor.name;
            };
            /*XCTest.(file).XCTestError.Code.rawValue*/
            class_188.prototype.rawValue$get = function () {
                throw 'unsupported variable XCTest.(file).XCTestError.Code.rawValue in ' + this.constructor.name;
            };
            Object.defineProperty(class_188.prototype, "rawValue", {
                get: function () { return this.rawValue$get(); },
                enumerable: true,
                configurable: true
            });
            ;
            Object.defineProperty(class_188, "timeoutWhileWaiting", {
                get: function () { return Object.assign(new XCTestError.Code(), __assign({ rawValue: 0 }, Array.from(arguments).slice(1))); },
                enumerable: true,
                configurable: true
            });
            Object.defineProperty(class_188, "failureWhileWaiting", {
                get: function () { return Object.assign(new XCTestError.Code(), __assign({ rawValue: 1 }, Array.from(arguments).slice(1))); },
                enumerable: true,
                configurable: true
            });
            class_188.prototype.init$vars = function () {
            };
            return class_188;
        }()),
        _164.$infoAddress = '',
        _164.initRawValueInt$failable = true,
        _164);
    return XCTestError;
}());
_mixin(XCTestError.Code, _DefaultEnumImplementation, false);
var XCTestExpectation = /** @class */ (function (_super) {
    __extends(XCTestExpectation, _super);
    function XCTestExpectation() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    /*XCTest.(file).XCTestExpectation.init(description:String)*/
    /*XCTest.(file).XCTestExpectation.init(description:String)*/
    XCTestExpectation.prototype.initDescriptionString = function ($info, expectationDescription) {
        throw 'unsupported method XCTest.(file).XCTestExpectation.init(description:String) in ' + this.constructor.name;
    };
    /*XCTest.(file).XCTestExpectation.fulfill()*/
    /*XCTest.(file).XCTestExpectation.fulfill()*/
    XCTestExpectation.prototype.fulfill = function ($info) {
        throw 'unsupported method XCTest.(file).XCTestExpectation.fulfill() in ' + this.constructor.name;
    };
    /*XCTest.(file).XCTestExpectation.init()*/
    /*ObjectiveC.(file).NSObject.init()*/
    XCTestExpectation.prototype.init = function ($info) {
    };
    XCTestExpectation.prototype.init$vars = function () {
        if (_super.prototype.init$vars)
            _super.prototype.init$vars.call(this);
    };
    XCTestExpectation.$infoAddress = '';
    return XCTestExpectation;
}(NSObject));
var XCTestObservation$implementation = /** @class */ (function () {
    function XCTestObservation$implementation() {
    }
    return XCTestObservation$implementation;
}());
if (typeof NSObjectProtocol$implementation != 'undefined')
    _mixin(XCTestObservation$implementation, NSObjectProtocol$implementation, false);
var XCTestObservationCenter = /** @class */ (function (_super) {
    __extends(XCTestObservationCenter, _super);
    function XCTestObservationCenter() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    /*XCTest.(file).XCTestObservationCenter.addTestObserver(_:XCTestObservation)*/
    /*XCTest.(file).XCTestObservationCenter.addTestObserver(_:XCTestObservation)*/
    XCTestObservationCenter.prototype.addTestObserver = function ($info, testObserver) {
        throw 'unsupported method XCTest.(file).XCTestObservationCenter.addTestObserver(_:XCTestObservation) in ' + this.constructor.name;
    };
    /*XCTest.(file).XCTestObservationCenter.removeTestObserver(_:XCTestObservation)*/
    /*XCTest.(file).XCTestObservationCenter.removeTestObserver(_:XCTestObservation)*/
    XCTestObservationCenter.prototype.removeTestObserver = function ($info, testObserver) {
        throw 'unsupported method XCTest.(file).XCTestObservationCenter.removeTestObserver(_:XCTestObservation) in ' + this.constructor.name;
    };
    /*XCTest.(file).XCTestObservationCenter.init()*/
    /*ObjectiveC.(file).NSObject.init()*/
    XCTestObservationCenter.prototype.init = function ($info) {
    };
    XCTestObservationCenter.prototype.init$vars = function () {
        if (_super.prototype.init$vars)
            _super.prototype.init$vars.call(this);
    };
    XCTestObservationCenter.$infoAddress = '';
    return XCTestObservationCenter;
}(NSObject));
var XCTestObserver = /** @class */ (function (_super) {
    __extends(XCTestObserver, _super);
    function XCTestObserver() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    /*XCTest.(file).XCTestObserver.startObserving()*/
    /*XCTest.(file).XCTestObserver.startObserving()*/
    XCTestObserver.prototype.startObserving = function ($info) {
        throw 'unsupported method XCTest.(file).XCTestObserver.startObserving() in ' + this.constructor.name;
    };
    /*XCTest.(file).XCTestObserver.stopObserving()*/
    /*XCTest.(file).XCTestObserver.stopObserving()*/
    XCTestObserver.prototype.stopObserving = function ($info) {
        throw 'unsupported method XCTest.(file).XCTestObserver.stopObserving() in ' + this.constructor.name;
    };
    /*XCTest.(file).XCTestObserver.testSuiteDidStart(_:XCTestRun?)*/
    /*XCTest.(file).XCTestObserver.testSuiteDidStart(_:XCTestRun?)*/
    XCTestObserver.prototype.testSuiteDidStart = function ($info, testRun) {
        throw 'unsupported method XCTest.(file).XCTestObserver.testSuiteDidStart(_:XCTestRun?) in ' + this.constructor.name;
    };
    /*XCTest.(file).XCTestObserver.testSuiteDidStop(_:XCTestRun?)*/
    /*XCTest.(file).XCTestObserver.testSuiteDidStop(_:XCTestRun?)*/
    XCTestObserver.prototype.testSuiteDidStop = function ($info, testRun) {
        throw 'unsupported method XCTest.(file).XCTestObserver.testSuiteDidStop(_:XCTestRun?) in ' + this.constructor.name;
    };
    /*XCTest.(file).XCTestObserver.testCaseDidStart(_:XCTestRun?)*/
    /*XCTest.(file).XCTestObserver.testCaseDidStart(_:XCTestRun?)*/
    XCTestObserver.prototype.testCaseDidStart = function ($info, testRun) {
        throw 'unsupported method XCTest.(file).XCTestObserver.testCaseDidStart(_:XCTestRun?) in ' + this.constructor.name;
    };
    /*XCTest.(file).XCTestObserver.testCaseDidStop(_:XCTestRun?)*/
    /*XCTest.(file).XCTestObserver.testCaseDidStop(_:XCTestRun?)*/
    XCTestObserver.prototype.testCaseDidStop = function ($info, testRun) {
        throw 'unsupported method XCTest.(file).XCTestObserver.testCaseDidStop(_:XCTestRun?) in ' + this.constructor.name;
    };
    /*XCTest.(file).XCTestObserver.testCaseDidFail(_:XCTestRun?,withDescription:String?,inFile:String?,atLine:Int)*/
    /*XCTest.(file).XCTestObserver.testCaseDidFail(_:XCTestRun?,withDescription:String?,inFile:String?,atLine:Int)*/
    XCTestObserver.prototype.testCaseDidFailWithDescriptionInFileAtLine = function ($info, testRun, description, filePath, lineNumber) {
        throw 'unsupported method XCTest.(file).XCTestObserver.testCaseDidFail(_:XCTestRun?,withDescription:String?,inFile:String?,atLine:Int) in ' + this.constructor.name;
    };
    /*XCTest.(file).XCTestObserver.init()*/
    /*ObjectiveC.(file).NSObject.init()*/
    XCTestObserver.prototype.init = function ($info) {
    };
    XCTestObserver.prototype.init$vars = function () {
        if (_super.prototype.init$vars)
            _super.prototype.init$vars.call(this);
    };
    XCTestObserver.$infoAddress = '';
    return XCTestObserver;
}(NSObject));
var XCTestProbe = /** @class */ (function (_super) {
    __extends(XCTestProbe, _super);
    function XCTestProbe() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    /*XCTest.(file).XCTestProbe.isTesting()*/
    /*XCTest.(file).XCTestProbe.isTesting()*/
    XCTestProbe.isTesting = function ($info) {
        throw 'unsupported method XCTest.(file).XCTestProbe.isTesting() in ' + this.constructor.name;
    };
    /*XCTest.(file).XCTestProbe.init()*/
    /*ObjectiveC.(file).NSObject.init()*/
    XCTestProbe.prototype.init = function ($info) {
    };
    XCTestProbe.prototype.init$vars = function () {
        if (_super.prototype.init$vars)
            _super.prototype.init$vars.call(this);
    };
    XCTestProbe.$infoAddress = '';
    return XCTestProbe;
}(NSObject));
var XCTestRun = /** @class */ (function (_super) {
    __extends(XCTestRun, _super);
    function XCTestRun() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    /*XCTest.(file).XCTestRun.init()*/
    /*ObjectiveC.(file).NSObject.init()*/
    XCTestRun.prototype.init = function ($info) {
    };
    /*XCTest.(file).XCTestRun.init(test:XCTest)*/
    /*XCTest.(file).XCTestRun.init(test:XCTest)*/
    XCTestRun.prototype.initTestXCTest = function ($info, test) {
        throw 'unsupported method XCTest.(file).XCTestRun.init(test:XCTest) in ' + this.constructor.name;
    };
    /*XCTest.(file).XCTestRun.testRunWithTest(_:XCTest)*/
    /*XCTest.(file).XCTestRun.testRunWithTest(_:XCTest)*/
    XCTestRun.testRunWithTest = function ($info, test) {
        throw 'unsupported method XCTest.(file).XCTestRun.testRunWithTest(_:XCTest) in ' + this.constructor.name;
    };
    /*XCTest.(file).XCTestRun.init(test:XCTest)*/
    /*XCTest.(file).XCTestRun.init(test:XCTest)*/
    XCTestRun.prototype.initTestXCTest = function ($info, test) {
        throw 'unsupported method XCTest.(file).XCTestRun.init(test:XCTest) in ' + this.constructor.name;
    };
    /*XCTest.(file).XCTestRun.start()*/
    /*XCTest.(file).XCTestRun.start()*/
    XCTestRun.prototype.start = function ($info) {
        throw 'unsupported method XCTest.(file).XCTestRun.start() in ' + this.constructor.name;
    };
    /*XCTest.(file).XCTestRun.stop()*/
    /*XCTest.(file).XCTestRun.stop()*/
    XCTestRun.prototype.stop = function ($info) {
        throw 'unsupported method XCTest.(file).XCTestRun.stop() in ' + this.constructor.name;
    };
    /*XCTest.(file).XCTestRun.recordFailure(withDescription:String,inFile:String?,atLine:Int,expected:Bool)*/
    /*XCTest.(file).XCTestRun.recordFailure(withDescription:String,inFile:String?,atLine:Int,expected:Bool)*/
    XCTestRun.prototype.recordFailureWithDescriptionInFileAtLineExpected = function ($info, description, filePath, lineNumber, expected) {
        throw 'unsupported method XCTest.(file).XCTestRun.recordFailure(withDescription:String,inFile:String?,atLine:Int,expected:Bool) in ' + this.constructor.name;
    };
    /*XCTest.(file).XCTestRun.recordFailureWithDescription(_:String,inFile:String?,atLine:Int,expected:Bool)*/
    /*XCTest.(file).XCTestRun.recordFailureWithDescription(_:String,inFile:String?,atLine:Int,expected:Bool)*/
    XCTestRun.prototype.recordFailureWithDescriptionInFileAtLineExpected = function ($info, description, filePath, lineNumber, expected) {
        throw 'unsupported method XCTest.(file).XCTestRun.recordFailureWithDescription(_:String,inFile:String?,atLine:Int,expected:Bool) in ' + this.constructor.name;
    };
    XCTestRun.prototype.init$vars = function () {
        if (_super.prototype.init$vars)
            _super.prototype.init$vars.call(this);
    };
    XCTestRun.$infoAddress = '';
    return XCTestRun;
}(NSObject));
var XCTestSuite = /** @class */ (function (_super) {
    __extends(XCTestSuite, _super);
    function XCTestSuite() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    /*XCTest.(file).XCTestSuite.init(forBundlePath:String)*/
    /*XCTest.(file).XCTestSuite.init(forBundlePath:String)*/
    XCTestSuite.prototype.initForBundlePathString = function ($info, bundlePath) {
        throw 'unsupported method XCTest.(file).XCTestSuite.init(forBundlePath:String) in ' + this.constructor.name;
    };
    /*XCTest.(file).XCTestSuite.testSuiteForBundlePath(_:String)*/
    /*XCTest.(file).XCTestSuite.testSuiteForBundlePath(_:String)*/
    XCTestSuite.testSuiteForBundlePath = function ($info, bundlePath) {
        throw 'unsupported method XCTest.(file).XCTestSuite.testSuiteForBundlePath(_:String) in ' + this.constructor.name;
    };
    /*XCTest.(file).XCTestSuite.init(forTestCaseWithName:String)*/
    /*XCTest.(file).XCTestSuite.init(forTestCaseWithName:String)*/
    XCTestSuite.prototype.initForTestCaseWithNameString = function ($info, _name) {
        throw 'unsupported method XCTest.(file).XCTestSuite.init(forTestCaseWithName:String) in ' + this.constructor.name;
    };
    /*XCTest.(file).XCTestSuite.testSuiteForTestCaseWithName(_:String)*/
    /*XCTest.(file).XCTestSuite.testSuiteForTestCaseWithName(_:String)*/
    XCTestSuite.testSuiteForTestCaseWithName = function ($info, _name) {
        throw 'unsupported method XCTest.(file).XCTestSuite.testSuiteForTestCaseWithName(_:String) in ' + this.constructor.name;
    };
    /*XCTest.(file).XCTestSuite.init(forTestCaseClass:AnyClass)*/
    /*XCTest.(file).XCTestSuite.init(forTestCaseClass:AnyClass)*/
    XCTestSuite.prototype.initForTestCaseClassAnyClass = function ($info, testCaseClass) {
        throw 'unsupported method XCTest.(file).XCTestSuite.init(forTestCaseClass:AnyClass) in ' + this.constructor.name;
    };
    /*XCTest.(file).XCTestSuite.testSuiteForTestCaseClass(_:AnyClass)*/
    /*XCTest.(file).XCTestSuite.testSuiteForTestCaseClass(_:AnyClass)*/
    XCTestSuite.testSuiteForTestCaseClass = function ($info, testCaseClass) {
        throw 'unsupported method XCTest.(file).XCTestSuite.testSuiteForTestCaseClass(_:AnyClass) in ' + this.constructor.name;
    };
    /*XCTest.(file).XCTestSuite.init(name:String)*/
    /*XCTest.(file).XCTestSuite.init(name:String)*/
    XCTestSuite.prototype.initNameString = function ($info, _name) {
        throw 'unsupported method XCTest.(file).XCTestSuite.init(name:String) in ' + this.constructor.name;
    };
    /*XCTest.(file).XCTestSuite.testSuiteWithName(_:String)*/
    /*XCTest.(file).XCTestSuite.testSuiteWithName(_:String)*/
    XCTestSuite.testSuiteWithName = function ($info, _name) {
        throw 'unsupported method XCTest.(file).XCTestSuite.testSuiteWithName(_:String) in ' + this.constructor.name;
    };
    /*XCTest.(file).XCTestSuite.init(name:String)*/
    /*XCTest.(file).XCTestSuite.init(name:String)*/
    XCTestSuite.prototype.initNameString = function ($info, _name) {
        throw 'unsupported method XCTest.(file).XCTestSuite.init(name:String) in ' + this.constructor.name;
    };
    /*XCTest.(file).XCTestSuite.init()*/
    /*ObjectiveC.(file).NSObject.init()*/
    XCTestSuite.prototype.init = function ($info) {
    };
    /*XCTest.(file).XCTestSuite.addTest(_:XCTest)*/
    /*XCTest.(file).XCTestSuite.addTest(_:XCTest)*/
    XCTestSuite.prototype.addTest = function ($info, test) {
        throw 'unsupported method XCTest.(file).XCTestSuite.addTest(_:XCTest) in ' + this.constructor.name;
    };
    XCTestSuite.prototype.init$vars = function () {
        if (_super.prototype.init$vars)
            _super.prototype.init$vars.call(this);
    };
    XCTestSuite.$infoAddress = '';
    return XCTestSuite;
}(XCTest));
var XCTestSuiteRun = /** @class */ (function (_super) {
    __extends(XCTestSuiteRun, _super);
    function XCTestSuiteRun() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    /*XCTest.(file).XCTestSuiteRun.addTestRun(_:XCTestRun)*/
    /*XCTest.(file).XCTestSuiteRun.addTestRun(_:XCTestRun)*/
    XCTestSuiteRun.prototype.addTestRun = function ($info, testRun) {
        throw 'unsupported method XCTest.(file).XCTestSuiteRun.addTestRun(_:XCTestRun) in ' + this.constructor.name;
    };
    /*XCTest.(file).XCTestSuiteRun.init()*/
    /*ObjectiveC.(file).NSObject.init()*/
    XCTestSuiteRun.prototype.init = function ($info) {
    };
    /*XCTest.(file).XCTestSuiteRun.init(test:XCTest)*/
    /*XCTest.(file).XCTestSuiteRun.init(test:XCTest)*/
    XCTestSuiteRun.prototype.initTestXCTest = function ($info, test) {
        throw 'unsupported method XCTest.(file).XCTestSuiteRun.init(test:XCTest) in ' + this.constructor.name;
    };
    /*XCTest.(file).XCTestSuiteRun.init(test:XCTest)*/
    /*XCTest.(file).XCTestRun.init(test:XCTest)*/
    XCTestSuiteRun.prototype.initTestXCTest = function ($info, test) {
        throw 'unsupported method XCTest.(file).XCTestSuiteRun.init(test:XCTest) in ' + this.constructor.name;
    };
    XCTestSuiteRun.prototype.init$vars = function () {
        if (_super.prototype.init$vars)
            _super.prototype.init$vars.call(this);
    };
    XCTestSuiteRun.$infoAddress = '';
    return XCTestSuiteRun;
}(XCTestRun));
var XCUICoordinate = /** @class */ (function (_super) {
    __extends(XCUICoordinate, _super);
    function XCUICoordinate() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    /*XCTest.(file).XCUICoordinate.init()*/
    /*ObjectiveC.(file).NSObject.init()*/
    XCUICoordinate.prototype.init = function ($info) {
    };
    /*XCTest.(file).XCUICoordinate.withOffset(_:CGVector)*/
    /*XCTest.(file).XCUICoordinate.withOffset(_:CGVector)*/
    XCUICoordinate.prototype.withOffset = function ($info, offsetVector) {
        throw 'unsupported method XCTest.(file).XCUICoordinate.withOffset(_:CGVector) in ' + this.constructor.name;
    };
    /*XCTest.(file).XCUICoordinate.coordinateWithOffset(_:CGVector)*/
    /*XCTest.(file).XCUICoordinate.coordinateWithOffset(_:CGVector)*/
    XCUICoordinate.prototype.coordinateWithOffset = function ($info, offsetVector) {
        throw 'unsupported method XCTest.(file).XCUICoordinate.coordinateWithOffset(_:CGVector) in ' + this.constructor.name;
    };
    /*XCTest.(file).XCUICoordinate.copy(with:NSZone?)*/
    /*XCTest.(file).XCUICoordinate.copy(with:NSZone?)*/
    XCUICoordinate.prototype.copyWith = function ($info, zone) {
        throw 'unsupported method XCTest.(file).XCUICoordinate.copy(with:NSZone?) in ' + this.constructor.name;
    };
    /*XCTest.(file).XCUICoordinate.hover()*/
    /*XCTest.(file).XCUICoordinate.hover()*/
    XCUICoordinate.prototype.hover = function ($info) {
        throw 'unsupported method XCTest.(file).XCUICoordinate.hover() in ' + this.constructor.name;
    };
    /*XCTest.(file).XCUICoordinate.click()*/
    /*XCTest.(file).XCUICoordinate.click()*/
    XCUICoordinate.prototype.click = function ($info) {
        throw 'unsupported method XCTest.(file).XCUICoordinate.click() in ' + this.constructor.name;
    };
    /*XCTest.(file).XCUICoordinate.doubleClick()*/
    /*XCTest.(file).XCUICoordinate.doubleClick()*/
    XCUICoordinate.prototype.doubleClick = function ($info) {
        throw 'unsupported method XCTest.(file).XCUICoordinate.doubleClick() in ' + this.constructor.name;
    };
    /*XCTest.(file).XCUICoordinate.rightClick()*/
    /*XCTest.(file).XCUICoordinate.rightClick()*/
    XCUICoordinate.prototype.rightClick = function ($info) {
        throw 'unsupported method XCTest.(file).XCUICoordinate.rightClick() in ' + this.constructor.name;
    };
    /*XCTest.(file).XCUICoordinate.click(forDuration:TimeInterval,thenDragTo:XCUICoordinate)*/
    /*XCTest.(file).XCUICoordinate.click(forDuration:TimeInterval,thenDragTo:XCUICoordinate)*/
    XCUICoordinate.prototype.clickForDurationThenDragTo = function ($info, duration, otherCoordinate) {
        throw 'unsupported method XCTest.(file).XCUICoordinate.click(forDuration:TimeInterval,thenDragTo:XCUICoordinate) in ' + this.constructor.name;
    };
    /*XCTest.(file).XCUICoordinate.clickForDuration(_:TimeInterval,thenDragToCoordinate:XCUICoordinate)*/
    /*XCTest.(file).XCUICoordinate.clickForDuration(_:TimeInterval,thenDragToCoordinate:XCUICoordinate)*/
    XCUICoordinate.prototype.clickForDurationThenDragToCoordinate = function ($info, duration, otherCoordinate) {
        throw 'unsupported method XCTest.(file).XCUICoordinate.clickForDuration(_:TimeInterval,thenDragToCoordinate:XCUICoordinate) in ' + this.constructor.name;
    };
    /*XCTest.(file).XCUICoordinate.scroll(byDeltaX:CGFloat,deltaY:CGFloat)*/
    /*XCTest.(file).XCUICoordinate.scroll(byDeltaX:CGFloat,deltaY:CGFloat)*/
    XCUICoordinate.prototype.scrollByDeltaXDeltaY = function ($info, deltaX, deltaY) {
        throw 'unsupported method XCTest.(file).XCUICoordinate.scroll(byDeltaX:CGFloat,deltaY:CGFloat) in ' + this.constructor.name;
    };
    /*XCTest.(file).XCUICoordinate.scrollByDeltaX(_:CGFloat,deltaY:CGFloat)*/
    /*XCTest.(file).XCUICoordinate.scrollByDeltaX(_:CGFloat,deltaY:CGFloat)*/
    XCUICoordinate.prototype.scrollByDeltaXDeltaY = function ($info, deltaX, deltaY) {
        throw 'unsupported method XCTest.(file).XCUICoordinate.scrollByDeltaX(_:CGFloat,deltaY:CGFloat) in ' + this.constructor.name;
    };
    /*XCTest.(file).XCUICoordinate.tap()*/
    /*XCTest.(file).XCUICoordinate.tap()*/
    XCUICoordinate.prototype.tap = function ($info) {
        throw 'unsupported method XCTest.(file).XCUICoordinate.tap() in ' + this.constructor.name;
    };
    /*XCTest.(file).XCUICoordinate.doubleTap()*/
    /*XCTest.(file).XCUICoordinate.doubleTap()*/
    XCUICoordinate.prototype.doubleTap = function ($info) {
        throw 'unsupported method XCTest.(file).XCUICoordinate.doubleTap() in ' + this.constructor.name;
    };
    /*XCTest.(file).XCUICoordinate.press(forDuration:TimeInterval)*/
    /*XCTest.(file).XCUICoordinate.press(forDuration:TimeInterval)*/
    XCUICoordinate.prototype.pressForDuration = function ($info, duration) {
        throw 'unsupported method XCTest.(file).XCUICoordinate.press(forDuration:TimeInterval) in ' + this.constructor.name;
    };
    /*XCTest.(file).XCUICoordinate.pressForDuration(_:TimeInterval)*/
    /*XCTest.(file).XCUICoordinate.pressForDuration(_:TimeInterval)*/
    XCUICoordinate.prototype.pressForDuration = function ($info, duration) {
        throw 'unsupported method XCTest.(file).XCUICoordinate.pressForDuration(_:TimeInterval) in ' + this.constructor.name;
    };
    /*XCTest.(file).XCUICoordinate.press(forDuration:TimeInterval,thenDragTo:XCUICoordinate)*/
    /*XCTest.(file).XCUICoordinate.press(forDuration:TimeInterval,thenDragTo:XCUICoordinate)*/
    XCUICoordinate.prototype.pressForDurationThenDragTo = function ($info, duration, otherCoordinate) {
        throw 'unsupported method XCTest.(file).XCUICoordinate.press(forDuration:TimeInterval,thenDragTo:XCUICoordinate) in ' + this.constructor.name;
    };
    /*XCTest.(file).XCUICoordinate.pressForDuration(_:TimeInterval,thenDragToCoordinate:XCUICoordinate)*/
    /*XCTest.(file).XCUICoordinate.pressForDuration(_:TimeInterval,thenDragToCoordinate:XCUICoordinate)*/
    XCUICoordinate.prototype.pressForDurationThenDragToCoordinate = function ($info, duration, otherCoordinate) {
        throw 'unsupported method XCTest.(file).XCUICoordinate.pressForDuration(_:TimeInterval,thenDragToCoordinate:XCUICoordinate) in ' + this.constructor.name;
    };
    XCUICoordinate.prototype.init$vars = function () {
        if (_super.prototype.init$vars)
            _super.prototype.init$vars.call(this);
    };
    XCUICoordinate.$infoAddress = '';
    return XCUICoordinate;
}(NSObject));
if (typeof NSCopying$implementation != 'undefined')
    _mixin(XCUICoordinate, NSCopying$implementation, false);
var XCUIElementAttributeName = /** @class */ (function () {
    function XCUIElementAttributeName() {
    }
    /*XCTest.(file).XCUIElementAttributeName.init(rawValue:String)*/
    /*XCTest.(file).XCUIElementAttributeName.init(rawValue:String)*/
    XCUIElementAttributeName.prototype.initRawValueString = function ($info, rawValue) {
        throw 'unsupported method XCTest.(file).XCUIElementAttributeName.init(rawValue:String) in ' + this.constructor.name;
    };
    /*XCTest.(file).XCUIElementAttributeName.rawValue*/
    XCUIElementAttributeName.prototype.rawValue$get = function () {
        throw 'unsupported variable XCTest.(file).XCUIElementAttributeName.rawValue in ' + this.constructor.name;
    };
    Object.defineProperty(XCUIElementAttributeName.prototype, "rawValue", {
        get: function () { return this.rawValue$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    XCUIElementAttributeName.prototype.init$vars = function () {
    };
    XCUIElementAttributeName.$struct = true;
    XCUIElementAttributeName.$infoAddress = '';
    return XCUIElementAttributeName;
}());
var XCUIElementAttributes$implementation = /** @class */ (function () {
    function XCUIElementAttributes$implementation() {
    }
    return XCUIElementAttributes$implementation;
}());
var XCUIElementSnapshot$implementation = /** @class */ (function () {
    function XCUIElementSnapshot$implementation() {
    }
    return XCUIElementSnapshot$implementation;
}());
if (typeof XCUIElementAttributes$implementation != 'undefined')
    _mixin(XCUIElementSnapshot$implementation, XCUIElementAttributes$implementation, false);
var XCUIElementSnapshotProviding$implementation = /** @class */ (function () {
    function XCUIElementSnapshotProviding$implementation() {
    }
    return XCUIElementSnapshotProviding$implementation;
}());
if (typeof NSObjectProtocol$implementation != 'undefined')
    _mixin(XCUIElementSnapshotProviding$implementation, NSObjectProtocol$implementation, false);
var XCUIElementTypeQueryProvider$implementation = /** @class */ (function () {
    function XCUIElementTypeQueryProvider$implementation() {
    }
    return XCUIElementTypeQueryProvider$implementation;
}());
var XCUIKeyboardKey = /** @class */ (function () {
    function XCUIKeyboardKey() {
    }
    /*XCTest.(file).XCUIKeyboardKey.init(_:String)*/
    /*XCTest.(file).XCUIKeyboardKey.init(_:String)*/
    XCUIKeyboardKey.prototype.initString = function ($info, rawValue) {
        throw 'unsupported method XCTest.(file).XCUIKeyboardKey.init(_:String) in ' + this.constructor.name;
    };
    /*XCTest.(file).XCUIKeyboardKey.init(rawValue:String)*/
    /*XCTest.(file).XCUIKeyboardKey.init(rawValue:String)*/
    XCUIKeyboardKey.prototype.initRawValueString = function ($info, rawValue) {
        throw 'unsupported method XCTest.(file).XCUIKeyboardKey.init(rawValue:String) in ' + this.constructor.name;
    };
    /*XCTest.(file).XCUIKeyboardKey.rawValue*/
    XCUIKeyboardKey.prototype.rawValue$get = function () {
        throw 'unsupported variable XCTest.(file).XCUIKeyboardKey.rawValue in ' + this.constructor.name;
    };
    Object.defineProperty(XCUIKeyboardKey.prototype, "rawValue", {
        get: function () { return this.rawValue$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    XCUIKeyboardKey.prototype.init$vars = function () {
    };
    XCUIKeyboardKey.$struct = true;
    XCUIKeyboardKey.$infoAddress = '';
    return XCUIKeyboardKey;
}());
var XCUIRemoteButton = /** @class */ (function () {
    function XCUIRemoteButton() {
    }
    /*XCTest.(file).XCUIRemoteButton.init(rawValue:UInt)*/
    /*XCTest.(file).XCUIRemoteButton.init(rawValue:UInt)*/
    XCUIRemoteButton.prototype.initRawValueUInt = function ($info, rawValue) {
        throw 'unsupported method XCTest.(file).XCUIRemoteButton.init(rawValue:UInt) in ' + this.constructor.name;
    };
    /*XCTest.(file).XCUIRemoteButton.rawValue*/
    XCUIRemoteButton.prototype.rawValue$get = function () {
        throw 'unsupported variable XCTest.(file).XCUIRemoteButton.rawValue in ' + this.constructor.name;
    };
    Object.defineProperty(XCUIRemoteButton.prototype, "rawValue", {
        get: function () { return this.rawValue$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    Object.defineProperty(XCUIRemoteButton, "up", {
        get: function () { return Object.assign(new XCUIRemoteButton(), __assign({ rawValue: 0 }, Array.from(arguments).slice(1))); },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(XCUIRemoteButton, "down", {
        get: function () { return Object.assign(new XCUIRemoteButton(), __assign({ rawValue: 1 }, Array.from(arguments).slice(1))); },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(XCUIRemoteButton, "left", {
        get: function () { return Object.assign(new XCUIRemoteButton(), __assign({ rawValue: 2 }, Array.from(arguments).slice(1))); },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(XCUIRemoteButton, "right", {
        get: function () { return Object.assign(new XCUIRemoteButton(), __assign({ rawValue: 3 }, Array.from(arguments).slice(1))); },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(XCUIRemoteButton, "_select", {
        get: function () { return Object.assign(new XCUIRemoteButton(), __assign({ rawValue: 4 }, Array.from(arguments).slice(1))); },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(XCUIRemoteButton, "menu", {
        get: function () { return Object.assign(new XCUIRemoteButton(), __assign({ rawValue: 5 }, Array.from(arguments).slice(1))); },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(XCUIRemoteButton, "playPause", {
        get: function () { return Object.assign(new XCUIRemoteButton(), __assign({ rawValue: 6 }, Array.from(arguments).slice(1))); },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(XCUIRemoteButton, "home", {
        get: function () { return Object.assign(new XCUIRemoteButton(), __assign({ rawValue: 7 }, Array.from(arguments).slice(1))); },
        enumerable: true,
        configurable: true
    });
    XCUIRemoteButton.prototype.init$vars = function () {
    };
    XCUIRemoteButton.$infoAddress = '';
    XCUIRemoteButton.initRawValueUInt$failable = true;
    return XCUIRemoteButton;
}());
_mixin(XCUIRemoteButton, _DefaultEnumImplementation, false);
var XCUIScreenshot = /** @class */ (function (_super) {
    __extends(XCUIScreenshot, _super);
    function XCUIScreenshot() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    /*XCTest.(file).XCUIScreenshot.init()*/
    /*ObjectiveC.(file).NSObject.init()*/
    XCUIScreenshot.prototype.init = function ($info) {
    };
    XCUIScreenshot.prototype.init$vars = function () {
        if (_super.prototype.init$vars)
            _super.prototype.init$vars.call(this);
    };
    XCUIScreenshot.$infoAddress = '';
    return XCUIScreenshot;
}(NSObject));
var XCUIScreenshotProviding$implementation = /** @class */ (function () {
    function XCUIScreenshotProviding$implementation() {
    }
    return XCUIScreenshotProviding$implementation;
}());
if (typeof NSObjectProtocol$implementation != 'undefined')
    _mixin(XCUIScreenshotProviding$implementation, NSObjectProtocol$implementation, false);
var _XCTAssertionType = /** @class */ (function () {
    function _XCTAssertionType() {
    }
    /*XCTest.(file)._XCTAssertionType.init(rawValue:UInt)*/
    /*XCTest.(file)._XCTAssertionType.init(rawValue:UInt)*/
    _XCTAssertionType.prototype.initRawValueUInt = function ($info, rawValue) {
        throw 'unsupported method XCTest.(file)._XCTAssertionType.init(rawValue:UInt) in ' + this.constructor.name;
    };
    /*XCTest.(file)._XCTAssertionType.rawValue*/
    _XCTAssertionType.prototype.rawValue$get = function () {
        throw 'unsupported variable XCTest.(file)._XCTAssertionType.rawValue in ' + this.constructor.name;
    };
    Object.defineProperty(_XCTAssertionType.prototype, "rawValue", {
        get: function () { return this.rawValue$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    Object.defineProperty(_XCTAssertionType, "fail", {
        get: function () { return Object.assign(new _XCTAssertionType(), __assign({ rawValue: 0 }, Array.from(arguments).slice(1))); },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(_XCTAssertionType, "nil", {
        get: function () { return Object.assign(new _XCTAssertionType(), __assign({ rawValue: 1 }, Array.from(arguments).slice(1))); },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(_XCTAssertionType, "notNil", {
        get: function () { return Object.assign(new _XCTAssertionType(), __assign({ rawValue: 2 }, Array.from(arguments).slice(1))); },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(_XCTAssertionType, "equalObjects", {
        get: function () { return Object.assign(new _XCTAssertionType(), __assign({ rawValue: 3 }, Array.from(arguments).slice(1))); },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(_XCTAssertionType, "notEqualObjects", {
        get: function () { return Object.assign(new _XCTAssertionType(), __assign({ rawValue: 4 }, Array.from(arguments).slice(1))); },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(_XCTAssertionType, "equal", {
        get: function () { return Object.assign(new _XCTAssertionType(), __assign({ rawValue: 5 }, Array.from(arguments).slice(1))); },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(_XCTAssertionType, "notEqual", {
        get: function () { return Object.assign(new _XCTAssertionType(), __assign({ rawValue: 6 }, Array.from(arguments).slice(1))); },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(_XCTAssertionType, "equalWithAccuracy", {
        get: function () { return Object.assign(new _XCTAssertionType(), __assign({ rawValue: 7 }, Array.from(arguments).slice(1))); },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(_XCTAssertionType, "notEqualWithAccuracy", {
        get: function () { return Object.assign(new _XCTAssertionType(), __assign({ rawValue: 8 }, Array.from(arguments).slice(1))); },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(_XCTAssertionType, "greaterThan", {
        get: function () { return Object.assign(new _XCTAssertionType(), __assign({ rawValue: 9 }, Array.from(arguments).slice(1))); },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(_XCTAssertionType, "greaterThanOrEqual", {
        get: function () { return Object.assign(new _XCTAssertionType(), __assign({ rawValue: 10 }, Array.from(arguments).slice(1))); },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(_XCTAssertionType, "lessThan", {
        get: function () { return Object.assign(new _XCTAssertionType(), __assign({ rawValue: 11 }, Array.from(arguments).slice(1))); },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(_XCTAssertionType, "lessThanOrEqual", {
        get: function () { return Object.assign(new _XCTAssertionType(), __assign({ rawValue: 12 }, Array.from(arguments).slice(1))); },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(_XCTAssertionType, "_true", {
        get: function () { return Object.assign(new _XCTAssertionType(), __assign({ rawValue: 13 }, Array.from(arguments).slice(1))); },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(_XCTAssertionType, "_false", {
        get: function () { return Object.assign(new _XCTAssertionType(), __assign({ rawValue: 14 }, Array.from(arguments).slice(1))); },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(_XCTAssertionType, "_throws", {
        get: function () { return Object.assign(new _XCTAssertionType(), __assign({ rawValue: 15 }, Array.from(arguments).slice(1))); },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(_XCTAssertionType, "throwsSpecific", {
        get: function () { return Object.assign(new _XCTAssertionType(), __assign({ rawValue: 16 }, Array.from(arguments).slice(1))); },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(_XCTAssertionType, "throwsSpecificNamed", {
        get: function () { return Object.assign(new _XCTAssertionType(), __assign({ rawValue: 17 }, Array.from(arguments).slice(1))); },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(_XCTAssertionType, "noThrow", {
        get: function () { return Object.assign(new _XCTAssertionType(), __assign({ rawValue: 18 }, Array.from(arguments).slice(1))); },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(_XCTAssertionType, "noThrowSpecific", {
        get: function () { return Object.assign(new _XCTAssertionType(), __assign({ rawValue: 19 }, Array.from(arguments).slice(1))); },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(_XCTAssertionType, "noThrowSpecificNamed", {
        get: function () { return Object.assign(new _XCTAssertionType(), __assign({ rawValue: 20 }, Array.from(arguments).slice(1))); },
        enumerable: true,
        configurable: true
    });
    _XCTAssertionType.prototype.init$vars = function () {
    };
    _XCTAssertionType.$infoAddress = '';
    _XCTAssertionType.initRawValueUInt$failable = true;
    return _XCTAssertionType;
}());
_mixin(_XCTAssertionType, _DefaultEnumImplementation, false);
var _XCTestCaseInterruptionException = /** @class */ (function (_super) {
    __extends(_XCTestCaseInterruptionException, _super);
    function _XCTestCaseInterruptionException() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    /*XCTest.(file)._XCTestCaseInterruptionException.init(name:NSExceptionName,reason:String?,userInfo:[AnyHashable : Any]?)*/
    /*Foundation.(file).NSException.init(name:NSExceptionName,reason:String?,userInfo:[AnyHashable : Any]?)*/
    _XCTestCaseInterruptionException.prototype.initNameNSExceptionNameReasonOptionalUserInfoOptional = function ($info, aName, aReason, aUserInfo) {
        throw 'unsupported method XCTest.(file)._XCTestCaseInterruptionException.init(name:NSExceptionName,reason:String?,userInfo:[AnyHashable : Any]?) in ' + this.constructor.name;
    };
    /*XCTest.(file)._XCTestCaseInterruptionException.init()*/
    /*ObjectiveC.(file).NSObject.init()*/
    _XCTestCaseInterruptionException.prototype.init = function ($info) {
    };
    /*XCTest.(file)._XCTestCaseInterruptionException.init(coder:NSCoder)*/
    /*Foundation.(file).NSException.init(coder:NSCoder)*/
    _XCTestCaseInterruptionException.prototype.initCoderNSCoder = function ($info, aDecoder) {
        throw 'unsupported method XCTest.(file)._XCTestCaseInterruptionException.init(coder:NSCoder) in ' + this.constructor.name;
    };
    _XCTestCaseInterruptionException.prototype.init$vars = function () {
        if (_super.prototype.init$vars)
            _super.prototype.init$vars.call(this);
    };
    _XCTestCaseInterruptionException.$infoAddress = '';
    _XCTestCaseInterruptionException.initCoderNSCoder$failable = true;
    return _XCTestCaseInterruptionException;
}(NSException));
var _XCTThrowableBlockResult = /** @class */ (function () {
    function _XCTThrowableBlockResult() {
    }
    Object.defineProperty(_XCTThrowableBlockResult, "success", {
        get: function () { return Object.assign(new _XCTThrowableBlockResult(), __assign({ rawValue: "success" }, Array.from(arguments).slice(1))); },
        enumerable: true,
        configurable: true
    });
    _XCTThrowableBlockResult.failedWithError = function () { return Object.assign(new _XCTThrowableBlockResult(), __assign({ rawValue: "failedWithError" }, Array.from(arguments).slice(1))); };
    _XCTThrowableBlockResult.failedWithException = function () { return Object.assign(new _XCTThrowableBlockResult(), __assign({ rawValue: "failedWithException" }, Array.from(arguments).slice(1))); };
    Object.defineProperty(_XCTThrowableBlockResult, "failedWithUnknownException", {
        get: function () { return Object.assign(new _XCTThrowableBlockResult(), __assign({ rawValue: "failedWithUnknownException" }, Array.from(arguments).slice(1))); },
        enumerable: true,
        configurable: true
    });
    _XCTThrowableBlockResult.prototype.init$vars = function () {
    };
    _XCTThrowableBlockResult.$infoAddress = '';
    return _XCTThrowableBlockResult;
}());
_mixin(_XCTThrowableBlockResult, _DefaultEnumImplementation, false);
var XCTDarwinNotificationExpectation = /** @class */ (function (_super) {
    __extends(XCTDarwinNotificationExpectation, _super);
    function XCTDarwinNotificationExpectation() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    /*XCTest.(file).XCTDarwinNotificationExpectation.init()*/
    /*ObjectiveC.(file).NSObject.init()*/
    XCTDarwinNotificationExpectation.prototype.init = function ($info) {
    };
    /*XCTest.(file).XCTDarwinNotificationExpectation.init(description:String)*/
    /*XCTest.(file).XCTestExpectation.init(description:String)*/
    XCTDarwinNotificationExpectation.prototype.initDescriptionString = function ($info, expectationDescription) {
        throw 'unsupported method XCTest.(file).XCTDarwinNotificationExpectation.init(description:String) in ' + this.constructor.name;
    };
    /*XCTest.(file).XCTDarwinNotificationExpectation.init(notificationName:String)*/
    /*XCTest.(file).XCTDarwinNotificationExpectation.init(notificationName:String)*/
    XCTDarwinNotificationExpectation.prototype.initNotificationNameString = function ($info, notificationName) {
        throw 'unsupported method XCTest.(file).XCTDarwinNotificationExpectation.init(notificationName:String) in ' + this.constructor.name;
    };
    XCTDarwinNotificationExpectation.prototype.init$vars = function () {
        if (_super.prototype.init$vars)
            _super.prototype.init$vars.call(this);
    };
    XCTDarwinNotificationExpectation.$infoAddress = '';
    return XCTDarwinNotificationExpectation;
}(XCTestExpectation));
var XCTKVOExpectation = /** @class */ (function (_super) {
    __extends(XCTKVOExpectation, _super);
    function XCTKVOExpectation() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    /*XCTest.(file).XCTKVOExpectation.init()*/
    /*ObjectiveC.(file).NSObject.init()*/
    XCTKVOExpectation.prototype.init = function ($info) {
    };
    /*XCTest.(file).XCTKVOExpectation.init(description:String)*/
    /*XCTest.(file).XCTestExpectation.init(description:String)*/
    XCTKVOExpectation.prototype.initDescriptionString = function ($info, expectationDescription) {
        throw 'unsupported method XCTest.(file).XCTKVOExpectation.init(description:String) in ' + this.constructor.name;
    };
    /*XCTest.(file).XCTKVOExpectation.init(keyPath:String,object:Any,expectedValue:Any?,options:NSKeyValueObservingOptions)*/
    /*XCTest.(file).XCTKVOExpectation.init(keyPath:String,object:Any,expectedValue:Any?,options:NSKeyValueObservingOptions)*/
    XCTKVOExpectation.prototype.initKeyPathStringObjectprotocol_composition_typeExpectedValueOptionalOptionsNSKeyValueObservingOptions = function ($info, keyPath, object, expectedValue, options) {
        throw 'unsupported method XCTest.(file).XCTKVOExpectation.init(keyPath:String,object:Any,expectedValue:Any?,options:NSKeyValueObservingOptions) in ' + this.constructor.name;
    };
    /*XCTest.(file).XCTKVOExpectation.init(keyPath:String,object:Any,expectedValue:Any?)*/
    /*XCTest.(file).XCTKVOExpectation.init(keyPath:String,object:Any,expectedValue:Any?)*/
    XCTKVOExpectation.prototype.initKeyPathStringObjectprotocol_composition_typeExpectedValueOptional = function ($info, keyPath, object, expectedValue) {
        throw 'unsupported method XCTest.(file).XCTKVOExpectation.init(keyPath:String,object:Any,expectedValue:Any?) in ' + this.constructor.name;
    };
    /*XCTest.(file).XCTKVOExpectation.init(keyPath:String,object:Any)*/
    /*XCTest.(file).XCTKVOExpectation.init(keyPath:String,object:Any)*/
    XCTKVOExpectation.prototype.initKeyPathStringObjectprotocol_composition_type = function ($info, keyPath, object) {
        throw 'unsupported method XCTest.(file).XCTKVOExpectation.init(keyPath:String,object:Any) in ' + this.constructor.name;
    };
    XCTKVOExpectation.prototype.init$vars = function () {
        if (_super.prototype.init$vars)
            _super.prototype.init$vars.call(this);
    };
    XCTKVOExpectation.$infoAddress = '';
    return XCTKVOExpectation;
}(XCTestExpectation));
var XCTNSNotificationExpectation = /** @class */ (function (_super) {
    __extends(XCTNSNotificationExpectation, _super);
    function XCTNSNotificationExpectation() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    /*XCTest.(file).XCTNSNotificationExpectation.init()*/
    /*ObjectiveC.(file).NSObject.init()*/
    XCTNSNotificationExpectation.prototype.init = function ($info) {
    };
    /*XCTest.(file).XCTNSNotificationExpectation.init(description:String)*/
    /*XCTest.(file).XCTestExpectation.init(description:String)*/
    XCTNSNotificationExpectation.prototype.initDescriptionString = function ($info, expectationDescription) {
        throw 'unsupported method XCTest.(file).XCTNSNotificationExpectation.init(description:String) in ' + this.constructor.name;
    };
    /*XCTest.(file).XCTNSNotificationExpectation.init(name:NSNotification.Name,object:Any?,notificationCenter:NotificationCenter)*/
    /*XCTest.(file).XCTNSNotificationExpectation.init(name:NSNotification.Name,object:Any?,notificationCenter:NotificationCenter)*/
    XCTNSNotificationExpectation.prototype.initNameNSNotificationNameObjectOptionalNotificationCenterNotificationCenter = function ($info, notificationName, object, notificationCenter) {
        throw 'unsupported method XCTest.(file).XCTNSNotificationExpectation.init(name:NSNotification.Name,object:Any?,notificationCenter:NotificationCenter) in ' + this.constructor.name;
    };
    /*XCTest.(file).XCTNSNotificationExpectation.init(name:NSNotification.Name,object:Any)*/
    /*XCTest.(file).XCTNSNotificationExpectation.init(name:NSNotification.Name,object:Any)*/
    XCTNSNotificationExpectation.prototype.initNameNSNotificationNameObjectprotocol_composition_type = function ($info, notificationName, object) {
        throw 'unsupported method XCTest.(file).XCTNSNotificationExpectation.init(name:NSNotification.Name,object:Any) in ' + this.constructor.name;
    };
    /*XCTest.(file).XCTNSNotificationExpectation.init(name:NSNotification.Name)*/
    /*XCTest.(file).XCTNSNotificationExpectation.init(name:NSNotification.Name)*/
    XCTNSNotificationExpectation.prototype.initNameNSNotificationName = function ($info, notificationName) {
        throw 'unsupported method XCTest.(file).XCTNSNotificationExpectation.init(name:NSNotification.Name) in ' + this.constructor.name;
    };
    XCTNSNotificationExpectation.prototype.init$vars = function () {
        if (_super.prototype.init$vars)
            _super.prototype.init$vars.call(this);
    };
    XCTNSNotificationExpectation.$infoAddress = '';
    return XCTNSNotificationExpectation;
}(XCTestExpectation));
var XCTNSPredicateExpectation = /** @class */ (function (_super) {
    __extends(XCTNSPredicateExpectation, _super);
    function XCTNSPredicateExpectation() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    /*XCTest.(file).XCTNSPredicateExpectation.init()*/
    /*ObjectiveC.(file).NSObject.init()*/
    XCTNSPredicateExpectation.prototype.init = function ($info) {
    };
    /*XCTest.(file).XCTNSPredicateExpectation.init(description:String)*/
    /*XCTest.(file).XCTestExpectation.init(description:String)*/
    XCTNSPredicateExpectation.prototype.initDescriptionString = function ($info, expectationDescription) {
        throw 'unsupported method XCTest.(file).XCTNSPredicateExpectation.init(description:String) in ' + this.constructor.name;
    };
    /*XCTest.(file).XCTNSPredicateExpectation.init(predicate:NSPredicate,object:Any?)*/
    /*XCTest.(file).XCTNSPredicateExpectation.init(predicate:NSPredicate,object:Any?)*/
    XCTNSPredicateExpectation.prototype.initPredicateNSPredicateObjectOptional = function ($info, predicate, object) {
        throw 'unsupported method XCTest.(file).XCTNSPredicateExpectation.init(predicate:NSPredicate,object:Any?) in ' + this.constructor.name;
    };
    XCTNSPredicateExpectation.prototype.init$vars = function () {
        if (_super.prototype.init$vars)
            _super.prototype.init$vars.call(this);
    };
    XCTNSPredicateExpectation.$infoAddress = '';
    return XCTNSPredicateExpectation;
}(XCTestExpectation));
var XCTestCaseRun = /** @class */ (function (_super) {
    __extends(XCTestCaseRun, _super);
    function XCTestCaseRun() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    /*XCTest.(file).XCTestCaseRun.recordFailure(inTest:XCTestCase,withDescription:String,inFile:String,atLine:Int,expected:Bool)*/
    /*XCTest.(file).XCTestCaseRun.recordFailure(inTest:XCTestCase,withDescription:String,inFile:String,atLine:Int,expected:Bool)*/
    XCTestCaseRun.prototype.recordFailureInTestWithDescriptionInFileAtLineExpected = function ($info, testCase, description, filePath, lineNumber, expected) {
        throw 'unsupported method XCTest.(file).XCTestCaseRun.recordFailure(inTest:XCTestCase,withDescription:String,inFile:String,atLine:Int,expected:Bool) in ' + this.constructor.name;
    };
    /*XCTest.(file).XCTestCaseRun.recordFailureInTest(_:XCTestCase,withDescription:String,inFile:String,atLine:Int,expected:Bool)*/
    /*XCTest.(file).XCTestCaseRun.recordFailureInTest(_:XCTestCase,withDescription:String,inFile:String,atLine:Int,expected:Bool)*/
    XCTestCaseRun.prototype.recordFailureInTestWithDescriptionInFileAtLineExpected = function ($info, testCase, description, filePath, lineNumber, expected) {
        throw 'unsupported method XCTest.(file).XCTestCaseRun.recordFailureInTest(_:XCTestCase,withDescription:String,inFile:String,atLine:Int,expected:Bool) in ' + this.constructor.name;
    };
    /*XCTest.(file).XCTestCaseRun.init()*/
    /*ObjectiveC.(file).NSObject.init()*/
    XCTestCaseRun.prototype.init = function ($info) {
    };
    /*XCTest.(file).XCTestCaseRun.init(test:XCTest)*/
    /*XCTest.(file).XCTestCaseRun.init(test:XCTest)*/
    XCTestCaseRun.prototype.initTestXCTest = function ($info, test) {
        throw 'unsupported method XCTest.(file).XCTestCaseRun.init(test:XCTest) in ' + this.constructor.name;
    };
    /*XCTest.(file).XCTestCaseRun.init(test:XCTest)*/
    /*XCTest.(file).XCTestRun.init(test:XCTest)*/
    XCTestCaseRun.prototype.initTestXCTest = function ($info, test) {
        throw 'unsupported method XCTest.(file).XCTestCaseRun.init(test:XCTest) in ' + this.constructor.name;
    };
    XCTestCaseRun.prototype.init$vars = function () {
        if (_super.prototype.init$vars)
            _super.prototype.init$vars.call(this);
    };
    XCTestCaseRun.$infoAddress = '';
    return XCTestCaseRun;
}(XCTestRun));
var XCTestLog = /** @class */ (function (_super) {
    __extends(XCTestLog, _super);
    function XCTestLog() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    /*XCTest.(file).XCTestLog.testLog(withFormat:String?,arguments:CVaListPointer)*/
    /*XCTest.(file).XCTestLog.testLog(withFormat:String?,arguments:CVaListPointer)*/
    XCTestLog.prototype.testLogWithFormatArguments = function ($info, format, _arguments) {
        throw 'unsupported method XCTest.(file).XCTestLog.testLog(withFormat:String?,arguments:CVaListPointer) in ' + this.constructor.name;
    };
    /*XCTest.(file).XCTestLog.testLogWithFormat(_:String?,arguments:CVaListPointer)*/
    /*XCTest.(file).XCTestLog.testLogWithFormat(_:String?,arguments:CVaListPointer)*/
    XCTestLog.prototype.testLogWithFormatArguments = function ($info, format, _arguments) {
        throw 'unsupported method XCTest.(file).XCTestLog.testLogWithFormat(_:String?,arguments:CVaListPointer) in ' + this.constructor.name;
    };
    /*XCTest.(file).XCTestLog.init()*/
    /*ObjectiveC.(file).NSObject.init()*/
    XCTestLog.prototype.init = function ($info) {
    };
    XCTestLog.prototype.init$vars = function () {
        if (_super.prototype.init$vars)
            _super.prototype.init$vars.call(this);
    };
    XCTestLog.$infoAddress = '';
    return XCTestLog;
}(XCTestObserver));
var XCUIElement = /** @class */ (function (_super) {
    __extends(XCUIElement, _super);
    function XCUIElement() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    /*XCTest.(file).XCUIElement.init()*/
    /*ObjectiveC.(file).NSObject.init()*/
    XCUIElement.prototype.init = function ($info) {
    };
    /*XCTest.(file).XCUIElement.waitForExistence(timeout:TimeInterval)*/
    /*XCTest.(file).XCUIElement.waitForExistence(timeout:TimeInterval)*/
    XCUIElement.prototype.waitForExistenceTimeout = function ($info, timeout) {
        throw 'unsupported method XCTest.(file).XCUIElement.waitForExistence(timeout:TimeInterval) in ' + this.constructor.name;
    };
    /*XCTest.(file).XCUIElement.waitForExistenceWithTimeout(_:TimeInterval)*/
    /*XCTest.(file).XCUIElement.waitForExistenceWithTimeout(_:TimeInterval)*/
    XCUIElement.prototype.waitForExistenceWithTimeout = function ($info, timeout) {
        throw 'unsupported method XCTest.(file).XCUIElement.waitForExistenceWithTimeout(_:TimeInterval) in ' + this.constructor.name;
    };
    /*XCTest.(file).XCUIElement.descendants(matching:XCUIElement.ElementType)*/
    /*XCTest.(file).XCUIElement.descendants(matching:XCUIElement.ElementType)*/
    XCUIElement.prototype.descendantsMatching = function ($info, type) {
        throw 'unsupported method XCTest.(file).XCUIElement.descendants(matching:XCUIElement.ElementType) in ' + this.constructor.name;
    };
    /*XCTest.(file).XCUIElement.descendantsMatchingType(_:XCUIElement.ElementType)*/
    /*XCTest.(file).XCUIElement.descendantsMatchingType(_:XCUIElement.ElementType)*/
    XCUIElement.prototype.descendantsMatchingType = function ($info, type) {
        throw 'unsupported method XCTest.(file).XCUIElement.descendantsMatchingType(_:XCUIElement.ElementType) in ' + this.constructor.name;
    };
    /*XCTest.(file).XCUIElement.children(matching:XCUIElement.ElementType)*/
    /*XCTest.(file).XCUIElement.children(matching:XCUIElement.ElementType)*/
    XCUIElement.prototype.childrenMatching = function ($info, type) {
        throw 'unsupported method XCTest.(file).XCUIElement.children(matching:XCUIElement.ElementType) in ' + this.constructor.name;
    };
    /*XCTest.(file).XCUIElement.childrenMatchingType(_:XCUIElement.ElementType)*/
    /*XCTest.(file).XCUIElement.childrenMatchingType(_:XCUIElement.ElementType)*/
    XCUIElement.prototype.childrenMatchingType = function ($info, type) {
        throw 'unsupported method XCTest.(file).XCUIElement.childrenMatchingType(_:XCUIElement.ElementType) in ' + this.constructor.name;
    };
    /*XCTest.(file).XCUIElement.coordinate(withNormalizedOffset:CGVector)*/
    /*XCTest.(file).XCUIElement.coordinate(withNormalizedOffset:CGVector)*/
    XCUIElement.prototype.coordinateWithNormalizedOffset = function ($info, normalizedOffset) {
        throw 'unsupported method XCTest.(file).XCUIElement.coordinate(withNormalizedOffset:CGVector) in ' + this.constructor.name;
    };
    /*XCTest.(file).XCUIElement.coordinateWithNormalizedOffset(_:CGVector)*/
    /*XCTest.(file).XCUIElement.coordinateWithNormalizedOffset(_:CGVector)*/
    XCUIElement.prototype.coordinateWithNormalizedOffset = function ($info, normalizedOffset) {
        throw 'unsupported method XCTest.(file).XCUIElement.coordinateWithNormalizedOffset(_:CGVector) in ' + this.constructor.name;
    };
    /*XCTest.(file).XCUIElement.screenshot()*/
    /*XCTest.(file).XCUIElement.screenshot()*/
    XCUIElement.prototype.screenshot = function ($info) {
        throw 'unsupported method XCTest.(file).XCUIElement.screenshot() in ' + this.constructor.name;
    };
    /*XCTest.(file).XCUIElement.typeText(_:String)*/
    /*XCTest.(file).XCUIElement.typeText(_:String)*/
    XCUIElement.prototype.typeText = function ($info, _text) {
        throw 'unsupported method XCTest.(file).XCUIElement.typeText(_:String) in ' + this.constructor.name;
    };
    /*XCTest.(file).XCUIElement.perform(withKeyModifiers:XCUIElement.KeyModifierFlags,block:() -> Void)*/
    /*XCTest.(file).XCUIElement.perform(withKeyModifiers:XCUIElement.KeyModifierFlags,block:() -> Void)*/
    XCUIElement.performWithKeyModifiersBlock = function ($info, flags, block) {
        throw 'unsupported method XCTest.(file).XCUIElement.perform(withKeyModifiers:XCUIElement.KeyModifierFlags,block:() -> Void) in ' + this.constructor.name;
    };
    /*XCTest.(file).XCUIElement.performWithKeyModifiers(_:XCUIElement.KeyModifierFlags,block:() -> Void)*/
    /*XCTest.(file).XCUIElement.performWithKeyModifiers(_:XCUIElement.KeyModifierFlags,block:() -> Void)*/
    XCUIElement.performWithKeyModifiersBlock = function ($info, flags, block) {
        throw 'unsupported method XCTest.(file).XCUIElement.performWithKeyModifiers(_:XCUIElement.KeyModifierFlags,block:() -> Void) in ' + this.constructor.name;
    };
    /*XCTest.(file).XCUIElement.typeKey(_:String,modifierFlags:XCUIElement.KeyModifierFlags)*/
    /*XCTest.(file).XCUIElement.typeKey(_:String,modifierFlags:XCUIElement.KeyModifierFlags)*/
    XCUIElement.prototype.typeKeyModifierFlags = function ($info, key, flags) {
        throw 'unsupported method XCTest.(file).XCUIElement.typeKey(_:String,modifierFlags:XCUIElement.KeyModifierFlags) in ' + this.constructor.name;
    };
    /*XCTest.(file).XCUIElement.hover()*/
    /*XCTest.(file).XCUIElement.hover()*/
    XCUIElement.prototype.hover = function ($info) {
        throw 'unsupported method XCTest.(file).XCUIElement.hover() in ' + this.constructor.name;
    };
    /*XCTest.(file).XCUIElement.click()*/
    /*XCTest.(file).XCUIElement.click()*/
    XCUIElement.prototype.click = function ($info) {
        throw 'unsupported method XCTest.(file).XCUIElement.click() in ' + this.constructor.name;
    };
    /*XCTest.(file).XCUIElement.doubleClick()*/
    /*XCTest.(file).XCUIElement.doubleClick()*/
    XCUIElement.prototype.doubleClick = function ($info) {
        throw 'unsupported method XCTest.(file).XCUIElement.doubleClick() in ' + this.constructor.name;
    };
    /*XCTest.(file).XCUIElement.rightClick()*/
    /*XCTest.(file).XCUIElement.rightClick()*/
    XCUIElement.prototype.rightClick = function ($info) {
        throw 'unsupported method XCTest.(file).XCUIElement.rightClick() in ' + this.constructor.name;
    };
    /*XCTest.(file).XCUIElement.click(forDuration:TimeInterval,thenDragTo:XCUIElement)*/
    /*XCTest.(file).XCUIElement.click(forDuration:TimeInterval,thenDragTo:XCUIElement)*/
    XCUIElement.prototype.clickForDurationThenDragTo = function ($info, duration, otherElement) {
        throw 'unsupported method XCTest.(file).XCUIElement.click(forDuration:TimeInterval,thenDragTo:XCUIElement) in ' + this.constructor.name;
    };
    /*XCTest.(file).XCUIElement.clickForDuration(_:TimeInterval,thenDragToElement:XCUIElement)*/
    /*XCTest.(file).XCUIElement.clickForDuration(_:TimeInterval,thenDragToElement:XCUIElement)*/
    XCUIElement.prototype.clickForDurationThenDragToElement = function ($info, duration, otherElement) {
        throw 'unsupported method XCTest.(file).XCUIElement.clickForDuration(_:TimeInterval,thenDragToElement:XCUIElement) in ' + this.constructor.name;
    };
    /*XCTest.(file).XCUIElement.scroll(byDeltaX:CGFloat,deltaY:CGFloat)*/
    /*XCTest.(file).XCUIElement.scroll(byDeltaX:CGFloat,deltaY:CGFloat)*/
    XCUIElement.prototype.scrollByDeltaXDeltaY = function ($info, deltaX, deltaY) {
        throw 'unsupported method XCTest.(file).XCUIElement.scroll(byDeltaX:CGFloat,deltaY:CGFloat) in ' + this.constructor.name;
    };
    /*XCTest.(file).XCUIElement.scrollByDeltaX(_:CGFloat,deltaY:CGFloat)*/
    /*XCTest.(file).XCUIElement.scrollByDeltaX(_:CGFloat,deltaY:CGFloat)*/
    XCUIElement.prototype.scrollByDeltaXDeltaY = function ($info, deltaX, deltaY) {
        throw 'unsupported method XCTest.(file).XCUIElement.scrollByDeltaX(_:CGFloat,deltaY:CGFloat) in ' + this.constructor.name;
    };
    /*XCTest.(file).XCUIElement.tap()*/
    /*XCTest.(file).XCUIElement.tap()*/
    XCUIElement.prototype.tap = function ($info) {
        throw 'unsupported method XCTest.(file).XCUIElement.tap() in ' + this.constructor.name;
    };
    /*XCTest.(file).XCUIElement.doubleTap()*/
    /*XCTest.(file).XCUIElement.doubleTap()*/
    XCUIElement.prototype.doubleTap = function ($info) {
        throw 'unsupported method XCTest.(file).XCUIElement.doubleTap() in ' + this.constructor.name;
    };
    /*XCTest.(file).XCUIElement.press(forDuration:TimeInterval)*/
    /*XCTest.(file).XCUIElement.press(forDuration:TimeInterval)*/
    XCUIElement.prototype.pressForDuration = function ($info, duration) {
        throw 'unsupported method XCTest.(file).XCUIElement.press(forDuration:TimeInterval) in ' + this.constructor.name;
    };
    /*XCTest.(file).XCUIElement.pressForDuration(_:TimeInterval)*/
    /*XCTest.(file).XCUIElement.pressForDuration(_:TimeInterval)*/
    XCUIElement.prototype.pressForDuration = function ($info, duration) {
        throw 'unsupported method XCTest.(file).XCUIElement.pressForDuration(_:TimeInterval) in ' + this.constructor.name;
    };
    /*XCTest.(file).XCUIElement.press(forDuration:TimeInterval,thenDragTo:XCUIElement)*/
    /*XCTest.(file).XCUIElement.press(forDuration:TimeInterval,thenDragTo:XCUIElement)*/
    XCUIElement.prototype.pressForDurationThenDragTo = function ($info, duration, otherElement) {
        throw 'unsupported method XCTest.(file).XCUIElement.press(forDuration:TimeInterval,thenDragTo:XCUIElement) in ' + this.constructor.name;
    };
    /*XCTest.(file).XCUIElement.pressForDuration(_:TimeInterval,thenDragToElement:XCUIElement)*/
    /*XCTest.(file).XCUIElement.pressForDuration(_:TimeInterval,thenDragToElement:XCUIElement)*/
    XCUIElement.prototype.pressForDurationThenDragToElement = function ($info, duration, otherElement) {
        throw 'unsupported method XCTest.(file).XCUIElement.pressForDuration(_:TimeInterval,thenDragToElement:XCUIElement) in ' + this.constructor.name;
    };
    /*XCTest.(file).XCUIElement.adjust(toNormalizedSliderPosition:CGFloat)*/
    /*XCTest.(file).XCUIElement.adjust(toNormalizedSliderPosition:CGFloat)*/
    XCUIElement.prototype.adjustToNormalizedSliderPosition = function ($info, normalizedSliderPosition) {
        throw 'unsupported method XCTest.(file).XCUIElement.adjust(toNormalizedSliderPosition:CGFloat) in ' + this.constructor.name;
    };
    /*XCTest.(file).XCUIElement.adjustToNormalizedSliderPosition(_:CGFloat)*/
    /*XCTest.(file).XCUIElement.adjustToNormalizedSliderPosition(_:CGFloat)*/
    XCUIElement.prototype.adjustToNormalizedSliderPosition = function ($info, normalizedSliderPosition) {
        throw 'unsupported method XCTest.(file).XCUIElement.adjustToNormalizedSliderPosition(_:CGFloat) in ' + this.constructor.name;
    };
    /*XCTest.(file).XCUIElement.snapshot()*/
    /*XCTest.(file).XCUIElement.snapshot()*/
    XCUIElement.prototype.snapshot = function ($info) {
        throw 'unsupported method XCTest.(file).XCUIElement.snapshot() in ' + this.constructor.name;
    };
    /*XCTest.(file).XCUIElement.typeKey(_:XCUIKeyboardKey,modifierFlags:XCUIElement.KeyModifierFlags)*/
    /*XCTest.(file).XCUIElement.typeKey(_:XCUIKeyboardKey,modifierFlags:XCUIElement.KeyModifierFlags)*/
    XCUIElement.prototype.typeKeyModifierFlags = function ($info, key, modifierFlags) {
        throw 'unsupported method XCTest.(file).XCUIElement.typeKey(_:XCUIKeyboardKey,modifierFlags:XCUIElement.KeyModifierFlags) in ' + this.constructor.name;
    };
    XCUIElement.prototype.init$vars = function () {
        if (_super.prototype.init$vars)
            _super.prototype.init$vars.call(this);
    };
    var _165, _166, _167;
    XCUIElement.$infoAddress = '';
    XCUIElement.ElementType = (_165 = /** @class */ (function () {
            function class_189() {
            }
            /*XCTest.(file).XCUIElement.ElementType.init(rawValue:UInt)*/
            /*XCTest.(file).XCUIElement.ElementType.init(rawValue:UInt)*/
            class_189.prototype.initRawValueUInt = function ($info, rawValue) {
                throw 'unsupported method XCTest.(file).XCUIElement.ElementType.init(rawValue:UInt) in ' + this.constructor.name;
            };
            /*XCTest.(file).XCUIElement.ElementType.rawValue*/
            class_189.prototype.rawValue$get = function () {
                throw 'unsupported variable XCTest.(file).XCUIElement.ElementType.rawValue in ' + this.constructor.name;
            };
            Object.defineProperty(class_189.prototype, "rawValue", {
                get: function () { return this.rawValue$get(); },
                enumerable: true,
                configurable: true
            });
            ;
            Object.defineProperty(class_189, "any", {
                get: function () { return Object.assign(new XCUIElement.ElementType(), __assign({ rawValue: 0 }, Array.from(arguments).slice(1))); },
                enumerable: true,
                configurable: true
            });
            Object.defineProperty(class_189, "other", {
                get: function () { return Object.assign(new XCUIElement.ElementType(), __assign({ rawValue: 1 }, Array.from(arguments).slice(1))); },
                enumerable: true,
                configurable: true
            });
            Object.defineProperty(class_189, "application", {
                get: function () { return Object.assign(new XCUIElement.ElementType(), __assign({ rawValue: 2 }, Array.from(arguments).slice(1))); },
                enumerable: true,
                configurable: true
            });
            Object.defineProperty(class_189, "group", {
                get: function () { return Object.assign(new XCUIElement.ElementType(), __assign({ rawValue: 3 }, Array.from(arguments).slice(1))); },
                enumerable: true,
                configurable: true
            });
            Object.defineProperty(class_189, "_window", {
                get: function () { return Object.assign(new XCUIElement.ElementType(), __assign({ rawValue: 4 }, Array.from(arguments).slice(1))); },
                enumerable: true,
                configurable: true
            });
            Object.defineProperty(class_189, "sheet", {
                get: function () { return Object.assign(new XCUIElement.ElementType(), __assign({ rawValue: 5 }, Array.from(arguments).slice(1))); },
                enumerable: true,
                configurable: true
            });
            Object.defineProperty(class_189, "drawer", {
                get: function () { return Object.assign(new XCUIElement.ElementType(), __assign({ rawValue: 6 }, Array.from(arguments).slice(1))); },
                enumerable: true,
                configurable: true
            });
            Object.defineProperty(class_189, "_alert", {
                get: function () { return Object.assign(new XCUIElement.ElementType(), __assign({ rawValue: 7 }, Array.from(arguments).slice(1))); },
                enumerable: true,
                configurable: true
            });
            Object.defineProperty(class_189, "dialog", {
                get: function () { return Object.assign(new XCUIElement.ElementType(), __assign({ rawValue: 8 }, Array.from(arguments).slice(1))); },
                enumerable: true,
                configurable: true
            });
            Object.defineProperty(class_189, "_button", {
                get: function () { return Object.assign(new XCUIElement.ElementType(), __assign({ rawValue: 9 }, Array.from(arguments).slice(1))); },
                enumerable: true,
                configurable: true
            });
            Object.defineProperty(class_189, "radioButton", {
                get: function () { return Object.assign(new XCUIElement.ElementType(), __assign({ rawValue: 10 }, Array.from(arguments).slice(1))); },
                enumerable: true,
                configurable: true
            });
            Object.defineProperty(class_189, "radioGroup", {
                get: function () { return Object.assign(new XCUIElement.ElementType(), __assign({ rawValue: 11 }, Array.from(arguments).slice(1))); },
                enumerable: true,
                configurable: true
            });
            Object.defineProperty(class_189, "checkBox", {
                get: function () { return Object.assign(new XCUIElement.ElementType(), __assign({ rawValue: 12 }, Array.from(arguments).slice(1))); },
                enumerable: true,
                configurable: true
            });
            Object.defineProperty(class_189, "disclosureTriangle", {
                get: function () { return Object.assign(new XCUIElement.ElementType(), __assign({ rawValue: 13 }, Array.from(arguments).slice(1))); },
                enumerable: true,
                configurable: true
            });
            Object.defineProperty(class_189, "popUpButton", {
                get: function () { return Object.assign(new XCUIElement.ElementType(), __assign({ rawValue: 14 }, Array.from(arguments).slice(1))); },
                enumerable: true,
                configurable: true
            });
            Object.defineProperty(class_189, "comboBox", {
                get: function () { return Object.assign(new XCUIElement.ElementType(), __assign({ rawValue: 15 }, Array.from(arguments).slice(1))); },
                enumerable: true,
                configurable: true
            });
            Object.defineProperty(class_189, "menuButton", {
                get: function () { return Object.assign(new XCUIElement.ElementType(), __assign({ rawValue: 16 }, Array.from(arguments).slice(1))); },
                enumerable: true,
                configurable: true
            });
            Object.defineProperty(class_189, "toolbarButton", {
                get: function () { return Object.assign(new XCUIElement.ElementType(), __assign({ rawValue: 17 }, Array.from(arguments).slice(1))); },
                enumerable: true,
                configurable: true
            });
            Object.defineProperty(class_189, "popover", {
                get: function () { return Object.assign(new XCUIElement.ElementType(), __assign({ rawValue: 18 }, Array.from(arguments).slice(1))); },
                enumerable: true,
                configurable: true
            });
            Object.defineProperty(class_189, "keyboard", {
                get: function () { return Object.assign(new XCUIElement.ElementType(), __assign({ rawValue: 19 }, Array.from(arguments).slice(1))); },
                enumerable: true,
                configurable: true
            });
            Object.defineProperty(class_189, "key", {
                get: function () { return Object.assign(new XCUIElement.ElementType(), __assign({ rawValue: 20 }, Array.from(arguments).slice(1))); },
                enumerable: true,
                configurable: true
            });
            Object.defineProperty(class_189, "navigationBar", {
                get: function () { return Object.assign(new XCUIElement.ElementType(), __assign({ rawValue: 21 }, Array.from(arguments).slice(1))); },
                enumerable: true,
                configurable: true
            });
            Object.defineProperty(class_189, "tabBar", {
                get: function () { return Object.assign(new XCUIElement.ElementType(), __assign({ rawValue: 22 }, Array.from(arguments).slice(1))); },
                enumerable: true,
                configurable: true
            });
            Object.defineProperty(class_189, "tabGroup", {
                get: function () { return Object.assign(new XCUIElement.ElementType(), __assign({ rawValue: 23 }, Array.from(arguments).slice(1))); },
                enumerable: true,
                configurable: true
            });
            Object.defineProperty(class_189, "toolbar", {
                get: function () { return Object.assign(new XCUIElement.ElementType(), __assign({ rawValue: 24 }, Array.from(arguments).slice(1))); },
                enumerable: true,
                configurable: true
            });
            Object.defineProperty(class_189, "statusBar", {
                get: function () { return Object.assign(new XCUIElement.ElementType(), __assign({ rawValue: 25 }, Array.from(arguments).slice(1))); },
                enumerable: true,
                configurable: true
            });
            Object.defineProperty(class_189, "table", {
                get: function () { return Object.assign(new XCUIElement.ElementType(), __assign({ rawValue: 26 }, Array.from(arguments).slice(1))); },
                enumerable: true,
                configurable: true
            });
            Object.defineProperty(class_189, "tableRow", {
                get: function () { return Object.assign(new XCUIElement.ElementType(), __assign({ rawValue: 27 }, Array.from(arguments).slice(1))); },
                enumerable: true,
                configurable: true
            });
            Object.defineProperty(class_189, "tableColumn", {
                get: function () { return Object.assign(new XCUIElement.ElementType(), __assign({ rawValue: 28 }, Array.from(arguments).slice(1))); },
                enumerable: true,
                configurable: true
            });
            Object.defineProperty(class_189, "outline", {
                get: function () { return Object.assign(new XCUIElement.ElementType(), __assign({ rawValue: 29 }, Array.from(arguments).slice(1))); },
                enumerable: true,
                configurable: true
            });
            Object.defineProperty(class_189, "outlineRow", {
                get: function () { return Object.assign(new XCUIElement.ElementType(), __assign({ rawValue: 30 }, Array.from(arguments).slice(1))); },
                enumerable: true,
                configurable: true
            });
            Object.defineProperty(class_189, "browser", {
                get: function () { return Object.assign(new XCUIElement.ElementType(), __assign({ rawValue: 31 }, Array.from(arguments).slice(1))); },
                enumerable: true,
                configurable: true
            });
            Object.defineProperty(class_189, "collectionView", {
                get: function () { return Object.assign(new XCUIElement.ElementType(), __assign({ rawValue: 32 }, Array.from(arguments).slice(1))); },
                enumerable: true,
                configurable: true
            });
            Object.defineProperty(class_189, "slider", {
                get: function () { return Object.assign(new XCUIElement.ElementType(), __assign({ rawValue: 33 }, Array.from(arguments).slice(1))); },
                enumerable: true,
                configurable: true
            });
            Object.defineProperty(class_189, "pageIndicator", {
                get: function () { return Object.assign(new XCUIElement.ElementType(), __assign({ rawValue: 34 }, Array.from(arguments).slice(1))); },
                enumerable: true,
                configurable: true
            });
            Object.defineProperty(class_189, "progressIndicator", {
                get: function () { return Object.assign(new XCUIElement.ElementType(), __assign({ rawValue: 35 }, Array.from(arguments).slice(1))); },
                enumerable: true,
                configurable: true
            });
            Object.defineProperty(class_189, "activityIndicator", {
                get: function () { return Object.assign(new XCUIElement.ElementType(), __assign({ rawValue: 36 }, Array.from(arguments).slice(1))); },
                enumerable: true,
                configurable: true
            });
            Object.defineProperty(class_189, "segmentedControl", {
                get: function () { return Object.assign(new XCUIElement.ElementType(), __assign({ rawValue: 37 }, Array.from(arguments).slice(1))); },
                enumerable: true,
                configurable: true
            });
            Object.defineProperty(class_189, "picker", {
                get: function () { return Object.assign(new XCUIElement.ElementType(), __assign({ rawValue: 38 }, Array.from(arguments).slice(1))); },
                enumerable: true,
                configurable: true
            });
            Object.defineProperty(class_189, "pickerWheel", {
                get: function () { return Object.assign(new XCUIElement.ElementType(), __assign({ rawValue: 39 }, Array.from(arguments).slice(1))); },
                enumerable: true,
                configurable: true
            });
            Object.defineProperty(class_189, "_switch", {
                get: function () { return Object.assign(new XCUIElement.ElementType(), __assign({ rawValue: 40 }, Array.from(arguments).slice(1))); },
                enumerable: true,
                configurable: true
            });
            Object.defineProperty(class_189, "toggle", {
                get: function () { return Object.assign(new XCUIElement.ElementType(), __assign({ rawValue: 41 }, Array.from(arguments).slice(1))); },
                enumerable: true,
                configurable: true
            });
            Object.defineProperty(class_189, "_link", {
                get: function () { return Object.assign(new XCUIElement.ElementType(), __assign({ rawValue: 42 }, Array.from(arguments).slice(1))); },
                enumerable: true,
                configurable: true
            });
            Object.defineProperty(class_189, "_image", {
                get: function () { return Object.assign(new XCUIElement.ElementType(), __assign({ rawValue: 43 }, Array.from(arguments).slice(1))); },
                enumerable: true,
                configurable: true
            });
            Object.defineProperty(class_189, "icon", {
                get: function () { return Object.assign(new XCUIElement.ElementType(), __assign({ rawValue: 44 }, Array.from(arguments).slice(1))); },
                enumerable: true,
                configurable: true
            });
            Object.defineProperty(class_189, "searchField", {
                get: function () { return Object.assign(new XCUIElement.ElementType(), __assign({ rawValue: 45 }, Array.from(arguments).slice(1))); },
                enumerable: true,
                configurable: true
            });
            Object.defineProperty(class_189, "scrollView", {
                get: function () { return Object.assign(new XCUIElement.ElementType(), __assign({ rawValue: 46 }, Array.from(arguments).slice(1))); },
                enumerable: true,
                configurable: true
            });
            Object.defineProperty(class_189, "scrollBar", {
                get: function () { return Object.assign(new XCUIElement.ElementType(), __assign({ rawValue: 47 }, Array.from(arguments).slice(1))); },
                enumerable: true,
                configurable: true
            });
            Object.defineProperty(class_189, "staticText", {
                get: function () { return Object.assign(new XCUIElement.ElementType(), __assign({ rawValue: 48 }, Array.from(arguments).slice(1))); },
                enumerable: true,
                configurable: true
            });
            Object.defineProperty(class_189, "textField", {
                get: function () { return Object.assign(new XCUIElement.ElementType(), __assign({ rawValue: 49 }, Array.from(arguments).slice(1))); },
                enumerable: true,
                configurable: true
            });
            Object.defineProperty(class_189, "secureTextField", {
                get: function () { return Object.assign(new XCUIElement.ElementType(), __assign({ rawValue: 50 }, Array.from(arguments).slice(1))); },
                enumerable: true,
                configurable: true
            });
            Object.defineProperty(class_189, "datePicker", {
                get: function () { return Object.assign(new XCUIElement.ElementType(), __assign({ rawValue: 51 }, Array.from(arguments).slice(1))); },
                enumerable: true,
                configurable: true
            });
            Object.defineProperty(class_189, "textView", {
                get: function () { return Object.assign(new XCUIElement.ElementType(), __assign({ rawValue: 52 }, Array.from(arguments).slice(1))); },
                enumerable: true,
                configurable: true
            });
            Object.defineProperty(class_189, "menu", {
                get: function () { return Object.assign(new XCUIElement.ElementType(), __assign({ rawValue: 53 }, Array.from(arguments).slice(1))); },
                enumerable: true,
                configurable: true
            });
            Object.defineProperty(class_189, "menuItem", {
                get: function () { return Object.assign(new XCUIElement.ElementType(), __assign({ rawValue: 54 }, Array.from(arguments).slice(1))); },
                enumerable: true,
                configurable: true
            });
            Object.defineProperty(class_189, "menuBar", {
                get: function () { return Object.assign(new XCUIElement.ElementType(), __assign({ rawValue: 55 }, Array.from(arguments).slice(1))); },
                enumerable: true,
                configurable: true
            });
            Object.defineProperty(class_189, "menuBarItem", {
                get: function () { return Object.assign(new XCUIElement.ElementType(), __assign({ rawValue: 56 }, Array.from(arguments).slice(1))); },
                enumerable: true,
                configurable: true
            });
            Object.defineProperty(class_189, "map", {
                get: function () { return Object.assign(new XCUIElement.ElementType(), __assign({ rawValue: 57 }, Array.from(arguments).slice(1))); },
                enumerable: true,
                configurable: true
            });
            Object.defineProperty(class_189, "webView", {
                get: function () { return Object.assign(new XCUIElement.ElementType(), __assign({ rawValue: 58 }, Array.from(arguments).slice(1))); },
                enumerable: true,
                configurable: true
            });
            Object.defineProperty(class_189, "incrementArrow", {
                get: function () { return Object.assign(new XCUIElement.ElementType(), __assign({ rawValue: 59 }, Array.from(arguments).slice(1))); },
                enumerable: true,
                configurable: true
            });
            Object.defineProperty(class_189, "decrementArrow", {
                get: function () { return Object.assign(new XCUIElement.ElementType(), __assign({ rawValue: 60 }, Array.from(arguments).slice(1))); },
                enumerable: true,
                configurable: true
            });
            Object.defineProperty(class_189, "timeline", {
                get: function () { return Object.assign(new XCUIElement.ElementType(), __assign({ rawValue: 61 }, Array.from(arguments).slice(1))); },
                enumerable: true,
                configurable: true
            });
            Object.defineProperty(class_189, "ratingIndicator", {
                get: function () { return Object.assign(new XCUIElement.ElementType(), __assign({ rawValue: 62 }, Array.from(arguments).slice(1))); },
                enumerable: true,
                configurable: true
            });
            Object.defineProperty(class_189, "valueIndicator", {
                get: function () { return Object.assign(new XCUIElement.ElementType(), __assign({ rawValue: 63 }, Array.from(arguments).slice(1))); },
                enumerable: true,
                configurable: true
            });
            Object.defineProperty(class_189, "splitGroup", {
                get: function () { return Object.assign(new XCUIElement.ElementType(), __assign({ rawValue: 64 }, Array.from(arguments).slice(1))); },
                enumerable: true,
                configurable: true
            });
            Object.defineProperty(class_189, "splitter", {
                get: function () { return Object.assign(new XCUIElement.ElementType(), __assign({ rawValue: 65 }, Array.from(arguments).slice(1))); },
                enumerable: true,
                configurable: true
            });
            Object.defineProperty(class_189, "relevanceIndicator", {
                get: function () { return Object.assign(new XCUIElement.ElementType(), __assign({ rawValue: 66 }, Array.from(arguments).slice(1))); },
                enumerable: true,
                configurable: true
            });
            Object.defineProperty(class_189, "colorWell", {
                get: function () { return Object.assign(new XCUIElement.ElementType(), __assign({ rawValue: 67 }, Array.from(arguments).slice(1))); },
                enumerable: true,
                configurable: true
            });
            Object.defineProperty(class_189, "helpTag", {
                get: function () { return Object.assign(new XCUIElement.ElementType(), __assign({ rawValue: 68 }, Array.from(arguments).slice(1))); },
                enumerable: true,
                configurable: true
            });
            Object.defineProperty(class_189, "matte", {
                get: function () { return Object.assign(new XCUIElement.ElementType(), __assign({ rawValue: 69 }, Array.from(arguments).slice(1))); },
                enumerable: true,
                configurable: true
            });
            Object.defineProperty(class_189, "dockItem", {
                get: function () { return Object.assign(new XCUIElement.ElementType(), __assign({ rawValue: 70 }, Array.from(arguments).slice(1))); },
                enumerable: true,
                configurable: true
            });
            Object.defineProperty(class_189, "ruler", {
                get: function () { return Object.assign(new XCUIElement.ElementType(), __assign({ rawValue: 71 }, Array.from(arguments).slice(1))); },
                enumerable: true,
                configurable: true
            });
            Object.defineProperty(class_189, "rulerMarker", {
                get: function () { return Object.assign(new XCUIElement.ElementType(), __assign({ rawValue: 72 }, Array.from(arguments).slice(1))); },
                enumerable: true,
                configurable: true
            });
            Object.defineProperty(class_189, "grid", {
                get: function () { return Object.assign(new XCUIElement.ElementType(), __assign({ rawValue: 73 }, Array.from(arguments).slice(1))); },
                enumerable: true,
                configurable: true
            });
            Object.defineProperty(class_189, "levelIndicator", {
                get: function () { return Object.assign(new XCUIElement.ElementType(), __assign({ rawValue: 74 }, Array.from(arguments).slice(1))); },
                enumerable: true,
                configurable: true
            });
            Object.defineProperty(class_189, "cell", {
                get: function () { return Object.assign(new XCUIElement.ElementType(), __assign({ rawValue: 75 }, Array.from(arguments).slice(1))); },
                enumerable: true,
                configurable: true
            });
            Object.defineProperty(class_189, "layoutArea", {
                get: function () { return Object.assign(new XCUIElement.ElementType(), __assign({ rawValue: 76 }, Array.from(arguments).slice(1))); },
                enumerable: true,
                configurable: true
            });
            Object.defineProperty(class_189, "layoutItem", {
                get: function () { return Object.assign(new XCUIElement.ElementType(), __assign({ rawValue: 77 }, Array.from(arguments).slice(1))); },
                enumerable: true,
                configurable: true
            });
            Object.defineProperty(class_189, "handle", {
                get: function () { return Object.assign(new XCUIElement.ElementType(), __assign({ rawValue: 78 }, Array.from(arguments).slice(1))); },
                enumerable: true,
                configurable: true
            });
            Object.defineProperty(class_189, "stepper", {
                get: function () { return Object.assign(new XCUIElement.ElementType(), __assign({ rawValue: 79 }, Array.from(arguments).slice(1))); },
                enumerable: true,
                configurable: true
            });
            Object.defineProperty(class_189, "tab", {
                get: function () { return Object.assign(new XCUIElement.ElementType(), __assign({ rawValue: 80 }, Array.from(arguments).slice(1))); },
                enumerable: true,
                configurable: true
            });
            Object.defineProperty(class_189, "touchBar", {
                get: function () { return Object.assign(new XCUIElement.ElementType(), __assign({ rawValue: 81 }, Array.from(arguments).slice(1))); },
                enumerable: true,
                configurable: true
            });
            Object.defineProperty(class_189, "statusItem", {
                get: function () { return Object.assign(new XCUIElement.ElementType(), __assign({ rawValue: 82 }, Array.from(arguments).slice(1))); },
                enumerable: true,
                configurable: true
            });
            class_189.prototype.init$vars = function () {
            };
            return class_189;
        }()),
        _165.$infoAddress = '',
        _165.initRawValueUInt$failable = true,
        _165);
    XCUIElement.SizeClass = (_166 = /** @class */ (function () {
            function class_190() {
            }
            /*XCTest.(file).XCUIElement.SizeClass.init(rawValue:Int)*/
            /*XCTest.(file).XCUIElement.SizeClass.init(rawValue:Int)*/
            class_190.prototype.initRawValueInt = function ($info, rawValue) {
                throw 'unsupported method XCTest.(file).XCUIElement.SizeClass.init(rawValue:Int) in ' + this.constructor.name;
            };
            /*XCTest.(file).XCUIElement.SizeClass.rawValue*/
            class_190.prototype.rawValue$get = function () {
                throw 'unsupported variable XCTest.(file).XCUIElement.SizeClass.rawValue in ' + this.constructor.name;
            };
            Object.defineProperty(class_190.prototype, "rawValue", {
                get: function () { return this.rawValue$get(); },
                enumerable: true,
                configurable: true
            });
            ;
            Object.defineProperty(class_190, "unspecified", {
                get: function () { return Object.assign(new XCUIElement.SizeClass(), __assign({ rawValue: 0 }, Array.from(arguments).slice(1))); },
                enumerable: true,
                configurable: true
            });
            class_190.prototype.init$vars = function () {
            };
            return class_190;
        }()),
        _166.$infoAddress = '',
        _166.initRawValueInt$failable = true,
        _166);
    XCUIElement.KeyModifierFlags = (_167 = /** @class */ (function () {
            function class_191() {
            }
            /*XCTest.(file).XCUIElement.KeyModifierFlags.init(rawValue:UInt)*/
            /*XCTest.(file).XCUIElement.KeyModifierFlags.init(rawValue:UInt)*/
            class_191.prototype.initRawValueUInt = function ($info, rawValue) {
                throw 'unsupported method XCTest.(file).XCUIElement.KeyModifierFlags.init(rawValue:UInt) in ' + this.constructor.name;
            };
            /*XCTest.(file).XCUIElement.KeyModifierFlags.rawValue*/
            class_191.prototype.rawValue$get = function () {
                throw 'unsupported variable XCTest.(file).XCUIElement.KeyModifierFlags.rawValue in ' + this.constructor.name;
            };
            Object.defineProperty(class_191.prototype, "rawValue", {
                get: function () { return this.rawValue$get(); },
                enumerable: true,
                configurable: true
            });
            ;
            class_191.prototype.init$vars = function () {
            };
            return class_191;
        }()),
        _167.$struct = true,
        _167.$infoAddress = '',
        _167);
    return XCUIElement;
}(NSObject));
_mixin(XCUIElement.ElementType, _DefaultEnumImplementation, false);
_mixin(XCUIElement.SizeClass, _DefaultEnumImplementation, false);
if (typeof XCUIElementAttributes$implementation != 'undefined')
    _mixin(XCUIElement, XCUIElementAttributes$implementation, false);
if (typeof XCUIElementTypeQueryProvider$implementation != 'undefined')
    _mixin(XCUIElement, XCUIElementTypeQueryProvider$implementation, false);
if (typeof XCUIScreenshotProviding$implementation != 'undefined')
    _mixin(XCUIElement, XCUIScreenshotProviding$implementation, false);
if (typeof XCUIElementSnapshotProviding$implementation != 'undefined')
    _mixin(XCUIElement, XCUIElementSnapshotProviding$implementation, false);
var XCUIElementQuery = /** @class */ (function (_super) {
    __extends(XCUIElementQuery, _super);
    function XCUIElementQuery() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    /*XCTest.(file).XCUIElementQuery.init()*/
    /*ObjectiveC.(file).NSObject.init()*/
    XCUIElementQuery.prototype.init = function ($info) {
    };
    /*XCTest.(file).XCUIElementQuery.element(at:Int)*/
    /*XCTest.(file).XCUIElementQuery.element(at:Int)*/
    XCUIElementQuery.prototype.elementAt = function ($info, index) {
        throw 'unsupported method XCTest.(file).XCUIElementQuery.element(at:Int) in ' + this.constructor.name;
    };
    /*XCTest.(file).XCUIElementQuery.elementAtIndex(_:Int)*/
    /*XCTest.(file).XCUIElementQuery.elementAtIndex(_:Int)*/
    XCUIElementQuery.prototype.elementAtIndex = function ($info, index) {
        throw 'unsupported method XCTest.(file).XCUIElementQuery.elementAtIndex(_:Int) in ' + this.constructor.name;
    };
    /*XCTest.(file).XCUIElementQuery.element(boundBy:Int)*/
    /*XCTest.(file).XCUIElementQuery.element(boundBy:Int)*/
    XCUIElementQuery.prototype.elementBoundBy = function ($info, index) {
        throw 'unsupported method XCTest.(file).XCUIElementQuery.element(boundBy:Int) in ' + this.constructor.name;
    };
    /*XCTest.(file).XCUIElementQuery.elementBoundByIndex(_:Int)*/
    /*XCTest.(file).XCUIElementQuery.elementBoundByIndex(_:Int)*/
    XCUIElementQuery.prototype.elementBoundByIndex = function ($info, index) {
        throw 'unsupported method XCTest.(file).XCUIElementQuery.elementBoundByIndex(_:Int) in ' + this.constructor.name;
    };
    /*XCTest.(file).XCUIElementQuery.element(matching:NSPredicate)*/
    /*XCTest.(file).XCUIElementQuery.element(matching:NSPredicate)*/
    XCUIElementQuery.prototype.elementMatching = function ($info, predicate) {
        throw 'unsupported method XCTest.(file).XCUIElementQuery.element(matching:NSPredicate) in ' + this.constructor.name;
    };
    /*XCTest.(file).XCUIElementQuery.elementMatchingPredicate(_:NSPredicate)*/
    /*XCTest.(file).XCUIElementQuery.elementMatchingPredicate(_:NSPredicate)*/
    XCUIElementQuery.prototype.elementMatchingPredicate = function ($info, predicate) {
        throw 'unsupported method XCTest.(file).XCUIElementQuery.elementMatchingPredicate(_:NSPredicate) in ' + this.constructor.name;
    };
    /*XCTest.(file).XCUIElementQuery.element(matching:XCUIElement.ElementType,identifier:String?)*/
    /*XCTest.(file).XCUIElementQuery.element(matching:XCUIElement.ElementType,identifier:String?)*/
    XCUIElementQuery.prototype.elementMatchingIdentifier = function ($info, elementType, identifier) {
        throw 'unsupported method XCTest.(file).XCUIElementQuery.element(matching:XCUIElement.ElementType,identifier:String?) in ' + this.constructor.name;
    };
    /*XCTest.(file).XCUIElementQuery.elementMatchingType(_:XCUIElement.ElementType,identifier:String?)*/
    /*XCTest.(file).XCUIElementQuery.elementMatchingType(_:XCUIElement.ElementType,identifier:String?)*/
    XCUIElementQuery.prototype.elementMatchingTypeIdentifier = function ($info, elementType, identifier) {
        throw 'unsupported method XCTest.(file).XCUIElementQuery.elementMatchingType(_:XCUIElement.ElementType,identifier:String?) in ' + this.constructor.name;
    };
    /*XCTest.(file).XCUIElementQuery.subscript(_:String)*/
    /*XCTest.(file).XCUIElementQuery.subscript(_:String)*/
    XCUIElementQuery.prototype.subscript$get = function ($info, key) {
        throw 'unsupported method XCTest.(file).XCUIElementQuery.subscript(_:String) in ' + this.constructor.name;
    };
    /*XCTest.(file).XCUIElementQuery.objectForKeyedSubscript(_:String)*/
    /*XCTest.(file).XCUIElementQuery.objectForKeyedSubscript(_:String)*/
    XCUIElementQuery.prototype.objectForKeyedSubscript = function ($info, key) {
        throw 'unsupported method XCTest.(file).XCUIElementQuery.objectForKeyedSubscript(_:String) in ' + this.constructor.name;
    };
    /*XCTest.(file).XCUIElementQuery.descendants(matching:XCUIElement.ElementType)*/
    /*XCTest.(file).XCUIElementQuery.descendants(matching:XCUIElement.ElementType)*/
    XCUIElementQuery.prototype.descendantsMatching = function ($info, type) {
        throw 'unsupported method XCTest.(file).XCUIElementQuery.descendants(matching:XCUIElement.ElementType) in ' + this.constructor.name;
    };
    /*XCTest.(file).XCUIElementQuery.descendantsMatchingType(_:XCUIElement.ElementType)*/
    /*XCTest.(file).XCUIElementQuery.descendantsMatchingType(_:XCUIElement.ElementType)*/
    XCUIElementQuery.prototype.descendantsMatchingType = function ($info, type) {
        throw 'unsupported method XCTest.(file).XCUIElementQuery.descendantsMatchingType(_:XCUIElement.ElementType) in ' + this.constructor.name;
    };
    /*XCTest.(file).XCUIElementQuery.children(matching:XCUIElement.ElementType)*/
    /*XCTest.(file).XCUIElementQuery.children(matching:XCUIElement.ElementType)*/
    XCUIElementQuery.prototype.childrenMatching = function ($info, type) {
        throw 'unsupported method XCTest.(file).XCUIElementQuery.children(matching:XCUIElement.ElementType) in ' + this.constructor.name;
    };
    /*XCTest.(file).XCUIElementQuery.childrenMatchingType(_:XCUIElement.ElementType)*/
    /*XCTest.(file).XCUIElementQuery.childrenMatchingType(_:XCUIElement.ElementType)*/
    XCUIElementQuery.prototype.childrenMatchingType = function ($info, type) {
        throw 'unsupported method XCTest.(file).XCUIElementQuery.childrenMatchingType(_:XCUIElement.ElementType) in ' + this.constructor.name;
    };
    /*XCTest.(file).XCUIElementQuery.matching(_:NSPredicate)*/
    /*XCTest.(file).XCUIElementQuery.matching(_:NSPredicate)*/
    XCUIElementQuery.prototype.matching = function ($info, predicate) {
        throw 'unsupported method XCTest.(file).XCUIElementQuery.matching(_:NSPredicate) in ' + this.constructor.name;
    };
    /*XCTest.(file).XCUIElementQuery.matchingPredicate(_:NSPredicate)*/
    /*XCTest.(file).XCUIElementQuery.matchingPredicate(_:NSPredicate)*/
    XCUIElementQuery.prototype.matchingPredicate = function ($info, predicate) {
        throw 'unsupported method XCTest.(file).XCUIElementQuery.matchingPredicate(_:NSPredicate) in ' + this.constructor.name;
    };
    /*XCTest.(file).XCUIElementQuery.matching(_:XCUIElement.ElementType,identifier:String?)*/
    /*XCTest.(file).XCUIElementQuery.matching(_:XCUIElement.ElementType,identifier:String?)*/
    XCUIElementQuery.prototype.matchingIdentifier = function ($info, elementType, identifier) {
        throw 'unsupported method XCTest.(file).XCUIElementQuery.matching(_:XCUIElement.ElementType,identifier:String?) in ' + this.constructor.name;
    };
    /*XCTest.(file).XCUIElementQuery.matchingType(_:XCUIElement.ElementType,identifier:String?)*/
    /*XCTest.(file).XCUIElementQuery.matchingType(_:XCUIElement.ElementType,identifier:String?)*/
    XCUIElementQuery.prototype.matchingTypeIdentifier = function ($info, elementType, identifier) {
        throw 'unsupported method XCTest.(file).XCUIElementQuery.matchingType(_:XCUIElement.ElementType,identifier:String?) in ' + this.constructor.name;
    };
    /*XCTest.(file).XCUIElementQuery.matching(identifier:String)*/
    /*XCTest.(file).XCUIElementQuery.matching(identifier:String)*/
    XCUIElementQuery.prototype.matchingIdentifier = function ($info, identifier) {
        throw 'unsupported method XCTest.(file).XCUIElementQuery.matching(identifier:String) in ' + this.constructor.name;
    };
    /*XCTest.(file).XCUIElementQuery.matchingIdentifier(_:String)*/
    /*XCTest.(file).XCUIElementQuery.matchingIdentifier(_:String)*/
    XCUIElementQuery.prototype.matchingIdentifier = function ($info, identifier) {
        throw 'unsupported method XCTest.(file).XCUIElementQuery.matchingIdentifier(_:String) in ' + this.constructor.name;
    };
    /*XCTest.(file).XCUIElementQuery.containing(_:NSPredicate)*/
    /*XCTest.(file).XCUIElementQuery.containing(_:NSPredicate)*/
    XCUIElementQuery.prototype.containing = function ($info, predicate) {
        throw 'unsupported method XCTest.(file).XCUIElementQuery.containing(_:NSPredicate) in ' + this.constructor.name;
    };
    /*XCTest.(file).XCUIElementQuery.containingPredicate(_:NSPredicate)*/
    /*XCTest.(file).XCUIElementQuery.containingPredicate(_:NSPredicate)*/
    XCUIElementQuery.prototype.containingPredicate = function ($info, predicate) {
        throw 'unsupported method XCTest.(file).XCUIElementQuery.containingPredicate(_:NSPredicate) in ' + this.constructor.name;
    };
    /*XCTest.(file).XCUIElementQuery.containing(_:XCUIElement.ElementType,identifier:String?)*/
    /*XCTest.(file).XCUIElementQuery.containing(_:XCUIElement.ElementType,identifier:String?)*/
    XCUIElementQuery.prototype.containingIdentifier = function ($info, elementType, identifier) {
        throw 'unsupported method XCTest.(file).XCUIElementQuery.containing(_:XCUIElement.ElementType,identifier:String?) in ' + this.constructor.name;
    };
    /*XCTest.(file).XCUIElementQuery.containingType(_:XCUIElement.ElementType,identifier:String?)*/
    /*XCTest.(file).XCUIElementQuery.containingType(_:XCUIElement.ElementType,identifier:String?)*/
    XCUIElementQuery.prototype.containingTypeIdentifier = function ($info, elementType, identifier) {
        throw 'unsupported method XCTest.(file).XCUIElementQuery.containingType(_:XCUIElement.ElementType,identifier:String?) in ' + this.constructor.name;
    };
    XCUIElementQuery.prototype.init$vars = function () {
        if (_super.prototype.init$vars)
            _super.prototype.init$vars.call(this);
    };
    XCUIElementQuery.$infoAddress = '';
    return XCUIElementQuery;
}(NSObject));
if (typeof XCUIElementTypeQueryProvider$implementation != 'undefined')
    _mixin(XCUIElementQuery, XCUIElementTypeQueryProvider$implementation, false);
var XCUIScreen = /** @class */ (function (_super) {
    __extends(XCUIScreen, _super);
    function XCUIScreen() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    /*XCTest.(file).XCUIScreen.init()*/
    /*ObjectiveC.(file).NSObject.init()*/
    XCUIScreen.prototype.init = function ($info) {
    };
    /*XCTest.(file).XCUIScreen.screenshot()*/
    /*XCTest.(file).XCUIScreen.screenshot()*/
    XCUIScreen.prototype.screenshot = function ($info) {
        throw 'unsupported method XCTest.(file).XCUIScreen.screenshot() in ' + this.constructor.name;
    };
    XCUIScreen.prototype.init$vars = function () {
        if (_super.prototype.init$vars)
            _super.prototype.init$vars.call(this);
    };
    XCUIScreen.$infoAddress = '';
    return XCUIScreen;
}(NSObject));
if (typeof XCUIScreenshotProviding$implementation != 'undefined')
    _mixin(XCUIScreen, XCUIScreenshotProviding$implementation, false);
var XCUIApplication = /** @class */ (function (_super) {
    __extends(XCUIApplication, _super);
    function XCUIApplication() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    /*XCTest.(file).XCUIApplication.init()*/
    /*ObjectiveC.(file).NSObject.init()*/
    XCUIApplication.prototype.init = function ($info) {
    };
    /*XCTest.(file).XCUIApplication.init(bundleIdentifier:String)*/
    /*XCTest.(file).XCUIApplication.init(bundleIdentifier:String)*/
    XCUIApplication.prototype.initBundleIdentifierString = function ($info, bundleIdentifier) {
        throw 'unsupported method XCTest.(file).XCUIApplication.init(bundleIdentifier:String) in ' + this.constructor.name;
    };
    /*XCTest.(file).XCUIApplication.init(url:URL)*/
    /*XCTest.(file).XCUIApplication.init(url:URL)*/
    XCUIApplication.prototype.initUrlURL = function ($info, url) {
        throw 'unsupported method XCTest.(file).XCUIApplication.init(url:URL) in ' + this.constructor.name;
    };
    /*XCTest.(file).XCUIApplication.init(URL:URL)*/
    /*XCTest.(file).XCUIApplication.init(URL:URL)*/
    XCUIApplication.prototype.initURLURL = function ($info, url) {
        throw 'unsupported method XCTest.(file).XCUIApplication.init(URL:URL) in ' + this.constructor.name;
    };
    /*XCTest.(file).XCUIApplication.launch()*/
    /*XCTest.(file).XCUIApplication.launch()*/
    XCUIApplication.prototype.launch = function ($info) {
        throw 'unsupported method XCTest.(file).XCUIApplication.launch() in ' + this.constructor.name;
    };
    /*XCTest.(file).XCUIApplication.activate()*/
    /*XCTest.(file).XCUIApplication.activate()*/
    XCUIApplication.prototype.activate = function ($info) {
        throw 'unsupported method XCTest.(file).XCUIApplication.activate() in ' + this.constructor.name;
    };
    /*XCTest.(file).XCUIApplication.terminate()*/
    /*XCTest.(file).XCUIApplication.terminate()*/
    XCUIApplication.prototype.terminate = function ($info) {
        throw 'unsupported method XCTest.(file).XCUIApplication.terminate() in ' + this.constructor.name;
    };
    /*XCTest.(file).XCUIApplication.wait(for:XCUIApplication.State,timeout:TimeInterval)*/
    /*XCTest.(file).XCUIApplication.wait(for:XCUIApplication.State,timeout:TimeInterval)*/
    XCUIApplication.prototype.waitForTimeout = function ($info, state, timeout) {
        throw 'unsupported method XCTest.(file).XCUIApplication.wait(for:XCUIApplication.State,timeout:TimeInterval) in ' + this.constructor.name;
    };
    /*XCTest.(file).XCUIApplication.waitForState(_:XCUIApplication.State,timeout:TimeInterval)*/
    /*XCTest.(file).XCUIApplication.waitForState(_:XCUIApplication.State,timeout:TimeInterval)*/
    XCUIApplication.prototype.waitForStateTimeout = function ($info, state, timeout) {
        throw 'unsupported method XCTest.(file).XCUIApplication.waitForState(_:XCUIApplication.State,timeout:TimeInterval) in ' + this.constructor.name;
    };
    XCUIApplication.prototype.init$vars = function () {
        if (_super.prototype.init$vars)
            _super.prototype.init$vars.call(this);
    };
    var _168;
    XCUIApplication.$infoAddress = '';
    XCUIApplication.State = (_168 = /** @class */ (function () {
            function class_192() {
            }
            /*XCTest.(file).XCUIApplication.State.init(rawValue:UInt)*/
            /*XCTest.(file).XCUIApplication.State.init(rawValue:UInt)*/
            class_192.prototype.initRawValueUInt = function ($info, rawValue) {
                throw 'unsupported method XCTest.(file).XCUIApplication.State.init(rawValue:UInt) in ' + this.constructor.name;
            };
            /*XCTest.(file).XCUIApplication.State.rawValue*/
            class_192.prototype.rawValue$get = function () {
                throw 'unsupported variable XCTest.(file).XCUIApplication.State.rawValue in ' + this.constructor.name;
            };
            Object.defineProperty(class_192.prototype, "rawValue", {
                get: function () { return this.rawValue$get(); },
                enumerable: true,
                configurable: true
            });
            ;
            Object.defineProperty(class_192, "unknown", {
                get: function () { return Object.assign(new XCUIApplication.State(), __assign({ rawValue: 0 }, Array.from(arguments).slice(1))); },
                enumerable: true,
                configurable: true
            });
            Object.defineProperty(class_192, "notRunning", {
                get: function () { return Object.assign(new XCUIApplication.State(), __assign({ rawValue: 1 }, Array.from(arguments).slice(1))); },
                enumerable: true,
                configurable: true
            });
            Object.defineProperty(class_192, "runningBackground", {
                get: function () { return Object.assign(new XCUIApplication.State(), __assign({ rawValue: 3 }, Array.from(arguments).slice(1))); },
                enumerable: true,
                configurable: true
            });
            Object.defineProperty(class_192, "runningForeground", {
                get: function () { return Object.assign(new XCUIApplication.State(), __assign({ rawValue: 4 }, Array.from(arguments).slice(1))); },
                enumerable: true,
                configurable: true
            });
            class_192.prototype.init$vars = function () {
            };
            return class_192;
        }()),
        _168.$infoAddress = '',
        _168.initRawValueUInt$failable = true,
        _168);
    return XCUIApplication;
}(XCUIElement));
_mixin(XCUIApplication.State, _DefaultEnumImplementation, false);
var XCKeyValueObservingExpectationHandler = XCTKVOExpectation.Handler;
var XCNotificationExpectationHandler = XCTNSNotificationExpectation.Handler;
var XCPredicateExpectationHandler = XCTNSPredicateExpectation.Handler;
var XCTAttachmentLifetime = XCTAttachment.Lifetime;
var XCTDarwinNotificationExpectationHandler = XCTDarwinNotificationExpectation.Handler;
var XCTImageQuality = XCTAttachment.ImageQuality;
var XCTWaiterResult = XCTWaiter.Result;
var XCUIApplicationState = XCUIApplication.State;
var XCUIElementType = XCUIElement.ElementType;
var XCUIKeyModifierFlags = XCUIElement.KeyModifierFlags;
var XCUIUserInterfaceSizeClass = XCUIElement.SizeClass;
var XCWaitCompletionHandler = '?function_type';

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
/*Swift.(file).min(_:T,_:T,_:T,_:[T])*/
/*Swift.(file).min(_:T,_:T,_:T,_:[T])*/
function min($info, x, y, z, rest) {
    var min = x;
    if ($info.T.infix_60($info, y, min))
        min = y;
    if (z != null && $info.T.infix_60($info, z, min))
        min = z;
    if (rest != null)
        for (var _i = 0, rest_1 = rest; _i < rest_1.length; _i++) {
            var i = rest_1[_i];
            if ($info.T.infix_60($info, i, min))
                min = i;
        }
    return min;
}
/*Swift.(file).min(_:T,_:T,_:T,_:[T])*/
/*Swift.(file).min(_:T,_:T,_:T,_:[T])*/
function min($info, x, y, z, rest) {
    var min = x;
    if ($info.T.infix_60($info, y, min))
        min = y;
    if (z != null && $info.T.infix_60($info, z, min))
        min = z;
    if (rest != null)
        for (var _i = 0, rest_2 = rest; _i < rest_2.length; _i++) {
            var i = rest_2[_i];
            if ($info.T.infix_60($info, i, min))
                min = i;
        }
    return min;
}
/*Swift.(file).max(_:T,_:T,_:T,_:[T])*/
/*Swift.(file).max(_:T,_:T,_:T,_:[T])*/
function max($info, x, y, z, rest) {
    var max = x;
    if ($info.T.infix_62($info, y, max))
        max = y;
    if (z != null && $info.T.infix_62($info, z, max))
        max = z;
    if (rest != null)
        for (var _i = 0, rest_3 = rest; _i < rest_3.length; _i++) {
            var i = rest_3[_i];
            if ($info.T.infix_62($info, i, max))
                max = i;
        }
    return max;
}
/*Swift.(file).max(_:T,_:T,_:T,_:[T])*/
/*Swift.(file).max(_:T,_:T,_:T,_:[T])*/
function max($info, x, y, z, rest) {
    var max = x;
    if ($info.T.infix_62($info, y, max))
        max = y;
    if (z != null && $info.T.infix_62($info, z, max))
        max = z;
    if (rest != null)
        for (var _i = 0, rest_4 = rest; _i < rest_4.length; _i++) {
            var i = rest_4[_i];
            if ($info.T.infix_62($info, i, max))
                max = i;
        }
    return max;
}
/*Swift.(file).assert(_:() -> Bool,_:() -> String,file:StaticString,line:UInt)*/
/*Swift.(file).assert(_:() -> Bool,_:() -> String,file:StaticString,line:UInt)*/
function assertFileLine($info, condition, message, file, line) {
}
/*Swift.(file).precondition(_:() -> Bool,_:() -> String,file:StaticString,line:UInt)*/
/*Swift.(file).precondition(_:() -> Bool,_:() -> String,file:StaticString,line:UInt)*/
function preconditionFileLine($info, condition, message, file, line) {
}
/*Swift.(file).assertionFailure(_:() -> String,file:StaticString,line:UInt)*/
/*Swift.(file).assertionFailure(_:() -> String,file:StaticString,line:UInt)*/
function assertionFailureFileLine($info, message, file, line) {
}
/*Swift.(file).preconditionFailure(_:() -> String,file:StaticString,line:UInt)*/
/*Swift.(file).preconditionFailure(_:() -> String,file:StaticString,line:UInt)*/
function preconditionFailureFileLine($info, message, file, line) {
}
/*Swift.(file).fatalError(_:() -> String,file:StaticString,line:UInt)*/
/*Swift.(file).fatalError(_:() -> String,file:StaticString,line:UInt)*/
function fatalErrorFileLine($info, message, file, line) {
}
/*Swift.(file).unsafeBitCast(_:T,to:U.Type)*/
/*Swift.(file).unsafeBitCast(_:T,to:U.Type)*/
function unsafeBitCastTo($info, x, type) {
}
/*Swift.(file).==infix(_:(A, B, C, D, E, F),_:(A, B, C, D, E, F))*/
/*Swift.(file).==infix(_:(A, B, C, D, E, F),_:(A, B, C, D, E, F))*/
function infix_61_61($info, lhs, rhs) {
    return lhs == rhs;
}
/*Swift.(file).!=infix(_:(A, B, C, D, E, F),_:(A, B, C, D, E, F))*/
/*Swift.(file).!=infix(_:(A, B, C, D, E, F),_:(A, B, C, D, E, F))*/
function infix_33_61($info, lhs, rhs) {
    return lhs != rhs;
}
/*Swift.(file).==infix(_:(A, B, C, D, E, F),_:(A, B, C, D, E, F))*/
/*Swift.(file).==infix(_:(A, B, C, D, E, F),_:(A, B, C, D, E, F))*/
function infix_61_61($info, lhs, rhs) {
    return lhs == rhs;
}
/*Swift.(file).!=infix(_:(A, B, C, D, E, F),_:(A, B, C, D, E, F))*/
/*Swift.(file).!=infix(_:(A, B, C, D, E, F),_:(A, B, C, D, E, F))*/
function infix_33_61($info, lhs, rhs) {
    return lhs != rhs;
}
/*Swift.(file).==infix(_:(A, B, C, D, E, F),_:(A, B, C, D, E, F))*/
/*Swift.(file).==infix(_:(A, B, C, D, E, F),_:(A, B, C, D, E, F))*/
function infix_61_61($info, lhs, rhs) {
    return lhs == rhs;
}
/*Swift.(file).!=infix(_:(A, B, C, D, E, F),_:(A, B, C, D, E, F))*/
/*Swift.(file).!=infix(_:(A, B, C, D, E, F),_:(A, B, C, D, E, F))*/
function infix_33_61($info, lhs, rhs) {
    return lhs != rhs;
}
/*Swift.(file).unsafeDowncast(_:AnyObject,to:T.Type)*/
/*Swift.(file).unsafeDowncast(_:AnyObject,to:T.Type)*/
function unsafeDowncastTo($info, x, type) {
}
/*Swift.(file).getSwiftClassInstanceExtents(_:AnyClass)*/
/*Swift.(file).getSwiftClassInstanceExtents(_:AnyClass)*/
function getSwiftClassInstanceExtents($info, theClass) {
}
/*Swift.(file).getObjCClassInstanceExtents(_:AnyClass)*/
/*Swift.(file).getObjCClassInstanceExtents(_:AnyClass)*/
function getObjCClassInstanceExtents($info, theClass) {
}
/*Swift.(file).type(of:T)*/
/*Swift.(file).type(of:T)*/
function typeOf($info, value) {
}
/*Swift.(file).withoutActuallyEscaping(_:ClosureType,do:(ClosureType) throws -> ResultType)*/
/*Swift.(file).withoutActuallyEscaping(_:ClosureType,do:(ClosureType) throws -> ResultType)*/
function withoutActuallyEscapingDo($info, closure, body) {
}
/*Swift.(file).==infix(_:(A, B, C, D, E, F),_:(A, B, C, D, E, F))*/
/*Swift.(file).==infix(_:(A, B, C, D, E, F),_:(A, B, C, D, E, F))*/
function infix_61_61($info, lhs, rhs) {
    return lhs == rhs;
}
/*Swift.(file).!=infix(_:(A, B, C, D, E, F),_:(A, B, C, D, E, F))*/
/*Swift.(file).!=infix(_:(A, B, C, D, E, F),_:(A, B, C, D, E, F))*/
function infix_33_61($info, lhs, rhs) {
    return lhs != rhs;
}
/*Swift.(file).!=infix(_:(A, B, C, D, E, F),_:(A, B, C, D, E, F))*/
/*Swift.(file).!=infix(_:(A, B, C, D, E, F),_:(A, B, C, D, E, F))*/
function infix_33_61($info, lhs, rhs) {
    return lhs != rhs;
}
/*Swift.(file).+=infix(_:_ContiguousArrayBuffer<Element>,_:C)*/
/*Swift.(file).+=infix(_:_ContiguousArrayBuffer<Element>,_:C)*/
function infix_43_61($info, lhs$inout, rhs) {
    lhs$inout.set(lhs$inout.get() + rhs);
}
/*Swift.(file).dump(_:T,to:TargetStream,name:String?,indent:Int,maxDepth:Int,maxItems:Int)*/
/*Swift.(file).dump(_:T,to:TargetStream,name:String?,indent:Int,maxDepth:Int,maxItems:Int)*/
function dumpToNameIndentMaxDepthMaxItems($info, value, target$inout, _name, indent, maxDepth, maxItems) {
}
/*Swift.(file).dump(_:T,name:String?,indent:Int,maxDepth:Int,maxItems:Int)*/
/*Swift.(file).dump(_:T,name:String?,indent:Int,maxDepth:Int,maxItems:Int)*/
function dumpNameIndentMaxDepthMaxItems($info, value, _name, indent, maxDepth, maxItems) {
}
/*Swift.(file).===infix(_:AnyObject?,_:AnyObject?)*/
/*Swift.(file).===infix(_:AnyObject?,_:AnyObject?)*/
function infix_61_61_61($info, lhs, rhs) {
    return lhs === rhs;
}
/*Swift.(file).!==infix(_:AnyObject?,_:AnyObject?)*/
/*Swift.(file).!==infix(_:AnyObject?,_:AnyObject?)*/
function infix_33_61_61($info, lhs, rhs) {
    return lhs !== rhs;
}
/*Swift.(file).%infix(_:T,_:T)*/
/*Swift.(file).%infix(_:T,_:T)*/
function infix_37($info, lhs, rhs) {
    return lhs % rhs;
}
/*Swift.(file).%=infix(_:T,_:T)*/
/*Swift.(file).%=infix(_:T,_:T)*/
function infix_37_61($info, lhs$inout, rhs) {
    lhs$inout.set(lhs$inout.get() % rhs);
}
/*Swift.(file).Hashable_isEqual_indirect(_:UnsafePointer<T>,_:UnsafePointer<T>)*/
/*Swift.(file).Hashable_isEqual_indirect(_:UnsafePointer<T>,_:UnsafePointer<T>)*/
function Hashable_isEqual_indirect($info, lhs, rhs) {
}
/*Swift.(file).Hashable_hashValue_indirect(_:UnsafePointer<T>)*/
/*Swift.(file).Hashable_hashValue_indirect(_:UnsafePointer<T>)*/
function Hashable_hashValue_indirect($info, value) {
}
/*Swift.(file).readLine(strippingNewline:Bool)*/
/*Swift.(file).readLine(strippingNewline:Bool)*/
function readLineStrippingNewline($info, strippingNewline) {
}
/*Swift.(file).abs(_:T)*/
/*Swift.(file).abs(_:T)*/
function abs($info, x) {
    return Math.abs(x);
}
/*Swift.(file).numericCast(_:T)*/
/*Swift.(file).numericCast(_:T)*/
function numericCast($info, x) {
}
/*Swift.(file).withExtendedLifetime(_:T,_:(T) throws -> Result)*/
/*Swift.(file).withExtendedLifetime(_:T,_:(T) throws -> Result)*/
function withExtendedLifetime($info, x, body) {
}
/*Swift.(file).withExtendedLifetime(_:T,_:(T) throws -> Result)*/
/*Swift.(file).withExtendedLifetime(_:T,_:(T) throws -> Result)*/
function withExtendedLifetime($info, x, body) {
}
/*Swift.(file).withUnsafeMutablePointer(to:T,_:(UnsafeMutablePointer<T>) throws -> Result)*/
/*Swift.(file).withUnsafeMutablePointer(to:T,_:(UnsafeMutablePointer<T>) throws -> Result)*/
function withUnsafeMutablePointerTo($info, value$inout, body) {
}
/*Swift.(file).withUnsafePointer(to:T,_:(UnsafePointer<T>) throws -> Result)*/
/*Swift.(file).withUnsafePointer(to:T,_:(UnsafePointer<T>) throws -> Result)*/
function withUnsafePointerTo($info, value$inout, body) {
}
/*Swift.(file).withUnsafePointer(to:T,_:(UnsafePointer<T>) throws -> Result)*/
/*Swift.(file).withUnsafePointer(to:T,_:(UnsafePointer<T>) throws -> Result)*/
function withUnsafePointerTo($info, value$inout, body) {
}
/*Swift.(file).tryReallocateUniquelyReferenced(buffer:Buffer,newMinimumCapacity:Int)*/
/*Swift.(file).tryReallocateUniquelyReferenced(buffer:Buffer,newMinimumCapacity:Int)*/
function tryReallocateUniquelyReferencedBufferNewMinimumCapacity($info, buffer$inout, newMinimumCapacity) {
}
/*Swift.(file).isKnownUniquelyReferenced(_:T?)*/
/*Swift.(file).isKnownUniquelyReferenced(_:T?)*/
function isKnownUniquelyReferenced($info, object$inout) {
}
/*Swift.(file).isKnownUniquelyReferenced(_:T?)*/
/*Swift.(file).isKnownUniquelyReferenced(_:T?)*/
function isKnownUniquelyReferenced($info, object$inout) {
}
/*Swift.(file).swap(_:T,_:T)*/
/*Swift.(file).swap(_:T,_:T)*/
function swap($info, a$inout, b$inout) {
}
/*Swift.(file).KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:Any.Type)*/
/*Swift.(file).KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:Any.Type)*/
function KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS($info, keyType) {
}
/*Swift.(file).ELEMENT_TYPE_OF_SET_VIOLATES_HASHABLE_REQUIREMENTS(_:Any.Type)*/
/*Swift.(file).ELEMENT_TYPE_OF_SET_VIOLATES_HASHABLE_REQUIREMENTS(_:Any.Type)*/
function ELEMENT_TYPE_OF_SET_VIOLATES_HASHABLE_REQUIREMENTS($info, elementType) {
}
/*Swift.(file).??infix(_:T?,_:() throws -> T?)*/
/*Swift.(file).??infix(_:T?,_:() throws -> T?)*/
function infix_63_63($info, optional, defaultValue) {
    return optional != null ? optional : defaultValue();
}
/*Swift.(file).??infix(_:T?,_:() throws -> T?)*/
/*Swift.(file).??infix(_:T?,_:() throws -> T?)*/
function infix_63_63($info, optional, defaultValue) {
    return optional != null ? optional : defaultValue();
}
/*Swift.(file).~=infix(_:T,_:T)*/
/*Swift.(file).~=infix(_:T,_:T)*/
function infix_126_61($info, a, b) {
    return a == b;
}
/*Swift.(file).print(_:[Any],separator:String,terminator:String)*/
/*Swift.(file).print(_:[Any],separator:String,terminator:String)*/
function printSeparatorTerminator($info, items, separator, terminator) {
    console.log(items);
}
/*Swift.(file).debugPrint(_:[Any],separator:String,terminator:String)*/
/*Swift.(file).debugPrint(_:[Any],separator:String,terminator:String)*/
function debugPrintSeparatorTerminator($info, items, separator, terminator) {
}
/*Swift.(file).print(_:[Any],separator:String,terminator:String,to:Target)*/
/*Swift.(file).print(_:[Any],separator:String,terminator:String,to:Target)*/
function printSeparatorTerminatorTo($info, items, separator, terminator, output$inout) {
}
/*Swift.(file).debugPrint(_:[Any],separator:String,terminator:String,to:Target)*/
/*Swift.(file).debugPrint(_:[Any],separator:String,terminator:String,to:Target)*/
function debugPrintSeparatorTerminatorTo($info, items, separator, terminator, output$inout) {
}
/*Swift.(file).getChild(of:T,type:Any.Type,index:Int)*/
/*Swift.(file).getChild(of:T,type:Any.Type,index:Int)*/
function getChildOfTypeIndex($info, value, type, index) {
}
/*Swift.(file).repeatElement(_:T,count:Int)*/
/*Swift.(file).repeatElement(_:T,count:Int)*/
function repeatElementCount($info, _element, n) {
}
/*Swift.(file).stride(from:T,to:T,by:T.Stride)*/
/*Swift.(file).stride(from:T,to:T,by:T.Stride)*/
function strideFromToBy($info, start, end, stride) {
}
/*Swift.(file).stride(from:T,through:T,by:T.Stride)*/
/*Swift.(file).stride(from:T,through:T,by:T.Stride)*/
function strideFromThroughBy($info, start, end, stride) {
}
/*Swift.(file).unimplemented_utf8_32bit(_:String,file:StaticString,line:UInt)*/
/*Swift.(file).unimplemented_utf8_32bit(_:String,file:StaticString,line:UInt)*/
function unimplemented_utf8_32bitFileLine($info, message, file, line) {
}
/*Swift.(file).determineCodeUnitCapacity(_:Int)*/
/*Swift.(file).determineCodeUnitCapacity(_:Int)*/
function determineCodeUnitCapacity($info, desiredCapacity) {
}
/*Swift.(file).validateUTF8(_:UnsafeBufferPointer<UInt8>)*/
/*Swift.(file).validateUTF8(_:UnsafeBufferPointer<UInt8>)*/
function validateUTF8($info, buf) {
}
/*Swift.(file).repairUTF8(_:UnsafeBufferPointer<UInt8>,firstKnownBrokenRange:Range<Int>)*/
/*Swift.(file).repairUTF8(_:UnsafeBufferPointer<UInt8>,firstKnownBrokenRange:Range<Int>)*/
function repairUTF8FirstKnownBrokenRange($info, input, firstKnownBrokenRange) {
}
/*Swift.(file).withUnsafeMutableBytes(of:T,_:(UnsafeMutableRawBufferPointer) throws -> Result)*/
/*Swift.(file).withUnsafeMutableBytes(of:T,_:(UnsafeMutableRawBufferPointer) throws -> Result)*/
function withUnsafeMutableBytesOf($info, value$inout, body) {
}
/*Swift.(file).withUnsafeBytes(of:T,_:(UnsafeRawBufferPointer) throws -> Result)*/
/*Swift.(file).withUnsafeBytes(of:T,_:(UnsafeRawBufferPointer) throws -> Result)*/
function withUnsafeBytesOf($info, value, body) {
}
/*Swift.(file).withUnsafeBytes(of:T,_:(UnsafeRawBufferPointer) throws -> Result)*/
/*Swift.(file).withUnsafeBytes(of:T,_:(UnsafeRawBufferPointer) throws -> Result)*/
function withUnsafeBytesOf($info, value, body) {
}
/*Swift.(file).transcode(_:Input,from:InputEncoding.Type,to:OutputEncoding.Type,stoppingOnError:Bool,into:(OutputEncoding.CodeUnit) -> Void)*/
/*Swift.(file).transcode(_:Input,from:InputEncoding.Type,to:OutputEncoding.Type,stoppingOnError:Bool,into:(OutputEncoding.CodeUnit) -> Void)*/
function transcodeFromToStoppingOnErrorInto($info, input, inputEncoding, outputEncoding, stopOnError, processCodeUnit) {
}
/*Swift.(file).transcode(_:InputEncoding.Type,_:OutputEncoding.Type,_:Input,_:(OutputEncoding.CodeUnit) -> Void,stopOnError:Bool)*/
/*Swift.(file).transcode(_:InputEncoding.Type,_:OutputEncoding.Type,_:Input,_:(OutputEncoding.CodeUnit) -> Void,stopOnError:Bool)*/
function transcodeStopOnError($info, inputEncoding, outputEncoding, input, output, stopOnError) {
}
/*Swift.(file).==infix(_:(A, B, C, D, E, F),_:(A, B, C, D, E, F))*/
/*Swift.(file).==infix(_:(A, B, C, D, E, F),_:(A, B, C, D, E, F))*/
function infix_61_61($info, lhs, rhs) {
    return lhs == rhs;
}
/*Swift.(file).!=infix(_:(A, B, C, D, E, F),_:(A, B, C, D, E, F))*/
/*Swift.(file).!=infix(_:(A, B, C, D, E, F),_:(A, B, C, D, E, F))*/
function infix_33_61($info, lhs, rhs) {
    return lhs != rhs;
}
/*Swift.(file).<infix(_:(A, B, C, D, E, F),_:(A, B, C, D, E, F))*/
/*Swift.(file).<infix(_:(A, B, C, D, E, F),_:(A, B, C, D, E, F))*/
function infix_60($info, lhs, rhs) {
    return lhs < rhs;
}
/*Swift.(file).<=infix(_:(A, B, C, D, E, F),_:(A, B, C, D, E, F))*/
/*Swift.(file).<=infix(_:(A, B, C, D, E, F),_:(A, B, C, D, E, F))*/
function infix_60_61($info, lhs, rhs) {
    return lhs <= rhs;
}
/*Swift.(file).>infix(_:(A, B, C, D, E, F),_:(A, B, C, D, E, F))*/
/*Swift.(file).>infix(_:(A, B, C, D, E, F),_:(A, B, C, D, E, F))*/
function infix_62($info, lhs, rhs) {
    return lhs > rhs;
}
/*Swift.(file).>=infix(_:(A, B, C, D, E, F),_:(A, B, C, D, E, F))*/
/*Swift.(file).>=infix(_:(A, B, C, D, E, F),_:(A, B, C, D, E, F))*/
function infix_62_61($info, lhs, rhs) {
    return lhs >= rhs;
}
/*Swift.(file).==infix(_:(A, B, C, D, E, F),_:(A, B, C, D, E, F))*/
/*Swift.(file).==infix(_:(A, B, C, D, E, F),_:(A, B, C, D, E, F))*/
function infix_61_61($info, lhs, rhs) {
    return lhs == rhs;
}
/*Swift.(file).!=infix(_:(A, B, C, D, E, F),_:(A, B, C, D, E, F))*/
/*Swift.(file).!=infix(_:(A, B, C, D, E, F),_:(A, B, C, D, E, F))*/
function infix_33_61($info, lhs, rhs) {
    return lhs != rhs;
}
/*Swift.(file).<infix(_:(A, B, C, D, E, F),_:(A, B, C, D, E, F))*/
/*Swift.(file).<infix(_:(A, B, C, D, E, F),_:(A, B, C, D, E, F))*/
function infix_60($info, lhs, rhs) {
    return lhs < rhs;
}
/*Swift.(file).<=infix(_:(A, B, C, D, E, F),_:(A, B, C, D, E, F))*/
/*Swift.(file).<=infix(_:(A, B, C, D, E, F),_:(A, B, C, D, E, F))*/
function infix_60_61($info, lhs, rhs) {
    return lhs <= rhs;
}
/*Swift.(file).>infix(_:(A, B, C, D, E, F),_:(A, B, C, D, E, F))*/
/*Swift.(file).>infix(_:(A, B, C, D, E, F),_:(A, B, C, D, E, F))*/
function infix_62($info, lhs, rhs) {
    return lhs > rhs;
}
/*Swift.(file).>=infix(_:(A, B, C, D, E, F),_:(A, B, C, D, E, F))*/
/*Swift.(file).>=infix(_:(A, B, C, D, E, F),_:(A, B, C, D, E, F))*/
function infix_62_61($info, lhs, rhs) {
    return lhs >= rhs;
}
/*Swift.(file).==infix(_:(A, B, C, D, E, F),_:(A, B, C, D, E, F))*/
/*Swift.(file).==infix(_:(A, B, C, D, E, F),_:(A, B, C, D, E, F))*/
function infix_61_61($info, lhs, rhs) {
    return lhs == rhs;
}
/*Swift.(file).!=infix(_:(A, B, C, D, E, F),_:(A, B, C, D, E, F))*/
/*Swift.(file).!=infix(_:(A, B, C, D, E, F),_:(A, B, C, D, E, F))*/
function infix_33_61($info, lhs, rhs) {
    return lhs != rhs;
}
/*Swift.(file).<infix(_:(A, B, C, D, E, F),_:(A, B, C, D, E, F))*/
/*Swift.(file).<infix(_:(A, B, C, D, E, F),_:(A, B, C, D, E, F))*/
function infix_60($info, lhs, rhs) {
    return lhs < rhs;
}
/*Swift.(file).<=infix(_:(A, B, C, D, E, F),_:(A, B, C, D, E, F))*/
/*Swift.(file).<=infix(_:(A, B, C, D, E, F),_:(A, B, C, D, E, F))*/
function infix_60_61($info, lhs, rhs) {
    return lhs <= rhs;
}
/*Swift.(file).>infix(_:(A, B, C, D, E, F),_:(A, B, C, D, E, F))*/
/*Swift.(file).>infix(_:(A, B, C, D, E, F),_:(A, B, C, D, E, F))*/
function infix_62($info, lhs, rhs) {
    return lhs > rhs;
}
/*Swift.(file).>=infix(_:(A, B, C, D, E, F),_:(A, B, C, D, E, F))*/
/*Swift.(file).>=infix(_:(A, B, C, D, E, F),_:(A, B, C, D, E, F))*/
function infix_62_61($info, lhs, rhs) {
    return lhs >= rhs;
}
/*Swift.(file).==infix(_:(A, B, C, D, E, F),_:(A, B, C, D, E, F))*/
/*Swift.(file).==infix(_:(A, B, C, D, E, F),_:(A, B, C, D, E, F))*/
function infix_61_61($info, lhs, rhs) {
    return lhs == rhs;
}
/*Swift.(file).!=infix(_:(A, B, C, D, E, F),_:(A, B, C, D, E, F))*/
/*Swift.(file).!=infix(_:(A, B, C, D, E, F),_:(A, B, C, D, E, F))*/
function infix_33_61($info, lhs, rhs) {
    return lhs != rhs;
}
/*Swift.(file).<infix(_:(A, B, C, D, E, F),_:(A, B, C, D, E, F))*/
/*Swift.(file).<infix(_:(A, B, C, D, E, F),_:(A, B, C, D, E, F))*/
function infix_60($info, lhs, rhs) {
    return lhs < rhs;
}
/*Swift.(file).<=infix(_:(A, B, C, D, E, F),_:(A, B, C, D, E, F))*/
/*Swift.(file).<=infix(_:(A, B, C, D, E, F),_:(A, B, C, D, E, F))*/
function infix_60_61($info, lhs, rhs) {
    return lhs <= rhs;
}
/*Swift.(file).>infix(_:(A, B, C, D, E, F),_:(A, B, C, D, E, F))*/
/*Swift.(file).>infix(_:(A, B, C, D, E, F),_:(A, B, C, D, E, F))*/
function infix_62($info, lhs, rhs) {
    return lhs > rhs;
}
/*Swift.(file).>=infix(_:(A, B, C, D, E, F),_:(A, B, C, D, E, F))*/
/*Swift.(file).>=infix(_:(A, B, C, D, E, F),_:(A, B, C, D, E, F))*/
function infix_62_61($info, lhs, rhs) {
    return lhs >= rhs;
}
/*Swift.(file).==infix(_:(A, B, C, D, E, F),_:(A, B, C, D, E, F))*/
/*Swift.(file).==infix(_:(A, B, C, D, E, F),_:(A, B, C, D, E, F))*/
function infix_61_61($info, lhs, rhs) {
    return lhs == rhs;
}
/*Swift.(file).!=infix(_:(A, B, C, D, E, F),_:(A, B, C, D, E, F))*/
/*Swift.(file).!=infix(_:(A, B, C, D, E, F),_:(A, B, C, D, E, F))*/
function infix_33_61($info, lhs, rhs) {
    return lhs != rhs;
}
/*Swift.(file).<infix(_:(A, B, C, D, E, F),_:(A, B, C, D, E, F))*/
/*Swift.(file).<infix(_:(A, B, C, D, E, F),_:(A, B, C, D, E, F))*/
function infix_60($info, lhs, rhs) {
    return lhs < rhs;
}
/*Swift.(file).<=infix(_:(A, B, C, D, E, F),_:(A, B, C, D, E, F))*/
/*Swift.(file).<=infix(_:(A, B, C, D, E, F),_:(A, B, C, D, E, F))*/
function infix_60_61($info, lhs, rhs) {
    return lhs <= rhs;
}
/*Swift.(file).>infix(_:(A, B, C, D, E, F),_:(A, B, C, D, E, F))*/
/*Swift.(file).>infix(_:(A, B, C, D, E, F),_:(A, B, C, D, E, F))*/
function infix_62($info, lhs, rhs) {
    return lhs > rhs;
}
/*Swift.(file).>=infix(_:(A, B, C, D, E, F),_:(A, B, C, D, E, F))*/
/*Swift.(file).>=infix(_:(A, B, C, D, E, F),_:(A, B, C, D, E, F))*/
function infix_62_61($info, lhs, rhs) {
    return lhs >= rhs;
}
/*Swift.(file).==infix(_:(A, B, C, D, E, F),_:(A, B, C, D, E, F))*/
/*Swift.(file).==infix(_:(A, B, C, D, E, F),_:(A, B, C, D, E, F))*/
function infix_61_61($info, lhs, rhs) {
    return lhs == rhs;
}
/*Swift.(file).!=infix(_:(A, B, C, D, E, F),_:(A, B, C, D, E, F))*/
/*Swift.(file).!=infix(_:(A, B, C, D, E, F),_:(A, B, C, D, E, F))*/
function infix_33_61($info, lhs, rhs) {
    return lhs != rhs;
}
/*Swift.(file).<infix(_:(A, B, C, D, E, F),_:(A, B, C, D, E, F))*/
/*Swift.(file).<infix(_:(A, B, C, D, E, F),_:(A, B, C, D, E, F))*/
function infix_60($info, lhs, rhs) {
    return lhs < rhs;
}
/*Swift.(file).<=infix(_:(A, B, C, D, E, F),_:(A, B, C, D, E, F))*/
/*Swift.(file).<=infix(_:(A, B, C, D, E, F),_:(A, B, C, D, E, F))*/
function infix_60_61($info, lhs, rhs) {
    return lhs <= rhs;
}
/*Swift.(file).>infix(_:(A, B, C, D, E, F),_:(A, B, C, D, E, F))*/
/*Swift.(file).>infix(_:(A, B, C, D, E, F),_:(A, B, C, D, E, F))*/
function infix_62($info, lhs, rhs) {
    return lhs > rhs;
}
/*Swift.(file).>=infix(_:(A, B, C, D, E, F),_:(A, B, C, D, E, F))*/
/*Swift.(file).>=infix(_:(A, B, C, D, E, F),_:(A, B, C, D, E, F))*/
function infix_62_61($info, lhs, rhs) {
    return lhs >= rhs;
}
/*Swift.(file).sequence(first:T,next:(T) -> T?)*/
/*Swift.(file).sequence(first:T,next:(T) -> T?)*/
function sequenceFirstNext($info, first, next) {
}
/*Swift.(file).sequence(state:State,next:(inout State) -> T?)*/
/*Swift.(file).sequence(state:State,next:(inout State) -> T?)*/
function sequenceStateNext($info, state, next) {
}
/*Swift.(file).withVaList(_:[CVarArg],_:(CVaListPointer) -> R)*/
/*Swift.(file).withVaList(_:[CVarArg],_:(CVaListPointer) -> R)*/
function withVaList($info, args, body) {
}
/*Swift.(file).getVaList(_:[CVarArg])*/
/*Swift.(file).getVaList(_:[CVarArg])*/
function getVaList($info, args) {
}
/*Swift.(file).zip(_:Sequence1,_:Sequence2)*/
/*Swift.(file).zip(_:Sequence1,_:Sequence2)*/
function zip($info, sequence1, sequence2) {
}
var _ArrayBody = /** @class */ (function () {
    function _ArrayBody() {
    }
    /*Swift.(file)._ArrayBody.init(count:Int,capacity:Int,elementTypeIsBridgedVerbatim:Bool)*/
    /*Swift.(file)._ArrayBody.init(count:Int,capacity:Int,elementTypeIsBridgedVerbatim:Bool)*/
    _ArrayBody.prototype.initCountIntCapacityIntElementTypeIsBridgedVerbatimBool = function ($info, count, capacity, elementTypeIsBridgedVerbatim) {
    };
    /*Swift.(file)._ArrayBody.init()*/
    /*Swift.(file)._ArrayBody.init()*/
    _ArrayBody.prototype.init = function ($info) {
    };
    /*Swift.(file)._ArrayBody.count*/ /*
    count$get() {
    return this.count
    }
    get count() { return this.count$get() }*/ ;
    /*Swift.(file)._ArrayBody.capacity*/ /*
    capacity$get() {
    return this.capacity
    }
    get capacity() { return this.capacity$get() }*/ ;
    /*Swift.(file)._ArrayBody.elementTypeIsBridgedVerbatim*/ /*
    elementTypeIsBridgedVerbatim$get() {
    return this.elementTypeIsBridgedVerbatim
    }
    get elementTypeIsBridgedVerbatim() { return this.elementTypeIsBridgedVerbatim$get() }*/ ;
    _ArrayBody.$struct = true;
    _ArrayBody.$infoAddress = '0x7fb8511e7798';
    return _ArrayBody;
}());
var _DependenceToken = /** @class */ (function () {
    function _DependenceToken() {
    }
    /*Swift.(file)._DependenceToken.init()*/
    /*Swift.(file)._DependenceToken.init()*/
    _DependenceToken.prototype.init = function ($info) {
    };
    _DependenceToken.$struct = true;
    _DependenceToken.$infoAddress = '0x7fb8511eac20';
    return _DependenceToken;
}());
var _stdlib_AtomicInt = /** @class */ (function () {
    function _stdlib_AtomicInt() {
    }
    /*Swift.(file)._stdlib_AtomicInt.init(_:Int)*/
    /*Swift.(file)._stdlib_AtomicInt.init(_:Int)*/
    _stdlib_AtomicInt.prototype.initInt = function ($info, value) {
        return value;
    };
    /*Swift.(file)._stdlib_AtomicInt.store(_:Int)*/
    /*Swift.(file)._stdlib_AtomicInt.store(_:Int)*/
    _stdlib_AtomicInt.prototype.store = function ($info, desired) {
    };
    /*Swift.(file)._stdlib_AtomicInt.load()*/
    /*Swift.(file)._stdlib_AtomicInt.load()*/
    _stdlib_AtomicInt.prototype.load = function ($info) {
    };
    /*Swift.(file)._stdlib_AtomicInt.fetchAndAdd(_:Int)*/
    /*Swift.(file)._stdlib_AtomicInt.fetchAndAdd(_:Int)*/
    _stdlib_AtomicInt.prototype.fetchAndAdd = function ($info, operand) {
    };
    /*Swift.(file)._stdlib_AtomicInt.addAndFetch(_:Int)*/
    /*Swift.(file)._stdlib_AtomicInt.addAndFetch(_:Int)*/
    _stdlib_AtomicInt.prototype.addAndFetch = function ($info, operand) {
    };
    /*Swift.(file)._stdlib_AtomicInt.fetchAndAnd(_:Int)*/
    /*Swift.(file)._stdlib_AtomicInt.fetchAndAnd(_:Int)*/
    _stdlib_AtomicInt.prototype.fetchAndAnd = function ($info, operand) {
    };
    /*Swift.(file)._stdlib_AtomicInt.andAndFetch(_:Int)*/
    /*Swift.(file)._stdlib_AtomicInt.andAndFetch(_:Int)*/
    _stdlib_AtomicInt.prototype.andAndFetch = function ($info, operand) {
    };
    /*Swift.(file)._stdlib_AtomicInt.fetchAndOr(_:Int)*/
    /*Swift.(file)._stdlib_AtomicInt.fetchAndOr(_:Int)*/
    _stdlib_AtomicInt.prototype.fetchAndOr = function ($info, operand) {
    };
    /*Swift.(file)._stdlib_AtomicInt.orAndFetch(_:Int)*/
    /*Swift.(file)._stdlib_AtomicInt.orAndFetch(_:Int)*/
    _stdlib_AtomicInt.prototype.orAndFetch = function ($info, operand) {
    };
    /*Swift.(file)._stdlib_AtomicInt.fetchAndXor(_:Int)*/
    /*Swift.(file)._stdlib_AtomicInt.fetchAndXor(_:Int)*/
    _stdlib_AtomicInt.prototype.fetchAndXor = function ($info, operand) {
    };
    /*Swift.(file)._stdlib_AtomicInt.xorAndFetch(_:Int)*/
    /*Swift.(file)._stdlib_AtomicInt.xorAndFetch(_:Int)*/
    _stdlib_AtomicInt.prototype.xorAndFetch = function ($info, operand) {
    };
    /*Swift.(file)._stdlib_AtomicInt.compareExchange(expected:Int,desired:Int)*/
    /*Swift.(file)._stdlib_AtomicInt.compareExchange(expected:Int,desired:Int)*/
    _stdlib_AtomicInt.prototype.compareExchangeExpectedDesired = function ($info, expected$inout, desired) {
    };
    _stdlib_AtomicInt.$infoAddress = '0x7fb8511f5768';
    return _stdlib_AtomicInt;
}());
var _ObjectiveCBridgeable$implementation = /** @class */ (function () {
    function _ObjectiveCBridgeable$implementation() {
    }
    return _ObjectiveCBridgeable$implementation;
}());
var _BridgeableMetatype = /** @class */ (function () {
    function _BridgeableMetatype() {
    }
    /*Swift.(file)._BridgeableMetatype.init(value:AnyObject.Type)*/
    /*Swift.(file)._BridgeableMetatype.init(value:AnyObject.Type)*/
    _BridgeableMetatype.prototype.initValueAnyObject = function ($info, value) {
        return value;
    };
    _BridgeableMetatype.$struct = true;
    _BridgeableMetatype.$infoAddress = '0x7fb851226128';
    return _BridgeableMetatype;
}());
if (typeof _ObjectiveCBridgeable$implementation != 'undefined')
    _mixin(_BridgeableMetatype, _ObjectiveCBridgeable$implementation, false);
var _CocoaFastEnumerationStackBuf = /** @class */ (function () {
    function _CocoaFastEnumerationStackBuf() {
    }
    /*Swift.(file)._CocoaFastEnumerationStackBuf.init()*/
    /*Swift.(file)._CocoaFastEnumerationStackBuf.init()*/
    _CocoaFastEnumerationStackBuf.prototype.init = function ($info) {
    };
    _CocoaFastEnumerationStackBuf.$struct = true;
    _CocoaFastEnumerationStackBuf.$infoAddress = '0x7fb85122a188';
    return _CocoaFastEnumerationStackBuf;
}());
var _BridgeStorage = /** @class */ (function () {
    function _BridgeStorage() {
    }
    /*Swift.(file)._BridgeStorage.init(native:_BridgeStorage<NativeClass>.Native,isFlagged:Bool)*/
    /*Swift.(file)._BridgeStorage.init(native:_BridgeStorage<NativeClass>.Native,isFlagged:Bool)*/
    _BridgeStorage.prototype.initNative_BridgeStorageNativeIsFlaggedBool = function ($info, _native, flag) {
    };
    /*Swift.(file)._BridgeStorage.init(objC:_BridgeStorage<NativeClass>.ObjC)*/
    /*Swift.(file)._BridgeStorage.init(objC:_BridgeStorage<NativeClass>.ObjC)*/
    _BridgeStorage.prototype.initObjC_BridgeStorageObjC = function ($info, objC) {
        return objC;
    };
    /*Swift.(file)._BridgeStorage.init(native:_BridgeStorage<NativeClass>.Native)*/
    /*Swift.(file)._BridgeStorage.init(native:_BridgeStorage<NativeClass>.Native)*/
    _BridgeStorage.prototype.initNative_BridgeStorageNative = function ($info, _native) {
        return _native;
    };
    /*Swift.(file)._BridgeStorage.init(taggedPayload:UInt)*/
    /*Swift.(file)._BridgeStorage.init(taggedPayload:UInt)*/
    _BridgeStorage.prototype.initTaggedPayloadUInt = function ($info, taggedPayload) {
        return taggedPayload;
    };
    /*Swift.(file)._BridgeStorage.isUniquelyReferencedNative()*/
    /*Swift.(file)._BridgeStorage.isUniquelyReferencedNative()*/
    _BridgeStorage.prototype.isUniquelyReferencedNative = function ($info) {
    };
    /*Swift.(file)._BridgeStorage.isNative*/ /*
    isNative$get() {
    return this.isNative
    }
    get isNative() { return this.isNative$get() }*/ ;
    /*Swift.(file)._BridgeStorage.flagMask*/ /*
    static flagMask$get() {
    return this.flagMask
    }
    static get flagMask() { return this.flagMask$get() }*/ ;
    /*Swift.(file)._BridgeStorage.isUnflaggedNative*/ /*
    isUnflaggedNative$get() {
    return this.isUnflaggedNative
    }
    get isUnflaggedNative() { return this.isUnflaggedNative$get() }*/ ;
    /*Swift.(file)._BridgeStorage.isObjC*/ /*
    isObjC$get() {
    return this.isObjC
    }
    get isObjC() { return this.isObjC$get() }*/ ;
    /*Swift.(file)._BridgeStorage.nativeInstance*/ /*
    nativeInstance$get() {
    return this.nativeInstance
    }
    get nativeInstance() { return this.nativeInstance$get() }*/ ;
    /*Swift.(file)._BridgeStorage.unflaggedNativeInstance*/ /*
    unflaggedNativeInstance$get() {
    return this.unflaggedNativeInstance
    }
    get unflaggedNativeInstance() { return this.unflaggedNativeInstance$get() }*/ ;
    /*Swift.(file)._BridgeStorage.isUniquelyReferencedUnflaggedNative()*/
    /*Swift.(file)._BridgeStorage.isUniquelyReferencedUnflaggedNative()*/
    _BridgeStorage.prototype.isUniquelyReferencedUnflaggedNative = function ($info) {
    };
    /*Swift.(file)._BridgeStorage.objCInstance*/ /*
    objCInstance$get() {
    return this.objCInstance
    }
    get objCInstance() { return this.objCInstance$get() }*/ ;
    _BridgeStorage.$struct = true;
    _BridgeStorage.$infoAddress = '0x7fb8511e7a98';
    return _BridgeStorage;
}());
var _BridgingBufferHeader = /** @class */ (function () {
    function _BridgingBufferHeader() {
    }
    /*Swift.(file)._BridgingBufferHeader.init(_:Int)*/
    /*Swift.(file)._BridgingBufferHeader.init(_:Int)*/
    _BridgingBufferHeader.prototype.initInt = function ($info, count) {
        return count;
    };
    /*Swift.(file)._BridgingBufferHeader.count*/ /*
    count$get() {
    return this.count
    }
    get count() { return this.count$get() }*/ ;
    _BridgingBufferHeader.$struct = true;
    _BridgingBufferHeader.$infoAddress = '0x7fb85122a658';
    return _BridgingBufferHeader;
}());
var Encodable$implementation = /** @class */ (function () {
    function Encodable$implementation() {
    }
    return Encodable$implementation;
}());
var Decodable$implementation = /** @class */ (function () {
    function Decodable$implementation() {
    }
    return Decodable$implementation;
}());
var Encoder$implementation = /** @class */ (function () {
    function Encoder$implementation() {
    }
    return Encoder$implementation;
}());
var Decoder$implementation = /** @class */ (function () {
    function Decoder$implementation() {
    }
    return Decoder$implementation;
}());
var KeyedEncodingContainerProtocol$implementation = /** @class */ (function () {
    function KeyedEncodingContainerProtocol$implementation() {
    }
    /*Swift.(file).KeyedEncodingContainerProtocol.encodeConditional(_:T,forKey:Self.Key)*/
    /*Swift.(file).KeyedEncodingContainerProtocol.encodeConditional(_:T,forKey:Self.Key)*/
    KeyedEncodingContainerProtocol$implementation.prototype.encodeConditionalForKey = function ($info, object, key) {
    };
    /*Swift.(file).KeyedEncodingContainerProtocol.encodeIfPresent(_:Bool?,forKey:Self.Key)*/
    /*Swift.(file).KeyedEncodingContainerProtocol.encodeIfPresent(_:Bool?,forKey:Self.Key)*/
    KeyedEncodingContainerProtocol$implementation.prototype.encodeIfPresentForKey = function ($info, value, key) {
    };
    /*Swift.(file).KeyedEncodingContainerProtocol.encodeIfPresent(_:String?,forKey:Self.Key)*/
    /*Swift.(file).KeyedEncodingContainerProtocol.encodeIfPresent(_:String?,forKey:Self.Key)*/
    KeyedEncodingContainerProtocol$implementation.prototype.encodeIfPresentForKey = function ($info, value, key) {
    };
    /*Swift.(file).KeyedEncodingContainerProtocol.encodeIfPresent(_:Double?,forKey:Self.Key)*/
    /*Swift.(file).KeyedEncodingContainerProtocol.encodeIfPresent(_:Double?,forKey:Self.Key)*/
    KeyedEncodingContainerProtocol$implementation.prototype.encodeIfPresentForKey = function ($info, value, key) {
    };
    /*Swift.(file).KeyedEncodingContainerProtocol.encodeIfPresent(_:Float?,forKey:Self.Key)*/
    /*Swift.(file).KeyedEncodingContainerProtocol.encodeIfPresent(_:Float?,forKey:Self.Key)*/
    KeyedEncodingContainerProtocol$implementation.prototype.encodeIfPresentForKey = function ($info, value, key) {
    };
    /*Swift.(file).KeyedEncodingContainerProtocol.encodeIfPresent(_:Int?,forKey:Self.Key)*/
    /*Swift.(file).KeyedEncodingContainerProtocol.encodeIfPresent(_:Int?,forKey:Self.Key)*/
    KeyedEncodingContainerProtocol$implementation.prototype.encodeIfPresentForKey = function ($info, value, key) {
    };
    /*Swift.(file).KeyedEncodingContainerProtocol.encodeIfPresent(_:Int8?,forKey:Self.Key)*/
    /*Swift.(file).KeyedEncodingContainerProtocol.encodeIfPresent(_:Int8?,forKey:Self.Key)*/
    KeyedEncodingContainerProtocol$implementation.prototype.encodeIfPresentForKey = function ($info, value, key) {
    };
    /*Swift.(file).KeyedEncodingContainerProtocol.encodeIfPresent(_:Int16?,forKey:Self.Key)*/
    /*Swift.(file).KeyedEncodingContainerProtocol.encodeIfPresent(_:Int16?,forKey:Self.Key)*/
    KeyedEncodingContainerProtocol$implementation.prototype.encodeIfPresentForKey = function ($info, value, key) {
    };
    /*Swift.(file).KeyedEncodingContainerProtocol.encodeIfPresent(_:Int32?,forKey:Self.Key)*/
    /*Swift.(file).KeyedEncodingContainerProtocol.encodeIfPresent(_:Int32?,forKey:Self.Key)*/
    KeyedEncodingContainerProtocol$implementation.prototype.encodeIfPresentForKey = function ($info, value, key) {
    };
    /*Swift.(file).KeyedEncodingContainerProtocol.encodeIfPresent(_:Int64?,forKey:Self.Key)*/
    /*Swift.(file).KeyedEncodingContainerProtocol.encodeIfPresent(_:Int64?,forKey:Self.Key)*/
    KeyedEncodingContainerProtocol$implementation.prototype.encodeIfPresentForKey = function ($info, value, key) {
    };
    /*Swift.(file).KeyedEncodingContainerProtocol.encodeIfPresent(_:UInt?,forKey:Self.Key)*/
    /*Swift.(file).KeyedEncodingContainerProtocol.encodeIfPresent(_:UInt?,forKey:Self.Key)*/
    KeyedEncodingContainerProtocol$implementation.prototype.encodeIfPresentForKey = function ($info, value, key) {
    };
    /*Swift.(file).KeyedEncodingContainerProtocol.encodeIfPresent(_:UInt8?,forKey:Self.Key)*/
    /*Swift.(file).KeyedEncodingContainerProtocol.encodeIfPresent(_:UInt8?,forKey:Self.Key)*/
    KeyedEncodingContainerProtocol$implementation.prototype.encodeIfPresentForKey = function ($info, value, key) {
    };
    /*Swift.(file).KeyedEncodingContainerProtocol.encodeIfPresent(_:UInt16?,forKey:Self.Key)*/
    /*Swift.(file).KeyedEncodingContainerProtocol.encodeIfPresent(_:UInt16?,forKey:Self.Key)*/
    KeyedEncodingContainerProtocol$implementation.prototype.encodeIfPresentForKey = function ($info, value, key) {
    };
    /*Swift.(file).KeyedEncodingContainerProtocol.encodeIfPresent(_:UInt32?,forKey:Self.Key)*/
    /*Swift.(file).KeyedEncodingContainerProtocol.encodeIfPresent(_:UInt32?,forKey:Self.Key)*/
    KeyedEncodingContainerProtocol$implementation.prototype.encodeIfPresentForKey = function ($info, value, key) {
    };
    /*Swift.(file).KeyedEncodingContainerProtocol.encodeIfPresent(_:UInt64?,forKey:Self.Key)*/
    /*Swift.(file).KeyedEncodingContainerProtocol.encodeIfPresent(_:UInt64?,forKey:Self.Key)*/
    KeyedEncodingContainerProtocol$implementation.prototype.encodeIfPresentForKey = function ($info, value, key) {
    };
    /*Swift.(file).KeyedEncodingContainerProtocol.encodeIfPresent(_:T?,forKey:Self.Key)*/
    /*Swift.(file).KeyedEncodingContainerProtocol.encodeIfPresent(_:T?,forKey:Self.Key)*/
    KeyedEncodingContainerProtocol$implementation.prototype.encodeIfPresentForKey = function ($info, value, key) {
    };
    return KeyedEncodingContainerProtocol$implementation;
}());
var KeyedEncodingContainer = /** @class */ (function () {
    function KeyedEncodingContainer() {
    }
    /*Swift.(file).KeyedEncodingContainer.init(_:Container)*/
    /*Swift.(file).KeyedEncodingContainer.init(_:Container)*/
    KeyedEncodingContainer.prototype.init = function ($info, container) {
        return container;
    };
    /*Swift.(file).KeyedEncodingContainer.codingPath*/ /*
    codingPath$get() {
    return this.codingPath
    }
    get codingPath() { return this.codingPath$get() }*/ ;
    /*Swift.(file).KeyedEncodingContainer.encodeNil(forKey:KeyedEncodingContainer<K>.Key)*/
    /*Swift.(file).KeyedEncodingContainerProtocol.encodeNil(forKey:Self.Key)*/
    KeyedEncodingContainer.prototype.encodeNilForKey = function ($info, key) {
    };
    /*Swift.(file).KeyedEncodingContainer.encode(_:Bool,forKey:KeyedEncodingContainer<K>.Key)*/
    /*Swift.(file).KeyedEncodingContainerProtocol.encode(_:Bool,forKey:Self.Key)*/
    KeyedEncodingContainer.prototype.encodeForKey = function ($info, value, key) {
    };
    /*Swift.(file).KeyedEncodingContainer.encode(_:String,forKey:KeyedEncodingContainer<K>.Key)*/
    /*Swift.(file).KeyedEncodingContainerProtocol.encode(_:String,forKey:Self.Key)*/
    KeyedEncodingContainer.prototype.encodeForKey = function ($info, value, key) {
    };
    /*Swift.(file).KeyedEncodingContainer.encode(_:Double,forKey:KeyedEncodingContainer<K>.Key)*/
    /*Swift.(file).KeyedEncodingContainerProtocol.encode(_:Double,forKey:Self.Key)*/
    KeyedEncodingContainer.prototype.encodeForKey = function ($info, value, key) {
    };
    /*Swift.(file).KeyedEncodingContainer.encode(_:Float,forKey:KeyedEncodingContainer<K>.Key)*/
    /*Swift.(file).KeyedEncodingContainerProtocol.encode(_:Float,forKey:Self.Key)*/
    KeyedEncodingContainer.prototype.encodeForKey = function ($info, value, key) {
    };
    /*Swift.(file).KeyedEncodingContainer.encode(_:Int,forKey:KeyedEncodingContainer<K>.Key)*/
    /*Swift.(file).KeyedEncodingContainerProtocol.encode(_:Int,forKey:Self.Key)*/
    KeyedEncodingContainer.prototype.encodeForKey = function ($info, value, key) {
    };
    /*Swift.(file).KeyedEncodingContainer.encode(_:Int8,forKey:KeyedEncodingContainer<K>.Key)*/
    /*Swift.(file).KeyedEncodingContainerProtocol.encode(_:Int8,forKey:Self.Key)*/
    KeyedEncodingContainer.prototype.encodeForKey = function ($info, value, key) {
    };
    /*Swift.(file).KeyedEncodingContainer.encode(_:Int16,forKey:KeyedEncodingContainer<K>.Key)*/
    /*Swift.(file).KeyedEncodingContainerProtocol.encode(_:Int16,forKey:Self.Key)*/
    KeyedEncodingContainer.prototype.encodeForKey = function ($info, value, key) {
    };
    /*Swift.(file).KeyedEncodingContainer.encode(_:Int32,forKey:KeyedEncodingContainer<K>.Key)*/
    /*Swift.(file).KeyedEncodingContainerProtocol.encode(_:Int32,forKey:Self.Key)*/
    KeyedEncodingContainer.prototype.encodeForKey = function ($info, value, key) {
    };
    /*Swift.(file).KeyedEncodingContainer.encode(_:Int64,forKey:KeyedEncodingContainer<K>.Key)*/
    /*Swift.(file).KeyedEncodingContainerProtocol.encode(_:Int64,forKey:Self.Key)*/
    KeyedEncodingContainer.prototype.encodeForKey = function ($info, value, key) {
    };
    /*Swift.(file).KeyedEncodingContainer.encode(_:UInt,forKey:KeyedEncodingContainer<K>.Key)*/
    /*Swift.(file).KeyedEncodingContainerProtocol.encode(_:UInt,forKey:Self.Key)*/
    KeyedEncodingContainer.prototype.encodeForKey = function ($info, value, key) {
    };
    /*Swift.(file).KeyedEncodingContainer.encode(_:UInt8,forKey:KeyedEncodingContainer<K>.Key)*/
    /*Swift.(file).KeyedEncodingContainerProtocol.encode(_:UInt8,forKey:Self.Key)*/
    KeyedEncodingContainer.prototype.encodeForKey = function ($info, value, key) {
    };
    /*Swift.(file).KeyedEncodingContainer.encode(_:UInt16,forKey:KeyedEncodingContainer<K>.Key)*/
    /*Swift.(file).KeyedEncodingContainerProtocol.encode(_:UInt16,forKey:Self.Key)*/
    KeyedEncodingContainer.prototype.encodeForKey = function ($info, value, key) {
    };
    /*Swift.(file).KeyedEncodingContainer.encode(_:UInt32,forKey:KeyedEncodingContainer<K>.Key)*/
    /*Swift.(file).KeyedEncodingContainerProtocol.encode(_:UInt32,forKey:Self.Key)*/
    KeyedEncodingContainer.prototype.encodeForKey = function ($info, value, key) {
    };
    /*Swift.(file).KeyedEncodingContainer.encode(_:UInt64,forKey:KeyedEncodingContainer<K>.Key)*/
    /*Swift.(file).KeyedEncodingContainerProtocol.encode(_:UInt64,forKey:Self.Key)*/
    KeyedEncodingContainer.prototype.encodeForKey = function ($info, value, key) {
    };
    /*Swift.(file).KeyedEncodingContainer.encode(_:T,forKey:KeyedEncodingContainer<K>.Key)*/
    /*Swift.(file).KeyedEncodingContainerProtocol.encode(_:T,forKey:Self.Key)*/
    KeyedEncodingContainer.prototype.encodeForKey = function ($info, value, key) {
    };
    /*Swift.(file).KeyedEncodingContainer.encodeConditional(_:T,forKey:KeyedEncodingContainer<K>.Key)*/
    /*Swift.(file).KeyedEncodingContainerProtocol.encodeConditional(_:T,forKey:Self.Key)*/
    KeyedEncodingContainer.prototype.encodeConditionalForKey = function ($info, object, key) {
    };
    /*Swift.(file).KeyedEncodingContainer.encodeIfPresent(_:Bool?,forKey:KeyedEncodingContainer<K>.Key)*/
    /*Swift.(file).KeyedEncodingContainerProtocol.encodeIfPresent(_:Bool?,forKey:Self.Key)*/
    KeyedEncodingContainer.prototype.encodeIfPresentForKey = function ($info, value, key) {
    };
    /*Swift.(file).KeyedEncodingContainer.encodeIfPresent(_:String?,forKey:KeyedEncodingContainer<K>.Key)*/
    /*Swift.(file).KeyedEncodingContainerProtocol.encodeIfPresent(_:String?,forKey:Self.Key)*/
    KeyedEncodingContainer.prototype.encodeIfPresentForKey = function ($info, value, key) {
    };
    /*Swift.(file).KeyedEncodingContainer.encodeIfPresent(_:Double?,forKey:KeyedEncodingContainer<K>.Key)*/
    /*Swift.(file).KeyedEncodingContainerProtocol.encodeIfPresent(_:Double?,forKey:Self.Key)*/
    KeyedEncodingContainer.prototype.encodeIfPresentForKey = function ($info, value, key) {
    };
    /*Swift.(file).KeyedEncodingContainer.encodeIfPresent(_:Float?,forKey:KeyedEncodingContainer<K>.Key)*/
    /*Swift.(file).KeyedEncodingContainerProtocol.encodeIfPresent(_:Float?,forKey:Self.Key)*/
    KeyedEncodingContainer.prototype.encodeIfPresentForKey = function ($info, value, key) {
    };
    /*Swift.(file).KeyedEncodingContainer.encodeIfPresent(_:Int?,forKey:KeyedEncodingContainer<K>.Key)*/
    /*Swift.(file).KeyedEncodingContainerProtocol.encodeIfPresent(_:Int?,forKey:Self.Key)*/
    KeyedEncodingContainer.prototype.encodeIfPresentForKey = function ($info, value, key) {
    };
    /*Swift.(file).KeyedEncodingContainer.encodeIfPresent(_:Int8?,forKey:KeyedEncodingContainer<K>.Key)*/
    /*Swift.(file).KeyedEncodingContainerProtocol.encodeIfPresent(_:Int8?,forKey:Self.Key)*/
    KeyedEncodingContainer.prototype.encodeIfPresentForKey = function ($info, value, key) {
    };
    /*Swift.(file).KeyedEncodingContainer.encodeIfPresent(_:Int16?,forKey:KeyedEncodingContainer<K>.Key)*/
    /*Swift.(file).KeyedEncodingContainerProtocol.encodeIfPresent(_:Int16?,forKey:Self.Key)*/
    KeyedEncodingContainer.prototype.encodeIfPresentForKey = function ($info, value, key) {
    };
    /*Swift.(file).KeyedEncodingContainer.encodeIfPresent(_:Int32?,forKey:KeyedEncodingContainer<K>.Key)*/
    /*Swift.(file).KeyedEncodingContainerProtocol.encodeIfPresent(_:Int32?,forKey:Self.Key)*/
    KeyedEncodingContainer.prototype.encodeIfPresentForKey = function ($info, value, key) {
    };
    /*Swift.(file).KeyedEncodingContainer.encodeIfPresent(_:Int64?,forKey:KeyedEncodingContainer<K>.Key)*/
    /*Swift.(file).KeyedEncodingContainerProtocol.encodeIfPresent(_:Int64?,forKey:Self.Key)*/
    KeyedEncodingContainer.prototype.encodeIfPresentForKey = function ($info, value, key) {
    };
    /*Swift.(file).KeyedEncodingContainer.encodeIfPresent(_:UInt?,forKey:KeyedEncodingContainer<K>.Key)*/
    /*Swift.(file).KeyedEncodingContainerProtocol.encodeIfPresent(_:UInt?,forKey:Self.Key)*/
    KeyedEncodingContainer.prototype.encodeIfPresentForKey = function ($info, value, key) {
    };
    /*Swift.(file).KeyedEncodingContainer.encodeIfPresent(_:UInt8?,forKey:KeyedEncodingContainer<K>.Key)*/
    /*Swift.(file).KeyedEncodingContainerProtocol.encodeIfPresent(_:UInt8?,forKey:Self.Key)*/
    KeyedEncodingContainer.prototype.encodeIfPresentForKey = function ($info, value, key) {
    };
    /*Swift.(file).KeyedEncodingContainer.encodeIfPresent(_:UInt16?,forKey:KeyedEncodingContainer<K>.Key)*/
    /*Swift.(file).KeyedEncodingContainerProtocol.encodeIfPresent(_:UInt16?,forKey:Self.Key)*/
    KeyedEncodingContainer.prototype.encodeIfPresentForKey = function ($info, value, key) {
    };
    /*Swift.(file).KeyedEncodingContainer.encodeIfPresent(_:UInt32?,forKey:KeyedEncodingContainer<K>.Key)*/
    /*Swift.(file).KeyedEncodingContainerProtocol.encodeIfPresent(_:UInt32?,forKey:Self.Key)*/
    KeyedEncodingContainer.prototype.encodeIfPresentForKey = function ($info, value, key) {
    };
    /*Swift.(file).KeyedEncodingContainer.encodeIfPresent(_:UInt64?,forKey:KeyedEncodingContainer<K>.Key)*/
    /*Swift.(file).KeyedEncodingContainerProtocol.encodeIfPresent(_:UInt64?,forKey:Self.Key)*/
    KeyedEncodingContainer.prototype.encodeIfPresentForKey = function ($info, value, key) {
    };
    /*Swift.(file).KeyedEncodingContainer.encodeIfPresent(_:T?,forKey:KeyedEncodingContainer<K>.Key)*/
    /*Swift.(file).KeyedEncodingContainerProtocol.encodeIfPresent(_:T?,forKey:Self.Key)*/
    KeyedEncodingContainer.prototype.encodeIfPresentForKey = function ($info, value, key) {
    };
    /*Swift.(file).KeyedEncodingContainer.nestedContainer(keyedBy:NestedKey.Type,forKey:KeyedEncodingContainer<K>.Key)*/
    /*Swift.(file).KeyedEncodingContainerProtocol.nestedContainer(keyedBy:NestedKey.Type,forKey:Self.Key)*/
    KeyedEncodingContainer.prototype.nestedContainerKeyedByForKey = function ($info, keyType, key) {
    };
    /*Swift.(file).KeyedEncodingContainer.nestedUnkeyedContainer(forKey:KeyedEncodingContainer<K>.Key)*/
    /*Swift.(file).KeyedEncodingContainerProtocol.nestedUnkeyedContainer(forKey:Self.Key)*/
    KeyedEncodingContainer.prototype.nestedUnkeyedContainerForKey = function ($info, key) {
    };
    /*Swift.(file).KeyedEncodingContainer.superEncoder()*/
    /*Swift.(file).KeyedEncodingContainerProtocol.superEncoder()*/
    KeyedEncodingContainer.prototype.superEncoder = function ($info) {
    };
    /*Swift.(file).KeyedEncodingContainer.superEncoder(forKey:KeyedEncodingContainer<K>.Key)*/
    /*Swift.(file).KeyedEncodingContainerProtocol.superEncoder(forKey:Self.Key)*/
    KeyedEncodingContainer.prototype.superEncoderForKey = function ($info, key) {
    };
    KeyedEncodingContainer.$struct = true;
    KeyedEncodingContainer.$infoAddress = '0x7fb85123b038';
    return KeyedEncodingContainer;
}());
if (typeof KeyedEncodingContainerProtocol$implementation != 'undefined')
    _mixin(KeyedEncodingContainer, KeyedEncodingContainerProtocol$implementation, false);
var KeyedDecodingContainerProtocol$implementation = /** @class */ (function () {
    function KeyedDecodingContainerProtocol$implementation() {
    }
    /*Swift.(file).KeyedDecodingContainerProtocol.decodeIfPresent(_:Bool.Type,forKey:Self.Key)*/
    /*Swift.(file).KeyedDecodingContainerProtocol.decodeIfPresent(_:Bool.Type,forKey:Self.Key)*/
    KeyedDecodingContainerProtocol$implementation.prototype.decodeIfPresentForKey = function ($info, type, key) {
    };
    /*Swift.(file).KeyedDecodingContainerProtocol.decodeIfPresent(_:String.Type,forKey:Self.Key)*/
    /*Swift.(file).KeyedDecodingContainerProtocol.decodeIfPresent(_:String.Type,forKey:Self.Key)*/
    KeyedDecodingContainerProtocol$implementation.prototype.decodeIfPresentForKey = function ($info, type, key) {
    };
    /*Swift.(file).KeyedDecodingContainerProtocol.decodeIfPresent(_:Double.Type,forKey:Self.Key)*/
    /*Swift.(file).KeyedDecodingContainerProtocol.decodeIfPresent(_:Double.Type,forKey:Self.Key)*/
    KeyedDecodingContainerProtocol$implementation.prototype.decodeIfPresentForKey = function ($info, type, key) {
    };
    /*Swift.(file).KeyedDecodingContainerProtocol.decodeIfPresent(_:Float.Type,forKey:Self.Key)*/
    /*Swift.(file).KeyedDecodingContainerProtocol.decodeIfPresent(_:Float.Type,forKey:Self.Key)*/
    KeyedDecodingContainerProtocol$implementation.prototype.decodeIfPresentForKey = function ($info, type, key) {
    };
    /*Swift.(file).KeyedDecodingContainerProtocol.decodeIfPresent(_:Int.Type,forKey:Self.Key)*/
    /*Swift.(file).KeyedDecodingContainerProtocol.decodeIfPresent(_:Int.Type,forKey:Self.Key)*/
    KeyedDecodingContainerProtocol$implementation.prototype.decodeIfPresentForKey = function ($info, type, key) {
    };
    /*Swift.(file).KeyedDecodingContainerProtocol.decodeIfPresent(_:Int8.Type,forKey:Self.Key)*/
    /*Swift.(file).KeyedDecodingContainerProtocol.decodeIfPresent(_:Int8.Type,forKey:Self.Key)*/
    KeyedDecodingContainerProtocol$implementation.prototype.decodeIfPresentForKey = function ($info, type, key) {
    };
    /*Swift.(file).KeyedDecodingContainerProtocol.decodeIfPresent(_:Int16.Type,forKey:Self.Key)*/
    /*Swift.(file).KeyedDecodingContainerProtocol.decodeIfPresent(_:Int16.Type,forKey:Self.Key)*/
    KeyedDecodingContainerProtocol$implementation.prototype.decodeIfPresentForKey = function ($info, type, key) {
    };
    /*Swift.(file).KeyedDecodingContainerProtocol.decodeIfPresent(_:Int32.Type,forKey:Self.Key)*/
    /*Swift.(file).KeyedDecodingContainerProtocol.decodeIfPresent(_:Int32.Type,forKey:Self.Key)*/
    KeyedDecodingContainerProtocol$implementation.prototype.decodeIfPresentForKey = function ($info, type, key) {
    };
    /*Swift.(file).KeyedDecodingContainerProtocol.decodeIfPresent(_:Int64.Type,forKey:Self.Key)*/
    /*Swift.(file).KeyedDecodingContainerProtocol.decodeIfPresent(_:Int64.Type,forKey:Self.Key)*/
    KeyedDecodingContainerProtocol$implementation.prototype.decodeIfPresentForKey = function ($info, type, key) {
    };
    /*Swift.(file).KeyedDecodingContainerProtocol.decodeIfPresent(_:UInt.Type,forKey:Self.Key)*/
    /*Swift.(file).KeyedDecodingContainerProtocol.decodeIfPresent(_:UInt.Type,forKey:Self.Key)*/
    KeyedDecodingContainerProtocol$implementation.prototype.decodeIfPresentForKey = function ($info, type, key) {
    };
    /*Swift.(file).KeyedDecodingContainerProtocol.decodeIfPresent(_:UInt8.Type,forKey:Self.Key)*/
    /*Swift.(file).KeyedDecodingContainerProtocol.decodeIfPresent(_:UInt8.Type,forKey:Self.Key)*/
    KeyedDecodingContainerProtocol$implementation.prototype.decodeIfPresentForKey = function ($info, type, key) {
    };
    /*Swift.(file).KeyedDecodingContainerProtocol.decodeIfPresent(_:UInt16.Type,forKey:Self.Key)*/
    /*Swift.(file).KeyedDecodingContainerProtocol.decodeIfPresent(_:UInt16.Type,forKey:Self.Key)*/
    KeyedDecodingContainerProtocol$implementation.prototype.decodeIfPresentForKey = function ($info, type, key) {
    };
    /*Swift.(file).KeyedDecodingContainerProtocol.decodeIfPresent(_:UInt32.Type,forKey:Self.Key)*/
    /*Swift.(file).KeyedDecodingContainerProtocol.decodeIfPresent(_:UInt32.Type,forKey:Self.Key)*/
    KeyedDecodingContainerProtocol$implementation.prototype.decodeIfPresentForKey = function ($info, type, key) {
    };
    /*Swift.(file).KeyedDecodingContainerProtocol.decodeIfPresent(_:UInt64.Type,forKey:Self.Key)*/
    /*Swift.(file).KeyedDecodingContainerProtocol.decodeIfPresent(_:UInt64.Type,forKey:Self.Key)*/
    KeyedDecodingContainerProtocol$implementation.prototype.decodeIfPresentForKey = function ($info, type, key) {
    };
    /*Swift.(file).KeyedDecodingContainerProtocol.decodeIfPresent(_:T.Type,forKey:Self.Key)*/
    /*Swift.(file).KeyedDecodingContainerProtocol.decodeIfPresent(_:T.Type,forKey:Self.Key)*/
    KeyedDecodingContainerProtocol$implementation.prototype.decodeIfPresentForKey = function ($info, type, key) {
    };
    return KeyedDecodingContainerProtocol$implementation;
}());
var KeyedDecodingContainer = /** @class */ (function () {
    function KeyedDecodingContainer() {
    }
    /*Swift.(file).KeyedDecodingContainer.init(_:Container)*/
    /*Swift.(file).KeyedDecodingContainer.init(_:Container)*/
    KeyedDecodingContainer.prototype.init = function ($info, container) {
        return container;
    };
    /*Swift.(file).KeyedDecodingContainer.codingPath*/ /*
    codingPath$get() {
    return this.codingPath
    }
    get codingPath() { return this.codingPath$get() }*/ ;
    /*Swift.(file).KeyedDecodingContainer.allKeys*/ /*
    allKeys$get() {
    return this.allKeys
    }
    get allKeys() { return this.allKeys$get() }*/ ;
    /*Swift.(file).KeyedDecodingContainer.contains(_:KeyedDecodingContainer<K>.Key)*/
    /*Swift.(file).KeyedDecodingContainerProtocol.contains(_:Self.Key)*/
    KeyedDecodingContainer.prototype.contains = function ($info, key) {
    };
    /*Swift.(file).KeyedDecodingContainer.decodeNil(forKey:KeyedDecodingContainer<K>.Key)*/
    /*Swift.(file).KeyedDecodingContainerProtocol.decodeNil(forKey:Self.Key)*/
    KeyedDecodingContainer.prototype.decodeNilForKey = function ($info, key) {
    };
    /*Swift.(file).KeyedDecodingContainer.decode(_:Bool.Type,forKey:KeyedDecodingContainer<K>.Key)*/
    /*Swift.(file).KeyedDecodingContainerProtocol.decode(_:Bool.Type,forKey:Self.Key)*/
    KeyedDecodingContainer.prototype.decodeForKey = function ($info, type, key) {
    };
    /*Swift.(file).KeyedDecodingContainer.decode(_:String.Type,forKey:KeyedDecodingContainer<K>.Key)*/
    /*Swift.(file).KeyedDecodingContainerProtocol.decode(_:String.Type,forKey:Self.Key)*/
    KeyedDecodingContainer.prototype.decodeForKey = function ($info, type, key) {
    };
    /*Swift.(file).KeyedDecodingContainer.decode(_:Double.Type,forKey:KeyedDecodingContainer<K>.Key)*/
    /*Swift.(file).KeyedDecodingContainerProtocol.decode(_:Double.Type,forKey:Self.Key)*/
    KeyedDecodingContainer.prototype.decodeForKey = function ($info, type, key) {
    };
    /*Swift.(file).KeyedDecodingContainer.decode(_:Float.Type,forKey:KeyedDecodingContainer<K>.Key)*/
    /*Swift.(file).KeyedDecodingContainerProtocol.decode(_:Float.Type,forKey:Self.Key)*/
    KeyedDecodingContainer.prototype.decodeForKey = function ($info, type, key) {
    };
    /*Swift.(file).KeyedDecodingContainer.decode(_:Int.Type,forKey:KeyedDecodingContainer<K>.Key)*/
    /*Swift.(file).KeyedDecodingContainerProtocol.decode(_:Int.Type,forKey:Self.Key)*/
    KeyedDecodingContainer.prototype.decodeForKey = function ($info, type, key) {
    };
    /*Swift.(file).KeyedDecodingContainer.decode(_:Int8.Type,forKey:KeyedDecodingContainer<K>.Key)*/
    /*Swift.(file).KeyedDecodingContainerProtocol.decode(_:Int8.Type,forKey:Self.Key)*/
    KeyedDecodingContainer.prototype.decodeForKey = function ($info, type, key) {
    };
    /*Swift.(file).KeyedDecodingContainer.decode(_:Int16.Type,forKey:KeyedDecodingContainer<K>.Key)*/
    /*Swift.(file).KeyedDecodingContainerProtocol.decode(_:Int16.Type,forKey:Self.Key)*/
    KeyedDecodingContainer.prototype.decodeForKey = function ($info, type, key) {
    };
    /*Swift.(file).KeyedDecodingContainer.decode(_:Int32.Type,forKey:KeyedDecodingContainer<K>.Key)*/
    /*Swift.(file).KeyedDecodingContainerProtocol.decode(_:Int32.Type,forKey:Self.Key)*/
    KeyedDecodingContainer.prototype.decodeForKey = function ($info, type, key) {
    };
    /*Swift.(file).KeyedDecodingContainer.decode(_:Int64.Type,forKey:KeyedDecodingContainer<K>.Key)*/
    /*Swift.(file).KeyedDecodingContainerProtocol.decode(_:Int64.Type,forKey:Self.Key)*/
    KeyedDecodingContainer.prototype.decodeForKey = function ($info, type, key) {
    };
    /*Swift.(file).KeyedDecodingContainer.decode(_:UInt.Type,forKey:KeyedDecodingContainer<K>.Key)*/
    /*Swift.(file).KeyedDecodingContainerProtocol.decode(_:UInt.Type,forKey:Self.Key)*/
    KeyedDecodingContainer.prototype.decodeForKey = function ($info, type, key) {
    };
    /*Swift.(file).KeyedDecodingContainer.decode(_:UInt8.Type,forKey:KeyedDecodingContainer<K>.Key)*/
    /*Swift.(file).KeyedDecodingContainerProtocol.decode(_:UInt8.Type,forKey:Self.Key)*/
    KeyedDecodingContainer.prototype.decodeForKey = function ($info, type, key) {
    };
    /*Swift.(file).KeyedDecodingContainer.decode(_:UInt16.Type,forKey:KeyedDecodingContainer<K>.Key)*/
    /*Swift.(file).KeyedDecodingContainerProtocol.decode(_:UInt16.Type,forKey:Self.Key)*/
    KeyedDecodingContainer.prototype.decodeForKey = function ($info, type, key) {
    };
    /*Swift.(file).KeyedDecodingContainer.decode(_:UInt32.Type,forKey:KeyedDecodingContainer<K>.Key)*/
    /*Swift.(file).KeyedDecodingContainerProtocol.decode(_:UInt32.Type,forKey:Self.Key)*/
    KeyedDecodingContainer.prototype.decodeForKey = function ($info, type, key) {
    };
    /*Swift.(file).KeyedDecodingContainer.decode(_:UInt64.Type,forKey:KeyedDecodingContainer<K>.Key)*/
    /*Swift.(file).KeyedDecodingContainerProtocol.decode(_:UInt64.Type,forKey:Self.Key)*/
    KeyedDecodingContainer.prototype.decodeForKey = function ($info, type, key) {
    };
    /*Swift.(file).KeyedDecodingContainer.decode(_:T.Type,forKey:KeyedDecodingContainer<K>.Key)*/
    /*Swift.(file).KeyedDecodingContainerProtocol.decode(_:T.Type,forKey:Self.Key)*/
    KeyedDecodingContainer.prototype.decodeForKey = function ($info, type, key) {
    };
    /*Swift.(file).KeyedDecodingContainer.decodeIfPresent(_:Bool.Type,forKey:KeyedDecodingContainer<K>.Key)*/
    /*Swift.(file).KeyedDecodingContainerProtocol.decodeIfPresent(_:Bool.Type,forKey:Self.Key)*/
    KeyedDecodingContainer.prototype.decodeIfPresentForKey = function ($info, type, key) {
    };
    /*Swift.(file).KeyedDecodingContainer.decodeIfPresent(_:String.Type,forKey:KeyedDecodingContainer<K>.Key)*/
    /*Swift.(file).KeyedDecodingContainerProtocol.decodeIfPresent(_:String.Type,forKey:Self.Key)*/
    KeyedDecodingContainer.prototype.decodeIfPresentForKey = function ($info, type, key) {
    };
    /*Swift.(file).KeyedDecodingContainer.decodeIfPresent(_:Double.Type,forKey:KeyedDecodingContainer<K>.Key)*/
    /*Swift.(file).KeyedDecodingContainerProtocol.decodeIfPresent(_:Double.Type,forKey:Self.Key)*/
    KeyedDecodingContainer.prototype.decodeIfPresentForKey = function ($info, type, key) {
    };
    /*Swift.(file).KeyedDecodingContainer.decodeIfPresent(_:Float.Type,forKey:KeyedDecodingContainer<K>.Key)*/
    /*Swift.(file).KeyedDecodingContainerProtocol.decodeIfPresent(_:Float.Type,forKey:Self.Key)*/
    KeyedDecodingContainer.prototype.decodeIfPresentForKey = function ($info, type, key) {
    };
    /*Swift.(file).KeyedDecodingContainer.decodeIfPresent(_:Int.Type,forKey:KeyedDecodingContainer<K>.Key)*/
    /*Swift.(file).KeyedDecodingContainerProtocol.decodeIfPresent(_:Int.Type,forKey:Self.Key)*/
    KeyedDecodingContainer.prototype.decodeIfPresentForKey = function ($info, type, key) {
    };
    /*Swift.(file).KeyedDecodingContainer.decodeIfPresent(_:Int8.Type,forKey:KeyedDecodingContainer<K>.Key)*/
    /*Swift.(file).KeyedDecodingContainerProtocol.decodeIfPresent(_:Int8.Type,forKey:Self.Key)*/
    KeyedDecodingContainer.prototype.decodeIfPresentForKey = function ($info, type, key) {
    };
    /*Swift.(file).KeyedDecodingContainer.decodeIfPresent(_:Int16.Type,forKey:KeyedDecodingContainer<K>.Key)*/
    /*Swift.(file).KeyedDecodingContainerProtocol.decodeIfPresent(_:Int16.Type,forKey:Self.Key)*/
    KeyedDecodingContainer.prototype.decodeIfPresentForKey = function ($info, type, key) {
    };
    /*Swift.(file).KeyedDecodingContainer.decodeIfPresent(_:Int32.Type,forKey:KeyedDecodingContainer<K>.Key)*/
    /*Swift.(file).KeyedDecodingContainerProtocol.decodeIfPresent(_:Int32.Type,forKey:Self.Key)*/
    KeyedDecodingContainer.prototype.decodeIfPresentForKey = function ($info, type, key) {
    };
    /*Swift.(file).KeyedDecodingContainer.decodeIfPresent(_:Int64.Type,forKey:KeyedDecodingContainer<K>.Key)*/
    /*Swift.(file).KeyedDecodingContainerProtocol.decodeIfPresent(_:Int64.Type,forKey:Self.Key)*/
    KeyedDecodingContainer.prototype.decodeIfPresentForKey = function ($info, type, key) {
    };
    /*Swift.(file).KeyedDecodingContainer.decodeIfPresent(_:UInt.Type,forKey:KeyedDecodingContainer<K>.Key)*/
    /*Swift.(file).KeyedDecodingContainerProtocol.decodeIfPresent(_:UInt.Type,forKey:Self.Key)*/
    KeyedDecodingContainer.prototype.decodeIfPresentForKey = function ($info, type, key) {
    };
    /*Swift.(file).KeyedDecodingContainer.decodeIfPresent(_:UInt8.Type,forKey:KeyedDecodingContainer<K>.Key)*/
    /*Swift.(file).KeyedDecodingContainerProtocol.decodeIfPresent(_:UInt8.Type,forKey:Self.Key)*/
    KeyedDecodingContainer.prototype.decodeIfPresentForKey = function ($info, type, key) {
    };
    /*Swift.(file).KeyedDecodingContainer.decodeIfPresent(_:UInt16.Type,forKey:KeyedDecodingContainer<K>.Key)*/
    /*Swift.(file).KeyedDecodingContainerProtocol.decodeIfPresent(_:UInt16.Type,forKey:Self.Key)*/
    KeyedDecodingContainer.prototype.decodeIfPresentForKey = function ($info, type, key) {
    };
    /*Swift.(file).KeyedDecodingContainer.decodeIfPresent(_:UInt32.Type,forKey:KeyedDecodingContainer<K>.Key)*/
    /*Swift.(file).KeyedDecodingContainerProtocol.decodeIfPresent(_:UInt32.Type,forKey:Self.Key)*/
    KeyedDecodingContainer.prototype.decodeIfPresentForKey = function ($info, type, key) {
    };
    /*Swift.(file).KeyedDecodingContainer.decodeIfPresent(_:UInt64.Type,forKey:KeyedDecodingContainer<K>.Key)*/
    /*Swift.(file).KeyedDecodingContainerProtocol.decodeIfPresent(_:UInt64.Type,forKey:Self.Key)*/
    KeyedDecodingContainer.prototype.decodeIfPresentForKey = function ($info, type, key) {
    };
    /*Swift.(file).KeyedDecodingContainer.decodeIfPresent(_:T.Type,forKey:KeyedDecodingContainer<K>.Key)*/
    /*Swift.(file).KeyedDecodingContainerProtocol.decodeIfPresent(_:T.Type,forKey:Self.Key)*/
    KeyedDecodingContainer.prototype.decodeIfPresentForKey = function ($info, type, key) {
    };
    /*Swift.(file).KeyedDecodingContainer.nestedContainer(keyedBy:NestedKey.Type,forKey:KeyedDecodingContainer<K>.Key)*/
    /*Swift.(file).KeyedDecodingContainerProtocol.nestedContainer(keyedBy:NestedKey.Type,forKey:Self.Key)*/
    KeyedDecodingContainer.prototype.nestedContainerKeyedByForKey = function ($info, type, key) {
    };
    /*Swift.(file).KeyedDecodingContainer.nestedUnkeyedContainer(forKey:KeyedDecodingContainer<K>.Key)*/
    /*Swift.(file).KeyedDecodingContainerProtocol.nestedUnkeyedContainer(forKey:Self.Key)*/
    KeyedDecodingContainer.prototype.nestedUnkeyedContainerForKey = function ($info, key) {
    };
    /*Swift.(file).KeyedDecodingContainer.superDecoder()*/
    /*Swift.(file).KeyedDecodingContainerProtocol.superDecoder()*/
    KeyedDecodingContainer.prototype.superDecoder = function ($info) {
    };
    /*Swift.(file).KeyedDecodingContainer.superDecoder(forKey:KeyedDecodingContainer<K>.Key)*/
    /*Swift.(file).KeyedDecodingContainerProtocol.superDecoder(forKey:Self.Key)*/
    KeyedDecodingContainer.prototype.superDecoderForKey = function ($info, key) {
    };
    KeyedDecodingContainer.$struct = true;
    KeyedDecodingContainer.$infoAddress = '0x7fb85123c818';
    return KeyedDecodingContainer;
}());
if (typeof KeyedDecodingContainerProtocol$implementation != 'undefined')
    _mixin(KeyedDecodingContainer, KeyedDecodingContainerProtocol$implementation, false);
var UnkeyedEncodingContainer$implementation = /** @class */ (function () {
    function UnkeyedEncodingContainer$implementation() {
    }
    /*Swift.(file).UnkeyedEncodingContainer.encodeConditional(_:T)*/
    /*Swift.(file).UnkeyedEncodingContainer.encodeConditional(_:T)*/
    UnkeyedEncodingContainer$implementation.prototype.encodeConditional = function ($info, object) {
    };
    /*Swift.(file).UnkeyedEncodingContainer.encode(contentsOf:T)*/
    /*Swift.(file).UnkeyedEncodingContainer.encode(contentsOf:T)*/
    UnkeyedEncodingContainer$implementation.prototype.encodeContentsOf = function ($info, sequence) {
    };
    /*Swift.(file).UnkeyedEncodingContainer.encode(contentsOf:T)*/
    /*Swift.(file).UnkeyedEncodingContainer.encode(contentsOf:T)*/
    UnkeyedEncodingContainer$implementation.prototype.encodeContentsOf = function ($info, sequence) {
    };
    /*Swift.(file).UnkeyedEncodingContainer.encode(contentsOf:T)*/
    /*Swift.(file).UnkeyedEncodingContainer.encode(contentsOf:T)*/
    UnkeyedEncodingContainer$implementation.prototype.encodeContentsOf = function ($info, sequence) {
    };
    /*Swift.(file).UnkeyedEncodingContainer.encode(contentsOf:T)*/
    /*Swift.(file).UnkeyedEncodingContainer.encode(contentsOf:T)*/
    UnkeyedEncodingContainer$implementation.prototype.encodeContentsOf = function ($info, sequence) {
    };
    /*Swift.(file).UnkeyedEncodingContainer.encode(contentsOf:T)*/
    /*Swift.(file).UnkeyedEncodingContainer.encode(contentsOf:T)*/
    UnkeyedEncodingContainer$implementation.prototype.encodeContentsOf = function ($info, sequence) {
    };
    /*Swift.(file).UnkeyedEncodingContainer.encode(contentsOf:T)*/
    /*Swift.(file).UnkeyedEncodingContainer.encode(contentsOf:T)*/
    UnkeyedEncodingContainer$implementation.prototype.encodeContentsOf = function ($info, sequence) {
    };
    /*Swift.(file).UnkeyedEncodingContainer.encode(contentsOf:T)*/
    /*Swift.(file).UnkeyedEncodingContainer.encode(contentsOf:T)*/
    UnkeyedEncodingContainer$implementation.prototype.encodeContentsOf = function ($info, sequence) {
    };
    /*Swift.(file).UnkeyedEncodingContainer.encode(contentsOf:T)*/
    /*Swift.(file).UnkeyedEncodingContainer.encode(contentsOf:T)*/
    UnkeyedEncodingContainer$implementation.prototype.encodeContentsOf = function ($info, sequence) {
    };
    /*Swift.(file).UnkeyedEncodingContainer.encode(contentsOf:T)*/
    /*Swift.(file).UnkeyedEncodingContainer.encode(contentsOf:T)*/
    UnkeyedEncodingContainer$implementation.prototype.encodeContentsOf = function ($info, sequence) {
    };
    /*Swift.(file).UnkeyedEncodingContainer.encode(contentsOf:T)*/
    /*Swift.(file).UnkeyedEncodingContainer.encode(contentsOf:T)*/
    UnkeyedEncodingContainer$implementation.prototype.encodeContentsOf = function ($info, sequence) {
    };
    /*Swift.(file).UnkeyedEncodingContainer.encode(contentsOf:T)*/
    /*Swift.(file).UnkeyedEncodingContainer.encode(contentsOf:T)*/
    UnkeyedEncodingContainer$implementation.prototype.encodeContentsOf = function ($info, sequence) {
    };
    /*Swift.(file).UnkeyedEncodingContainer.encode(contentsOf:T)*/
    /*Swift.(file).UnkeyedEncodingContainer.encode(contentsOf:T)*/
    UnkeyedEncodingContainer$implementation.prototype.encodeContentsOf = function ($info, sequence) {
    };
    /*Swift.(file).UnkeyedEncodingContainer.encode(contentsOf:T)*/
    /*Swift.(file).UnkeyedEncodingContainer.encode(contentsOf:T)*/
    UnkeyedEncodingContainer$implementation.prototype.encodeContentsOf = function ($info, sequence) {
    };
    /*Swift.(file).UnkeyedEncodingContainer.encode(contentsOf:T)*/
    /*Swift.(file).UnkeyedEncodingContainer.encode(contentsOf:T)*/
    UnkeyedEncodingContainer$implementation.prototype.encodeContentsOf = function ($info, sequence) {
    };
    /*Swift.(file).UnkeyedEncodingContainer.encode(contentsOf:T)*/
    /*Swift.(file).UnkeyedEncodingContainer.encode(contentsOf:T)*/
    UnkeyedEncodingContainer$implementation.prototype.encodeContentsOf = function ($info, sequence) {
    };
    return UnkeyedEncodingContainer$implementation;
}());
var UnkeyedDecodingContainer$implementation = /** @class */ (function () {
    function UnkeyedDecodingContainer$implementation() {
    }
    /*Swift.(file).UnkeyedDecodingContainer.decodeIfPresent(_:Bool.Type)*/
    /*Swift.(file).UnkeyedDecodingContainer.decodeIfPresent(_:Bool.Type)*/
    UnkeyedDecodingContainer$implementation.prototype.decodeIfPresent = function ($info, type) {
    };
    /*Swift.(file).UnkeyedDecodingContainer.decodeIfPresent(_:String.Type)*/
    /*Swift.(file).UnkeyedDecodingContainer.decodeIfPresent(_:String.Type)*/
    UnkeyedDecodingContainer$implementation.prototype.decodeIfPresent = function ($info, type) {
    };
    /*Swift.(file).UnkeyedDecodingContainer.decodeIfPresent(_:Double.Type)*/
    /*Swift.(file).UnkeyedDecodingContainer.decodeIfPresent(_:Double.Type)*/
    UnkeyedDecodingContainer$implementation.prototype.decodeIfPresent = function ($info, type) {
    };
    /*Swift.(file).UnkeyedDecodingContainer.decodeIfPresent(_:Float.Type)*/
    /*Swift.(file).UnkeyedDecodingContainer.decodeIfPresent(_:Float.Type)*/
    UnkeyedDecodingContainer$implementation.prototype.decodeIfPresent = function ($info, type) {
    };
    /*Swift.(file).UnkeyedDecodingContainer.decodeIfPresent(_:Int.Type)*/
    /*Swift.(file).UnkeyedDecodingContainer.decodeIfPresent(_:Int.Type)*/
    UnkeyedDecodingContainer$implementation.prototype.decodeIfPresent = function ($info, type) {
    };
    /*Swift.(file).UnkeyedDecodingContainer.decodeIfPresent(_:Int8.Type)*/
    /*Swift.(file).UnkeyedDecodingContainer.decodeIfPresent(_:Int8.Type)*/
    UnkeyedDecodingContainer$implementation.prototype.decodeIfPresent = function ($info, type) {
    };
    /*Swift.(file).UnkeyedDecodingContainer.decodeIfPresent(_:Int16.Type)*/
    /*Swift.(file).UnkeyedDecodingContainer.decodeIfPresent(_:Int16.Type)*/
    UnkeyedDecodingContainer$implementation.prototype.decodeIfPresent = function ($info, type) {
    };
    /*Swift.(file).UnkeyedDecodingContainer.decodeIfPresent(_:Int32.Type)*/
    /*Swift.(file).UnkeyedDecodingContainer.decodeIfPresent(_:Int32.Type)*/
    UnkeyedDecodingContainer$implementation.prototype.decodeIfPresent = function ($info, type) {
    };
    /*Swift.(file).UnkeyedDecodingContainer.decodeIfPresent(_:Int64.Type)*/
    /*Swift.(file).UnkeyedDecodingContainer.decodeIfPresent(_:Int64.Type)*/
    UnkeyedDecodingContainer$implementation.prototype.decodeIfPresent = function ($info, type) {
    };
    /*Swift.(file).UnkeyedDecodingContainer.decodeIfPresent(_:UInt.Type)*/
    /*Swift.(file).UnkeyedDecodingContainer.decodeIfPresent(_:UInt.Type)*/
    UnkeyedDecodingContainer$implementation.prototype.decodeIfPresent = function ($info, type) {
    };
    /*Swift.(file).UnkeyedDecodingContainer.decodeIfPresent(_:UInt8.Type)*/
    /*Swift.(file).UnkeyedDecodingContainer.decodeIfPresent(_:UInt8.Type)*/
    UnkeyedDecodingContainer$implementation.prototype.decodeIfPresent = function ($info, type) {
    };
    /*Swift.(file).UnkeyedDecodingContainer.decodeIfPresent(_:UInt16.Type)*/
    /*Swift.(file).UnkeyedDecodingContainer.decodeIfPresent(_:UInt16.Type)*/
    UnkeyedDecodingContainer$implementation.prototype.decodeIfPresent = function ($info, type) {
    };
    /*Swift.(file).UnkeyedDecodingContainer.decodeIfPresent(_:UInt32.Type)*/
    /*Swift.(file).UnkeyedDecodingContainer.decodeIfPresent(_:UInt32.Type)*/
    UnkeyedDecodingContainer$implementation.prototype.decodeIfPresent = function ($info, type) {
    };
    /*Swift.(file).UnkeyedDecodingContainer.decodeIfPresent(_:UInt64.Type)*/
    /*Swift.(file).UnkeyedDecodingContainer.decodeIfPresent(_:UInt64.Type)*/
    UnkeyedDecodingContainer$implementation.prototype.decodeIfPresent = function ($info, type) {
    };
    /*Swift.(file).UnkeyedDecodingContainer.decodeIfPresent(_:T.Type)*/
    /*Swift.(file).UnkeyedDecodingContainer.decodeIfPresent(_:T.Type)*/
    UnkeyedDecodingContainer$implementation.prototype.decodeIfPresent = function ($info, type) {
    };
    return UnkeyedDecodingContainer$implementation;
}());
var SingleValueEncodingContainer$implementation = /** @class */ (function () {
    function SingleValueEncodingContainer$implementation() {
    }
    return SingleValueEncodingContainer$implementation;
}());
var SingleValueDecodingContainer$implementation = /** @class */ (function () {
    function SingleValueDecodingContainer$implementation() {
    }
    return SingleValueDecodingContainer$implementation;
}());
var _KeyedEncodingContainerBase = /** @class */ (function () {
    function _KeyedEncodingContainerBase() {
    }
    /*Swift.(file)._KeyedEncodingContainerBase.init()*/
    /*Swift.(file)._KeyedEncodingContainerBase.init()*/
    _KeyedEncodingContainerBase.prototype.init = function ($info) {
    };
    /*Swift.(file)._KeyedEncodingContainerBase.codingPath*/ /*
    codingPath$get() {
    return this.codingPath
    }
    get codingPath() { return this.codingPath$get() }*/ ;
    /*Swift.(file)._KeyedEncodingContainerBase.encodeNil(forKey:Key)*/
    /*Swift.(file)._KeyedEncodingContainerBase.encodeNil(forKey:Key)*/
    _KeyedEncodingContainerBase.prototype.encodeNilForKey = function ($info, key) {
    };
    /*Swift.(file)._KeyedEncodingContainerBase.encode(_:Bool,forKey:Key)*/
    /*Swift.(file)._KeyedEncodingContainerBase.encode(_:Bool,forKey:Key)*/
    _KeyedEncodingContainerBase.prototype.encodeForKey = function ($info, value, key) {
    };
    /*Swift.(file)._KeyedEncodingContainerBase.encode(_:String,forKey:Key)*/
    /*Swift.(file)._KeyedEncodingContainerBase.encode(_:String,forKey:Key)*/
    _KeyedEncodingContainerBase.prototype.encodeForKey = function ($info, value, key) {
    };
    /*Swift.(file)._KeyedEncodingContainerBase.encode(_:Double,forKey:Key)*/
    /*Swift.(file)._KeyedEncodingContainerBase.encode(_:Double,forKey:Key)*/
    _KeyedEncodingContainerBase.prototype.encodeForKey = function ($info, value, key) {
    };
    /*Swift.(file)._KeyedEncodingContainerBase.encode(_:Float,forKey:Key)*/
    /*Swift.(file)._KeyedEncodingContainerBase.encode(_:Float,forKey:Key)*/
    _KeyedEncodingContainerBase.prototype.encodeForKey = function ($info, value, key) {
    };
    /*Swift.(file)._KeyedEncodingContainerBase.encode(_:Int,forKey:Key)*/
    /*Swift.(file)._KeyedEncodingContainerBase.encode(_:Int,forKey:Key)*/
    _KeyedEncodingContainerBase.prototype.encodeForKey = function ($info, value, key) {
    };
    /*Swift.(file)._KeyedEncodingContainerBase.encode(_:Int8,forKey:Key)*/
    /*Swift.(file)._KeyedEncodingContainerBase.encode(_:Int8,forKey:Key)*/
    _KeyedEncodingContainerBase.prototype.encodeForKey = function ($info, value, key) {
    };
    /*Swift.(file)._KeyedEncodingContainerBase.encode(_:Int16,forKey:Key)*/
    /*Swift.(file)._KeyedEncodingContainerBase.encode(_:Int16,forKey:Key)*/
    _KeyedEncodingContainerBase.prototype.encodeForKey = function ($info, value, key) {
    };
    /*Swift.(file)._KeyedEncodingContainerBase.encode(_:Int32,forKey:Key)*/
    /*Swift.(file)._KeyedEncodingContainerBase.encode(_:Int32,forKey:Key)*/
    _KeyedEncodingContainerBase.prototype.encodeForKey = function ($info, value, key) {
    };
    /*Swift.(file)._KeyedEncodingContainerBase.encode(_:Int64,forKey:Key)*/
    /*Swift.(file)._KeyedEncodingContainerBase.encode(_:Int64,forKey:Key)*/
    _KeyedEncodingContainerBase.prototype.encodeForKey = function ($info, value, key) {
    };
    /*Swift.(file)._KeyedEncodingContainerBase.encode(_:UInt,forKey:Key)*/
    /*Swift.(file)._KeyedEncodingContainerBase.encode(_:UInt,forKey:Key)*/
    _KeyedEncodingContainerBase.prototype.encodeForKey = function ($info, value, key) {
    };
    /*Swift.(file)._KeyedEncodingContainerBase.encode(_:UInt8,forKey:Key)*/
    /*Swift.(file)._KeyedEncodingContainerBase.encode(_:UInt8,forKey:Key)*/
    _KeyedEncodingContainerBase.prototype.encodeForKey = function ($info, value, key) {
    };
    /*Swift.(file)._KeyedEncodingContainerBase.encode(_:UInt16,forKey:Key)*/
    /*Swift.(file)._KeyedEncodingContainerBase.encode(_:UInt16,forKey:Key)*/
    _KeyedEncodingContainerBase.prototype.encodeForKey = function ($info, value, key) {
    };
    /*Swift.(file)._KeyedEncodingContainerBase.encode(_:UInt32,forKey:Key)*/
    /*Swift.(file)._KeyedEncodingContainerBase.encode(_:UInt32,forKey:Key)*/
    _KeyedEncodingContainerBase.prototype.encodeForKey = function ($info, value, key) {
    };
    /*Swift.(file)._KeyedEncodingContainerBase.encode(_:UInt64,forKey:Key)*/
    /*Swift.(file)._KeyedEncodingContainerBase.encode(_:UInt64,forKey:Key)*/
    _KeyedEncodingContainerBase.prototype.encodeForKey = function ($info, value, key) {
    };
    /*Swift.(file)._KeyedEncodingContainerBase.encode(_:T,forKey:Key)*/
    /*Swift.(file)._KeyedEncodingContainerBase.encode(_:T,forKey:Key)*/
    _KeyedEncodingContainerBase.prototype.encodeForKey = function ($info, value, key) {
    };
    /*Swift.(file)._KeyedEncodingContainerBase.encodeConditional(_:T,forKey:Key)*/
    /*Swift.(file)._KeyedEncodingContainerBase.encodeConditional(_:T,forKey:Key)*/
    _KeyedEncodingContainerBase.prototype.encodeConditionalForKey = function ($info, object, key) {
    };
    /*Swift.(file)._KeyedEncodingContainerBase.encodeIfPresent(_:Bool?,forKey:Key)*/
    /*Swift.(file)._KeyedEncodingContainerBase.encodeIfPresent(_:Bool?,forKey:Key)*/
    _KeyedEncodingContainerBase.prototype.encodeIfPresentForKey = function ($info, value, key) {
    };
    /*Swift.(file)._KeyedEncodingContainerBase.encodeIfPresent(_:String?,forKey:Key)*/
    /*Swift.(file)._KeyedEncodingContainerBase.encodeIfPresent(_:String?,forKey:Key)*/
    _KeyedEncodingContainerBase.prototype.encodeIfPresentForKey = function ($info, value, key) {
    };
    /*Swift.(file)._KeyedEncodingContainerBase.encodeIfPresent(_:Double?,forKey:Key)*/
    /*Swift.(file)._KeyedEncodingContainerBase.encodeIfPresent(_:Double?,forKey:Key)*/
    _KeyedEncodingContainerBase.prototype.encodeIfPresentForKey = function ($info, value, key) {
    };
    /*Swift.(file)._KeyedEncodingContainerBase.encodeIfPresent(_:Float?,forKey:Key)*/
    /*Swift.(file)._KeyedEncodingContainerBase.encodeIfPresent(_:Float?,forKey:Key)*/
    _KeyedEncodingContainerBase.prototype.encodeIfPresentForKey = function ($info, value, key) {
    };
    /*Swift.(file)._KeyedEncodingContainerBase.encodeIfPresent(_:Int?,forKey:Key)*/
    /*Swift.(file)._KeyedEncodingContainerBase.encodeIfPresent(_:Int?,forKey:Key)*/
    _KeyedEncodingContainerBase.prototype.encodeIfPresentForKey = function ($info, value, key) {
    };
    /*Swift.(file)._KeyedEncodingContainerBase.encodeIfPresent(_:Int8?,forKey:Key)*/
    /*Swift.(file)._KeyedEncodingContainerBase.encodeIfPresent(_:Int8?,forKey:Key)*/
    _KeyedEncodingContainerBase.prototype.encodeIfPresentForKey = function ($info, value, key) {
    };
    /*Swift.(file)._KeyedEncodingContainerBase.encodeIfPresent(_:Int16?,forKey:Key)*/
    /*Swift.(file)._KeyedEncodingContainerBase.encodeIfPresent(_:Int16?,forKey:Key)*/
    _KeyedEncodingContainerBase.prototype.encodeIfPresentForKey = function ($info, value, key) {
    };
    /*Swift.(file)._KeyedEncodingContainerBase.encodeIfPresent(_:Int32?,forKey:Key)*/
    /*Swift.(file)._KeyedEncodingContainerBase.encodeIfPresent(_:Int32?,forKey:Key)*/
    _KeyedEncodingContainerBase.prototype.encodeIfPresentForKey = function ($info, value, key) {
    };
    /*Swift.(file)._KeyedEncodingContainerBase.encodeIfPresent(_:Int64?,forKey:Key)*/
    /*Swift.(file)._KeyedEncodingContainerBase.encodeIfPresent(_:Int64?,forKey:Key)*/
    _KeyedEncodingContainerBase.prototype.encodeIfPresentForKey = function ($info, value, key) {
    };
    /*Swift.(file)._KeyedEncodingContainerBase.encodeIfPresent(_:UInt?,forKey:Key)*/
    /*Swift.(file)._KeyedEncodingContainerBase.encodeIfPresent(_:UInt?,forKey:Key)*/
    _KeyedEncodingContainerBase.prototype.encodeIfPresentForKey = function ($info, value, key) {
    };
    /*Swift.(file)._KeyedEncodingContainerBase.encodeIfPresent(_:UInt8?,forKey:Key)*/
    /*Swift.(file)._KeyedEncodingContainerBase.encodeIfPresent(_:UInt8?,forKey:Key)*/
    _KeyedEncodingContainerBase.prototype.encodeIfPresentForKey = function ($info, value, key) {
    };
    /*Swift.(file)._KeyedEncodingContainerBase.encodeIfPresent(_:UInt16?,forKey:Key)*/
    /*Swift.(file)._KeyedEncodingContainerBase.encodeIfPresent(_:UInt16?,forKey:Key)*/
    _KeyedEncodingContainerBase.prototype.encodeIfPresentForKey = function ($info, value, key) {
    };
    /*Swift.(file)._KeyedEncodingContainerBase.encodeIfPresent(_:UInt32?,forKey:Key)*/
    /*Swift.(file)._KeyedEncodingContainerBase.encodeIfPresent(_:UInt32?,forKey:Key)*/
    _KeyedEncodingContainerBase.prototype.encodeIfPresentForKey = function ($info, value, key) {
    };
    /*Swift.(file)._KeyedEncodingContainerBase.encodeIfPresent(_:UInt64?,forKey:Key)*/
    /*Swift.(file)._KeyedEncodingContainerBase.encodeIfPresent(_:UInt64?,forKey:Key)*/
    _KeyedEncodingContainerBase.prototype.encodeIfPresentForKey = function ($info, value, key) {
    };
    /*Swift.(file)._KeyedEncodingContainerBase.encodeIfPresent(_:T?,forKey:Key)*/
    /*Swift.(file)._KeyedEncodingContainerBase.encodeIfPresent(_:T?,forKey:Key)*/
    _KeyedEncodingContainerBase.prototype.encodeIfPresentForKey = function ($info, value, key) {
    };
    /*Swift.(file)._KeyedEncodingContainerBase.nestedContainer(keyedBy:NestedKey.Type,forKey:Key)*/
    /*Swift.(file)._KeyedEncodingContainerBase.nestedContainer(keyedBy:NestedKey.Type,forKey:Key)*/
    _KeyedEncodingContainerBase.prototype.nestedContainerKeyedByForKey = function ($info, keyType, key) {
    };
    /*Swift.(file)._KeyedEncodingContainerBase.nestedUnkeyedContainer(forKey:Key)*/
    /*Swift.(file)._KeyedEncodingContainerBase.nestedUnkeyedContainer(forKey:Key)*/
    _KeyedEncodingContainerBase.prototype.nestedUnkeyedContainerForKey = function ($info, key) {
    };
    /*Swift.(file)._KeyedEncodingContainerBase.superEncoder()*/
    /*Swift.(file)._KeyedEncodingContainerBase.superEncoder()*/
    _KeyedEncodingContainerBase.prototype.superEncoder = function ($info) {
    };
    /*Swift.(file)._KeyedEncodingContainerBase.superEncoder(forKey:Key)*/
    /*Swift.(file)._KeyedEncodingContainerBase.superEncoder(forKey:Key)*/
    _KeyedEncodingContainerBase.prototype.superEncoderForKey = function ($info, key) {
    };
    _KeyedEncodingContainerBase.$infoAddress = '0x7fb85123da38';
    return _KeyedEncodingContainerBase;
}());
var _KeyedEncodingContainerBox = /** @class */ (function (_super) {
    __extends(_KeyedEncodingContainerBox, _super);
    function _KeyedEncodingContainerBox() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    /*Swift.(file)._KeyedEncodingContainerBox.init(_:Concrete)*/
    /*Swift.(file)._KeyedEncodingContainerBox.init(_:Concrete)*/
    _KeyedEncodingContainerBox.prototype.init = function ($info, container) {
        return container;
    };
    /*Swift.(file)._KeyedEncodingContainerBox.codingPath*/ /*
    codingPath$get() {
    return this.codingPath
    }
    get codingPath() { return this.codingPath$get() }*/ ;
    /*Swift.(file)._KeyedEncodingContainerBox.encodeNil(forKey:_KeyedEncodingContainerBox<Concrete>.Key)*/
    /*Swift.(file)._KeyedEncodingContainerBase.encodeNil(forKey:Key)*/
    _KeyedEncodingContainerBox.prototype.encodeNilForKey = function ($info, key) {
    };
    /*Swift.(file)._KeyedEncodingContainerBox.encode(_:Bool,forKey:_KeyedEncodingContainerBox<Concrete>.Key)*/
    /*Swift.(file)._KeyedEncodingContainerBase.encode(_:Bool,forKey:Key)*/
    _KeyedEncodingContainerBox.prototype.encodeForKey = function ($info, value, key) {
    };
    /*Swift.(file)._KeyedEncodingContainerBox.encode(_:String,forKey:_KeyedEncodingContainerBox<Concrete>.Key)*/
    /*Swift.(file)._KeyedEncodingContainerBase.encode(_:String,forKey:Key)*/
    _KeyedEncodingContainerBox.prototype.encodeForKey = function ($info, value, key) {
    };
    /*Swift.(file)._KeyedEncodingContainerBox.encode(_:Double,forKey:_KeyedEncodingContainerBox<Concrete>.Key)*/
    /*Swift.(file)._KeyedEncodingContainerBase.encode(_:Double,forKey:Key)*/
    _KeyedEncodingContainerBox.prototype.encodeForKey = function ($info, value, key) {
    };
    /*Swift.(file)._KeyedEncodingContainerBox.encode(_:Float,forKey:_KeyedEncodingContainerBox<Concrete>.Key)*/
    /*Swift.(file)._KeyedEncodingContainerBase.encode(_:Float,forKey:Key)*/
    _KeyedEncodingContainerBox.prototype.encodeForKey = function ($info, value, key) {
    };
    /*Swift.(file)._KeyedEncodingContainerBox.encode(_:Int,forKey:_KeyedEncodingContainerBox<Concrete>.Key)*/
    /*Swift.(file)._KeyedEncodingContainerBase.encode(_:Int,forKey:Key)*/
    _KeyedEncodingContainerBox.prototype.encodeForKey = function ($info, value, key) {
    };
    /*Swift.(file)._KeyedEncodingContainerBox.encode(_:Int8,forKey:_KeyedEncodingContainerBox<Concrete>.Key)*/
    /*Swift.(file)._KeyedEncodingContainerBase.encode(_:Int8,forKey:Key)*/
    _KeyedEncodingContainerBox.prototype.encodeForKey = function ($info, value, key) {
    };
    /*Swift.(file)._KeyedEncodingContainerBox.encode(_:Int16,forKey:_KeyedEncodingContainerBox<Concrete>.Key)*/
    /*Swift.(file)._KeyedEncodingContainerBase.encode(_:Int16,forKey:Key)*/
    _KeyedEncodingContainerBox.prototype.encodeForKey = function ($info, value, key) {
    };
    /*Swift.(file)._KeyedEncodingContainerBox.encode(_:Int32,forKey:_KeyedEncodingContainerBox<Concrete>.Key)*/
    /*Swift.(file)._KeyedEncodingContainerBase.encode(_:Int32,forKey:Key)*/
    _KeyedEncodingContainerBox.prototype.encodeForKey = function ($info, value, key) {
    };
    /*Swift.(file)._KeyedEncodingContainerBox.encode(_:Int64,forKey:_KeyedEncodingContainerBox<Concrete>.Key)*/
    /*Swift.(file)._KeyedEncodingContainerBase.encode(_:Int64,forKey:Key)*/
    _KeyedEncodingContainerBox.prototype.encodeForKey = function ($info, value, key) {
    };
    /*Swift.(file)._KeyedEncodingContainerBox.encode(_:UInt,forKey:_KeyedEncodingContainerBox<Concrete>.Key)*/
    /*Swift.(file)._KeyedEncodingContainerBase.encode(_:UInt,forKey:Key)*/
    _KeyedEncodingContainerBox.prototype.encodeForKey = function ($info, value, key) {
    };
    /*Swift.(file)._KeyedEncodingContainerBox.encode(_:UInt8,forKey:_KeyedEncodingContainerBox<Concrete>.Key)*/
    /*Swift.(file)._KeyedEncodingContainerBase.encode(_:UInt8,forKey:Key)*/
    _KeyedEncodingContainerBox.prototype.encodeForKey = function ($info, value, key) {
    };
    /*Swift.(file)._KeyedEncodingContainerBox.encode(_:UInt16,forKey:_KeyedEncodingContainerBox<Concrete>.Key)*/
    /*Swift.(file)._KeyedEncodingContainerBase.encode(_:UInt16,forKey:Key)*/
    _KeyedEncodingContainerBox.prototype.encodeForKey = function ($info, value, key) {
    };
    /*Swift.(file)._KeyedEncodingContainerBox.encode(_:UInt32,forKey:_KeyedEncodingContainerBox<Concrete>.Key)*/
    /*Swift.(file)._KeyedEncodingContainerBase.encode(_:UInt32,forKey:Key)*/
    _KeyedEncodingContainerBox.prototype.encodeForKey = function ($info, value, key) {
    };
    /*Swift.(file)._KeyedEncodingContainerBox.encode(_:UInt64,forKey:_KeyedEncodingContainerBox<Concrete>.Key)*/
    /*Swift.(file)._KeyedEncodingContainerBase.encode(_:UInt64,forKey:Key)*/
    _KeyedEncodingContainerBox.prototype.encodeForKey = function ($info, value, key) {
    };
    /*Swift.(file)._KeyedEncodingContainerBox.encode(_:T,forKey:_KeyedEncodingContainerBox<Concrete>.Key)*/
    /*Swift.(file)._KeyedEncodingContainerBase.encode(_:T,forKey:Key)*/
    _KeyedEncodingContainerBox.prototype.encodeForKey = function ($info, value, key) {
    };
    /*Swift.(file)._KeyedEncodingContainerBox.encodeConditional(_:T,forKey:_KeyedEncodingContainerBox<Concrete>.Key)*/
    /*Swift.(file)._KeyedEncodingContainerBase.encodeConditional(_:T,forKey:Key)*/
    _KeyedEncodingContainerBox.prototype.encodeConditionalForKey = function ($info, object, key) {
    };
    /*Swift.(file)._KeyedEncodingContainerBox.encodeIfPresent(_:Bool?,forKey:_KeyedEncodingContainerBox<Concrete>.Key)*/
    /*Swift.(file)._KeyedEncodingContainerBase.encodeIfPresent(_:Bool?,forKey:Key)*/
    _KeyedEncodingContainerBox.prototype.encodeIfPresentForKey = function ($info, value, key) {
    };
    /*Swift.(file)._KeyedEncodingContainerBox.encodeIfPresent(_:String?,forKey:_KeyedEncodingContainerBox<Concrete>.Key)*/
    /*Swift.(file)._KeyedEncodingContainerBase.encodeIfPresent(_:String?,forKey:Key)*/
    _KeyedEncodingContainerBox.prototype.encodeIfPresentForKey = function ($info, value, key) {
    };
    /*Swift.(file)._KeyedEncodingContainerBox.encodeIfPresent(_:Double?,forKey:_KeyedEncodingContainerBox<Concrete>.Key)*/
    /*Swift.(file)._KeyedEncodingContainerBase.encodeIfPresent(_:Double?,forKey:Key)*/
    _KeyedEncodingContainerBox.prototype.encodeIfPresentForKey = function ($info, value, key) {
    };
    /*Swift.(file)._KeyedEncodingContainerBox.encodeIfPresent(_:Float?,forKey:_KeyedEncodingContainerBox<Concrete>.Key)*/
    /*Swift.(file)._KeyedEncodingContainerBase.encodeIfPresent(_:Float?,forKey:Key)*/
    _KeyedEncodingContainerBox.prototype.encodeIfPresentForKey = function ($info, value, key) {
    };
    /*Swift.(file)._KeyedEncodingContainerBox.encodeIfPresent(_:Int?,forKey:_KeyedEncodingContainerBox<Concrete>.Key)*/
    /*Swift.(file)._KeyedEncodingContainerBase.encodeIfPresent(_:Int?,forKey:Key)*/
    _KeyedEncodingContainerBox.prototype.encodeIfPresentForKey = function ($info, value, key) {
    };
    /*Swift.(file)._KeyedEncodingContainerBox.encodeIfPresent(_:Int8?,forKey:_KeyedEncodingContainerBox<Concrete>.Key)*/
    /*Swift.(file)._KeyedEncodingContainerBase.encodeIfPresent(_:Int8?,forKey:Key)*/
    _KeyedEncodingContainerBox.prototype.encodeIfPresentForKey = function ($info, value, key) {
    };
    /*Swift.(file)._KeyedEncodingContainerBox.encodeIfPresent(_:Int16?,forKey:_KeyedEncodingContainerBox<Concrete>.Key)*/
    /*Swift.(file)._KeyedEncodingContainerBase.encodeIfPresent(_:Int16?,forKey:Key)*/
    _KeyedEncodingContainerBox.prototype.encodeIfPresentForKey = function ($info, value, key) {
    };
    /*Swift.(file)._KeyedEncodingContainerBox.encodeIfPresent(_:Int32?,forKey:_KeyedEncodingContainerBox<Concrete>.Key)*/
    /*Swift.(file)._KeyedEncodingContainerBase.encodeIfPresent(_:Int32?,forKey:Key)*/
    _KeyedEncodingContainerBox.prototype.encodeIfPresentForKey = function ($info, value, key) {
    };
    /*Swift.(file)._KeyedEncodingContainerBox.encodeIfPresent(_:Int64?,forKey:_KeyedEncodingContainerBox<Concrete>.Key)*/
    /*Swift.(file)._KeyedEncodingContainerBase.encodeIfPresent(_:Int64?,forKey:Key)*/
    _KeyedEncodingContainerBox.prototype.encodeIfPresentForKey = function ($info, value, key) {
    };
    /*Swift.(file)._KeyedEncodingContainerBox.encodeIfPresent(_:UInt?,forKey:_KeyedEncodingContainerBox<Concrete>.Key)*/
    /*Swift.(file)._KeyedEncodingContainerBase.encodeIfPresent(_:UInt?,forKey:Key)*/
    _KeyedEncodingContainerBox.prototype.encodeIfPresentForKey = function ($info, value, key) {
    };
    /*Swift.(file)._KeyedEncodingContainerBox.encodeIfPresent(_:UInt8?,forKey:_KeyedEncodingContainerBox<Concrete>.Key)*/
    /*Swift.(file)._KeyedEncodingContainerBase.encodeIfPresent(_:UInt8?,forKey:Key)*/
    _KeyedEncodingContainerBox.prototype.encodeIfPresentForKey = function ($info, value, key) {
    };
    /*Swift.(file)._KeyedEncodingContainerBox.encodeIfPresent(_:UInt16?,forKey:_KeyedEncodingContainerBox<Concrete>.Key)*/
    /*Swift.(file)._KeyedEncodingContainerBase.encodeIfPresent(_:UInt16?,forKey:Key)*/
    _KeyedEncodingContainerBox.prototype.encodeIfPresentForKey = function ($info, value, key) {
    };
    /*Swift.(file)._KeyedEncodingContainerBox.encodeIfPresent(_:UInt32?,forKey:_KeyedEncodingContainerBox<Concrete>.Key)*/
    /*Swift.(file)._KeyedEncodingContainerBase.encodeIfPresent(_:UInt32?,forKey:Key)*/
    _KeyedEncodingContainerBox.prototype.encodeIfPresentForKey = function ($info, value, key) {
    };
    /*Swift.(file)._KeyedEncodingContainerBox.encodeIfPresent(_:UInt64?,forKey:_KeyedEncodingContainerBox<Concrete>.Key)*/
    /*Swift.(file)._KeyedEncodingContainerBase.encodeIfPresent(_:UInt64?,forKey:Key)*/
    _KeyedEncodingContainerBox.prototype.encodeIfPresentForKey = function ($info, value, key) {
    };
    /*Swift.(file)._KeyedEncodingContainerBox.encodeIfPresent(_:T?,forKey:_KeyedEncodingContainerBox<Concrete>.Key)*/
    /*Swift.(file)._KeyedEncodingContainerBase.encodeIfPresent(_:T?,forKey:Key)*/
    _KeyedEncodingContainerBox.prototype.encodeIfPresentForKey = function ($info, value, key) {
    };
    /*Swift.(file)._KeyedEncodingContainerBox.nestedContainer(keyedBy:NestedKey.Type,forKey:_KeyedEncodingContainerBox<Concrete>.Key)*/
    /*Swift.(file)._KeyedEncodingContainerBase.nestedContainer(keyedBy:NestedKey.Type,forKey:Key)*/
    _KeyedEncodingContainerBox.prototype.nestedContainerKeyedByForKey = function ($info, keyType, key) {
    };
    /*Swift.(file)._KeyedEncodingContainerBox.nestedUnkeyedContainer(forKey:_KeyedEncodingContainerBox<Concrete>.Key)*/
    /*Swift.(file)._KeyedEncodingContainerBase.nestedUnkeyedContainer(forKey:Key)*/
    _KeyedEncodingContainerBox.prototype.nestedUnkeyedContainerForKey = function ($info, key) {
    };
    /*Swift.(file)._KeyedEncodingContainerBox.superEncoder()*/
    /*Swift.(file)._KeyedEncodingContainerBase.superEncoder()*/
    _KeyedEncodingContainerBox.prototype.superEncoder = function ($info) {
    };
    /*Swift.(file)._KeyedEncodingContainerBox.superEncoder(forKey:_KeyedEncodingContainerBox<Concrete>.Key)*/
    /*Swift.(file)._KeyedEncodingContainerBase.superEncoder(forKey:Key)*/
    _KeyedEncodingContainerBox.prototype.superEncoderForKey = function ($info, key) {
    };
    /*Swift.(file)._KeyedEncodingContainerBox.init()*/
    /*Swift.(file)._KeyedEncodingContainerBase.init()*/
    _KeyedEncodingContainerBox.prototype.init = function ($info) {
    };
    _KeyedEncodingContainerBox.$infoAddress = '0x7fb85123dd18';
    return _KeyedEncodingContainerBox;
}(_KeyedEncodingContainerBase));
var _KeyedDecodingContainerBase = /** @class */ (function () {
    function _KeyedDecodingContainerBase() {
    }
    /*Swift.(file)._KeyedDecodingContainerBase.init()*/
    /*Swift.(file)._KeyedDecodingContainerBase.init()*/
    _KeyedDecodingContainerBase.prototype.init = function ($info) {
    };
    /*Swift.(file)._KeyedDecodingContainerBase.codingPath*/ /*
    codingPath$get() {
    return this.codingPath
    }
    get codingPath() { return this.codingPath$get() }*/ ;
    /*Swift.(file)._KeyedDecodingContainerBase.allKeys*/ /*
    allKeys$get() {
    return this.allKeys
    }
    get allKeys() { return this.allKeys$get() }*/ ;
    /*Swift.(file)._KeyedDecodingContainerBase.contains(_:Key)*/
    /*Swift.(file)._KeyedDecodingContainerBase.contains(_:Key)*/
    _KeyedDecodingContainerBase.prototype.contains = function ($info, key) {
    };
    /*Swift.(file)._KeyedDecodingContainerBase.decodeNil(forKey:Key)*/
    /*Swift.(file)._KeyedDecodingContainerBase.decodeNil(forKey:Key)*/
    _KeyedDecodingContainerBase.prototype.decodeNilForKey = function ($info, key) {
    };
    /*Swift.(file)._KeyedDecodingContainerBase.decode(_:Bool.Type,forKey:Key)*/
    /*Swift.(file)._KeyedDecodingContainerBase.decode(_:Bool.Type,forKey:Key)*/
    _KeyedDecodingContainerBase.prototype.decodeForKey = function ($info, type, key) {
    };
    /*Swift.(file)._KeyedDecodingContainerBase.decode(_:String.Type,forKey:Key)*/
    /*Swift.(file)._KeyedDecodingContainerBase.decode(_:String.Type,forKey:Key)*/
    _KeyedDecodingContainerBase.prototype.decodeForKey = function ($info, type, key) {
    };
    /*Swift.(file)._KeyedDecodingContainerBase.decode(_:Double.Type,forKey:Key)*/
    /*Swift.(file)._KeyedDecodingContainerBase.decode(_:Double.Type,forKey:Key)*/
    _KeyedDecodingContainerBase.prototype.decodeForKey = function ($info, type, key) {
    };
    /*Swift.(file)._KeyedDecodingContainerBase.decode(_:Float.Type,forKey:Key)*/
    /*Swift.(file)._KeyedDecodingContainerBase.decode(_:Float.Type,forKey:Key)*/
    _KeyedDecodingContainerBase.prototype.decodeForKey = function ($info, type, key) {
    };
    /*Swift.(file)._KeyedDecodingContainerBase.decode(_:Int.Type,forKey:Key)*/
    /*Swift.(file)._KeyedDecodingContainerBase.decode(_:Int.Type,forKey:Key)*/
    _KeyedDecodingContainerBase.prototype.decodeForKey = function ($info, type, key) {
    };
    /*Swift.(file)._KeyedDecodingContainerBase.decode(_:Int8.Type,forKey:Key)*/
    /*Swift.(file)._KeyedDecodingContainerBase.decode(_:Int8.Type,forKey:Key)*/
    _KeyedDecodingContainerBase.prototype.decodeForKey = function ($info, type, key) {
    };
    /*Swift.(file)._KeyedDecodingContainerBase.decode(_:Int16.Type,forKey:Key)*/
    /*Swift.(file)._KeyedDecodingContainerBase.decode(_:Int16.Type,forKey:Key)*/
    _KeyedDecodingContainerBase.prototype.decodeForKey = function ($info, type, key) {
    };
    /*Swift.(file)._KeyedDecodingContainerBase.decode(_:Int32.Type,forKey:Key)*/
    /*Swift.(file)._KeyedDecodingContainerBase.decode(_:Int32.Type,forKey:Key)*/
    _KeyedDecodingContainerBase.prototype.decodeForKey = function ($info, type, key) {
    };
    /*Swift.(file)._KeyedDecodingContainerBase.decode(_:Int64.Type,forKey:Key)*/
    /*Swift.(file)._KeyedDecodingContainerBase.decode(_:Int64.Type,forKey:Key)*/
    _KeyedDecodingContainerBase.prototype.decodeForKey = function ($info, type, key) {
    };
    /*Swift.(file)._KeyedDecodingContainerBase.decode(_:UInt.Type,forKey:Key)*/
    /*Swift.(file)._KeyedDecodingContainerBase.decode(_:UInt.Type,forKey:Key)*/
    _KeyedDecodingContainerBase.prototype.decodeForKey = function ($info, type, key) {
    };
    /*Swift.(file)._KeyedDecodingContainerBase.decode(_:UInt8.Type,forKey:Key)*/
    /*Swift.(file)._KeyedDecodingContainerBase.decode(_:UInt8.Type,forKey:Key)*/
    _KeyedDecodingContainerBase.prototype.decodeForKey = function ($info, type, key) {
    };
    /*Swift.(file)._KeyedDecodingContainerBase.decode(_:UInt16.Type,forKey:Key)*/
    /*Swift.(file)._KeyedDecodingContainerBase.decode(_:UInt16.Type,forKey:Key)*/
    _KeyedDecodingContainerBase.prototype.decodeForKey = function ($info, type, key) {
    };
    /*Swift.(file)._KeyedDecodingContainerBase.decode(_:UInt32.Type,forKey:Key)*/
    /*Swift.(file)._KeyedDecodingContainerBase.decode(_:UInt32.Type,forKey:Key)*/
    _KeyedDecodingContainerBase.prototype.decodeForKey = function ($info, type, key) {
    };
    /*Swift.(file)._KeyedDecodingContainerBase.decode(_:UInt64.Type,forKey:Key)*/
    /*Swift.(file)._KeyedDecodingContainerBase.decode(_:UInt64.Type,forKey:Key)*/
    _KeyedDecodingContainerBase.prototype.decodeForKey = function ($info, type, key) {
    };
    /*Swift.(file)._KeyedDecodingContainerBase.decode(_:T.Type,forKey:Key)*/
    /*Swift.(file)._KeyedDecodingContainerBase.decode(_:T.Type,forKey:Key)*/
    _KeyedDecodingContainerBase.prototype.decodeForKey = function ($info, type, key) {
    };
    /*Swift.(file)._KeyedDecodingContainerBase.decodeIfPresent(_:Bool.Type,forKey:Key)*/
    /*Swift.(file)._KeyedDecodingContainerBase.decodeIfPresent(_:Bool.Type,forKey:Key)*/
    _KeyedDecodingContainerBase.prototype.decodeIfPresentForKey = function ($info, type, key) {
    };
    /*Swift.(file)._KeyedDecodingContainerBase.decodeIfPresent(_:String.Type,forKey:Key)*/
    /*Swift.(file)._KeyedDecodingContainerBase.decodeIfPresent(_:String.Type,forKey:Key)*/
    _KeyedDecodingContainerBase.prototype.decodeIfPresentForKey = function ($info, type, key) {
    };
    /*Swift.(file)._KeyedDecodingContainerBase.decodeIfPresent(_:Double.Type,forKey:Key)*/
    /*Swift.(file)._KeyedDecodingContainerBase.decodeIfPresent(_:Double.Type,forKey:Key)*/
    _KeyedDecodingContainerBase.prototype.decodeIfPresentForKey = function ($info, type, key) {
    };
    /*Swift.(file)._KeyedDecodingContainerBase.decodeIfPresent(_:Float.Type,forKey:Key)*/
    /*Swift.(file)._KeyedDecodingContainerBase.decodeIfPresent(_:Float.Type,forKey:Key)*/
    _KeyedDecodingContainerBase.prototype.decodeIfPresentForKey = function ($info, type, key) {
    };
    /*Swift.(file)._KeyedDecodingContainerBase.decodeIfPresent(_:Int.Type,forKey:Key)*/
    /*Swift.(file)._KeyedDecodingContainerBase.decodeIfPresent(_:Int.Type,forKey:Key)*/
    _KeyedDecodingContainerBase.prototype.decodeIfPresentForKey = function ($info, type, key) {
    };
    /*Swift.(file)._KeyedDecodingContainerBase.decodeIfPresent(_:Int8.Type,forKey:Key)*/
    /*Swift.(file)._KeyedDecodingContainerBase.decodeIfPresent(_:Int8.Type,forKey:Key)*/
    _KeyedDecodingContainerBase.prototype.decodeIfPresentForKey = function ($info, type, key) {
    };
    /*Swift.(file)._KeyedDecodingContainerBase.decodeIfPresent(_:Int16.Type,forKey:Key)*/
    /*Swift.(file)._KeyedDecodingContainerBase.decodeIfPresent(_:Int16.Type,forKey:Key)*/
    _KeyedDecodingContainerBase.prototype.decodeIfPresentForKey = function ($info, type, key) {
    };
    /*Swift.(file)._KeyedDecodingContainerBase.decodeIfPresent(_:Int32.Type,forKey:Key)*/
    /*Swift.(file)._KeyedDecodingContainerBase.decodeIfPresent(_:Int32.Type,forKey:Key)*/
    _KeyedDecodingContainerBase.prototype.decodeIfPresentForKey = function ($info, type, key) {
    };
    /*Swift.(file)._KeyedDecodingContainerBase.decodeIfPresent(_:Int64.Type,forKey:Key)*/
    /*Swift.(file)._KeyedDecodingContainerBase.decodeIfPresent(_:Int64.Type,forKey:Key)*/
    _KeyedDecodingContainerBase.prototype.decodeIfPresentForKey = function ($info, type, key) {
    };
    /*Swift.(file)._KeyedDecodingContainerBase.decodeIfPresent(_:UInt.Type,forKey:Key)*/
    /*Swift.(file)._KeyedDecodingContainerBase.decodeIfPresent(_:UInt.Type,forKey:Key)*/
    _KeyedDecodingContainerBase.prototype.decodeIfPresentForKey = function ($info, type, key) {
    };
    /*Swift.(file)._KeyedDecodingContainerBase.decodeIfPresent(_:UInt8.Type,forKey:Key)*/
    /*Swift.(file)._KeyedDecodingContainerBase.decodeIfPresent(_:UInt8.Type,forKey:Key)*/
    _KeyedDecodingContainerBase.prototype.decodeIfPresentForKey = function ($info, type, key) {
    };
    /*Swift.(file)._KeyedDecodingContainerBase.decodeIfPresent(_:UInt16.Type,forKey:Key)*/
    /*Swift.(file)._KeyedDecodingContainerBase.decodeIfPresent(_:UInt16.Type,forKey:Key)*/
    _KeyedDecodingContainerBase.prototype.decodeIfPresentForKey = function ($info, type, key) {
    };
    /*Swift.(file)._KeyedDecodingContainerBase.decodeIfPresent(_:UInt32.Type,forKey:Key)*/
    /*Swift.(file)._KeyedDecodingContainerBase.decodeIfPresent(_:UInt32.Type,forKey:Key)*/
    _KeyedDecodingContainerBase.prototype.decodeIfPresentForKey = function ($info, type, key) {
    };
    /*Swift.(file)._KeyedDecodingContainerBase.decodeIfPresent(_:UInt64.Type,forKey:Key)*/
    /*Swift.(file)._KeyedDecodingContainerBase.decodeIfPresent(_:UInt64.Type,forKey:Key)*/
    _KeyedDecodingContainerBase.prototype.decodeIfPresentForKey = function ($info, type, key) {
    };
    /*Swift.(file)._KeyedDecodingContainerBase.decodeIfPresent(_:T.Type,forKey:Key)*/
    /*Swift.(file)._KeyedDecodingContainerBase.decodeIfPresent(_:T.Type,forKey:Key)*/
    _KeyedDecodingContainerBase.prototype.decodeIfPresentForKey = function ($info, type, key) {
    };
    /*Swift.(file)._KeyedDecodingContainerBase.nestedContainer(keyedBy:NestedKey.Type,forKey:Key)*/
    /*Swift.(file)._KeyedDecodingContainerBase.nestedContainer(keyedBy:NestedKey.Type,forKey:Key)*/
    _KeyedDecodingContainerBase.prototype.nestedContainerKeyedByForKey = function ($info, type, key) {
    };
    /*Swift.(file)._KeyedDecodingContainerBase.nestedUnkeyedContainer(forKey:Key)*/
    /*Swift.(file)._KeyedDecodingContainerBase.nestedUnkeyedContainer(forKey:Key)*/
    _KeyedDecodingContainerBase.prototype.nestedUnkeyedContainerForKey = function ($info, key) {
    };
    /*Swift.(file)._KeyedDecodingContainerBase.superDecoder()*/
    /*Swift.(file)._KeyedDecodingContainerBase.superDecoder()*/
    _KeyedDecodingContainerBase.prototype.superDecoder = function ($info) {
    };
    /*Swift.(file)._KeyedDecodingContainerBase.superDecoder(forKey:Key)*/
    /*Swift.(file)._KeyedDecodingContainerBase.superDecoder(forKey:Key)*/
    _KeyedDecodingContainerBase.prototype.superDecoderForKey = function ($info, key) {
    };
    _KeyedDecodingContainerBase.$infoAddress = '0x7fb85123e010';
    return _KeyedDecodingContainerBase;
}());
var _KeyedDecodingContainerBox = /** @class */ (function (_super) {
    __extends(_KeyedDecodingContainerBox, _super);
    function _KeyedDecodingContainerBox() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    /*Swift.(file)._KeyedDecodingContainerBox.init(_:Concrete)*/
    /*Swift.(file)._KeyedDecodingContainerBox.init(_:Concrete)*/
    _KeyedDecodingContainerBox.prototype.init = function ($info, container) {
        return container;
    };
    /*Swift.(file)._KeyedDecodingContainerBox.codingPath*/ /*
    codingPath$get() {
    return this.codingPath
    }
    get codingPath() { return this.codingPath$get() }*/ ;
    /*Swift.(file)._KeyedDecodingContainerBox.allKeys*/ /*
    allKeys$get() {
    return this.allKeys
    }
    get allKeys() { return this.allKeys$get() }*/ ;
    /*Swift.(file)._KeyedDecodingContainerBox.contains(_:_KeyedDecodingContainerBox<Concrete>.Key)*/
    /*Swift.(file)._KeyedDecodingContainerBase.contains(_:Key)*/
    _KeyedDecodingContainerBox.prototype.contains = function ($info, key) {
    };
    /*Swift.(file)._KeyedDecodingContainerBox.decodeNil(forKey:_KeyedDecodingContainerBox<Concrete>.Key)*/
    /*Swift.(file)._KeyedDecodingContainerBase.decodeNil(forKey:Key)*/
    _KeyedDecodingContainerBox.prototype.decodeNilForKey = function ($info, key) {
    };
    /*Swift.(file)._KeyedDecodingContainerBox.decode(_:Bool.Type,forKey:_KeyedDecodingContainerBox<Concrete>.Key)*/
    /*Swift.(file)._KeyedDecodingContainerBase.decode(_:Bool.Type,forKey:Key)*/
    _KeyedDecodingContainerBox.prototype.decodeForKey = function ($info, type, key) {
    };
    /*Swift.(file)._KeyedDecodingContainerBox.decode(_:String.Type,forKey:_KeyedDecodingContainerBox<Concrete>.Key)*/
    /*Swift.(file)._KeyedDecodingContainerBase.decode(_:String.Type,forKey:Key)*/
    _KeyedDecodingContainerBox.prototype.decodeForKey = function ($info, type, key) {
    };
    /*Swift.(file)._KeyedDecodingContainerBox.decode(_:Double.Type,forKey:_KeyedDecodingContainerBox<Concrete>.Key)*/
    /*Swift.(file)._KeyedDecodingContainerBase.decode(_:Double.Type,forKey:Key)*/
    _KeyedDecodingContainerBox.prototype.decodeForKey = function ($info, type, key) {
    };
    /*Swift.(file)._KeyedDecodingContainerBox.decode(_:Float.Type,forKey:_KeyedDecodingContainerBox<Concrete>.Key)*/
    /*Swift.(file)._KeyedDecodingContainerBase.decode(_:Float.Type,forKey:Key)*/
    _KeyedDecodingContainerBox.prototype.decodeForKey = function ($info, type, key) {
    };
    /*Swift.(file)._KeyedDecodingContainerBox.decode(_:Int.Type,forKey:_KeyedDecodingContainerBox<Concrete>.Key)*/
    /*Swift.(file)._KeyedDecodingContainerBase.decode(_:Int.Type,forKey:Key)*/
    _KeyedDecodingContainerBox.prototype.decodeForKey = function ($info, type, key) {
    };
    /*Swift.(file)._KeyedDecodingContainerBox.decode(_:Int8.Type,forKey:_KeyedDecodingContainerBox<Concrete>.Key)*/
    /*Swift.(file)._KeyedDecodingContainerBase.decode(_:Int8.Type,forKey:Key)*/
    _KeyedDecodingContainerBox.prototype.decodeForKey = function ($info, type, key) {
    };
    /*Swift.(file)._KeyedDecodingContainerBox.decode(_:Int16.Type,forKey:_KeyedDecodingContainerBox<Concrete>.Key)*/
    /*Swift.(file)._KeyedDecodingContainerBase.decode(_:Int16.Type,forKey:Key)*/
    _KeyedDecodingContainerBox.prototype.decodeForKey = function ($info, type, key) {
    };
    /*Swift.(file)._KeyedDecodingContainerBox.decode(_:Int32.Type,forKey:_KeyedDecodingContainerBox<Concrete>.Key)*/
    /*Swift.(file)._KeyedDecodingContainerBase.decode(_:Int32.Type,forKey:Key)*/
    _KeyedDecodingContainerBox.prototype.decodeForKey = function ($info, type, key) {
    };
    /*Swift.(file)._KeyedDecodingContainerBox.decode(_:Int64.Type,forKey:_KeyedDecodingContainerBox<Concrete>.Key)*/
    /*Swift.(file)._KeyedDecodingContainerBase.decode(_:Int64.Type,forKey:Key)*/
    _KeyedDecodingContainerBox.prototype.decodeForKey = function ($info, type, key) {
    };
    /*Swift.(file)._KeyedDecodingContainerBox.decode(_:UInt.Type,forKey:_KeyedDecodingContainerBox<Concrete>.Key)*/
    /*Swift.(file)._KeyedDecodingContainerBase.decode(_:UInt.Type,forKey:Key)*/
    _KeyedDecodingContainerBox.prototype.decodeForKey = function ($info, type, key) {
    };
    /*Swift.(file)._KeyedDecodingContainerBox.decode(_:UInt8.Type,forKey:_KeyedDecodingContainerBox<Concrete>.Key)*/
    /*Swift.(file)._KeyedDecodingContainerBase.decode(_:UInt8.Type,forKey:Key)*/
    _KeyedDecodingContainerBox.prototype.decodeForKey = function ($info, type, key) {
    };
    /*Swift.(file)._KeyedDecodingContainerBox.decode(_:UInt16.Type,forKey:_KeyedDecodingContainerBox<Concrete>.Key)*/
    /*Swift.(file)._KeyedDecodingContainerBase.decode(_:UInt16.Type,forKey:Key)*/
    _KeyedDecodingContainerBox.prototype.decodeForKey = function ($info, type, key) {
    };
    /*Swift.(file)._KeyedDecodingContainerBox.decode(_:UInt32.Type,forKey:_KeyedDecodingContainerBox<Concrete>.Key)*/
    /*Swift.(file)._KeyedDecodingContainerBase.decode(_:UInt32.Type,forKey:Key)*/
    _KeyedDecodingContainerBox.prototype.decodeForKey = function ($info, type, key) {
    };
    /*Swift.(file)._KeyedDecodingContainerBox.decode(_:UInt64.Type,forKey:_KeyedDecodingContainerBox<Concrete>.Key)*/
    /*Swift.(file)._KeyedDecodingContainerBase.decode(_:UInt64.Type,forKey:Key)*/
    _KeyedDecodingContainerBox.prototype.decodeForKey = function ($info, type, key) {
    };
    /*Swift.(file)._KeyedDecodingContainerBox.decode(_:T.Type,forKey:_KeyedDecodingContainerBox<Concrete>.Key)*/
    /*Swift.(file)._KeyedDecodingContainerBase.decode(_:T.Type,forKey:Key)*/
    _KeyedDecodingContainerBox.prototype.decodeForKey = function ($info, type, key) {
    };
    /*Swift.(file)._KeyedDecodingContainerBox.decodeIfPresent(_:Bool.Type,forKey:_KeyedDecodingContainerBox<Concrete>.Key)*/
    /*Swift.(file)._KeyedDecodingContainerBase.decodeIfPresent(_:Bool.Type,forKey:Key)*/
    _KeyedDecodingContainerBox.prototype.decodeIfPresentForKey = function ($info, type, key) {
    };
    /*Swift.(file)._KeyedDecodingContainerBox.decodeIfPresent(_:String.Type,forKey:_KeyedDecodingContainerBox<Concrete>.Key)*/
    /*Swift.(file)._KeyedDecodingContainerBase.decodeIfPresent(_:String.Type,forKey:Key)*/
    _KeyedDecodingContainerBox.prototype.decodeIfPresentForKey = function ($info, type, key) {
    };
    /*Swift.(file)._KeyedDecodingContainerBox.decodeIfPresent(_:Double.Type,forKey:_KeyedDecodingContainerBox<Concrete>.Key)*/
    /*Swift.(file)._KeyedDecodingContainerBase.decodeIfPresent(_:Double.Type,forKey:Key)*/
    _KeyedDecodingContainerBox.prototype.decodeIfPresentForKey = function ($info, type, key) {
    };
    /*Swift.(file)._KeyedDecodingContainerBox.decodeIfPresent(_:Float.Type,forKey:_KeyedDecodingContainerBox<Concrete>.Key)*/
    /*Swift.(file)._KeyedDecodingContainerBase.decodeIfPresent(_:Float.Type,forKey:Key)*/
    _KeyedDecodingContainerBox.prototype.decodeIfPresentForKey = function ($info, type, key) {
    };
    /*Swift.(file)._KeyedDecodingContainerBox.decodeIfPresent(_:Int.Type,forKey:_KeyedDecodingContainerBox<Concrete>.Key)*/
    /*Swift.(file)._KeyedDecodingContainerBase.decodeIfPresent(_:Int.Type,forKey:Key)*/
    _KeyedDecodingContainerBox.prototype.decodeIfPresentForKey = function ($info, type, key) {
    };
    /*Swift.(file)._KeyedDecodingContainerBox.decodeIfPresent(_:Int8.Type,forKey:_KeyedDecodingContainerBox<Concrete>.Key)*/
    /*Swift.(file)._KeyedDecodingContainerBase.decodeIfPresent(_:Int8.Type,forKey:Key)*/
    _KeyedDecodingContainerBox.prototype.decodeIfPresentForKey = function ($info, type, key) {
    };
    /*Swift.(file)._KeyedDecodingContainerBox.decodeIfPresent(_:Int16.Type,forKey:_KeyedDecodingContainerBox<Concrete>.Key)*/
    /*Swift.(file)._KeyedDecodingContainerBase.decodeIfPresent(_:Int16.Type,forKey:Key)*/
    _KeyedDecodingContainerBox.prototype.decodeIfPresentForKey = function ($info, type, key) {
    };
    /*Swift.(file)._KeyedDecodingContainerBox.decodeIfPresent(_:Int32.Type,forKey:_KeyedDecodingContainerBox<Concrete>.Key)*/
    /*Swift.(file)._KeyedDecodingContainerBase.decodeIfPresent(_:Int32.Type,forKey:Key)*/
    _KeyedDecodingContainerBox.prototype.decodeIfPresentForKey = function ($info, type, key) {
    };
    /*Swift.(file)._KeyedDecodingContainerBox.decodeIfPresent(_:Int64.Type,forKey:_KeyedDecodingContainerBox<Concrete>.Key)*/
    /*Swift.(file)._KeyedDecodingContainerBase.decodeIfPresent(_:Int64.Type,forKey:Key)*/
    _KeyedDecodingContainerBox.prototype.decodeIfPresentForKey = function ($info, type, key) {
    };
    /*Swift.(file)._KeyedDecodingContainerBox.decodeIfPresent(_:UInt.Type,forKey:_KeyedDecodingContainerBox<Concrete>.Key)*/
    /*Swift.(file)._KeyedDecodingContainerBase.decodeIfPresent(_:UInt.Type,forKey:Key)*/
    _KeyedDecodingContainerBox.prototype.decodeIfPresentForKey = function ($info, type, key) {
    };
    /*Swift.(file)._KeyedDecodingContainerBox.decodeIfPresent(_:UInt8.Type,forKey:_KeyedDecodingContainerBox<Concrete>.Key)*/
    /*Swift.(file)._KeyedDecodingContainerBase.decodeIfPresent(_:UInt8.Type,forKey:Key)*/
    _KeyedDecodingContainerBox.prototype.decodeIfPresentForKey = function ($info, type, key) {
    };
    /*Swift.(file)._KeyedDecodingContainerBox.decodeIfPresent(_:UInt16.Type,forKey:_KeyedDecodingContainerBox<Concrete>.Key)*/
    /*Swift.(file)._KeyedDecodingContainerBase.decodeIfPresent(_:UInt16.Type,forKey:Key)*/
    _KeyedDecodingContainerBox.prototype.decodeIfPresentForKey = function ($info, type, key) {
    };
    /*Swift.(file)._KeyedDecodingContainerBox.decodeIfPresent(_:UInt32.Type,forKey:_KeyedDecodingContainerBox<Concrete>.Key)*/
    /*Swift.(file)._KeyedDecodingContainerBase.decodeIfPresent(_:UInt32.Type,forKey:Key)*/
    _KeyedDecodingContainerBox.prototype.decodeIfPresentForKey = function ($info, type, key) {
    };
    /*Swift.(file)._KeyedDecodingContainerBox.decodeIfPresent(_:UInt64.Type,forKey:_KeyedDecodingContainerBox<Concrete>.Key)*/
    /*Swift.(file)._KeyedDecodingContainerBase.decodeIfPresent(_:UInt64.Type,forKey:Key)*/
    _KeyedDecodingContainerBox.prototype.decodeIfPresentForKey = function ($info, type, key) {
    };
    /*Swift.(file)._KeyedDecodingContainerBox.decodeIfPresent(_:T.Type,forKey:_KeyedDecodingContainerBox<Concrete>.Key)*/
    /*Swift.(file)._KeyedDecodingContainerBase.decodeIfPresent(_:T.Type,forKey:Key)*/
    _KeyedDecodingContainerBox.prototype.decodeIfPresentForKey = function ($info, type, key) {
    };
    /*Swift.(file)._KeyedDecodingContainerBox.nestedContainer(keyedBy:NestedKey.Type,forKey:_KeyedDecodingContainerBox<Concrete>.Key)*/
    /*Swift.(file)._KeyedDecodingContainerBase.nestedContainer(keyedBy:NestedKey.Type,forKey:Key)*/
    _KeyedDecodingContainerBox.prototype.nestedContainerKeyedByForKey = function ($info, type, key) {
    };
    /*Swift.(file)._KeyedDecodingContainerBox.nestedUnkeyedContainer(forKey:_KeyedDecodingContainerBox<Concrete>.Key)*/
    /*Swift.(file)._KeyedDecodingContainerBase.nestedUnkeyedContainer(forKey:Key)*/
    _KeyedDecodingContainerBox.prototype.nestedUnkeyedContainerForKey = function ($info, key) {
    };
    /*Swift.(file)._KeyedDecodingContainerBox.superDecoder()*/
    /*Swift.(file)._KeyedDecodingContainerBase.superDecoder()*/
    _KeyedDecodingContainerBox.prototype.superDecoder = function ($info) {
    };
    /*Swift.(file)._KeyedDecodingContainerBox.superDecoder(forKey:_KeyedDecodingContainerBox<Concrete>.Key)*/
    /*Swift.(file)._KeyedDecodingContainerBase.superDecoder(forKey:Key)*/
    _KeyedDecodingContainerBox.prototype.superDecoderForKey = function ($info, key) {
    };
    /*Swift.(file)._KeyedDecodingContainerBox.init()*/
    /*Swift.(file)._KeyedDecodingContainerBase.init()*/
    _KeyedDecodingContainerBox.prototype.init = function ($info) {
    };
    _KeyedDecodingContainerBox.$infoAddress = '0x7fb85123e2d0';
    return _KeyedDecodingContainerBox;
}(_KeyedDecodingContainerBase));
var RawRepresentable$implementation = /** @class */ (function () {
    function RawRepresentable$implementation() {
    }
    /*Swift.(file).RawRepresentable.encode(to:Encoder)*/
    /*Swift.(file).RawRepresentable.encode(to:Encoder)*/
    RawRepresentable$implementation.prototype.encodeTo = function ($info, encoder) {
    };
    /*Swift.(file).RawRepresentable.init(from:Decoder)*/
    /*Swift.(file).RawRepresentable.init(from:Decoder)*/
    RawRepresentable$implementation.prototype.initFromDecoder = function ($info, decoder) {
        return decoder;
    };
    /*Swift.(file).RawRepresentable.encode(to:Encoder)*/
    /*Swift.(file).RawRepresentable.encode(to:Encoder)*/
    RawRepresentable$implementation.prototype.encodeTo = function ($info, encoder) {
    };
    /*Swift.(file).RawRepresentable.init(from:Decoder)*/
    /*Swift.(file).RawRepresentable.init(from:Decoder)*/
    RawRepresentable$implementation.prototype.initFromDecoder = function ($info, decoder) {
        return decoder;
    };
    /*Swift.(file).RawRepresentable.encode(to:Encoder)*/
    /*Swift.(file).RawRepresentable.encode(to:Encoder)*/
    RawRepresentable$implementation.prototype.encodeTo = function ($info, encoder) {
    };
    /*Swift.(file).RawRepresentable.init(from:Decoder)*/
    /*Swift.(file).RawRepresentable.init(from:Decoder)*/
    RawRepresentable$implementation.prototype.initFromDecoder = function ($info, decoder) {
        return decoder;
    };
    /*Swift.(file).RawRepresentable.encode(to:Encoder)*/
    /*Swift.(file).RawRepresentable.encode(to:Encoder)*/
    RawRepresentable$implementation.prototype.encodeTo = function ($info, encoder) {
    };
    /*Swift.(file).RawRepresentable.init(from:Decoder)*/
    /*Swift.(file).RawRepresentable.init(from:Decoder)*/
    RawRepresentable$implementation.prototype.initFromDecoder = function ($info, decoder) {
        return decoder;
    };
    /*Swift.(file).RawRepresentable.encode(to:Encoder)*/
    /*Swift.(file).RawRepresentable.encode(to:Encoder)*/
    RawRepresentable$implementation.prototype.encodeTo = function ($info, encoder) {
    };
    /*Swift.(file).RawRepresentable.init(from:Decoder)*/
    /*Swift.(file).RawRepresentable.init(from:Decoder)*/
    RawRepresentable$implementation.prototype.initFromDecoder = function ($info, decoder) {
        return decoder;
    };
    /*Swift.(file).RawRepresentable.encode(to:Encoder)*/
    /*Swift.(file).RawRepresentable.encode(to:Encoder)*/
    RawRepresentable$implementation.prototype.encodeTo = function ($info, encoder) {
    };
    /*Swift.(file).RawRepresentable.init(from:Decoder)*/
    /*Swift.(file).RawRepresentable.init(from:Decoder)*/
    RawRepresentable$implementation.prototype.initFromDecoder = function ($info, decoder) {
        return decoder;
    };
    /*Swift.(file).RawRepresentable.encode(to:Encoder)*/
    /*Swift.(file).RawRepresentable.encode(to:Encoder)*/
    RawRepresentable$implementation.prototype.encodeTo = function ($info, encoder) {
    };
    /*Swift.(file).RawRepresentable.init(from:Decoder)*/
    /*Swift.(file).RawRepresentable.init(from:Decoder)*/
    RawRepresentable$implementation.prototype.initFromDecoder = function ($info, decoder) {
        return decoder;
    };
    /*Swift.(file).RawRepresentable.encode(to:Encoder)*/
    /*Swift.(file).RawRepresentable.encode(to:Encoder)*/
    RawRepresentable$implementation.prototype.encodeTo = function ($info, encoder) {
    };
    /*Swift.(file).RawRepresentable.init(from:Decoder)*/
    /*Swift.(file).RawRepresentable.init(from:Decoder)*/
    RawRepresentable$implementation.prototype.initFromDecoder = function ($info, decoder) {
        return decoder;
    };
    /*Swift.(file).RawRepresentable.encode(to:Encoder)*/
    /*Swift.(file).RawRepresentable.encode(to:Encoder)*/
    RawRepresentable$implementation.prototype.encodeTo = function ($info, encoder) {
    };
    /*Swift.(file).RawRepresentable.init(from:Decoder)*/
    /*Swift.(file).RawRepresentable.init(from:Decoder)*/
    RawRepresentable$implementation.prototype.initFromDecoder = function ($info, decoder) {
        return decoder;
    };
    /*Swift.(file).RawRepresentable.encode(to:Encoder)*/
    /*Swift.(file).RawRepresentable.encode(to:Encoder)*/
    RawRepresentable$implementation.prototype.encodeTo = function ($info, encoder) {
    };
    /*Swift.(file).RawRepresentable.init(from:Decoder)*/
    /*Swift.(file).RawRepresentable.init(from:Decoder)*/
    RawRepresentable$implementation.prototype.initFromDecoder = function ($info, decoder) {
        return decoder;
    };
    /*Swift.(file).RawRepresentable.encode(to:Encoder)*/
    /*Swift.(file).RawRepresentable.encode(to:Encoder)*/
    RawRepresentable$implementation.prototype.encodeTo = function ($info, encoder) {
    };
    /*Swift.(file).RawRepresentable.init(from:Decoder)*/
    /*Swift.(file).RawRepresentable.init(from:Decoder)*/
    RawRepresentable$implementation.prototype.initFromDecoder = function ($info, decoder) {
        return decoder;
    };
    /*Swift.(file).RawRepresentable.encode(to:Encoder)*/
    /*Swift.(file).RawRepresentable.encode(to:Encoder)*/
    RawRepresentable$implementation.prototype.encodeTo = function ($info, encoder) {
    };
    /*Swift.(file).RawRepresentable.init(from:Decoder)*/
    /*Swift.(file).RawRepresentable.init(from:Decoder)*/
    RawRepresentable$implementation.prototype.initFromDecoder = function ($info, decoder) {
        return decoder;
    };
    /*Swift.(file).RawRepresentable.encode(to:Encoder)*/
    /*Swift.(file).RawRepresentable.encode(to:Encoder)*/
    RawRepresentable$implementation.prototype.encodeTo = function ($info, encoder) {
    };
    /*Swift.(file).RawRepresentable.init(from:Decoder)*/
    /*Swift.(file).RawRepresentable.init(from:Decoder)*/
    RawRepresentable$implementation.prototype.initFromDecoder = function ($info, decoder) {
        return decoder;
    };
    /*Swift.(file).RawRepresentable.encode(to:Encoder)*/
    /*Swift.(file).RawRepresentable.encode(to:Encoder)*/
    RawRepresentable$implementation.prototype.encodeTo = function ($info, encoder) {
    };
    /*Swift.(file).RawRepresentable.init(from:Decoder)*/
    /*Swift.(file).RawRepresentable.init(from:Decoder)*/
    RawRepresentable$implementation.prototype.initFromDecoder = function ($info, decoder) {
        return decoder;
    };
    /*Swift.(file).RawRepresentable.hashValue*/ /**/ ;
    /*Swift.(file).RawRepresentable.hash(into:Hasher)*/
    /*Swift.(file).RawRepresentable.hash(into:Hasher)*/
    RawRepresentable$implementation.prototype.hashInto = function ($info, hasher$inout) {
    };
    return RawRepresentable$implementation;
}());
var CaseIterable$implementation = /** @class */ (function () {
    function CaseIterable$implementation() {
    }
    return CaseIterable$implementation;
}());
var ExpressibleByNilLiteral$implementation = /** @class */ (function () {
    function ExpressibleByNilLiteral$implementation() {
    }
    return ExpressibleByNilLiteral$implementation;
}());
var _ExpressibleByBuiltinIntegerLiteral$implementation = /** @class */ (function () {
    function _ExpressibleByBuiltinIntegerLiteral$implementation() {
    }
    return _ExpressibleByBuiltinIntegerLiteral$implementation;
}());
var ExpressibleByIntegerLiteral$implementation = /** @class */ (function () {
    function ExpressibleByIntegerLiteral$implementation() {
    }
    /*Swift.(file).ExpressibleByIntegerLiteral.init(integerLiteral:Self)*/
    /*Swift.(file).ExpressibleByIntegerLiteral.init(integerLiteral:Self)*/
    ExpressibleByIntegerLiteral$implementation.prototype.initIntegerLiteral = function ($info, value) {
        return value;
    };
    return ExpressibleByIntegerLiteral$implementation;
}());
var _ExpressibleByBuiltinFloatLiteral$implementation = /** @class */ (function () {
    function _ExpressibleByBuiltinFloatLiteral$implementation() {
    }
    return _ExpressibleByBuiltinFloatLiteral$implementation;
}());
var ExpressibleByFloatLiteral$implementation = /** @class */ (function () {
    function ExpressibleByFloatLiteral$implementation() {
    }
    return ExpressibleByFloatLiteral$implementation;
}());
var _ExpressibleByBuiltinBooleanLiteral$implementation = /** @class */ (function () {
    function _ExpressibleByBuiltinBooleanLiteral$implementation() {
    }
    return _ExpressibleByBuiltinBooleanLiteral$implementation;
}());
var ExpressibleByBooleanLiteral$implementation = /** @class */ (function () {
    function ExpressibleByBooleanLiteral$implementation() {
    }
    return ExpressibleByBooleanLiteral$implementation;
}());
var _ExpressibleByBuiltinUnicodeScalarLiteral$implementation = /** @class */ (function () {
    function _ExpressibleByBuiltinUnicodeScalarLiteral$implementation() {
    }
    return _ExpressibleByBuiltinUnicodeScalarLiteral$implementation;
}());
var ExpressibleByUnicodeScalarLiteral$implementation = /** @class */ (function () {
    function ExpressibleByUnicodeScalarLiteral$implementation() {
    }
    return ExpressibleByUnicodeScalarLiteral$implementation;
}());
var _ExpressibleByBuiltinExtendedGraphemeClusterLiteral$implementation = /** @class */ (function () {
    function _ExpressibleByBuiltinExtendedGraphemeClusterLiteral$implementation() {
    }
    return _ExpressibleByBuiltinExtendedGraphemeClusterLiteral$implementation;
}());
if (typeof _ExpressibleByBuiltinUnicodeScalarLiteral$implementation != 'undefined')
    _mixin(_ExpressibleByBuiltinExtendedGraphemeClusterLiteral$implementation, _ExpressibleByBuiltinUnicodeScalarLiteral$implementation, false);
var ExpressibleByExtendedGraphemeClusterLiteral$implementation = /** @class */ (function () {
    function ExpressibleByExtendedGraphemeClusterLiteral$implementation() {
    }
    /*Swift.(file).ExpressibleByExtendedGraphemeClusterLiteral.init(unicodeScalarLiteral:Self.ExtendedGraphemeClusterLiteralType)*/
    /*Swift.(file).ExpressibleByExtendedGraphemeClusterLiteral.init(unicodeScalarLiteral:Self.ExtendedGraphemeClusterLiteralType)*/
    ExpressibleByExtendedGraphemeClusterLiteral$implementation.prototype.initUnicodeScalarLiteral = function ($info, value) {
        return value;
    };
    return ExpressibleByExtendedGraphemeClusterLiteral$implementation;
}());
if (typeof ExpressibleByUnicodeScalarLiteral$implementation != 'undefined')
    _mixin(ExpressibleByExtendedGraphemeClusterLiteral$implementation, ExpressibleByUnicodeScalarLiteral$implementation, false);
var _ExpressibleByBuiltinStringLiteral$implementation = /** @class */ (function () {
    function _ExpressibleByBuiltinStringLiteral$implementation() {
    }
    return _ExpressibleByBuiltinStringLiteral$implementation;
}());
if (typeof _ExpressibleByBuiltinExtendedGraphemeClusterLiteral$implementation != 'undefined')
    _mixin(_ExpressibleByBuiltinStringLiteral$implementation, _ExpressibleByBuiltinExtendedGraphemeClusterLiteral$implementation, false);
var ExpressibleByStringLiteral$implementation = /** @class */ (function () {
    function ExpressibleByStringLiteral$implementation() {
    }
    /*Swift.(file).ExpressibleByStringLiteral.init(extendedGraphemeClusterLiteral:Self.StringLiteralType)*/
    /*Swift.(file).ExpressibleByStringLiteral.init(extendedGraphemeClusterLiteral:Self.StringLiteralType)*/
    ExpressibleByStringLiteral$implementation.prototype.initExtendedGraphemeClusterLiteral = function ($info, value) {
        return value;
    };
    return ExpressibleByStringLiteral$implementation;
}());
if (typeof ExpressibleByExtendedGraphemeClusterLiteral$implementation != 'undefined')
    _mixin(ExpressibleByStringLiteral$implementation, ExpressibleByExtendedGraphemeClusterLiteral$implementation, false);
var ExpressibleByArrayLiteral$implementation = /** @class */ (function () {
    function ExpressibleByArrayLiteral$implementation() {
    }
    return ExpressibleByArrayLiteral$implementation;
}());
var ExpressibleByDictionaryLiteral$implementation = /** @class */ (function () {
    function ExpressibleByDictionaryLiteral$implementation() {
    }
    return ExpressibleByDictionaryLiteral$implementation;
}());
var ExpressibleByStringInterpolation$implementation = /** @class */ (function () {
    function ExpressibleByStringInterpolation$implementation() {
    }
    /*Swift.(file).ExpressibleByStringInterpolation.init(stringInterpolation:DefaultStringInterpolation)*/
    /*Swift.(file).ExpressibleByStringInterpolation.init(stringInterpolation:DefaultStringInterpolation)*/
    ExpressibleByStringInterpolation$implementation.prototype.initStringInterpolationDefaultStringInterpolation = function ($info, stringInterpolation) {
        return stringInterpolation;
    };
    return ExpressibleByStringInterpolation$implementation;
}());
if (typeof ExpressibleByStringLiteral$implementation != 'undefined')
    _mixin(ExpressibleByStringInterpolation$implementation, ExpressibleByStringLiteral$implementation, false);
var StringInterpolationProtocol$implementation = /** @class */ (function () {
    function StringInterpolationProtocol$implementation() {
    }
    return StringInterpolationProtocol$implementation;
}());
var _ExpressibleByColorLiteral$implementation = /** @class */ (function () {
    function _ExpressibleByColorLiteral$implementation() {
    }
    return _ExpressibleByColorLiteral$implementation;
}());
var _ExpressibleByImageLiteral$implementation = /** @class */ (function () {
    function _ExpressibleByImageLiteral$implementation() {
    }
    return _ExpressibleByImageLiteral$implementation;
}());
var _ExpressibleByFileReferenceLiteral$implementation = /** @class */ (function () {
    function _ExpressibleByFileReferenceLiteral$implementation() {
    }
    return _ExpressibleByFileReferenceLiteral$implementation;
}());
var _HasContiguousBytes$implementation = /** @class */ (function () {
    function _HasContiguousBytes$implementation() {
    }
    return _HasContiguousBytes$implementation;
}());
var _UnsafePartiallyInitializedContiguousArrayBuffer = /** @class */ (function () {
    function _UnsafePartiallyInitializedContiguousArrayBuffer() {
    }
    /*Swift.(file)._UnsafePartiallyInitializedContiguousArrayBuffer.p*/ /*
    p$get() {
    return this.p
    }
    get p() { return this.p$get() }*/ ;
    /*Swift.(file)._UnsafePartiallyInitializedContiguousArrayBuffer.remainingCapacity*/ /*
    remainingCapacity$get() {
    return this.remainingCapacity
    }
    get remainingCapacity() { return this.remainingCapacity$get() }*/ ;
    /*Swift.(file)._UnsafePartiallyInitializedContiguousArrayBuffer.init(initialCapacity:Int)*/
    /*Swift.(file)._UnsafePartiallyInitializedContiguousArrayBuffer.init(initialCapacity:Int)*/
    _UnsafePartiallyInitializedContiguousArrayBuffer.prototype.initInitialCapacityInt = function ($info, initialCapacity) {
        return initialCapacity;
    };
    /*Swift.(file)._UnsafePartiallyInitializedContiguousArrayBuffer.add(_:Element)*/
    /*Swift.(file)._UnsafePartiallyInitializedContiguousArrayBuffer.add(_:Element)*/
    _UnsafePartiallyInitializedContiguousArrayBuffer.prototype.add = function ($info, _element) {
    };
    /*Swift.(file)._UnsafePartiallyInitializedContiguousArrayBuffer.addWithExistingCapacity(_:Element)*/
    /*Swift.(file)._UnsafePartiallyInitializedContiguousArrayBuffer.addWithExistingCapacity(_:Element)*/
    _UnsafePartiallyInitializedContiguousArrayBuffer.prototype.addWithExistingCapacity = function ($info, _element) {
    };
    /*Swift.(file)._UnsafePartiallyInitializedContiguousArrayBuffer.finish()*/
    /*Swift.(file)._UnsafePartiallyInitializedContiguousArrayBuffer.finish()*/
    _UnsafePartiallyInitializedContiguousArrayBuffer.prototype.finish = function ($info) {
    };
    /*Swift.(file)._UnsafePartiallyInitializedContiguousArrayBuffer.finishWithOriginalCount()*/
    /*Swift.(file)._UnsafePartiallyInitializedContiguousArrayBuffer.finishWithOriginalCount()*/
    _UnsafePartiallyInitializedContiguousArrayBuffer.prototype.finishWithOriginalCount = function ($info) {
    };
    _UnsafePartiallyInitializedContiguousArrayBuffer.$struct = true;
    _UnsafePartiallyInitializedContiguousArrayBuffer.$infoAddress = '0x7fb852abee18';
    return _UnsafePartiallyInitializedContiguousArrayBuffer;
}());
var _DebuggerSupport = /** @class */ (function () {
    function _DebuggerSupport() {
    }
    /*Swift.(file)._DebuggerSupport.isClass(_:Any)*/
    /*Swift.(file)._DebuggerSupport.isClass(_:Any)*/
    _DebuggerSupport.isClass = function ($info, value) {
    };
    /*Swift.(file)._DebuggerSupport.checkValue(_:Any,ifClass:(AnyObject) -> T,otherwise:() -> T)*/
    /*Swift.(file)._DebuggerSupport.checkValue(_:Any,ifClass:(AnyObject) -> T,otherwise:() -> T)*/
    _DebuggerSupport.checkValueIfClassOtherwise = function ($info, value, ifClass, otherwise) {
    };
    /*Swift.(file)._DebuggerSupport.asObjectIdentifier(_:Any)*/
    /*Swift.(file)._DebuggerSupport.asObjectIdentifier(_:Any)*/
    _DebuggerSupport.asObjectIdentifier = function ($info, value) {
    };
    /*Swift.(file)._DebuggerSupport.asObjectAddress(_:Any)*/
    /*Swift.(file)._DebuggerSupport.asObjectAddress(_:Any)*/
    _DebuggerSupport.asObjectAddress = function ($info, value) {
    };
    /*Swift.(file)._DebuggerSupport.asStringRepresentation(value:Any?,mirror:Mirror,count:Int)*/
    /*Swift.(file)._DebuggerSupport.asStringRepresentation(value:Any?,mirror:Mirror,count:Int)*/
    _DebuggerSupport.asStringRepresentationValueMirrorCount = function ($info, value, mirror, count) {
    };
    /*Swift.(file)._DebuggerSupport.ivarCount(mirror:Mirror)*/
    /*Swift.(file)._DebuggerSupport.ivarCount(mirror:Mirror)*/
    _DebuggerSupport.ivarCountMirror = function ($info, mirror) {
    };
    /*Swift.(file)._DebuggerSupport.shouldExpand(mirror:Mirror,collectionStatus:_DebuggerSupport.CollectionStatus,isRoot:Bool)*/
    /*Swift.(file)._DebuggerSupport.shouldExpand(mirror:Mirror,collectionStatus:_DebuggerSupport.CollectionStatus,isRoot:Bool)*/
    _DebuggerSupport.shouldExpandMirrorCollectionStatusIsRoot = function ($info, mirror, collectionStatus, isRoot) {
    };
    /*Swift.(file)._DebuggerSupport.printForDebuggerImpl(value:Any?,mirror:Mirror,name:String?,indent:Int,maxDepth:Int,isRoot:Bool,parentCollectionStatus:_DebuggerSupport.CollectionStatus,refsAlreadySeen:Set<ObjectIdentifier>,maxItemCounter:Int,target:StreamType)*/
    /*Swift.(file)._DebuggerSupport.printForDebuggerImpl(value:Any?,mirror:Mirror,name:String?,indent:Int,maxDepth:Int,isRoot:Bool,parentCollectionStatus:_DebuggerSupport.CollectionStatus,refsAlreadySeen:Set<ObjectIdentifier>,maxItemCounter:Int,target:StreamType)*/
    _DebuggerSupport.printForDebuggerImplValueMirrorNameIndentMaxDepthIsRootParentCollectionStatusRefsAlreadySeenMaxItemCounterTarget = function ($info, value, mirror, _name, indent, maxDepth, isRoot, parentCollectionStatus, refsAlreadySeen$inout, maxItemCounter$inout, target$inout) {
    };
    /*Swift.(file)._DebuggerSupport.stringForPrintObject(_:Any)*/
    /*Swift.(file)._DebuggerSupport.stringForPrintObject(_:Any)*/
    _DebuggerSupport.stringForPrintObject = function ($info, value) {
    };
    var _a;
    _DebuggerSupport.$infoAddress = '0x7fb851814418';
    _DebuggerSupport.CollectionStatus = (_a = /** @class */ (function () {
            function class_1() {
            }
            Object.defineProperty(class_1, "notACollection", {
                get: function () { return Object.assign(new _DebuggerSupport.CollectionStatus(), __assign({ rawValue: "notACollection" }, Array.from(arguments).slice(1))); },
                enumerable: true,
                configurable: true
            });
            Object.defineProperty(class_1, "collectionOfElements", {
                get: function () { return Object.assign(new _DebuggerSupport.CollectionStatus(), __assign({ rawValue: "collectionOfElements" }, Array.from(arguments).slice(1))); },
                enumerable: true,
                configurable: true
            });
            Object.defineProperty(class_1, "collectionOfPairs", {
                get: function () { return Object.assign(new _DebuggerSupport.CollectionStatus(), __assign({ rawValue: "collectionOfPairs" }, Array.from(arguments).slice(1))); },
                enumerable: true,
                configurable: true
            });
            Object.defineProperty(class_1, "_element", {
                get: function () { return Object.assign(new _DebuggerSupport.CollectionStatus(), __assign({ rawValue: "_element" }, Array.from(arguments).slice(1))); },
                enumerable: true,
                configurable: true
            });
            Object.defineProperty(class_1, "pair", {
                get: function () { return Object.assign(new _DebuggerSupport.CollectionStatus(), __assign({ rawValue: "pair" }, Array.from(arguments).slice(1))); },
                enumerable: true,
                configurable: true
            });
            Object.defineProperty(class_1, "elementOfPair", {
                get: function () { return Object.assign(new _DebuggerSupport.CollectionStatus(), __assign({ rawValue: "elementOfPair" }, Array.from(arguments).slice(1))); },
                enumerable: true,
                configurable: true
            });
            /*Swift.(file)._DebuggerSupport.CollectionStatus.isCollection*/ /*
            isCollection$get() {
            return this.isCollection
            }
            get isCollection() { return this.isCollection$get() }*/ ;
            /*Swift.(file)._DebuggerSupport.CollectionStatus.getChildStatus(child:Mirror)*/
            /*Swift.(file)._DebuggerSupport.CollectionStatus.getChildStatus(child:Mirror)*/
            class_1.prototype.getChildStatusChild = function ($info, child) {
            };
            /*Swift.(file)._DebuggerSupport.CollectionStatus.==(_:_DebuggerSupport.CollectionStatus,_:_DebuggerSupport.CollectionStatus)*/
            /*Swift.(file).Equatable.==infix(_:Self,_:Self)*/
            class_1.infix_61_61 = function ($info, a, b) {
                return a == b;
            };
            /*Swift.(file)._DebuggerSupport.CollectionStatus.hashValue*/ /*
            hashValue$get() {
            return this.hashValue
            }
            get hashValue() { return this.hashValue$get() }*/ ;
            /*Swift.(file)._DebuggerSupport.CollectionStatus.hash(into:Hasher)*/
            /*Swift.(file).Hashable.hash(into:Hasher)*/
            class_1.prototype.hashInto = function ($info, hasher$inout) {
            };
            return class_1;
        }()),
        _a.$infoAddress = '0x7fb851814590',
        _a);
    return _DebuggerSupport;
}());
var _DictionaryBuilder = /** @class */ (function () {
    function _DictionaryBuilder() {
    }
    /*Swift.(file)._DictionaryBuilder.init(count:Int)*/
    /*Swift.(file)._DictionaryBuilder.init(count:Int)*/
    _DictionaryBuilder.prototype.initCountInt = function ($info, count) {
        return count;
    };
    /*Swift.(file)._DictionaryBuilder.add(key:Key,value:Value)*/
    /*Swift.(file)._DictionaryBuilder.add(key:Key,value:Value)*/
    _DictionaryBuilder.prototype.addKeyValue = function ($info, newKey, value) {
    };
    /*Swift.(file)._DictionaryBuilder.take()*/
    /*Swift.(file)._DictionaryBuilder.take()*/
    _DictionaryBuilder.prototype.take = function ($info) {
    };
    _DictionaryBuilder.$struct = true;
    _DictionaryBuilder.$infoAddress = '0x7fb852acaac0';
    return _DictionaryBuilder;
}());
var _DictionaryBuffer$implementation = /** @class */ (function () {
    function _DictionaryBuffer$implementation() {
    }
    return _DictionaryBuffer$implementation;
}());
var Equatable$implementation = /** @class */ (function () {
    function Equatable$implementation() {
    }
    /*Swift.(file).Equatable.!=infix(_:Self,_:Self)*/
    /*Swift.(file).Equatable.!=infix(_:Self,_:Self)*/
    Equatable$implementation.infix_33_61 = function ($info, lhs, rhs) {
        return lhs != rhs;
    };
    return Equatable$implementation;
}());
var Error$implementation = /** @class */ (function () {
    function Error$implementation() {
    }
    return Error$implementation;
}());
var FloatingPointClassification = /** @class */ (function () {
    function FloatingPointClassification() {
    }
    Object.defineProperty(FloatingPointClassification, "signalingNaN", {
        get: function () { return Object.assign(new FloatingPointClassification(), __assign({ rawValue: "signalingNaN" }, Array.from(arguments).slice(1))); },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(FloatingPointClassification, "quietNaN", {
        get: function () { return Object.assign(new FloatingPointClassification(), __assign({ rawValue: "quietNaN" }, Array.from(arguments).slice(1))); },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(FloatingPointClassification, "negativeInfinity", {
        get: function () { return Object.assign(new FloatingPointClassification(), __assign({ rawValue: "negativeInfinity" }, Array.from(arguments).slice(1))); },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(FloatingPointClassification, "negativeNormal", {
        get: function () { return Object.assign(new FloatingPointClassification(), __assign({ rawValue: "negativeNormal" }, Array.from(arguments).slice(1))); },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(FloatingPointClassification, "negativeSubnormal", {
        get: function () { return Object.assign(new FloatingPointClassification(), __assign({ rawValue: "negativeSubnormal" }, Array.from(arguments).slice(1))); },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(FloatingPointClassification, "negativeZero", {
        get: function () { return Object.assign(new FloatingPointClassification(), __assign({ rawValue: "negativeZero" }, Array.from(arguments).slice(1))); },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(FloatingPointClassification, "positiveZero", {
        get: function () { return Object.assign(new FloatingPointClassification(), __assign({ rawValue: "positiveZero" }, Array.from(arguments).slice(1))); },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(FloatingPointClassification, "positiveSubnormal", {
        get: function () { return Object.assign(new FloatingPointClassification(), __assign({ rawValue: "positiveSubnormal" }, Array.from(arguments).slice(1))); },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(FloatingPointClassification, "positiveNormal", {
        get: function () { return Object.assign(new FloatingPointClassification(), __assign({ rawValue: "positiveNormal" }, Array.from(arguments).slice(1))); },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(FloatingPointClassification, "positiveInfinity", {
        get: function () { return Object.assign(new FloatingPointClassification(), __assign({ rawValue: "positiveInfinity" }, Array.from(arguments).slice(1))); },
        enumerable: true,
        configurable: true
    });
    /*Swift.(file).FloatingPointClassification.==(_:FloatingPointClassification,_:FloatingPointClassification)*/
    /*Swift.(file).Equatable.==infix(_:Self,_:Self)*/
    FloatingPointClassification.infix_61_61 = function ($info, a, b) {
        return a == b;
    };
    /*Swift.(file).FloatingPointClassification.hashValue*/ /*
    hashValue$get() {
    return this.hashValue
    }
    get hashValue() { return this.hashValue$get() }*/ ;
    /*Swift.(file).FloatingPointClassification.hash(into:Hasher)*/
    /*Swift.(file).Hashable.hash(into:Hasher)*/
    FloatingPointClassification.prototype.hashInto = function ($info, hasher$inout) {
    };
    FloatingPointClassification.$infoAddress = '0x7fb85181f768';
    return FloatingPointClassification;
}());
var FloatingPointRoundingRule = /** @class */ (function () {
    function FloatingPointRoundingRule() {
    }
    Object.defineProperty(FloatingPointRoundingRule, "toNearestOrAwayFromZero", {
        get: function () { return Object.assign(new FloatingPointRoundingRule(), __assign({ rawValue: "toNearestOrAwayFromZero" }, Array.from(arguments).slice(1))); },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(FloatingPointRoundingRule, "toNearestOrEven", {
        get: function () { return Object.assign(new FloatingPointRoundingRule(), __assign({ rawValue: "toNearestOrEven" }, Array.from(arguments).slice(1))); },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(FloatingPointRoundingRule, "up", {
        get: function () { return Object.assign(new FloatingPointRoundingRule(), __assign({ rawValue: "up" }, Array.from(arguments).slice(1))); },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(FloatingPointRoundingRule, "down", {
        get: function () { return Object.assign(new FloatingPointRoundingRule(), __assign({ rawValue: "down" }, Array.from(arguments).slice(1))); },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(FloatingPointRoundingRule, "towardZero", {
        get: function () { return Object.assign(new FloatingPointRoundingRule(), __assign({ rawValue: "towardZero" }, Array.from(arguments).slice(1))); },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(FloatingPointRoundingRule, "awayFromZero", {
        get: function () { return Object.assign(new FloatingPointRoundingRule(), __assign({ rawValue: "awayFromZero" }, Array.from(arguments).slice(1))); },
        enumerable: true,
        configurable: true
    });
    /*Swift.(file).FloatingPointRoundingRule.==(_:FloatingPointRoundingRule,_:FloatingPointRoundingRule)*/
    /*Swift.(file).Equatable.==infix(_:Self,_:Self)*/
    FloatingPointRoundingRule.infix_61_61 = function ($info, a, b) {
        return a == b;
    };
    /*Swift.(file).FloatingPointRoundingRule.hashValue*/ /*
    hashValue$get() {
    return this.hashValue
    }
    get hashValue() { return this.hashValue$get() }*/ ;
    /*Swift.(file).FloatingPointRoundingRule.hash(into:Hasher)*/
    /*Swift.(file).Hashable.hash(into:Hasher)*/
    FloatingPointRoundingRule.prototype.hashInto = function ($info, hasher$inout) {
    };
    FloatingPointRoundingRule.$infoAddress = '0x7fb85181fbb0';
    return FloatingPointRoundingRule;
}());
var Hashable$implementation = /** @class */ (function () {
    function Hashable$implementation() {
    }
    return Hashable$implementation;
}());
if (typeof Equatable$implementation != 'undefined')
    _mixin(Hashable$implementation, Equatable$implementation, false);
var _HasCustomAnyHashableRepresentation$implementation = /** @class */ (function () {
    function _HasCustomAnyHashableRepresentation$implementation() {
    }
    return _HasCustomAnyHashableRepresentation$implementation;
}());
var _AnyHashableBox$implementation = /** @class */ (function () {
    function _AnyHashableBox$implementation() {
    }
    return _AnyHashableBox$implementation;
}());
var _ConcreteHashableBox = /** @class */ (function () {
    function _ConcreteHashableBox() {
    }
    /*Swift.(file)._ConcreteHashableBox.init(_:Base)*/
    /*Swift.(file)._ConcreteHashableBox.init(_:Base)*/
    _ConcreteHashableBox.prototype.init = function ($info, base) {
        return base;
    };
    _ConcreteHashableBox.$struct = true;
    _ConcreteHashableBox.$infoAddress = '0x7fb852adf4e0';
    return _ConcreteHashableBox;
}());
if (typeof _AnyHashableBox$implementation != 'undefined')
    _mixin(_ConcreteHashableBox, _AnyHashableBox$implementation, false);
var Hasher = /** @class */ (function () {
    function Hasher() {
    }
    /*Swift.(file).Hasher.init()*/
    /*Swift.(file).Hasher.init()*/
    Hasher.prototype.init = function ($info) {
    };
    /*Swift.(file).Hasher.init(_seed:Int)*/
    /*Swift.(file).Hasher.init(_seed:Int)*/
    Hasher.prototype.init_seedInt = function ($info, _seed) {
        return _seed;
    };
    /*Swift.(file).Hasher.init(_rawSeed:(UInt64, UInt64))*/
    /*Swift.(file).Hasher.init(_rawSeed:(UInt64, UInt64))*/
    Hasher.prototype.init_rawSeedtuple_type = function ($info, _rawSeed) {
        return _rawSeed;
    };
    /*Swift.(file).Hasher.combine(_:H)*/
    /*Swift.(file).Hasher.combine(_:H)*/
    Hasher.prototype.combine = function ($info, value) {
    };
    /*Swift.(file).Hasher.combine(bytes:UnsafeRawBufferPointer)*/
    /*Swift.(file).Hasher.combine(bytes:UnsafeRawBufferPointer)*/
    Hasher.prototype.combineBytes = function ($info, bytes) {
    };
    /*Swift.(file).Hasher.finalize()*/
    /*Swift.(file).Hasher.finalize()*/
    Hasher.prototype.finalize = function ($info) {
    };
    var _b, _c, _d;
    Hasher.$struct = true;
    Hasher.$infoAddress = '0x7fb8529ab490';
    Hasher._TailBuffer = (_b = /** @class */ (function () {
            function class_2() {
            }
            /*Swift.(file).Hasher._TailBuffer.init()*/
            /*Swift.(file).Hasher._TailBuffer.init()*/
            class_2.prototype.init = function ($info) {
            };
            /*Swift.(file).Hasher._TailBuffer.init(tail:UInt64,byteCount:UInt64)*/
            /*Swift.(file).Hasher._TailBuffer.init(tail:UInt64,byteCount:UInt64)*/
            class_2.prototype.initTailUInt64ByteCountUInt64 = function ($info, tail, byteCount) {
            };
            /*Swift.(file).Hasher._TailBuffer.init(tail:UInt64,byteCount:Int)*/
            /*Swift.(file).Hasher._TailBuffer.init(tail:UInt64,byteCount:Int)*/
            class_2.prototype.initTailUInt64ByteCountInt = function ($info, tail, byteCount) {
            };
            /*Swift.(file).Hasher._TailBuffer.tail*/ /*
            tail$get() {
            return this.tail
            }
            get tail() { return this.tail$get() }*/ ;
            /*Swift.(file).Hasher._TailBuffer.byteCount*/ /*
            byteCount$get() {
            return this.byteCount
            }
            get byteCount() { return this.byteCount$get() }*/ ;
            /*Swift.(file).Hasher._TailBuffer.append(_:UInt64)*/
            /*Swift.(file).Hasher._TailBuffer.append(_:UInt64)*/
            class_2.prototype.append = function ($info, bytes) {
            };
            /*Swift.(file).Hasher._TailBuffer.append(_:UInt64,count:UInt64)*/
            /*Swift.(file).Hasher._TailBuffer.append(_:UInt64,count:UInt64)*/
            class_2.prototype.appendCount = function ($info, bytes, count) {
            };
            return class_2;
        }()),
        _b.$struct = true,
        _b.$infoAddress = '0x7fb85535a9b8',
        _b);
    Hasher._Core = (_c = /** @class */ (function () {
            function class_3() {
            }
            /*Swift.(file).Hasher._Core.init(state:Hasher._State)*/
            /*Swift.(file).Hasher._Core.init(state:Hasher._State)*/
            class_3.prototype.initStateHasher_State = function ($info, state) {
                return state;
            };
            /*Swift.(file).Hasher._Core.init()*/
            /*Swift.(file).Hasher._Core.init()*/
            class_3.prototype.init = function ($info) {
            };
            /*Swift.(file).Hasher._Core.init(seed:Int)*/
            /*Swift.(file).Hasher._Core.init(seed:Int)*/
            class_3.prototype.initSeedInt = function ($info, seed) {
                return seed;
            };
            /*Swift.(file).Hasher._Core.combine(_:UInt)*/
            /*Swift.(file).Hasher._Core.combine(_:UInt)*/
            class_3.prototype.combine = function ($info, value) {
            };
            /*Swift.(file).Hasher._Core.combine(_:UInt64)*/
            /*Swift.(file).Hasher._Core.combine(_:UInt64)*/
            class_3.prototype.combine = function ($info, value) {
            };
            /*Swift.(file).Hasher._Core.combine(_:UInt32)*/
            /*Swift.(file).Hasher._Core.combine(_:UInt32)*/
            class_3.prototype.combine = function ($info, value) {
            };
            /*Swift.(file).Hasher._Core.combine(_:UInt16)*/
            /*Swift.(file).Hasher._Core.combine(_:UInt16)*/
            class_3.prototype.combine = function ($info, value) {
            };
            /*Swift.(file).Hasher._Core.combine(_:UInt8)*/
            /*Swift.(file).Hasher._Core.combine(_:UInt8)*/
            class_3.prototype.combine = function ($info, value) {
            };
            /*Swift.(file).Hasher._Core.combine(bytes:UInt64,count:Int)*/
            /*Swift.(file).Hasher._Core.combine(bytes:UInt64,count:Int)*/
            class_3.prototype.combineBytesCount = function ($info, bytes, count) {
            };
            /*Swift.(file).Hasher._Core.combine(bytes:UnsafeRawBufferPointer)*/
            /*Swift.(file).Hasher._Core.combine(bytes:UnsafeRawBufferPointer)*/
            class_3.prototype.combineBytes = function ($info, bytes) {
            };
            /*Swift.(file).Hasher._Core.finalize()*/
            /*Swift.(file).Hasher._Core.finalize()*/
            class_3.prototype.finalize = function ($info) {
            };
            return class_3;
        }()),
        _c.$struct = true,
        _c.$infoAddress = '0x7fb8553576d8',
        _c);
    Hasher._State = (_d = /** @class */ (function () {
            function class_4() {
            }
            /*Swift.(file).Hasher._State.v1*/ /*
            v1$get() {
            return this.v1
            }
            get v1() { return this.v1$get() }*/ ;
            /*Swift.(file).Hasher._State.v2*/ /*
            v2$get() {
            return this.v2
            }
            get v2() { return this.v2$get() }*/ ;
            /*Swift.(file).Hasher._State.v3*/ /*
            v3$get() {
            return this.v3
            }
            get v3() { return this.v3$get() }*/ ;
            /*Swift.(file).Hasher._State.v4*/ /*
            v4$get() {
            return this.v4
            }
            get v4() { return this.v4$get() }*/ ;
            /*Swift.(file).Hasher._State.v5*/ /*
            v5$get() {
            return this.v5
            }
            get v5() { return this.v5$get() }*/ ;
            /*Swift.(file).Hasher._State.v6*/ /*
            v6$get() {
            return this.v6
            }
            get v6() { return this.v6$get() }*/ ;
            /*Swift.(file).Hasher._State.v7*/ /*
            v7$get() {
            return this.v7
            }
            get v7() { return this.v7$get() }*/ ;
            /*Swift.(file).Hasher._State.init(rawSeed:(UInt64, UInt64))*/
            /*Swift.(file).Hasher._State.init(rawSeed:(UInt64, UInt64))*/
            class_4.prototype.initRawSeedtuple_type = function ($info, rawSeed) {
                return rawSeed;
            };
            /*Swift.(file)._State.compress(_:UInt64)*/
            /*Swift.(file)._State.compress(_:UInt64)*/
            class_4.prototype.compress = function ($info, m) {
            };
            /*Swift.(file)._State.finalize(tailAndByteCount:UInt64)*/
            /*Swift.(file)._State.finalize(tailAndByteCount:UInt64)*/
            class_4.prototype.finalizeTailAndByteCount = function ($info, tailAndByteCount) {
            };
            /*Swift.(file)._State.init()*/
            /*Swift.(file)._State.init()*/
            class_4.prototype.init = function ($info) {
            };
            /*Swift.(file)._State.init(seed:Int)*/
            /*Swift.(file)._State.init(seed:Int)*/
            class_4.prototype.initSeedInt = function ($info, seed) {
                return seed;
            };
            return class_4;
        }()),
        _d.$struct = true,
        _d.$infoAddress = '0x7fb851256458',
        _d);
    return Hasher;
}());
var _UnmanagedAnyObjectArray = /** @class */ (function () {
    function _UnmanagedAnyObjectArray() {
    }
    /*Swift.(file)._UnmanagedAnyObjectArray.init(_:UnsafeMutablePointer<AnyObject>)*/
    /*Swift.(file)._UnmanagedAnyObjectArray.init(_:UnsafeMutablePointer<AnyObject>)*/
    _UnmanagedAnyObjectArray.prototype.initUnsafeMutablePointer = function ($info, up) {
        return up;
    };
    /*Swift.(file)._UnmanagedAnyObjectArray.init(_:UnsafeMutablePointer<AnyObject>?)*/
    /*Swift.(file)._UnmanagedAnyObjectArray.init(_:UnsafeMutablePointer<AnyObject>?)*/
    _UnmanagedAnyObjectArray.prototype.initOptional = function ($info, up) {
        return up;
    };
    /*Swift.(file)._UnmanagedAnyObjectArray.subscript(_:Int)*/
    /*Swift.(file)._UnmanagedAnyObjectArray.subscript(_:Int)*/
    _UnmanagedAnyObjectArray.prototype.subscript$get = function ($info, i) {
        return this[i];
    }; /*Swift.(file)._UnmanagedAnyObjectArray.subscript(_:Int)*/
    /*Swift.(file)._UnmanagedAnyObjectArray.subscript(_:Int)*/
    _UnmanagedAnyObjectArray.prototype.subscript$set = function ($info, newValue, i) {
        this[i] = newValue;
    };
    _UnmanagedAnyObjectArray.$struct = true;
    _UnmanagedAnyObjectArray.$infoAddress = '0x7fb852ae17c8';
    return _UnmanagedAnyObjectArray;
}());
var _HashTableDelegate$implementation = /** @class */ (function () {
    function _HashTableDelegate$implementation() {
    }
    return _HashTableDelegate$implementation;
}());
var AdditiveArithmetic$implementation = /** @class */ (function () {
    function AdditiveArithmetic$implementation() {
    }
    /*Swift.(file).AdditiveArithmetic.+prefix(_:Self)*/
    /*Swift.(file).AdditiveArithmetic.+prefix(_:Self)*/
    AdditiveArithmetic$implementation.prefix_43 = function ($info, x) {
        return +x;
    };
    /*Swift.(file).AdditiveArithmetic.zero*/ /**/ ;
    return AdditiveArithmetic$implementation;
}());
if (typeof Equatable$implementation != 'undefined')
    _mixin(AdditiveArithmetic$implementation, Equatable$implementation, false);
var Numeric$implementation = /** @class */ (function () {
    function Numeric$implementation() {
    }
    return Numeric$implementation;
}());
if (typeof AdditiveArithmetic$implementation != 'undefined')
    _mixin(Numeric$implementation, AdditiveArithmetic$implementation, false);
if (typeof ExpressibleByIntegerLiteral$implementation != 'undefined')
    _mixin(Numeric$implementation, ExpressibleByIntegerLiteral$implementation, false);
var SignedNumeric$implementation = /** @class */ (function () {
    function SignedNumeric$implementation() {
    }
    /*Swift.(file).SignedNumeric.-prefix(_:Self)*/
    /*Swift.(file).SignedNumeric.-prefix(_:Self)*/
    SignedNumeric$implementation.prefix_45 = function ($info, operand) {
        return -operand;
    };
    /*Swift.(file).SignedNumeric.negate()*/
    /*Swift.(file).SignedNumeric.negate()*/
    SignedNumeric$implementation.prototype.negate = function ($info) {
    };
    return SignedNumeric$implementation;
}());
if (typeof Numeric$implementation != 'undefined')
    _mixin(SignedNumeric$implementation, Numeric$implementation, false);
var _IntegerAnyHashableBox = /** @class */ (function () {
    function _IntegerAnyHashableBox() {
    }
    /*Swift.(file)._IntegerAnyHashableBox.init(_:Base)*/
    /*Swift.(file)._IntegerAnyHashableBox.init(_:Base)*/
    _IntegerAnyHashableBox.prototype.init = function ($info, value) {
        return value;
    };
    _IntegerAnyHashableBox.$struct = true;
    _IntegerAnyHashableBox.$infoAddress = '0x7fb852b50640';
    return _IntegerAnyHashableBox;
}());
if (typeof _AnyHashableBox$implementation != 'undefined')
    _mixin(_IntegerAnyHashableBox, _AnyHashableBox$implementation, false);
var KeyPathKind = /** @class */ (function () {
    function KeyPathKind() {
    }
    Object.defineProperty(KeyPathKind, "readOnly", {
        get: function () { return Object.assign(new KeyPathKind(), __assign({ rawValue: "readOnly" }, Array.from(arguments).slice(1))); },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(KeyPathKind, "value", {
        get: function () { return Object.assign(new KeyPathKind(), __assign({ rawValue: "value" }, Array.from(arguments).slice(1))); },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(KeyPathKind, "reference", {
        get: function () { return Object.assign(new KeyPathKind(), __assign({ rawValue: "reference" }, Array.from(arguments).slice(1))); },
        enumerable: true,
        configurable: true
    });
    /*Swift.(file).KeyPathKind.==(_:KeyPathKind,_:KeyPathKind)*/
    /*Swift.(file).Equatable.==infix(_:Self,_:Self)*/
    KeyPathKind.infix_61_61 = function ($info, a, b) {
        return a == b;
    };
    /*Swift.(file).KeyPathKind.hashValue*/ /*
    hashValue$get() {
    return this.hashValue
    }
    get hashValue() { return this.hashValue$get() }*/ ;
    /*Swift.(file).KeyPathKind.hash(into:Hasher)*/
    /*Swift.(file).Hashable.hash(into:Hasher)*/
    KeyPathKind.prototype.hashInto = function ($info, hasher$inout) {
    };
    KeyPathKind.$infoAddress = '0x7fb851825018';
    return KeyPathKind;
}());
var KeyPathComponentKind = /** @class */ (function () {
    function KeyPathComponentKind() {
    }
    Object.defineProperty(KeyPathComponentKind, "external", {
        get: function () { return Object.assign(new KeyPathComponentKind(), __assign({ rawValue: "external" }, Array.from(arguments).slice(1))); },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(KeyPathComponentKind, "struct", {
        get: function () { return Object.assign(new KeyPathComponentKind(), __assign({ rawValue: "struct" }, Array.from(arguments).slice(1))); },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(KeyPathComponentKind, "_class", {
        get: function () { return Object.assign(new KeyPathComponentKind(), __assign({ rawValue: "_class" }, Array.from(arguments).slice(1))); },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(KeyPathComponentKind, "computed", {
        get: function () { return Object.assign(new KeyPathComponentKind(), __assign({ rawValue: "computed" }, Array.from(arguments).slice(1))); },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(KeyPathComponentKind, "optionalChain", {
        get: function () { return Object.assign(new KeyPathComponentKind(), __assign({ rawValue: "optionalChain" }, Array.from(arguments).slice(1))); },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(KeyPathComponentKind, "optionalForce", {
        get: function () { return Object.assign(new KeyPathComponentKind(), __assign({ rawValue: "optionalForce" }, Array.from(arguments).slice(1))); },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(KeyPathComponentKind, "optionalWrap", {
        get: function () { return Object.assign(new KeyPathComponentKind(), __assign({ rawValue: "optionalWrap" }, Array.from(arguments).slice(1))); },
        enumerable: true,
        configurable: true
    });
    /*Swift.(file).KeyPathComponentKind.==(_:KeyPathComponentKind,_:KeyPathComponentKind)*/
    /*Swift.(file).Equatable.==infix(_:Self,_:Self)*/
    KeyPathComponentKind.infix_61_61 = function ($info, a, b) {
        return a == b;
    };
    /*Swift.(file).KeyPathComponentKind.hashValue*/ /*
    hashValue$get() {
    return this.hashValue
    }
    get hashValue() { return this.hashValue$get() }*/ ;
    /*Swift.(file).KeyPathComponentKind.hash(into:Hasher)*/
    /*Swift.(file).Hashable.hash(into:Hasher)*/
    KeyPathComponentKind.prototype.hashInto = function ($info, hasher$inout) {
    };
    KeyPathComponentKind.$infoAddress = '0x7fb851825458';
    return KeyPathComponentKind;
}());
var ComputedPropertyID = /** @class */ (function () {
    function ComputedPropertyID() {
    }
    /*Swift.(file).ComputedPropertyID.kind*/ /*
    kind$get() {
    return this.kind
    }
    get kind() { return this.kind$get() }*/ ;
    /*Swift.(file).ComputedPropertyID.==infix(_:ComputedPropertyID,_:ComputedPropertyID)*/
    /*Swift.(file).Equatable.==infix(_:Self,_:Self)*/
    ComputedPropertyID.infix_61_61 = function ($info, x, y) {
        return x == y;
    };
    /*Swift.(file).ComputedPropertyID.hash(into:Hasher)*/
    /*Swift.(file).Hashable.hash(into:Hasher)*/
    ComputedPropertyID.prototype.hashInto = function ($info, hasher$inout) {
    };
    /*Swift.(file).ComputedPropertyID.init(value:Int,kind:KeyPathComputedIDKind)*/
    /*Swift.(file).ComputedPropertyID.init(value:Int,kind:KeyPathComputedIDKind)*/
    ComputedPropertyID.prototype.initValueIntKindKeyPathComputedIDKind = function ($info, value, kind) {
    };
    /*Swift.(file).ComputedPropertyID.hashValue*/ /*
    hashValue$get() {
    return this.hashValue
    }
    get hashValue() { return this.hashValue$get() }*/ ;
    ComputedPropertyID.$struct = true;
    ComputedPropertyID.$infoAddress = '0x7fb851825870';
    return ComputedPropertyID;
}());
if (typeof Hashable$implementation != 'undefined')
    _mixin(ComputedPropertyID, Hashable$implementation, false);
var ComputedArgumentWitnesses = /** @class */ (function () {
    function ComputedArgumentWitnesses() {
    }
    /*Swift.(file).ComputedArgumentWitnesses.copy*/ /*
    readonly copy$get() {
    return this.copy
    }
    readonly get copy() { return this.copy$get() }*/ ;
    /*Swift.(file).ComputedArgumentWitnesses.equals*/ /*
    readonly equals$get() {
    return this.equals
    }
    readonly get equals() { return this.equals$get() }*/ ;
    /*Swift.(file).ComputedArgumentWitnesses.hash*/ /*
    readonly hash$get() {
    return this.hash
    }
    readonly get hash() { return this.hash$get() }*/ ;
    /*Swift.(file).ComputedArgumentWitnesses.init(destroy:ComputedArgumentWitnesses.Destroy?,copy:ComputedArgumentWitnesses.Copy,equals:ComputedArgumentWitnesses.Equals,hash:ComputedArgumentWitnesses.Hash)*/
    /*Swift.(file).ComputedArgumentWitnesses.init(destroy:ComputedArgumentWitnesses.Destroy?,copy:ComputedArgumentWitnesses.Copy,equals:ComputedArgumentWitnesses.Equals,hash:ComputedArgumentWitnesses.Hash)*/
    ComputedArgumentWitnesses.prototype.initDestroyOptionalCopyComputedArgumentWitnessesCopyEqualsComputedArgumentWitnessesEqualsHashComputedArgumentWitnessesHash = function ($info, destroy, copy, equals, hash) {
    };
    ComputedArgumentWitnesses.$struct = true;
    ComputedArgumentWitnesses.$infoAddress = '0x7fb852b51db8';
    return ComputedArgumentWitnesses;
}());
var KeyPathComponent = /** @class */ (function () {
    function KeyPathComponent() {
    }
    KeyPathComponent.struct = function () { return Object.assign(new KeyPathComponent(), __assign({ rawValue: "struct" }, Array.from(arguments).slice(1))); };
    KeyPathComponent._class = function () { return Object.assign(new KeyPathComponent(), __assign({ rawValue: "_class" }, Array.from(arguments).slice(1))); };
    KeyPathComponent.get = function () { return Object.assign(new KeyPathComponent(), __assign({ rawValue: "get" }, Array.from(arguments).slice(1))); };
    KeyPathComponent.mutatingGetSet = function () { return Object.assign(new KeyPathComponent(), __assign({ rawValue: "mutatingGetSet" }, Array.from(arguments).slice(1))); };
    KeyPathComponent.nonmutatingGetSet = function () { return Object.assign(new KeyPathComponent(), __assign({ rawValue: "nonmutatingGetSet" }, Array.from(arguments).slice(1))); };
    Object.defineProperty(KeyPathComponent, "optionalChain", {
        get: function () { return Object.assign(new KeyPathComponent(), __assign({ rawValue: "optionalChain" }, Array.from(arguments).slice(1))); },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(KeyPathComponent, "optionalForce", {
        get: function () { return Object.assign(new KeyPathComponent(), __assign({ rawValue: "optionalForce" }, Array.from(arguments).slice(1))); },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(KeyPathComponent, "optionalWrap", {
        get: function () { return Object.assign(new KeyPathComponent(), __assign({ rawValue: "optionalWrap" }, Array.from(arguments).slice(1))); },
        enumerable: true,
        configurable: true
    });
    /*Swift.(file).KeyPathComponent.==infix(_:KeyPathComponent,_:KeyPathComponent)*/
    /*Swift.(file).Equatable.==infix(_:Self,_:Self)*/
    KeyPathComponent.infix_61_61 = function ($info, a, b) {
        return a == b;
    };
    /*Swift.(file).KeyPathComponent.hash(into:Hasher)*/
    /*Swift.(file).Hashable.hash(into:Hasher)*/
    KeyPathComponent.prototype.hashInto = function ($info, hasher$inout) {
    };
    /*Swift.(file).KeyPathComponent.hashValue*/ /*
    hashValue$get() {
    return this.hashValue
    }
    get hashValue() { return this.hashValue$get() }*/ ;
    var _e;
    KeyPathComponent.$infoAddress = '0x7fb851825ca8';
    KeyPathComponent.ArgumentRef = (_e = /** @class */ (function () {
            function class_5() {
            }
            /*Swift.(file).KeyPathComponent.ArgumentRef.init(data:UnsafeRawBufferPointer,witnesses:UnsafePointer<ComputedArgumentWitnesses>,witnessSizeAdjustment:Int)*/
            /*Swift.(file).KeyPathComponent.ArgumentRef.init(data:UnsafeRawBufferPointer,witnesses:UnsafePointer<ComputedArgumentWitnesses>,witnessSizeAdjustment:Int)*/
            class_5.prototype.initDataUnsafeRawBufferPointerWitnessesUnsafePointerWitnessSizeAdjustmentInt = function ($info, data, witnesses, witnessSizeAdjustment) {
            };
            /*Swift.(file).KeyPathComponent.ArgumentRef.data*/ /*
            data$get() {
            return this.data
            }
            get data() { return this.data$get() }*/ ;
            /*Swift.(file).KeyPathComponent.ArgumentRef.witnesses*/ /*
            witnesses$get() {
            return this.witnesses
            }
            get witnesses() { return this.witnesses$get() }*/ ;
            /*Swift.(file).KeyPathComponent.ArgumentRef.witnessSizeAdjustment*/ /*
            witnessSizeAdjustment$get() {
            return this.witnessSizeAdjustment
            }
            get witnessSizeAdjustment() { return this.witnessSizeAdjustment$get() }*/ ;
            return class_5;
        }()),
        _e.$struct = true,
        _e.$infoAddress = '0x7fb855381ad0',
        _e);
    return KeyPathComponent;
}());
var ClassHolder = /** @class */ (function () {
    function ClassHolder() {
    }
    /*Swift.(file).ClassHolder.instance*/ /*
    instance$get() {
    return this.instance
    }
    get instance() { return this.instance$get() }*/ ;
    /*Swift.(file).ClassHolder.init(previous:AnyObject?,instance:AnyObject)*/
    /*Swift.(file).ClassHolder.init(previous:AnyObject?,instance:AnyObject)*/
    ClassHolder.prototype.initPreviousOptionalInstanceAnyObject = function ($info, previous, instance) {
    };
    ClassHolder.$infoAddress = '0x7fb852b52040';
    return ClassHolder;
}());
var MutatingWritebackBuffer = /** @class */ (function () {
    function MutatingWritebackBuffer() {
    }
    /*Swift.(file).MutatingWritebackBuffer.base*/ /*
    readonly base$get() {
    return this.base
    }
    readonly get base() { return this.base$get() }*/ ;
    /*Swift.(file).MutatingWritebackBuffer.set*/ /*
    readonly set$get() {
    return this.set
    }
    readonly get set() { return this.set$get() }*/ ;
    /*Swift.(file).MutatingWritebackBuffer.argument*/ /*
    readonly argument$get() {
    return this.argument
    }
    readonly get argument() { return this.argument$get() }*/ ;
    /*Swift.(file).MutatingWritebackBuffer.argumentSize*/ /*
    readonly argumentSize$get() {
    return this.argumentSize
    }
    readonly get argumentSize() { return this.argumentSize$get() }*/ ;
    /*Swift.(file).MutatingWritebackBuffer.value*/ /*
    value$get() {
    return this.value
    }
    get value() { return this.value$get() }*/ ;
    /*Swift.(file).MutatingWritebackBuffer.init(previous:AnyObject?,base:UnsafeMutablePointer<CurValue>,set:@convention(thin) (NewValue, inout CurValue, UnsafeRawPointer, Int) -> (),argument:UnsafeRawPointer,argumentSize:Int,value:NewValue)*/
    /*Swift.(file).MutatingWritebackBuffer.init(previous:AnyObject?,base:UnsafeMutablePointer<CurValue>,set:@convention(thin) (NewValue, inout CurValue, UnsafeRawPointer, Int) -> (),argument:UnsafeRawPointer,argumentSize:Int,value:NewValue)*/
    MutatingWritebackBuffer.prototype.initPreviousOptionalBaseUnsafeMutablePointerSetfunction_typeArgumentUnsafeRawPointerArgumentSizeIntValue = function ($info, previous, base, set, argument, argumentSize, value) {
    };
    MutatingWritebackBuffer.$infoAddress = '0x7fb852b523b8';
    return MutatingWritebackBuffer;
}());
var NonmutatingWritebackBuffer = /** @class */ (function () {
    function NonmutatingWritebackBuffer() {
    }
    /*Swift.(file).NonmutatingWritebackBuffer.base*/ /*
    readonly base$get() {
    return this.base
    }
    readonly get base() { return this.base$get() }*/ ;
    /*Swift.(file).NonmutatingWritebackBuffer.set*/ /*
    readonly set$get() {
    return this.set
    }
    readonly get set() { return this.set$get() }*/ ;
    /*Swift.(file).NonmutatingWritebackBuffer.argument*/ /*
    readonly argument$get() {
    return this.argument
    }
    readonly get argument() { return this.argument$get() }*/ ;
    /*Swift.(file).NonmutatingWritebackBuffer.argumentSize*/ /*
    readonly argumentSize$get() {
    return this.argumentSize
    }
    readonly get argumentSize() { return this.argumentSize$get() }*/ ;
    /*Swift.(file).NonmutatingWritebackBuffer.value*/ /*
    value$get() {
    return this.value
    }
    get value() { return this.value$get() }*/ ;
    /*Swift.(file).NonmutatingWritebackBuffer.init(previous:AnyObject?,base:CurValue,set:@convention(thin) (NewValue, CurValue, UnsafeRawPointer, Int) -> (),argument:UnsafeRawPointer,argumentSize:Int,value:NewValue)*/
    /*Swift.(file).NonmutatingWritebackBuffer.init(previous:AnyObject?,base:CurValue,set:@convention(thin) (NewValue, CurValue, UnsafeRawPointer, Int) -> (),argument:UnsafeRawPointer,argumentSize:Int,value:NewValue)*/
    NonmutatingWritebackBuffer.prototype.initPreviousOptionalBaseSetfunction_typeArgumentUnsafeRawPointerArgumentSizeIntValue = function ($info, previous, base, set, argument, argumentSize, value) {
    };
    NonmutatingWritebackBuffer.$infoAddress = '0x7fb852b52708';
    return NonmutatingWritebackBuffer;
}());
var KeyPathComputedIDKind = /** @class */ (function () {
    function KeyPathComputedIDKind() {
    }
    Object.defineProperty(KeyPathComputedIDKind, "pointer", {
        get: function () { return Object.assign(new KeyPathComputedIDKind(), __assign({ rawValue: "pointer" }, Array.from(arguments).slice(1))); },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(KeyPathComputedIDKind, "storedPropertyIndex", {
        get: function () { return Object.assign(new KeyPathComputedIDKind(), __assign({ rawValue: "storedPropertyIndex" }, Array.from(arguments).slice(1))); },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(KeyPathComputedIDKind, "vtableOffset", {
        get: function () { return Object.assign(new KeyPathComputedIDKind(), __assign({ rawValue: "vtableOffset" }, Array.from(arguments).slice(1))); },
        enumerable: true,
        configurable: true
    });
    /*Swift.(file).KeyPathComputedIDKind.==(_:KeyPathComputedIDKind,_:KeyPathComputedIDKind)*/
    /*Swift.(file).Equatable.==infix(_:Self,_:Self)*/
    KeyPathComputedIDKind.infix_61_61 = function ($info, a, b) {
        return a == b;
    };
    /*Swift.(file).KeyPathComputedIDKind.hashValue*/ /*
    hashValue$get() {
    return this.hashValue
    }
    get hashValue() { return this.hashValue$get() }*/ ;
    /*Swift.(file).KeyPathComputedIDKind.hash(into:Hasher)*/
    /*Swift.(file).Hashable.hash(into:Hasher)*/
    KeyPathComputedIDKind.prototype.hashInto = function ($info, hasher$inout) {
    };
    KeyPathComputedIDKind.$infoAddress = '0x7fb851826118';
    return KeyPathComputedIDKind;
}());
var RawKeyPathComponent = /** @class */ (function () {
    function RawKeyPathComponent() {
    }
    /*Swift.(file).RawKeyPathComponent.init(header:RawKeyPathComponent.Header,body:UnsafeRawBufferPointer)*/
    /*Swift.(file).RawKeyPathComponent.init(header:RawKeyPathComponent.Header,body:UnsafeRawBufferPointer)*/
    RawKeyPathComponent.prototype.initHeaderRawKeyPathComponentHeaderBodyUnsafeRawBufferPointer = function ($info, header, body) {
    };
    /*Swift.(file).RawKeyPathComponent.header*/ /*
    header$get() {
    return this.header
    }
    get header() { return this.header$get() }*/ ;
    /*Swift.(file).RawKeyPathComponent.body*/ /*
    body$get() {
    return this.body
    }
    get body() { return this.body$get() }*/ ;
    /*Swift.(file).RawKeyPathComponent.value*/ /*
    value$get() {
    return this.value
    }
    get value() { return this.value$get() }*/ ;
    /*Swift.(file).RawKeyPathComponent.destroy()*/
    /*Swift.(file).RawKeyPathComponent.destroy()*/
    RawKeyPathComponent.prototype.destroy = function ($info) {
    };
    /*Swift.(file).RawKeyPathComponent.clone(into:UnsafeMutableRawBufferPointer,endOfReferencePrefix:Bool)*/
    /*Swift.(file).RawKeyPathComponent.clone(into:UnsafeMutableRawBufferPointer,endOfReferencePrefix:Bool)*/
    RawKeyPathComponent.prototype.cloneIntoEndOfReferencePrefix = function ($info, buffer$inout, endOfReferencePrefix) {
    };
    var _f, _g;
    RawKeyPathComponent.$struct = true;
    RawKeyPathComponent.$infoAddress = '0x7fb852b52ca0';
    RawKeyPathComponent.Header = (_f = /** @class */ (function () {
            function class_6() {
            }
            /*Swift.(file).RawKeyPathComponent.Header.discriminatorMask*/ /*
            static discriminatorMask$get() {
            return this.discriminatorMask
            }
            static get discriminatorMask() { return this.discriminatorMask$get() }*/ ;
            /*Swift.(file).RawKeyPathComponent.Header.discriminatorShift*/ /*
            static discriminatorShift$get() {
            return this.discriminatorShift
            }
            static get discriminatorShift() { return this.discriminatorShift$get() }*/ ;
            /*Swift.(file).RawKeyPathComponent.Header.externalTag*/ /*
            static externalTag$get() {
            return this.externalTag
            }
            static get externalTag() { return this.externalTag$get() }*/ ;
            /*Swift.(file).RawKeyPathComponent.Header.structTag*/ /*
            static structTag$get() {
            return this.structTag
            }
            static get structTag() { return this.structTag$get() }*/ ;
            /*Swift.(file).RawKeyPathComponent.Header.computedTag*/ /*
            static computedTag$get() {
            return this.computedTag
            }
            static get computedTag() { return this.computedTag$get() }*/ ;
            /*Swift.(file).RawKeyPathComponent.Header.classTag*/ /*
            static classTag$get() {
            return this.classTag
            }
            static get classTag() { return this.classTag$get() }*/ ;
            /*Swift.(file).RawKeyPathComponent.Header.optionalTag*/ /*
            static optionalTag$get() {
            return this.optionalTag
            }
            static get optionalTag() { return this.optionalTag$get() }*/ ;
            /*Swift.(file).RawKeyPathComponent.Header.optionalChainPayload*/ /*
            static optionalChainPayload$get() {
            return this.optionalChainPayload
            }
            static get optionalChainPayload() { return this.optionalChainPayload$get() }*/ ;
            /*Swift.(file).RawKeyPathComponent.Header.optionalWrapPayload*/ /*
            static optionalWrapPayload$get() {
            return this.optionalWrapPayload
            }
            static get optionalWrapPayload() { return this.optionalWrapPayload$get() }*/ ;
            /*Swift.(file).RawKeyPathComponent.Header.optionalForcePayload*/ /*
            static optionalForcePayload$get() {
            return this.optionalForcePayload
            }
            static get optionalForcePayload() { return this.optionalForcePayload$get() }*/ ;
            /*Swift.(file).RawKeyPathComponent.Header.endOfReferencePrefixFlag*/ /*
            static endOfReferencePrefixFlag$get() {
            return this.endOfReferencePrefixFlag
            }
            static get endOfReferencePrefixFlag() { return this.endOfReferencePrefixFlag$get() }*/ ;
            /*Swift.(file).RawKeyPathComponent.Header.storedMutableFlag*/ /*
            static storedMutableFlag$get() {
            return this.storedMutableFlag
            }
            static get storedMutableFlag() { return this.storedMutableFlag$get() }*/ ;
            /*Swift.(file).RawKeyPathComponent.Header.storedOffsetPayloadMask*/ /*
            static storedOffsetPayloadMask$get() {
            return this.storedOffsetPayloadMask
            }
            static get storedOffsetPayloadMask() { return this.storedOffsetPayloadMask$get() }*/ ;
            /*Swift.(file).RawKeyPathComponent.Header.outOfLineOffsetPayload*/ /*
            static outOfLineOffsetPayload$get() {
            return this.outOfLineOffsetPayload
            }
            static get outOfLineOffsetPayload() { return this.outOfLineOffsetPayload$get() }*/ ;
            /*Swift.(file).RawKeyPathComponent.Header.unresolvedFieldOffsetPayload*/ /*
            static unresolvedFieldOffsetPayload$get() {
            return this.unresolvedFieldOffsetPayload
            }
            static get unresolvedFieldOffsetPayload() { return this.unresolvedFieldOffsetPayload$get() }*/ ;
            /*Swift.(file).RawKeyPathComponent.Header.unresolvedIndirectOffsetPayload*/ /*
            static unresolvedIndirectOffsetPayload$get() {
            return this.unresolvedIndirectOffsetPayload
            }
            static get unresolvedIndirectOffsetPayload() { return this.unresolvedIndirectOffsetPayload$get() }*/ ;
            /*Swift.(file).RawKeyPathComponent.Header.maximumOffsetPayload*/ /*
            static maximumOffsetPayload$get() {
            return this.maximumOffsetPayload
            }
            static get maximumOffsetPayload() { return this.maximumOffsetPayload$get() }*/ ;
            /*Swift.(file).RawKeyPathComponent.Header.isStoredMutable*/ /*
            isStoredMutable$get() {
            return this.isStoredMutable
            }
            get isStoredMutable() { return this.isStoredMutable$get() }*/ ;
            /*Swift.(file).RawKeyPathComponent.Header.computedMutatingFlag*/ /*
            static computedMutatingFlag$get() {
            return this.computedMutatingFlag
            }
            static get computedMutatingFlag() { return this.computedMutatingFlag$get() }*/ ;
            /*Swift.(file).RawKeyPathComponent.Header.isComputedMutating*/ /*
            isComputedMutating$get() {
            return this.isComputedMutating
            }
            get isComputedMutating() { return this.isComputedMutating$get() }*/ ;
            /*Swift.(file).RawKeyPathComponent.Header.computedSettableFlag*/ /*
            static computedSettableFlag$get() {
            return this.computedSettableFlag
            }
            static get computedSettableFlag() { return this.computedSettableFlag$get() }*/ ;
            /*Swift.(file).RawKeyPathComponent.Header.isComputedSettable*/ /*
            isComputedSettable$get() {
            return this.isComputedSettable
            }
            get isComputedSettable() { return this.isComputedSettable$get() }*/ ;
            /*Swift.(file).RawKeyPathComponent.Header.computedIDByStoredPropertyFlag*/ /*
            static computedIDByStoredPropertyFlag$get() {
            return this.computedIDByStoredPropertyFlag
            }
            static get computedIDByStoredPropertyFlag() { return this.computedIDByStoredPropertyFlag$get() }*/ ;
            /*Swift.(file).RawKeyPathComponent.Header.computedIDByVTableOffsetFlag*/ /*
            static computedIDByVTableOffsetFlag$get() {
            return this.computedIDByVTableOffsetFlag
            }
            static get computedIDByVTableOffsetFlag() { return this.computedIDByVTableOffsetFlag$get() }*/ ;
            /*Swift.(file).RawKeyPathComponent.Header.computedIDKind*/ /*
            computedIDKind$get() {
            return this.computedIDKind
            }
            get computedIDKind() { return this.computedIDKind$get() }*/ ;
            /*Swift.(file).RawKeyPathComponent.Header.computedHasArgumentsFlag*/ /*
            static computedHasArgumentsFlag$get() {
            return this.computedHasArgumentsFlag
            }
            static get computedHasArgumentsFlag() { return this.computedHasArgumentsFlag$get() }*/ ;
            /*Swift.(file).RawKeyPathComponent.Header.hasComputedArguments*/ /*
            hasComputedArguments$get() {
            return this.hasComputedArguments
            }
            get hasComputedArguments() { return this.hasComputedArguments$get() }*/ ;
            /*Swift.(file).RawKeyPathComponent.Header.computedInstantiatedFromExternalWithArgumentsFlag*/ /*
            static computedInstantiatedFromExternalWithArgumentsFlag$get() {
            return this.computedInstantiatedFromExternalWithArgumentsFlag
            }
            static get computedInstantiatedFromExternalWithArgumentsFlag() { return this.computedInstantiatedFromExternalWithArgumentsFlag$get() }*/ ;
            /*Swift.(file).RawKeyPathComponent.Header.isComputedInstantiatedFromExternalWithArguments*/ /*
            isComputedInstantiatedFromExternalWithArguments$get() {
            return this.isComputedInstantiatedFromExternalWithArguments
            }
            get isComputedInstantiatedFromExternalWithArguments() { return this.isComputedInstantiatedFromExternalWithArguments$get() }*/ ;
            /*Swift.(file).RawKeyPathComponent.Header.externalWithArgumentsExtraSize*/ /*
            static externalWithArgumentsExtraSize$get() {
            return this.externalWithArgumentsExtraSize
            }
            static get externalWithArgumentsExtraSize() { return this.externalWithArgumentsExtraSize$get() }*/ ;
            /*Swift.(file).RawKeyPathComponent.Header.computedIDResolutionMask*/ /*
            static computedIDResolutionMask$get() {
            return this.computedIDResolutionMask
            }
            static get computedIDResolutionMask() { return this.computedIDResolutionMask$get() }*/ ;
            /*Swift.(file).RawKeyPathComponent.Header.computedIDResolved*/ /*
            static computedIDResolved$get() {
            return this.computedIDResolved
            }
            static get computedIDResolved() { return this.computedIDResolved$get() }*/ ;
            /*Swift.(file).RawKeyPathComponent.Header.computedIDUnresolvedIndirectPointer*/ /*
            static computedIDUnresolvedIndirectPointer$get() {
            return this.computedIDUnresolvedIndirectPointer
            }
            static get computedIDUnresolvedIndirectPointer() { return this.computedIDUnresolvedIndirectPointer$get() }*/ ;
            /*Swift.(file).RawKeyPathComponent.Header.isComputedIDResolved*/ /*
            isComputedIDResolved$get() {
            return this.isComputedIDResolved
            }
            get isComputedIDResolved() { return this.isComputedIDResolved$get() }*/ ;
            /*Swift.(file).RawKeyPathComponent.Header.discriminator*/ /*
            discriminator$get() {
            return this.discriminator
            }
            get discriminator() { return this.discriminator$get() }*/ ;
            /*Swift.(file).RawKeyPathComponent.Header.payload*/ /*
            payload$get() {
            return this.payload
            }
            get payload() { return this.payload$get() }*/ ;
            /*Swift.(file).RawKeyPathComponent.Header.storedOffsetPayload*/ /*
            storedOffsetPayload$get() {
            return this.storedOffsetPayload
            }
            get storedOffsetPayload() { return this.storedOffsetPayload$get() }*/ ;
            /*Swift.(file).RawKeyPathComponent.Header.endOfReferencePrefix*/ /*
            endOfReferencePrefix$get() {
            return this.endOfReferencePrefix
            }
            get endOfReferencePrefix() { return this.endOfReferencePrefix$get() }*/ ;
            /*Swift.(file).RawKeyPathComponent.Header.kind*/ /*
            kind$get() {
            return this.kind
            }
            get kind() { return this.kind$get() }*/ ;
            /*Swift.(file).RawKeyPathComponent.Header.pointerAlignmentSkew*/ /*
            static pointerAlignmentSkew$get() {
            return this.pointerAlignmentSkew
            }
            static get pointerAlignmentSkew() { return this.pointerAlignmentSkew$get() }*/ ;
            /*Swift.(file).RawKeyPathComponent.Header.isTrivialPropertyDescriptor*/ /*
            isTrivialPropertyDescriptor$get() {
            return this.isTrivialPropertyDescriptor
            }
            get isTrivialPropertyDescriptor() { return this.isTrivialPropertyDescriptor$get() }*/ ;
            /*Swift.(file).RawKeyPathComponent.Header.patternComponentBodySize*/ /*
            patternComponentBodySize$get() {
            return this.patternComponentBodySize
            }
            get patternComponentBodySize() { return this.patternComponentBodySize$get() }*/ ;
            /*Swift.(file).RawKeyPathComponent.Header.propertyDescriptorBodySize*/ /*
            propertyDescriptorBodySize$get() {
            return this.propertyDescriptorBodySize
            }
            get propertyDescriptorBodySize() { return this.propertyDescriptorBodySize$get() }*/ ;
            /*Swift.(file).RawKeyPathComponent.Header.init(discriminator:UInt32,payload:UInt32)*/
            /*Swift.(file).RawKeyPathComponent.Header.init(discriminator:UInt32,payload:UInt32)*/
            class_6.prototype.initDiscriminatorUInt32PayloadUInt32 = function ($info, discriminator, payload) {
            };
            /*Swift.(file).RawKeyPathComponent.Header.init(optionalForce:())*/
            /*Swift.(file).RawKeyPathComponent.Header.init(optionalForce:())*/
            class_6.prototype.initOptionalForcetuple_type = function ($info, optionalForce) {
                return optionalForce;
            };
            /*Swift.(file).RawKeyPathComponent.Header.init(optionalWrap:())*/
            /*Swift.(file).RawKeyPathComponent.Header.init(optionalWrap:())*/
            class_6.prototype.initOptionalWraptuple_type = function ($info, optionalWrap) {
                return optionalWrap;
            };
            /*Swift.(file).RawKeyPathComponent.Header.init(optionalChain:())*/
            /*Swift.(file).RawKeyPathComponent.Header.init(optionalChain:())*/
            class_6.prototype.initOptionalChaintuple_type = function ($info, optionalChain) {
                return optionalChain;
            };
            /*Swift.(file).RawKeyPathComponent.Header.init(stored:KeyPathStructOrClass,mutable:Bool,inlineOffset:UInt32)*/
            /*Swift.(file).RawKeyPathComponent.Header.init(stored:KeyPathStructOrClass,mutable:Bool,inlineOffset:UInt32)*/
            class_6.prototype.initStoredKeyPathStructOrClassMutableBoolInlineOffsetUInt32 = function ($info, kind, mutable, inlineOffset) {
            };
            /*Swift.(file).RawKeyPathComponent.Header.init(storedWithOutOfLineOffset:KeyPathStructOrClass,mutable:Bool)*/
            /*Swift.(file).RawKeyPathComponent.Header.init(storedWithOutOfLineOffset:KeyPathStructOrClass,mutable:Bool)*/
            class_6.prototype.initStoredWithOutOfLineOffsetKeyPathStructOrClassMutableBool = function ($info, kind, mutable) {
            };
            /*Swift.(file).RawKeyPathComponent.Header.init(computedWithIDKind:KeyPathComputedIDKind,mutating:Bool,settable:Bool,hasArguments:Bool,instantiatedFromExternalWithArguments:Bool)*/
            /*Swift.(file).RawKeyPathComponent.Header.init(computedWithIDKind:KeyPathComputedIDKind,mutating:Bool,settable:Bool,hasArguments:Bool,instantiatedFromExternalWithArguments:Bool)*/
            class_6.prototype.initComputedWithIDKindKeyPathComputedIDKindMutatingBoolSettableBoolHasArgumentsBoolInstantiatedFromExternalWithArgumentsBool = function ($info, kind, mutating, settable, hasArguments, instantiatedFromExternalWithArguments) {
            };
            return class_6;
        }()),
        _f.$struct = true,
        _f.$infoAddress = '0x7fb852da6050',
        _f);
    RawKeyPathComponent.ProjectionResult = (_g = /** @class */ (function () {
            function class_7() {
            }
            class_7._continue = function () { return Object.assign(new RawKeyPathComponent.ProjectionResult(), __assign({ rawValue: "_continue" }, Array.from(arguments).slice(1))); };
            class_7._break = function () { return Object.assign(new RawKeyPathComponent.ProjectionResult(), __assign({ rawValue: "_break" }, Array.from(arguments).slice(1))); };
            /*Swift.(file).RawKeyPathComponent.ProjectionResult.assumingContinue*/ /*
            assumingContinue$get() {
            return this.assumingContinue
            }
            get assumingContinue() { return this.assumingContinue$get() }*/ ;
            return class_7;
        }()),
        _g.$infoAddress = '0x7fb852da9838',
        _g);
    return RawKeyPathComponent;
}());
var KeyPathBuffer = /** @class */ (function () {
    function KeyPathBuffer() {
    }
    /*Swift.(file).KeyPathBuffer.trivial*/ /*
    trivial$get() {
    return this.trivial
    }
    get trivial() { return this.trivial$get() }*/ ;
    /*Swift.(file).KeyPathBuffer.hasReferencePrefix*/ /*
    hasReferencePrefix$get() {
    return this.hasReferencePrefix
    }
    get hasReferencePrefix() { return this.hasReferencePrefix$get() }*/ ;
    /*Swift.(file).KeyPathBuffer.mutableData*/ /*
    mutableData$get() {
    return this.mutableData
    }
    get mutableData() { return this.mutableData$get() }*/ ;
    /*Swift.(file).KeyPathBuffer.init(base:UnsafeRawPointer)*/
    /*Swift.(file).KeyPathBuffer.init(base:UnsafeRawPointer)*/
    KeyPathBuffer.prototype.initBaseUnsafeRawPointer = function ($info, base) {
        return base;
    };
    /*Swift.(file).KeyPathBuffer.init(partialData:UnsafeRawBufferPointer,trivial:Bool,hasReferencePrefix:Bool)*/
    /*Swift.(file).KeyPathBuffer.init(partialData:UnsafeRawBufferPointer,trivial:Bool,hasReferencePrefix:Bool)*/
    KeyPathBuffer.prototype.initPartialDataUnsafeRawBufferPointerTrivialBoolHasReferencePrefixBool = function ($info, partialData, trivial, hasReferencePrefix) {
    };
    /*Swift.(file).KeyPathBuffer.destroy()*/
    /*Swift.(file).KeyPathBuffer.destroy()*/
    KeyPathBuffer.prototype.destroy = function ($info) {
    };
    /*Swift.(file).KeyPathBuffer.next()*/
    /*Swift.(file).KeyPathBuffer.next()*/
    KeyPathBuffer.prototype.next = function ($info) {
    };
    var _h;
    KeyPathBuffer.$struct = true;
    KeyPathBuffer.$infoAddress = '0x7fb852b53668';
    KeyPathBuffer.Header = (_h = /** @class */ (function () {
            function class_8() {
            }
            /*Swift.(file).KeyPathBuffer.Header.reservedMask*/ /*
            static reservedMask$get() {
            return this.reservedMask
            }
            static get reservedMask() { return this.reservedMask$get() }*/ ;
            /*Swift.(file).KeyPathBuffer.Header.trivialFlag*/ /*
            static trivialFlag$get() {
            return this.trivialFlag
            }
            static get trivialFlag() { return this.trivialFlag$get() }*/ ;
            /*Swift.(file).KeyPathBuffer.Header.hasReferencePrefixFlag*/ /*
            static hasReferencePrefixFlag$get() {
            return this.hasReferencePrefixFlag
            }
            static get hasReferencePrefixFlag() { return this.hasReferencePrefixFlag$get() }*/ ;
            /*Swift.(file).KeyPathBuffer.Header.init(size:Int,trivial:Bool,hasReferencePrefix:Bool)*/
            /*Swift.(file).KeyPathBuffer.Header.init(size:Int,trivial:Bool,hasReferencePrefix:Bool)*/
            class_8.prototype.initSizeIntTrivialBoolHasReferencePrefixBool = function ($info, size, trivial, hasReferencePrefix) {
            };
            /*Swift.(file).KeyPathBuffer.Header.size*/ /*
            size$get() {
            return this.size
            }
            get size() { return this.size$get() }*/ ;
            /*Swift.(file).KeyPathBuffer.Header.trivial*/ /*
            trivial$get() {
            return this.trivial
            }
            get trivial() { return this.trivial$get() }*/ ;
            /*Swift.(file).KeyPathBuffer.Header.hasReferencePrefix*/ /*
            hasReferencePrefix$get() {
            return this.hasReferencePrefix
            }
            get hasReferencePrefix() { return this.hasReferencePrefix$get() }*/ ;
            /*Swift.(file).KeyPathBuffer.Header.instantiableInLine*/ /*
            instantiableInLine$get() {
            return this.instantiableInLine
            }
            get instantiableInLine() { return this.instantiableInLine$get() }*/ ;
            /*Swift.(file).KeyPathBuffer.Header.validateReservedBits()*/
            /*Swift.(file).KeyPathBuffer.Header.validateReservedBits()*/
            class_8.prototype.validateReservedBits = function ($info) {
            };
            return class_8;
        }()),
        _h.$struct = true,
        _h.$infoAddress = '0x7fb851359528',
        _h);
    return KeyPathBuffer;
}());
var _AppendKeyPath$implementation = /** @class */ (function () {
    function _AppendKeyPath$implementation() {
    }
    /*Swift.(file)._AppendKeyPath.appending(path:AnyKeyPath)*/
    _AppendKeyPath$implementation.prototype.appendingPath = function ($info, path) {
    };
    /*Swift.(file)._AppendKeyPath.appending(path:AnyKeyPath)*/
    /*Swift.(file)._AppendKeyPath.appending(path:AnyKeyPath)*/
    _AppendKeyPath$implementation.prototype.appendingPath = function ($info, path) {
    };
    /*Swift.(file)._AppendKeyPath.appending(path:KeyPath<AppendedRoot, AppendedValue>)*/
    /*Swift.(file)._AppendKeyPath.appending(path:KeyPath<AppendedRoot, AppendedValue>)*/
    _AppendKeyPath$implementation.prototype.appendingPath = function ($info, path) {
    };
    /*Swift.(file)._AppendKeyPath.appending(path:ReferenceWritableKeyPath<AppendedRoot, AppendedValue>)*/
    /*Swift.(file)._AppendKeyPath.appending(path:ReferenceWritableKeyPath<AppendedRoot, AppendedValue>)*/
    _AppendKeyPath$implementation.prototype.appendingPath = function ($info, path) {
    };
    /*Swift.(file)._AppendKeyPath.appending(path:KeyPath<Value, AppendedValue>)*/
    /*Swift.(file)._AppendKeyPath.appending(path:KeyPath<Value, AppendedValue>)*/
    _AppendKeyPath$implementation.prototype.appendingPath = function ($info, path) {
    };
    /*Swift.(file)._AppendKeyPath.appending(path:ReferenceWritableKeyPath<Value, AppendedValue>)*/
    /*Swift.(file)._AppendKeyPath.appending(path:ReferenceWritableKeyPath<Value, AppendedValue>)*/
    _AppendKeyPath$implementation.prototype.appendingPath = function ($info, path) {
    };
    /*Swift.(file)._AppendKeyPath.appending(path:WritableKeyPath<Value, AppendedValue>)*/
    /*Swift.(file)._AppendKeyPath.appending(path:WritableKeyPath<Value, AppendedValue>)*/
    _AppendKeyPath$implementation.prototype.appendingPath = function ($info, path) {
    };
    /*Swift.(file)._AppendKeyPath.appending(path:ReferenceWritableKeyPath<Value, AppendedValue>)*/
    /*Swift.(file)._AppendKeyPath.appending(path:ReferenceWritableKeyPath<Value, AppendedValue>)*/
    _AppendKeyPath$implementation.prototype.appendingPath = function ($info, path) {
    };
    /*Swift.(file)._AppendKeyPath.appending(path:WritableKeyPath<Value, AppendedValue>)*/
    /*Swift.(file)._AppendKeyPath.appending(path:WritableKeyPath<Value, AppendedValue>)*/
    _AppendKeyPath$implementation.prototype.appendingPath = function ($info, path) {
    };
    return _AppendKeyPath$implementation;
}());
var KeyPathStructOrClass = /** @class */ (function () {
    function KeyPathStructOrClass() {
    }
    Object.defineProperty(KeyPathStructOrClass, "struct", {
        get: function () { return Object.assign(new KeyPathStructOrClass(), __assign({ rawValue: "struct" }, Array.from(arguments).slice(1))); },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(KeyPathStructOrClass, "_class", {
        get: function () { return Object.assign(new KeyPathStructOrClass(), __assign({ rawValue: "_class" }, Array.from(arguments).slice(1))); },
        enumerable: true,
        configurable: true
    });
    /*Swift.(file).KeyPathStructOrClass.==(_:KeyPathStructOrClass,_:KeyPathStructOrClass)*/
    /*Swift.(file).Equatable.==infix(_:Self,_:Self)*/
    KeyPathStructOrClass.infix_61_61 = function ($info, a, b) {
        return a == b;
    };
    /*Swift.(file).KeyPathStructOrClass.hashValue*/ /*
    hashValue$get() {
    return this.hashValue
    }
    get hashValue() { return this.hashValue$get() }*/ ;
    /*Swift.(file).KeyPathStructOrClass.hash(into:Hasher)*/
    /*Swift.(file).Hashable.hash(into:Hasher)*/
    KeyPathStructOrClass.prototype.hashInto = function ($info, hasher$inout) {
    };
    KeyPathStructOrClass.$infoAddress = '0x7fb851826558';
    return KeyPathStructOrClass;
}());
var KeyPathPatternStoredOffset = /** @class */ (function () {
    function KeyPathPatternStoredOffset() {
    }
    KeyPathPatternStoredOffset.inline = function () { return Object.assign(new KeyPathPatternStoredOffset(), __assign({ rawValue: "inline" }, Array.from(arguments).slice(1))); };
    KeyPathPatternStoredOffset.outOfLine = function () { return Object.assign(new KeyPathPatternStoredOffset(), __assign({ rawValue: "outOfLine" }, Array.from(arguments).slice(1))); };
    KeyPathPatternStoredOffset.unresolvedFieldOffset = function () { return Object.assign(new KeyPathPatternStoredOffset(), __assign({ rawValue: "unresolvedFieldOffset" }, Array.from(arguments).slice(1))); };
    KeyPathPatternStoredOffset.unresolvedIndirectOffset = function () { return Object.assign(new KeyPathPatternStoredOffset(), __assign({ rawValue: "unresolvedIndirectOffset" }, Array.from(arguments).slice(1))); };
    KeyPathPatternStoredOffset.$infoAddress = '0x7fb852b58680';
    return KeyPathPatternStoredOffset;
}());
var KeyPathPatternComputedArguments = /** @class */ (function () {
    function KeyPathPatternComputedArguments() {
    }
    /*Swift.(file).KeyPathPatternComputedArguments.witnesses*/ /*
    witnesses$get() {
    return this.witnesses
    }
    get witnesses() { return this.witnesses$get() }*/ ;
    /*Swift.(file).KeyPathPatternComputedArguments.initializer*/ /*
    initializer$get() {
    return this.initializer
    }
    get initializer() { return this.initializer$get() }*/ ;
    /*Swift.(file).KeyPathPatternComputedArguments.init(getLayout:KeyPathComputedArgumentLayoutFn,witnesses:UnsafePointer<ComputedArgumentWitnesses>,initializer:KeyPathComputedArgumentInitializerFn)*/
    /*Swift.(file).KeyPathPatternComputedArguments.init(getLayout:KeyPathComputedArgumentLayoutFn,witnesses:UnsafePointer<ComputedArgumentWitnesses>,initializer:KeyPathComputedArgumentInitializerFn)*/
    KeyPathPatternComputedArguments.prototype.initGetLayoutKeyPathComputedArgumentLayoutFnWitnessesUnsafePointerInitializerKeyPathComputedArgumentInitializerFn = function ($info, getLayout, witnesses, initializer) {
    };
    KeyPathPatternComputedArguments.$struct = true;
    KeyPathPatternComputedArguments.$infoAddress = '0x7fb852b58800';
    return KeyPathPatternComputedArguments;
}());
var KeyPathPatternVisitor$implementation = /** @class */ (function () {
    function KeyPathPatternVisitor$implementation() {
    }
    return KeyPathPatternVisitor$implementation;
}());
var GetKeyPathClassAndInstanceSizeFromPattern = /** @class */ (function () {
    function GetKeyPathClassAndInstanceSizeFromPattern() {
    }
    /*Swift.(file).GetKeyPathClassAndInstanceSizeFromPattern.capability*/ /*
    capability$get() {
    return this.capability
    }
    get capability() { return this.capability$get() }*/ ;
    /*Swift.(file).GetKeyPathClassAndInstanceSizeFromPattern.didChain*/ /*
    didChain$get() {
    return this.didChain
    }
    get didChain() { return this.didChain$get() }*/ ;
    /*Swift.(file).GetKeyPathClassAndInstanceSizeFromPattern.root*/ /*
    root$get() {
    return this.root
    }
    get root() { return this.root$get() }*/ ;
    /*Swift.(file).GetKeyPathClassAndInstanceSizeFromPattern.leaf*/ /*
    leaf$get() {
    return this.leaf
    }
    get leaf() { return this.leaf$get() }*/ ;
    /*Swift.(file).GetKeyPathClassAndInstanceSizeFromPattern.genericEnvironment*/ /*
    genericEnvironment$get() {
    return this.genericEnvironment
    }
    get genericEnvironment() { return this.genericEnvironment$get() }*/ ;
    /*Swift.(file).GetKeyPathClassAndInstanceSizeFromPattern.patternArgs*/ /*
    readonly patternArgs$get() {
    return this.patternArgs
    }
    readonly get patternArgs() { return this.patternArgs$get() }*/ ;
    /*Swift.(file).GetKeyPathClassAndInstanceSizeFromPattern.init(patternArgs:UnsafeRawPointer?)*/
    /*Swift.(file).GetKeyPathClassAndInstanceSizeFromPattern.init(patternArgs:UnsafeRawPointer?)*/
    GetKeyPathClassAndInstanceSizeFromPattern.prototype.initPatternArgsOptional = function ($info, patternArgs) {
        return patternArgs;
    };
    /*Swift.(file).GetKeyPathClassAndInstanceSizeFromPattern.roundUpToPointerAlignment()*/
    /*Swift.(file).GetKeyPathClassAndInstanceSizeFromPattern.roundUpToPointerAlignment()*/
    GetKeyPathClassAndInstanceSizeFromPattern.prototype.roundUpToPointerAlignment = function ($info) {
    };
    /*Swift.(file).GetKeyPathClassAndInstanceSizeFromPattern.visitHeader(genericEnvironment:UnsafeRawPointer?,rootMetadataRef:MetadataReference,leafMetadataRef:MetadataReference,kvcCompatibilityString:UnsafeRawPointer?)*/
    /*Swift.(file).KeyPathPatternVisitor.visitHeader(genericEnvironment:UnsafeRawPointer?,rootMetadataRef:MetadataReference,leafMetadataRef:MetadataReference,kvcCompatibilityString:UnsafeRawPointer?)*/
    GetKeyPathClassAndInstanceSizeFromPattern.prototype.visitHeaderGenericEnvironmentRootMetadataRefLeafMetadataRefKvcCompatibilityString = function ($info, genericEnvironment, rootMetadataRef, leafMetadataRef, kvcCompatibilityString) {
    };
    /*Swift.(file).GetKeyPathClassAndInstanceSizeFromPattern.visitStoredComponent(kind:KeyPathStructOrClass,mutable:Bool,offset:KeyPathPatternStoredOffset)*/
    /*Swift.(file).KeyPathPatternVisitor.visitStoredComponent(kind:KeyPathStructOrClass,mutable:Bool,offset:KeyPathPatternStoredOffset)*/
    GetKeyPathClassAndInstanceSizeFromPattern.prototype.visitStoredComponentKindMutableOffset = function ($info, kind, mutable, offset) {
    };
    /*Swift.(file).GetKeyPathClassAndInstanceSizeFromPattern.visitComputedComponent(mutating:Bool,idKind:KeyPathComputedIDKind,idResolved:Bool,idValueBase:UnsafeRawPointer,idValue:Int32,getter:UnsafeRawPointer,setter:UnsafeRawPointer?,arguments:KeyPathPatternComputedArguments?,externalArgs:UnsafeBufferPointer<Int32>?)*/
    /*Swift.(file).KeyPathPatternVisitor.visitComputedComponent(mutating:Bool,idKind:KeyPathComputedIDKind,idResolved:Bool,idValueBase:UnsafeRawPointer,idValue:Int32,getter:UnsafeRawPointer,setter:UnsafeRawPointer?,arguments:KeyPathPatternComputedArguments?,externalArgs:UnsafeBufferPointer<Int32>?)*/
    GetKeyPathClassAndInstanceSizeFromPattern.prototype.visitComputedComponentMutatingIdKindIdResolvedIdValueBaseIdValueGetterSetterArgumentsExternalArgs = function ($info, mutating, idKind, idResolved, idValueBase, idValue, getter, setter, arguments, externalArgs) {
    };
    /*Swift.(file).GetKeyPathClassAndInstanceSizeFromPattern.visitOptionalChainComponent()*/
    /*Swift.(file).KeyPathPatternVisitor.visitOptionalChainComponent()*/
    GetKeyPathClassAndInstanceSizeFromPattern.prototype.visitOptionalChainComponent = function ($info) {
    };
    /*Swift.(file).GetKeyPathClassAndInstanceSizeFromPattern.visitOptionalWrapComponent()*/
    /*Swift.(file).KeyPathPatternVisitor.visitOptionalWrapComponent()*/
    GetKeyPathClassAndInstanceSizeFromPattern.prototype.visitOptionalWrapComponent = function ($info) {
    };
    /*Swift.(file).GetKeyPathClassAndInstanceSizeFromPattern.visitOptionalForceComponent()*/
    /*Swift.(file).KeyPathPatternVisitor.visitOptionalForceComponent()*/
    GetKeyPathClassAndInstanceSizeFromPattern.prototype.visitOptionalForceComponent = function ($info) {
    };
    /*Swift.(file).GetKeyPathClassAndInstanceSizeFromPattern.visitIntermediateComponentType(metadataRef:MetadataReference)*/
    /*Swift.(file).KeyPathPatternVisitor.visitIntermediateComponentType(metadataRef:MetadataReference)*/
    GetKeyPathClassAndInstanceSizeFromPattern.prototype.visitIntermediateComponentTypeMetadataRef = function ($info, _) {
    };
    /*Swift.(file).GetKeyPathClassAndInstanceSizeFromPattern.finish()*/
    /*Swift.(file).KeyPathPatternVisitor.finish()*/
    GetKeyPathClassAndInstanceSizeFromPattern.prototype.finish = function ($info) {
    };
    GetKeyPathClassAndInstanceSizeFromPattern.$struct = true;
    GetKeyPathClassAndInstanceSizeFromPattern.$infoAddress = '0x7fb8552a0658';
    return GetKeyPathClassAndInstanceSizeFromPattern;
}());
if (typeof KeyPathPatternVisitor$implementation != 'undefined')
    _mixin(GetKeyPathClassAndInstanceSizeFromPattern, KeyPathPatternVisitor$implementation, false);
var InstantiateKeyPathBuffer = /** @class */ (function () {
    function InstantiateKeyPathBuffer() {
    }
    /*Swift.(file).InstantiateKeyPathBuffer.genericEnvironment*/ /*
    genericEnvironment$get() {
    return this.genericEnvironment
    }
    get genericEnvironment() { return this.genericEnvironment$get() }*/ ;
    /*Swift.(file).InstantiateKeyPathBuffer.patternArgs*/ /*
    readonly patternArgs$get() {
    return this.patternArgs
    }
    readonly get patternArgs() { return this.patternArgs$get() }*/ ;
    /*Swift.(file).InstantiateKeyPathBuffer.base*/ /*
    base$get() {
    return this.base
    }
    get base() { return this.base$get() }*/ ;
    /*Swift.(file).InstantiateKeyPathBuffer.init(destData:UnsafeMutableRawBufferPointer,patternArgs:UnsafeRawPointer?,root:Any.Type)*/
    /*Swift.(file).InstantiateKeyPathBuffer.init(destData:UnsafeMutableRawBufferPointer,patternArgs:UnsafeRawPointer?,root:Any.Type)*/
    InstantiateKeyPathBuffer.prototype.initDestDataUnsafeMutableRawBufferPointerPatternArgsOptionalRootprotocol_composition_type = function ($info, destData, patternArgs, root) {
    };
    /*Swift.(file).InstantiateKeyPathBuffer.isTrivial*/ /*
    isTrivial$get() {
    return this.isTrivial
    }
    get isTrivial() { return this.isTrivial$get() }*/ ;
    /*Swift.(file).InstantiateKeyPathBuffer.endOfReferencePrefixComponent*/ /*
    endOfReferencePrefixComponent$get() {
    return this.endOfReferencePrefixComponent
    }
    get endOfReferencePrefixComponent() { return this.endOfReferencePrefixComponent$get() }*/ ;
    /*Swift.(file).InstantiateKeyPathBuffer.previousComponentAddr*/ /*
    previousComponentAddr$get() {
    return this.previousComponentAddr
    }
    get previousComponentAddr() { return this.previousComponentAddr$get() }*/ ;
    /*Swift.(file).InstantiateKeyPathBuffer.pushDest(_:T)*/
    /*Swift.(file).InstantiateKeyPathBuffer.pushDest(_:T)*/
    InstantiateKeyPathBuffer.prototype.pushDest = function ($info, value) {
    };
    /*Swift.(file).InstantiateKeyPathBuffer.updatePreviousComponentAddr()*/
    /*Swift.(file).InstantiateKeyPathBuffer.updatePreviousComponentAddr()*/
    InstantiateKeyPathBuffer.prototype.updatePreviousComponentAddr = function ($info) {
    };
    /*Swift.(file).InstantiateKeyPathBuffer.visitHeader(genericEnvironment:UnsafeRawPointer?,rootMetadataRef:MetadataReference,leafMetadataRef:MetadataReference,kvcCompatibilityString:UnsafeRawPointer?)*/
    /*Swift.(file).KeyPathPatternVisitor.visitHeader(genericEnvironment:UnsafeRawPointer?,rootMetadataRef:MetadataReference,leafMetadataRef:MetadataReference,kvcCompatibilityString:UnsafeRawPointer?)*/
    InstantiateKeyPathBuffer.prototype.visitHeaderGenericEnvironmentRootMetadataRefLeafMetadataRefKvcCompatibilityString = function ($info, genericEnvironment, rootMetadataRef, leafMetadataRef, kvcCompatibilityString) {
    };
    /*Swift.(file).InstantiateKeyPathBuffer.visitStoredComponent(kind:KeyPathStructOrClass,mutable:Bool,offset:KeyPathPatternStoredOffset)*/
    /*Swift.(file).KeyPathPatternVisitor.visitStoredComponent(kind:KeyPathStructOrClass,mutable:Bool,offset:KeyPathPatternStoredOffset)*/
    InstantiateKeyPathBuffer.prototype.visitStoredComponentKindMutableOffset = function ($info, kind, mutable, offset) {
    };
    /*Swift.(file).InstantiateKeyPathBuffer.visitComputedComponent(mutating:Bool,idKind:KeyPathComputedIDKind,idResolved:Bool,idValueBase:UnsafeRawPointer,idValue:Int32,getter:UnsafeRawPointer,setter:UnsafeRawPointer?,arguments:KeyPathPatternComputedArguments?,externalArgs:UnsafeBufferPointer<Int32>?)*/
    /*Swift.(file).KeyPathPatternVisitor.visitComputedComponent(mutating:Bool,idKind:KeyPathComputedIDKind,idResolved:Bool,idValueBase:UnsafeRawPointer,idValue:Int32,getter:UnsafeRawPointer,setter:UnsafeRawPointer?,arguments:KeyPathPatternComputedArguments?,externalArgs:UnsafeBufferPointer<Int32>?)*/
    InstantiateKeyPathBuffer.prototype.visitComputedComponentMutatingIdKindIdResolvedIdValueBaseIdValueGetterSetterArgumentsExternalArgs = function ($info, mutating, idKind, idResolved, idValueBase, idValue, getter, setter, arguments, externalArgs) {
    };
    /*Swift.(file).InstantiateKeyPathBuffer.visitOptionalChainComponent()*/
    /*Swift.(file).KeyPathPatternVisitor.visitOptionalChainComponent()*/
    InstantiateKeyPathBuffer.prototype.visitOptionalChainComponent = function ($info) {
    };
    /*Swift.(file).InstantiateKeyPathBuffer.visitOptionalWrapComponent()*/
    /*Swift.(file).KeyPathPatternVisitor.visitOptionalWrapComponent()*/
    InstantiateKeyPathBuffer.prototype.visitOptionalWrapComponent = function ($info) {
    };
    /*Swift.(file).InstantiateKeyPathBuffer.visitOptionalForceComponent()*/
    /*Swift.(file).KeyPathPatternVisitor.visitOptionalForceComponent()*/
    InstantiateKeyPathBuffer.prototype.visitOptionalForceComponent = function ($info) {
    };
    /*Swift.(file).InstantiateKeyPathBuffer.visitIntermediateComponentType(metadataRef:MetadataReference)*/
    /*Swift.(file).KeyPathPatternVisitor.visitIntermediateComponentType(metadataRef:MetadataReference)*/
    InstantiateKeyPathBuffer.prototype.visitIntermediateComponentTypeMetadataRef = function ($info, metadataRef) {
    };
    /*Swift.(file).InstantiateKeyPathBuffer.finish()*/
    /*Swift.(file).KeyPathPatternVisitor.finish()*/
    InstantiateKeyPathBuffer.prototype.finish = function ($info) {
    };
    InstantiateKeyPathBuffer.$struct = true;
    InstantiateKeyPathBuffer.$infoAddress = '0x7fb8552a0b60';
    return InstantiateKeyPathBuffer;
}());
if (typeof KeyPathPatternVisitor$implementation != 'undefined')
    _mixin(InstantiateKeyPathBuffer, KeyPathPatternVisitor$implementation, false);
var ValidatingInstantiateKeyPathBuffer = /** @class */ (function () {
    function ValidatingInstantiateKeyPathBuffer() {
    }
    /*Swift.(file).ValidatingInstantiateKeyPathBuffer.instantiateVisitor*/ /*
    instantiateVisitor$get() {
    return this.instantiateVisitor
    }
    get instantiateVisitor() { return this.instantiateVisitor$get() }*/ ;
    /*Swift.(file).ValidatingInstantiateKeyPathBuffer.origDest*/ /*
    readonly origDest$get() {
    return this.origDest
    }
    readonly get origDest() { return this.origDest$get() }*/ ;
    /*Swift.(file).ValidatingInstantiateKeyPathBuffer.init(sizeVisitor:GetKeyPathClassAndInstanceSizeFromPattern,instantiateVisitor:InstantiateKeyPathBuffer)*/
    /*Swift.(file).ValidatingInstantiateKeyPathBuffer.init(sizeVisitor:GetKeyPathClassAndInstanceSizeFromPattern,instantiateVisitor:InstantiateKeyPathBuffer)*/
    ValidatingInstantiateKeyPathBuffer.prototype.initSizeVisitorGetKeyPathClassAndInstanceSizeFromPatternInstantiateVisitorInstantiateKeyPathBuffer = function ($info, sizeVisitor, instantiateVisitor) {
    };
    /*Swift.(file).ValidatingInstantiateKeyPathBuffer.visitHeader(genericEnvironment:UnsafeRawPointer?,rootMetadataRef:MetadataReference,leafMetadataRef:MetadataReference,kvcCompatibilityString:UnsafeRawPointer?)*/
    /*Swift.(file).KeyPathPatternVisitor.visitHeader(genericEnvironment:UnsafeRawPointer?,rootMetadataRef:MetadataReference,leafMetadataRef:MetadataReference,kvcCompatibilityString:UnsafeRawPointer?)*/
    ValidatingInstantiateKeyPathBuffer.prototype.visitHeaderGenericEnvironmentRootMetadataRefLeafMetadataRefKvcCompatibilityString = function ($info, genericEnvironment, rootMetadataRef, leafMetadataRef, kvcCompatibilityString) {
    };
    /*Swift.(file).ValidatingInstantiateKeyPathBuffer.visitStoredComponent(kind:KeyPathStructOrClass,mutable:Bool,offset:KeyPathPatternStoredOffset)*/
    /*Swift.(file).KeyPathPatternVisitor.visitStoredComponent(kind:KeyPathStructOrClass,mutable:Bool,offset:KeyPathPatternStoredOffset)*/
    ValidatingInstantiateKeyPathBuffer.prototype.visitStoredComponentKindMutableOffset = function ($info, kind, mutable, offset) {
    };
    /*Swift.(file).ValidatingInstantiateKeyPathBuffer.visitComputedComponent(mutating:Bool,idKind:KeyPathComputedIDKind,idResolved:Bool,idValueBase:UnsafeRawPointer,idValue:Int32,getter:UnsafeRawPointer,setter:UnsafeRawPointer?,arguments:KeyPathPatternComputedArguments?,externalArgs:UnsafeBufferPointer<Int32>?)*/
    /*Swift.(file).KeyPathPatternVisitor.visitComputedComponent(mutating:Bool,idKind:KeyPathComputedIDKind,idResolved:Bool,idValueBase:UnsafeRawPointer,idValue:Int32,getter:UnsafeRawPointer,setter:UnsafeRawPointer?,arguments:KeyPathPatternComputedArguments?,externalArgs:UnsafeBufferPointer<Int32>?)*/
    ValidatingInstantiateKeyPathBuffer.prototype.visitComputedComponentMutatingIdKindIdResolvedIdValueBaseIdValueGetterSetterArgumentsExternalArgs = function ($info, mutating, idKind, idResolved, idValueBase, idValue, getter, setter, arguments, externalArgs) {
    };
    /*Swift.(file).ValidatingInstantiateKeyPathBuffer.visitOptionalChainComponent()*/
    /*Swift.(file).KeyPathPatternVisitor.visitOptionalChainComponent()*/
    ValidatingInstantiateKeyPathBuffer.prototype.visitOptionalChainComponent = function ($info) {
    };
    /*Swift.(file).ValidatingInstantiateKeyPathBuffer.visitOptionalWrapComponent()*/
    /*Swift.(file).KeyPathPatternVisitor.visitOptionalWrapComponent()*/
    ValidatingInstantiateKeyPathBuffer.prototype.visitOptionalWrapComponent = function ($info) {
    };
    /*Swift.(file).ValidatingInstantiateKeyPathBuffer.visitOptionalForceComponent()*/
    /*Swift.(file).KeyPathPatternVisitor.visitOptionalForceComponent()*/
    ValidatingInstantiateKeyPathBuffer.prototype.visitOptionalForceComponent = function ($info) {
    };
    /*Swift.(file).ValidatingInstantiateKeyPathBuffer.visitIntermediateComponentType(metadataRef:MetadataReference)*/
    /*Swift.(file).KeyPathPatternVisitor.visitIntermediateComponentType(metadataRef:MetadataReference)*/
    ValidatingInstantiateKeyPathBuffer.prototype.visitIntermediateComponentTypeMetadataRef = function ($info, metadataRef) {
    };
    /*Swift.(file).ValidatingInstantiateKeyPathBuffer.finish()*/
    /*Swift.(file).KeyPathPatternVisitor.finish()*/
    ValidatingInstantiateKeyPathBuffer.prototype.finish = function ($info) {
    };
    /*Swift.(file).ValidatingInstantiateKeyPathBuffer.checkSizeConsistency()*/
    /*Swift.(file).ValidatingInstantiateKeyPathBuffer.checkSizeConsistency()*/
    ValidatingInstantiateKeyPathBuffer.prototype.checkSizeConsistency = function ($info) {
    };
    ValidatingInstantiateKeyPathBuffer.$struct = true;
    ValidatingInstantiateKeyPathBuffer.$infoAddress = '0x7fb8552a0cf0';
    return ValidatingInstantiateKeyPathBuffer;
}());
if (typeof KeyPathPatternVisitor$implementation != 'undefined')
    _mixin(ValidatingInstantiateKeyPathBuffer, KeyPathPatternVisitor$implementation, false);
var ManagedBuffer = /** @class */ (function () {
    function ManagedBuffer() {
    }
    /*Swift.(file).ManagedBuffer.init(_doNotCallMe:())*/
    /*Swift.(file).ManagedBuffer.init(_doNotCallMe:())*/
    ManagedBuffer.prototype.init_doNotCallMetuple_type = function ($info, _doNotCallMe) {
        return _doNotCallMe;
    };
    /*Swift.(file).ManagedBuffer.create(minimumCapacity:Int,makingHeaderWith:(ManagedBuffer<Header, Element>) throws -> Header)*/
    /*Swift.(file).ManagedBuffer.create(minimumCapacity:Int,makingHeaderWith:(ManagedBuffer<Header, Element>) throws -> Header)*/
    ManagedBuffer.createMinimumCapacityMakingHeaderWith = function ($info, minimumCapacity, factory) {
    };
    /*Swift.(file).ManagedBuffer.capacity*/ /*
    capacity$get() {
    return this.capacity
    }
    get capacity() { return this.capacity$get() }*/ ;
    /*Swift.(file).ManagedBuffer.firstElementAddress*/ /*
    firstElementAddress$get() {
    return this.firstElementAddress
    }
    get firstElementAddress() { return this.firstElementAddress$get() }*/ ;
    /*Swift.(file).ManagedBuffer.headerAddress*/ /*
    headerAddress$get() {
    return this.headerAddress
    }
    get headerAddress() { return this.headerAddress$get() }*/ ;
    /*Swift.(file).ManagedBuffer.withUnsafeMutablePointerToHeader(_:(UnsafeMutablePointer<Header>) throws -> R)*/
    /*Swift.(file).ManagedBuffer.withUnsafeMutablePointerToHeader(_:(UnsafeMutablePointer<Header>) throws -> R)*/
    ManagedBuffer.prototype.withUnsafeMutablePointerToHeader = function ($info, body) {
    };
    /*Swift.(file).ManagedBuffer.withUnsafeMutablePointerToElements(_:(UnsafeMutablePointer<Element>) throws -> R)*/
    /*Swift.(file).ManagedBuffer.withUnsafeMutablePointerToElements(_:(UnsafeMutablePointer<Element>) throws -> R)*/
    ManagedBuffer.prototype.withUnsafeMutablePointerToElements = function ($info, body) {
    };
    /*Swift.(file).ManagedBuffer.withUnsafeMutablePointers(_:(UnsafeMutablePointer<Header>, UnsafeMutablePointer<Element>) throws -> R)*/
    /*Swift.(file).ManagedBuffer.withUnsafeMutablePointers(_:(UnsafeMutablePointer<Header>, UnsafeMutablePointer<Element>) throws -> R)*/
    ManagedBuffer.prototype.withUnsafeMutablePointers = function ($info, body) {
    };
    ManagedBuffer.$infoAddress = '0x7fb85122aa98';
    return ManagedBuffer;
}());
var ManagedBufferPointer = /** @class */ (function () {
    function ManagedBufferPointer() {
    }
    /*Swift.(file).ManagedBufferPointer.init(bufferClass:AnyClass,minimumCapacity:Int,makingHeaderWith:(AnyObject, (AnyObject) -> Int) throws -> Header)*/
    /*Swift.(file).ManagedBufferPointer.init(bufferClass:AnyClass,minimumCapacity:Int,makingHeaderWith:(AnyObject, (AnyObject) -> Int) throws -> Header)*/
    ManagedBufferPointer.prototype.initBufferClassAnyClassMinimumCapacityIntMakingHeaderWithfunction_type = function ($info, bufferClass, minimumCapacity, factory) {
    };
    /*Swift.(file).ManagedBufferPointer.init(unsafeBufferObject:AnyObject)*/
    /*Swift.(file).ManagedBufferPointer.init(unsafeBufferObject:AnyObject)*/
    ManagedBufferPointer.prototype.initUnsafeBufferObjectAnyObject = function ($info, buffer) {
        return buffer;
    };
    /*Swift.(file).ManagedBufferPointer.init(_uncheckedUnsafeBufferObject:AnyObject)*/
    /*Swift.(file).ManagedBufferPointer.init(_uncheckedUnsafeBufferObject:AnyObject)*/
    ManagedBufferPointer.prototype.init_uncheckedUnsafeBufferObjectAnyObject = function ($info, buffer) {
        return buffer;
    };
    /*Swift.(file).ManagedBufferPointer.init(bufferClass:AnyClass,minimumCapacity:Int)*/
    /*Swift.(file).ManagedBufferPointer.init(bufferClass:AnyClass,minimumCapacity:Int)*/
    ManagedBufferPointer.prototype.initBufferClassAnyClassMinimumCapacityInt = function ($info, bufferClass, minimumCapacity) {
    };
    /*Swift.(file).ManagedBufferPointer.init(_uncheckedBufferClass:AnyClass,minimumCapacity:Int)*/
    /*Swift.(file).ManagedBufferPointer.init(_uncheckedBufferClass:AnyClass,minimumCapacity:Int)*/
    ManagedBufferPointer.prototype.init_uncheckedBufferClassAnyClassMinimumCapacityInt = function ($info, _uncheckedBufferClass, minimumCapacity) {
    };
    /*Swift.(file).ManagedBufferPointer.init(_:ManagedBuffer<Header, Element>)*/
    /*Swift.(file).ManagedBufferPointer.init(_:ManagedBuffer<Header, Element>)*/
    ManagedBufferPointer.prototype.initManagedBuffer = function ($info, buffer) {
        return buffer;
    };
    /*Swift.(file).ManagedBufferPointer.==infix(_:ManagedBufferPointer<Header, Element>,_:ManagedBufferPointer<Header, Element>)*/
    /*Swift.(file).Equatable.==infix(_:Self,_:Self)*/
    ManagedBufferPointer.infix_61_61 = function ($info, lhs, rhs) {
        return lhs == rhs;
    };
    /*Swift.(file).ManagedBufferPointer.init(_:Int)*/
    /*Swift.(file).ManagedBufferPointer.init(_:Int)*/
    ManagedBufferPointer.prototype.initInt = function ($info, count) {
        return count;
    };
    /*Swift.(file).ManagedBufferPointer.count*/ /*
    count$get() {
    return this.count
    }
    get count() { return this.count$get() }*/ ;
    /*Swift.(file).ManagedBufferPointer.subscript(_:Int)*/
    /*Swift.(file).ManagedBufferPointer.subscript(_:Int)*/
    ManagedBufferPointer.prototype.subscript$get = function ($info, i) {
        return this[i];
    };
    /*Swift.(file).ManagedBufferPointer.baseAddress*/ /*
    baseAddress$get() {
    return this.baseAddress
    }
    get baseAddress() { return this.baseAddress$get() }*/ ;
    /*Swift.(file).ManagedBufferPointer.storage*/ /*
    storage$get() {
    return this.storage
    }
    get storage() { return this.storage$get() }*/ ;
    /*Swift.(file).ManagedBufferPointer.init(_nativeObject:NativeObject)*/
    /*Swift.(file).ManagedBufferPointer.init(_nativeObject:NativeObject)*/
    ManagedBufferPointer.prototype.init_nativeObjectNativeObject = function ($info, buffer) {
        return buffer;
    };
    /*Swift.(file).ManagedBufferPointer.header*/ /*
    header$get() {
    return this.header
    }
    get header() { return this.header$get() }*/ ;
    /*Swift.(file).ManagedBufferPointer.buffer*/ /*
    buffer$get() {
    return this.buffer
    }
    get buffer() { return this.buffer$get() }*/ ;
    /*Swift.(file).ManagedBufferPointer.capacity*/ /*
    capacity$get() {
    return this.capacity
    }
    get capacity() { return this.capacity$get() }*/ ;
    /*Swift.(file).ManagedBufferPointer.withUnsafeMutablePointerToHeader(_:(UnsafeMutablePointer<Header>) throws -> R)*/
    /*Swift.(file).ManagedBufferPointer.withUnsafeMutablePointerToHeader(_:(UnsafeMutablePointer<Header>) throws -> R)*/
    ManagedBufferPointer.prototype.withUnsafeMutablePointerToHeader = function ($info, body) {
    };
    /*Swift.(file).ManagedBufferPointer.withUnsafeMutablePointerToElements(_:(UnsafeMutablePointer<Element>) throws -> R)*/
    /*Swift.(file).ManagedBufferPointer.withUnsafeMutablePointerToElements(_:(UnsafeMutablePointer<Element>) throws -> R)*/
    ManagedBufferPointer.prototype.withUnsafeMutablePointerToElements = function ($info, body) {
    };
    /*Swift.(file).ManagedBufferPointer.withUnsafeMutablePointers(_:(UnsafeMutablePointer<Header>, UnsafeMutablePointer<Element>) throws -> R)*/
    /*Swift.(file).ManagedBufferPointer.withUnsafeMutablePointers(_:(UnsafeMutablePointer<Header>, UnsafeMutablePointer<Element>) throws -> R)*/
    ManagedBufferPointer.prototype.withUnsafeMutablePointers = function ($info, body) {
    };
    /*Swift.(file).ManagedBufferPointer.isUniqueReference()*/
    /*Swift.(file).ManagedBufferPointer.isUniqueReference()*/
    ManagedBufferPointer.prototype.isUniqueReference = function ($info) {
    };
    ManagedBufferPointer.$struct = true;
    ManagedBufferPointer.$infoAddress = '0x7fb851826b40';
    return ManagedBufferPointer;
}());
if (typeof Equatable$implementation != 'undefined')
    _mixin(ManagedBufferPointer, Equatable$implementation, false);
var MemoryLayout = /** @class */ (function () {
    function MemoryLayout() {
    }
    /*Swift.(file).MemoryLayout.stride*/ /*
    static stride$get() {
    return this.stride
    }
    static get stride() { return this.stride$get() }*/ ;
    /*Swift.(file).MemoryLayout.alignment*/ /*
    static alignment$get() {
    return this.alignment
    }
    static get alignment() { return this.alignment$get() }*/ ;
    /*Swift.(file).MemoryLayout.size(ofValue:T)*/
    /*Swift.(file).MemoryLayout.size(ofValue:T)*/
    MemoryLayout.sizeOfValue = function ($info, value) {
    };
    /*Swift.(file).MemoryLayout.stride(ofValue:T)*/
    /*Swift.(file).MemoryLayout.stride(ofValue:T)*/
    MemoryLayout.strideOfValue = function ($info, value) {
    };
    /*Swift.(file).MemoryLayout.alignment(ofValue:T)*/
    /*Swift.(file).MemoryLayout.alignment(ofValue:T)*/
    MemoryLayout.alignmentOfValue = function ($info, value) {
    };
    /*Swift.(file).MemoryLayout.offset(of:PartialKeyPath<T>)*/
    /*Swift.(file).MemoryLayout.offset(of:PartialKeyPath<T>)*/
    MemoryLayout.offsetOf = function ($info, key) {
    };
    MemoryLayout.$infoAddress = '0x7fb852b5d058';
    return MemoryLayout;
}());
var _SwiftNewtypeWrapper$implementation = /** @class */ (function () {
    function _SwiftNewtypeWrapper$implementation() {
    }
    /*Swift.(file)._SwiftNewtypeWrapper.hashValue*/ /**/ ;
    /*Swift.(file)._SwiftNewtypeWrapper.hash(into:Hasher)*/
    /*Swift.(file)._SwiftNewtypeWrapper.hash(into:Hasher)*/
    _SwiftNewtypeWrapper$implementation.prototype.hashInto = function ($info, hasher$inout) {
    };
    return _SwiftNewtypeWrapper$implementation;
}());
if (typeof RawRepresentable$implementation != 'undefined')
    _mixin(_SwiftNewtypeWrapper$implementation, RawRepresentable$implementation, false);
if (typeof _HasCustomAnyHashableRepresentation$implementation != 'undefined')
    _mixin(_SwiftNewtypeWrapper$implementation, _HasCustomAnyHashableRepresentation$implementation, false);
var _NewtypeWrapperAnyHashableBox = /** @class */ (function () {
    function _NewtypeWrapperAnyHashableBox() {
    }
    /*Swift.(file)._NewtypeWrapperAnyHashableBox.init(_:Base)*/
    /*Swift.(file)._NewtypeWrapperAnyHashableBox.init(_:Base)*/
    _NewtypeWrapperAnyHashableBox.prototype.init = function ($info, value) {
        return value;
    };
    _NewtypeWrapperAnyHashableBox.$struct = true;
    _NewtypeWrapperAnyHashableBox.$infoAddress = '0x7fb852b16e80';
    return _NewtypeWrapperAnyHashableBox;
}());
if (typeof _AnyHashableBox$implementation != 'undefined')
    _mixin(_NewtypeWrapperAnyHashableBox, _AnyHashableBox$implementation, false);
var _SegmentSource$implementation = /** @class */ (function () {
    function _SegmentSource$implementation() {
    }
    /*Swift.(file)._SegmentSource.tryFill(into:UnsafeMutablePointer<_Normalization._SegmentOutputBuffer>)*/
    /*Swift.(file)._SegmentSource.tryFill(into:UnsafeMutablePointer<_Normalization._SegmentOutputBuffer>)*/
    _SegmentSource$implementation.prototype.tryFillInto = function ($info, output) {
    };
    return _SegmentSource$implementation;
}());
var _OptionalNilComparisonType = /** @class */ (function () {
    function _OptionalNilComparisonType() {
    }
    /*Swift.(file)._OptionalNilComparisonType.init(nilLiteral:())*/
    /*Swift.(file).ExpressibleByNilLiteral.init(nilLiteral:())*/
    _OptionalNilComparisonType.prototype.initNilLiteraltuple_type = function ($info, nilLiteral) {
        return nilLiteral;
    };
    _OptionalNilComparisonType.$struct = true;
    _OptionalNilComparisonType.$infoAddress = '0x7fb851828528';
    return _OptionalNilComparisonType;
}());
if (typeof ExpressibleByNilLiteral$implementation != 'undefined')
    _mixin(_OptionalNilComparisonType, ExpressibleByNilLiteral$implementation, false);
var TextOutputStream$implementation = /** @class */ (function () {
    function TextOutputStream$implementation() {
    }
    return TextOutputStream$implementation;
}());
var TextOutputStreamable$implementation = /** @class */ (function () {
    function TextOutputStreamable$implementation() {
    }
    return TextOutputStreamable$implementation;
}());
var CustomStringConvertible$implementation = /** @class */ (function () {
    function CustomStringConvertible$implementation() {
    }
    return CustomStringConvertible$implementation;
}());
var LosslessStringConvertible$implementation = /** @class */ (function () {
    function LosslessStringConvertible$implementation() {
    }
    return LosslessStringConvertible$implementation;
}());
if (typeof CustomStringConvertible$implementation != 'undefined')
    _mixin(LosslessStringConvertible$implementation, CustomStringConvertible$implementation, false);
var CustomDebugStringConvertible$implementation = /** @class */ (function () {
    function CustomDebugStringConvertible$implementation() {
    }
    return CustomDebugStringConvertible$implementation;
}());
var _Stdout = /** @class */ (function () {
    function _Stdout() {
    }
    /*Swift.(file)._Stdout.init()*/
    /*Swift.(file)._Stdout.init()*/
    _Stdout.prototype.init = function ($info) {
    };
    /*Swift.(file)._Stdout.write(_:String)*/
    /*Swift.(file).TextOutputStream.write(_:String)*/
    _Stdout.prototype.write = function ($info, string) {
    };
    _Stdout.$struct = true;
    _Stdout.$infoAddress = '0x7fb85123f130';
    return _Stdout;
}());
if (typeof TextOutputStream$implementation != 'undefined')
    _mixin(_Stdout, TextOutputStream$implementation, false);
var _TeeStream = /** @class */ (function () {
    function _TeeStream() {
    }
    /*Swift.(file)._TeeStream.init(left:L,right:R)*/
    /*Swift.(file)._TeeStream.init(left:L,right:R)*/
    _TeeStream.prototype.initLeftRight = function ($info, left, right) {
    };
    /*Swift.(file)._TeeStream.left*/ /*
    left$get() {
    return this.left
    }
    get left() { return this.left$get() }*/ ;
    /*Swift.(file)._TeeStream.right*/ /*
    right$get() {
    return this.right
    }
    get right() { return this.right$get() }*/ ;
    /*Swift.(file)._TeeStream.write(_:String)*/
    /*Swift.(file).TextOutputStream.write(_:String)*/
    _TeeStream.prototype.write = function ($info, string) {
    };
    _TeeStream.$struct = true;
    _TeeStream.$infoAddress = '0x7fb85123fd28';
    return _TeeStream;
}());
if (typeof TextOutputStream$implementation != 'undefined')
    _mixin(_TeeStream, TextOutputStream$implementation, false);
var RandomNumberGenerator$implementation = /** @class */ (function () {
    function RandomNumberGenerator$implementation() {
    }
    /*Swift.(file).RandomNumberGenerator.next()*/
    /*Swift.(file).RandomNumberGenerator.next()*/
    RandomNumberGenerator$implementation.prototype.next = function ($info) {
    };
    /*Swift.(file).RandomNumberGenerator.next(upperBound:T)*/
    /*Swift.(file).RandomNumberGenerator.next(upperBound:T)*/
    RandomNumberGenerator$implementation.prototype.nextUpperBound = function ($info, upperBound) {
    };
    return RandomNumberGenerator$implementation;
}());
var SystemRandomNumberGenerator = /** @class */ (function () {
    function SystemRandomNumberGenerator() {
    }
    /*Swift.(file).SystemRandomNumberGenerator.init()*/
    /*Swift.(file).SystemRandomNumberGenerator.init()*/
    SystemRandomNumberGenerator.prototype.init = function ($info) {
    };
    /*Swift.(file).SystemRandomNumberGenerator.next()*/
    /*Swift.(file).RandomNumberGenerator.next()*/
    SystemRandomNumberGenerator.prototype.next = function ($info) {
    };
    SystemRandomNumberGenerator.$struct = true;
    SystemRandomNumberGenerator.$infoAddress = '0x7fb851246c70';
    return SystemRandomNumberGenerator;
}());
if (typeof RandomNumberGenerator$implementation != 'undefined')
    _mixin(SystemRandomNumberGenerator, RandomNumberGenerator$implementation, false);
var RangeExpression$implementation = /** @class */ (function () {
    function RangeExpression$implementation() {
    }
    /*Swift.(file).RangeExpression.~=infix(_:Self,_:Self.Bound)*/
    /*Swift.(file).RangeExpression.~=infix(_:Self,_:Self.Bound)*/
    RangeExpression$implementation.infix_126_61 = function ($info, pattern, value) {
        return pattern.contains(null, value);
    };
    return RangeExpression$implementation;
}());
var PartialRangeUpTo = /** @class */ (function () {
    function PartialRangeUpTo() {
    }
    /*Swift.(file).PartialRangeUpTo.init(_:Bound)*/
    /*Swift.(file).PartialRangeUpTo.init(_:Bound)*/
    PartialRangeUpTo.prototype.init = function ($info, upperBound) {
        return upperBound;
    };
    /*Swift.(file).PartialRangeUpTo.relative(to:C)*/
    /*Swift.(file).RangeExpression.relative(to:C)*/
    PartialRangeUpTo.prototype.relativeTo = function ($info, collection) {
    };
    /*Swift.(file).PartialRangeUpTo.contains(_:Bound)*/
    /*Swift.(file).RangeExpression.contains(_:Self.Bound)*/
    PartialRangeUpTo.prototype.contains = function ($info, _element) {
    };
    PartialRangeUpTo.$struct = true;
    PartialRangeUpTo.$infoAddress = '0x7fb8512485e0';
    return PartialRangeUpTo;
}());
if (typeof RangeExpression$implementation != 'undefined')
    _mixin(PartialRangeUpTo, RangeExpression$implementation, false);
var PartialRangeThrough = /** @class */ (function () {
    function PartialRangeThrough() {
    }
    /*Swift.(file).PartialRangeThrough.init(_:Bound)*/
    /*Swift.(file).PartialRangeThrough.init(_:Bound)*/
    PartialRangeThrough.prototype.init = function ($info, upperBound) {
        return upperBound;
    };
    /*Swift.(file).PartialRangeThrough.relative(to:C)*/
    /*Swift.(file).RangeExpression.relative(to:C)*/
    PartialRangeThrough.prototype.relativeTo = function ($info, collection) {
    };
    /*Swift.(file).PartialRangeThrough.contains(_:Bound)*/
    /*Swift.(file).RangeExpression.contains(_:Self.Bound)*/
    PartialRangeThrough.prototype.contains = function ($info, _element) {
    };
    PartialRangeThrough.$struct = true;
    PartialRangeThrough.$infoAddress = '0x7fb851248a68';
    return PartialRangeThrough;
}());
if (typeof RangeExpression$implementation != 'undefined')
    _mixin(PartialRangeThrough, RangeExpression$implementation, false);
var UnboundedRange_ = /** @class */ (function () {
    function UnboundedRange_() {
    }
    /*Swift.(file).UnboundedRange_....postfix(_:UnboundedRange_)*/
    /*Swift.(file).UnboundedRange_....postfix(_:UnboundedRange_)*/
    UnboundedRange_.postfix_46_46_46 = function ($info, _) {
        /*return _...*/
    };
    UnboundedRange_.$infoAddress = '0x7fb851249648';
    return UnboundedRange_;
}());
var Result = /** @class */ (function () {
    function Result() {
    }
    Result.success = function () { return Object.assign(new Result(), __assign({ rawValue: "success" }, Array.from(arguments).slice(1))); };
    Result.failure = function () { return Object.assign(new Result(), __assign({ rawValue: "failure" }, Array.from(arguments).slice(1))); };
    /*Swift.(file).Result.map(_:(Success) -> NewSuccess)*/
    /*Swift.(file).Result.map(_:(Success) -> NewSuccess)*/
    Result.prototype.mapSwift = function ($info, transform) {
    };
    /*Swift.(file).Result.mapError(_:(Failure) -> NewFailure)*/
    /*Swift.(file).Result.mapError(_:(Failure) -> NewFailure)*/
    Result.prototype.mapError = function ($info, transform) {
    };
    /*Swift.(file).Result.flatMap(_:(Success) -> Result<NewSuccess, Failure>)*/
    /*Swift.(file).Result.flatMap(_:(Success) -> Result<NewSuccess, Failure>)*/
    Result.prototype.flatMap = function ($info, transform) {
    };
    /*Swift.(file).Result.flatMapError(_:(Failure) -> Result<Success, NewFailure>)*/
    /*Swift.(file).Result.flatMapError(_:(Failure) -> Result<Success, NewFailure>)*/
    Result.prototype.flatMapError = function ($info, transform) {
    };
    /*Swift.(file).Result.get()*/
    /*Swift.(file).Result.get()*/
    Result.prototype.get = function ($info) {
    };
    /*Swift.(file).Result.==(_:Result<Success, Failure>,_:Result<Success, Failure>)*/
    /*Swift.(file).Equatable.==infix(_:Self,_:Self)*/
    Result.infix_61_61 = function ($info, a, b) {
        return a == b;
    };
    /*Swift.(file).Result.init(catching:() throws -> Success)*/
    /*Swift.(file).Result.init(catching:() throws -> Success)*/
    Result.prototype.initCatchingfunction_type = function ($info, body) {
        return body;
    };
    /*Swift.(file).Result.hashValue*/ /*
    hashValue$get() {
    return this.hashValue
    }
    get hashValue() { return this.hashValue$get() }*/ ;
    /*Swift.(file).Result.hash(into:Hasher)*/
    /*Swift.(file).Hashable.hash(into:Hasher)*/
    Result.prototype.hashInto = function ($info, hasher$inout) {
    };
    Result.$infoAddress = '0x7fb8528d9578';
    return Result;
}());
var _Buffer32 = /** @class */ (function () {
    function _Buffer32() {
    }
    /*Swift.(file)._Buffer32.init()*/
    /*Swift.(file)._Buffer32.init()*/
    _Buffer32.prototype.init = function ($info) {
    };
    /*Swift.(file)._Buffer32.withBytes(_:(UnsafeMutablePointer<UInt8>) throws -> Result)*/
    /*Swift.(file)._Buffer32.withBytes(_:(UnsafeMutablePointer<UInt8>) throws -> Result)*/
    _Buffer32.prototype.withBytes = function ($info, body) {
    };
    _Buffer32.$struct = true;
    _Buffer32.$infoAddress = '0x7fb8512512c0';
    return _Buffer32;
}());
var _Buffer72 = /** @class */ (function () {
    function _Buffer72() {
    }
    /*Swift.(file)._Buffer72.init()*/
    /*Swift.(file)._Buffer72.init()*/
    _Buffer72.prototype.init = function ($info) {
    };
    /*Swift.(file)._Buffer72.withBytes(_:(UnsafeMutablePointer<UInt8>) throws -> Result)*/
    /*Swift.(file)._Buffer72.withBytes(_:(UnsafeMutablePointer<UInt8>) throws -> Result)*/
    _Buffer72.prototype.withBytes = function ($info, body) {
    };
    _Buffer72.$struct = true;
    _Buffer72.$infoAddress = '0x7fb851251428';
    return _Buffer72;
}());
var __SwiftNativeNSArray = /** @class */ (function () {
    function __SwiftNativeNSArray() {
    }
    /*Swift.(file).__SwiftNativeNSArray.init()*/
    /*Swift.(file).__SwiftNativeNSArray.init()*/
    __SwiftNativeNSArray.prototype.init = function ($info) {
    };
    __SwiftNativeNSArray.$infoAddress = '0x7fb8511e8020';
    return __SwiftNativeNSArray;
}());
var __SwiftNativeNSDictionary = /** @class */ (function () {
    function __SwiftNativeNSDictionary() {
    }
    /*Swift.(file).__SwiftNativeNSDictionary.init()*/
    /*Swift.(file).__SwiftNativeNSDictionary.init()*/
    __SwiftNativeNSDictionary.prototype.init = function ($info) {
    };
    __SwiftNativeNSDictionary.$infoAddress = '0x7fb852ac90f8';
    return __SwiftNativeNSDictionary;
}());
var __SwiftNativeNSSet = /** @class */ (function () {
    function __SwiftNativeNSSet() {
    }
    /*Swift.(file).__SwiftNativeNSSet.init()*/
    /*Swift.(file).__SwiftNativeNSSet.init()*/
    __SwiftNativeNSSet.prototype.init = function ($info) {
    };
    __SwiftNativeNSSet.$infoAddress = '0x7fb851254558';
    return __SwiftNativeNSSet;
}());
var __SwiftNativeNSEnumerator = /** @class */ (function () {
    function __SwiftNativeNSEnumerator() {
    }
    /*Swift.(file).__SwiftNativeNSEnumerator.init()*/
    /*Swift.(file).__SwiftNativeNSEnumerator.init()*/
    __SwiftNativeNSEnumerator.prototype.init = function ($info) {
    };
    __SwiftNativeNSEnumerator.$infoAddress = '0x7fb852ac8588';
    return __SwiftNativeNSEnumerator;
}());
var __SwiftNativeNSData = /** @class */ (function () {
    function __SwiftNativeNSData() {
    }
    /*Swift.(file).__SwiftNativeNSData.init()*/
    /*Swift.(file).__SwiftNativeNSData.init()*/
    __SwiftNativeNSData.prototype.init = function ($info) {
    };
    __SwiftNativeNSData.$infoAddress = '0x7fb851254788';
    return __SwiftNativeNSData;
}());
var __stdlib_ReturnAutoreleasedDummy = /** @class */ (function () {
    function __stdlib_ReturnAutoreleasedDummy() {
    }
    /*Swift.(file).__stdlib_ReturnAutoreleasedDummy.init()*/
    /*Swift.(file).__stdlib_ReturnAutoreleasedDummy.init()*/
    __stdlib_ReturnAutoreleasedDummy.prototype.init = function ($info) {
    };
    /*Swift.(file).__stdlib_ReturnAutoreleasedDummy.returnsAutoreleased(_:AnyObject)*/
    /*Swift.(file).__stdlib_ReturnAutoreleasedDummy.returnsAutoreleased(_:AnyObject)*/
    __stdlib_ReturnAutoreleasedDummy.prototype.returnsAutoreleased = function ($info, x) {
    };
    __stdlib_ReturnAutoreleasedDummy.$infoAddress = '0x7fb851254948';
    return __stdlib_ReturnAutoreleasedDummy;
}());
var _RuntimeFunctionCounters = /** @class */ (function () {
    function _RuntimeFunctionCounters() {
    }
    /*Swift.(file)._RuntimeFunctionCounters.runtimeFunctionCountersOffsets*/ /*
    static readonly runtimeFunctionCountersOffsets$get() {
    return this.runtimeFunctionCountersOffsets
    }
    static readonly get runtimeFunctionCountersOffsets() { return this.runtimeFunctionCountersOffsets$get() }*/ ;
    /*Swift.(file)._RuntimeFunctionCounters.numRuntimeFunctionCounters*/ /*
    static readonly numRuntimeFunctionCounters$get() {
    return this.numRuntimeFunctionCounters
    }
    static readonly get numRuntimeFunctionCounters() { return this.numRuntimeFunctionCounters$get() }*/ ;
    /*Swift.(file)._RuntimeFunctionCounters.runtimeFunctionNameToIndex*/ /*
    static readonly runtimeFunctionNameToIndex$get() {
    return this.runtimeFunctionNameToIndex
    }
    static readonly get runtimeFunctionNameToIndex() { return this.runtimeFunctionNameToIndex$get() }*/ ;
    /*Swift.(file)._RuntimeFunctionCounters.getRuntimeFunctionNames()*/
    /*Swift.(file)._RuntimeFunctionCounters.getRuntimeFunctionNames()*/
    _RuntimeFunctionCounters.getRuntimeFunctionNames = function ($info) {
    };
    /*Swift.(file)._RuntimeFunctionCounters.getRuntimeFunctionCountersOffsets()*/
    /*Swift.(file)._RuntimeFunctionCounters.getRuntimeFunctionCountersOffsets()*/
    _RuntimeFunctionCounters.getRuntimeFunctionCountersOffsets = function ($info) {
    };
    /*Swift.(file)._RuntimeFunctionCounters.getNumRuntimeFunctionCounters()*/
    /*Swift.(file)._RuntimeFunctionCounters.getNumRuntimeFunctionCounters()*/
    _RuntimeFunctionCounters.getNumRuntimeFunctionCounters = function ($info) {
    };
    /*Swift.(file)._RuntimeFunctionCounters.dumpObjectsRuntimeFunctionPointers()*/
    /*Swift.(file)._RuntimeFunctionCounters.dumpObjectsRuntimeFunctionPointers()*/
    _RuntimeFunctionCounters.dumpObjectsRuntimeFunctionPointers = function ($info) {
    };
    /*Swift.(file)._RuntimeFunctionCounters.setGlobalRuntimeFunctionCountersUpdateHandler(handler:_RuntimeFunctionCounters.RuntimeFunctionCountersUpdateHandler?)*/
    /*Swift.(file)._RuntimeFunctionCounters.setGlobalRuntimeFunctionCountersUpdateHandler(handler:_RuntimeFunctionCounters.RuntimeFunctionCountersUpdateHandler?)*/
    _RuntimeFunctionCounters.setGlobalRuntimeFunctionCountersUpdateHandlerHandler = function ($info, handler) {
    };
    /*Swift.(file)._RuntimeFunctionCounters.collectAllReferencesInsideObject(_:Any)*/
    /*Swift.(file)._RuntimeFunctionCounters.collectAllReferencesInsideObject(_:Any)*/
    _RuntimeFunctionCounters.collectAllReferencesInsideObject = function ($info, value) {
    };
    /*Swift.(file)._RuntimeFunctionCounters.getRuntimeFunctionNameToIndex()*/
    /*Swift.(file)._RuntimeFunctionCounters.getRuntimeFunctionNameToIndex()*/
    _RuntimeFunctionCounters.getRuntimeFunctionNameToIndex = function ($info) {
    };
    /*Swift.(file)._RuntimeFunctionCounters.init()*/
    /*Swift.(file)._RuntimeFunctionCounters.init()*/
    _RuntimeFunctionCounters.prototype.init = function ($info) {
    };
    /*Swift.(file)._RuntimeFunctionCounters.getObjectRuntimeFunctionCounters(_:UnsafeRawPointer,_:_RuntimeFunctionCountersState)*/
    /*Swift.(file)._RuntimeFunctionCounters.getObjectRuntimeFunctionCounters(_:UnsafeRawPointer,_:_RuntimeFunctionCountersState)*/
    _RuntimeFunctionCounters.getObjectRuntimeFunctionCounters = function ($info, object, result$inout) {
    };
    /*Swift.(file)._RuntimeFunctionCounters.getGlobalRuntimeFunctionCounters(_:_RuntimeFunctionCountersState)*/
    /*Swift.(file)._RuntimeFunctionCounters.getGlobalRuntimeFunctionCounters(_:_RuntimeFunctionCountersState)*/
    _RuntimeFunctionCounters.getGlobalRuntimeFunctionCounters = function ($info, result$inout) {
    };
    /*Swift.(file)._RuntimeFunctionCounters.setGlobalRuntimeFunctionCounters(_:_RuntimeFunctionCountersState)*/
    /*Swift.(file)._RuntimeFunctionCounters.setGlobalRuntimeFunctionCounters(_:_RuntimeFunctionCountersState)*/
    _RuntimeFunctionCounters.setGlobalRuntimeFunctionCounters = function ($info, state$inout) {
    };
    /*Swift.(file)._RuntimeFunctionCounters.setObjectRuntimeFunctionCounters(_:UnsafeRawPointer,_:_RuntimeFunctionCountersState)*/
    /*Swift.(file)._RuntimeFunctionCounters.setObjectRuntimeFunctionCounters(_:UnsafeRawPointer,_:_RuntimeFunctionCountersState)*/
    _RuntimeFunctionCounters.setObjectRuntimeFunctionCounters = function ($info, object, state$inout) {
    };
    /*Swift.(file)._RuntimeFunctionCounters.setGlobalRuntimeFunctionCountersMode(enable:Bool)*/
    /*Swift.(file)._RuntimeFunctionCounters.setGlobalRuntimeFunctionCountersMode(enable:Bool)*/
    _RuntimeFunctionCounters.setGlobalRuntimeFunctionCountersModeEnable = function ($info, enable) {
    };
    /*Swift.(file)._RuntimeFunctionCounters.setPerObjectRuntimeFunctionCountersMode(enable:Bool)*/
    /*Swift.(file)._RuntimeFunctionCounters.setPerObjectRuntimeFunctionCountersMode(enable:Bool)*/
    _RuntimeFunctionCounters.setPerObjectRuntimeFunctionCountersModeEnable = function ($info, enable) {
    };
    /*Swift.(file)._RuntimeFunctionCounters.enableRuntimeFunctionCountersUpdates(mode:(globalMode: Bool, perObjectMode: Bool))*/
    /*Swift.(file)._RuntimeFunctionCounters.enableRuntimeFunctionCountersUpdates(mode:(globalMode: Bool, perObjectMode: Bool))*/
    _RuntimeFunctionCounters.enableRuntimeFunctionCountersUpdatesMode = function ($info, mode) {
    };
    /*Swift.(file)._RuntimeFunctionCounters.disableRuntimeFunctionCountersUpdates()*/
    /*Swift.(file)._RuntimeFunctionCounters.disableRuntimeFunctionCountersUpdates()*/
    _RuntimeFunctionCounters.disableRuntimeFunctionCountersUpdates = function ($info) {
    };
    _RuntimeFunctionCounters.$struct = true;
    _RuntimeFunctionCounters.$infoAddress = '0x7fb851254fd0';
    return _RuntimeFunctionCounters;
}());
var _RuntimeFunctionCountersStats$implementation = /** @class */ (function () {
    function _RuntimeFunctionCountersStats$implementation() {
    }
    /*Swift.(file)._RuntimeFunctionCountersStats.dump(skipUnchanged:Bool)*/
    /*Swift.(file)._RuntimeFunctionCountersStats.dump(skipUnchanged:Bool)*/
    _RuntimeFunctionCountersStats$implementation.prototype.dumpSkipUnchanged = function ($info, skipUnchanged) {
    };
    /*Swift.(file)._RuntimeFunctionCountersStats.dumpDiff(_:Self,skipUnchanged:Bool)*/
    /*Swift.(file)._RuntimeFunctionCountersStats.dumpDiff(_:Self,skipUnchanged:Bool)*/
    _RuntimeFunctionCountersStats$implementation.prototype.dumpDiffSkipUnchanged = function ($info, after, skipUnchanged) {
    };
    /*Swift.(file)._RuntimeFunctionCountersStats.debugDescription*/ /**/ ;
    /*Swift.(file)._RuntimeFunctionCountersStats.dump(skipUnchanged:Bool,to:T)*/
    /*Swift.(file)._RuntimeFunctionCountersStats.dump(skipUnchanged:Bool,to:T)*/
    _RuntimeFunctionCountersStats$implementation.prototype.dumpSkipUnchangedTo = function ($info, skipUnchanged, to$inout) {
    };
    /*Swift.(file)._RuntimeFunctionCountersStats.dumpDiff(_:Self,skipUnchanged:Bool,to:T)*/
    /*Swift.(file)._RuntimeFunctionCountersStats.dumpDiff(_:Self,skipUnchanged:Bool,to:T)*/
    _RuntimeFunctionCountersStats$implementation.prototype.dumpDiffSkipUnchangedTo = function ($info, after, skipUnchanged, to$inout) {
    };
    /*Swift.(file)._RuntimeFunctionCountersStats.diff(_:Self)*/
    /*Swift.(file)._RuntimeFunctionCountersStats.diff(_:Self)*/
    _RuntimeFunctionCountersStats$implementation.prototype.diff = function ($info, other) {
    };
    return _RuntimeFunctionCountersStats$implementation;
}());
if (typeof CustomDebugStringConvertible$implementation != 'undefined')
    _mixin(_RuntimeFunctionCountersStats$implementation, CustomDebugStringConvertible$implementation, false);
var _RuntimeFunctionCountersState = /** @class */ (function () {
    function _RuntimeFunctionCountersState() {
    }
    /*Swift.(file)._RuntimeFunctionCountersState.subscript(_:String)*/
    /*Swift.(file)._RuntimeFunctionCountersStats.subscript(_:String)*/
    _RuntimeFunctionCountersState.prototype.subscript$get = function ($info, counterName) {
        return this[counterName];
    }; /*Swift.(file)._RuntimeFunctionCountersState.subscript(_:String)*/
    /*Swift.(file)._RuntimeFunctionCountersStats.subscript(_:String)*/
    _RuntimeFunctionCountersState.prototype.subscript$set = function ($info, newValue, counterName) {
        this[counterName] = newValue;
    };
    /*Swift.(file)._RuntimeFunctionCountersState.subscript(_:Int)*/
    /*Swift.(file)._RuntimeFunctionCountersStats.subscript(_:Int)*/
    _RuntimeFunctionCountersState.prototype.subscript$get = function ($info, index) {
        return this[index];
    }; /*Swift.(file)._RuntimeFunctionCountersState.subscript(_:Int)*/
    /*Swift.(file)._RuntimeFunctionCountersStats.subscript(_:Int)*/
    _RuntimeFunctionCountersState.prototype.subscript$set = function ($info, newValue, index) {
        this[index] = newValue;
    };
    /*Swift.(file)._RuntimeFunctionCountersState.init(counters:_RuntimeFunctionCountersState.Counters)*/
    /*Swift.(file)._RuntimeFunctionCountersState.init(counters:_RuntimeFunctionCountersState.Counters)*/
    _RuntimeFunctionCountersState.prototype.initCounters_RuntimeFunctionCountersStateCounters = function ($info, counters) {
        return counters;
    };
    /*Swift.(file)._RuntimeFunctionCountersState.init()*/
    /*Swift.(file)._RuntimeFunctionCountersStats.init()*/
    _RuntimeFunctionCountersState.prototype.init = function ($info) {
    };
    _RuntimeFunctionCountersState.$struct = true;
    _RuntimeFunctionCountersState.$infoAddress = '0x7fb851255738';
    return _RuntimeFunctionCountersState;
}());
if (typeof _RuntimeFunctionCountersStats$implementation != 'undefined')
    _mixin(_RuntimeFunctionCountersState, _RuntimeFunctionCountersStats$implementation, false);
var _GlobalRuntimeFunctionCountersState = /** @class */ (function () {
    function _GlobalRuntimeFunctionCountersState() {
    }
    /*Swift.(file)._GlobalRuntimeFunctionCountersState.init()*/
    /*Swift.(file)._RuntimeFunctionCountersStats.init()*/
    _GlobalRuntimeFunctionCountersState.prototype.init = function ($info) {
    };
    /*Swift.(file)._GlobalRuntimeFunctionCountersState.getGlobalRuntimeFunctionCounters()*/
    /*Swift.(file)._GlobalRuntimeFunctionCountersState.getGlobalRuntimeFunctionCounters()*/
    _GlobalRuntimeFunctionCountersState.prototype.getGlobalRuntimeFunctionCounters = function ($info) {
    };
    /*Swift.(file)._GlobalRuntimeFunctionCountersState.setGlobalRuntimeFunctionCounters()*/
    /*Swift.(file)._GlobalRuntimeFunctionCountersState.setGlobalRuntimeFunctionCounters()*/
    _GlobalRuntimeFunctionCountersState.prototype.setGlobalRuntimeFunctionCounters = function ($info) {
    };
    /*Swift.(file)._GlobalRuntimeFunctionCountersState.subscript(_:String)*/
    /*Swift.(file)._RuntimeFunctionCountersStats.subscript(_:String)*/
    _GlobalRuntimeFunctionCountersState.prototype.subscript$get = function ($info, index) {
        return this[index];
    }; /*Swift.(file)._GlobalRuntimeFunctionCountersState.subscript(_:String)*/
    /*Swift.(file)._RuntimeFunctionCountersStats.subscript(_:String)*/
    _GlobalRuntimeFunctionCountersState.prototype.subscript$set = function ($info, newValue, index) {
        this[index] = newValue;
    };
    /*Swift.(file)._GlobalRuntimeFunctionCountersState.subscript(_:Int)*/
    /*Swift.(file)._RuntimeFunctionCountersStats.subscript(_:Int)*/
    _GlobalRuntimeFunctionCountersState.prototype.subscript$get = function ($info, index) {
        return this[index];
    }; /*Swift.(file)._GlobalRuntimeFunctionCountersState.subscript(_:Int)*/
    /*Swift.(file)._RuntimeFunctionCountersStats.subscript(_:Int)*/
    _GlobalRuntimeFunctionCountersState.prototype.subscript$set = function ($info, newValue, index) {
        this[index] = newValue;
    };
    _GlobalRuntimeFunctionCountersState.$struct = true;
    _GlobalRuntimeFunctionCountersState.$infoAddress = '0x7fb851255b30';
    return _GlobalRuntimeFunctionCountersState;
}());
if (typeof _RuntimeFunctionCountersStats$implementation != 'undefined')
    _mixin(_GlobalRuntimeFunctionCountersState, _RuntimeFunctionCountersStats$implementation, false);
var _ObjectRuntimeFunctionCountersState = /** @class */ (function () {
    function _ObjectRuntimeFunctionCountersState() {
    }
    /*Swift.(file)._ObjectRuntimeFunctionCountersState.init(_:UnsafeRawPointer)*/
    /*Swift.(file)._ObjectRuntimeFunctionCountersState.init(_:UnsafeRawPointer)*/
    _ObjectRuntimeFunctionCountersState.prototype.initUnsafeRawPointer = function ($info, p) {
        return p;
    };
    /*Swift.(file)._ObjectRuntimeFunctionCountersState.init()*/
    /*Swift.(file)._RuntimeFunctionCountersStats.init()*/
    _ObjectRuntimeFunctionCountersState.prototype.init = function ($info) {
    };
    /*Swift.(file)._ObjectRuntimeFunctionCountersState.getObjectRuntimeFunctionCounters(_:UnsafeRawPointer)*/
    /*Swift.(file)._ObjectRuntimeFunctionCountersState.getObjectRuntimeFunctionCounters(_:UnsafeRawPointer)*/
    _ObjectRuntimeFunctionCountersState.prototype.getObjectRuntimeFunctionCounters = function ($info, o) {
    };
    /*Swift.(file)._ObjectRuntimeFunctionCountersState.setObjectRuntimeFunctionCounters(_:UnsafeRawPointer)*/
    /*Swift.(file)._ObjectRuntimeFunctionCountersState.setObjectRuntimeFunctionCounters(_:UnsafeRawPointer)*/
    _ObjectRuntimeFunctionCountersState.prototype.setObjectRuntimeFunctionCounters = function ($info, o) {
    };
    /*Swift.(file)._ObjectRuntimeFunctionCountersState.subscript(_:String)*/
    /*Swift.(file)._RuntimeFunctionCountersStats.subscript(_:String)*/
    _ObjectRuntimeFunctionCountersState.prototype.subscript$get = function ($info, index) {
        return this[index];
    }; /*Swift.(file)._ObjectRuntimeFunctionCountersState.subscript(_:String)*/
    /*Swift.(file)._RuntimeFunctionCountersStats.subscript(_:String)*/
    _ObjectRuntimeFunctionCountersState.prototype.subscript$set = function ($info, newValue, index) {
        this[index] = newValue;
    };
    /*Swift.(file)._ObjectRuntimeFunctionCountersState.subscript(_:Int)*/
    /*Swift.(file)._RuntimeFunctionCountersStats.subscript(_:Int)*/
    _ObjectRuntimeFunctionCountersState.prototype.subscript$get = function ($info, index) {
        return this[index];
    }; /*Swift.(file)._ObjectRuntimeFunctionCountersState.subscript(_:Int)*/
    /*Swift.(file)._RuntimeFunctionCountersStats.subscript(_:Int)*/
    _ObjectRuntimeFunctionCountersState.prototype.subscript$set = function ($info, newValue, index) {
        this[index] = newValue;
    };
    _ObjectRuntimeFunctionCountersState.$struct = true;
    _ObjectRuntimeFunctionCountersState.$infoAddress = '0x7fb851255cc0';
    return _ObjectRuntimeFunctionCountersState;
}());
if (typeof _RuntimeFunctionCountersStats$implementation != 'undefined')
    _mixin(_ObjectRuntimeFunctionCountersState, _RuntimeFunctionCountersStats$implementation, false);
var IteratorProtocol$implementation = /** @class */ (function () {
    function IteratorProtocol$implementation() {
    }
    return IteratorProtocol$implementation;
}());
var Sequence$implementation = /** @class */ (function () {
    function Sequence$implementation() {
    }
    /*Swift.(file).Sequence.+infix(_:Self,_:String)*/
    /*Swift.(file).Sequence.+infix(_:Self,_:String)*/
    Sequence$implementation.infix_43 = function ($info, lhs, rhs) {
        return lhs + rhs;
    };
    /*Swift.(file).Sequence.+infix(_:String,_:Self)*/
    /*Swift.(file).Sequence.+infix(_:String,_:Self)*/
    Sequence$implementation.infix_43 = function ($info, lhs, rhs) {
        return lhs + rhs;
    };
    /*Swift.(file).Sequence.shuffled(using:T)*/
    /*Swift.(file).Sequence.shuffled(using:T)*/
    Sequence$implementation.prototype.shuffledUsing = function ($info, generator$inout) {
    };
    /*Swift.(file).Sequence.shuffled()*/
    /*Swift.(file).Sequence.shuffled()*/
    Sequence$implementation.prototype.shuffled = function ($info) {
    };
    /*Swift.(file).Sequence.joined()*/
    /*Swift.(file).Sequence.joined()*/
    Sequence$implementation.prototype.joined = function ($info) {
    };
    /*Swift.(file).Sequence.joined(separator:Separator)*/
    /*Swift.(file).Sequence.joined(separator:Separator)*/
    Sequence$implementation.prototype.joinedSeparator = function ($info, separator) {
        return this.join(separator);
    };
    /*Swift.(file).Sequence.lazy*/ /**/ ;
    /*Swift.(file).Sequence.makeIterator()*/
    /*Swift.(file).Sequence.makeIterator()*/
    Sequence$implementation.prototype.makeIterator = function ($info) {
        var _this = this;
        return new SwiftIterator(function (current) { return _this.contains(null, current + _this.lowerBound) ? current + _this.lowerBound : null; });
    };
    /*Swift.(file).Sequence.map(_:(Self.Element) throws -> T)*/
    /*Swift.(file).Sequence.map(_:(Self.Element) throws -> T)*/
    Sequence$implementation.prototype.mapSwift = function ($info, transform) {
    };
    /*Swift.(file).Sequence.filter(_:(Self.Element) throws -> Bool)*/
    /*Swift.(file).Sequence.filter(_:(Self.Element) throws -> Bool)*/
    Sequence$implementation.prototype.filterSwift = function ($info, isIncluded) {
    };
    /*Swift.(file).Sequence.underestimatedCount*/ /**/ ;
    /*Swift.(file).Sequence.forEach(_:(Self.Element) throws -> Void)*/
    /*Swift.(file).Sequence.forEach(_:(Self.Element) throws -> Void)*/
    Sequence$implementation.prototype.forEachSwift = function ($info, body) {
    };
    /*Swift.(file).Sequence.first(where:(Self.Element) throws -> Bool)*/
    /*Swift.(file).Sequence.first(where:(Self.Element) throws -> Bool)*/
    Sequence$implementation.prototype.firstWhere = function ($info, predicate) {
    };
    /*Swift.(file).Sequence.split(separator:Self.Element,maxSplits:Int,omittingEmptySubsequences:Bool)*/
    /*Swift.(file).Sequence.split(separator:Self.Element,maxSplits:Int,omittingEmptySubsequences:Bool)*/
    Sequence$implementation.prototype.splitSeparatorMaxSplitsOmittingEmptySubsequences = function ($info, separator, maxSplits, omittingEmptySubsequences) {
    };
    /*Swift.(file).Sequence.split(maxSplits:Int,omittingEmptySubsequences:Bool,whereSeparator:(Self.Element) throws -> Bool)*/
    /*Swift.(file).Sequence.split(maxSplits:Int,omittingEmptySubsequences:Bool,whereSeparator:(Self.Element) throws -> Bool)*/
    Sequence$implementation.prototype.splitMaxSplitsOmittingEmptySubsequencesWhereSeparator = function ($info, maxSplits, omittingEmptySubsequences, isSeparator) {
    };
    /*Swift.(file).Sequence.suffix(_:Int)*/
    /*Swift.(file).Sequence.suffix(_:Int)*/
    Sequence$implementation.prototype.suffix = function ($info, maxLength) {
    };
    /*Swift.(file).Sequence.dropFirst(_:Int)*/
    /*Swift.(file).Sequence.dropFirst(_:Int)*/
    Sequence$implementation.prototype.dropFirst = function ($info, k) {
    };
    /*Swift.(file).Sequence.dropLast(_:Int)*/
    /*Swift.(file).Sequence.dropLast(_:Int)*/
    Sequence$implementation.prototype.dropLast = function ($info, k) {
    };
    /*Swift.(file).Sequence.drop(while:(Self.Element) throws -> Bool)*/
    /*Swift.(file).Sequence.drop(while:(Self.Element) throws -> Bool)*/
    Sequence$implementation.prototype.dropWhile = function ($info, predicate) {
    };
    /*Swift.(file).Sequence.prefix(_:Int)*/
    /*Swift.(file).Sequence.prefix(_:Int)*/
    Sequence$implementation.prototype.prefix = function ($info, maxLength) {
    };
    /*Swift.(file).Sequence.prefix(while:(Self.Element) throws -> Bool)*/
    /*Swift.(file).Sequence.prefix(while:(Self.Element) throws -> Bool)*/
    Sequence$implementation.prototype.prefixWhile = function ($info, predicate) {
    };
    /*Swift.(file).Sequence.withContiguousStorageIfAvailable(_:(UnsafeBufferPointer<Self.Element>) throws -> R)*/
    /*Swift.(file).Sequence.withContiguousStorageIfAvailable(_:(UnsafeBufferPointer<Self.Element>) throws -> R)*/
    Sequence$implementation.prototype.withContiguousStorageIfAvailable = function ($info, body) {
    };
    /*Swift.(file).Sequence.enumerated()*/
    /*Swift.(file).Sequence.enumerated()*/
    Sequence$implementation.prototype.enumerated = function ($info) {
        return this.map(function (v, i) { return [i, v]; });
    };
    /*Swift.(file).Sequence.min(by:(Self.Element, Self.Element) throws -> Bool)*/
    /*Swift.(file).Sequence.min(by:(Self.Element, Self.Element) throws -> Bool)*/
    Sequence$implementation.prototype.minBy = function ($info, areInIncreasingOrder) {
    };
    /*Swift.(file).Sequence.max(by:(Self.Element, Self.Element) throws -> Bool)*/
    /*Swift.(file).Sequence.max(by:(Self.Element, Self.Element) throws -> Bool)*/
    Sequence$implementation.prototype.maxBy = function ($info, areInIncreasingOrder) {
    };
    /*Swift.(file).Sequence.min()*/
    /*Swift.(file).Sequence.min()*/
    Sequence$implementation.prototype.min = function ($info) {
    };
    /*Swift.(file).Sequence.max()*/
    /*Swift.(file).Sequence.max()*/
    Sequence$implementation.prototype.max = function ($info) {
    };
    /*Swift.(file).Sequence.starts(with:PossiblePrefix,by:(Self.Element, PossiblePrefix.Element) throws -> Bool)*/
    /*Swift.(file).Sequence.starts(with:PossiblePrefix,by:(Self.Element, PossiblePrefix.Element) throws -> Bool)*/
    Sequence$implementation.prototype.startsWithBy = function ($info, possiblePrefix, areEquivalent) {
    };
    /*Swift.(file).Sequence.starts(with:PossiblePrefix)*/
    /*Swift.(file).Sequence.starts(with:PossiblePrefix)*/
    Sequence$implementation.prototype.startsWith = function ($info, possiblePrefix) {
    };
    /*Swift.(file).Sequence.elementsEqual(_:OtherSequence,by:(Self.Element, OtherSequence.Element) throws -> Bool)*/
    /*Swift.(file).Sequence.elementsEqual(_:OtherSequence,by:(Self.Element, OtherSequence.Element) throws -> Bool)*/
    Sequence$implementation.prototype.elementsEqualBy = function ($info, other, areEquivalent) {
    };
    /*Swift.(file).Sequence.elementsEqual(_:OtherSequence)*/
    /*Swift.(file).Sequence.elementsEqual(_:OtherSequence)*/
    Sequence$implementation.prototype.elementsEqual = function ($info, other) {
    };
    /*Swift.(file).Sequence.lexicographicallyPrecedes(_:OtherSequence,by:(Self.Element, Self.Element) throws -> Bool)*/
    /*Swift.(file).Sequence.lexicographicallyPrecedes(_:OtherSequence,by:(Self.Element, Self.Element) throws -> Bool)*/
    Sequence$implementation.prototype.lexicographicallyPrecedesBy = function ($info, other, areInIncreasingOrder) {
    };
    /*Swift.(file).Sequence.lexicographicallyPrecedes(_:OtherSequence)*/
    /*Swift.(file).Sequence.lexicographicallyPrecedes(_:OtherSequence)*/
    Sequence$implementation.prototype.lexicographicallyPrecedes = function ($info, other) {
    };
    /*Swift.(file).Sequence.contains(where:(Self.Element) throws -> Bool)*/
    /*Swift.(file).Sequence.contains(where:(Self.Element) throws -> Bool)*/
    Sequence$implementation.prototype.containsWhere = function ($info, predicate) {
    };
    /*Swift.(file).Sequence.allSatisfy(_:(Self.Element) throws -> Bool)*/
    /*Swift.(file).Sequence.allSatisfy(_:(Self.Element) throws -> Bool)*/
    Sequence$implementation.prototype.allSatisfy = function ($info, predicate) {
    };
    /*Swift.(file).Sequence.contains(_:Self.Element)*/
    /*Swift.(file).Sequence.contains(_:Self.Element)*/
    Sequence$implementation.prototype.contains = function ($info, _element) {
    };
    /*Swift.(file).Sequence.count(where:(Self.Element) throws -> Bool)*/
    /*Swift.(file).Sequence.count(where:(Self.Element) throws -> Bool)*/
    Sequence$implementation.prototype.countWhere = function ($info, predicate) {
    };
    /*Swift.(file).Sequence.reduce(_:Result,_:(Result, Self.Element) throws -> Result)*/
    /*Swift.(file).Sequence.reduce(_:Result,_:(Result, Self.Element) throws -> Result)*/
    Sequence$implementation.prototype.reduceSwift = function ($info, initialResult, nextPartialResult) {
        return this.reduce(nextPartialResult.bind(null, null), initialResult);
    };
    /*Swift.(file).Sequence.reduce(into:Result,_:(inout Result, Self.Element) throws -> ())*/
    /*Swift.(file).Sequence.reduce(into:Result,_:(inout Result, Self.Element) throws -> ())*/
    Sequence$implementation.prototype.reduceInto = function ($info, initialResult, updateAccumulatingResult) {
    };
    /*Swift.(file).Sequence.reversed()*/
    /*Swift.(file).Sequence.reversed()*/
    Sequence$implementation.prototype.reversed = function ($info) {
    };
    /*Swift.(file).Sequence.flatMap(_:(Self.Element) throws -> SegmentOfResult)*/
    /*Swift.(file).Sequence.flatMap(_:(Self.Element) throws -> SegmentOfResult)*/
    Sequence$implementation.prototype.flatMap = function ($info, transform) {
    };
    /*Swift.(file).Sequence.compactMap(_:(Self.Element) throws -> ElementOfResult?)*/
    /*Swift.(file).Sequence.compactMap(_:(Self.Element) throws -> ElementOfResult?)*/
    Sequence$implementation.prototype.compactMap = function ($info, transform) {
    };
    /*Swift.(file).Sequence.sorted()*/
    /*Swift.(file).Sequence.sorted()*/
    Sequence$implementation.prototype.sorted = function ($info) {
    };
    /*Swift.(file).Sequence.sorted(by:(Self.Element, Self.Element) throws -> Bool)*/
    /*Swift.(file).Sequence.sorted(by:(Self.Element, Self.Element) throws -> Bool)*/
    Sequence$implementation.prototype.sortedBy = function ($info, areInIncreasingOrder) {
    };
    /*Swift.(file).Sequence.joined(separator:String)*/
    /*Swift.(file).Sequence.joined(separator:String)*/
    Sequence$implementation.prototype.joinedSeparator = function ($info, separator) {
        return this.join(separator);
    };
    /*Swift.(file).Sequence.flatMap(_:(Self.Element) throws -> ElementOfResult?)*/
    /*Swift.(file).Sequence.flatMap(_:(Self.Element) throws -> ElementOfResult?)*/
    Sequence$implementation.prototype.flatMap = function ($info, transform) {
    };
    /*Swift.(file).Sequence.flatMap(_:(Self.Element) throws -> String)*/
    /*Swift.(file).Sequence.flatMap(_:(Self.Element) throws -> String)*/
    Sequence$implementation.prototype.flatMap = function ($info, transform) {
    };
    return Sequence$implementation;
}());
var DropFirstSequence = /** @class */ (function () {
    function DropFirstSequence() {
    }
    /*Swift.(file).DropFirstSequence.init(_:Base,dropping:Int)*/
    /*Swift.(file).DropFirstSequence.init(_:Base,dropping:Int)*/
    DropFirstSequence.prototype.initDroppingInt = function ($info, base, limit) {
    };
    /*Swift.(file).DropFirstSequence.makeIterator()*/
    /*Swift.(file).Sequence.makeIterator()*/
    DropFirstSequence.prototype.makeIterator = function ($info) {
        var _this = this;
        return new SwiftIterator(function (current) { return _this.contains(null, current + _this.lowerBound) ? current + _this.lowerBound : null; });
    };
    /*Swift.(file).DropFirstSequence.dropFirst(_:Int)*/
    /*Swift.(file).DropFirstSequence.dropFirst(_:Int)*/
    DropFirstSequence.prototype.dropFirst = function ($info, k) {
    };
    DropFirstSequence.$struct = true;
    DropFirstSequence.$infoAddress = '0x7fb851256d20';
    return DropFirstSequence;
}());
if (typeof Sequence$implementation != 'undefined')
    _mixin(DropFirstSequence, Sequence$implementation, false);
var PrefixSequence = /** @class */ (function () {
    function PrefixSequence() {
    }
    /*Swift.(file).PrefixSequence.init(_:Base,maxLength:Int)*/
    /*Swift.(file).PrefixSequence.init(_:Base,maxLength:Int)*/
    PrefixSequence.prototype.initMaxLengthInt = function ($info, base, maxLength) {
    };
    /*Swift.(file).PrefixSequence.makeIterator()*/
    /*Swift.(file).Sequence.makeIterator()*/
    PrefixSequence.prototype.makeIterator = function ($info) {
        var _this = this;
        return new SwiftIterator(function (current) { return _this.contains(null, current + _this.lowerBound) ? current + _this.lowerBound : null; });
    };
    /*Swift.(file).PrefixSequence.prefix(_:Int)*/
    /*Swift.(file).PrefixSequence.prefix(_:Int)*/
    PrefixSequence.prototype.prefix = function ($info, maxLength) {
    };
    var _j;
    PrefixSequence.$struct = true;
    PrefixSequence.$infoAddress = '0x7fb8512571a0';
    PrefixSequence.Iterator = (_j = /** @class */ (function () {
            function class_9() {
            }
            /*Swift.(file).PrefixSequence.Iterator.init(_:Base.Iterator,maxLength:Int)*/
            /*Swift.(file).PrefixSequence.Iterator.init(_:Base.Iterator,maxLength:Int)*/
            class_9.prototype.initMaxLengthInt = function ($info, base, maxLength) {
            };
            /*Swift.(file).Iterator.next()*/
            /*Swift.(file).IteratorProtocol.next()*/
            class_9.prototype.next = function ($info) {
            };
            return class_9;
        }()),
        _j.$struct = true,
        _j.$infoAddress = '0x7fb851257518',
        _j);
    return PrefixSequence;
}());
if (typeof IteratorProtocol$implementation != 'undefined')
    _mixin(PrefixSequence.Iterator, IteratorProtocol$implementation, false);
if (typeof Sequence$implementation != 'undefined')
    _mixin(PrefixSequence, Sequence$implementation, false);
var DropWhileSequence = /** @class */ (function () {
    function DropWhileSequence() {
    }
    /*Swift.(file).DropWhileSequence.init(iterator:Base.Iterator,predicate:(DropWhileSequence<Base>.Element) throws -> Bool)*/
    /*Swift.(file).DropWhileSequence.init(iterator:Base.Iterator,predicate:(DropWhileSequence<Base>.Element) throws -> Bool)*/
    DropWhileSequence.prototype.initIteratorPredicatefunction_type = function ($info, iterator, predicate) {
    };
    /*Swift.(file).DropWhileSequence.init(_:Base,predicate:(DropWhileSequence<Base>.Element) throws -> Bool)*/
    /*Swift.(file).DropWhileSequence.init(_:Base,predicate:(DropWhileSequence<Base>.Element) throws -> Bool)*/
    DropWhileSequence.prototype.initPredicatefunction_type = function ($info, base, predicate) {
    };
    /*Swift.(file).DropWhileSequence.makeIterator()*/
    /*Swift.(file).Sequence.makeIterator()*/
    DropWhileSequence.prototype.makeIterator = function ($info) {
        var _this = this;
        return new SwiftIterator(function (current) { return _this.contains(null, current + _this.lowerBound) ? current + _this.lowerBound : null; });
    };
    /*Swift.(file).DropWhileSequence.drop(while:(DropWhileSequence<Base>.Element) throws -> Bool)*/
    /*Swift.(file).DropWhileSequence.drop(while:(DropWhileSequence<Base>.Element) throws -> Bool)*/
    DropWhileSequence.prototype.dropWhile = function ($info, predicate) {
    };
    var _k;
    DropWhileSequence.$struct = true;
    DropWhileSequence.$infoAddress = '0x7fb851257b10';
    DropWhileSequence.Iterator = (_k = /** @class */ (function () {
            function class_10() {
            }
            /*Swift.(file).DropWhileSequence.Iterator.init(_:Base.Iterator,nextElement:DropWhileSequence<Base>.Iterator.Element?)*/
            /*Swift.(file).DropWhileSequence.Iterator.init(_:Base.Iterator,nextElement:DropWhileSequence<Base>.Iterator.Element?)*/
            class_10.prototype.initNextElementOptional = function ($info, iterator, nextElement) {
            };
            /*Swift.(file).Iterator.next()*/
            /*Swift.(file).IteratorProtocol.next()*/
            class_10.prototype.next = function ($info) {
            };
            return class_10;
        }()),
        _k.$struct = true,
        _k.$infoAddress = '0x7fb851257e88',
        _k);
    return DropWhileSequence;
}());
if (typeof IteratorProtocol$implementation != 'undefined')
    _mixin(DropWhileSequence.Iterator, IteratorProtocol$implementation, false);
if (typeof Sequence$implementation != 'undefined')
    _mixin(DropWhileSequence, Sequence$implementation, false);
var IteratorSequence = /** @class */ (function () {
    function IteratorSequence() {
    }
    /*Swift.(file).IteratorSequence.init(_:Base)*/
    /*Swift.(file).IteratorSequence.init(_:Base)*/
    IteratorSequence.prototype.init = function ($info, base) {
        return base;
    };
    /*Swift.(file).IteratorSequence.next()*/
    /*Swift.(file).IteratorProtocol.next()*/
    IteratorSequence.prototype.next = function ($info) {
    };
    IteratorSequence.$struct = true;
    IteratorSequence.$infoAddress = '0x7fb851258d00';
    return IteratorSequence;
}());
if (typeof IteratorProtocol$implementation != 'undefined')
    _mixin(IteratorSequence, IteratorProtocol$implementation, false);
if (typeof Sequence$implementation != 'undefined')
    _mixin(IteratorSequence, Sequence$implementation, false);
var _SetAnyHashableBox = /** @class */ (function () {
    function _SetAnyHashableBox() {
    }
    /*Swift.(file)._SetAnyHashableBox.init(_:Set<Element>)*/
    /*Swift.(file)._SetAnyHashableBox.init(_:Set<Element>)*/
    _SetAnyHashableBox.prototype.initSet = function ($info, value) {
        return value;
    };
    _SetAnyHashableBox.$struct = true;
    _SetAnyHashableBox.$infoAddress = '0x7fb85125b760';
    return _SetAnyHashableBox;
}());
if (typeof _AnyHashableBox$implementation != 'undefined')
    _mixin(_SetAnyHashableBox, _AnyHashableBox$implementation, false);
var SetAlgebra$implementation = /** @class */ (function () {
    function SetAlgebra$implementation() {
    }
    /*Swift.(file).SetAlgebra.init(_:S)*/
    /*Swift.(file).SetAlgebra.init(_:S)*/
    SetAlgebra$implementation.prototype.init = function ($info, sequence) {
        return sequence;
    };
    /*Swift.(file).SetAlgebra.subtract(_:Self)*/
    /*Swift.(file).SetAlgebra.subtract(_:Self)*/
    SetAlgebra$implementation.prototype.subtract = function ($info, other) {
    };
    /*Swift.(file).SetAlgebra.isSubset(of:Self)*/
    /*Swift.(file).SetAlgebra.isSubset(of:Self)*/
    SetAlgebra$implementation.prototype.isSubsetOf = function ($info, other) {
    };
    /*Swift.(file).SetAlgebra.isSuperset(of:Self)*/
    /*Swift.(file).SetAlgebra.isSuperset(of:Self)*/
    SetAlgebra$implementation.prototype.isSupersetOf = function ($info, other) {
    };
    /*Swift.(file).SetAlgebra.isDisjoint(with:Self)*/
    /*Swift.(file).SetAlgebra.isDisjoint(with:Self)*/
    SetAlgebra$implementation.prototype.isDisjointWith = function ($info, other) {
    };
    /*Swift.(file).SetAlgebra.subtracting(_:Self)*/
    /*Swift.(file).SetAlgebra.subtracting(_:Self)*/
    SetAlgebra$implementation.prototype.subtracting = function ($info, other) {
    };
    /*Swift.(file).SetAlgebra.isEmpty*/ /**/ ;
    /*Swift.(file).SetAlgebra.isStrictSuperset(of:Self)*/
    /*Swift.(file).SetAlgebra.isStrictSuperset(of:Self)*/
    SetAlgebra$implementation.prototype.isStrictSupersetOf = function ($info, other) {
    };
    /*Swift.(file).SetAlgebra.isStrictSubset(of:Self)*/
    /*Swift.(file).SetAlgebra.isStrictSubset(of:Self)*/
    SetAlgebra$implementation.prototype.isStrictSubsetOf = function ($info, other) {
    };
    /*Swift.(file).SetAlgebra.init(arrayLiteral:[Self.Element])*/
    /*Swift.(file).SetAlgebra.init(arrayLiteral:[Self.Element])*/
    SetAlgebra$implementation.prototype.initArrayLiteralArray = function ($info, arrayLiteral) {
        return arrayLiteral;
    };
    return SetAlgebra$implementation;
}());
if (typeof Equatable$implementation != 'undefined')
    _mixin(SetAlgebra$implementation, Equatable$implementation, false);
if (typeof ExpressibleByArrayLiteral$implementation != 'undefined')
    _mixin(SetAlgebra$implementation, ExpressibleByArrayLiteral$implementation, false);
var _SetBuilder = /** @class */ (function () {
    function _SetBuilder() {
    }
    /*Swift.(file)._SetBuilder.init(count:Int)*/
    /*Swift.(file)._SetBuilder.init(count:Int)*/
    _SetBuilder.prototype.initCountInt = function ($info, count) {
        return count;
    };
    /*Swift.(file)._SetBuilder.add(member:Element)*/
    /*Swift.(file)._SetBuilder.add(member:Element)*/
    _SetBuilder.prototype.addMember = function ($info, member) {
    };
    /*Swift.(file)._SetBuilder.take()*/
    /*Swift.(file)._SetBuilder.take()*/
    _SetBuilder.prototype.take = function ($info) {
    };
    _SetBuilder.$struct = true;
    _SetBuilder.$infoAddress = '0x7fb851277450';
    return _SetBuilder;
}());
var _RawSetStorage = /** @class */ (function (_super) {
    __extends(_RawSetStorage, _super);
    function _RawSetStorage() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    /*Swift.(file)._RawSetStorage.init(_doNotCallMe:())*/
    /*Swift.(file)._RawSetStorage.init(_doNotCallMe:())*/
    _RawSetStorage.prototype.init_doNotCallMetuple_type = function ($info, _doNotCallMe) {
        return _doNotCallMe;
    };
    /*Swift.(file)._RawSetStorage.init()*/
    /*Swift.(file).__SwiftNativeNSSet.init()*/
    _RawSetStorage.prototype.init = function ($info) {
    };
    /*Swift.(file)._RawSetStorage.empty*/ /*
    static empty$get() {
    return this.empty
    }
    static get empty() { return this.empty$get() }*/ ;
    _RawSetStorage.$infoAddress = '0x7fb851278f10';
    return _RawSetStorage;
}(__SwiftNativeNSSet));
var _SetBuffer$implementation = /** @class */ (function () {
    function _SetBuffer$implementation() {
    }
    return _SetBuffer$implementation;
}());
var _NSFastEnumeration$implementation = /** @class */ (function () {
    function _NSFastEnumeration$implementation() {
    }
    return _NSFastEnumeration$implementation;
}());
if (typeof _ShadowProtocol$implementation != 'undefined')
    _mixin(_NSFastEnumeration$implementation, _ShadowProtocol$implementation, false);
var _NSEnumerator$implementation = /** @class */ (function () {
    function _NSEnumerator$implementation() {
    }
    return _NSEnumerator$implementation;
}());
if (typeof _ShadowProtocol$implementation != 'undefined')
    _mixin(_NSEnumerator$implementation, _ShadowProtocol$implementation, false);
var _NSCopying$implementation = /** @class */ (function () {
    function _NSCopying$implementation() {
    }
    return _NSCopying$implementation;
}());
if (typeof _ShadowProtocol$implementation != 'undefined')
    _mixin(_NSCopying$implementation, _ShadowProtocol$implementation, false);
var _NSArrayCore$implementation = /** @class */ (function () {
    function _NSArrayCore$implementation() {
    }
    return _NSArrayCore$implementation;
}());
if (typeof _NSCopying$implementation != 'undefined')
    _mixin(_NSArrayCore$implementation, _NSCopying$implementation, false);
if (typeof _NSFastEnumeration$implementation != 'undefined')
    _mixin(_NSArrayCore$implementation, _NSFastEnumeration$implementation, false);
var _NSDictionaryCore$implementation = /** @class */ (function () {
    function _NSDictionaryCore$implementation() {
    }
    return _NSDictionaryCore$implementation;
}());
if (typeof _NSCopying$implementation != 'undefined')
    _mixin(_NSDictionaryCore$implementation, _NSCopying$implementation, false);
if (typeof _NSFastEnumeration$implementation != 'undefined')
    _mixin(_NSDictionaryCore$implementation, _NSFastEnumeration$implementation, false);
var _NSDictionary$implementation = /** @class */ (function () {
    function _NSDictionary$implementation() {
    }
    return _NSDictionary$implementation;
}());
if (typeof _NSDictionaryCore$implementation != 'undefined')
    _mixin(_NSDictionary$implementation, _NSDictionaryCore$implementation, false);
var _NSSetCore$implementation = /** @class */ (function () {
    function _NSSetCore$implementation() {
    }
    return _NSSetCore$implementation;
}());
if (typeof _NSCopying$implementation != 'undefined')
    _mixin(_NSSetCore$implementation, _NSCopying$implementation, false);
if (typeof _NSFastEnumeration$implementation != 'undefined')
    _mixin(_NSSetCore$implementation, _NSFastEnumeration$implementation, false);
var _NSNumber$implementation = /** @class */ (function () {
    function _NSNumber$implementation() {
    }
    return _NSNumber$implementation;
}());
var _SmallBuffer = /** @class */ (function () {
    function _SmallBuffer() {
    }
    /*Swift.(file)._SmallBuffer.init()*/
    /*Swift.(file)._SmallBuffer.init()*/
    _SmallBuffer.prototype.init = function ($info) {
    };
    /*Swift.(file)._SmallBuffer.stride*/ /*
    stride$get() {
    return this.stride
    }
    get stride() { return this.stride$get() }*/ ;
    /*Swift.(file)._SmallBuffer.byteCapacity*/ /*
    byteCapacity$get() {
    return this.byteCapacity
    }
    get byteCapacity() { return this.byteCapacity$get() }*/ ;
    /*Swift.(file)._SmallBuffer.capacity*/ /*
    capacity$get() {
    return this.capacity
    }
    get capacity() { return this.capacity$get() }*/ ;
    /*Swift.(file)._SmallBuffer.subscript(_:Int)*/
    /*Swift.(file)._SmallBuffer.subscript(_:Int)*/
    _SmallBuffer.prototype.subscript$get = function ($info, i) {
        return this[i];
    }; /*Swift.(file)._SmallBuffer.subscript(_:Int)*/
    /*Swift.(file)._SmallBuffer.subscript(_:Int)*/
    _SmallBuffer.prototype.subscript$set = function ($info, newValue, i) {
        this[i] = newValue;
    };
    _SmallBuffer.$struct = true;
    _SmallBuffer.$infoAddress = '0x7fb85127d868';
    return _SmallBuffer;
}());
var StrideToIterator = /** @class */ (function () {
    function StrideToIterator() {
    }
    /*Swift.(file).StrideToIterator.init(_start:Element,end:Element,stride:Element.Stride)*/
    /*Swift.(file).StrideToIterator.init(_start:Element,end:Element,stride:Element.Stride)*/
    StrideToIterator.prototype.init_startEndStride = function ($info, _start, end, stride) {
    };
    /*Swift.(file).StrideToIterator.next()*/
    /*Swift.(file).IteratorProtocol.next()*/
    StrideToIterator.prototype.next = function ($info) {
    };
    StrideToIterator.$struct = true;
    StrideToIterator.$infoAddress = '0x7fb851291ac8';
    return StrideToIterator;
}());
if (typeof IteratorProtocol$implementation != 'undefined')
    _mixin(StrideToIterator, IteratorProtocol$implementation, false);
var StrideThroughIterator = /** @class */ (function () {
    function StrideThroughIterator() {
    }
    /*Swift.(file).StrideThroughIterator.init(_start:Element,end:Element,stride:Element.Stride)*/
    /*Swift.(file).StrideThroughIterator.init(_start:Element,end:Element,stride:Element.Stride)*/
    StrideThroughIterator.prototype.init_startEndStride = function ($info, _start, end, stride) {
    };
    /*Swift.(file).StrideThroughIterator.next()*/
    /*Swift.(file).IteratorProtocol.next()*/
    StrideThroughIterator.prototype.next = function ($info) {
    };
    StrideThroughIterator.$struct = true;
    StrideThroughIterator.$infoAddress = '0x7fb851292a70';
    return StrideThroughIterator;
}());
if (typeof IteratorProtocol$implementation != 'undefined')
    _mixin(StrideThroughIterator, IteratorProtocol$implementation, false);
var _StringBreadcrumbs = /** @class */ (function () {
    function _StringBreadcrumbs() {
    }
    /*Swift.(file)._StringBreadcrumbs.utf16Length*/ /*
    utf16Length$get() {
    return this.utf16Length
    }
    get utf16Length() { return this.utf16Length$get() }*/ ;
    /*Swift.(file)._StringBreadcrumbs.crumbs*/ /*
    crumbs$get() {
    return this.crumbs
    }
    get crumbs() { return this.crumbs$get() }*/ ;
    /*Swift.(file)._StringBreadcrumbs.init(_:String)*/
    /*Swift.(file)._StringBreadcrumbs.init(_:String)*/
    _StringBreadcrumbs.prototype.initString = function ($info, str) {
        return str;
    };
    /*Swift.(file)._StringBreadcrumbs.stride*/ /*
    stride$get() {
    return this.stride
    }
    get stride() { return this.stride$get() }*/ ;
    /*Swift.(file)._StringBreadcrumbs.getBreadcrumb(forOffset:Int)*/
    /*Swift.(file)._StringBreadcrumbs.getBreadcrumb(forOffset:Int)*/
    _StringBreadcrumbs.prototype.getBreadcrumbForOffset = function ($info, offset) {
    };
    /*Swift.(file)._StringBreadcrumbs.getBreadcrumb(forIndex:String.Index)*/
    /*Swift.(file)._StringBreadcrumbs.getBreadcrumb(forIndex:String.Index)*/
    _StringBreadcrumbs.prototype.getBreadcrumbForIndex = function ($info, idx) {
    };
    _StringBreadcrumbs.$infoAddress = '0x7fb851294570';
    return _StringBreadcrumbs;
}());
var _KnownCocoaString = /** @class */ (function () {
    function _KnownCocoaString() {
    }
    Object.defineProperty(_KnownCocoaString, "storage", {
        get: function () { return Object.assign(new _KnownCocoaString(), __assign({ rawValue: "storage" }, Array.from(arguments).slice(1))); },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(_KnownCocoaString, "shared", {
        get: function () { return Object.assign(new _KnownCocoaString(), __assign({ rawValue: "shared" }, Array.from(arguments).slice(1))); },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(_KnownCocoaString, "cocoa", {
        get: function () { return Object.assign(new _KnownCocoaString(), __assign({ rawValue: "cocoa" }, Array.from(arguments).slice(1))); },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(_KnownCocoaString, "tagged", {
        get: function () { return Object.assign(new _KnownCocoaString(), __assign({ rawValue: "tagged" }, Array.from(arguments).slice(1))); },
        enumerable: true,
        configurable: true
    });
    /*Swift.(file)._KnownCocoaString.init(_:_CocoaString)*/
    /*Swift.(file)._KnownCocoaString.init(_:_CocoaString)*/
    _KnownCocoaString.prototype.init_CocoaString = function ($info, str) {
        return str;
    };
    /*Swift.(file)._KnownCocoaString.==(_:_KnownCocoaString,_:_KnownCocoaString)*/
    /*Swift.(file).Equatable.==infix(_:Self,_:Self)*/
    _KnownCocoaString.infix_61_61 = function ($info, a, b) {
        return a == b;
    };
    /*Swift.(file)._KnownCocoaString.hashValue*/ /*
    hashValue$get() {
    return this.hashValue
    }
    get hashValue() { return this.hashValue$get() }*/ ;
    /*Swift.(file)._KnownCocoaString.hash(into:Hasher)*/
    /*Swift.(file).Hashable.hash(into:Hasher)*/
    _KnownCocoaString.prototype.hashInto = function ($info, hasher$inout) {
    };
    _KnownCocoaString.$infoAddress = '0x7fb85182d5c8';
    return _KnownCocoaString;
}());
var CocoaStringPointer = /** @class */ (function () {
    function CocoaStringPointer() {
    }
    CocoaStringPointer.ascii = function () { return Object.assign(new CocoaStringPointer(), __assign({ rawValue: "ascii" }, Array.from(arguments).slice(1))); };
    CocoaStringPointer.utf8 = function () { return Object.assign(new CocoaStringPointer(), __assign({ rawValue: "utf8" }, Array.from(arguments).slice(1))); };
    CocoaStringPointer.utf16 = function () { return Object.assign(new CocoaStringPointer(), __assign({ rawValue: "utf16" }, Array.from(arguments).slice(1))); };
    Object.defineProperty(CocoaStringPointer, "none", {
        get: function () { return Object.assign(new CocoaStringPointer(), __assign({ rawValue: "none" }, Array.from(arguments).slice(1))); },
        enumerable: true,
        configurable: true
    });
    CocoaStringPointer.$infoAddress = '0x7fb851297620';
    return CocoaStringPointer;
}());
var __SwiftNativeNSString = /** @class */ (function () {
    function __SwiftNativeNSString() {
    }
    /*Swift.(file).__SwiftNativeNSString.init()*/
    /*Swift.(file).__SwiftNativeNSString.init()*/
    __SwiftNativeNSString.prototype.init = function ($info) {
    };
    __SwiftNativeNSString.$infoAddress = '0x7fb851297d10';
    return __SwiftNativeNSString;
}());
var _StringComparisonResult = /** @class */ (function () {
    function _StringComparisonResult() {
    }
    Object.defineProperty(_StringComparisonResult, "equal", {
        get: function () { return Object.assign(new _StringComparisonResult(), __assign({ rawValue: "equal" }, Array.from(arguments).slice(1))); },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(_StringComparisonResult, "less", {
        get: function () { return Object.assign(new _StringComparisonResult(), __assign({ rawValue: "less" }, Array.from(arguments).slice(1))); },
        enumerable: true,
        configurable: true
    });
    /*Swift.(file)._StringComparisonResult.init(signedNotation:Int)*/
    /*Swift.(file)._StringComparisonResult.init(signedNotation:Int)*/
    _StringComparisonResult.prototype.initSignedNotationInt = function ($info, int) {
        return int;
    };
    /*Swift.(file)._StringComparisonResult.==infix(_:_StringComparisonResult,_:_StringComparisonResult)*/
    /*Swift.(file).Equatable.==infix(_:Self,_:Self)*/
    _StringComparisonResult.infix_61_61 = function ($info, lhs, rhs) {
        return lhs == rhs;
    };
    /*Swift.(file)._StringComparisonResult.hashValue*/ /*
    hashValue$get() {
    return this.hashValue
    }
    get hashValue() { return this.hashValue$get() }*/ ;
    /*Swift.(file)._StringComparisonResult.hash(into:Hasher)*/
    /*Swift.(file).Hashable.hash(into:Hasher)*/
    _StringComparisonResult.prototype.hashInto = function ($info, hasher$inout) {
    };
    _StringComparisonResult.$infoAddress = '0x7fb851831418';
    return _StringComparisonResult;
}());
var _StringGuts = /** @class */ (function () {
    function _StringGuts() {
    }
    /*Swift.(file)._StringGuts.init(_:_StringObject)*/
    /*Swift.(file)._StringGuts.init(_:_StringObject)*/
    _StringGuts.prototype.init_StringObject = function ($info, object) {
        return object;
    };
    /*Swift.(file)._StringGuts.init()*/
    /*Swift.(file)._StringGuts.init()*/
    _StringGuts.prototype.init = function ($info) {
    };
    /*Swift.(file)._StringGuts.foreignHasNormalizationBoundary(before:String.Index)*/
    /*Swift.(file)._StringGuts.foreignHasNormalizationBoundary(before:String.Index)*/
    _StringGuts.prototype.foreignHasNormalizationBoundaryBefore = function ($info, index) {
    };
    /*Swift.(file)._StringGuts.getBreadcrumbsPtr()*/
    /*Swift.(file)._StringGuts.getBreadcrumbsPtr()*/
    _StringGuts.prototype.getBreadcrumbsPtr = function ($info) {
    };
    /*Swift.(file)._StringGuts.populateBreadcrumbs(_:UnsafeMutablePointer<_StringBreadcrumbs?>)*/
    /*Swift.(file)._StringGuts.populateBreadcrumbs(_:UnsafeMutablePointer<_StringBreadcrumbs?>)*/
    _StringGuts.prototype.populateBreadcrumbs = function ($info, mutPtr) {
    };
    /*Swift.(file)._StringGuts.rawBits*/ /*
    rawBits$get() {
    return this.rawBits
    }
    get rawBits() { return this.rawBits$get() }*/ ;
    /*Swift.(file)._StringGuts.init(_:_SmallString)*/
    /*Swift.(file)._StringGuts.init(_:_SmallString)*/
    _StringGuts.prototype.init_SmallString = function ($info, smol) {
        return smol;
    };
    /*Swift.(file)._StringGuts.init(_:UnsafeBufferPointer<UInt8>,isASCII:Bool)*/
    /*Swift.(file)._StringGuts.init(_:UnsafeBufferPointer<UInt8>,isASCII:Bool)*/
    _StringGuts.prototype.initUnsafeBufferPointerIsASCIIBool = function ($info, bufPtr, isASCII) {
    };
    /*Swift.(file)._StringGuts.init(_:_StringStorage)*/
    /*Swift.(file)._StringGuts.init(_:_StringStorage)*/
    _StringGuts.prototype.init_StringStorage = function ($info, storage) {
        return storage;
    };
    /*Swift.(file)._StringGuts.init(_:_SharedStringStorage)*/
    /*Swift.(file)._StringGuts.init(_:_SharedStringStorage)*/
    _StringGuts.prototype.init_SharedStringStorage = function ($info, storage) {
        return storage;
    };
    /*Swift.(file)._StringGuts.init(cocoa:AnyObject,providesFastUTF8:Bool,isASCII:Bool,length:Int)*/
    /*Swift.(file)._StringGuts.init(cocoa:AnyObject,providesFastUTF8:Bool,isASCII:Bool,length:Int)*/
    _StringGuts.prototype.initCocoaAnyObjectProvidesFastUTF8BoolIsASCIIBoolLengthInt = function ($info, cocoa, providesFastUTF8, isASCII, _length) {
    };
    /*Swift.(file)._StringGuts.count*/ /*
    count$get() {
    return this.count
    }
    get count() { return this.count$get() }*/ ;
    /*Swift.(file)._StringGuts.isEmpty*/ /*
    isEmpty$get() {
    return this.isEmpty
    }
    get isEmpty() { return this.isEmpty$get() }*/ ;
    /*Swift.(file)._StringGuts.isSmall*/ /*
    isSmall$get() {
    return this.isSmall
    }
    get isSmall() { return this.isSmall$get() }*/ ;
    /*Swift.(file)._StringGuts.isSmallASCII*/ /*
    isSmallASCII$get() {
    return this.isSmallASCII
    }
    get isSmallASCII() { return this.isSmallASCII$get() }*/ ;
    /*Swift.(file)._StringGuts.asSmall*/ /*
    asSmall$get() {
    return this.asSmall
    }
    get asSmall() { return this.asSmall$get() }*/ ;
    /*Swift.(file)._StringGuts.isASCII*/ /*
    isASCII$get() {
    return this.isASCII
    }
    get isASCII() { return this.isASCII$get() }*/ ;
    /*Swift.(file)._StringGuts.isFastASCII*/ /*
    isFastASCII$get() {
    return this.isFastASCII
    }
    get isFastASCII() { return this.isFastASCII$get() }*/ ;
    /*Swift.(file)._StringGuts.isNFC*/ /*
    isNFC$get() {
    return this.isNFC
    }
    get isNFC() { return this.isNFC$get() }*/ ;
    /*Swift.(file)._StringGuts.isNFCFastUTF8*/ /*
    isNFCFastUTF8$get() {
    return this.isNFCFastUTF8
    }
    get isNFCFastUTF8() { return this.isNFCFastUTF8$get() }*/ ;
    /*Swift.(file)._StringGuts.hasNativeStorage*/ /*
    hasNativeStorage$get() {
    return this.hasNativeStorage
    }
    get hasNativeStorage() { return this.hasNativeStorage$get() }*/ ;
    /*Swift.(file)._StringGuts.hasSharedStorage*/ /*
    hasSharedStorage$get() {
    return this.hasSharedStorage
    }
    get hasSharedStorage() { return this.hasSharedStorage$get() }*/ ;
    /*Swift.(file)._StringGuts.hasBreadcrumbs*/ /*
    hasBreadcrumbs$get() {
    return this.hasBreadcrumbs
    }
    get hasBreadcrumbs() { return this.hasBreadcrumbs$get() }*/ ;
    /*Swift.(file)._StringGuts.isFastUTF8*/ /*
    isFastUTF8$get() {
    return this.isFastUTF8
    }
    get isFastUTF8() { return this.isFastUTF8$get() }*/ ;
    /*Swift.(file)._StringGuts.isForeign*/ /*
    isForeign$get() {
    return this.isForeign
    }
    get isForeign() { return this.isForeign$get() }*/ ;
    /*Swift.(file)._StringGuts.withFastUTF8(_:(UnsafeBufferPointer<UInt8>) throws -> R)*/
    /*Swift.(file)._StringGuts.withFastUTF8(_:(UnsafeBufferPointer<UInt8>) throws -> R)*/
    _StringGuts.prototype.withFastUTF8 = function ($info, f) {
    };
    /*Swift.(file)._StringGuts.withFastUTF8(range:Range<Int>,_:(UnsafeBufferPointer<UInt8>) throws -> R)*/
    /*Swift.(file)._StringGuts.withFastUTF8(range:Range<Int>,_:(UnsafeBufferPointer<UInt8>) throws -> R)*/
    _StringGuts.prototype.withFastUTF8Range = function ($info, range, f) {
    };
    /*Swift.(file)._StringGuts.withFastCChar(_:(UnsafeBufferPointer<CChar>) throws -> R)*/
    /*Swift.(file)._StringGuts.withFastCChar(_:(UnsafeBufferPointer<CChar>) throws -> R)*/
    _StringGuts.prototype.withFastCChar = function ($info, f) {
    };
    /*Swift.(file)._StringGuts.withCString(_:(UnsafePointer<Int8>) throws -> Result)*/
    /*Swift.(file)._StringGuts.withCString(_:(UnsafePointer<Int8>) throws -> Result)*/
    _StringGuts.prototype.withCString = function ($info, body) {
    };
    /*Swift.(file)._StringGuts.copyUTF8(into:UnsafeMutableBufferPointer<UInt8>)*/
    /*Swift.(file)._StringGuts.copyUTF8(into:UnsafeMutableBufferPointer<UInt8>)*/
    _StringGuts.prototype.copyUTF8Into = function ($info, mbp) {
    };
    /*Swift.(file)._StringGuts.utf8Count*/ /*
    utf8Count$get() {
    return this.utf8Count
    }
    get utf8Count() { return this.utf8Count$get() }*/ ;
    /*Swift.(file)._StringGuts.startIndex*/ /*
    startIndex$get() {
    return this.startIndex
    }
    get startIndex() { return this.startIndex$get() }*/ ;
    /*Swift.(file)._StringGuts.endIndex*/ /*
    endIndex$get() {
    return this.endIndex
    }
    get endIndex() { return this.endIndex$get() }*/ ;
    /*Swift.(file)._StringGuts.startASCII*/ /*
    startASCII$get() {
    return this.startASCII
    }
    get startASCII() { return this.startASCII$get() }*/ ;
    /*Swift.(file)._StringGuts.startUTF16*/ /*
    startUTF16$get() {
    return this.startUTF16
    }
    get startUTF16() { return this.startUTF16$get() }*/ ;
    /*Swift.(file)._StringGuts.nativeCapacity*/ /*
    nativeCapacity$get() {
    return this.nativeCapacity
    }
    get nativeCapacity() { return this.nativeCapacity$get() }*/ ;
    /*Swift.(file)._StringGuts.nativeUnusedCapacity*/ /*
    nativeUnusedCapacity$get() {
    return this.nativeUnusedCapacity
    }
    get nativeUnusedCapacity() { return this.nativeUnusedCapacity$get() }*/ ;
    /*Swift.(file)._StringGuts.uniqueNativeCapacity*/ /*
    uniqueNativeCapacity$get() {
    return this.uniqueNativeCapacity
    }
    get uniqueNativeCapacity() { return this.uniqueNativeCapacity$get() }*/ ;
    /*Swift.(file)._StringGuts.uniqueNativeUnusedCapacity*/ /*
    uniqueNativeUnusedCapacity$get() {
    return this.uniqueNativeUnusedCapacity
    }
    get uniqueNativeUnusedCapacity() { return this.uniqueNativeUnusedCapacity$get() }*/ ;
    /*Swift.(file)._StringGuts.isUniqueNative*/ /*
    isUniqueNative$get() {
    return this.isUniqueNative
    }
    get isUniqueNative() { return this.isUniqueNative$get() }*/ ;
    /*Swift.(file)._StringGuts.init(_initialCapacity:Int)*/
    /*Swift.(file)._StringGuts.init(_initialCapacity:Int)*/
    _StringGuts.prototype.init_initialCapacityInt = function ($info, capacity) {
        return capacity;
    };
    /*Swift.(file)._StringGuts.reserveCapacity(_:Int)*/
    /*Swift.(file)._StringGuts.reserveCapacity(_:Int)*/
    _StringGuts.prototype.reserveCapacity = function ($info, n) {
    };
    /*Swift.(file)._StringGuts.grow(_:Int)*/
    /*Swift.(file)._StringGuts.grow(_:Int)*/
    _StringGuts.prototype.grow = function ($info, n) {
    };
    /*Swift.(file)._StringGuts.prepareForAppendInPlace(otherUTF8Count:Int)*/
    /*Swift.(file)._StringGuts.prepareForAppendInPlace(otherUTF8Count:Int)*/
    _StringGuts.prototype.prepareForAppendInPlaceOtherUTF8Count = function ($info, otherCount) {
    };
    /*Swift.(file)._StringGuts.append(_:_StringGuts)*/
    /*Swift.(file)._StringGuts.append(_:_StringGuts)*/
    _StringGuts.prototype.append = function ($info, other) {
    };
    /*Swift.(file)._StringGuts.append(_:_StringGutsSlice)*/
    /*Swift.(file)._StringGuts.append(_:_StringGutsSlice)*/
    _StringGuts.prototype.append = function ($info, slicedOther) {
    };
    /*Swift.(file)._StringGuts.appendInPlace(_:UnsafeBufferPointer<UInt8>,isASCII:Bool)*/
    /*Swift.(file)._StringGuts.appendInPlace(_:UnsafeBufferPointer<UInt8>,isASCII:Bool)*/
    _StringGuts.prototype.appendInPlaceIsASCII = function ($info, other, isASCII) {
    };
    /*Swift.(file)._StringGuts.clear()*/
    /*Swift.(file)._StringGuts.clear()*/
    _StringGuts.prototype.clear = function ($info) {
    };
    /*Swift.(file)._StringGuts.remove(from:_StringGuts.Index,to:_StringGuts.Index)*/
    /*Swift.(file)._StringGuts.remove(from:_StringGuts.Index,to:_StringGuts.Index)*/
    _StringGuts.prototype.removeFromTo = function ($info, lower, upper) {
    };
    /*Swift.(file)._StringGuts.replaceSubrange(_:Range<_StringGuts.Index>,with:C)*/
    /*Swift.(file)._StringGuts.replaceSubrange(_:Range<_StringGuts.Index>,with:C)*/
    _StringGuts.prototype.replaceSubrangeWith = function ($info, bounds, newElements) {
    };
    /*Swift.(file)._StringGuts.uniqueNativeReplaceSubrange(_:Range<_StringGuts.Index>,with:UnsafeBufferPointer<UInt8>,isASCII:Bool)*/
    /*Swift.(file)._StringGuts.uniqueNativeReplaceSubrange(_:Range<_StringGuts.Index>,with:UnsafeBufferPointer<UInt8>,isASCII:Bool)*/
    _StringGuts.prototype.uniqueNativeReplaceSubrangeWithIsASCII = function ($info, bounds, codeUnits, isASCII) {
    };
    /*Swift.(file)._StringGuts.uniqueNativeReplaceSubrange(_:Range<_StringGuts.Index>,with:C)*/
    /*Swift.(file)._StringGuts.uniqueNativeReplaceSubrange(_:Range<_StringGuts.Index>,with:C)*/
    _StringGuts.prototype.uniqueNativeReplaceSubrangeWith = function ($info, bounds, codeUnits) {
    };
    /*Swift.(file)._StringGuts.scalarAlign(_:_StringGuts.Index)*/
    /*Swift.(file)._StringGuts.scalarAlign(_:_StringGuts.Index)*/
    _StringGuts.prototype.scalarAlign = function ($info, idx) {
    };
    /*Swift.(file)._StringGuts.fastUTF8ScalarLength(startingAt:Int)*/
    /*Swift.(file)._StringGuts.fastUTF8ScalarLength(startingAt:Int)*/
    _StringGuts.prototype.fastUTF8ScalarLengthStartingAt = function ($info, i) {
    };
    /*Swift.(file)._StringGuts.fastUTF8ScalarLength(endingAt:Int)*/
    /*Swift.(file)._StringGuts.fastUTF8ScalarLength(endingAt:Int)*/
    _StringGuts.prototype.fastUTF8ScalarLengthEndingAt = function ($info, i) {
    };
    /*Swift.(file)._StringGuts.fastUTF8Scalar(startingAt:Int)*/
    /*Swift.(file)._StringGuts.fastUTF8Scalar(startingAt:Int)*/
    _StringGuts.prototype.fastUTF8ScalarStartingAt = function ($info, i) {
    };
    /*Swift.(file)._StringGuts.isOnUnicodeScalarBoundary(_:String.Index)*/
    /*Swift.(file)._StringGuts.isOnUnicodeScalarBoundary(_:String.Index)*/
    _StringGuts.prototype.isOnUnicodeScalarBoundary = function ($info, i) {
    };
    /*Swift.(file)._StringGuts.foreignErrorCorrectedScalar(startingAt:String.Index)*/
    /*Swift.(file)._StringGuts.foreignErrorCorrectedScalar(startingAt:String.Index)*/
    _StringGuts.prototype.foreignErrorCorrectedScalarStartingAt = function ($info, idx) {
    };
    /*Swift.(file)._StringGuts.foreignErrorCorrectedScalar(endingAt:String.Index)*/
    /*Swift.(file)._StringGuts.foreignErrorCorrectedScalar(endingAt:String.Index)*/
    _StringGuts.prototype.foreignErrorCorrectedScalarEndingAt = function ($info, idx) {
    };
    /*Swift.(file)._StringGuts.foreignErrorCorrectedUTF16CodeUnit(at:String.Index)*/
    /*Swift.(file)._StringGuts.foreignErrorCorrectedUTF16CodeUnit(at:String.Index)*/
    _StringGuts.prototype.foreignErrorCorrectedUTF16CodeUnitAt = function ($info, idx) {
    };
    /*Swift.(file)._StringGuts.foreignScalarAlign(_:_StringGuts.Index)*/
    /*Swift.(file)._StringGuts.foreignScalarAlign(_:_StringGuts.Index)*/
    _StringGuts.prototype.foreignScalarAlign = function ($info, idx) {
    };
    /*Swift.(file)._StringGuts.foreignErrorCorrectedGrapheme(startingAt:Int,endingAt:Int)*/
    /*Swift.(file)._StringGuts.foreignErrorCorrectedGrapheme(startingAt:Int,endingAt:Int)*/
    _StringGuts.prototype.foreignErrorCorrectedGraphemeStartingAtEndingAt = function ($info, start, end) {
    };
    /*Swift.(file)._StringGuts.errorCorrectedScalar(startingAt:Int)*/
    /*Swift.(file)._StringGuts.errorCorrectedScalar(startingAt:Int)*/
    _StringGuts.prototype.errorCorrectedScalarStartingAt = function ($info, i) {
    };
    /*Swift.(file)._StringGuts.errorCorrectedCharacter(startingAt:Int,endingAt:Int)*/
    /*Swift.(file)._StringGuts.errorCorrectedCharacter(startingAt:Int,endingAt:Int)*/
    _StringGuts.prototype.errorCorrectedCharacterStartingAtEndingAt = function ($info, start, end) {
    };
    /*Swift.(file)._StringGuts.isOnGraphemeClusterBoundary(_:String.Index)*/
    /*Swift.(file)._StringGuts.isOnGraphemeClusterBoundary(_:String.Index)*/
    _StringGuts.prototype.isOnGraphemeClusterBoundary = function ($info, i) {
    };
    _StringGuts.$struct = true;
    _StringGuts.$infoAddress = '0x7fb85519a2c8';
    return _StringGuts;
}());
var _StringGutsSlice = /** @class */ (function () {
    function _StringGutsSlice() {
    }
    /*Swift.(file)._StringGutsSlice.init(_:_StringGuts)*/
    /*Swift.(file)._StringGutsSlice.init(_:_StringGuts)*/
    _StringGutsSlice.prototype.init_StringGuts = function ($info, guts) {
        return guts;
    };
    /*Swift.(file)._StringGutsSlice.init(_:_StringGuts,_:Range<Int>)*/
    /*Swift.(file)._StringGutsSlice.init(_:_StringGuts,_:Range<Int>)*/
    _StringGutsSlice.prototype.init_StringGutsRange = function ($info, guts, offsetRange) {
    };
    /*Swift.(file)._StringGutsSlice.start*/ /*
    start$get() {
    return this.start
    }
    get start() { return this.start$get() }*/ ;
    /*Swift.(file)._StringGutsSlice.end*/ /*
    end$get() {
    return this.end
    }
    get end() { return this.end$get() }*/ ;
    /*Swift.(file)._StringGutsSlice.count*/ /*
    count$get() {
    return this.count
    }
    get count() { return this.count$get() }*/ ;
    /*Swift.(file)._StringGutsSlice.isNFCFastUTF8*/ /*
    isNFCFastUTF8$get() {
    return this.isNFCFastUTF8
    }
    get isNFCFastUTF8() { return this.isNFCFastUTF8$get() }*/ ;
    /*Swift.(file)._StringGutsSlice.isASCII*/ /*
    isASCII$get() {
    return this.isASCII
    }
    get isASCII() { return this.isASCII$get() }*/ ;
    /*Swift.(file)._StringGutsSlice.isFastUTF8*/ /*
    isFastUTF8$get() {
    return this.isFastUTF8
    }
    get isFastUTF8() { return this.isFastUTF8$get() }*/ ;
    /*Swift.(file)._StringGutsSlice.utf8Count*/ /*
    utf8Count$get() {
    return this.utf8Count
    }
    get utf8Count() { return this.utf8Count$get() }*/ ;
    /*Swift.(file)._StringGutsSlice.range*/ /*
    range$get() {
    return this.range
    }
    get range() { return this.range$get() }*/ ;
    /*Swift.(file)._StringGutsSlice.withFastUTF8(_:(UnsafeBufferPointer<UInt8>) throws -> R)*/
    /*Swift.(file)._StringGutsSlice.withFastUTF8(_:(UnsafeBufferPointer<UInt8>) throws -> R)*/
    _StringGutsSlice.prototype.withFastUTF8 = function ($info, f) {
    };
    /*Swift.(file)._StringGutsSlice.foreignErrorCorrectedScalar(startingAt:String.Index)*/
    /*Swift.(file)._StringGutsSlice.foreignErrorCorrectedScalar(startingAt:String.Index)*/
    _StringGutsSlice.prototype.foreignErrorCorrectedScalarStartingAt = function ($info, idx) {
    };
    /*Swift.(file)._StringGutsSlice.foreignHasNormalizationBoundary(before:String.Index)*/
    /*Swift.(file)._StringGutsSlice.foreignHasNormalizationBoundary(before:String.Index)*/
    _StringGutsSlice.prototype.foreignHasNormalizationBoundaryBefore = function ($info, index) {
    };
    /*Swift.(file)._StringGutsSlice.withNFCCodeUnitsIterator(_:(_NormalizedUTF8CodeUnitIterator) throws -> R)*/
    /*Swift.(file)._StringGutsSlice.withNFCCodeUnitsIterator(_:(_NormalizedUTF8CodeUnitIterator) throws -> R)*/
    _StringGutsSlice.prototype.withNFCCodeUnitsIterator = function ($info, f) {
    };
    /*Swift.(file)._StringGutsSlice.withNFCCodeUnitsIterator_2(_:(_NormalizedUTF8CodeUnitIterator_2) throws -> R)*/
    /*Swift.(file)._StringGutsSlice.withNFCCodeUnitsIterator_2(_:(_NormalizedUTF8CodeUnitIterator_2) throws -> R)*/
    _StringGutsSlice.prototype.withNFCCodeUnitsIterator_2 = function ($info, f) {
    };
    /*Swift.(file)._StringGutsSlice.compare(with:_StringGutsSlice,expecting:_StringComparisonResult)*/
    /*Swift.(file)._StringGutsSlice.compare(with:_StringGutsSlice,expecting:_StringComparisonResult)*/
    _StringGutsSlice.prototype.compareWithExpecting = function ($info, other, expecting) {
    };
    _StringGutsSlice.$struct = true;
    _StringGutsSlice.$infoAddress = '0x7fb851293b30';
    return _StringGutsSlice;
}());
var _StringObject = /** @class */ (function () {
    function _StringObject() {
    }
    /*Swift.(file)._StringObject.init(zero:())*/
    /*Swift.(file)._StringObject.init(zero:())*/
    _StringObject.prototype.initZerotuple_type = function ($info, zero) {
        return zero;
    };
    /*Swift.(file)._StringObject.rawBits*/ /*
    rawBits$get() {
    return this.rawBits
    }
    get rawBits() { return this.rawBits$get() }*/ ;
    /*Swift.(file)._StringObject.init(bridgeObject:BridgeObject,countAndFlags:_StringObject.CountAndFlags)*/
    /*Swift.(file)._StringObject.init(bridgeObject:BridgeObject,countAndFlags:_StringObject.CountAndFlags)*/
    _StringObject.prototype.initBridgeObjectBridgeObjectCountAndFlags_StringObjectCountAndFlags = function ($info, bridgeObject, countAndFlags) {
    };
    /*Swift.(file)._StringObject.init(object:AnyObject,discriminator:UInt64,countAndFlags:_StringObject.CountAndFlags)*/
    /*Swift.(file)._StringObject.init(object:AnyObject,discriminator:UInt64,countAndFlags:_StringObject.CountAndFlags)*/
    _StringObject.prototype.initObjectAnyObjectDiscriminatorUInt64CountAndFlags_StringObjectCountAndFlags = function ($info, object, discriminator, countAndFlags) {
    };
    /*Swift.(file)._StringObject.init(pointerBits:UInt64,discriminator:UInt64,countAndFlags:_StringObject.CountAndFlags)*/
    /*Swift.(file)._StringObject.init(pointerBits:UInt64,discriminator:UInt64,countAndFlags:_StringObject.CountAndFlags)*/
    _StringObject.prototype.initPointerBitsUInt64DiscriminatorUInt64CountAndFlags_StringObjectCountAndFlags = function ($info, pointerBits, discriminator, countAndFlags) {
    };
    /*Swift.(file)._StringObject.init(rawUncheckedValue:_StringObject.RawBitPattern)*/
    /*Swift.(file)._StringObject.init(rawUncheckedValue:_StringObject.RawBitPattern)*/
    _StringObject.prototype.initRawUncheckedValue_StringObjectRawBitPattern = function ($info, bits) {
        return bits;
    };
    /*Swift.(file)._StringObject.init(rawValue:_StringObject.RawBitPattern)*/
    /*Swift.(file)._StringObject.init(rawValue:_StringObject.RawBitPattern)*/
    _StringObject.prototype.initRawValue_StringObjectRawBitPattern = function ($info, bits) {
        return bits;
    };
    /*Swift.(file)._StringObject.discriminatedObjectRawBits*/ /*
    discriminatedObjectRawBits$get() {
    return this.discriminatedObjectRawBits
    }
    get discriminatedObjectRawBits() { return this.discriminatedObjectRawBits$get() }*/ ;
    /*Swift.(file)._StringObject.nativeBias*/ /*
    static nativeBias$get() {
    return this.nativeBias
    }
    static get nativeBias() { return this.nativeBias$get() }*/ ;
    /*Swift.(file)._StringObject.isImmortal*/ /*
    isImmortal$get() {
    return this.isImmortal
    }
    get isImmortal() { return this.isImmortal$get() }*/ ;
    /*Swift.(file)._StringObject.isMortal*/ /*
    isMortal$get() {
    return this.isMortal
    }
    get isMortal() { return this.isMortal$get() }*/ ;
    /*Swift.(file)._StringObject.isSmall*/ /*
    isSmall$get() {
    return this.isSmall
    }
    get isSmall() { return this.isSmall$get() }*/ ;
    /*Swift.(file)._StringObject.isLarge*/ /*
    isLarge$get() {
    return this.isLarge
    }
    get isLarge() { return this.isLarge$get() }*/ ;
    /*Swift.(file)._StringObject.providesFastUTF8*/ /*
    providesFastUTF8$get() {
    return this.providesFastUTF8
    }
    get providesFastUTF8() { return this.providesFastUTF8$get() }*/ ;
    /*Swift.(file)._StringObject.isForeign*/ /*
    isForeign$get() {
    return this.isForeign
    }
    get isForeign() { return this.isForeign$get() }*/ ;
    /*Swift.(file)._StringObject.hasStorage*/ /*
    hasStorage$get() {
    return this.hasStorage
    }
    get hasStorage() { return this.hasStorage$get() }*/ ;
    /*Swift.(file)._StringObject.hasNativeStorage*/ /*
    hasNativeStorage$get() {
    return this.hasNativeStorage
    }
    get hasNativeStorage() { return this.hasNativeStorage$get() }*/ ;
    /*Swift.(file)._StringObject.hasSharedStorage*/ /*
    hasSharedStorage$get() {
    return this.hasSharedStorage
    }
    get hasSharedStorage() { return this.hasSharedStorage$get() }*/ ;
    /*Swift.(file)._StringObject.largeFastIsTailAllocated*/ /*
    largeFastIsTailAllocated$get() {
    return this.largeFastIsTailAllocated
    }
    get largeFastIsTailAllocated() { return this.largeFastIsTailAllocated$get() }*/ ;
    /*Swift.(file)._StringObject.largeFastIsShared*/ /*
    largeFastIsShared$get() {
    return this.largeFastIsShared
    }
    get largeFastIsShared() { return this.largeFastIsShared$get() }*/ ;
    /*Swift.(file)._StringObject.largeIsCocoa*/ /*
    largeIsCocoa$get() {
    return this.largeIsCocoa
    }
    get largeIsCocoa() { return this.largeIsCocoa$get() }*/ ;
    /*Swift.(file)._StringObject.init(_:_SmallString)*/
    /*Swift.(file)._StringObject.init(_:_SmallString)*/
    _StringObject.prototype.init_SmallString = function ($info, small) {
        return small;
    };
    /*Swift.(file)._StringObject.getSmallCount(fromRaw:UInt64)*/
    /*Swift.(file)._StringObject.getSmallCount(fromRaw:UInt64)*/
    _StringObject.getSmallCountFromRaw = function ($info, x) {
    };
    /*Swift.(file)._StringObject.smallCount*/ /*
    smallCount$get() {
    return this.smallCount
    }
    get smallCount() { return this.smallCount$get() }*/ ;
    /*Swift.(file)._StringObject.getSmallIsASCII(fromRaw:UInt64)*/
    /*Swift.(file)._StringObject.getSmallIsASCII(fromRaw:UInt64)*/
    _StringObject.getSmallIsASCIIFromRaw = function ($info, x) {
    };
    /*Swift.(file)._StringObject.smallIsASCII*/ /*
    smallIsASCII$get() {
    return this.smallIsASCII
    }
    get smallIsASCII() { return this.smallIsASCII$get() }*/ ;
    /*Swift.(file)._StringObject.init(empty:())*/
    /*Swift.(file)._StringObject.init(empty:())*/
    _StringObject.prototype.initEmptytuple_type = function ($info, empty) {
        return empty;
    };
    /*Swift.(file)._StringObject.largeCount*/ /*
    largeCount$get() {
    return this.largeCount
    }
    get largeCount() { return this.largeCount$get() }*/ ;
    /*Swift.(file)._StringObject.largeAddressBits*/ /*
    largeAddressBits$get() {
    return this.largeAddressBits
    }
    get largeAddressBits() { return this.largeAddressBits$get() }*/ ;
    /*Swift.(file)._StringObject.nativeUTF8Start*/ /*
    nativeUTF8Start$get() {
    return this.nativeUTF8Start
    }
    get nativeUTF8Start() { return this.nativeUTF8Start$get() }*/ ;
    /*Swift.(file)._StringObject.nativeUTF8*/ /*
    nativeUTF8$get() {
    return this.nativeUTF8
    }
    get nativeUTF8() { return this.nativeUTF8$get() }*/ ;
    /*Swift.(file)._StringObject.getSharedUTF8Start()*/
    /*Swift.(file)._StringObject.getSharedUTF8Start()*/
    _StringObject.prototype.getSharedUTF8Start = function ($info) {
    };
    /*Swift.(file)._StringObject.sharedUTF8*/ /*
    sharedUTF8$get() {
    return this.sharedUTF8
    }
    get sharedUTF8() { return this.sharedUTF8$get() }*/ ;
    /*Swift.(file)._StringObject.nativeStorage*/ /*
    nativeStorage$get() {
    return this.nativeStorage
    }
    get nativeStorage() { return this.nativeStorage$get() }*/ ;
    /*Swift.(file)._StringObject.sharedStorage*/ /*
    sharedStorage$get() {
    return this.sharedStorage
    }
    get sharedStorage() { return this.sharedStorage$get() }*/ ;
    /*Swift.(file)._StringObject.cocoaObject*/ /*
    cocoaObject$get() {
    return this.cocoaObject
    }
    get cocoaObject() { return this.cocoaObject$get() }*/ ;
    /*Swift.(file)._StringObject.count*/ /*
    count$get() {
    return this.count
    }
    get count() { return this.count$get() }*/ ;
    /*Swift.(file)._StringObject.isASCII*/ /*
    isASCII$get() {
    return this.isASCII
    }
    get isASCII() { return this.isASCII$get() }*/ ;
    /*Swift.(file)._StringObject.isNFC*/ /*
    isNFC$get() {
    return this.isNFC
    }
    get isNFC() { return this.isNFC$get() }*/ ;
    /*Swift.(file)._StringObject.fastUTF8*/ /*
    fastUTF8$get() {
    return this.fastUTF8
    }
    get fastUTF8() { return this.fastUTF8$get() }*/ ;
    /*Swift.(file)._StringObject.hasObjCBridgeableObject*/ /*
    hasObjCBridgeableObject$get() {
    return this.hasObjCBridgeableObject
    }
    get hasObjCBridgeableObject() { return this.hasObjCBridgeableObject$get() }*/ ;
    /*Swift.(file)._StringObject.objCBridgeableObject*/ /*
    objCBridgeableObject$get() {
    return this.objCBridgeableObject
    }
    get objCBridgeableObject() { return this.objCBridgeableObject$get() }*/ ;
    /*Swift.(file)._StringObject.isFastZeroTerminated*/ /*
    isFastZeroTerminated$get() {
    return this.isFastZeroTerminated
    }
    get isFastZeroTerminated() { return this.isFastZeroTerminated$get() }*/ ;
    /*Swift.(file)._StringObject.init(immortal:UnsafeBufferPointer<UInt8>,isASCII:Bool)*/
    /*Swift.(file)._StringObject.init(immortal:UnsafeBufferPointer<UInt8>,isASCII:Bool)*/
    _StringObject.prototype.initImmortalUnsafeBufferPointerIsASCIIBool = function ($info, bufPtr, isASCII) {
    };
    /*Swift.(file)._StringObject.init(_:_StringStorage)*/
    /*Swift.(file)._StringObject.init(_:_StringStorage)*/
    _StringObject.prototype.init_StringStorage = function ($info, storage) {
        return storage;
    };
    /*Swift.(file)._StringObject.init(_:_SharedStringStorage)*/
    /*Swift.(file)._StringObject.init(_:_SharedStringStorage)*/
    _StringObject.prototype.init_SharedStringStorage = function ($info, storage) {
        return storage;
    };
    /*Swift.(file)._StringObject.init(cocoa:AnyObject,providesFastUTF8:Bool,isASCII:Bool,length:Int)*/
    /*Swift.(file)._StringObject.init(cocoa:AnyObject,providesFastUTF8:Bool,isASCII:Bool,length:Int)*/
    _StringObject.prototype.initCocoaAnyObjectProvidesFastUTF8BoolIsASCIIBoolLengthInt = function ($info, cocoa, providesFastUTF8, isASCII, _length) {
    };
    var _l, _m;
    _StringObject.$struct = true;
    _StringObject.$infoAddress = '0x7fb851916f58';
    _StringObject.Nibbles = (_l = /** @class */ (function () {
            function class_11() {
            }
            /*Swift.(file).Nibbles.largeAddressMask*/ /*
            static largeAddressMask$get() {
            return this.largeAddressMask
            }
            static get largeAddressMask() { return this.largeAddressMask$get() }*/ ;
            /*Swift.(file).Nibbles.discriminatorMask*/ /*
            static discriminatorMask$get() {
            return this.discriminatorMask
            }
            static get discriminatorMask() { return this.discriminatorMask$get() }*/ ;
            /*Swift.(file).Nibbles.small(isASCII:Bool)*/
            /*Swift.(file).Nibbles.small(isASCII:Bool)*/
            class_11.smallIsASCII = function ($info, isASCII) {
            };
            /*Swift.(file).Nibbles.small(withCount:Int,isASCII:Bool)*/
            /*Swift.(file).Nibbles.small(withCount:Int,isASCII:Bool)*/
            class_11.smallWithCountIsASCII = function ($info, count, isASCII) {
            };
            /*Swift.(file).Nibbles.largeImmortal()*/
            /*Swift.(file).Nibbles.largeImmortal()*/
            class_11.largeImmortal = function ($info) {
            };
            /*Swift.(file).Nibbles.largeMortal()*/
            /*Swift.(file).Nibbles.largeMortal()*/
            class_11.largeMortal = function ($info) {
            };
            /*Swift.(file).Nibbles.largeCocoa(providesFastUTF8:Bool)*/
            /*Swift.(file).Nibbles.largeCocoa(providesFastUTF8:Bool)*/
            class_11.largeCocoaProvidesFastUTF8 = function ($info, providesFastUTF8) {
            };
            return class_11;
        }()),
        _l.$infoAddress = '0x7fb851917b50',
        _l);
    _StringObject.CountAndFlags = (_m = /** @class */ (function () {
            function class_12() {
            }
            /*Swift.(file)._StringObject.CountAndFlags.init(zero:())*/
            /*Swift.(file)._StringObject.CountAndFlags.init(zero:())*/
            class_12.prototype.initZerotuple_type = function ($info, zero) {
                return zero;
            };
            /*Swift.(file).CountAndFlags.rawBits*/ /*
            rawBits$get() {
            return this.rawBits
            }
            get rawBits() { return this.rawBits$get() }*/ ;
            /*Swift.(file).CountAndFlags.init(rawUnchecked:_StringObject.CountAndFlags.RawBitPattern)*/
            /*Swift.(file).CountAndFlags.init(rawUnchecked:_StringObject.CountAndFlags.RawBitPattern)*/
            class_12.prototype.initRawUnchecked_StringObjectCountAndFlagsRawBitPattern = function ($info, bits) {
                return bits;
            };
            /*Swift.(file).CountAndFlags.init(raw:_StringObject.CountAndFlags.RawBitPattern)*/
            /*Swift.(file).CountAndFlags.init(raw:_StringObject.CountAndFlags.RawBitPattern)*/
            class_12.prototype.initRaw_StringObjectCountAndFlagsRawBitPattern = function ($info, bits) {
                return bits;
            };
            /*Swift.(file).CountAndFlags.countMask*/ /*
            static countMask$get() {
            return this.countMask
            }
            static get countMask() { return this.countMask$get() }*/ ;
            /*Swift.(file).CountAndFlags.flagsMask*/ /*
            static flagsMask$get() {
            return this.flagsMask
            }
            static get flagsMask() { return this.flagsMask$get() }*/ ;
            /*Swift.(file).CountAndFlags.isASCIIMask*/ /*
            static isASCIIMask$get() {
            return this.isASCIIMask
            }
            static get isASCIIMask() { return this.isASCIIMask$get() }*/ ;
            /*Swift.(file).CountAndFlags.isNFCMask*/ /*
            static isNFCMask$get() {
            return this.isNFCMask
            }
            static get isNFCMask() { return this.isNFCMask$get() }*/ ;
            /*Swift.(file).CountAndFlags.isNativelyStoredMask*/ /*
            static isNativelyStoredMask$get() {
            return this.isNativelyStoredMask
            }
            static get isNativelyStoredMask() { return this.isNativelyStoredMask$get() }*/ ;
            /*Swift.(file).CountAndFlags.isTailAllocatedMask*/ /*
            static isTailAllocatedMask$get() {
            return this.isTailAllocatedMask
            }
            static get isTailAllocatedMask() { return this.isTailAllocatedMask$get() }*/ ;
            /*Swift.(file).CountAndFlags.init(count:Int,isASCII:Bool,isNFC:Bool,isNativelyStored:Bool,isTailAllocated:Bool)*/
            /*Swift.(file).CountAndFlags.init(count:Int,isASCII:Bool,isNFC:Bool,isNativelyStored:Bool,isTailAllocated:Bool)*/
            class_12.prototype.initCountIntIsASCIIBoolIsNFCBoolIsNativelyStoredBoolIsTailAllocatedBool = function ($info, count, isASCII, isNFC, isNativelyStored, isTailAllocated) {
            };
            /*Swift.(file).CountAndFlags.init(count:Int,flags:UInt16)*/
            /*Swift.(file).CountAndFlags.init(count:Int,flags:UInt16)*/
            class_12.prototype.initCountIntFlagsUInt16 = function ($info, count, flags) {
            };
            /*Swift.(file).CountAndFlags.init(immortalCount:Int,isASCII:Bool)*/
            /*Swift.(file).CountAndFlags.init(immortalCount:Int,isASCII:Bool)*/
            class_12.prototype.initImmortalCountIntIsASCIIBool = function ($info, immortalCount, isASCII) {
            };
            /*Swift.(file).CountAndFlags.init(mortalCount:Int,isASCII:Bool)*/
            /*Swift.(file).CountAndFlags.init(mortalCount:Int,isASCII:Bool)*/
            class_12.prototype.initMortalCountIntIsASCIIBool = function ($info, mortalCount, isASCII) {
            };
            /*Swift.(file).CountAndFlags.init(sharedCount:Int,isASCII:Bool)*/
            /*Swift.(file).CountAndFlags.init(sharedCount:Int,isASCII:Bool)*/
            class_12.prototype.initSharedCountIntIsASCIIBool = function ($info, sharedCount, isASCII) {
            };
            /*Swift.(file).CountAndFlags.count*/ /*
            count$get() {
            return this.count
            }
            get count() { return this.count$get() }*/ ;
            /*Swift.(file).CountAndFlags.flags*/ /*
            flags$get() {
            return this.flags
            }
            get flags() { return this.flags$get() }*/ ;
            /*Swift.(file).CountAndFlags.isASCII*/ /*
            isASCII$get() {
            return this.isASCII
            }
            get isASCII() { return this.isASCII$get() }*/ ;
            /*Swift.(file).CountAndFlags.isNFC*/ /*
            isNFC$get() {
            return this.isNFC
            }
            get isNFC() { return this.isNFC$get() }*/ ;
            /*Swift.(file).CountAndFlags.isNativelyStored*/ /*
            isNativelyStored$get() {
            return this.isNativelyStored
            }
            get isNativelyStored() { return this.isNativelyStored$get() }*/ ;
            /*Swift.(file).CountAndFlags.isTailAllocated*/ /*
            isTailAllocated$get() {
            return this.isTailAllocated
            }
            get isTailAllocated() { return this.isTailAllocated$get() }*/ ;
            return class_12;
        }()),
        _m.$struct = true,
        _m.$infoAddress = '0x7fb851917d10',
        _m);
    return _StringObject;
}());
var DefaultStringInterpolation = /** @class */ (function () {
    function DefaultStringInterpolation() {
    }
    /*Swift.(file).DefaultStringInterpolation.init(literalCapacity:Int,interpolationCount:Int)*/
    /*Swift.(file).StringInterpolationProtocol.init(literalCapacity:Int,interpolationCount:Int)*/
    DefaultStringInterpolation.prototype.initLiteralCapacityIntInterpolationCountInt = function ($info, literalCapacity, interpolationCount) {
    };
    /*Swift.(file).DefaultStringInterpolation.appendLiteral(_:String)*/
    /*Swift.(file).StringInterpolationProtocol.appendLiteral(_:Self.StringLiteralType)*/
    DefaultStringInterpolation.prototype.appendLiteral = function ($info, literal) {
    };
    /*Swift.(file).DefaultStringInterpolation.appendInterpolation(_:T)*/
    /*Swift.(file).DefaultStringInterpolation.appendInterpolation(_:T)*/
    DefaultStringInterpolation.prototype.appendInterpolation = function ($info, value) {
    };
    /*Swift.(file).DefaultStringInterpolation.appendInterpolation(_:T)*/
    /*Swift.(file).DefaultStringInterpolation.appendInterpolation(_:T)*/
    DefaultStringInterpolation.prototype.appendInterpolation = function ($info, value) {
    };
    /*Swift.(file).DefaultStringInterpolation.appendInterpolation(_:T)*/
    /*Swift.(file).DefaultStringInterpolation.appendInterpolation(_:T)*/
    DefaultStringInterpolation.prototype.appendInterpolation = function ($info, value) {
    };
    /*Swift.(file).DefaultStringInterpolation.appendInterpolation(_:T)*/
    /*Swift.(file).DefaultStringInterpolation.appendInterpolation(_:T)*/
    DefaultStringInterpolation.prototype.appendInterpolation = function ($info, value) {
    };
    /*Swift.(file).DefaultStringInterpolation.make()*/
    /*Swift.(file).DefaultStringInterpolation.make()*/
    DefaultStringInterpolation.prototype.make = function ($info) {
    };
    /*Swift.(file).DefaultStringInterpolation.description*/ /*
    description$get() {
    return this.description
    }
    get description() { return this.description$get() }*/ ;
    /*Swift.(file).DefaultStringInterpolation.write(_:String)*/
    /*Swift.(file).TextOutputStream.write(_:String)*/
    DefaultStringInterpolation.prototype.write = function ($info, string) {
    };
    DefaultStringInterpolation.$struct = true;
    DefaultStringInterpolation.$infoAddress = '0x7fb85182e880';
    return DefaultStringInterpolation;
}());
if (typeof StringInterpolationProtocol$implementation != 'undefined')
    _mixin(DefaultStringInterpolation, StringInterpolationProtocol$implementation, false);
if (typeof CustomStringConvertible$implementation != 'undefined')
    _mixin(DefaultStringInterpolation, CustomStringConvertible$implementation, false);
if (typeof TextOutputStream$implementation != 'undefined')
    _mixin(DefaultStringInterpolation, TextOutputStream$implementation, false);
var _Normalization = /** @class */ (function () {
    function _Normalization() {
    }
    _Normalization.$infoAddress = '0x7fb852b17498';
    return _Normalization;
}());
var _AbstractStringStorage$implementation = /** @class */ (function () {
    function _AbstractStringStorage$implementation() {
    }
    return _AbstractStringStorage$implementation;
}());
if (typeof _NSCopying$implementation != 'undefined')
    _mixin(_AbstractStringStorage$implementation, _NSCopying$implementation, false);
var _StringStorage = /** @class */ (function (_super) {
    __extends(_StringStorage, _super);
    function _StringStorage() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    /*Swift.(file)._StringStorage.isASCII*/ /*
    isASCII$get() {
    return this.isASCII
    }
    get isASCII() { return this.isASCII$get() }*/ ;
    /*Swift.(file)._StringStorage.asString*/ /*
    asString$get() {
    return this.asString
    }
    get asString() { return this.asString$get() }*/ ;
    /*Swift.(file)._StringStorage.hash*/ /*
    hash$get() {
    return this.hash
    }
    get hash() { return this.hash$get() }*/ ;
    /*Swift.(file)._StringStorage.character(at:Int)*/
    /*Swift.(file)._StringStorage.character(at:Int)*/
    _StringStorage.prototype.characterAt = function ($info, offset) {
    };
    /*Swift.(file)._StringStorage.getCharacters(_:UnsafeMutablePointer<UInt16>,range:_SwiftNSRange)*/
    /*Swift.(file)._StringStorage.getCharacters(_:UnsafeMutablePointer<UInt16>,range:_SwiftNSRange)*/
    _StringStorage.prototype.getCharactersRange = function ($info, buffer, aRange) {
    };
    /*Swift.(file)._StringStorage.cString(encoding:UInt)*/
    /*Swift.(file)._StringStorage.cString(encoding:UInt)*/
    _StringStorage.prototype.cStringEncoding = function ($info, encoding) {
    };
    /*Swift.(file)._StringStorage.getCString(_:UnsafeMutablePointer<UInt8>,maxLength:Int,encoding:UInt)*/
    /*Swift.(file)._StringStorage.getCString(_:UnsafeMutablePointer<UInt8>,maxLength:Int,encoding:UInt)*/
    _StringStorage.prototype.getCStringMaxLengthEncoding = function ($info, outputPtr, maxLength, encoding) {
    };
    /*Swift.(file)._StringStorage.fastestEncoding*/ /*
    fastestEncoding$get() {
    return this.fastestEncoding
    }
    get fastestEncoding() { return this.fastestEncoding$get() }*/ ;
    /*Swift.(file)._StringStorage.isEqual(to:AnyObject?)*/
    /*Swift.(file)._StringStorage.isEqual(to:AnyObject?)*/
    _StringStorage.prototype.isEqualTo = function ($info, other) {
    };
    /*Swift.(file)._StringStorage.copy(with:_SwiftNSZone?)*/
    /*Swift.(file)._NSCopying.copy(with:_SwiftNSZone?)*/
    _StringStorage.prototype.copyWith = function ($info, zone) {
    };
    /*Swift.(file)._StringStorage.init(_doNotCallMe:())*/
    /*Swift.(file)._StringStorage.init(_doNotCallMe:())*/
    _StringStorage.prototype.init_doNotCallMetuple_type = function ($info, _doNotCallMe) {
        return _doNotCallMe;
    };
    /*Swift.(file)._StringStorage.init()*/
    /*Swift.(file).__SwiftNativeNSString.init()*/
    _StringStorage.prototype.init = function ($info) {
    };
    /*Swift.(file)._StringStorage.create(realCodeUnitCapacity:Int,countAndFlags:CountAndFlags)*/
    /*Swift.(file)._StringStorage.create(realCodeUnitCapacity:Int,countAndFlags:CountAndFlags)*/
    _StringStorage.createRealCodeUnitCapacityCountAndFlags = function ($info, realCodeUnitCapacity, countAndFlags) {
    };
    /*Swift.(file)._StringStorage.create(capacity:Int,countAndFlags:CountAndFlags)*/
    /*Swift.(file)._StringStorage.create(capacity:Int,countAndFlags:CountAndFlags)*/
    _StringStorage.createCapacityCountAndFlags = function ($info, capacity, countAndFlags) {
    };
    /*Swift.(file)._StringStorage.create(initializingFrom:UnsafeBufferPointer<UInt8>,capacity:Int,isASCII:Bool)*/
    /*Swift.(file)._StringStorage.create(initializingFrom:UnsafeBufferPointer<UInt8>,capacity:Int,isASCII:Bool)*/
    _StringStorage.createInitializingFromCapacityIsASCII = function ($info, bufPtr, capacity, isASCII) {
    };
    /*Swift.(file)._StringStorage.create(initializingFrom:UnsafeBufferPointer<UInt8>,isASCII:Bool)*/
    /*Swift.(file)._StringStorage.create(initializingFrom:UnsafeBufferPointer<UInt8>,isASCII:Bool)*/
    _StringStorage.createInitializingFromIsASCII = function ($info, bufPtr, isASCII) {
    };
    /*Swift.(file)._StringStorage.mutableStart*/ /*
    mutableStart$get() {
    return this.mutableStart
    }
    get mutableStart() { return this.mutableStart$get() }*/ ;
    /*Swift.(file)._StringStorage.mutableEnd*/ /*
    mutableEnd$get() {
    return this.mutableEnd
    }
    get mutableEnd() { return this.mutableEnd$get() }*/ ;
    /*Swift.(file)._StringStorage.start*/ /*
    start$get() {
    return this.start
    }
    get start() { return this.start$get() }*/ ;
    /*Swift.(file)._StringStorage.end*/ /*
    end$get() {
    return this.end
    }
    get end() { return this.end$get() }*/ ;
    /*Swift.(file)._StringStorage.terminator*/ /*
    terminator$get() {
    return this.terminator
    }
    get terminator() { return this.terminator$get() }*/ ;
    /*Swift.(file)._StringStorage.codeUnits*/ /*
    codeUnits$get() {
    return this.codeUnits
    }
    get codeUnits() { return this.codeUnits$get() }*/ ;
    /*Swift.(file)._StringStorage.capacity*/ /*
    capacity$get() {
    return this.capacity
    }
    get capacity() { return this.capacity$get() }*/ ;
    /*Swift.(file)._StringStorage.unusedStorage*/ /*
    unusedStorage$get() {
    return this.unusedStorage
    }
    get unusedStorage() { return this.unusedStorage$get() }*/ ;
    /*Swift.(file)._StringStorage.unusedCapacity*/ /*
    unusedCapacity$get() {
    return this.unusedCapacity
    }
    get unusedCapacity() { return this.unusedCapacity$get() }*/ ;
    /*Swift.(file)._StringStorage.appendInPlace(_:UnsafeBufferPointer<UInt8>,isASCII:Bool)*/
    /*Swift.(file)._StringStorage.appendInPlace(_:UnsafeBufferPointer<UInt8>,isASCII:Bool)*/
    _StringStorage.prototype.appendInPlaceIsASCII = function ($info, other, isASCII) {
    };
    /*Swift.(file)._StringStorage.appendInPlace(_:Iter,isASCII:Bool)*/
    /*Swift.(file)._StringStorage.appendInPlace(_:Iter,isASCII:Bool)*/
    _StringStorage.prototype.appendInPlaceIsASCII = function ($info, other$inout, isASCII) {
    };
    /*Swift.(file)._StringStorage.clear()*/
    /*Swift.(file)._StringStorage.clear()*/
    _StringStorage.prototype.clear = function ($info) {
    };
    /*Swift.(file)._StringStorage.remove(from:Int,to:Int)*/
    /*Swift.(file)._StringStorage.remove(from:Int,to:Int)*/
    _StringStorage.prototype.removeFromTo = function ($info, lower, upper) {
    };
    /*Swift.(file)._StringStorage.replace(from:Int,to:Int,with:UnsafeBufferPointer<UInt8>)*/
    /*Swift.(file)._StringStorage.replace(from:Int,to:Int,with:UnsafeBufferPointer<UInt8>)*/
    _StringStorage.prototype.replaceFromToWith = function ($info, lower, upper, replacement) {
    };
    /*Swift.(file)._StringStorage.replace(from:Int,to:Int,with:C,replacementCount:Int)*/
    /*Swift.(file)._StringStorage.replace(from:Int,to:Int,with:C,replacementCount:Int)*/
    _StringStorage.prototype.replaceFromToWithReplacementCount = function ($info, lower, upper, replacement, replCount) {
    };
    _StringStorage.$infoAddress = '0x7fb85129e9b8';
    return _StringStorage;
}(__SwiftNativeNSString));
if (typeof _AbstractStringStorage$implementation != 'undefined')
    _mixin(_StringStorage, _AbstractStringStorage$implementation, false);
var _SharedStringStorage = /** @class */ (function (_super) {
    __extends(_SharedStringStorage, _super);
    function _SharedStringStorage() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    /*Swift.(file)._SharedStringStorage.count*/ /*
    count$get() {
    return this.count
    }
    get count() { return this.count$get() }*/ ;
    /*Swift.(file)._SharedStringStorage.init(immortal:UnsafePointer<UInt8>,countAndFlags:_StringObject.CountAndFlags)*/
    /*Swift.(file)._SharedStringStorage.init(immortal:UnsafePointer<UInt8>,countAndFlags:_StringObject.CountAndFlags)*/
    _SharedStringStorage.prototype.initImmortalUnsafePointerCountAndFlags_StringObjectCountAndFlags = function ($info, ptr, countAndFlags) {
    };
    /*Swift.(file)._SharedStringStorage.isASCII*/ /*
    isASCII$get() {
    return this.isASCII
    }
    get isASCII() { return this.isASCII$get() }*/ ;
    /*Swift.(file)._SharedStringStorage.asString*/ /*
    asString$get() {
    return this.asString
    }
    get asString() { return this.asString$get() }*/ ;
    /*Swift.(file)._SharedStringStorage.hash*/ /*
    hash$get() {
    return this.hash
    }
    get hash() { return this.hash$get() }*/ ;
    /*Swift.(file)._SharedStringStorage.character(at:Int)*/
    /*Swift.(file)._SharedStringStorage.character(at:Int)*/
    _SharedStringStorage.prototype.characterAt = function ($info, offset) {
    };
    /*Swift.(file)._SharedStringStorage.getCharacters(_:UnsafeMutablePointer<UInt16>,range:_SwiftNSRange)*/
    /*Swift.(file)._SharedStringStorage.getCharacters(_:UnsafeMutablePointer<UInt16>,range:_SwiftNSRange)*/
    _SharedStringStorage.prototype.getCharactersRange = function ($info, buffer, aRange) {
    };
    /*Swift.(file)._SharedStringStorage.fastestEncoding*/ /*
    fastestEncoding$get() {
    return this.fastestEncoding
    }
    get fastestEncoding() { return this.fastestEncoding$get() }*/ ;
    /*Swift.(file)._SharedStringStorage.cString(encoding:UInt)*/
    /*Swift.(file)._SharedStringStorage.cString(encoding:UInt)*/
    _SharedStringStorage.prototype.cStringEncoding = function ($info, encoding) {
    };
    /*Swift.(file)._SharedStringStorage.getCString(_:UnsafeMutablePointer<UInt8>,maxLength:Int,encoding:UInt)*/
    /*Swift.(file)._SharedStringStorage.getCString(_:UnsafeMutablePointer<UInt8>,maxLength:Int,encoding:UInt)*/
    _SharedStringStorage.prototype.getCStringMaxLengthEncoding = function ($info, outputPtr, maxLength, encoding) {
    };
    /*Swift.(file)._SharedStringStorage.isEqual(to:AnyObject?)*/
    /*Swift.(file)._SharedStringStorage.isEqual(to:AnyObject?)*/
    _SharedStringStorage.prototype.isEqualTo = function ($info, other) {
    };
    /*Swift.(file)._SharedStringStorage.copy(with:_SwiftNSZone?)*/
    /*Swift.(file)._NSCopying.copy(with:_SwiftNSZone?)*/
    _SharedStringStorage.prototype.copyWith = function ($info, zone) {
    };
    /*Swift.(file)._SharedStringStorage.init()*/
    /*Swift.(file).__SwiftNativeNSString.init()*/
    _SharedStringStorage.prototype.init = function ($info) {
    };
    _SharedStringStorage.$infoAddress = '0x7fb85129f088';
    return _SharedStringStorage;
}(__SwiftNativeNSString));
if (typeof _AbstractStringStorage$implementation != 'undefined')
    _mixin(_SharedStringStorage, _AbstractStringStorage$implementation, false);
var _OpaqueStringSwitchCache = /** @class */ (function () {
    function _OpaqueStringSwitchCache() {
    }
    /*Swift.(file)._OpaqueStringSwitchCache.b*/ /*
    b$get() {
    return this.b
    }
    get b() { return this.b$get() }*/ ;
    /*Swift.(file)._OpaqueStringSwitchCache.init(a:Word,b:Word)*/
    /*Swift.(file)._OpaqueStringSwitchCache.init(a:Word,b:Word)*/
    _OpaqueStringSwitchCache.prototype.initAWordBWord = function ($info, a, b) {
    };
    _OpaqueStringSwitchCache.$struct = true;
    _OpaqueStringSwitchCache.$infoAddress = '0x7fb85129f320';
    return _OpaqueStringSwitchCache;
}());
var _StringSwitchContext = /** @class */ (function () {
    function _StringSwitchContext() {
    }
    /*Swift.(file)._StringSwitchContext.init(cases:[StaticString],cachePtr:UnsafeMutablePointer<_StringSwitchCache>)*/
    /*Swift.(file)._StringSwitchContext.init(cases:[StaticString],cachePtr:UnsafeMutablePointer<_StringSwitchCache>)*/
    _StringSwitchContext.prototype.initCasesArrayCachePtrUnsafeMutablePointer = function ($info, cases, cachePtr) {
    };
    /*Swift.(file)._StringSwitchContext.cases*/ /*
    readonly cases$get() {
    return this.cases
    }
    readonly get cases() { return this.cases$get() }*/ ;
    /*Swift.(file)._StringSwitchContext.cachePtr*/ /*
    readonly cachePtr$get() {
    return this.cachePtr
    }
    readonly get cachePtr() { return this.cachePtr$get() }*/ ;
    _StringSwitchContext.$struct = true;
    _StringSwitchContext.$infoAddress = '0x7fb85129f5c8';
    return _StringSwitchContext;
}());
var _StringRepresentation = /** @class */ (function () {
    function _StringRepresentation() {
    }
    /*Swift.(file)._StringRepresentation.init(_isASCII:Bool,_count:Int,_capacity:Int,_form:_StringRepresentation._Form)*/
    /*Swift.(file)._StringRepresentation.init(_isASCII:Bool,_count:Int,_capacity:Int,_form:_StringRepresentation._Form)*/
    _StringRepresentation.prototype.init_isASCIIBool_countInt_capacityInt_form_StringRepresentation_Form = function ($info, _isASCII, _count, _capacity, _form) {
    };
    var _o;
    _StringRepresentation.$struct = true;
    _StringRepresentation.$infoAddress = '0x7fb85129fd68';
    _StringRepresentation._Form = (_o = /** @class */ (function () {
            function class_13() {
            }
            Object.defineProperty(class_13, "_small", {
                get: function () { return Object.assign(new _StringRepresentation._Form(), __assign({ rawValue: "_small" }, Array.from(arguments).slice(1))); },
                enumerable: true,
                configurable: true
            });
            class_13._cocoa = function () { return Object.assign(new _StringRepresentation._Form(), __assign({ rawValue: "_cocoa" }, Array.from(arguments).slice(1))); };
            class_13._native = function () { return Object.assign(new _StringRepresentation._Form(), __assign({ rawValue: "_native" }, Array.from(arguments).slice(1))); };
            class_13._immortal = function () { return Object.assign(new _StringRepresentation._Form(), __assign({ rawValue: "_immortal" }, Array.from(arguments).slice(1))); };
            return class_13;
        }()),
        _o.$infoAddress = '0x7fb852f485e0',
        _o);
    return _StringRepresentation;
}());
var UTF8ExtraInfo = /** @class */ (function () {
    function UTF8ExtraInfo() {
    }
    /*Swift.(file).UTF8ExtraInfo.init(isASCII:Bool)*/
    /*Swift.(file).UTF8ExtraInfo.init(isASCII:Bool)*/
    UTF8ExtraInfo.prototype.initIsASCIIBool = function ($info, isASCII) {
        return isASCII;
    };
    /*Swift.(file).UTF8ExtraInfo.==(_:UTF8ExtraInfo,_:UTF8ExtraInfo)*/
    /*Swift.(file).Equatable.==infix(_:Self,_:Self)*/
    UTF8ExtraInfo.infix_61_61 = function ($info, a, b) {
        return a == b;
    };
    UTF8ExtraInfo.$struct = true;
    UTF8ExtraInfo.$infoAddress = '0x7fb854800a28';
    return UTF8ExtraInfo;
}());
if (typeof Equatable$implementation != 'undefined')
    _mixin(UTF8ExtraInfo, Equatable$implementation, false);
var UTF8ValidationResult = /** @class */ (function () {
    function UTF8ValidationResult() {
    }
    UTF8ValidationResult.success = function () { return Object.assign(new UTF8ValidationResult(), __assign({ rawValue: "success" }, Array.from(arguments).slice(1))); };
    UTF8ValidationResult.error = function () { return Object.assign(new UTF8ValidationResult(), __assign({ rawValue: "error" }, Array.from(arguments).slice(1))); };
    /*Swift.(file).UTF8ValidationResult.==(_:UTF8ValidationResult,_:UTF8ValidationResult)*/
    /*Swift.(file).Equatable.==infix(_:Self,_:Self)*/
    UTF8ValidationResult.infix_61_61 = function ($info, a, b) {
        return a == b;
    };
    UTF8ValidationResult.$infoAddress = '0x7fb854800e70';
    return UTF8ValidationResult;
}());
var UTF8ValidationError = /** @class */ (function () {
    function UTF8ValidationError() {
    }
    /*Swift.(file).UTF8ValidationError.init()*/
    /*Swift.(file).UTF8ValidationError.init()*/
    UTF8ValidationError.prototype.init = function ($info) {
    };
    UTF8ValidationError.$struct = true;
    UTF8ValidationError.$infoAddress = '0x7fb8512a2588';
    return UTF8ValidationError;
}());
if (typeof Error$implementation != 'undefined')
    _mixin(UTF8ValidationError, Error$implementation, false);
var __SwiftNativeNSArrayWithContiguousStorage = /** @class */ (function (_super) {
    __extends(__SwiftNativeNSArrayWithContiguousStorage, _super);
    function __SwiftNativeNSArrayWithContiguousStorage() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    /*Swift.(file).__SwiftNativeNSArrayWithContiguousStorage.init()*/
    /*Swift.(file).__SwiftNativeNSArray.init()*/
    __SwiftNativeNSArrayWithContiguousStorage.prototype.init = function ($info) {
    };
    /*Swift.(file).__SwiftNativeNSArrayWithContiguousStorage.withUnsafeBufferOfObjects(_:(UnsafeBufferPointer<AnyObject>) throws -> R)*/
    /*Swift.(file).__SwiftNativeNSArrayWithContiguousStorage.withUnsafeBufferOfObjects(_:(UnsafeBufferPointer<AnyObject>) throws -> R)*/
    __SwiftNativeNSArrayWithContiguousStorage.prototype.withUnsafeBufferOfObjects = function ($info, body) {
    };
    /*Swift.(file).__SwiftNativeNSArrayWithContiguousStorage.count*/ /*
    count$get() {
    return this.count
    }
    get count() { return this.count$get() }*/ ;
    /*Swift.(file).__SwiftNativeNSArrayWithContiguousStorage.objectAt(_:Int)*/
    /*Swift.(file)._NSArrayCore.objectAt(_:Int)*/
    __SwiftNativeNSArrayWithContiguousStorage.prototype.objectAt = function ($info, index) {
    };
    /*Swift.(file).__SwiftNativeNSArrayWithContiguousStorage.getObjects(_:UnsafeMutablePointer<AnyObject>,range:_SwiftNSRange)*/
    /*Swift.(file)._NSArrayCore.getObjects(_:UnsafeMutablePointer<AnyObject>,range:_SwiftNSRange)*/
    __SwiftNativeNSArrayWithContiguousStorage.prototype.getObjectsRange = function ($info, aBuffer, range) {
    };
    /*Swift.(file).__SwiftNativeNSArrayWithContiguousStorage.countByEnumerating(with:UnsafeMutablePointer<_SwiftNSFastEnumerationState>,objects:UnsafeMutablePointer<AnyObject>?,count:Int)*/
    /*Swift.(file)._NSArrayCore.countByEnumerating(with:UnsafeMutablePointer<_SwiftNSFastEnumerationState>,objects:UnsafeMutablePointer<AnyObject>?,count:Int)*/
    /*Swift.(file)._NSFastEnumeration.countByEnumerating(with:UnsafeMutablePointer<_SwiftNSFastEnumerationState>,objects:UnsafeMutablePointer<AnyObject>?,count:Int)*/
    __SwiftNativeNSArrayWithContiguousStorage.prototype.countByEnumeratingWithObjectsCount = function ($info, state, objects, count) {
    };
    /*Swift.(file).__SwiftNativeNSArrayWithContiguousStorage.copy(with:_SwiftNSZone?)*/
    /*Swift.(file)._NSCopying.copy(with:_SwiftNSZone?)*/
    __SwiftNativeNSArrayWithContiguousStorage.prototype.copyWith = function ($info, _) {
    };
    __SwiftNativeNSArrayWithContiguousStorage.$infoAddress = '0x7fb8511e7e20';
    return __SwiftNativeNSArrayWithContiguousStorage;
}(__SwiftNativeNSArray));
if (typeof _NSArrayCore$implementation != 'undefined')
    _mixin(__SwiftNativeNSArrayWithContiguousStorage, _NSArrayCore$implementation, false);
var __SwiftDeferredNSArray = /** @class */ (function (_super) {
    __extends(__SwiftDeferredNSArray, _super);
    function __SwiftDeferredNSArray() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    /*Swift.(file).__SwiftDeferredNSArray.init(_nativeStorage:__ContiguousArrayStorageBase)*/
    /*Swift.(file).__SwiftDeferredNSArray.init(_nativeStorage:__ContiguousArrayStorageBase)*/
    __SwiftDeferredNSArray.prototype.init_nativeStorage__ContiguousArrayStorageBase = function ($info, _nativeStorage) {
        return _nativeStorage;
    };
    /*Swift.(file).__SwiftDeferredNSArray.withUnsafeBufferOfObjects(_:(UnsafeBufferPointer<AnyObject>) throws -> R)*/
    /*Swift.(file).__SwiftNativeNSArrayWithContiguousStorage.withUnsafeBufferOfObjects(_:(UnsafeBufferPointer<AnyObject>) throws -> R)*/
    __SwiftDeferredNSArray.prototype.withUnsafeBufferOfObjects = function ($info, body) {
    };
    /*Swift.(file).__SwiftDeferredNSArray.count*/ /*
    count$get() {
    return this.count
    }
    get count() { return this.count$get() }*/ ;
    /*Swift.(file).__SwiftDeferredNSArray.init()*/
    /*Swift.(file).__SwiftNativeNSArray.init()*/
    __SwiftDeferredNSArray.prototype.init = function ($info) {
    };
    __SwiftDeferredNSArray.$infoAddress = '0x7fb8512a4b88';
    return __SwiftDeferredNSArray;
}(__SwiftNativeNSArrayWithContiguousStorage));
var __ContiguousArrayStorageBase = /** @class */ (function (_super) {
    __extends(__ContiguousArrayStorageBase, _super);
    function __ContiguousArrayStorageBase() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    /*Swift.(file).__ContiguousArrayStorageBase.init(_doNotCallMeBase:())*/
    /*Swift.(file).__ContiguousArrayStorageBase.init(_doNotCallMeBase:())*/
    __ContiguousArrayStorageBase.prototype.init_doNotCallMeBasetuple_type = function ($info, _doNotCallMeBase) {
        return _doNotCallMeBase;
    };
    /*Swift.(file).__ContiguousArrayStorageBase.withUnsafeBufferOfObjects(_:(UnsafeBufferPointer<AnyObject>) throws -> R)*/
    /*Swift.(file).__SwiftNativeNSArrayWithContiguousStorage.withUnsafeBufferOfObjects(_:(UnsafeBufferPointer<AnyObject>) throws -> R)*/
    __ContiguousArrayStorageBase.prototype.withUnsafeBufferOfObjects = function ($info, body) {
    };
    /*Swift.(file).__ContiguousArrayStorageBase.canStoreElements(ofDynamicType:Any.Type)*/
    /*Swift.(file).__ContiguousArrayStorageBase.canStoreElements(ofDynamicType:Any.Type)*/
    __ContiguousArrayStorageBase.prototype.canStoreElementsOfDynamicType = function ($info, _) {
    };
    /*Swift.(file).__ContiguousArrayStorageBase.staticElementType*/ /*
    staticElementType$get() {
    return this.staticElementType
    }
    get staticElementType() { return this.staticElementType$get() }*/ ;
    /*Swift.(file).__ContiguousArrayStorageBase.init()*/
    /*Swift.(file).__SwiftNativeNSArray.init()*/
    __ContiguousArrayStorageBase.prototype.init = function ($info) {
    };
    __ContiguousArrayStorageBase.$infoAddress = '0x7fb8511e7c98';
    return __ContiguousArrayStorageBase;
}(__SwiftNativeNSArrayWithContiguousStorage));
var _TLSAtomicInt = /** @class */ (function () {
    function _TLSAtomicInt() {
    }
    /*Swift.(file)._TLSAtomicInt.init()*/
    /*Swift.(file)._TLSAtomicInt.init()*/
    _TLSAtomicInt.prototype.init = function ($info) {
    };
    /*Swift.(file)._TLSAtomicInt.valuePtr*/ /*
    valuePtr$get() {
    return this.valuePtr
    }
    get valuePtr() { return this.valuePtr$get() }*/ ;
    /*Swift.(file)._TLSAtomicInt.increment()*/
    /*Swift.(file)._TLSAtomicInt.increment()*/
    _TLSAtomicInt.prototype.increment = function ($info) {
    };
    /*Swift.(file)._TLSAtomicInt.load()*/
    /*Swift.(file)._TLSAtomicInt.load()*/
    _TLSAtomicInt.prototype.load = function ($info) {
    };
    _TLSAtomicInt.$infoAddress = '0x7fb8512a4d10';
    return _TLSAtomicInt;
}());
var _ThreadLocalStorage = /** @class */ (function () {
    function _ThreadLocalStorage() {
    }
    /*Swift.(file)._ThreadLocalStorage.uText*/ /*
    uText$get() {
    return this.uText
    }
    get uText() { return this.uText$get() }*/ ;
    /*Swift.(file)._ThreadLocalStorage.init(_uBreakIterator:OpaquePointer,_uText:OpaquePointer)*/
    /*Swift.(file)._ThreadLocalStorage.init(_uBreakIterator:OpaquePointer,_uText:OpaquePointer)*/
    _ThreadLocalStorage.prototype.init_uBreakIteratorOpaquePointer_uTextOpaquePointer = function ($info, _uBreakIterator, _uText) {
    };
    /*Swift.(file)._ThreadLocalStorage.getPointer()*/
    /*Swift.(file)._ThreadLocalStorage.getPointer()*/
    _ThreadLocalStorage.getPointer = function ($info) {
    };
    /*Swift.(file)._ThreadLocalStorage.getUBreakIterator(_:UnsafeBufferPointer<UTF16.CodeUnit>)*/
    /*Swift.(file)._ThreadLocalStorage.getUBreakIterator(_:UnsafeBufferPointer<UTF16.CodeUnit>)*/
    _ThreadLocalStorage.getUBreakIterator = function ($info, bufPtr) {
    };
    /*Swift.(file)._ThreadLocalStorage.getUBreakIterator(_:UnsafeBufferPointer<UTF8.CodeUnit>)*/
    /*Swift.(file)._ThreadLocalStorage.getUBreakIterator(_:UnsafeBufferPointer<UTF8.CodeUnit>)*/
    _ThreadLocalStorage.getUBreakIterator = function ($info, bufPtr) {
    };
    _ThreadLocalStorage.$struct = true;
    _ThreadLocalStorage.$infoAddress = '0x7fb8512a5108';
    return _ThreadLocalStorage;
}());
var _UnicodeEncoding$implementation = /** @class */ (function () {
    function _UnicodeEncoding$implementation() {
    }
    /*Swift.(file)._UnicodeEncoding.transcode(_:FromEncoding.EncodedScalar,from:FromEncoding.Type)*/
    /*Swift.(file)._UnicodeEncoding.transcode(_:FromEncoding.EncodedScalar,from:FromEncoding.Type)*/
    _UnicodeEncoding$implementation.transcodeFrom = function ($info, content, _) {
    };
    return _UnicodeEncoding$implementation;
}());
var _UnicodeParser$implementation = /** @class */ (function () {
    function _UnicodeParser$implementation() {
    }
    return _UnicodeParser$implementation;
}());
var Unmanaged = /** @class */ (function () {
    function Unmanaged() {
    }
    /*Swift.(file).Unmanaged.init(_private:Instance)*/
    /*Swift.(file).Unmanaged.init(_private:Instance)*/
    Unmanaged.prototype.init_private = function ($info, _private) {
        return _private;
    };
    /*Swift.(file).Unmanaged.fromOpaque(_:UnsafeRawPointer)*/
    /*Swift.(file).Unmanaged.fromOpaque(_:UnsafeRawPointer)*/
    Unmanaged.fromOpaque = function ($info, value) {
    };
    /*Swift.(file).Unmanaged.toOpaque()*/
    /*Swift.(file).Unmanaged.toOpaque()*/
    Unmanaged.prototype.toOpaque = function ($info) {
    };
    /*Swift.(file).Unmanaged.passRetained(_:Instance)*/
    /*Swift.(file).Unmanaged.passRetained(_:Instance)*/
    Unmanaged.passRetained = function ($info, value) {
    };
    /*Swift.(file).Unmanaged.passUnretained(_:Instance)*/
    /*Swift.(file).Unmanaged.passUnretained(_:Instance)*/
    Unmanaged.passUnretained = function ($info, value) {
    };
    /*Swift.(file).Unmanaged.takeUnretainedValue()*/
    /*Swift.(file).Unmanaged.takeUnretainedValue()*/
    Unmanaged.prototype.takeUnretainedValue = function ($info) {
    };
    /*Swift.(file).Unmanaged.takeRetainedValue()*/
    /*Swift.(file).Unmanaged.takeRetainedValue()*/
    Unmanaged.prototype.takeRetainedValue = function ($info) {
    };
    /*Swift.(file).Unmanaged.retain()*/
    /*Swift.(file).Unmanaged.retain()*/
    Unmanaged.prototype.retain = function ($info) {
    };
    /*Swift.(file).Unmanaged.release()*/
    /*Swift.(file).Unmanaged.release()*/
    Unmanaged.prototype.release = function ($info) {
    };
    /*Swift.(file).Unmanaged.autorelease()*/
    /*Swift.(file).Unmanaged.autorelease()*/
    Unmanaged.prototype.autorelease = function ($info) {
    };
    Unmanaged.$struct = true;
    Unmanaged.$infoAddress = '0x7fb8512aa408';
    return Unmanaged;
}());
var _UTFParser$implementation = /** @class */ (function () {
    function _UTFParser$implementation() {
    }
    /*Swift.(file)._UTFParser.parseScalar(from:I)*/
    /*Swift.(file)._UTFParser.parseScalar(from:I)*/
    _UTFParser$implementation.prototype.parseScalarFrom = function ($info, input$inout) {
    };
    return _UTFParser$implementation;
}());
var UnicodeDecodingResult = /** @class */ (function () {
    function UnicodeDecodingResult() {
    }
    UnicodeDecodingResult.scalarValue = function () { return Object.assign(new UnicodeDecodingResult(), __assign({ rawValue: "scalarValue" }, Array.from(arguments).slice(1))); };
    Object.defineProperty(UnicodeDecodingResult, "emptyInput", {
        get: function () { return Object.assign(new UnicodeDecodingResult(), __assign({ rawValue: "emptyInput" }, Array.from(arguments).slice(1))); },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(UnicodeDecodingResult, "error", {
        get: function () { return Object.assign(new UnicodeDecodingResult(), __assign({ rawValue: "error" }, Array.from(arguments).slice(1))); },
        enumerable: true,
        configurable: true
    });
    /*Swift.(file).UnicodeDecodingResult.==infix(_:UnicodeDecodingResult,_:UnicodeDecodingResult)*/
    /*Swift.(file).Equatable.==infix(_:Self,_:Self)*/
    UnicodeDecodingResult.infix_61_61 = function ($info, lhs, rhs) {
        return lhs == rhs;
    };
    UnicodeDecodingResult.$infoAddress = '0x7fb8548087f0';
    return UnicodeDecodingResult;
}());
var UnicodeCodec$implementation = /** @class */ (function () {
    function UnicodeCodec$implementation() {
    }
    return UnicodeCodec$implementation;
}());
if (typeof Unicode != 'undefined' && typeof Unicode.Encoding$implementation != 'undefined')
    _mixin(UnicodeCodec$implementation, Unicode.Encoding$implementation, false);
var _StringElement$implementation = /** @class */ (function () {
    function _StringElement$implementation() {
    }
    return _StringElement$implementation;
}());
var _PlaygroundQuickLook = /** @class */ (function () {
    function _PlaygroundQuickLook() {
    }
    _PlaygroundQuickLook._text = function () { return Object.assign(new _PlaygroundQuickLook(), __assign({ rawValue: "_text" }, Array.from(arguments).slice(1))); };
    _PlaygroundQuickLook.int = function () { return Object.assign(new _PlaygroundQuickLook(), __assign({ rawValue: "int" }, Array.from(arguments).slice(1))); };
    _PlaygroundQuickLook.uInt = function () { return Object.assign(new _PlaygroundQuickLook(), __assign({ rawValue: "uInt" }, Array.from(arguments).slice(1))); };
    _PlaygroundQuickLook.float = function () { return Object.assign(new _PlaygroundQuickLook(), __assign({ rawValue: "float" }, Array.from(arguments).slice(1))); };
    _PlaygroundQuickLook.double = function () { return Object.assign(new _PlaygroundQuickLook(), __assign({ rawValue: "double" }, Array.from(arguments).slice(1))); };
    _PlaygroundQuickLook._image = function () { return Object.assign(new _PlaygroundQuickLook(), __assign({ rawValue: "_image" }, Array.from(arguments).slice(1))); };
    _PlaygroundQuickLook.sound = function () { return Object.assign(new _PlaygroundQuickLook(), __assign({ rawValue: "sound" }, Array.from(arguments).slice(1))); };
    _PlaygroundQuickLook.color = function () { return Object.assign(new _PlaygroundQuickLook(), __assign({ rawValue: "color" }, Array.from(arguments).slice(1))); };
    _PlaygroundQuickLook.bezierPath = function () { return Object.assign(new _PlaygroundQuickLook(), __assign({ rawValue: "bezierPath" }, Array.from(arguments).slice(1))); };
    _PlaygroundQuickLook.attributedString = function () { return Object.assign(new _PlaygroundQuickLook(), __assign({ rawValue: "attributedString" }, Array.from(arguments).slice(1))); };
    _PlaygroundQuickLook.rectangle = function () { return Object.assign(new _PlaygroundQuickLook(), __assign({ rawValue: "rectangle" }, Array.from(arguments).slice(1))); };
    _PlaygroundQuickLook.point = function () { return Object.assign(new _PlaygroundQuickLook(), __assign({ rawValue: "point" }, Array.from(arguments).slice(1))); };
    _PlaygroundQuickLook.size = function () { return Object.assign(new _PlaygroundQuickLook(), __assign({ rawValue: "size" }, Array.from(arguments).slice(1))); };
    _PlaygroundQuickLook.bool = function () { return Object.assign(new _PlaygroundQuickLook(), __assign({ rawValue: "bool" }, Array.from(arguments).slice(1))); };
    _PlaygroundQuickLook.range = function () { return Object.assign(new _PlaygroundQuickLook(), __assign({ rawValue: "range" }, Array.from(arguments).slice(1))); };
    _PlaygroundQuickLook.view = function () { return Object.assign(new _PlaygroundQuickLook(), __assign({ rawValue: "view" }, Array.from(arguments).slice(1))); };
    _PlaygroundQuickLook.sprite = function () { return Object.assign(new _PlaygroundQuickLook(), __assign({ rawValue: "sprite" }, Array.from(arguments).slice(1))); };
    _PlaygroundQuickLook.url = function () { return Object.assign(new _PlaygroundQuickLook(), __assign({ rawValue: "url" }, Array.from(arguments).slice(1))); };
    _PlaygroundQuickLook._raw = function () { return Object.assign(new _PlaygroundQuickLook(), __assign({ rawValue: "_raw" }, Array.from(arguments).slice(1))); };
    /*Swift.(file)._PlaygroundQuickLook.init(reflecting:Any)*/
    /*Swift.(file)._PlaygroundQuickLook.init(reflecting:Any)*/
    _PlaygroundQuickLook.prototype.initReflectingprotocol_composition_type = function ($info, subject) {
        return subject;
    };
    _PlaygroundQuickLook.$infoAddress = '0x7fb85124d760';
    return _PlaygroundQuickLook;
}());
var _CustomPlaygroundQuickLookable$implementation = /** @class */ (function () {
    function _CustomPlaygroundQuickLookable$implementation() {
    }
    return _CustomPlaygroundQuickLookable$implementation;
}());
var __DefaultCustomPlaygroundQuickLookable$implementation = /** @class */ (function () {
    function __DefaultCustomPlaygroundQuickLookable$implementation() {
    }
    return __DefaultCustomPlaygroundQuickLookable$implementation;
}());
var AnyIterator = /** @class */ (function () {
    function AnyIterator() {
    }
    /*Swift.(file).AnyIterator.init(_:I)*/
    /*Swift.(file).AnyIterator.init(_:I)*/
    AnyIterator.prototype.init = function ($info, base) {
        return base;
    };
    /*Swift.(file).AnyIterator.init(_:() -> Element?)*/
    /*Swift.(file).AnyIterator.init(_:() -> Element?)*/
    AnyIterator.prototype.initfunction_type = function ($info, body) {
        return body;
    };
    /*Swift.(file).AnyIterator.init(_box:_AnyIteratorBoxBase<Element>)*/
    /*Swift.(file).AnyIterator.init(_box:_AnyIteratorBoxBase<Element>)*/
    AnyIterator.prototype.init_box_AnyIteratorBoxBase = function ($info, _box) {
        return _box;
    };
    /*Swift.(file).AnyIterator.next()*/
    /*Swift.(file).IteratorProtocol.next()*/
    AnyIterator.prototype.next = function ($info) {
    };
    AnyIterator.$struct = true;
    AnyIterator.$infoAddress = '0x7fb8512fea20';
    return AnyIterator;
}());
if (typeof IteratorProtocol$implementation != 'undefined')
    _mixin(AnyIterator, IteratorProtocol$implementation, false);
if (typeof Sequence$implementation != 'undefined')
    _mixin(AnyIterator, Sequence$implementation, false);
var _ClosureBasedIterator = /** @class */ (function () {
    function _ClosureBasedIterator() {
    }
    /*Swift.(file)._ClosureBasedIterator.init(_:() -> Element?)*/
    /*Swift.(file)._ClosureBasedIterator.init(_:() -> Element?)*/
    _ClosureBasedIterator.prototype.initfunction_type = function ($info, body) {
        return body;
    };
    /*Swift.(file)._ClosureBasedIterator.next()*/
    /*Swift.(file).IteratorProtocol.next()*/
    _ClosureBasedIterator.prototype.next = function ($info) {
    };
    _ClosureBasedIterator.$struct = true;
    _ClosureBasedIterator.$infoAddress = '0x7fb8512ff070';
    return _ClosureBasedIterator;
}());
if (typeof IteratorProtocol$implementation != 'undefined')
    _mixin(_ClosureBasedIterator, IteratorProtocol$implementation, false);
var _AnyIteratorBoxBase = /** @class */ (function () {
    function _AnyIteratorBoxBase() {
    }
    /*Swift.(file)._AnyIteratorBoxBase.init()*/
    /*Swift.(file)._AnyIteratorBoxBase.init()*/
    _AnyIteratorBoxBase.prototype.init = function ($info) {
    };
    /*Swift.(file)._AnyIteratorBoxBase.next()*/
    /*Swift.(file).IteratorProtocol.next()*/
    _AnyIteratorBoxBase.prototype.next = function ($info) {
    };
    _AnyIteratorBoxBase.$infoAddress = '0x7fb8512ff340';
    return _AnyIteratorBoxBase;
}());
if (typeof IteratorProtocol$implementation != 'undefined')
    _mixin(_AnyIteratorBoxBase, IteratorProtocol$implementation, false);
var _IteratorBox = /** @class */ (function (_super) {
    __extends(_IteratorBox, _super);
    function _IteratorBox() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    /*Swift.(file)._IteratorBox.init(_:Base)*/
    /*Swift.(file)._IteratorBox.init(_:Base)*/
    _IteratorBox.prototype.init = function ($info, base) {
        return base;
    };
    /*Swift.(file)._IteratorBox.next()*/
    /*Swift.(file).IteratorProtocol.next()*/
    _IteratorBox.prototype.next = function ($info) {
    };
    /*Swift.(file)._IteratorBox.init()*/
    /*Swift.(file)._AnyIteratorBoxBase.init()*/
    _IteratorBox.prototype.init = function ($info) {
    };
    _IteratorBox.$infoAddress = '0x7fb8512ff640';
    return _IteratorBox;
}(_AnyIteratorBoxBase));
var _AnySequenceBox = /** @class */ (function () {
    function _AnySequenceBox() {
    }
    /*Swift.(file)._AnySequenceBox.init()*/
    /*Swift.(file)._AnySequenceBox.init()*/
    _AnySequenceBox.prototype.init = function ($info) {
    };
    _AnySequenceBox.$infoAddress = '0x7fb8512ff978';
    return _AnySequenceBox;
}());
var _AnyCollectionBox = /** @class */ (function (_super) {
    __extends(_AnyCollectionBox, _super);
    function _AnyCollectionBox() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    /*Swift.(file)._AnyCollectionBox.subscript(_:_AnyIndexBox)*/
    /*Swift.(file)._AnyCollectionBox.subscript(_:_AnyIndexBox)*/
    _AnyCollectionBox.prototype.subscript$get = function ($info, i) {
        return this[i];
    };
    /*Swift.(file)._AnyCollectionBox.init(_startIndex:_AnyIndexBox,endIndex:_AnyIndexBox)*/
    /*Swift.(file)._AnyCollectionBox.init(_startIndex:_AnyIndexBox,endIndex:_AnyIndexBox)*/
    _AnyCollectionBox.prototype.init_startIndex_AnyIndexBoxEndIndex_AnyIndexBox = function ($info, _startIndex, endIndex) {
    };
    /*Swift.(file)._AnyCollectionBox.subscript(start:_AnyIndexBox,end:_AnyIndexBox)*/
    /*Swift.(file)._AnyCollectionBox.subscript(start:_AnyIndexBox,end:_AnyIndexBox)*/
    _AnyCollectionBox.prototype.subscriptStartEnd$get = function ($info, start, end) {
        return this[start];
    };
    /*Swift.(file)._AnyCollectionBox.init()*/
    /*Swift.(file)._AnySequenceBox.init()*/
    _AnyCollectionBox.prototype.init = function ($info) {
    };
    _AnyCollectionBox.$infoAddress = '0x7fb8512ffc48';
    return _AnyCollectionBox;
}(_AnySequenceBox));
var _AnyBidirectionalCollectionBox = /** @class */ (function (_super) {
    __extends(_AnyBidirectionalCollectionBox, _super);
    function _AnyBidirectionalCollectionBox() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    /*Swift.(file)._AnyBidirectionalCollectionBox.subscript(start:_AnyIndexBox,end:_AnyIndexBox)*/
    /*Swift.(file)._AnyCollectionBox.subscript(start:_AnyIndexBox,end:_AnyIndexBox)*/
    _AnyBidirectionalCollectionBox.prototype.subscriptStartEnd$get = function ($info, start, end) {
        return this[start];
    };
    /*Swift.(file)._AnyBidirectionalCollectionBox.init(_startIndex:_AnyIndexBox,endIndex:_AnyIndexBox)*/
    /*Swift.(file)._AnyCollectionBox.init(_startIndex:_AnyIndexBox,endIndex:_AnyIndexBox)*/
    _AnyBidirectionalCollectionBox.prototype.init_startIndex_AnyIndexBoxEndIndex_AnyIndexBox = function ($info, _startIndex, endIndex) {
    };
    _AnyBidirectionalCollectionBox.$infoAddress = '0x7fb8512fff60';
    return _AnyBidirectionalCollectionBox;
}(_AnyCollectionBox));
var _AnyRandomAccessCollectionBox = /** @class */ (function (_super) {
    __extends(_AnyRandomAccessCollectionBox, _super);
    function _AnyRandomAccessCollectionBox() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    /*Swift.(file)._AnyRandomAccessCollectionBox.subscript(start:_AnyIndexBox,end:_AnyIndexBox)*/
    /*Swift.(file)._AnyCollectionBox.subscript(start:_AnyIndexBox,end:_AnyIndexBox)*/
    _AnyRandomAccessCollectionBox.prototype.subscriptStartEnd$get = function ($info, start, end) {
        return this[start];
    };
    /*Swift.(file)._AnyRandomAccessCollectionBox.init(_startIndex:_AnyIndexBox,endIndex:_AnyIndexBox)*/
    /*Swift.(file)._AnyCollectionBox.init(_startIndex:_AnyIndexBox,endIndex:_AnyIndexBox)*/
    _AnyRandomAccessCollectionBox.prototype.init_startIndex_AnyIndexBoxEndIndex_AnyIndexBox = function ($info, _startIndex, endIndex) {
    };
    _AnyRandomAccessCollectionBox.$infoAddress = '0x7fb851300278';
    return _AnyRandomAccessCollectionBox;
}(_AnyBidirectionalCollectionBox));
var _SequenceBox = /** @class */ (function (_super) {
    __extends(_SequenceBox, _super);
    function _SequenceBox() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    /*Swift.(file)._SequenceBox.init(_base:S)*/
    /*Swift.(file)._SequenceBox.init(_base:S)*/
    _SequenceBox.prototype.init_base = function ($info, _base) {
        return _base;
    };
    /*Swift.(file)._SequenceBox.init()*/
    /*Swift.(file)._AnySequenceBox.init()*/
    _SequenceBox.prototype.init = function ($info) {
    };
    _SequenceBox.$infoAddress = '0x7fb8513005a8';
    return _SequenceBox;
}(_AnySequenceBox));
var _CollectionBox = /** @class */ (function (_super) {
    __extends(_CollectionBox, _super);
    function _CollectionBox() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    /*Swift.(file)._CollectionBox.init(_base:S)*/
    /*Swift.(file)._CollectionBox.init(_base:S)*/
    _CollectionBox.prototype.init_base = function ($info, _base) {
        return _base;
    };
    /*Swift.(file)._CollectionBox.subscript(_:_AnyIndexBox)*/
    /*Swift.(file)._AnyCollectionBox.subscript(_:_AnyIndexBox)*/
    _CollectionBox.prototype.subscript$get = function ($info, position) {
        return this[position];
    };
    /*Swift.(file)._CollectionBox.subscript(start:_AnyIndexBox,end:_AnyIndexBox)*/
    /*Swift.(file)._AnyCollectionBox.subscript(start:_AnyIndexBox,end:_AnyIndexBox)*/
    _CollectionBox.prototype.subscriptStartEnd$get = function ($info, start, end) {
        return this[start];
    };
    /*Swift.(file)._CollectionBox.init(_startIndex:_AnyIndexBox,endIndex:_AnyIndexBox)*/
    /*Swift.(file)._AnyCollectionBox.init(_startIndex:_AnyIndexBox,endIndex:_AnyIndexBox)*/
    _CollectionBox.prototype.init_startIndex_AnyIndexBoxEndIndex_AnyIndexBox = function ($info, _startIndex, endIndex) {
    };
    _CollectionBox.$infoAddress = '0x7fb851300908';
    return _CollectionBox;
}(_AnyCollectionBox));
var _BidirectionalCollectionBox = /** @class */ (function (_super) {
    __extends(_BidirectionalCollectionBox, _super);
    function _BidirectionalCollectionBox() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    /*Swift.(file)._BidirectionalCollectionBox.init(_base:S)*/
    /*Swift.(file)._BidirectionalCollectionBox.init(_base:S)*/
    _BidirectionalCollectionBox.prototype.init_base = function ($info, _base) {
        return _base;
    };
    /*Swift.(file)._BidirectionalCollectionBox.subscript(_:_AnyIndexBox)*/
    /*Swift.(file)._AnyCollectionBox.subscript(_:_AnyIndexBox)*/
    _BidirectionalCollectionBox.prototype.subscript$get = function ($info, position) {
        return this[position];
    };
    /*Swift.(file)._BidirectionalCollectionBox.subscript(start:_AnyIndexBox,end:_AnyIndexBox)*/
    /*Swift.(file)._AnyCollectionBox.subscript(start:_AnyIndexBox,end:_AnyIndexBox)*/
    _BidirectionalCollectionBox.prototype.subscriptStartEnd$get = function ($info, start, end) {
        return this[start];
    };
    /*Swift.(file)._BidirectionalCollectionBox.init(_startIndex:_AnyIndexBox,endIndex:_AnyIndexBox)*/
    /*Swift.(file)._AnyCollectionBox.init(_startIndex:_AnyIndexBox,endIndex:_AnyIndexBox)*/
    _BidirectionalCollectionBox.prototype.init_startIndex_AnyIndexBoxEndIndex_AnyIndexBox = function ($info, _startIndex, endIndex) {
    };
    _BidirectionalCollectionBox.$infoAddress = '0x7fb851300c98';
    return _BidirectionalCollectionBox;
}(_AnyBidirectionalCollectionBox));
var _RandomAccessCollectionBox = /** @class */ (function (_super) {
    __extends(_RandomAccessCollectionBox, _super);
    function _RandomAccessCollectionBox() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    /*Swift.(file)._RandomAccessCollectionBox.init(_base:S)*/
    /*Swift.(file)._RandomAccessCollectionBox.init(_base:S)*/
    _RandomAccessCollectionBox.prototype.init_base = function ($info, _base) {
        return _base;
    };
    /*Swift.(file)._RandomAccessCollectionBox.subscript(_:_AnyIndexBox)*/
    /*Swift.(file)._AnyCollectionBox.subscript(_:_AnyIndexBox)*/
    _RandomAccessCollectionBox.prototype.subscript$get = function ($info, position) {
        return this[position];
    };
    /*Swift.(file)._RandomAccessCollectionBox.subscript(start:_AnyIndexBox,end:_AnyIndexBox)*/
    /*Swift.(file)._AnyCollectionBox.subscript(start:_AnyIndexBox,end:_AnyIndexBox)*/
    _RandomAccessCollectionBox.prototype.subscriptStartEnd$get = function ($info, start, end) {
        return this[start];
    };
    /*Swift.(file)._RandomAccessCollectionBox.init(_startIndex:_AnyIndexBox,endIndex:_AnyIndexBox)*/
    /*Swift.(file)._AnyCollectionBox.init(_startIndex:_AnyIndexBox,endIndex:_AnyIndexBox)*/
    _RandomAccessCollectionBox.prototype.init_startIndex_AnyIndexBoxEndIndex_AnyIndexBox = function ($info, _startIndex, endIndex) {
    };
    _RandomAccessCollectionBox.$infoAddress = '0x7fb851301008';
    return _RandomAccessCollectionBox;
}(_AnyRandomAccessCollectionBox));
var _ClosureBasedSequence = /** @class */ (function () {
    function _ClosureBasedSequence() {
    }
    /*Swift.(file)._ClosureBasedSequence.init(_:() -> Iterator)*/
    /*Swift.(file)._ClosureBasedSequence.init(_:() -> Iterator)*/
    _ClosureBasedSequence.prototype.initfunction_type = function ($info, makeUnderlyingIterator) {
        return makeUnderlyingIterator;
    };
    /*Swift.(file)._ClosureBasedSequence.makeIterator()*/
    /*Swift.(file).Sequence.makeIterator()*/
    _ClosureBasedSequence.prototype.makeIterator = function ($info) {
        var _this = this;
        return new SwiftIterator(function (current) { return _this.contains(null, current + _this.lowerBound) ? current + _this.lowerBound : null; });
    };
    _ClosureBasedSequence.$struct = true;
    _ClosureBasedSequence.$infoAddress = '0x7fb851301348';
    return _ClosureBasedSequence;
}());
if (typeof Sequence$implementation != 'undefined')
    _mixin(_ClosureBasedSequence, Sequence$implementation, false);
var AnySequence = /** @class */ (function () {
    function AnySequence() {
    }
    /*Swift.(file).AnySequence.init(_:() -> I)*/
    /*Swift.(file).AnySequence.init(_:() -> I)*/
    AnySequence.prototype.initfunction_type = function ($info, makeUnderlyingIterator) {
        return makeUnderlyingIterator;
    };
    /*Swift.(file).AnySequence.init(_box:_AnySequenceBox<Element>)*/
    /*Swift.(file).AnySequence.init(_box:_AnySequenceBox<Element>)*/
    AnySequence.prototype.init_box_AnySequenceBox = function ($info, _box) {
        return _box;
    };
    /*Swift.(file).AnySequence.init(_:S)*/
    /*Swift.(file).AnySequence.init(_:S)*/
    AnySequence.prototype.init = function ($info, base) {
        return base;
    };
    /*Swift.(file).AnySequence.makeIterator()*/
    /*Swift.(file).Sequence.makeIterator()*/
    AnySequence.prototype.makeIterator = function ($info) {
        var _this = this;
        return new SwiftIterator(function (current) { return _this.contains(null, current + _this.lowerBound) ? current + _this.lowerBound : null; });
    };
    /*Swift.(file).AnySequence.dropLast(_:Int)*/
    /*Swift.(file).AnySequence.dropLast(_:Int)*/
    AnySequence.prototype.dropLast = function ($info, n) {
    };
    /*Swift.(file).AnySequence.prefix(while:(Element) throws -> Bool)*/
    /*Swift.(file).AnySequence.prefix(while:(Element) throws -> Bool)*/
    AnySequence.prototype.prefixWhile = function ($info, predicate) {
    };
    /*Swift.(file).AnySequence.suffix(_:Int)*/
    /*Swift.(file).AnySequence.suffix(_:Int)*/
    AnySequence.prototype.suffix = function ($info, maxLength) {
    };
    /*Swift.(file).AnySequence.underestimatedCount*/ /*
    underestimatedCount$get() {
    return this.underestimatedCount
    }
    get underestimatedCount() { return this.underestimatedCount$get() }*/ ;
    /*Swift.(file).AnySequence.map(_:(Element) throws -> T)*/
    /*Swift.(file).AnySequence.map(_:(Element) throws -> T)*/
    AnySequence.prototype.mapSwift = function ($info, transform) {
    };
    /*Swift.(file).AnySequence.filter(_:(Element) throws -> Bool)*/
    /*Swift.(file).AnySequence.filter(_:(Element) throws -> Bool)*/
    AnySequence.prototype.filterSwift = function ($info, isIncluded) {
    };
    /*Swift.(file).AnySequence.forEach(_:(Element) throws -> Void)*/
    /*Swift.(file).AnySequence.forEach(_:(Element) throws -> Void)*/
    AnySequence.prototype.forEachSwift = function ($info, body) {
    };
    /*Swift.(file).AnySequence.drop(while:(Element) throws -> Bool)*/
    /*Swift.(file).AnySequence.drop(while:(Element) throws -> Bool)*/
    AnySequence.prototype.dropWhile = function ($info, predicate) {
    };
    /*Swift.(file).AnySequence.dropFirst(_:Int)*/
    /*Swift.(file).AnySequence.dropFirst(_:Int)*/
    AnySequence.prototype.dropFirst = function ($info, n) {
    };
    /*Swift.(file).AnySequence.prefix(_:Int)*/
    /*Swift.(file).AnySequence.prefix(_:Int)*/
    AnySequence.prototype.prefix = function ($info, maxLength) {
    };
    AnySequence.$struct = true;
    AnySequence.$infoAddress = '0x7fb8513017c8';
    return AnySequence;
}());
if (typeof Sequence$implementation != 'undefined')
    _mixin(AnySequence, Sequence$implementation, false);
var _AnyIndexBox$implementation = /** @class */ (function () {
    function _AnyIndexBox$implementation() {
    }
    return _AnyIndexBox$implementation;
}());
if (typeof AnyObject$implementation != 'undefined')
    _mixin(_AnyIndexBox$implementation, AnyObject$implementation, false);
var _IndexBox = /** @class */ (function () {
    function _IndexBox() {
    }
    /*Swift.(file)._IndexBox.init(_base:BaseIndex)*/
    /*Swift.(file)._IndexBox.init(_base:BaseIndex)*/
    _IndexBox.prototype.init_base = function ($info, _base) {
        return _base;
    };
    _IndexBox.$infoAddress = '0x7fb851302e50';
    return _IndexBox;
}());
if (typeof _AnyIndexBox$implementation != 'undefined')
    _mixin(_IndexBox, _AnyIndexBox$implementation, false);
var CustomReflectable$implementation = /** @class */ (function () {
    function CustomReflectable$implementation() {
    }
    return CustomReflectable$implementation;
}());
var CustomPlaygroundDisplayConvertible$implementation = /** @class */ (function () {
    function CustomPlaygroundDisplayConvertible$implementation() {
    }
    return CustomPlaygroundDisplayConvertible$implementation;
}());
var CommandLine = /** @class */ (function () {
    function CommandLine() {
    }
    /*Swift.(file).CommandLine.unsafeArgv*/ /*
    static unsafeArgv$get() {
    return this.unsafeArgv
    }
    static get unsafeArgv() { return this.unsafeArgv$get() }*/ ;
    /*Swift.(file).CommandLine.arguments*/ /*
    static arguments$get() {
    return this.arguments
    }
    static get arguments() { return this.arguments$get() }*/ ;
    CommandLine.$infoAddress = '0x7fb8513044b8';
    return CommandLine;
}());
var SIMDStorage$implementation = /** @class */ (function () {
    function SIMDStorage$implementation() {
    }
    return SIMDStorage$implementation;
}());
var SIMDScalar$implementation = /** @class */ (function () {
    function SIMDScalar$implementation() {
    }
    return SIMDScalar$implementation;
}());
var SIMD$implementation = /** @class */ (function () {
    function SIMD$implementation() {
    }
    /*Swift.(file).SIMD.indices*/ /**/ ;
    /*Swift.(file).SIMD.init(repeating:Self.Scalar)*/
    /*Swift.(file).SIMD.init(repeating:Self.Scalar)*/
    SIMD$implementation.prototype.initRepeating = function ($info, value) {
        return value;
    };
    /*Swift.(file).SIMD.==infix(_:Self,_:Self)*/
    /*Swift.(file).SIMD.==infix(_:Self,_:Self)*/
    SIMD$implementation.infix_61_61 = function ($info, lhs, rhs) {
        return lhs == rhs;
    };
    /*Swift.(file).SIMD.hash(into:Hasher)*/
    /*Swift.(file).SIMD.hash(into:Hasher)*/
    SIMD$implementation.prototype.hashInto = function ($info, hasher$inout) {
    };
    /*Swift.(file).SIMD.description*/ /**/ ;
    /*Swift.(file).SIMD..==infix(_:Self,_:Self)*/
    /*Swift.(file).SIMD..==infix(_:Self,_:Self)*/
    SIMD$implementation.infix_46_61_61 = function ($info, lhs, rhs) {
        /*return lhs .== rhs*/
    };
    /*Swift.(file).SIMD..!=infix(_:Self,_:Self)*/
    /*Swift.(file).SIMD..!=infix(_:Self,_:Self)*/
    SIMD$implementation.infix_46_33_61 = function ($info, lhs, rhs) {
        /*return lhs .!= rhs*/
    };
    /*Swift.(file).SIMD.replace(with:Self,where:SIMDMask<Self.MaskStorage>)*/
    /*Swift.(file).SIMD.replace(with:Self,where:SIMDMask<Self.MaskStorage>)*/
    SIMD$implementation.prototype.replaceWithWhere = function ($info, other, mask) {
    };
    /*Swift.(file).SIMD.init(arrayLiteral:[Self.Scalar])*/
    /*Swift.(file).SIMD.init(arrayLiteral:[Self.Scalar])*/
    SIMD$implementation.prototype.initArrayLiteralArray = function ($info, scalars) {
        return scalars;
    };
    /*Swift.(file).SIMD.init(_:S)*/
    /*Swift.(file).SIMD.init(_:S)*/
    SIMD$implementation.prototype.init = function ($info, scalars) {
        return scalars;
    };
    /*Swift.(file).SIMD.+infix(_:Self,_:Self)*/
    /*Swift.(file).SIMD.+infix(_:Self,_:Self)*/
    SIMD$implementation.infix_43 = function ($info, lhs, rhs) {
        return lhs + rhs;
    };
    /*Swift.(file).SIMD.-infix(_:Self,_:Self)*/
    /*Swift.(file).SIMD.-infix(_:Self,_:Self)*/
    SIMD$implementation.infix_45 = function ($info, lhs, rhs) {
        return lhs - rhs;
    };
    /*Swift.(file).SIMD.*infix(_:Self,_:Self)*/
    /*Swift.(file).SIMD.*infix(_:Self,_:Self)*/
    SIMD$implementation.infix_42 = function ($info, lhs, rhs) {
        return lhs * rhs;
    };
    /*Swift.(file).SIMD./infix(_:Self,_:Self)*/
    /*Swift.(file).SIMD./infix(_:Self,_:Self)*/
    SIMD$implementation.infix_47 = function ($info, lhs, rhs) {
        return lhs / rhs;
    };
    /*Swift.(file).SIMD.addingProduct(_:Self,_:Self)*/
    /*Swift.(file).SIMD.addingProduct(_:Self,_:Self)*/
    SIMD$implementation.prototype.addingProduct = function ($info, lhs, rhs) {
    };
    /*Swift.(file).SIMD.squareRoot()*/
    /*Swift.(file).SIMD.squareRoot()*/
    SIMD$implementation.prototype.squareRoot = function ($info) {
    };
    /*Swift.(file).SIMD.rounded(_:FloatingPointRoundingRule)*/
    /*Swift.(file).SIMD.rounded(_:FloatingPointRoundingRule)*/
    SIMD$implementation.prototype.rounded = function ($info, rule) {
    };
    /*Swift.(file).SIMD.&infix(_:Self.Scalar,_:Self)*/
    /*Swift.(file).SIMD.&infix(_:Self.Scalar,_:Self)*/
    SIMD$implementation.infix_38 = function ($info, lhs, rhs) {
        /*return lhs & rhs*/
    };
    /*Swift.(file).SIMD.^infix(_:Self.Scalar,_:Self)*/
    /*Swift.(file).SIMD.^infix(_:Self.Scalar,_:Self)*/
    SIMD$implementation.infix_94 = function ($info, lhs, rhs) {
        return lhs ^ rhs;
    };
    /*Swift.(file).SIMD.|infix(_:Self.Scalar,_:Self)*/
    /*Swift.(file).SIMD.|infix(_:Self.Scalar,_:Self)*/
    SIMD$implementation.infix_124 = function ($info, lhs, rhs) {
        return lhs | rhs;
    };
    /*Swift.(file).SIMD.&<<infix(_:Self.Scalar,_:Self)*/
    /*Swift.(file).SIMD.&<<infix(_:Self.Scalar,_:Self)*/
    SIMD$implementation.infix_38_60_60 = function ($info, lhs, rhs) {
        /*return lhs &<< rhs*/
    };
    /*Swift.(file).SIMD.&>>infix(_:Self.Scalar,_:Self)*/
    /*Swift.(file).SIMD.&>>infix(_:Self.Scalar,_:Self)*/
    SIMD$implementation.infix_38_62_62 = function ($info, lhs, rhs) {
        /*return lhs &>> rhs*/
    };
    /*Swift.(file).SIMD.&+infix(_:Self.Scalar,_:Self)*/
    /*Swift.(file).SIMD.&+infix(_:Self.Scalar,_:Self)*/
    SIMD$implementation.infix_38_43 = function ($info, lhs, rhs) {
        /*return lhs &+ rhs*/
    };
    /*Swift.(file).SIMD.&-infix(_:Self.Scalar,_:Self)*/
    /*Swift.(file).SIMD.&-infix(_:Self.Scalar,_:Self)*/
    SIMD$implementation.infix_38_45 = function ($info, lhs, rhs) {
        /*return lhs &- rhs*/
    };
    /*Swift.(file).SIMD.&*infix(_:Self.Scalar,_:Self)*/
    /*Swift.(file).SIMD.&*infix(_:Self.Scalar,_:Self)*/
    SIMD$implementation.infix_38_42 = function ($info, lhs, rhs) {
        /*return lhs &* rhs*/
    };
    /*Swift.(file).SIMD./infix(_:Self.Scalar,_:Self)*/
    /*Swift.(file).SIMD./infix(_:Self.Scalar,_:Self)*/
    SIMD$implementation.infix_47 = function ($info, lhs, rhs) {
        return lhs / rhs;
    };
    /*Swift.(file).SIMD.%infix(_:Self.Scalar,_:Self)*/
    /*Swift.(file).SIMD.%infix(_:Self.Scalar,_:Self)*/
    SIMD$implementation.infix_37 = function ($info, lhs, rhs) {
        return lhs % rhs;
    };
    /*Swift.(file).SIMD.&infix(_:Self,_:Self.Scalar)*/
    /*Swift.(file).SIMD.&infix(_:Self,_:Self.Scalar)*/
    SIMD$implementation.infix_38 = function ($info, lhs, rhs) {
        /*return lhs & rhs*/
    };
    /*Swift.(file).SIMD.^infix(_:Self,_:Self.Scalar)*/
    /*Swift.(file).SIMD.^infix(_:Self,_:Self.Scalar)*/
    SIMD$implementation.infix_94 = function ($info, lhs, rhs) {
        return lhs ^ rhs;
    };
    /*Swift.(file).SIMD.|infix(_:Self,_:Self.Scalar)*/
    /*Swift.(file).SIMD.|infix(_:Self,_:Self.Scalar)*/
    SIMD$implementation.infix_124 = function ($info, lhs, rhs) {
        return lhs | rhs;
    };
    /*Swift.(file).SIMD.&<<infix(_:Self,_:Self.Scalar)*/
    /*Swift.(file).SIMD.&<<infix(_:Self,_:Self.Scalar)*/
    SIMD$implementation.infix_38_60_60 = function ($info, lhs, rhs) {
        /*return lhs &<< rhs*/
    };
    /*Swift.(file).SIMD.&>>infix(_:Self,_:Self.Scalar)*/
    /*Swift.(file).SIMD.&>>infix(_:Self,_:Self.Scalar)*/
    SIMD$implementation.infix_38_62_62 = function ($info, lhs, rhs) {
        /*return lhs &>> rhs*/
    };
    /*Swift.(file).SIMD.&+infix(_:Self,_:Self.Scalar)*/
    /*Swift.(file).SIMD.&+infix(_:Self,_:Self.Scalar)*/
    SIMD$implementation.infix_38_43 = function ($info, lhs, rhs) {
        /*return lhs &+ rhs*/
    };
    /*Swift.(file).SIMD.&-infix(_:Self,_:Self.Scalar)*/
    /*Swift.(file).SIMD.&-infix(_:Self,_:Self.Scalar)*/
    SIMD$implementation.infix_38_45 = function ($info, lhs, rhs) {
        /*return lhs &- rhs*/
    };
    /*Swift.(file).SIMD.&*infix(_:Self,_:Self.Scalar)*/
    /*Swift.(file).SIMD.&*infix(_:Self,_:Self.Scalar)*/
    SIMD$implementation.infix_38_42 = function ($info, lhs, rhs) {
        /*return lhs &* rhs*/
    };
    /*Swift.(file).SIMD./infix(_:Self,_:Self.Scalar)*/
    /*Swift.(file).SIMD./infix(_:Self,_:Self.Scalar)*/
    SIMD$implementation.infix_47 = function ($info, lhs, rhs) {
        return lhs / rhs;
    };
    /*Swift.(file).SIMD.%infix(_:Self,_:Self.Scalar)*/
    /*Swift.(file).SIMD.%infix(_:Self,_:Self.Scalar)*/
    SIMD$implementation.infix_37 = function ($info, lhs, rhs) {
        return lhs % rhs;
    };
    /*Swift.(file).SIMD.&=infix(_:Self,_:Self)*/
    /*Swift.(file).SIMD.&=infix(_:Self,_:Self)*/
    SIMD$implementation.infix_38_61 = function ($info, lhs$inout, rhs) {
        /*lhs$inout.set(lhs$inout.get() & rhs)*/
    };
    /*Swift.(file).SIMD.^=infix(_:Self,_:Self)*/
    /*Swift.(file).SIMD.^=infix(_:Self,_:Self)*/
    SIMD$implementation.infix_94_61 = function ($info, lhs$inout, rhs) {
        lhs$inout.set(lhs$inout.get() ^ rhs);
    };
    /*Swift.(file).SIMD.|=infix(_:Self,_:Self)*/
    /*Swift.(file).SIMD.|=infix(_:Self,_:Self)*/
    SIMD$implementation.infix_124_61 = function ($info, lhs$inout, rhs) {
        lhs$inout.set(lhs$inout.get() | rhs);
    };
    /*Swift.(file).SIMD.&<<=infix(_:Self,_:Self)*/
    /*Swift.(file).SIMD.&<<=infix(_:Self,_:Self)*/
    SIMD$implementation.infix_38_60_60_61 = function ($info, lhs$inout, rhs) {
        /*lhs$inout.set(lhs$inout.get() &<< rhs)*/
    };
    /*Swift.(file).SIMD.&>>=infix(_:Self,_:Self)*/
    /*Swift.(file).SIMD.&>>=infix(_:Self,_:Self)*/
    SIMD$implementation.infix_38_62_62_61 = function ($info, lhs$inout, rhs) {
        /*lhs$inout.set(lhs$inout.get() &>> rhs)*/
    };
    /*Swift.(file).SIMD.&+=infix(_:Self,_:Self)*/
    /*Swift.(file).SIMD.&+=infix(_:Self,_:Self)*/
    SIMD$implementation.infix_38_43_61 = function ($info, lhs$inout, rhs) {
        /*return lhs$inout &+= rhs*/
    };
    /*Swift.(file).SIMD.&-=infix(_:Self,_:Self)*/
    /*Swift.(file).SIMD.&-=infix(_:Self,_:Self)*/
    SIMD$implementation.infix_38_45_61 = function ($info, lhs$inout, rhs) {
        /*return lhs$inout &-= rhs*/
    };
    /*Swift.(file).SIMD.&*=infix(_:Self,_:Self)*/
    /*Swift.(file).SIMD.&*=infix(_:Self,_:Self)*/
    SIMD$implementation.infix_38_42_61 = function ($info, lhs$inout, rhs) {
        /*return lhs$inout &*= rhs*/
    };
    /*Swift.(file).SIMD./=infix(_:Self,_:Self)*/
    /*Swift.(file).SIMD./=infix(_:Self,_:Self)*/
    SIMD$implementation.infix_47_61 = function ($info, lhs$inout, rhs) {
        lhs$inout.set(lhs$inout.get() / rhs);
    };
    /*Swift.(file).SIMD.%=infix(_:Self,_:Self)*/
    /*Swift.(file).SIMD.%=infix(_:Self,_:Self)*/
    SIMD$implementation.infix_37_61 = function ($info, lhs$inout, rhs) {
        lhs$inout.set(lhs$inout.get() % rhs);
    };
    /*Swift.(file).SIMD.&=infix(_:Self,_:Self.Scalar)*/
    /*Swift.(file).SIMD.&=infix(_:Self,_:Self.Scalar)*/
    SIMD$implementation.infix_38_61 = function ($info, lhs$inout, rhs) {
        /*lhs$inout.set(lhs$inout.get() & rhs)*/
    };
    /*Swift.(file).SIMD.^=infix(_:Self,_:Self.Scalar)*/
    /*Swift.(file).SIMD.^=infix(_:Self,_:Self.Scalar)*/
    SIMD$implementation.infix_94_61 = function ($info, lhs$inout, rhs) {
        lhs$inout.set(lhs$inout.get() ^ rhs);
    };
    /*Swift.(file).SIMD.|=infix(_:Self,_:Self.Scalar)*/
    /*Swift.(file).SIMD.|=infix(_:Self,_:Self.Scalar)*/
    SIMD$implementation.infix_124_61 = function ($info, lhs$inout, rhs) {
        lhs$inout.set(lhs$inout.get() | rhs);
    };
    /*Swift.(file).SIMD.&<<=infix(_:Self,_:Self.Scalar)*/
    /*Swift.(file).SIMD.&<<=infix(_:Self,_:Self.Scalar)*/
    SIMD$implementation.infix_38_60_60_61 = function ($info, lhs$inout, rhs) {
        /*lhs$inout.set(lhs$inout.get() &<< rhs)*/
    };
    /*Swift.(file).SIMD.&>>=infix(_:Self,_:Self.Scalar)*/
    /*Swift.(file).SIMD.&>>=infix(_:Self,_:Self.Scalar)*/
    SIMD$implementation.infix_38_62_62_61 = function ($info, lhs$inout, rhs) {
        /*lhs$inout.set(lhs$inout.get() &>> rhs)*/
    };
    /*Swift.(file).SIMD.&+=infix(_:Self,_:Self.Scalar)*/
    /*Swift.(file).SIMD.&+=infix(_:Self,_:Self.Scalar)*/
    SIMD$implementation.infix_38_43_61 = function ($info, lhs$inout, rhs) {
        /*return lhs$inout &+= rhs*/
    };
    /*Swift.(file).SIMD.&-=infix(_:Self,_:Self.Scalar)*/
    /*Swift.(file).SIMD.&-=infix(_:Self,_:Self.Scalar)*/
    SIMD$implementation.infix_38_45_61 = function ($info, lhs$inout, rhs) {
        /*return lhs$inout &-= rhs*/
    };
    /*Swift.(file).SIMD.&*=infix(_:Self,_:Self.Scalar)*/
    /*Swift.(file).SIMD.&*=infix(_:Self,_:Self.Scalar)*/
    SIMD$implementation.infix_38_42_61 = function ($info, lhs$inout, rhs) {
        /*return lhs$inout &*= rhs*/
    };
    /*Swift.(file).SIMD./=infix(_:Self,_:Self.Scalar)*/
    /*Swift.(file).SIMD./=infix(_:Self,_:Self.Scalar)*/
    SIMD$implementation.infix_47_61 = function ($info, lhs$inout, rhs) {
        lhs$inout.set(lhs$inout.get() / rhs);
    };
    /*Swift.(file).SIMD.%=infix(_:Self,_:Self.Scalar)*/
    /*Swift.(file).SIMD.%=infix(_:Self,_:Self.Scalar)*/
    SIMD$implementation.infix_37_61 = function ($info, lhs$inout, rhs) {
        lhs$inout.set(lhs$inout.get() % rhs);
    };
    /*Swift.(file).SIMD.+infix(_:Self,_:Self)*/
    /*Swift.(file).SIMD.+infix(_:Self,_:Self)*/
    SIMD$implementation.infix_43 = function ($info, lhs, rhs) {
        return lhs + rhs;
    };
    /*Swift.(file).SIMD.-infix(_:Self,_:Self)*/
    /*Swift.(file).SIMD.-infix(_:Self,_:Self)*/
    SIMD$implementation.infix_45 = function ($info, lhs, rhs) {
        return lhs - rhs;
    };
    /*Swift.(file).SIMD.*infix(_:Self,_:Self)*/
    /*Swift.(file).SIMD.*infix(_:Self,_:Self)*/
    SIMD$implementation.infix_42 = function ($info, lhs, rhs) {
        return lhs * rhs;
    };
    /*Swift.(file).SIMD.+infix(_:Self,_:Self.Scalar)*/
    /*Swift.(file).SIMD.+infix(_:Self,_:Self.Scalar)*/
    SIMD$implementation.infix_43 = function ($info, lhs, rhs) {
        return lhs + rhs;
    };
    /*Swift.(file).SIMD.-infix(_:Self,_:Self.Scalar)*/
    /*Swift.(file).SIMD.-infix(_:Self,_:Self.Scalar)*/
    SIMD$implementation.infix_45 = function ($info, lhs, rhs) {
        return lhs - rhs;
    };
    /*Swift.(file).SIMD.*infix(_:Self,_:Self.Scalar)*/
    /*Swift.(file).SIMD.*infix(_:Self,_:Self.Scalar)*/
    SIMD$implementation.infix_42 = function ($info, lhs, rhs) {
        return lhs * rhs;
    };
    /*Swift.(file).SIMD.+infix(_:Self.Scalar,_:Self)*/
    /*Swift.(file).SIMD.+infix(_:Self.Scalar,_:Self)*/
    SIMD$implementation.infix_43 = function ($info, lhs, rhs) {
        return lhs + rhs;
    };
    /*Swift.(file).SIMD.-infix(_:Self.Scalar,_:Self)*/
    /*Swift.(file).SIMD.-infix(_:Self.Scalar,_:Self)*/
    SIMD$implementation.infix_45 = function ($info, lhs, rhs) {
        return lhs - rhs;
    };
    /*Swift.(file).SIMD.*infix(_:Self.Scalar,_:Self)*/
    /*Swift.(file).SIMD.*infix(_:Self.Scalar,_:Self)*/
    SIMD$implementation.infix_42 = function ($info, lhs, rhs) {
        return lhs * rhs;
    };
    /*Swift.(file).SIMD.+=infix(_:Self,_:Self)*/
    /*Swift.(file).SIMD.+=infix(_:Self,_:Self)*/
    SIMD$implementation.infix_43_61 = function ($info, lhs$inout, rhs) {
        lhs$inout.set(lhs$inout.get() + rhs);
    };
    /*Swift.(file).SIMD.-=infix(_:Self,_:Self)*/
    /*Swift.(file).SIMD.-=infix(_:Self,_:Self)*/
    SIMD$implementation.infix_45_61 = function ($info, lhs$inout, rhs) {
        lhs$inout.set(lhs$inout.get() - rhs);
    };
    /*Swift.(file).SIMD.*=infix(_:Self,_:Self)*/
    /*Swift.(file).SIMD.*=infix(_:Self,_:Self)*/
    SIMD$implementation.infix_42_61 = function ($info, lhs$inout, rhs) {
        lhs$inout.set(lhs$inout.get() * rhs);
    };
    /*Swift.(file).SIMD.+=infix(_:Self,_:Self.Scalar)*/
    /*Swift.(file).SIMD.+=infix(_:Self,_:Self.Scalar)*/
    SIMD$implementation.infix_43_61 = function ($info, lhs$inout, rhs) {
        lhs$inout.set(lhs$inout.get() + rhs);
    };
    /*Swift.(file).SIMD.-=infix(_:Self,_:Self.Scalar)*/
    /*Swift.(file).SIMD.-=infix(_:Self,_:Self.Scalar)*/
    SIMD$implementation.infix_45_61 = function ($info, lhs$inout, rhs) {
        lhs$inout.set(lhs$inout.get() - rhs);
    };
    /*Swift.(file).SIMD.*=infix(_:Self,_:Self.Scalar)*/
    /*Swift.(file).SIMD.*=infix(_:Self,_:Self.Scalar)*/
    SIMD$implementation.infix_42_61 = function ($info, lhs$inout, rhs) {
        lhs$inout.set(lhs$inout.get() * rhs);
    };
    /*Swift.(file).SIMD.-prefix(_:Self)*/
    /*Swift.(file).SIMD.-prefix(_:Self)*/
    SIMD$implementation.prefix_45 = function ($info, rhs) {
        return -rhs;
    };
    /*Swift.(file).SIMD.+infix(_:Self.Scalar,_:Self)*/
    /*Swift.(file).SIMD.+infix(_:Self.Scalar,_:Self)*/
    SIMD$implementation.infix_43 = function ($info, lhs, rhs) {
        return lhs + rhs;
    };
    /*Swift.(file).SIMD.-infix(_:Self.Scalar,_:Self)*/
    /*Swift.(file).SIMD.-infix(_:Self.Scalar,_:Self)*/
    SIMD$implementation.infix_45 = function ($info, lhs, rhs) {
        return lhs - rhs;
    };
    /*Swift.(file).SIMD.*infix(_:Self.Scalar,_:Self)*/
    /*Swift.(file).SIMD.*infix(_:Self.Scalar,_:Self)*/
    SIMD$implementation.infix_42 = function ($info, lhs, rhs) {
        return lhs * rhs;
    };
    /*Swift.(file).SIMD./infix(_:Self.Scalar,_:Self)*/
    /*Swift.(file).SIMD./infix(_:Self.Scalar,_:Self)*/
    SIMD$implementation.infix_47 = function ($info, lhs, rhs) {
        return lhs / rhs;
    };
    /*Swift.(file).SIMD.+infix(_:Self,_:Self.Scalar)*/
    /*Swift.(file).SIMD.+infix(_:Self,_:Self.Scalar)*/
    SIMD$implementation.infix_43 = function ($info, lhs, rhs) {
        return lhs + rhs;
    };
    /*Swift.(file).SIMD.-infix(_:Self,_:Self.Scalar)*/
    /*Swift.(file).SIMD.-infix(_:Self,_:Self.Scalar)*/
    SIMD$implementation.infix_45 = function ($info, lhs, rhs) {
        return lhs - rhs;
    };
    /*Swift.(file).SIMD.*infix(_:Self,_:Self.Scalar)*/
    /*Swift.(file).SIMD.*infix(_:Self,_:Self.Scalar)*/
    SIMD$implementation.infix_42 = function ($info, lhs, rhs) {
        return lhs * rhs;
    };
    /*Swift.(file).SIMD./infix(_:Self,_:Self.Scalar)*/
    /*Swift.(file).SIMD./infix(_:Self,_:Self.Scalar)*/
    SIMD$implementation.infix_47 = function ($info, lhs, rhs) {
        return lhs / rhs;
    };
    /*Swift.(file).SIMD.+=infix(_:Self,_:Self)*/
    /*Swift.(file).SIMD.+=infix(_:Self,_:Self)*/
    SIMD$implementation.infix_43_61 = function ($info, lhs$inout, rhs) {
        lhs$inout.set(lhs$inout.get() + rhs);
    };
    /*Swift.(file).SIMD.-=infix(_:Self,_:Self)*/
    /*Swift.(file).SIMD.-=infix(_:Self,_:Self)*/
    SIMD$implementation.infix_45_61 = function ($info, lhs$inout, rhs) {
        lhs$inout.set(lhs$inout.get() - rhs);
    };
    /*Swift.(file).SIMD.*=infix(_:Self,_:Self)*/
    /*Swift.(file).SIMD.*=infix(_:Self,_:Self)*/
    SIMD$implementation.infix_42_61 = function ($info, lhs$inout, rhs) {
        lhs$inout.set(lhs$inout.get() * rhs);
    };
    /*Swift.(file).SIMD./=infix(_:Self,_:Self)*/
    /*Swift.(file).SIMD./=infix(_:Self,_:Self)*/
    SIMD$implementation.infix_47_61 = function ($info, lhs$inout, rhs) {
        lhs$inout.set(lhs$inout.get() / rhs);
    };
    /*Swift.(file).SIMD.+=infix(_:Self,_:Self.Scalar)*/
    /*Swift.(file).SIMD.+=infix(_:Self,_:Self.Scalar)*/
    SIMD$implementation.infix_43_61 = function ($info, lhs$inout, rhs) {
        lhs$inout.set(lhs$inout.get() + rhs);
    };
    /*Swift.(file).SIMD.-=infix(_:Self,_:Self.Scalar)*/
    /*Swift.(file).SIMD.-=infix(_:Self,_:Self.Scalar)*/
    SIMD$implementation.infix_45_61 = function ($info, lhs$inout, rhs) {
        lhs$inout.set(lhs$inout.get() - rhs);
    };
    /*Swift.(file).SIMD.*=infix(_:Self,_:Self.Scalar)*/
    /*Swift.(file).SIMD.*=infix(_:Self,_:Self.Scalar)*/
    SIMD$implementation.infix_42_61 = function ($info, lhs$inout, rhs) {
        lhs$inout.set(lhs$inout.get() * rhs);
    };
    /*Swift.(file).SIMD./=infix(_:Self,_:Self.Scalar)*/
    /*Swift.(file).SIMD./=infix(_:Self,_:Self.Scalar)*/
    SIMD$implementation.infix_47_61 = function ($info, lhs$inout, rhs) {
        lhs$inout.set(lhs$inout.get() / rhs);
    };
    /*Swift.(file).SIMD.addingProduct(_:Self.Scalar,_:Self)*/
    /*Swift.(file).SIMD.addingProduct(_:Self.Scalar,_:Self)*/
    SIMD$implementation.prototype.addingProduct = function ($info, lhs, rhs) {
    };
    /*Swift.(file).SIMD.addingProduct(_:Self,_:Self.Scalar)*/
    /*Swift.(file).SIMD.addingProduct(_:Self,_:Self.Scalar)*/
    SIMD$implementation.prototype.addingProduct = function ($info, lhs, rhs) {
    };
    /*Swift.(file).SIMD.addProduct(_:Self,_:Self)*/
    /*Swift.(file).SIMD.addProduct(_:Self,_:Self)*/
    SIMD$implementation.prototype.addProduct = function ($info, lhs, rhs) {
    };
    /*Swift.(file).SIMD.addProduct(_:Self.Scalar,_:Self)*/
    /*Swift.(file).SIMD.addProduct(_:Self.Scalar,_:Self)*/
    SIMD$implementation.prototype.addProduct = function ($info, lhs, rhs) {
    };
    /*Swift.(file).SIMD.addProduct(_:Self,_:Self.Scalar)*/
    /*Swift.(file).SIMD.addProduct(_:Self,_:Self.Scalar)*/
    SIMD$implementation.prototype.addProduct = function ($info, lhs, rhs) {
    };
    /*Swift.(file).SIMD.formSquareRoot()*/
    /*Swift.(file).SIMD.formSquareRoot()*/
    SIMD$implementation.prototype.formSquareRoot = function ($info) {
    };
    /*Swift.(file).SIMD.round(_:FloatingPointRoundingRule)*/
    /*Swift.(file).SIMD.round(_:FloatingPointRoundingRule)*/
    SIMD$implementation.prototype.round = function ($info, rule) {
    };
    /*Swift.(file).SIMD..<infix(_:Self,_:Self)*/
    /*Swift.(file).SIMD..<infix(_:Self,_:Self)*/
    SIMD$implementation.infix_46_60 = function ($info, lhs, rhs) {
        /*return lhs .< rhs*/
    };
    /*Swift.(file).SIMD..<=infix(_:Self,_:Self)*/
    /*Swift.(file).SIMD..<=infix(_:Self,_:Self)*/
    SIMD$implementation.infix_46_60_61 = function ($info, lhs, rhs) {
        /*return lhs .<= rhs*/
    };
    /*Swift.(file).SIMD..==infix(_:Self.Scalar,_:Self)*/
    /*Swift.(file).SIMD..==infix(_:Self.Scalar,_:Self)*/
    SIMD$implementation.infix_46_61_61 = function ($info, lhs, rhs) {
        /*return lhs .== rhs*/
    };
    /*Swift.(file).SIMD..!=infix(_:Self.Scalar,_:Self)*/
    /*Swift.(file).SIMD..!=infix(_:Self.Scalar,_:Self)*/
    SIMD$implementation.infix_46_33_61 = function ($info, lhs, rhs) {
        /*return lhs .!= rhs*/
    };
    /*Swift.(file).SIMD..==infix(_:Self,_:Self.Scalar)*/
    /*Swift.(file).SIMD..==infix(_:Self,_:Self.Scalar)*/
    SIMD$implementation.infix_46_61_61 = function ($info, lhs, rhs) {
        /*return lhs .== rhs*/
    };
    /*Swift.(file).SIMD..!=infix(_:Self,_:Self.Scalar)*/
    /*Swift.(file).SIMD..!=infix(_:Self,_:Self.Scalar)*/
    SIMD$implementation.infix_46_33_61 = function ($info, lhs, rhs) {
        /*return lhs .!= rhs*/
    };
    /*Swift.(file).SIMD.replace(with:Self.Scalar,where:SIMDMask<Self.MaskStorage>)*/
    /*Swift.(file).SIMD.replace(with:Self.Scalar,where:SIMDMask<Self.MaskStorage>)*/
    SIMD$implementation.prototype.replaceWithWhere = function ($info, other, mask) {
    };
    /*Swift.(file).SIMD.replacing(with:Self,where:SIMDMask<Self.MaskStorage>)*/
    /*Swift.(file).SIMD.replacing(with:Self,where:SIMDMask<Self.MaskStorage>)*/
    SIMD$implementation.prototype.replacingWithWhere = function ($info, other, mask) {
    };
    /*Swift.(file).SIMD.replacing(with:Self.Scalar,where:SIMDMask<Self.MaskStorage>)*/
    /*Swift.(file).SIMD.replacing(with:Self.Scalar,where:SIMDMask<Self.MaskStorage>)*/
    SIMD$implementation.prototype.replacingWithWhere = function ($info, other, mask) {
    };
    /*Swift.(file).SIMD..>=infix(_:Self,_:Self)*/
    /*Swift.(file).SIMD..>=infix(_:Self,_:Self)*/
    SIMD$implementation.infix_46_62_61 = function ($info, lhs, rhs) {
        /*return lhs .>= rhs*/
    };
    /*Swift.(file).SIMD..>infix(_:Self,_:Self)*/
    /*Swift.(file).SIMD..>infix(_:Self,_:Self)*/
    SIMD$implementation.infix_46_62 = function ($info, lhs, rhs) {
        /*return lhs .> rhs*/
    };
    /*Swift.(file).SIMD..<infix(_:Self.Scalar,_:Self)*/
    /*Swift.(file).SIMD..<infix(_:Self.Scalar,_:Self)*/
    SIMD$implementation.infix_46_60 = function ($info, lhs, rhs) {
        /*return lhs .< rhs*/
    };
    /*Swift.(file).SIMD..<=infix(_:Self.Scalar,_:Self)*/
    /*Swift.(file).SIMD..<=infix(_:Self.Scalar,_:Self)*/
    SIMD$implementation.infix_46_60_61 = function ($info, lhs, rhs) {
        /*return lhs .<= rhs*/
    };
    /*Swift.(file).SIMD..>=infix(_:Self.Scalar,_:Self)*/
    /*Swift.(file).SIMD..>=infix(_:Self.Scalar,_:Self)*/
    SIMD$implementation.infix_46_62_61 = function ($info, lhs, rhs) {
        /*return lhs .>= rhs*/
    };
    /*Swift.(file).SIMD..>infix(_:Self.Scalar,_:Self)*/
    /*Swift.(file).SIMD..>infix(_:Self.Scalar,_:Self)*/
    SIMD$implementation.infix_46_62 = function ($info, lhs, rhs) {
        /*return lhs .> rhs*/
    };
    /*Swift.(file).SIMD..<infix(_:Self,_:Self.Scalar)*/
    /*Swift.(file).SIMD..<infix(_:Self,_:Self.Scalar)*/
    SIMD$implementation.infix_46_60 = function ($info, lhs, rhs) {
        /*return lhs .< rhs*/
    };
    /*Swift.(file).SIMD..<=infix(_:Self,_:Self.Scalar)*/
    /*Swift.(file).SIMD..<=infix(_:Self,_:Self.Scalar)*/
    SIMD$implementation.infix_46_60_61 = function ($info, lhs, rhs) {
        /*return lhs .<= rhs*/
    };
    /*Swift.(file).SIMD..>=infix(_:Self,_:Self.Scalar)*/
    /*Swift.(file).SIMD..>=infix(_:Self,_:Self.Scalar)*/
    SIMD$implementation.infix_46_62_61 = function ($info, lhs, rhs) {
        /*return lhs .>= rhs*/
    };
    /*Swift.(file).SIMD..>infix(_:Self,_:Self.Scalar)*/
    /*Swift.(file).SIMD..>infix(_:Self,_:Self.Scalar)*/
    SIMD$implementation.infix_46_62 = function ($info, lhs, rhs) {
        /*return lhs .> rhs*/
    };
    /*Swift.(file).SIMD.zero*/ /**/ ;
    /*Swift.(file).SIMD.random(in:Range<Self.Scalar>,using:T)*/
    /*Swift.(file).SIMD.random(in:Range<Self.Scalar>,using:T)*/
    SIMD$implementation.randomInUsing = function ($info, range, generator$inout) {
    };
    /*Swift.(file).SIMD.random(in:Range<Self.Scalar>)*/
    /*Swift.(file).SIMD.random(in:Range<Self.Scalar>)*/
    SIMD$implementation.randomIn = function ($info, range) {
    };
    /*Swift.(file).SIMD.random(in:ClosedRange<Self.Scalar>,using:T)*/
    /*Swift.(file).SIMD.random(in:ClosedRange<Self.Scalar>,using:T)*/
    SIMD$implementation.randomInUsing = function ($info, range, generator$inout) {
    };
    /*Swift.(file).SIMD.random(in:ClosedRange<Self.Scalar>)*/
    /*Swift.(file).SIMD.random(in:ClosedRange<Self.Scalar>)*/
    SIMD$implementation.randomIn = function ($info, range) {
    };
    /*Swift.(file).SIMD.zero*/ /**/ ;
    /*Swift.(file).SIMD.random(in:Range<Self.Scalar>,using:T)*/
    /*Swift.(file).SIMD.random(in:Range<Self.Scalar>,using:T)*/
    SIMD$implementation.randomInUsing = function ($info, range, generator$inout) {
    };
    /*Swift.(file).SIMD.random(in:Range<Self.Scalar>)*/
    /*Swift.(file).SIMD.random(in:Range<Self.Scalar>)*/
    SIMD$implementation.randomIn = function ($info, range) {
    };
    /*Swift.(file).SIMD.random(in:ClosedRange<Self.Scalar>,using:T)*/
    /*Swift.(file).SIMD.random(in:ClosedRange<Self.Scalar>,using:T)*/
    SIMD$implementation.randomInUsing = function ($info, range, generator$inout) {
    };
    /*Swift.(file).SIMD.random(in:ClosedRange<Self.Scalar>)*/
    /*Swift.(file).SIMD.random(in:ClosedRange<Self.Scalar>)*/
    SIMD$implementation.randomIn = function ($info, range) {
    };
    /*Swift.(file).SIMD.leadingZeroBitCount*/ /**/ ;
    /*Swift.(file).SIMD.trailingZeroBitCount*/ /**/ ;
    /*Swift.(file).SIMD.nonzeroBitCount*/ /**/ ;
    /*Swift.(file).SIMD.~prefix(_:Self)*/
    /*Swift.(file).SIMD.~prefix(_:Self)*/
    SIMD$implementation.prefix_126 = function ($info, rhs) {
        return ~rhs;
    };
    /*Swift.(file).SIMD.&infix(_:Self,_:Self)*/
    /*Swift.(file).SIMD.&infix(_:Self,_:Self)*/
    SIMD$implementation.infix_38 = function ($info, lhs, rhs) {
        /*return lhs & rhs*/
    };
    /*Swift.(file).SIMD.^infix(_:Self,_:Self)*/
    /*Swift.(file).SIMD.^infix(_:Self,_:Self)*/
    SIMD$implementation.infix_94 = function ($info, lhs, rhs) {
        return lhs ^ rhs;
    };
    /*Swift.(file).SIMD.|infix(_:Self,_:Self)*/
    /*Swift.(file).SIMD.|infix(_:Self,_:Self)*/
    SIMD$implementation.infix_124 = function ($info, lhs, rhs) {
        return lhs | rhs;
    };
    /*Swift.(file).SIMD.&<<infix(_:Self,_:Self)*/
    /*Swift.(file).SIMD.&<<infix(_:Self,_:Self)*/
    SIMD$implementation.infix_38_60_60 = function ($info, lhs, rhs) {
        /*return lhs &<< rhs*/
    };
    /*Swift.(file).SIMD.&>>infix(_:Self,_:Self)*/
    /*Swift.(file).SIMD.&>>infix(_:Self,_:Self)*/
    SIMD$implementation.infix_38_62_62 = function ($info, lhs, rhs) {
        /*return lhs &>> rhs*/
    };
    /*Swift.(file).SIMD.&+infix(_:Self,_:Self)*/
    /*Swift.(file).SIMD.&+infix(_:Self,_:Self)*/
    SIMD$implementation.infix_38_43 = function ($info, lhs, rhs) {
        /*return lhs &+ rhs*/
    };
    /*Swift.(file).SIMD.&-infix(_:Self,_:Self)*/
    /*Swift.(file).SIMD.&-infix(_:Self,_:Self)*/
    SIMD$implementation.infix_38_45 = function ($info, lhs, rhs) {
        /*return lhs &- rhs*/
    };
    /*Swift.(file).SIMD.&*infix(_:Self,_:Self)*/
    /*Swift.(file).SIMD.&*infix(_:Self,_:Self)*/
    SIMD$implementation.infix_38_42 = function ($info, lhs, rhs) {
        /*return lhs &* rhs*/
    };
    /*Swift.(file).SIMD./infix(_:Self,_:Self)*/
    /*Swift.(file).SIMD./infix(_:Self,_:Self)*/
    SIMD$implementation.infix_47 = function ($info, lhs, rhs) {
        return lhs / rhs;
    };
    /*Swift.(file).SIMD.%infix(_:Self,_:Self)*/
    /*Swift.(file).SIMD.%infix(_:Self,_:Self)*/
    SIMD$implementation.infix_37 = function ($info, lhs, rhs) {
        return lhs % rhs;
    };
    return SIMD$implementation;
}());
if (typeof SIMDStorage$implementation != 'undefined')
    _mixin(SIMD$implementation, SIMDStorage$implementation, false);
if (typeof Hashable$implementation != 'undefined')
    _mixin(SIMD$implementation, Hashable$implementation, false);
if (typeof CustomStringConvertible$implementation != 'undefined')
    _mixin(SIMD$implementation, CustomStringConvertible$implementation, false);
if (typeof ExpressibleByArrayLiteral$implementation != 'undefined')
    _mixin(SIMD$implementation, ExpressibleByArrayLiteral$implementation, false);
var SIMDMask = /** @class */ (function () {
    function SIMDMask() {
    }
    /*Swift.(file).SIMDMask.init()*/
    /*Swift.(file).SIMDStorage.init()*/
    SIMDMask.prototype.init = function ($info) {
    };
    /*Swift.(file).SIMDMask.init(_:Storage)*/
    /*Swift.(file).SIMDMask.init(_:Storage)*/
    SIMDMask.prototype.init = function ($info, _storage) {
        return _storage;
    };
    /*Swift.(file).SIMDMask.subscript(_:Int)*/
    /*Swift.(file).SIMDStorage.subscript(_:Int)*/
    SIMDMask.prototype.subscript$get = function ($info, index) {
        return this[index];
    }; /*Swift.(file).SIMDMask.subscript(_:Int)*/
    /*Swift.(file).SIMDStorage.subscript(_:Int)*/
    SIMDMask.prototype.subscript$set = function ($info, newValue, index) {
        this[index] = newValue;
    };
    /*Swift.(file).SIMDMask.hashValue*/ /*
    hashValue$get() {
    return this.hashValue
    }
    get hashValue() { return this.hashValue$get() }*/ ;
    /*Swift.(file).SIMDMask.random(using:T)*/
    /*Swift.(file).SIMDMask.random(using:T)*/
    SIMDMask.randomUsing = function ($info, generator$inout) {
    };
    /*Swift.(file).SIMDMask.random()*/
    /*Swift.(file).SIMDMask.random()*/
    SIMDMask.random = function ($info) {
    };
    /*Swift.(file).SIMDMask..!prefix(_:SIMDMask<Storage>)*/
    /*Swift.(file).SIMDMask..!prefix(_:SIMDMask<Storage>)*/
    SIMDMask.prefix_46_33 = function ($info, rhs) {
        /*return .!rhs*/
    };
    /*Swift.(file).SIMDMask..&infix(_:SIMDMask<Storage>,_:SIMDMask<Storage>)*/
    /*Swift.(file).SIMDMask..&infix(_:SIMDMask<Storage>,_:SIMDMask<Storage>)*/
    SIMDMask.infix_46_38 = function ($info, lhs, rhs) {
        /*return lhs .& rhs*/
    };
    /*Swift.(file).SIMDMask..^infix(_:SIMDMask<Storage>,_:SIMDMask<Storage>)*/
    /*Swift.(file).SIMDMask..^infix(_:SIMDMask<Storage>,_:SIMDMask<Storage>)*/
    SIMDMask.infix_46_94 = function ($info, lhs, rhs) {
        /*return lhs .^ rhs*/
    };
    /*Swift.(file).SIMDMask..|infix(_:SIMDMask<Storage>,_:SIMDMask<Storage>)*/
    /*Swift.(file).SIMDMask..|infix(_:SIMDMask<Storage>,_:SIMDMask<Storage>)*/
    SIMDMask.infix_46_124 = function ($info, lhs, rhs) {
        /*return lhs .| rhs*/
    };
    /*Swift.(file).SIMDMask..&infix(_:Bool,_:SIMDMask<Storage>)*/
    /*Swift.(file).SIMDMask..&infix(_:Bool,_:SIMDMask<Storage>)*/
    SIMDMask.infix_46_38 = function ($info, lhs, rhs) {
        /*return lhs .& rhs*/
    };
    /*Swift.(file).SIMDMask..^infix(_:Bool,_:SIMDMask<Storage>)*/
    /*Swift.(file).SIMDMask..^infix(_:Bool,_:SIMDMask<Storage>)*/
    SIMDMask.infix_46_94 = function ($info, lhs, rhs) {
        /*return lhs .^ rhs*/
    };
    /*Swift.(file).SIMDMask..|infix(_:Bool,_:SIMDMask<Storage>)*/
    /*Swift.(file).SIMDMask..|infix(_:Bool,_:SIMDMask<Storage>)*/
    SIMDMask.infix_46_124 = function ($info, lhs, rhs) {
        /*return lhs .| rhs*/
    };
    /*Swift.(file).SIMDMask..&infix(_:SIMDMask<Storage>,_:Bool)*/
    /*Swift.(file).SIMDMask..&infix(_:SIMDMask<Storage>,_:Bool)*/
    SIMDMask.infix_46_38 = function ($info, lhs, rhs) {
        /*return lhs .& rhs*/
    };
    /*Swift.(file).SIMDMask..^infix(_:SIMDMask<Storage>,_:Bool)*/
    /*Swift.(file).SIMDMask..^infix(_:SIMDMask<Storage>,_:Bool)*/
    SIMDMask.infix_46_94 = function ($info, lhs, rhs) {
        /*return lhs .^ rhs*/
    };
    /*Swift.(file).SIMDMask..|infix(_:SIMDMask<Storage>,_:Bool)*/
    /*Swift.(file).SIMDMask..|infix(_:SIMDMask<Storage>,_:Bool)*/
    SIMDMask.infix_46_124 = function ($info, lhs, rhs) {
        /*return lhs .| rhs*/
    };
    /*Swift.(file).SIMDMask..&=infix(_:SIMDMask<Storage>,_:SIMDMask<Storage>)*/
    /*Swift.(file).SIMDMask..&=infix(_:SIMDMask<Storage>,_:SIMDMask<Storage>)*/
    SIMDMask.infix_46_38_61 = function ($info, lhs$inout, rhs) {
        /*return lhs$inout .&= rhs*/
    };
    /*Swift.(file).SIMDMask..^=infix(_:SIMDMask<Storage>,_:SIMDMask<Storage>)*/
    /*Swift.(file).SIMDMask..^=infix(_:SIMDMask<Storage>,_:SIMDMask<Storage>)*/
    SIMDMask.infix_46_94_61 = function ($info, lhs$inout, rhs) {
        /*return lhs$inout .^= rhs*/
    };
    /*Swift.(file).SIMDMask..|=infix(_:SIMDMask<Storage>,_:SIMDMask<Storage>)*/
    /*Swift.(file).SIMDMask..|=infix(_:SIMDMask<Storage>,_:SIMDMask<Storage>)*/
    SIMDMask.infix_46_124_61 = function ($info, lhs$inout, rhs) {
        /*return lhs$inout .|= rhs*/
    };
    /*Swift.(file).SIMDMask..&=infix(_:SIMDMask<Storage>,_:Bool)*/
    /*Swift.(file).SIMDMask..&=infix(_:SIMDMask<Storage>,_:Bool)*/
    SIMDMask.infix_46_38_61 = function ($info, lhs$inout, rhs) {
        /*return lhs$inout .&= rhs*/
    };
    /*Swift.(file).SIMDMask..^=infix(_:SIMDMask<Storage>,_:Bool)*/
    /*Swift.(file).SIMDMask..^=infix(_:SIMDMask<Storage>,_:Bool)*/
    SIMDMask.infix_46_94_61 = function ($info, lhs$inout, rhs) {
        /*return lhs$inout .^= rhs*/
    };
    /*Swift.(file).SIMDMask..|=infix(_:SIMDMask<Storage>,_:Bool)*/
    /*Swift.(file).SIMDMask..|=infix(_:SIMDMask<Storage>,_:Bool)*/
    SIMDMask.infix_46_124_61 = function ($info, lhs$inout, rhs) {
        /*return lhs$inout .|= rhs*/
    };
    SIMDMask.$struct = true;
    SIMDMask.$infoAddress = '0x7fb8512eebd0';
    return SIMDMask;
}());
if (typeof SIMD$implementation != 'undefined')
    _mixin(SIMDMask, SIMD$implementation, false);
var SIMD2 = /** @class */ (function () {
    function SIMD2() {
    }
    /*Swift.(file).SIMD2.init()*/
    /*Swift.(file).SIMDStorage.init()*/
    SIMD2.prototype.init = function ($info) {
    };
    /*Swift.(file).SIMD2.subscript(_:Int)*/
    /*Swift.(file).SIMDStorage.subscript(_:Int)*/
    SIMD2.prototype.subscript$get = function ($info, index) {
        return this[index];
    }; /*Swift.(file).SIMD2.subscript(_:Int)*/
    /*Swift.(file).SIMDStorage.subscript(_:Int)*/
    SIMD2.prototype.subscript$set = function ($info, newValue, index) {
        this[index] = newValue;
    };
    /*Swift.(file).SIMD2.init(_:Scalar,_:Scalar)*/
    /*Swift.(file).SIMD2.init(_:Scalar,_:Scalar)*/
    SIMD2.prototype.init = function ($info, v0, v1) {
    };
    /*Swift.(file).SIMD2.init(x:Scalar,y:Scalar)*/
    /*Swift.(file).SIMD2.init(x:Scalar,y:Scalar)*/
    SIMD2.prototype.initXY = function ($info, x, y) {
    };
    /*Swift.(file).SIMD2.x*/ /*
    x$get() {
    return this.x
    }
    get x() { return this.x$get() }*/ ;
    /*Swift.(file).SIMD2.y*/ /*
    y$get() {
    return this.y
    }
    get y() { return this.y$get() }*/ ;
    /*Swift.(file).SIMD2.hashValue*/ /*
    hashValue$get() {
    return this.hashValue
    }
    get hashValue() { return this.hashValue$get() }*/ ;
    /*Swift.(file).SIMD2.init(truncatingIfNeeded:SIMD2<Other>)*/
    /*Swift.(file).SIMD2.init(truncatingIfNeeded:SIMD2<Other>)*/
    SIMD2.prototype.initTruncatingIfNeededSIMD2 = function ($info, other) {
        return other;
    };
    /*Swift.(file).SIMD2.init(clamping:SIMD2<Other>)*/
    /*Swift.(file).SIMD2.init(clamping:SIMD2<Other>)*/
    SIMD2.prototype.initClampingSIMD2 = function ($info, other) {
        return other;
    };
    /*Swift.(file).SIMD2.init(_:SIMD2<Other>,rounding:FloatingPointRoundingRule)*/
    /*Swift.(file).SIMD2.init(_:SIMD2<Other>,rounding:FloatingPointRoundingRule)*/
    SIMD2.prototype.initSIMD2RoundingFloatingPointRoundingRule = function ($info, other, rule) {
    };
    /*Swift.(file).SIMD2.debugDescription*/ /*
    debugDescription$get() {
    return this.debugDescription
    }
    get debugDescription() { return this.debugDescription$get() }*/ ;
    /*Swift.(file).SIMD2.init(_:SIMD2<Other>)*/
    /*Swift.(file).SIMD2.init(_:SIMD2<Other>)*/
    SIMD2.prototype.initSIMD2 = function ($info, other) {
        return other;
    };
    /*Swift.(file).SIMD2.init(_:SIMD2<Other>)*/
    /*Swift.(file).SIMD2.init(_:SIMD2<Other>)*/
    SIMD2.prototype.initSIMD2 = function ($info, other) {
        return other;
    };
    SIMD2.$struct = true;
    SIMD2.$infoAddress = '0x7fb8512ef5c8';
    return SIMD2;
}());
if (typeof SIMD$implementation != 'undefined')
    _mixin(SIMD2, SIMD$implementation, false);
if (typeof CustomDebugStringConvertible$implementation != 'undefined')
    _mixin(SIMD2, CustomDebugStringConvertible$implementation, false);
var SIMD4 = /** @class */ (function () {
    function SIMD4() {
    }
    /*Swift.(file).SIMD4.init()*/
    /*Swift.(file).SIMDStorage.init()*/
    SIMD4.prototype.init = function ($info) {
    };
    /*Swift.(file).SIMD4.subscript(_:Int)*/
    /*Swift.(file).SIMDStorage.subscript(_:Int)*/
    SIMD4.prototype.subscript$get = function ($info, index) {
        return this[index];
    }; /*Swift.(file).SIMD4.subscript(_:Int)*/
    /*Swift.(file).SIMDStorage.subscript(_:Int)*/
    SIMD4.prototype.subscript$set = function ($info, newValue, index) {
        this[index] = newValue;
    };
    /*Swift.(file).SIMD4.init(_:Scalar,_:Scalar,_:Scalar,_:Scalar)*/
    /*Swift.(file).SIMD4.init(_:Scalar,_:Scalar,_:Scalar,_:Scalar)*/
    SIMD4.prototype.init = function ($info, v0, v1, v2, v3) {
    };
    /*Swift.(file).SIMD4.init(x:Scalar,y:Scalar,z:Scalar,w:Scalar)*/
    /*Swift.(file).SIMD4.init(x:Scalar,y:Scalar,z:Scalar,w:Scalar)*/
    SIMD4.prototype.initXYZW = function ($info, x, y, z, w) {
    };
    /*Swift.(file).SIMD4.x*/ /*
    x$get() {
    return this.x
    }
    get x() { return this.x$get() }*/ ;
    /*Swift.(file).SIMD4.y*/ /*
    y$get() {
    return this.y
    }
    get y() { return this.y$get() }*/ ;
    /*Swift.(file).SIMD4.z*/ /*
    z$get() {
    return this.z
    }
    get z() { return this.z$get() }*/ ;
    /*Swift.(file).SIMD4.w*/ /*
    w$get() {
    return this.w
    }
    get w() { return this.w$get() }*/ ;
    /*Swift.(file).SIMD4.init(lowHalf:SIMD2<Scalar>,highHalf:SIMD2<Scalar>)*/
    /*Swift.(file).SIMD4.init(lowHalf:SIMD2<Scalar>,highHalf:SIMD2<Scalar>)*/
    SIMD4.prototype.initLowHalfSIMD2HighHalfSIMD2 = function ($info, lowHalf, highHalf) {
    };
    /*Swift.(file).SIMD4.lowHalf*/ /*
    lowHalf$get() {
    return this.lowHalf
    }
    get lowHalf() { return this.lowHalf$get() }*/ ;
    /*Swift.(file).SIMD4.highHalf*/ /*
    highHalf$get() {
    return this.highHalf
    }
    get highHalf() { return this.highHalf$get() }*/ ;
    /*Swift.(file).SIMD4.evenHalf*/ /*
    evenHalf$get() {
    return this.evenHalf
    }
    get evenHalf() { return this.evenHalf$get() }*/ ;
    /*Swift.(file).SIMD4.oddHalf*/ /*
    oddHalf$get() {
    return this.oddHalf
    }
    get oddHalf() { return this.oddHalf$get() }*/ ;
    /*Swift.(file).SIMD4.hashValue*/ /*
    hashValue$get() {
    return this.hashValue
    }
    get hashValue() { return this.hashValue$get() }*/ ;
    /*Swift.(file).SIMD4.init(truncatingIfNeeded:SIMD4<Other>)*/
    /*Swift.(file).SIMD4.init(truncatingIfNeeded:SIMD4<Other>)*/
    SIMD4.prototype.initTruncatingIfNeededSIMD4 = function ($info, other) {
        return other;
    };
    /*Swift.(file).SIMD4.init(clamping:SIMD4<Other>)*/
    /*Swift.(file).SIMD4.init(clamping:SIMD4<Other>)*/
    SIMD4.prototype.initClampingSIMD4 = function ($info, other) {
        return other;
    };
    /*Swift.(file).SIMD4.init(_:SIMD4<Other>,rounding:FloatingPointRoundingRule)*/
    /*Swift.(file).SIMD4.init(_:SIMD4<Other>,rounding:FloatingPointRoundingRule)*/
    SIMD4.prototype.initSIMD4RoundingFloatingPointRoundingRule = function ($info, other, rule) {
    };
    /*Swift.(file).SIMD4.debugDescription*/ /*
    debugDescription$get() {
    return this.debugDescription
    }
    get debugDescription() { return this.debugDescription$get() }*/ ;
    /*Swift.(file).SIMD4.init(_:SIMD4<Other>)*/
    /*Swift.(file).SIMD4.init(_:SIMD4<Other>)*/
    SIMD4.prototype.initSIMD4 = function ($info, other) {
        return other;
    };
    /*Swift.(file).SIMD4.init(_:SIMD4<Other>)*/
    /*Swift.(file).SIMD4.init(_:SIMD4<Other>)*/
    SIMD4.prototype.initSIMD4 = function ($info, other) {
        return other;
    };
    SIMD4.$struct = true;
    SIMD4.$infoAddress = '0x7fb8512efe10';
    return SIMD4;
}());
if (typeof SIMD$implementation != 'undefined')
    _mixin(SIMD4, SIMD$implementation, false);
if (typeof CustomDebugStringConvertible$implementation != 'undefined')
    _mixin(SIMD4, CustomDebugStringConvertible$implementation, false);
var SIMD8 = /** @class */ (function () {
    function SIMD8() {
    }
    /*Swift.(file).SIMD8.init()*/
    /*Swift.(file).SIMDStorage.init()*/
    SIMD8.prototype.init = function ($info) {
    };
    /*Swift.(file).SIMD8.subscript(_:Int)*/
    /*Swift.(file).SIMDStorage.subscript(_:Int)*/
    SIMD8.prototype.subscript$get = function ($info, index) {
        return this[index];
    }; /*Swift.(file).SIMD8.subscript(_:Int)*/
    /*Swift.(file).SIMDStorage.subscript(_:Int)*/
    SIMD8.prototype.subscript$set = function ($info, newValue, index) {
        this[index] = newValue;
    };
    /*Swift.(file).SIMD8.init(_:Scalar,_:Scalar,_:Scalar,_:Scalar,_:Scalar,_:Scalar,_:Scalar,_:Scalar)*/
    /*Swift.(file).SIMD8.init(_:Scalar,_:Scalar,_:Scalar,_:Scalar,_:Scalar,_:Scalar,_:Scalar,_:Scalar)*/
    SIMD8.prototype.init = function ($info, v0, v1, v2, v3, v4, v5, v6, v7) {
    };
    /*Swift.(file).SIMD8.init(lowHalf:SIMD4<Scalar>,highHalf:SIMD4<Scalar>)*/
    /*Swift.(file).SIMD8.init(lowHalf:SIMD4<Scalar>,highHalf:SIMD4<Scalar>)*/
    SIMD8.prototype.initLowHalfSIMD4HighHalfSIMD4 = function ($info, lowHalf, highHalf) {
    };
    /*Swift.(file).SIMD8.lowHalf*/ /*
    lowHalf$get() {
    return this.lowHalf
    }
    get lowHalf() { return this.lowHalf$get() }*/ ;
    /*Swift.(file).SIMD8.highHalf*/ /*
    highHalf$get() {
    return this.highHalf
    }
    get highHalf() { return this.highHalf$get() }*/ ;
    /*Swift.(file).SIMD8.evenHalf*/ /*
    evenHalf$get() {
    return this.evenHalf
    }
    get evenHalf() { return this.evenHalf$get() }*/ ;
    /*Swift.(file).SIMD8.oddHalf*/ /*
    oddHalf$get() {
    return this.oddHalf
    }
    get oddHalf() { return this.oddHalf$get() }*/ ;
    /*Swift.(file).SIMD8.hashValue*/ /*
    hashValue$get() {
    return this.hashValue
    }
    get hashValue() { return this.hashValue$get() }*/ ;
    /*Swift.(file).SIMD8.init(truncatingIfNeeded:SIMD8<Other>)*/
    /*Swift.(file).SIMD8.init(truncatingIfNeeded:SIMD8<Other>)*/
    SIMD8.prototype.initTruncatingIfNeededSIMD8 = function ($info, other) {
        return other;
    };
    /*Swift.(file).SIMD8.init(clamping:SIMD8<Other>)*/
    /*Swift.(file).SIMD8.init(clamping:SIMD8<Other>)*/
    SIMD8.prototype.initClampingSIMD8 = function ($info, other) {
        return other;
    };
    /*Swift.(file).SIMD8.init(_:SIMD8<Other>,rounding:FloatingPointRoundingRule)*/
    /*Swift.(file).SIMD8.init(_:SIMD8<Other>,rounding:FloatingPointRoundingRule)*/
    SIMD8.prototype.initSIMD8RoundingFloatingPointRoundingRule = function ($info, other, rule) {
    };
    /*Swift.(file).SIMD8.debugDescription*/ /*
    debugDescription$get() {
    return this.debugDescription
    }
    get debugDescription() { return this.debugDescription$get() }*/ ;
    /*Swift.(file).SIMD8.init(_:SIMD8<Other>)*/
    /*Swift.(file).SIMD8.init(_:SIMD8<Other>)*/
    SIMD8.prototype.initSIMD8 = function ($info, other) {
        return other;
    };
    /*Swift.(file).SIMD8.init(_:SIMD8<Other>)*/
    /*Swift.(file).SIMD8.init(_:SIMD8<Other>)*/
    SIMD8.prototype.initSIMD8 = function ($info, other) {
        return other;
    };
    SIMD8.$struct = true;
    SIMD8.$infoAddress = '0x7fb8512f0658';
    return SIMD8;
}());
if (typeof SIMD$implementation != 'undefined')
    _mixin(SIMD8, SIMD$implementation, false);
if (typeof CustomDebugStringConvertible$implementation != 'undefined')
    _mixin(SIMD8, CustomDebugStringConvertible$implementation, false);
var SIMD16 = /** @class */ (function () {
    function SIMD16() {
    }
    /*Swift.(file).SIMD16.init()*/
    /*Swift.(file).SIMDStorage.init()*/
    SIMD16.prototype.init = function ($info) {
    };
    /*Swift.(file).SIMD16.subscript(_:Int)*/
    /*Swift.(file).SIMDStorage.subscript(_:Int)*/
    SIMD16.prototype.subscript$get = function ($info, index) {
        return this[index];
    }; /*Swift.(file).SIMD16.subscript(_:Int)*/
    /*Swift.(file).SIMDStorage.subscript(_:Int)*/
    SIMD16.prototype.subscript$set = function ($info, newValue, index) {
        this[index] = newValue;
    };
    /*Swift.(file).SIMD16.init(_:Scalar,_:Scalar,_:Scalar,_:Scalar,_:Scalar,_:Scalar,_:Scalar,_:Scalar,_:Scalar,_:Scalar,_:Scalar,_:Scalar,_:Scalar,_:Scalar,_:Scalar,_:Scalar)*/
    /*Swift.(file).SIMD16.init(_:Scalar,_:Scalar,_:Scalar,_:Scalar,_:Scalar,_:Scalar,_:Scalar,_:Scalar,_:Scalar,_:Scalar,_:Scalar,_:Scalar,_:Scalar,_:Scalar,_:Scalar,_:Scalar)*/
    SIMD16.prototype.init = function ($info, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9, v10, v11, v12, v13, v14, v15) {
    };
    /*Swift.(file).SIMD16.init(lowHalf:SIMD8<Scalar>,highHalf:SIMD8<Scalar>)*/
    /*Swift.(file).SIMD16.init(lowHalf:SIMD8<Scalar>,highHalf:SIMD8<Scalar>)*/
    SIMD16.prototype.initLowHalfSIMD8HighHalfSIMD8 = function ($info, lowHalf, highHalf) {
    };
    /*Swift.(file).SIMD16.lowHalf*/ /*
    lowHalf$get() {
    return this.lowHalf
    }
    get lowHalf() { return this.lowHalf$get() }*/ ;
    /*Swift.(file).SIMD16.highHalf*/ /*
    highHalf$get() {
    return this.highHalf
    }
    get highHalf() { return this.highHalf$get() }*/ ;
    /*Swift.(file).SIMD16.evenHalf*/ /*
    evenHalf$get() {
    return this.evenHalf
    }
    get evenHalf() { return this.evenHalf$get() }*/ ;
    /*Swift.(file).SIMD16.oddHalf*/ /*
    oddHalf$get() {
    return this.oddHalf
    }
    get oddHalf() { return this.oddHalf$get() }*/ ;
    /*Swift.(file).SIMD16.hashValue*/ /*
    hashValue$get() {
    return this.hashValue
    }
    get hashValue() { return this.hashValue$get() }*/ ;
    /*Swift.(file).SIMD16.init(truncatingIfNeeded:SIMD16<Other>)*/
    /*Swift.(file).SIMD16.init(truncatingIfNeeded:SIMD16<Other>)*/
    SIMD16.prototype.initTruncatingIfNeededSIMD16 = function ($info, other) {
        return other;
    };
    /*Swift.(file).SIMD16.init(clamping:SIMD16<Other>)*/
    /*Swift.(file).SIMD16.init(clamping:SIMD16<Other>)*/
    SIMD16.prototype.initClampingSIMD16 = function ($info, other) {
        return other;
    };
    /*Swift.(file).SIMD16.init(_:SIMD16<Other>,rounding:FloatingPointRoundingRule)*/
    /*Swift.(file).SIMD16.init(_:SIMD16<Other>,rounding:FloatingPointRoundingRule)*/
    SIMD16.prototype.initSIMD16RoundingFloatingPointRoundingRule = function ($info, other, rule) {
    };
    /*Swift.(file).SIMD16.debugDescription*/ /*
    debugDescription$get() {
    return this.debugDescription
    }
    get debugDescription() { return this.debugDescription$get() }*/ ;
    /*Swift.(file).SIMD16.init(_:SIMD16<Other>)*/
    /*Swift.(file).SIMD16.init(_:SIMD16<Other>)*/
    SIMD16.prototype.initSIMD16 = function ($info, other) {
        return other;
    };
    /*Swift.(file).SIMD16.init(_:SIMD16<Other>)*/
    /*Swift.(file).SIMD16.init(_:SIMD16<Other>)*/
    SIMD16.prototype.initSIMD16 = function ($info, other) {
        return other;
    };
    SIMD16.$struct = true;
    SIMD16.$infoAddress = '0x7fb8512f0ea0';
    return SIMD16;
}());
if (typeof SIMD$implementation != 'undefined')
    _mixin(SIMD16, SIMD$implementation, false);
if (typeof CustomDebugStringConvertible$implementation != 'undefined')
    _mixin(SIMD16, CustomDebugStringConvertible$implementation, false);
var SIMD32 = /** @class */ (function () {
    function SIMD32() {
    }
    /*Swift.(file).SIMD32.init()*/
    /*Swift.(file).SIMDStorage.init()*/
    SIMD32.prototype.init = function ($info) {
    };
    /*Swift.(file).SIMD32.subscript(_:Int)*/
    /*Swift.(file).SIMDStorage.subscript(_:Int)*/
    SIMD32.prototype.subscript$get = function ($info, index) {
        return this[index];
    }; /*Swift.(file).SIMD32.subscript(_:Int)*/
    /*Swift.(file).SIMDStorage.subscript(_:Int)*/
    SIMD32.prototype.subscript$set = function ($info, newValue, index) {
        this[index] = newValue;
    };
    /*Swift.(file).SIMD32.init(_:Scalar,_:Scalar,_:Scalar,_:Scalar,_:Scalar,_:Scalar,_:Scalar,_:Scalar,_:Scalar,_:Scalar,_:Scalar,_:Scalar,_:Scalar,_:Scalar,_:Scalar,_:Scalar,_:Scalar,_:Scalar,_:Scalar,_:Scalar,_:Scalar,_:Scalar,_:Scalar,_:Scalar,_:Scalar,_:Scalar,_:Scalar,_:Scalar,_:Scalar,_:Scalar,_:Scalar,_:Scalar)*/
    /*Swift.(file).SIMD32.init(_:Scalar,_:Scalar,_:Scalar,_:Scalar,_:Scalar,_:Scalar,_:Scalar,_:Scalar,_:Scalar,_:Scalar,_:Scalar,_:Scalar,_:Scalar,_:Scalar,_:Scalar,_:Scalar,_:Scalar,_:Scalar,_:Scalar,_:Scalar,_:Scalar,_:Scalar,_:Scalar,_:Scalar,_:Scalar,_:Scalar,_:Scalar,_:Scalar,_:Scalar,_:Scalar,_:Scalar,_:Scalar)*/
    SIMD32.prototype.init = function ($info, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9, v10, v11, v12, v13, v14, v15, v16, v17, v18, v19, v20, v21, v22, v23, v24, v25, v26, v27, v28, v29, v30, v31) {
    };
    /*Swift.(file).SIMD32.init(lowHalf:SIMD16<Scalar>,highHalf:SIMD16<Scalar>)*/
    /*Swift.(file).SIMD32.init(lowHalf:SIMD16<Scalar>,highHalf:SIMD16<Scalar>)*/
    SIMD32.prototype.initLowHalfSIMD16HighHalfSIMD16 = function ($info, lowHalf, highHalf) {
    };
    /*Swift.(file).SIMD32.lowHalf*/ /*
    lowHalf$get() {
    return this.lowHalf
    }
    get lowHalf() { return this.lowHalf$get() }*/ ;
    /*Swift.(file).SIMD32.highHalf*/ /*
    highHalf$get() {
    return this.highHalf
    }
    get highHalf() { return this.highHalf$get() }*/ ;
    /*Swift.(file).SIMD32.evenHalf*/ /*
    evenHalf$get() {
    return this.evenHalf
    }
    get evenHalf() { return this.evenHalf$get() }*/ ;
    /*Swift.(file).SIMD32.oddHalf*/ /*
    oddHalf$get() {
    return this.oddHalf
    }
    get oddHalf() { return this.oddHalf$get() }*/ ;
    /*Swift.(file).SIMD32.hashValue*/ /*
    hashValue$get() {
    return this.hashValue
    }
    get hashValue() { return this.hashValue$get() }*/ ;
    /*Swift.(file).SIMD32.init(truncatingIfNeeded:SIMD32<Other>)*/
    /*Swift.(file).SIMD32.init(truncatingIfNeeded:SIMD32<Other>)*/
    SIMD32.prototype.initTruncatingIfNeededSIMD32 = function ($info, other) {
        return other;
    };
    /*Swift.(file).SIMD32.init(clamping:SIMD32<Other>)*/
    /*Swift.(file).SIMD32.init(clamping:SIMD32<Other>)*/
    SIMD32.prototype.initClampingSIMD32 = function ($info, other) {
        return other;
    };
    /*Swift.(file).SIMD32.init(_:SIMD32<Other>,rounding:FloatingPointRoundingRule)*/
    /*Swift.(file).SIMD32.init(_:SIMD32<Other>,rounding:FloatingPointRoundingRule)*/
    SIMD32.prototype.initSIMD32RoundingFloatingPointRoundingRule = function ($info, other, rule) {
    };
    /*Swift.(file).SIMD32.debugDescription*/ /*
    debugDescription$get() {
    return this.debugDescription
    }
    get debugDescription() { return this.debugDescription$get() }*/ ;
    /*Swift.(file).SIMD32.init(_:SIMD32<Other>)*/
    /*Swift.(file).SIMD32.init(_:SIMD32<Other>)*/
    SIMD32.prototype.initSIMD32 = function ($info, other) {
        return other;
    };
    /*Swift.(file).SIMD32.init(_:SIMD32<Other>)*/
    /*Swift.(file).SIMD32.init(_:SIMD32<Other>)*/
    SIMD32.prototype.initSIMD32 = function ($info, other) {
        return other;
    };
    SIMD32.$struct = true;
    SIMD32.$infoAddress = '0x7fb852a9ff08';
    return SIMD32;
}());
if (typeof SIMD$implementation != 'undefined')
    _mixin(SIMD32, SIMD$implementation, false);
if (typeof CustomDebugStringConvertible$implementation != 'undefined')
    _mixin(SIMD32, CustomDebugStringConvertible$implementation, false);
var SIMD64 = /** @class */ (function () {
    function SIMD64() {
    }
    /*Swift.(file).SIMD64.init()*/
    /*Swift.(file).SIMDStorage.init()*/
    SIMD64.prototype.init = function ($info) {
    };
    /*Swift.(file).SIMD64.subscript(_:Int)*/
    /*Swift.(file).SIMDStorage.subscript(_:Int)*/
    SIMD64.prototype.subscript$get = function ($info, index) {
        return this[index];
    }; /*Swift.(file).SIMD64.subscript(_:Int)*/
    /*Swift.(file).SIMDStorage.subscript(_:Int)*/
    SIMD64.prototype.subscript$set = function ($info, newValue, index) {
        this[index] = newValue;
    };
    /*Swift.(file).SIMD64.init(_:Scalar,_:Scalar,_:Scalar,_:Scalar,_:Scalar,_:Scalar,_:Scalar,_:Scalar,_:Scalar,_:Scalar,_:Scalar,_:Scalar,_:Scalar,_:Scalar,_:Scalar,_:Scalar,_:Scalar,_:Scalar,_:Scalar,_:Scalar,_:Scalar,_:Scalar,_:Scalar,_:Scalar,_:Scalar,_:Scalar,_:Scalar,_:Scalar,_:Scalar,_:Scalar,_:Scalar,_:Scalar,_:Scalar,_:Scalar,_:Scalar,_:Scalar,_:Scalar,_:Scalar,_:Scalar,_:Scalar,_:Scalar,_:Scalar,_:Scalar,_:Scalar,_:Scalar,_:Scalar,_:Scalar,_:Scalar,_:Scalar,_:Scalar,_:Scalar,_:Scalar,_:Scalar,_:Scalar,_:Scalar,_:Scalar,_:Scalar,_:Scalar,_:Scalar,_:Scalar,_:Scalar,_:Scalar,_:Scalar,_:Scalar)*/
    /*Swift.(file).SIMD64.init(_:Scalar,_:Scalar,_:Scalar,_:Scalar,_:Scalar,_:Scalar,_:Scalar,_:Scalar,_:Scalar,_:Scalar,_:Scalar,_:Scalar,_:Scalar,_:Scalar,_:Scalar,_:Scalar,_:Scalar,_:Scalar,_:Scalar,_:Scalar,_:Scalar,_:Scalar,_:Scalar,_:Scalar,_:Scalar,_:Scalar,_:Scalar,_:Scalar,_:Scalar,_:Scalar,_:Scalar,_:Scalar,_:Scalar,_:Scalar,_:Scalar,_:Scalar,_:Scalar,_:Scalar,_:Scalar,_:Scalar,_:Scalar,_:Scalar,_:Scalar,_:Scalar,_:Scalar,_:Scalar,_:Scalar,_:Scalar,_:Scalar,_:Scalar,_:Scalar,_:Scalar,_:Scalar,_:Scalar,_:Scalar,_:Scalar,_:Scalar,_:Scalar,_:Scalar,_:Scalar,_:Scalar,_:Scalar,_:Scalar,_:Scalar)*/
    SIMD64.prototype.init = function ($info, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9, v10, v11, v12, v13, v14, v15, v16, v17, v18, v19, v20, v21, v22, v23, v24, v25, v26, v27, v28, v29, v30, v31, v32, v33, v34, v35, v36, v37, v38, v39, v40, v41, v42, v43, v44, v45, v46, v47, v48, v49, v50, v51, v52, v53, v54, v55, v56, v57, v58, v59, v60, v61, v62, v63) {
    };
    /*Swift.(file).SIMD64.init(lowHalf:SIMD32<Scalar>,highHalf:SIMD32<Scalar>)*/
    /*Swift.(file).SIMD64.init(lowHalf:SIMD32<Scalar>,highHalf:SIMD32<Scalar>)*/
    SIMD64.prototype.initLowHalfSIMD32HighHalfSIMD32 = function ($info, lowHalf, highHalf) {
    };
    /*Swift.(file).SIMD64.lowHalf*/ /*
    lowHalf$get() {
    return this.lowHalf
    }
    get lowHalf() { return this.lowHalf$get() }*/ ;
    /*Swift.(file).SIMD64.highHalf*/ /*
    highHalf$get() {
    return this.highHalf
    }
    get highHalf() { return this.highHalf$get() }*/ ;
    /*Swift.(file).SIMD64.evenHalf*/ /*
    evenHalf$get() {
    return this.evenHalf
    }
    get evenHalf() { return this.evenHalf$get() }*/ ;
    /*Swift.(file).SIMD64.oddHalf*/ /*
    oddHalf$get() {
    return this.oddHalf
    }
    get oddHalf() { return this.oddHalf$get() }*/ ;
    /*Swift.(file).SIMD64.hashValue*/ /*
    hashValue$get() {
    return this.hashValue
    }
    get hashValue() { return this.hashValue$get() }*/ ;
    /*Swift.(file).SIMD64.init(truncatingIfNeeded:SIMD64<Other>)*/
    /*Swift.(file).SIMD64.init(truncatingIfNeeded:SIMD64<Other>)*/
    SIMD64.prototype.initTruncatingIfNeededSIMD64 = function ($info, other) {
        return other;
    };
    /*Swift.(file).SIMD64.init(clamping:SIMD64<Other>)*/
    /*Swift.(file).SIMD64.init(clamping:SIMD64<Other>)*/
    SIMD64.prototype.initClampingSIMD64 = function ($info, other) {
        return other;
    };
    /*Swift.(file).SIMD64.init(_:SIMD64<Other>,rounding:FloatingPointRoundingRule)*/
    /*Swift.(file).SIMD64.init(_:SIMD64<Other>,rounding:FloatingPointRoundingRule)*/
    SIMD64.prototype.initSIMD64RoundingFloatingPointRoundingRule = function ($info, other, rule) {
    };
    /*Swift.(file).SIMD64.debugDescription*/ /*
    debugDescription$get() {
    return this.debugDescription
    }
    get debugDescription() { return this.debugDescription$get() }*/ ;
    /*Swift.(file).SIMD64.init(_:SIMD64<Other>)*/
    /*Swift.(file).SIMD64.init(_:SIMD64<Other>)*/
    SIMD64.prototype.initSIMD64 = function ($info, other) {
        return other;
    };
    /*Swift.(file).SIMD64.init(_:SIMD64<Other>)*/
    /*Swift.(file).SIMD64.init(_:SIMD64<Other>)*/
    SIMD64.prototype.initSIMD64 = function ($info, other) {
        return other;
    };
    SIMD64.$struct = true;
    SIMD64.$infoAddress = '0x7fb852aa0750';
    return SIMD64;
}());
if (typeof SIMD$implementation != 'undefined')
    _mixin(SIMD64, SIMD$implementation, false);
if (typeof CustomDebugStringConvertible$implementation != 'undefined')
    _mixin(SIMD64, CustomDebugStringConvertible$implementation, false);
var SIMD3 = /** @class */ (function () {
    function SIMD3() {
    }
    /*Swift.(file).SIMD3.init()*/
    /*Swift.(file).SIMDStorage.init()*/
    SIMD3.prototype.init = function ($info) {
    };
    /*Swift.(file).SIMD3.subscript(_:Int)*/
    /*Swift.(file).SIMDStorage.subscript(_:Int)*/
    SIMD3.prototype.subscript$get = function ($info, index) {
        return this[index];
    }; /*Swift.(file).SIMD3.subscript(_:Int)*/
    /*Swift.(file).SIMDStorage.subscript(_:Int)*/
    SIMD3.prototype.subscript$set = function ($info, newValue, index) {
        this[index] = newValue;
    };
    /*Swift.(file).SIMD3.init(_:Scalar,_:Scalar,_:Scalar)*/
    /*Swift.(file).SIMD3.init(_:Scalar,_:Scalar,_:Scalar)*/
    SIMD3.prototype.init = function ($info, v0, v1, v2) {
    };
    /*Swift.(file).SIMD3.init(x:Scalar,y:Scalar,z:Scalar)*/
    /*Swift.(file).SIMD3.init(x:Scalar,y:Scalar,z:Scalar)*/
    SIMD3.prototype.initXYZ = function ($info, x, y, z) {
    };
    /*Swift.(file).SIMD3.x*/ /*
    x$get() {
    return this.x
    }
    get x() { return this.x$get() }*/ ;
    /*Swift.(file).SIMD3.y*/ /*
    y$get() {
    return this.y
    }
    get y() { return this.y$get() }*/ ;
    /*Swift.(file).SIMD3.z*/ /*
    z$get() {
    return this.z
    }
    get z() { return this.z$get() }*/ ;
    /*Swift.(file).SIMD3.hashValue*/ /*
    hashValue$get() {
    return this.hashValue
    }
    get hashValue() { return this.hashValue$get() }*/ ;
    /*Swift.(file).SIMD3.init(truncatingIfNeeded:SIMD3<Other>)*/
    /*Swift.(file).SIMD3.init(truncatingIfNeeded:SIMD3<Other>)*/
    SIMD3.prototype.initTruncatingIfNeededSIMD3 = function ($info, other) {
        return other;
    };
    /*Swift.(file).SIMD3.init(clamping:SIMD3<Other>)*/
    /*Swift.(file).SIMD3.init(clamping:SIMD3<Other>)*/
    SIMD3.prototype.initClampingSIMD3 = function ($info, other) {
        return other;
    };
    /*Swift.(file).SIMD3.init(_:SIMD3<Other>,rounding:FloatingPointRoundingRule)*/
    /*Swift.(file).SIMD3.init(_:SIMD3<Other>,rounding:FloatingPointRoundingRule)*/
    SIMD3.prototype.initSIMD3RoundingFloatingPointRoundingRule = function ($info, other, rule) {
    };
    /*Swift.(file).SIMD3.debugDescription*/ /*
    debugDescription$get() {
    return this.debugDescription
    }
    get debugDescription() { return this.debugDescription$get() }*/ ;
    /*Swift.(file).SIMD3.init(_:SIMD3<Other>)*/
    /*Swift.(file).SIMD3.init(_:SIMD3<Other>)*/
    SIMD3.prototype.initSIMD3 = function ($info, other) {
        return other;
    };
    /*Swift.(file).SIMD3.init(_:SIMD3<Other>)*/
    /*Swift.(file).SIMD3.init(_:SIMD3<Other>)*/
    SIMD3.prototype.initSIMD3 = function ($info, other) {
        return other;
    };
    SIMD3.$struct = true;
    SIMD3.$infoAddress = '0x7fb852aa0f98';
    return SIMD3;
}());
if (typeof SIMD$implementation != 'undefined')
    _mixin(SIMD3, SIMD$implementation, false);
if (typeof CustomDebugStringConvertible$implementation != 'undefined')
    _mixin(SIMD3, CustomDebugStringConvertible$implementation, false);
var UnfoldSequence = /** @class */ (function () {
    function UnfoldSequence() {
    }
    /*Swift.(file).UnfoldSequence.next()*/
    /*Swift.(file).IteratorProtocol.next()*/
    UnfoldSequence.prototype.next = function ($info) {
    };
    /*Swift.(file).UnfoldSequence.init(_state:State,_next:(inout State) -> Element?)*/
    /*Swift.(file).UnfoldSequence.init(_state:State,_next:(inout State) -> Element?)*/
    UnfoldSequence.prototype.init_state_nextfunction_type = function ($info, _state, _next) {
    };
    UnfoldSequence.$struct = true;
    UnfoldSequence.$infoAddress = '0x7fb852ab55d0';
    return UnfoldSequence;
}());
if (typeof Sequence$implementation != 'undefined')
    _mixin(UnfoldSequence, Sequence$implementation, false);
if (typeof IteratorProtocol$implementation != 'undefined')
    _mixin(UnfoldSequence, IteratorProtocol$implementation, false);
var CVarArg$implementation = /** @class */ (function () {
    function CVarArg$implementation() {
    }
    return CVarArg$implementation;
}());
var _CVarArgAligned$implementation = /** @class */ (function () {
    function _CVarArgAligned$implementation() {
    }
    return _CVarArgAligned$implementation;
}());
if (typeof CVarArg$implementation != 'undefined')
    _mixin(_CVarArgAligned$implementation, CVarArg$implementation, false);
var __VaListBuilder = /** @class */ (function () {
    function __VaListBuilder() {
    }
    /*Swift.(file).__VaListBuilder.fpRegistersUsed*/ /*
    fpRegistersUsed$get() {
    return this.fpRegistersUsed
    }
    get fpRegistersUsed() { return this.fpRegistersUsed$get() }*/ ;
    /*Swift.(file).__VaListBuilder.header*/ /*
    header$get() {
    return this.header
    }
    get header() { return this.header$get() }*/ ;
    /*Swift.(file).__VaListBuilder.storage*/ /*
    storage$get() {
    return this.storage
    }
    get storage() { return this.storage$get() }*/ ;
    /*Swift.(file).__VaListBuilder.init()*/
    /*Swift.(file).__VaListBuilder.init()*/
    __VaListBuilder.prototype.init = function ($info) {
    };
    /*Swift.(file).__VaListBuilder.append(_:CVarArg)*/
    /*Swift.(file).__VaListBuilder.append(_:CVarArg)*/
    __VaListBuilder.prototype.append = function ($info, arg) {
    };
    /*Swift.(file).__VaListBuilder.va_list()*/
    /*Swift.(file).__VaListBuilder.va_list()*/
    __VaListBuilder.prototype.va_list = function ($info) {
    };
    var _p;
    __VaListBuilder.$infoAddress = '0x7fb852ab7860';
    __VaListBuilder.Header = (_p = /** @class */ (function () {
            function class_14() {
            }
            /*Swift.(file).__VaListBuilder.Header.init()*/
            /*Swift.(file).__VaListBuilder.Header.init()*/
            class_14.prototype.init = function ($info) {
            };
            /*Swift.(file).__VaListBuilder.Header.gp_offset*/ /*
            gp_offset$get() {
            return this.gp_offset
            }
            get gp_offset() { return this.gp_offset$get() }*/ ;
            /*Swift.(file).__VaListBuilder.Header.fp_offset*/ /*
            fp_offset$get() {
            return this.fp_offset
            }
            get fp_offset() { return this.fp_offset$get() }*/ ;
            /*Swift.(file).__VaListBuilder.Header.overflow_arg_area*/ /*
            overflow_arg_area$get() {
            return this.overflow_arg_area
            }
            get overflow_arg_area() { return this.overflow_arg_area$get() }*/ ;
            /*Swift.(file).__VaListBuilder.Header.reg_save_area*/ /*
            reg_save_area$get() {
            return this.reg_save_area
            }
            get reg_save_area() { return this.reg_save_area$get() }*/ ;
            return class_14;
        }()),
        _p.$struct = true,
        _p.$infoAddress = '0x7fb852fc6a78',
        _p);
    return __VaListBuilder;
}());
var Zip2Sequence = /** @class */ (function () {
    function Zip2Sequence() {
    }
    /*Swift.(file).Zip2Sequence.init(_:Sequence1,_:Sequence2)*/
    /*Swift.(file).Zip2Sequence.init(_:Sequence1,_:Sequence2)*/
    Zip2Sequence.prototype.init = function ($info, sequence1, sequence2) {
    };
    /*Swift.(file).Zip2Sequence.makeIterator()*/
    /*Swift.(file).Sequence.makeIterator()*/
    Zip2Sequence.prototype.makeIterator = function ($info) {
        var _this = this;
        return new SwiftIterator(function (current) { return _this.contains(null, current + _this.lowerBound) ? current + _this.lowerBound : null; });
    };
    var _q;
    Zip2Sequence.$struct = true;
    Zip2Sequence.$infoAddress = '0x7fb8512d3c80';
    Zip2Sequence.Iterator = (_q = /** @class */ (function () {
            function class_15() {
            }
            /*Swift.(file).Zip2Sequence.Iterator.init(_:Sequence1.Iterator,_:Sequence2.Iterator)*/
            /*Swift.(file).Zip2Sequence.Iterator.init(_:Sequence1.Iterator,_:Sequence2.Iterator)*/
            class_15.prototype.init = function ($info, iterator1, iterator2) {
            };
            /*Swift.(file).Iterator.next()*/
            /*Swift.(file).IteratorProtocol.next()*/
            class_15.prototype.next = function ($info) {
            };
            return class_15;
        }()),
        _q.$struct = true,
        _q.$infoAddress = '0x7fb8512d40b0',
        _q);
    return Zip2Sequence;
}());
if (typeof IteratorProtocol$implementation != 'undefined')
    _mixin(Zip2Sequence.Iterator, IteratorProtocol$implementation, false);
if (typeof Sequence$implementation != 'undefined')
    _mixin(Zip2Sequence, Sequence$implementation, false);
var EnumeratedSequence = /** @class */ (function () {
    function EnumeratedSequence() {
    }
    /*Swift.(file).EnumeratedSequence.init(_base:Base)*/
    /*Swift.(file).EnumeratedSequence.init(_base:Base)*/
    EnumeratedSequence.prototype.init_base = function ($info, _base) {
        return _base;
    };
    /*Swift.(file).EnumeratedSequence.makeIterator()*/
    /*Swift.(file).Sequence.makeIterator()*/
    EnumeratedSequence.prototype.makeIterator = function ($info) {
        var _this = this;
        return new SwiftIterator(function (current) { return _this.contains(null, current + _this.lowerBound) ? current + _this.lowerBound : null; });
    };
    var _r;
    EnumeratedSequence.$struct = true;
    EnumeratedSequence.$infoAddress = '0x7fb8511e6ed0';
    EnumeratedSequence.Iterator = (_r = /** @class */ (function () {
            function class_16() {
            }
            /*Swift.(file).EnumeratedSequence.Iterator.init(_base:Base.Iterator)*/
            /*Swift.(file).EnumeratedSequence.Iterator.init(_base:Base.Iterator)*/
            class_16.prototype.init_base = function ($info, _base) {
                return _base;
            };
            /*Swift.(file).Iterator.next()*/
            /*Swift.(file).IteratorProtocol.next()*/
            class_16.prototype.next = function ($info) {
            };
            return class_16;
        }()),
        _r.$struct = true,
        _r.$infoAddress = '0x7fb8511e7248',
        _r);
    return EnumeratedSequence;
}());
if (typeof IteratorProtocol$implementation != 'undefined')
    _mixin(EnumeratedSequence.Iterator, IteratorProtocol$implementation, false);
if (typeof Sequence$implementation != 'undefined')
    _mixin(EnumeratedSequence.Iterator, Sequence$implementation, false);
if (typeof Sequence$implementation != 'undefined')
    _mixin(EnumeratedSequence, Sequence$implementation, false);
var _ArrayAnyHashableProtocol$implementation = /** @class */ (function () {
    function _ArrayAnyHashableProtocol$implementation() {
    }
    return _ArrayAnyHashableProtocol$implementation;
}());
if (typeof _AnyHashableBox$implementation != 'undefined')
    _mixin(_ArrayAnyHashableProtocol$implementation, _AnyHashableBox$implementation, false);
var _ArrayAnyHashableBox = /** @class */ (function () {
    function _ArrayAnyHashableBox() {
    }
    /*Swift.(file)._ArrayAnyHashableBox.init(_:[Element])*/
    /*Swift.(file)._ArrayAnyHashableBox.init(_:[Element])*/
    _ArrayAnyHashableBox.prototype.initArray = function ($info, value) {
        return value;
    };
    /*Swift.(file)._ArrayAnyHashableBox.count*/ /*
    count$get() {
    return this.count
    }
    get count() { return this.count$get() }*/ ;
    /*Swift.(file)._ArrayAnyHashableBox.subscript(_:Int)*/
    /*Swift.(file)._ArrayAnyHashableProtocol.subscript(_:Int)*/
    _ArrayAnyHashableBox.prototype.subscript$get = function ($info, index) {
        return this[index];
    };
    _ArrayAnyHashableBox.$struct = true;
    _ArrayAnyHashableBox.$infoAddress = '0x7fb8511eaa40';
    return _ArrayAnyHashableBox;
}());
if (typeof _ArrayAnyHashableProtocol$implementation != 'undefined')
    _mixin(_ArrayAnyHashableBox, _ArrayAnyHashableProtocol$implementation, false);
var _UnsafeBitset = /** @class */ (function () {
    function _UnsafeBitset() {
    }
    /*Swift.(file)._UnsafeBitset.wordCount*/ /*
    readonly wordCount$get() {
    return this.wordCount
    }
    readonly get wordCount() { return this.wordCount$get() }*/ ;
    /*Swift.(file)._UnsafeBitset.init(words:UnsafeMutablePointer<_UnsafeBitset.Word>,wordCount:Int)*/
    /*Swift.(file)._UnsafeBitset.init(words:UnsafeMutablePointer<_UnsafeBitset.Word>,wordCount:Int)*/
    _UnsafeBitset.prototype.initWordsUnsafeMutablePointerWordCountInt = function ($info, words, wordCount) {
    };
    /*Swift.(file)._UnsafeBitset.word(for:Int)*/
    /*Swift.(file)._UnsafeBitset.word(for:Int)*/
    _UnsafeBitset.wordFor = function ($info, _element) {
    };
    /*Swift.(file)._UnsafeBitset.bit(for:Int)*/
    /*Swift.(file)._UnsafeBitset.bit(for:Int)*/
    _UnsafeBitset.bitFor = function ($info, _element) {
    };
    /*Swift.(file)._UnsafeBitset.split(_:Int)*/
    /*Swift.(file)._UnsafeBitset.split(_:Int)*/
    _UnsafeBitset.split = function ($info, _element) {
    };
    /*Swift.(file)._UnsafeBitset.join(word:Int,bit:Int)*/
    /*Swift.(file)._UnsafeBitset.join(word:Int,bit:Int)*/
    _UnsafeBitset.joinWordBit = function ($info, word, bit) {
    };
    /*Swift.(file)._UnsafeBitset.wordCount(forCapacity:Int)*/
    /*Swift.(file)._UnsafeBitset.wordCount(forCapacity:Int)*/
    _UnsafeBitset.wordCountForCapacity = function ($info, capacity) {
    };
    /*Swift.(file)._UnsafeBitset.capacity*/ /*
    capacity$get() {
    return this.capacity
    }
    get capacity() { return this.capacity$get() }*/ ;
    /*Swift.(file)._UnsafeBitset.isValid(_:Int)*/
    /*Swift.(file)._UnsafeBitset.isValid(_:Int)*/
    _UnsafeBitset.prototype.isValid = function ($info, _element) {
    };
    /*Swift.(file)._UnsafeBitset.uncheckedContains(_:Int)*/
    /*Swift.(file)._UnsafeBitset.uncheckedContains(_:Int)*/
    _UnsafeBitset.prototype.uncheckedContains = function ($info, _element) {
    };
    /*Swift.(file)._UnsafeBitset.uncheckedInsert(_:Int)*/
    /*Swift.(file)._UnsafeBitset.uncheckedInsert(_:Int)*/
    _UnsafeBitset.prototype.uncheckedInsert = function ($info, _element) {
    };
    /*Swift.(file)._UnsafeBitset.uncheckedRemove(_:Int)*/
    /*Swift.(file)._UnsafeBitset.uncheckedRemove(_:Int)*/
    _UnsafeBitset.prototype.uncheckedRemove = function ($info, _element) {
    };
    /*Swift.(file)._UnsafeBitset.clear()*/
    /*Swift.(file)._UnsafeBitset.clear()*/
    _UnsafeBitset.prototype.clear = function ($info) {
    };
    /*Swift.(file)._UnsafeBitset.count*/ /*
    count$get() {
    return this.count
    }
    get count() { return this.count$get() }*/ ;
    /*Swift.(file)._UnsafeBitset.underestimatedCount*/ /*
    underestimatedCount$get() {
    return this.underestimatedCount
    }
    get underestimatedCount() { return this.underestimatedCount$get() }*/ ;
    /*Swift.(file)._UnsafeBitset.makeIterator()*/
    /*Swift.(file).Sequence.makeIterator()*/
    _UnsafeBitset.prototype.makeIterator = function ($info) {
        var _this = this;
        return new SwiftIterator(function (current) { return _this.contains(null, current + _this.lowerBound) ? current + _this.lowerBound : null; });
    };
    var _s, _t;
    _UnsafeBitset.$struct = true;
    _UnsafeBitset.$infoAddress = '0x7fb8512257b0';
    _UnsafeBitset.Iterator = (_s = /** @class */ (function () {
            function class_17() {
            }
            /*Swift.(file)._UnsafeBitset.Iterator.index*/ /*
            index$get() {
            return this.index
            }
            get index() { return this.index$get() }*/ ;
            /*Swift.(file)._UnsafeBitset.Iterator.word*/ /*
            word$get() {
            return this.word
            }
            get word() { return this.word$get() }*/ ;
            /*Swift.(file)._UnsafeBitset.Iterator.init(_:_UnsafeBitset)*/
            /*Swift.(file)._UnsafeBitset.Iterator.init(_:_UnsafeBitset)*/
            class_17.prototype.init_UnsafeBitset = function ($info, bitset) {
                return bitset;
            };
            /*Swift.(file)._UnsafeBitset.Iterator.next()*/
            /*Swift.(file).IteratorProtocol.next()*/
            class_17.prototype.next = function ($info) {
            };
            return class_17;
        }()),
        _s.$struct = true,
        _s.$infoAddress = '0x7fb8552bc200',
        _s);
    _UnsafeBitset.Word = (_t = /** @class */ (function () {
            function class_18() {
            }
            /*Swift.(file)._UnsafeBitset.Word.init(_:UInt)*/
            /*Swift.(file)._UnsafeBitset.Word.init(_:UInt)*/
            class_18.prototype.initUInt = function ($info, value) {
                return value;
            };
            /*Swift.(file).Word.capacity*/ /*
            static capacity$get() {
            return this.capacity
            }
            static get capacity() { return this.capacity$get() }*/ ;
            /*Swift.(file).Word.uncheckedContains(_:Int)*/
            /*Swift.(file).Word.uncheckedContains(_:Int)*/
            class_18.prototype.uncheckedContains = function ($info, bit) {
            };
            /*Swift.(file).Word.uncheckedInsert(_:Int)*/
            /*Swift.(file).Word.uncheckedInsert(_:Int)*/
            class_18.prototype.uncheckedInsert = function ($info, bit) {
            };
            /*Swift.(file).Word.uncheckedRemove(_:Int)*/
            /*Swift.(file).Word.uncheckedRemove(_:Int)*/
            class_18.prototype.uncheckedRemove = function ($info, bit) {
            };
            /*Swift.(file).Word.minimum*/ /*
            minimum$get() {
            return this.minimum
            }
            get minimum() { return this.minimum$get() }*/ ;
            /*Swift.(file).Word.maximum*/ /*
            maximum$get() {
            return this.maximum
            }
            get maximum() { return this.maximum$get() }*/ ;
            /*Swift.(file).Word.complement*/ /*
            complement$get() {
            return this.complement
            }
            get complement() { return this.complement$get() }*/ ;
            /*Swift.(file).Word.subtracting(elementsBelow:Int)*/
            /*Swift.(file).Word.subtracting(elementsBelow:Int)*/
            class_18.prototype.subtractingElementsBelow = function ($info, bit) {
            };
            /*Swift.(file).Word.intersecting(elementsBelow:Int)*/
            /*Swift.(file).Word.intersecting(elementsBelow:Int)*/
            class_18.prototype.intersectingElementsBelow = function ($info, bit) {
            };
            /*Swift.(file).Word.intersecting(elementsAbove:Int)*/
            /*Swift.(file).Word.intersecting(elementsAbove:Int)*/
            class_18.prototype.intersectingElementsAbove = function ($info, bit) {
            };
            /*Swift.(file).Word.empty*/ /*
            static empty$get() {
            return this.empty
            }
            static get empty() { return this.empty$get() }*/ ;
            /*Swift.(file).Word.allBits*/ /*
            static allBits$get() {
            return this.allBits
            }
            static get allBits() { return this.allBits$get() }*/ ;
            /*Swift.(file).Word.count*/ /*
            count$get() {
            return this.count
            }
            get count() { return this.count$get() }*/ ;
            /*Swift.(file).Word.underestimatedCount*/ /*
            underestimatedCount$get() {
            return this.underestimatedCount
            }
            get underestimatedCount() { return this.underestimatedCount$get() }*/ ;
            /*Swift.(file).Word.isEmpty*/ /*
            isEmpty$get() {
            return this.isEmpty
            }
            get isEmpty() { return this.isEmpty$get() }*/ ;
            /*Swift.(file).Word.next()*/
            /*Swift.(file).IteratorProtocol.next()*/
            class_18.prototype.next = function ($info) {
            };
            return class_18;
        }()),
        _t.$struct = true,
        _t.$infoAddress = '0x7fb851225c78',
        _t);
    return _UnsafeBitset;
}());
if (typeof IteratorProtocol$implementation != 'undefined')
    _mixin(_UnsafeBitset.Iterator, IteratorProtocol$implementation, false);
if (typeof Sequence$implementation != 'undefined')
    _mixin(_UnsafeBitset.Word, Sequence$implementation, false);
if (typeof IteratorProtocol$implementation != 'undefined')
    _mixin(_UnsafeBitset.Word, IteratorProtocol$implementation, false);
if (typeof Sequence$implementation != 'undefined')
    _mixin(_UnsafeBitset, Sequence$implementation, false);
var MIO_Mixin_Bool = /** @class */ (function () {
    function MIO_Mixin_Bool() {
    }
    /*Swift.(file).Bool.init()*/
    /*Swift.(file).Bool.init()*/
    MIO_Mixin_Bool.prototype.init = function ($info) {
    };
    /*Swift.(file).Bool.init(_:Int1)*/
    /*Swift.(file).Bool.init(_:Int1)*/
    MIO_Mixin_Bool.prototype.initInt1 = function ($info, v) {
        return v;
    };
    /*Swift.(file).Bool.init(_:Bool)*/
    /*Swift.(file).Bool.init(_:Bool)*/
    MIO_Mixin_Bool.prototype.initBool = function ($info, value) {
        return value;
    };
    /*Swift.(file).Bool.random(using:T)*/
    /*Swift.(file).Bool.random(using:T)*/
    MIO_Mixin_Bool.randomUsing = function ($info, generator$inout) {
    };
    /*Swift.(file).Bool.random()*/
    /*Swift.(file).Bool.random()*/
    MIO_Mixin_Bool.random = function ($info) {
    };
    /*Swift.(file).Bool.==infix(_:Bool,_:Bool)*/
    /*Swift.(file).Equatable.==infix(_:Self,_:Self)*/
    MIO_Mixin_Bool.infix_61_61 = function ($info, lhs, rhs) {
        return lhs == rhs;
    };
    /*Swift.(file).Bool.init(_builtinBooleanLiteral:Int1)*/
    /*Swift.(file)._ExpressibleByBuiltinBooleanLiteral.init(_builtinBooleanLiteral:Int1)*/
    MIO_Mixin_Bool.prototype.init_builtinBooleanLiteralInt1 = function ($info, value) {
        return value;
    };
    /*Swift.(file).Bool.init(booleanLiteral:Bool)*/
    /*Swift.(file).ExpressibleByBooleanLiteral.init(booleanLiteral:Self.BooleanLiteralType)*/
    MIO_Mixin_Bool.prototype.initBooleanLiteral = function ($info, value) {
        return value;
    };
    /*Swift.(file).Bool.description*/ /*
    description$get() {
    return this.description
    }
    get description() { return this.description$get() }*/ ;
    /*Swift.(file).Bool.hash(into:Hasher)*/
    /*Swift.(file).Hashable.hash(into:Hasher)*/
    MIO_Mixin_Bool.prototype.hashInto = function ($info, hasher$inout) {
    };
    /*Swift.(file).Bool.hashValue*/ /*
    hashValue$get() {
    return this.hashValue
    }
    get hashValue() { return this.hashValue$get() }*/ ;
    /*Swift.(file).Bool.init(_:String)*/
    /*Swift.(file).LosslessStringConvertible.init(_:String)*/
    MIO_Mixin_Bool.prototype.initString = function ($info, description) {
        return description;
    };
    /*Swift.(file).Bool.!prefix(_:Bool)*/
    /*Swift.(file).Bool.!prefix(_:Bool)*/
    MIO_Mixin_Bool.prefix_33 = function ($info, a) {
        return !a;
    };
    /*Swift.(file).Bool.&&infix(_:Bool,_:() throws -> Bool)*/
    /*Swift.(file).Bool.&&infix(_:Bool,_:() throws -> Bool)*/
    MIO_Mixin_Bool.infix_38_38 = function ($info, lhs, rhs) {
        return lhs && rhs();
    };
    /*Swift.(file).Bool.||infix(_:Bool,_:() throws -> Bool)*/
    /*Swift.(file).Bool.||infix(_:Bool,_:() throws -> Bool)*/
    MIO_Mixin_Bool.infix_124_124 = function ($info, lhs, rhs) {
        return lhs || rhs();
    };
    /*Swift.(file).Bool.toggle()*/
    /*Swift.(file).Bool.toggle()*/
    MIO_Mixin_Bool.prototype.toggle = function ($info) {
    };
    /*Swift.(file).Bool.init(from:Decoder)*/
    /*Swift.(file).Decodable.init(from:Decoder)*/
    MIO_Mixin_Bool.prototype.initFromDecoder = function ($info, decoder) {
        return decoder;
    };
    /*Swift.(file).Bool.encode(to:Encoder)*/
    /*Swift.(file).Encodable.encode(to:Encoder)*/
    MIO_Mixin_Bool.prototype.encodeTo = function ($info, encoder) {
    };
    /*Swift.(file).Bool.customMirror*/ /*
    customMirror$get() {
    return this.customMirror
    }
    get customMirror() { return this.customMirror$get() }*/ ;
    /*Swift.(file).Bool.customPlaygroundQuickLook*/ /*
    customPlaygroundQuickLook$get() {
    return this.customPlaygroundQuickLook
    }
    get customPlaygroundQuickLook() { return this.customPlaygroundQuickLook$get() }*/ ;
    MIO_Mixin_Bool.$struct = true;
    MIO_Mixin_Bool.$mixin = true;
    MIO_Mixin_Bool.$infoAddress = '0x7fb8518078c0';
    return MIO_Mixin_Bool;
}());
if (typeof Equatable$implementation != 'undefined')
    _mixin(MIO_Mixin_Bool, Equatable$implementation, false);
if (typeof _ExpressibleByBuiltinBooleanLiteral$implementation != 'undefined')
    _mixin(MIO_Mixin_Bool, _ExpressibleByBuiltinBooleanLiteral$implementation, false);
if (typeof ExpressibleByBooleanLiteral$implementation != 'undefined')
    _mixin(MIO_Mixin_Bool, ExpressibleByBooleanLiteral$implementation, false);
if (typeof CustomStringConvertible$implementation != 'undefined')
    _mixin(MIO_Mixin_Bool, CustomStringConvertible$implementation, false);
if (typeof Hashable$implementation != 'undefined')
    _mixin(MIO_Mixin_Bool, Hashable$implementation, false);
if (typeof LosslessStringConvertible$implementation != 'undefined')
    _mixin(MIO_Mixin_Bool, LosslessStringConvertible$implementation, false);
if (typeof Codable$implementation != 'undefined')
    _mixin(MIO_Mixin_Bool, Codable$implementation, false);
if (typeof CustomReflectable$implementation != 'undefined')
    _mixin(MIO_Mixin_Bool, CustomReflectable$implementation, false);
if (typeof _CustomPlaygroundQuickLookable$implementation != 'undefined')
    _mixin(MIO_Mixin_Bool, _CustomPlaygroundQuickLookable$implementation, false);
if (typeof CVarArg$implementation != 'undefined')
    _mixin(MIO_Mixin_Bool, CVarArg$implementation, false);
_mixin(Boolean, MIO_Mixin_Bool, true);
var Bool = /** @class */ (function () {
    function Bool() {
    }
    return Bool;
}());
_mixin(Bool, MIO_Mixin_Bool, true);
var _BridgingBufferStorage = /** @class */ (function (_super) {
    __extends(_BridgingBufferStorage, _super);
    function _BridgingBufferStorage() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    /*Swift.(file)._BridgingBufferStorage.init(_doNotCallMe:())*/
    /*Swift.(file).ManagedBuffer.init(_doNotCallMe:())*/
    _BridgingBufferStorage.prototype.init_doNotCallMetuple_type = function ($info, _doNotCallMe) {
        return _doNotCallMe;
    };
    _BridgingBufferStorage.$infoAddress = '0x7fb85122a7f0';
    return _BridgingBufferStorage;
}(ManagedBuffer));
var CodingKey$implementation = /** @class */ (function () {
    function CodingKey$implementation() {
    }
    /*Swift.(file).CodingKey.description*/ /**/ ;
    /*Swift.(file).CodingKey.debugDescription*/ /**/ ;
    return CodingKey$implementation;
}());
if (typeof CustomStringConvertible$implementation != 'undefined')
    _mixin(CodingKey$implementation, CustomStringConvertible$implementation, false);
if (typeof CustomDebugStringConvertible$implementation != 'undefined')
    _mixin(CodingKey$implementation, CustomDebugStringConvertible$implementation, false);
var CodingUserInfoKey = /** @class */ (function () {
    function CodingUserInfoKey() {
    }
    /*Swift.(file).CodingUserInfoKey.init(rawValue:String)*/
    /*Swift.(file).RawRepresentable.init(rawValue:Self.RawValue)*/
    CodingUserInfoKey.prototype.initRawValue = function ($info, rawValue) {
        return rawValue;
    };
    /*Swift.(file).CodingUserInfoKey.==infix(_:CodingUserInfoKey,_:CodingUserInfoKey)*/
    /*Swift.(file).Equatable.==infix(_:Self,_:Self)*/
    CodingUserInfoKey.infix_61_61 = function ($info, lhs, rhs) {
        return lhs == rhs;
    };
    /*Swift.(file).CodingUserInfoKey.hashValue*/ /*
    hashValue$get() {
    return this.hashValue
    }
    get hashValue() { return this.hashValue$get() }*/ ;
    /*Swift.(file).CodingUserInfoKey.hash(into:Hasher)*/
    /*Swift.(file).Hashable.hash(into:Hasher)*/
    CodingUserInfoKey.prototype.hashInto = function ($info, hasher$inout) {
    };
    CodingUserInfoKey.$struct = true;
    CodingUserInfoKey.$infoAddress = '0x7fb85180e700';
    return CodingUserInfoKey;
}());
if (typeof RawRepresentable$implementation != 'undefined')
    _mixin(CodingUserInfoKey, RawRepresentable$implementation, false);
if (typeof Equatable$implementation != 'undefined')
    _mixin(CodingUserInfoKey, Equatable$implementation, false);
if (typeof Hashable$implementation != 'undefined')
    _mixin(CodingUserInfoKey, Hashable$implementation, false);
var EncodingError = /** @class */ (function () {
    function EncodingError() {
    }
    EncodingError.invalidValue = function () { return Object.assign(new EncodingError(), __assign({ rawValue: "invalidValue" }, Array.from(arguments).slice(1))); };
    var _u;
    EncodingError.$infoAddress = '0x7fb85123d408';
    EncodingError.Context = (_u = /** @class */ (function () {
            function class_19() {
            }
            /*Swift.(file).EncodingError.Context.debugDescription*/ /*
            readonly debugDescription$get() {
            return this.debugDescription
            }
            readonly get debugDescription() { return this.debugDescription$get() }*/ ;
            /*Swift.(file).EncodingError.Context.underlyingError*/ /*
            readonly underlyingError$get() {
            return this.underlyingError
            }
            readonly get underlyingError() { return this.underlyingError$get() }*/ ;
            /*Swift.(file).EncodingError.Context.init(codingPath:[CodingKey],debugDescription:String,underlyingError:Error?)*/
            /*Swift.(file).EncodingError.Context.init(codingPath:[CodingKey],debugDescription:String,underlyingError:Error?)*/
            class_19.prototype.initCodingPathArrayDebugDescriptionStringUnderlyingErrorOptional = function ($info, codingPath, debugDescription, underlyingError) {
            };
            return class_19;
        }()),
        _u.$struct = true,
        _u.$infoAddress = '0x7fb85130f980',
        _u);
    return EncodingError;
}());
var DecodingError = /** @class */ (function () {
    function DecodingError() {
    }
    DecodingError.typeMismatch = function () { return Object.assign(new DecodingError(), __assign({ rawValue: "typeMismatch" }, Array.from(arguments).slice(1))); };
    DecodingError.valueNotFound = function () { return Object.assign(new DecodingError(), __assign({ rawValue: "valueNotFound" }, Array.from(arguments).slice(1))); };
    DecodingError.keyNotFound = function () { return Object.assign(new DecodingError(), __assign({ rawValue: "keyNotFound" }, Array.from(arguments).slice(1))); };
    DecodingError.dataCorrupted = function () { return Object.assign(new DecodingError(), __assign({ rawValue: "dataCorrupted" }, Array.from(arguments).slice(1))); };
    /*Swift.(file).DecodingError.dataCorruptedError(forKey:C.Key,in:C,debugDescription:String)*/
    /*Swift.(file).DecodingError.dataCorruptedError(forKey:C.Key,in:C,debugDescription:String)*/
    DecodingError.dataCorruptedErrorForKeyInDebugDescription = function ($info, key, container, debugDescription) {
    };
    /*Swift.(file).DecodingError.dataCorruptedError(in:UnkeyedDecodingContainer,debugDescription:String)*/
    /*Swift.(file).DecodingError.dataCorruptedError(in:UnkeyedDecodingContainer,debugDescription:String)*/
    DecodingError.dataCorruptedErrorInDebugDescription = function ($info, container, debugDescription) {
    };
    /*Swift.(file).DecodingError.dataCorruptedError(in:SingleValueDecodingContainer,debugDescription:String)*/
    /*Swift.(file).DecodingError.dataCorruptedError(in:SingleValueDecodingContainer,debugDescription:String)*/
    DecodingError.dataCorruptedErrorInDebugDescription = function ($info, container, debugDescription) {
    };
    var _w;
    DecodingError.$infoAddress = '0x7fb85123d588';
    DecodingError.Context = (_w = /** @class */ (function () {
            function class_20() {
            }
            /*Swift.(file).DecodingError.Context.debugDescription*/ /*
            readonly debugDescription$get() {
            return this.debugDescription
            }
            readonly get debugDescription() { return this.debugDescription$get() }*/ ;
            /*Swift.(file).DecodingError.Context.underlyingError*/ /*
            readonly underlyingError$get() {
            return this.underlyingError
            }
            readonly get underlyingError() { return this.underlyingError$get() }*/ ;
            /*Swift.(file).DecodingError.Context.init(codingPath:[CodingKey],debugDescription:String,underlyingError:Error?)*/
            /*Swift.(file).DecodingError.Context.init(codingPath:[CodingKey],debugDescription:String,underlyingError:Error?)*/
            class_20.prototype.initCodingPathArrayDebugDescriptionStringUnderlyingErrorOptional = function ($info, codingPath, debugDescription, underlyingError) {
            };
            return class_20;
        }()),
        _w.$struct = true,
        _w.$infoAddress = '0x7fb851312688',
        _w);
    return DecodingError;
}());
var _GenericIndexKey = /** @class */ (function () {
    function _GenericIndexKey() {
    }
    /*Swift.(file)._GenericIndexKey.intValue*/ /*
    intValue$get() {
    return this.intValue
    }
    get intValue() { return this.intValue$get() }*/ ;
    /*Swift.(file)._GenericIndexKey.init(stringValue:String)*/
    /*Swift.(file).CodingKey.init(stringValue:String)*/
    _GenericIndexKey.prototype.initStringValueString = function ($info, stringValue) {
        return stringValue;
    };
    /*Swift.(file)._GenericIndexKey.init(intValue:Int)*/
    /*Swift.(file).CodingKey.init(intValue:Int)*/
    _GenericIndexKey.prototype.initIntValueInt = function ($info, intValue) {
        return intValue;
    };
    _GenericIndexKey.$struct = true;
    _GenericIndexKey.$infoAddress = '0x7fb85123d710';
    return _GenericIndexKey;
}());
if (typeof CodingKey$implementation != 'undefined')
    _mixin(_GenericIndexKey, CodingKey$implementation, false);
var _DictionaryCodingKey = /** @class */ (function () {
    function _DictionaryCodingKey() {
    }
    /*Swift.(file)._DictionaryCodingKey.intValue*/ /*
    readonly intValue$get() {
    return this.intValue
    }
    readonly get intValue() { return this.intValue$get() }*/ ;
    /*Swift.(file)._DictionaryCodingKey.init(stringValue:String)*/
    /*Swift.(file).CodingKey.init(stringValue:String)*/
    _DictionaryCodingKey.prototype.initStringValueString = function ($info, stringValue) {
        return stringValue;
    };
    /*Swift.(file)._DictionaryCodingKey.init(intValue:Int)*/
    /*Swift.(file).CodingKey.init(intValue:Int)*/
    _DictionaryCodingKey.prototype.initIntValueInt = function ($info, intValue) {
        return intValue;
    };
    _DictionaryCodingKey.$struct = true;
    _DictionaryCodingKey.$infoAddress = '0x7fb852a1ed50';
    return _DictionaryCodingKey;
}());
if (typeof CodingKey$implementation != 'undefined')
    _mixin(_DictionaryCodingKey, CodingKey$implementation, false);
var IndexingIterator = /** @class */ (function () {
    function IndexingIterator() {
    }
    /*Swift.(file).IndexingIterator.init(_elements:Elements)*/
    /*Swift.(file).IndexingIterator.init(_elements:Elements)*/
    IndexingIterator.prototype.init_elements = function ($info, _elements) {
        return _elements;
    };
    /*Swift.(file).IndexingIterator.init(_elements:Elements,_position:Elements.Index)*/
    /*Swift.(file).IndexingIterator.init(_elements:Elements,_position:Elements.Index)*/
    IndexingIterator.prototype.init_elements_position = function ($info, _elements, _position) {
    };
    /*Swift.(file).IndexingIterator.next()*/
    /*Swift.(file).IteratorProtocol.next()*/
    IndexingIterator.prototype.next = function ($info) {
    };
    IndexingIterator.$struct = true;
    IndexingIterator.$infoAddress = '0x7fb852a1fd40';
    return IndexingIterator;
}());
if (typeof IteratorProtocol$implementation != 'undefined')
    _mixin(IndexingIterator, IteratorProtocol$implementation, false);
if (typeof Sequence$implementation != 'undefined')
    _mixin(IndexingIterator, Sequence$implementation, false);
var Collection$implementation = /** @class */ (function () {
    function Collection$implementation() {
    }
    /*Swift.(file).Collection.formIndex(after:Self.Index)*/
    /*Swift.(file).Collection.formIndex(after:Self.Index)*/
    Collection$implementation.prototype.formIndexAfter = function ($info, i$inout) {
    };
    /*Swift.(file).Collection.index(_:Self.Index,offsetBy:Int)*/
    /*Swift.(file).Collection.index(_:Self.Index,offsetBy:Int)*/
    Collection$implementation.prototype.indexOffsetBy = function ($info, i, distance) {
    };
    /*Swift.(file).Collection.index(_:Self.Index,offsetBy:Int,limitedBy:Self.Index)*/
    /*Swift.(file).Collection.index(_:Self.Index,offsetBy:Int,limitedBy:Self.Index)*/
    Collection$implementation.prototype.indexOffsetByLimitedBy = function ($info, i, distance, limit) {
    };
    /*Swift.(file).Collection.formIndex(_:Self.Index,offsetBy:Int)*/
    /*Swift.(file).Collection.formIndex(_:Self.Index,offsetBy:Int)*/
    Collection$implementation.prototype.formIndexOffsetBy = function ($info, i$inout, distance) {
    };
    /*Swift.(file).Collection.formIndex(_:Self.Index,offsetBy:Int,limitedBy:Self.Index)*/
    /*Swift.(file).Collection.formIndex(_:Self.Index,offsetBy:Int,limitedBy:Self.Index)*/
    Collection$implementation.prototype.formIndexOffsetByLimitedBy = function ($info, i$inout, distance, limit) {
    };
    /*Swift.(file).Collection.distance(from:Self.Index,to:Self.Index)*/
    /*Swift.(file).Collection.distance(from:Self.Index,to:Self.Index)*/
    Collection$implementation.prototype.distanceFromTo = function ($info, start, end) {
    };
    /*Swift.(file).Collection.randomElement(using:T)*/
    /*Swift.(file).Collection.randomElement(using:T)*/
    Collection$implementation.prototype.randomElementUsing = function ($info, generator$inout) {
    };
    /*Swift.(file).Collection.randomElement()*/
    /*Swift.(file).Collection.randomElement()*/
    Collection$implementation.prototype.randomElement = function ($info) {
    };
    /*Swift.(file).Collection.makeIterator()*/
    /*Swift.(file).Collection.makeIterator()*/
    Collection$implementation.prototype.makeIterator = function ($info) {
        var _this = this;
        return new SwiftIterator(function (current) { return _this[current]; });
    };
    /*Swift.(file).Collection.subscript(_:Range<Self.Index>)*/
    /*Swift.(file).Collection.subscript(_:Range<Self.Index>)*/
    Collection$implementation.prototype.subcriptRange$get = function ($info, bounds) {
        return this[bounds];
    };
    /*Swift.(file).Collection.popFirst()*/
    /*Swift.(file).Collection.popFirst()*/
    Collection$implementation.prototype.popFirst = function ($info) {
    };
    /*Swift.(file).Collection.isEmpty*/ /**/ ;
    /*Swift.(file).Collection.first*/ /**/ ;
    /*Swift.(file).Collection.underestimatedCount*/ /**/ ;
    /*Swift.(file).Collection.count*/ /**/ ;
    /*Swift.(file).Collection.map(_:(Self.Element) throws -> T)*/
    /*Swift.(file).Collection.map(_:(Self.Element) throws -> T)*/
    Collection$implementation.prototype.mapSwift = function ($info, transform) {
        return this.map(transform.bind(null, null));
    };
    /*Swift.(file).Collection.dropFirst(_:Int)*/
    /*Swift.(file).Collection.dropFirst(_:Int)*/
    Collection$implementation.prototype.dropFirst = function ($info, k) {
    };
    /*Swift.(file).Collection.dropLast(_:Int)*/
    /*Swift.(file).Collection.dropLast(_:Int)*/
    Collection$implementation.prototype.dropLast = function ($info, k) {
    };
    /*Swift.(file).Collection.drop(while:(Self.Element) throws -> Bool)*/
    /*Swift.(file).Collection.drop(while:(Self.Element) throws -> Bool)*/
    Collection$implementation.prototype.dropWhile = function ($info, predicate) {
    };
    /*Swift.(file).Collection.prefix(_:Int)*/
    /*Swift.(file).Collection.prefix(_:Int)*/
    Collection$implementation.prototype.prefix = function ($info, maxLength) {
    };
    /*Swift.(file).Collection.prefix(while:(Self.Element) throws -> Bool)*/
    /*Swift.(file).Collection.prefix(while:(Self.Element) throws -> Bool)*/
    Collection$implementation.prototype.prefixWhile = function ($info, predicate) {
    };
    /*Swift.(file).Collection.suffix(_:Int)*/
    /*Swift.(file).Collection.suffix(_:Int)*/
    Collection$implementation.prototype.suffix = function ($info, maxLength) {
    };
    /*Swift.(file).Collection.prefix(upTo:Self.Index)*/
    /*Swift.(file).Collection.prefix(upTo:Self.Index)*/
    Collection$implementation.prototype.prefixUpTo = function ($info, end) {
    };
    /*Swift.(file).Collection.suffix(from:Self.Index)*/
    /*Swift.(file).Collection.suffix(from:Self.Index)*/
    Collection$implementation.prototype.suffixFrom = function ($info, start) {
    };
    /*Swift.(file).Collection.prefix(through:Self.Index)*/
    /*Swift.(file).Collection.prefix(through:Self.Index)*/
    Collection$implementation.prototype.prefixThrough = function ($info, position) {
    };
    /*Swift.(file).Collection.split(maxSplits:Int,omittingEmptySubsequences:Bool,whereSeparator:(Self.Element) throws -> Bool)*/
    /*Swift.(file).Collection.split(maxSplits:Int,omittingEmptySubsequences:Bool,whereSeparator:(Self.Element) throws -> Bool)*/
    Collection$implementation.prototype.splitMaxSplitsOmittingEmptySubsequencesWhereSeparator = function ($info, maxSplits, omittingEmptySubsequences, isSeparator) {
    };
    /*Swift.(file).Collection.split(separator:Self.Element,maxSplits:Int,omittingEmptySubsequences:Bool)*/
    /*Swift.(file).Collection.split(separator:Self.Element,maxSplits:Int,omittingEmptySubsequences:Bool)*/
    Collection$implementation.prototype.splitSeparatorMaxSplitsOmittingEmptySubsequences = function ($info, separator, maxSplits, omittingEmptySubsequences) {
    };
    /*Swift.(file).Collection.removeFirst()*/
    /*Swift.(file).Collection.removeFirst()*/
    Collection$implementation.prototype.removeFirst = function ($info) {
    };
    /*Swift.(file).Collection.removeFirst(_:Int)*/
    /*Swift.(file).Collection.removeFirst(_:Int)*/
    Collection$implementation.prototype.removeFirst = function ($info, k) {
    };
    /*Swift.(file).Collection.firstIndex(of:Self.Element)*/
    /*Swift.(file).Collection.firstIndex(of:Self.Element)*/
    Collection$implementation.prototype.firstIndexOf = function ($info, _element) {
    };
    /*Swift.(file).Collection.firstIndex(where:(Self.Element) throws -> Bool)*/
    /*Swift.(file).Collection.firstIndex(where:(Self.Element) throws -> Bool)*/
    Collection$implementation.prototype.firstIndexWhere = function ($info, predicate) {
    };
    /*Swift.(file).Collection.indices*/ /**/ ;
    /*Swift.(file).Collection.subscript(_:R)*/
    /*Swift.(file).Collection.subscript(_:R)*/
    Collection$implementation.prototype.subscript$get = function ($info, r) {
        return this[r];
    };
    /*Swift.(file).Collection.subscript(_:(UnboundedRange_) -> ())*/
    /*Swift.(file).Collection.subscript(_:(UnboundedRange_) -> ())*/
    Collection$implementation.prototype.subscript$get = function ($info, x) {
        return this[x];
    };
    /*Swift.(file).Collection.index(_:Self.Index,offsetBy:T)*/
    /*Swift.(file).Collection.index(_:Self.Index,offsetBy:T)*/
    Collection$implementation.prototype.indexOffsetBy = function ($info, i, n) {
    };
    /*Swift.(file).Collection.formIndex(_:Self.Index,offsetBy:T)*/
    /*Swift.(file).Collection.formIndex(_:Self.Index,offsetBy:T)*/
    Collection$implementation.prototype.formIndexOffsetBy = function ($info, i$inout, n) {
    };
    /*Swift.(file).Collection.index(_:Self.Index,offsetBy:T,limitedBy:Self.Index)*/
    /*Swift.(file).Collection.index(_:Self.Index,offsetBy:T,limitedBy:Self.Index)*/
    Collection$implementation.prototype.indexOffsetByLimitedBy = function ($info, i, n, limit) {
    };
    /*Swift.(file).Collection.formIndex(_:Self.Index,offsetBy:T,limitedBy:Self.Index)*/
    /*Swift.(file).Collection.formIndex(_:Self.Index,offsetBy:T,limitedBy:Self.Index)*/
    Collection$implementation.prototype.formIndexOffsetByLimitedBy = function ($info, i$inout, n, limit) {
    };
    /*Swift.(file).Collection.distance(from:Self.Index,to:Self.Index)*/
    /*Swift.(file).Collection.distance(from:Self.Index,to:Self.Index)*/
    Collection$implementation.prototype.distanceFromTo = function ($info, start, end) {
    };
    /*Swift.(file).Collection.flatMap(_:(Self.Element) throws -> String?)*/
    /*Swift.(file).Collection.flatMap(_:(Self.Element) throws -> String?)*/
    Collection$implementation.prototype.flatMap = function ($info, transform) {
    };
    /*Swift.(file).Collection.index(where:(Self.Element) throws -> Bool)*/
    /*Swift.(file).Collection.index(where:(Self.Element) throws -> Bool)*/
    Collection$implementation.prototype.indexWhere = function ($info, _predicate) {
    };
    /*Swift.(file).Collection.index(of:Self.Element)*/
    /*Swift.(file).Collection.index(of:Self.Element)*/
    Collection$implementation.prototype.indexOfSwift = function ($info, _element) {
    };
    return Collection$implementation;
}());
if (typeof Sequence$implementation != 'undefined')
    _mixin(Collection$implementation, Sequence$implementation, false);
var Comparable$implementation = /** @class */ (function () {
    function Comparable$implementation() {
    }
    /*Swift.(file).Comparable.>infix(_:Self,_:Self)*/
    /*Swift.(file).Comparable.>infix(_:Self,_:Self)*/
    Comparable$implementation.infix_62 = function ($info, lhs, rhs) {
        return lhs > rhs;
    };
    /*Swift.(file).Comparable.<=infix(_:Self,_:Self)*/
    /*Swift.(file).Comparable.<=infix(_:Self,_:Self)*/
    Comparable$implementation.infix_60_61 = function ($info, lhs, rhs) {
        return lhs <= rhs;
    };
    /*Swift.(file).Comparable.>=infix(_:Self,_:Self)*/
    /*Swift.(file).Comparable.>=infix(_:Self,_:Self)*/
    Comparable$implementation.infix_62_61 = function ($info, lhs, rhs) {
        return lhs >= rhs;
    };
    /*Swift.(file).Comparable....infix(_:Self,_:Self)*/
    /*Swift.(file).Comparable....infix(_:Self,_:Self)*/
    Comparable$implementation.infix_46_46_46 = function ($info, minimum, maximum) {
        return _create(ClosedRange, 'initUncheckedBoundstuple_type', null, [minimum, maximum]);
    };
    /*Swift.(file).Comparable...<infix(_:Self,_:Self)*/
    /*Swift.(file).Comparable...<infix(_:Self,_:Self)*/
    Comparable$implementation.infix_46_46_60 = function ($info, minimum, maximum) {
        return _create(Range, 'initUncheckedBoundstuple_type', null, [minimum, maximum]);
    };
    /*Swift.(file).Comparable...<prefix(_:Self)*/
    /*Swift.(file).Comparable...<prefix(_:Self)*/
    Comparable$implementation.prefix_46_46_60 = function ($info, maximum) {
        /*return ..<maximum*/
    };
    /*Swift.(file).Comparable....prefix(_:Self)*/
    /*Swift.(file).Comparable....prefix(_:Self)*/
    Comparable$implementation.prefix_46_46_46 = function ($info, maximum) {
        /*return ...maximum*/
    };
    /*Swift.(file).Comparable....postfix(_:Self)*/
    /*Swift.(file).Comparable....postfix(_:Self)*/
    Comparable$implementation.postfix_46_46_46 = function ($info, minimum) {
        /*return minimum...*/
    };
    return Comparable$implementation;
}());
if (typeof Equatable$implementation != 'undefined')
    _mixin(Comparable$implementation, Equatable$implementation, false);
var __EmptyArrayStorage = /** @class */ (function (_super) {
    __extends(__EmptyArrayStorage, _super);
    function __EmptyArrayStorage() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    /*Swift.(file).__EmptyArrayStorage.init(_doNotCallMe:())*/
    /*Swift.(file).__EmptyArrayStorage.init(_doNotCallMe:())*/
    __EmptyArrayStorage.prototype.init_doNotCallMetuple_type = function ($info, _doNotCallMe) {
        return _doNotCallMe;
    };
    /*Swift.(file).__EmptyArrayStorage.canStoreElements(ofDynamicType:Any.Type)*/
    /*Swift.(file).__ContiguousArrayStorageBase.canStoreElements(ofDynamicType:Any.Type)*/
    __EmptyArrayStorage.prototype.canStoreElementsOfDynamicType = function ($info, _) {
    };
    /*Swift.(file).__EmptyArrayStorage.staticElementType*/ /*
    staticElementType$get() {
    return this.staticElementType
    }
    get staticElementType() { return this.staticElementType$get() }*/ ;
    /*Swift.(file).__EmptyArrayStorage.init(_doNotCallMeBase:())*/
    /*Swift.(file).__ContiguousArrayStorageBase.init(_doNotCallMeBase:())*/
    __EmptyArrayStorage.prototype.init_doNotCallMeBasetuple_type = function ($info, _doNotCallMeBase) {
        return _doNotCallMeBase;
    };
    __EmptyArrayStorage.$infoAddress = '0x7fb852aa9f28';
    return __EmptyArrayStorage;
}(__ContiguousArrayStorageBase));
var _ContiguousArrayStorage = /** @class */ (function (_super) {
    __extends(_ContiguousArrayStorage, _super);
    function _ContiguousArrayStorage() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    /*Swift.(file)._ContiguousArrayStorage.canStoreElements(ofDynamicType:Any.Type)*/
    /*Swift.(file).__ContiguousArrayStorageBase.canStoreElements(ofDynamicType:Any.Type)*/
    _ContiguousArrayStorage.prototype.canStoreElementsOfDynamicType = function ($info, proposedElementType) {
    };
    /*Swift.(file)._ContiguousArrayStorage.staticElementType*/ /*
    staticElementType$get() {
    return this.staticElementType
    }
    get staticElementType() { return this.staticElementType$get() }*/ ;
    /*Swift.(file)._ContiguousArrayStorage.init(_doNotCallMeBase:())*/
    /*Swift.(file).__ContiguousArrayStorageBase.init(_doNotCallMeBase:())*/
    _ContiguousArrayStorage.prototype.init_doNotCallMeBasetuple_type = function ($info, _doNotCallMeBase) {
        return _doNotCallMeBase;
    };
    _ContiguousArrayStorage.$infoAddress = '0x7fb852aaa4c0';
    return _ContiguousArrayStorage;
}(__ContiguousArrayStorageBase));
var OpaquePointer = /** @class */ (function () {
    function OpaquePointer() {
    }
    /*Swift.(file).OpaquePointer.init(_:RawPointer)*/
    /*Swift.(file).OpaquePointer.init(_:RawPointer)*/
    OpaquePointer.prototype.initRawPointer = function ($info, v) {
        return v;
    };
    /*Swift.(file).OpaquePointer.init(bitPattern:Int)*/
    /*Swift.(file).OpaquePointer.init(bitPattern:Int)*/
    OpaquePointer.prototype.initBitPatternInt = function ($info, bitPattern) {
        return bitPattern;
    };
    /*Swift.(file).OpaquePointer.init(bitPattern:UInt)*/
    /*Swift.(file).OpaquePointer.init(bitPattern:UInt)*/
    OpaquePointer.prototype.initBitPatternUInt = function ($info, bitPattern) {
        return bitPattern;
    };
    /*Swift.(file).OpaquePointer.init(_:UnsafePointer<T>)*/
    /*Swift.(file).OpaquePointer.init(_:UnsafePointer<T>)*/
    OpaquePointer.prototype.initUnsafePointer = function ($info, from) {
        return from;
    };
    /*Swift.(file).OpaquePointer.init(_:UnsafePointer<T>?)*/
    /*Swift.(file).OpaquePointer.init(_:UnsafePointer<T>?)*/
    OpaquePointer.prototype.initOptional = function ($info, from) {
        return from;
    };
    /*Swift.(file).OpaquePointer.init(_:UnsafeMutablePointer<T>)*/
    /*Swift.(file).OpaquePointer.init(_:UnsafeMutablePointer<T>)*/
    OpaquePointer.prototype.initUnsafeMutablePointer = function ($info, from) {
        return from;
    };
    /*Swift.(file).OpaquePointer.init(_:UnsafeMutablePointer<T>?)*/
    /*Swift.(file).OpaquePointer.init(_:UnsafeMutablePointer<T>?)*/
    OpaquePointer.prototype.initOptional = function ($info, from) {
        return from;
    };
    /*Swift.(file).OpaquePointer.==infix(_:OpaquePointer,_:OpaquePointer)*/
    /*Swift.(file).Equatable.==infix(_:Self,_:Self)*/
    OpaquePointer.infix_61_61 = function ($info, lhs, rhs) {
        return lhs == rhs;
    };
    /*Swift.(file).OpaquePointer.hash(into:Hasher)*/
    /*Swift.(file).Hashable.hash(into:Hasher)*/
    OpaquePointer.prototype.hashInto = function ($info, hasher$inout) {
    };
    /*Swift.(file).OpaquePointer.hashValue*/ /*
    hashValue$get() {
    return this.hashValue
    }
    get hashValue() { return this.hashValue$get() }*/ ;
    /*Swift.(file).OpaquePointer.debugDescription*/ /*
    debugDescription$get() {
    return this.debugDescription
    }
    get debugDescription() { return this.debugDescription$get() }*/ ;
    /*Swift.(file).OpaquePointer.init(_:UnsafeMutableRawPointer)*/
    /*Swift.(file).OpaquePointer.init(_:UnsafeMutableRawPointer)*/
    OpaquePointer.prototype.initUnsafeMutableRawPointer = function ($info, from) {
        return from;
    };
    /*Swift.(file).OpaquePointer.init(_:UnsafeMutableRawPointer?)*/
    /*Swift.(file).OpaquePointer.init(_:UnsafeMutableRawPointer?)*/
    OpaquePointer.prototype.initOptional = function ($info, from) {
        return from;
    };
    /*Swift.(file).OpaquePointer.init(_:UnsafeRawPointer)*/
    /*Swift.(file).OpaquePointer.init(_:UnsafeRawPointer)*/
    OpaquePointer.prototype.initUnsafeRawPointer = function ($info, from) {
        return from;
    };
    /*Swift.(file).OpaquePointer.init(_:UnsafeRawPointer?)*/
    /*Swift.(file).OpaquePointer.init(_:UnsafeRawPointer?)*/
    OpaquePointer.prototype.initOptional = function ($info, from) {
        return from;
    };
    OpaquePointer.$struct = true;
    OpaquePointer.$infoAddress = '0x7fb851813de0';
    return OpaquePointer;
}());
if (typeof Equatable$implementation != 'undefined')
    _mixin(OpaquePointer, Equatable$implementation, false);
if (typeof Hashable$implementation != 'undefined')
    _mixin(OpaquePointer, Hashable$implementation, false);
if (typeof CustomDebugStringConvertible$implementation != 'undefined')
    _mixin(OpaquePointer, CustomDebugStringConvertible$implementation, false);
if (typeof CVarArg$implementation != 'undefined')
    _mixin(OpaquePointer, CVarArg$implementation, false);
var CVaListPointer = /** @class */ (function () {
    function CVaListPointer() {
    }
    /*Swift.(file).CVaListPointer.init(_fromUnsafeMutablePointer:UnsafeMutableRawPointer)*/
    /*Swift.(file).CVaListPointer.init(_fromUnsafeMutablePointer:UnsafeMutableRawPointer)*/
    CVaListPointer.prototype.init_fromUnsafeMutablePointerUnsafeMutableRawPointer = function ($info, from) {
        return from;
    };
    /*Swift.(file).CVaListPointer.debugDescription*/ /*
    debugDescription$get() {
    return this.debugDescription
    }
    get debugDescription() { return this.debugDescription$get() }*/ ;
    CVaListPointer.$struct = true;
    CVaListPointer.$infoAddress = '0x7fb852ac0748';
    return CVaListPointer;
}());
if (typeof CustomDebugStringConvertible$implementation != 'undefined')
    _mixin(CVaListPointer, CustomDebugStringConvertible$implementation, false);
var _DictionaryAnyHashableBox = /** @class */ (function () {
    function _DictionaryAnyHashableBox() {
    }
    /*Swift.(file)._DictionaryAnyHashableBox.init(_:Dictionary<Key, Value>)*/
    /*Swift.(file)._DictionaryAnyHashableBox.init(_:Dictionary<Key, Value>)*/
    _DictionaryAnyHashableBox.prototype.initDictionary = function ($info, value) {
        return value;
    };
    _DictionaryAnyHashableBox.$struct = true;
    _DictionaryAnyHashableBox.$infoAddress = '0x7fb852ac35e8';
    return _DictionaryAnyHashableBox;
}());
if (typeof _AnyHashableBox$implementation != 'undefined')
    _mixin(_DictionaryAnyHashableBox, _AnyHashableBox$implementation, false);
var _MergeError = /** @class */ (function () {
    function _MergeError() {
    }
    Object.defineProperty(_MergeError, "keyCollision", {
        get: function () { return Object.assign(new _MergeError(), __assign({ rawValue: "keyCollision" }, Array.from(arguments).slice(1))); },
        enumerable: true,
        configurable: true
    });
    /*Swift.(file)._MergeError.==(_:_MergeError,_:_MergeError)*/
    /*Swift.(file).Equatable.==infix(_:Self,_:Self)*/
    _MergeError.infix_61_61 = function ($info, a, b) {
        return a == b;
    };
    /*Swift.(file)._MergeError.hashValue*/ /*
    hashValue$get() {
    return this.hashValue
    }
    get hashValue() { return this.hashValue$get() }*/ ;
    /*Swift.(file)._MergeError.hash(into:Hasher)*/
    /*Swift.(file).Hashable.hash(into:Hasher)*/
    _MergeError.prototype.hashInto = function ($info, hasher$inout) {
    };
    _MergeError.$infoAddress = '0x7fb851816c98';
    return _MergeError;
}());
var _SwiftDictionaryNSEnumerator = /** @class */ (function (_super) {
    __extends(_SwiftDictionaryNSEnumerator, _super);
    function _SwiftDictionaryNSEnumerator() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    /*Swift.(file)._SwiftDictionaryNSEnumerator.bridgedKeys*/ /*
    bridgedKeys$get() {
    return this.bridgedKeys
    }
    get bridgedKeys() { return this.bridgedKeys$get() }*/ ;
    /*Swift.(file)._SwiftDictionaryNSEnumerator.nextBucket*/ /*
    nextBucket$get() {
    return this.nextBucket
    }
    get nextBucket() { return this.nextBucket$get() }*/ ;
    /*Swift.(file)._SwiftDictionaryNSEnumerator.endBucket*/ /*
    endBucket$get() {
    return this.endBucket
    }
    get endBucket() { return this.endBucket$get() }*/ ;
    /*Swift.(file)._SwiftDictionaryNSEnumerator.init()*/
    /*Swift.(file).__SwiftNativeNSEnumerator.init()*/
    _SwiftDictionaryNSEnumerator.prototype.init = function ($info) {
    };
    /*Swift.(file)._SwiftDictionaryNSEnumerator.init(_:_NativeDictionary<Key, Value>)*/
    /*Swift.(file)._SwiftDictionaryNSEnumerator.init(_:_NativeDictionary<Key, Value>)*/
    _SwiftDictionaryNSEnumerator.prototype.init_NativeDictionary = function ($info, base) {
        return base;
    };
    /*Swift.(file)._SwiftDictionaryNSEnumerator.init(_:_SwiftDeferredNSDictionary<Key, Value>)*/
    /*Swift.(file)._SwiftDictionaryNSEnumerator.init(_:_SwiftDeferredNSDictionary<Key, Value>)*/
    _SwiftDictionaryNSEnumerator.prototype.init_SwiftDeferredNSDictionary = function ($info, deferred) {
        return deferred;
    };
    /*Swift.(file)._SwiftDictionaryNSEnumerator.bridgedKey(at:_HashTable.Bucket)*/
    /*Swift.(file)._SwiftDictionaryNSEnumerator.bridgedKey(at:_HashTable.Bucket)*/
    _SwiftDictionaryNSEnumerator.prototype.bridgedKeyAt = function ($info, bucket) {
    };
    /*Swift.(file)._SwiftDictionaryNSEnumerator.nextObject()*/
    /*Swift.(file)._NSEnumerator.nextObject()*/
    _SwiftDictionaryNSEnumerator.prototype.nextObject = function ($info) {
    };
    /*Swift.(file)._SwiftDictionaryNSEnumerator.countByEnumerating(with:UnsafeMutablePointer<_SwiftNSFastEnumerationState>,objects:UnsafeMutablePointer<AnyObject>,count:Int)*/
    /*Swift.(file)._SwiftDictionaryNSEnumerator.countByEnumerating(with:UnsafeMutablePointer<_SwiftNSFastEnumerationState>,objects:UnsafeMutablePointer<AnyObject>,count:Int)*/
    _SwiftDictionaryNSEnumerator.prototype.countByEnumeratingWithObjectsCount = function ($info, state, objects, count) {
    };
    _SwiftDictionaryNSEnumerator.$infoAddress = '0x7fb852ac8378';
    return _SwiftDictionaryNSEnumerator;
}(__SwiftNativeNSEnumerator));
if (typeof _NSEnumerator$implementation != 'undefined')
    _mixin(_SwiftDictionaryNSEnumerator, _NSEnumerator$implementation, false);
var _SwiftDeferredNSDictionary = /** @class */ (function (_super) {
    __extends(_SwiftDeferredNSDictionary, _super);
    function _SwiftDeferredNSDictionary() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    /*Swift.(file)._SwiftDeferredNSDictionary.init(_:_NativeDictionary<Key, Value>)*/
    /*Swift.(file)._SwiftDeferredNSDictionary.init(_:_NativeDictionary<Key, Value>)*/
    _SwiftDeferredNSDictionary.prototype.init_NativeDictionary = function ($info, _native) {
        return _native;
    };
    /*Swift.(file)._SwiftDeferredNSDictionary.init(objects:UnsafePointer<AnyObject?>,forKeys:UnsafeRawPointer,count:Int)*/
    /*Swift.(file)._NSDictionaryCore.init(objects:UnsafePointer<AnyObject?>,forKeys:UnsafeRawPointer,count:Int)*/
    _SwiftDeferredNSDictionary.prototype.initObjectsUnsafePointerForKeysUnsafeRawPointerCountInt = function ($info, objects, forKeys, count) {
    };
    /*Swift.(file)._SwiftDeferredNSDictionary.bridgeKeys()*/
    /*Swift.(file)._SwiftDeferredNSDictionary.bridgeKeys()*/
    _SwiftDeferredNSDictionary.prototype.bridgeKeys = function ($info) {
    };
    /*Swift.(file)._SwiftDeferredNSDictionary.bridgeValues()*/
    /*Swift.(file)._SwiftDeferredNSDictionary.bridgeValues()*/
    _SwiftDeferredNSDictionary.prototype.bridgeValues = function ($info) {
    };
    /*Swift.(file)._SwiftDeferredNSDictionary.copy(with:_SwiftNSZone?)*/
    /*Swift.(file)._NSDictionaryCore.copy(with:_SwiftNSZone?)*/
    /*Swift.(file)._NSCopying.copy(with:_SwiftNSZone?)*/
    _SwiftDeferredNSDictionary.prototype.copyWith = function ($info, zone) {
    };
    /*Swift.(file)._SwiftDeferredNSDictionary.object(forKey:AnyObject)*/
    /*Swift.(file)._NSDictionaryCore.object(forKey:AnyObject)*/
    _SwiftDeferredNSDictionary.prototype.objectForKey = function ($info, aKey) {
    };
    /*Swift.(file)._SwiftDeferredNSDictionary.keyEnumerator()*/
    /*Swift.(file)._NSDictionaryCore.keyEnumerator()*/
    _SwiftDeferredNSDictionary.prototype.keyEnumerator = function ($info) {
    };
    /*Swift.(file)._SwiftDeferredNSDictionary.getObjects(_:UnsafeMutablePointer<AnyObject>?,andKeys:UnsafeMutablePointer<AnyObject>?,count:Int)*/
    /*Swift.(file)._NSDictionaryCore.getObjects(_:UnsafeMutablePointer<AnyObject>?,andKeys:UnsafeMutablePointer<AnyObject>?,count:Int)*/
    _SwiftDeferredNSDictionary.prototype.getObjectsAndKeysCount = function ($info, objects, keys, count) {
    };
    /*Swift.(file)._SwiftDeferredNSDictionary.enumerateKeysAndObjects(options:Int,using:@convention(block) (Unmanaged<AnyObject>, Unmanaged<AnyObject>, UnsafeMutablePointer<UInt8>) -> Void)*/
    /*Swift.(file)._SwiftDeferredNSDictionary.enumerateKeysAndObjects(options:Int,using:@convention(block) (Unmanaged<AnyObject>, Unmanaged<AnyObject>, UnsafeMutablePointer<UInt8>) -> Void)*/
    _SwiftDeferredNSDictionary.prototype.enumerateKeysAndObjectsOptionsUsing = function ($info, options, block) {
    };
    /*Swift.(file)._SwiftDeferredNSDictionary.count*/ /*
    count$get() {
    return this.count
    }
    get count() { return this.count$get() }*/ ;
    /*Swift.(file)._SwiftDeferredNSDictionary.countByEnumerating(with:UnsafeMutablePointer<_SwiftNSFastEnumerationState>,objects:UnsafeMutablePointer<AnyObject>?,count:Int)*/
    /*Swift.(file)._NSDictionaryCore.countByEnumerating(with:UnsafeMutablePointer<_SwiftNSFastEnumerationState>,objects:UnsafeMutablePointer<AnyObject>?,count:Int)*/
    /*Swift.(file)._NSFastEnumeration.countByEnumerating(with:UnsafeMutablePointer<_SwiftNSFastEnumerationState>,objects:UnsafeMutablePointer<AnyObject>?,count:Int)*/
    _SwiftDeferredNSDictionary.prototype.countByEnumeratingWithObjectsCount = function ($info, state, objects, count) {
    };
    /*Swift.(file)._SwiftDeferredNSDictionary.init()*/
    /*Swift.(file).__SwiftNativeNSDictionary.init()*/
    _SwiftDeferredNSDictionary.prototype.init = function ($info) {
    };
    _SwiftDeferredNSDictionary.$infoAddress = '0x7fb852ac8e90';
    return _SwiftDeferredNSDictionary;
}(__SwiftNativeNSDictionary));
if (typeof _NSDictionaryCore$implementation != 'undefined')
    _mixin(_SwiftDeferredNSDictionary, _NSDictionaryCore$implementation, false);
var _CocoaDictionary = /** @class */ (function () {
    function _CocoaDictionary() {
    }
    /*Swift.(file)._CocoaDictionary.init(_:AnyObject)*/
    /*Swift.(file)._CocoaDictionary.init(_:AnyObject)*/
    _CocoaDictionary.prototype.initAnyObject = function ($info, object) {
        return object;
    };
    /*Swift.(file)._CocoaDictionary.isEqual(to:_CocoaDictionary)*/
    /*Swift.(file)._CocoaDictionary.isEqual(to:_CocoaDictionary)*/
    _CocoaDictionary.prototype.isEqualTo = function ($info, other) {
    };
    /*Swift.(file)._CocoaDictionary.startIndex*/ /*
    startIndex$get() {
    return this.startIndex
    }
    get startIndex() { return this.startIndex$get() }*/ ;
    /*Swift.(file)._CocoaDictionary.endIndex*/ /*
    endIndex$get() {
    return this.endIndex
    }
    get endIndex() { return this.endIndex$get() }*/ ;
    /*Swift.(file)._CocoaDictionary.index(after:_CocoaDictionary.Index)*/
    /*Swift.(file)._DictionaryBuffer.index(after:Self.Index)*/
    _CocoaDictionary.prototype.indexAfter = function ($info, index) {
    };
    /*Swift.(file)._CocoaDictionary.validate(_:_CocoaDictionary.Index)*/
    /*Swift.(file)._CocoaDictionary.validate(_:_CocoaDictionary.Index)*/
    _CocoaDictionary.prototype.validate = function ($info, index) {
    };
    /*Swift.(file)._CocoaDictionary.formIndex(after:_CocoaDictionary.Index,isUnique:Bool)*/
    /*Swift.(file)._CocoaDictionary.formIndex(after:_CocoaDictionary.Index,isUnique:Bool)*/
    _CocoaDictionary.prototype.formIndexAfterIsUnique = function ($info, index$inout, isUnique) {
    };
    /*Swift.(file)._CocoaDictionary.index(forKey:_CocoaDictionary.Key)*/
    /*Swift.(file)._DictionaryBuffer.index(forKey:Self.Key)*/
    _CocoaDictionary.prototype.indexForKey = function ($info, key) {
    };
    /*Swift.(file)._CocoaDictionary.count*/ /*
    count$get() {
    return this.count
    }
    get count() { return this.count$get() }*/ ;
    /*Swift.(file)._CocoaDictionary.contains(_:_CocoaDictionary.Key)*/
    /*Swift.(file)._DictionaryBuffer.contains(_:Self.Key)*/
    _CocoaDictionary.prototype.contains = function ($info, key) {
    };
    /*Swift.(file)._CocoaDictionary.lookup(_:_CocoaDictionary.Key)*/
    /*Swift.(file)._DictionaryBuffer.lookup(_:Self.Key)*/
    _CocoaDictionary.prototype.lookup = function ($info, key) {
    };
    /*Swift.(file)._CocoaDictionary.lookup(_:_CocoaDictionary.Index)*/
    /*Swift.(file)._DictionaryBuffer.lookup(_:Self.Index)*/
    _CocoaDictionary.prototype.lookup = function ($info, index) {
    };
    /*Swift.(file)._CocoaDictionary.key(at:_CocoaDictionary.Index)*/
    /*Swift.(file)._DictionaryBuffer.key(at:Self.Index)*/
    _CocoaDictionary.prototype.keyAt = function ($info, index) {
    };
    /*Swift.(file)._CocoaDictionary.value(at:_CocoaDictionary.Index)*/
    /*Swift.(file)._DictionaryBuffer.value(at:Self.Index)*/
    _CocoaDictionary.prototype.valueAt = function ($info, index) {
    };
    /*Swift.(file)._CocoaDictionary.mapValues(_:(Value) throws -> T)*/
    /*Swift.(file)._CocoaDictionary.mapValues(_:(Value) throws -> T)*/
    _CocoaDictionary.prototype.mapValues = function ($info, transform) {
    };
    /*Swift.(file)._CocoaDictionary.makeIterator()*/
    /*Swift.(file).Sequence.makeIterator()*/
    _CocoaDictionary.prototype.makeIterator = function ($info) {
        var _this = this;
        return new SwiftIterator(function (current) { return _this.contains(null, current + _this.lowerBound) ? current + _this.lowerBound : null; });
    };
    var _x, _y, _z;
    _CocoaDictionary.$struct = true;
    _CocoaDictionary.$infoAddress = '0x7fb85181d368';
    _CocoaDictionary.Index = (_x = /** @class */ (function () {
            function class_21() {
            }
            /*Swift.(file)._CocoaDictionary.Index.init(_:_CocoaDictionary.Index.Storage,offset:Int)*/
            /*Swift.(file)._CocoaDictionary.Index.init(_:_CocoaDictionary.Index.Storage,offset:Int)*/
            class_21.prototype.init_CocoaDictionaryIndexStorageOffsetInt = function ($info, storage, offset) {
            };
            /*Swift.(file).Index.==infix(_:_CocoaDictionary.Index,_:_CocoaDictionary.Index)*/
            /*Swift.(file).Equatable.==infix(_:Self,_:Self)*/
            class_21.infix_61_61 = function ($info, lhs, rhs) {
                return lhs == rhs;
            };
            /*Swift.(file).Index.dictionary*/ /*
            dictionary$get() {
            return this.dictionary
            }
            get dictionary() { return this.dictionary$get() }*/ ;
            /*Swift.(file).Index.key*/ /*
            key$get() {
            return this.key
            }
            get key() { return this.key$get() }*/ ;
            /*Swift.(file).Index.age*/ /*
            age$get() {
            return this.age
            }
            get age() { return this.age$get() }*/ ;
            /*Swift.(file).Index.<infix(_:_CocoaDictionary.Index,_:_CocoaDictionary.Index)*/
            /*Swift.(file).Comparable.<infix(_:Self,_:Self)*/
            class_21.infix_60 = function ($info, lhs, rhs) {
                return lhs < rhs;
            };
            return class_21;
        }()),
        _x.$struct = true,
        _x.$infoAddress = '0x7fb85181d5c8',
        _x.Storage = (_y = /** @class */ (function () {
                function class_22() {
                }
                /*Swift.(file).Index.Storage.allKeys*/ /*
                allKeys$get() {
                return this.allKeys
                }
                get allKeys() { return this.allKeys$get() }*/ ;
                /*Swift.(file).Index.Storage.init(_:_CocoaDictionary,_:_BridgingBuffer)*/
                /*Swift.(file).Index.Storage.init(_:_CocoaDictionary,_:_BridgingBuffer)*/
                class_22.prototype.init_CocoaDictionary_BridgingBuffer = function ($info, base, allKeys) {
                };
                return class_22;
            }()),
            _y.$infoAddress = '0x7fb851b61548',
            _y),
        _x);
    _CocoaDictionary.Iterator = (_z = /** @class */ (function () {
            function class_23() {
            }
            /*Swift.(file)._CocoaDictionary.Iterator.itemIndex*/ /*
            itemIndex$get() {
            return this.itemIndex
            }
            get itemIndex() { return this.itemIndex$get() }*/ ;
            /*Swift.(file)._CocoaDictionary.Iterator.itemCount*/ /*
            itemCount$get() {
            return this.itemCount
            }
            get itemCount() { return this.itemCount$get() }*/ ;
            /*Swift.(file)._CocoaDictionary.Iterator.init(_:_CocoaDictionary)*/
            /*Swift.(file)._CocoaDictionary.Iterator.init(_:_CocoaDictionary)*/
            class_23.prototype.init_CocoaDictionary = function ($info, base) {
                return base;
            };
            /*Swift.(file).Iterator.nextKey()*/
            /*Swift.(file).Iterator.nextKey()*/
            class_23.prototype.nextKey = function ($info) {
            };
            /*Swift.(file).Iterator.next()*/
            /*Swift.(file).IteratorProtocol.next()*/
            class_23.prototype.next = function ($info) {
            };
            return class_23;
        }()),
        _z.$infoAddress = '0x7fb852aca4a8',
        _z);
    return _CocoaDictionary;
}());
if (typeof Equatable$implementation != 'undefined')
    _mixin(_CocoaDictionary.Index, Equatable$implementation, false);
if (typeof Comparable$implementation != 'undefined')
    _mixin(_CocoaDictionary.Index, Comparable$implementation, false);
if (typeof IteratorProtocol$implementation != 'undefined')
    _mixin(_CocoaDictionary.Iterator, IteratorProtocol$implementation, false);
if (typeof _DictionaryBuffer$implementation != 'undefined')
    _mixin(_CocoaDictionary, _DictionaryBuffer$implementation, false);
if (typeof Sequence$implementation != 'undefined')
    _mixin(_CocoaDictionary, Sequence$implementation, false);
var _RawDictionaryStorage = /** @class */ (function (_super) {
    __extends(_RawDictionaryStorage, _super);
    function _RawDictionaryStorage() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    /*Swift.(file)._RawDictionaryStorage.init(_doNotCallMe:())*/
    /*Swift.(file)._RawDictionaryStorage.init(_doNotCallMe:())*/
    _RawDictionaryStorage.prototype.init_doNotCallMetuple_type = function ($info, _doNotCallMe) {
        return _doNotCallMe;
    };
    /*Swift.(file)._RawDictionaryStorage.init()*/
    /*Swift.(file).__SwiftNativeNSDictionary.init()*/
    _RawDictionaryStorage.prototype.init = function ($info) {
    };
    /*Swift.(file)._RawDictionaryStorage.empty*/ /*
    static empty$get() {
    return this.empty
    }
    static get empty() { return this.empty$get() }*/ ;
    _RawDictionaryStorage.$infoAddress = '0x7fb852acd158';
    return _RawDictionaryStorage;
}(__SwiftNativeNSDictionary));
var _EmptyDictionarySingleton = /** @class */ (function (_super) {
    __extends(_EmptyDictionarySingleton, _super);
    function _EmptyDictionarySingleton() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    /*Swift.(file)._EmptyDictionarySingleton.init(_doNotCallMe:())*/
    /*Swift.(file)._RawDictionaryStorage.init(_doNotCallMe:())*/
    _EmptyDictionarySingleton.prototype.init_doNotCallMetuple_type = function ($info, _doNotCallMe) {
        return _doNotCallMe;
    };
    /*Swift.(file)._EmptyDictionarySingleton.init(objects:UnsafePointer<AnyObject?>,forKeys:UnsafeRawPointer,count:Int)*/
    /*Swift.(file)._NSDictionaryCore.init(objects:UnsafePointer<AnyObject?>,forKeys:UnsafeRawPointer,count:Int)*/
    _EmptyDictionarySingleton.prototype.initObjectsUnsafePointerForKeysUnsafeRawPointerCountInt = function ($info, objects, forKeys, count) {
    };
    /*Swift.(file)._EmptyDictionarySingleton.copy(with:_SwiftNSZone?)*/
    /*Swift.(file)._NSDictionaryCore.copy(with:_SwiftNSZone?)*/
    /*Swift.(file)._NSCopying.copy(with:_SwiftNSZone?)*/
    _EmptyDictionarySingleton.prototype.copyWith = function ($info, zone) {
    };
    /*Swift.(file)._EmptyDictionarySingleton.count*/ /*
    count$get() {
    return this.count
    }
    get count() { return this.count$get() }*/ ;
    /*Swift.(file)._EmptyDictionarySingleton.countByEnumerating(with:UnsafeMutablePointer<_SwiftNSFastEnumerationState>,objects:UnsafeMutablePointer<AnyObject>?,count:Int)*/
    /*Swift.(file)._NSDictionaryCore.countByEnumerating(with:UnsafeMutablePointer<_SwiftNSFastEnumerationState>,objects:UnsafeMutablePointer<AnyObject>?,count:Int)*/
    /*Swift.(file)._NSFastEnumeration.countByEnumerating(with:UnsafeMutablePointer<_SwiftNSFastEnumerationState>,objects:UnsafeMutablePointer<AnyObject>?,count:Int)*/
    _EmptyDictionarySingleton.prototype.countByEnumeratingWithObjectsCount = function ($info, state, objects, count) {
    };
    /*Swift.(file)._EmptyDictionarySingleton.object(forKey:AnyObject)*/
    /*Swift.(file)._NSDictionaryCore.object(forKey:AnyObject)*/
    _EmptyDictionarySingleton.prototype.objectForKey = function ($info, aKey) {
    };
    /*Swift.(file)._EmptyDictionarySingleton.keyEnumerator()*/
    /*Swift.(file)._NSDictionaryCore.keyEnumerator()*/
    _EmptyDictionarySingleton.prototype.keyEnumerator = function ($info) {
    };
    /*Swift.(file)._EmptyDictionarySingleton.getObjects(_:UnsafeMutablePointer<AnyObject>?,andKeys:UnsafeMutablePointer<AnyObject>?,count:Int)*/
    /*Swift.(file)._NSDictionaryCore.getObjects(_:UnsafeMutablePointer<AnyObject>?,andKeys:UnsafeMutablePointer<AnyObject>?,count:Int)*/
    _EmptyDictionarySingleton.prototype.getObjectsAndKeysCount = function ($info, objects, keys, count) {
    };
    _EmptyDictionarySingleton.$infoAddress = '0x7fb852acd340';
    return _EmptyDictionarySingleton;
}(_RawDictionaryStorage));
if (typeof _NSDictionaryCore$implementation != 'undefined')
    _mixin(_EmptyDictionarySingleton, _NSDictionaryCore$implementation, false);
var _DictionaryStorage = /** @class */ (function (_super) {
    __extends(_DictionaryStorage, _super);
    function _DictionaryStorage() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    /*Swift.(file)._DictionaryStorage.init(_doNotCallMe:())*/
    /*Swift.(file)._RawDictionaryStorage.init(_doNotCallMe:())*/
    _DictionaryStorage.prototype.init_doNotCallMetuple_type = function ($info, _doNotCallMe) {
        return _doNotCallMe;
    };
    /*Swift.(file)._DictionaryStorage.asNative*/ /*
    asNative$get() {
    return this.asNative
    }
    get asNative() { return this.asNative$get() }*/ ;
    /*Swift.(file)._DictionaryStorage.init(objects:UnsafePointer<AnyObject?>,forKeys:UnsafeRawPointer,count:Int)*/
    /*Swift.(file)._NSDictionaryCore.init(objects:UnsafePointer<AnyObject?>,forKeys:UnsafeRawPointer,count:Int)*/
    _DictionaryStorage.prototype.initObjectsUnsafePointerForKeysUnsafeRawPointerCountInt = function ($info, objects, forKeys, count) {
    };
    /*Swift.(file)._DictionaryStorage.copy(with:_SwiftNSZone?)*/
    /*Swift.(file)._NSDictionaryCore.copy(with:_SwiftNSZone?)*/
    /*Swift.(file)._NSCopying.copy(with:_SwiftNSZone?)*/
    _DictionaryStorage.prototype.copyWith = function ($info, zone) {
    };
    /*Swift.(file)._DictionaryStorage.count*/ /*
    count$get() {
    return this.count
    }
    get count() { return this.count$get() }*/ ;
    /*Swift.(file)._DictionaryStorage.keyEnumerator()*/
    /*Swift.(file)._NSDictionaryCore.keyEnumerator()*/
    _DictionaryStorage.prototype.keyEnumerator = function ($info) {
    };
    /*Swift.(file)._DictionaryStorage.countByEnumerating(with:UnsafeMutablePointer<_SwiftNSFastEnumerationState>,objects:UnsafeMutablePointer<AnyObject>?,count:Int)*/
    /*Swift.(file)._NSDictionaryCore.countByEnumerating(with:UnsafeMutablePointer<_SwiftNSFastEnumerationState>,objects:UnsafeMutablePointer<AnyObject>?,count:Int)*/
    /*Swift.(file)._NSFastEnumeration.countByEnumerating(with:UnsafeMutablePointer<_SwiftNSFastEnumerationState>,objects:UnsafeMutablePointer<AnyObject>?,count:Int)*/
    _DictionaryStorage.prototype.countByEnumeratingWithObjectsCount = function ($info, state, objects, count) {
    };
    /*Swift.(file)._DictionaryStorage.object(forKey:AnyObject)*/
    /*Swift.(file)._NSDictionaryCore.object(forKey:AnyObject)*/
    _DictionaryStorage.prototype.objectForKey = function ($info, aKey) {
    };
    /*Swift.(file)._DictionaryStorage.getObjects(_:UnsafeMutablePointer<AnyObject>?,andKeys:UnsafeMutablePointer<AnyObject>?,count:Int)*/
    /*Swift.(file)._NSDictionaryCore.getObjects(_:UnsafeMutablePointer<AnyObject>?,andKeys:UnsafeMutablePointer<AnyObject>?,count:Int)*/
    _DictionaryStorage.prototype.getObjectsAndKeysCount = function ($info, objects, keys, count) {
    };
    /*Swift.(file)._DictionaryStorage.copy(original:_RawDictionaryStorage)*/
    /*Swift.(file)._DictionaryStorage.copy(original:_RawDictionaryStorage)*/
    _DictionaryStorage.copyOriginal = function ($info, original) {
    };
    /*Swift.(file)._DictionaryStorage.resize(original:_RawDictionaryStorage,capacity:Int,move:Bool)*/
    /*Swift.(file)._DictionaryStorage.resize(original:_RawDictionaryStorage,capacity:Int,move:Bool)*/
    _DictionaryStorage.resizeOriginalCapacityMove = function ($info, original, capacity, move) {
    };
    /*Swift.(file)._DictionaryStorage.allocate(capacity:Int)*/
    /*Swift.(file)._DictionaryStorage.allocate(capacity:Int)*/
    _DictionaryStorage.allocateCapacity = function ($info, capacity) {
    };
    /*Swift.(file)._DictionaryStorage.convert(_:_CocoaDictionary,capacity:Int)*/
    /*Swift.(file)._DictionaryStorage.convert(_:_CocoaDictionary,capacity:Int)*/
    _DictionaryStorage.convertCapacity = function ($info, cocoa, capacity) {
    };
    /*Swift.(file)._DictionaryStorage.allocate(scale:Int8,age:Int32?,seed:Int?)*/
    /*Swift.(file)._DictionaryStorage.allocate(scale:Int8,age:Int32?,seed:Int?)*/
    _DictionaryStorage.allocateScaleAgeSeed = function ($info, scale, age, seed) {
    };
    _DictionaryStorage.$infoAddress = '0x7fb852acd828';
    return _DictionaryStorage;
}(_RawDictionaryStorage));
if (typeof _NSDictionaryCore$implementation != 'undefined')
    _mixin(_DictionaryStorage, _NSDictionaryCore$implementation, false);
var _FloatAnyHashableBox = /** @class */ (function () {
    function _FloatAnyHashableBox() {
    }
    /*Swift.(file)._FloatAnyHashableBox.init(_:_FloatAnyHashableBox.Base)*/
    /*Swift.(file)._FloatAnyHashableBox.init(_:_FloatAnyHashableBox.Base)*/
    _FloatAnyHashableBox.prototype.init_FloatAnyHashableBoxBase = function ($info, value) {
        return value;
    };
    _FloatAnyHashableBox.$struct = true;
    _FloatAnyHashableBox.$infoAddress = '0x7fb852add1e0';
    return _FloatAnyHashableBox;
}());
if (typeof _AnyHashableBox$implementation != 'undefined')
    _mixin(_FloatAnyHashableBox, _AnyHashableBox$implementation, false);
var _DoubleAnyHashableBox = /** @class */ (function () {
    function _DoubleAnyHashableBox() {
    }
    /*Swift.(file)._DoubleAnyHashableBox.init(_:_DoubleAnyHashableBox.Base)*/
    /*Swift.(file)._DoubleAnyHashableBox.init(_:_DoubleAnyHashableBox.Base)*/
    _DoubleAnyHashableBox.prototype.init_DoubleAnyHashableBoxBase = function ($info, value) {
        return value;
    };
    _DoubleAnyHashableBox.$struct = true;
    _DoubleAnyHashableBox.$infoAddress = '0x7fb852add360';
    return _DoubleAnyHashableBox;
}());
if (typeof _AnyHashableBox$implementation != 'undefined')
    _mixin(_DoubleAnyHashableBox, _AnyHashableBox$implementation, false);
var _Float80AnyHashableBox = /** @class */ (function () {
    function _Float80AnyHashableBox() {
    }
    /*Swift.(file)._Float80AnyHashableBox.init(_:_Float80AnyHashableBox.Base)*/
    /*Swift.(file)._Float80AnyHashableBox.init(_:_Float80AnyHashableBox.Base)*/
    _Float80AnyHashableBox.prototype.init_Float80AnyHashableBoxBase = function ($info, value) {
        return value;
    };
    _Float80AnyHashableBox.$struct = true;
    _Float80AnyHashableBox.$infoAddress = '0x7fb852addee0';
    return _Float80AnyHashableBox;
}());
if (typeof _AnyHashableBox$implementation != 'undefined')
    _mixin(_Float80AnyHashableBox, _AnyHashableBox$implementation, false);
var AnyHashable = /** @class */ (function () {
    function AnyHashable() {
    }
    /*Swift.(file).AnyHashable.init(_box:_AnyHashableBox)*/
    /*Swift.(file).AnyHashable.init(_box:_AnyHashableBox)*/
    AnyHashable.prototype.init_box_AnyHashableBox = function ($info, box) {
        return box;
    };
    /*Swift.(file).AnyHashable.init(_:H)*/
    /*Swift.(file).AnyHashable.init(_:H)*/
    AnyHashable.prototype.init = function ($info, base) {
        return base;
    };
    /*Swift.(file).AnyHashable.init(_usingDefaultRepresentationOf:H)*/
    /*Swift.(file).AnyHashable.init(_usingDefaultRepresentationOf:H)*/
    AnyHashable.prototype.init_usingDefaultRepresentationOf = function ($info, base) {
        return base;
    };
    /*Swift.(file).AnyHashable.base*/ /*
    base$get() {
    return this.base
    }
    get base() { return this.base$get() }*/ ;
    /*Swift.(file).AnyHashable.==infix(_:AnyHashable,_:AnyHashable)*/
    /*Swift.(file).Equatable.==infix(_:Self,_:Self)*/
    AnyHashable.infix_61_61 = function ($info, lhs, rhs) {
        return lhs == rhs;
    };
    /*Swift.(file).AnyHashable.hashValue*/ /*
    hashValue$get() {
    return this.hashValue
    }
    get hashValue() { return this.hashValue$get() }*/ ;
    /*Swift.(file).AnyHashable.hash(into:Hasher)*/
    /*Swift.(file).Hashable.hash(into:Hasher)*/
    AnyHashable.prototype.hashInto = function ($info, hasher$inout) {
    };
    /*Swift.(file).AnyHashable.description*/ /*
    description$get() {
    return this.description
    }
    get description() { return this.description$get() }*/ ;
    /*Swift.(file).AnyHashable.debugDescription*/ /*
    debugDescription$get() {
    return this.debugDescription
    }
    get debugDescription() { return this.debugDescription$get() }*/ ;
    /*Swift.(file).AnyHashable.customMirror*/ /*
    customMirror$get() {
    return this.customMirror
    }
    get customMirror() { return this.customMirror$get() }*/ ;
    AnyHashable.$struct = true;
    AnyHashable.$infoAddress = '0x7fb8518208c8';
    return AnyHashable;
}());
if (typeof Equatable$implementation != 'undefined')
    _mixin(AnyHashable, Equatable$implementation, false);
if (typeof Hashable$implementation != 'undefined')
    _mixin(AnyHashable, Hashable$implementation, false);
if (typeof CustomStringConvertible$implementation != 'undefined')
    _mixin(AnyHashable, CustomStringConvertible$implementation, false);
if (typeof CustomDebugStringConvertible$implementation != 'undefined')
    _mixin(AnyHashable, CustomDebugStringConvertible$implementation, false);
if (typeof CustomReflectable$implementation != 'undefined')
    _mixin(AnyHashable, CustomReflectable$implementation, false);
var _SwiftEmptyNSEnumerator = /** @class */ (function (_super) {
    __extends(_SwiftEmptyNSEnumerator, _super);
    function _SwiftEmptyNSEnumerator() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    /*Swift.(file)._SwiftEmptyNSEnumerator.init()*/
    /*Swift.(file).__SwiftNativeNSEnumerator.init()*/
    _SwiftEmptyNSEnumerator.prototype.init = function ($info) {
    };
    /*Swift.(file)._SwiftEmptyNSEnumerator.nextObject()*/
    /*Swift.(file)._NSEnumerator.nextObject()*/
    _SwiftEmptyNSEnumerator.prototype.nextObject = function ($info) {
    };
    /*Swift.(file)._SwiftEmptyNSEnumerator.countByEnumerating(with:UnsafeMutablePointer<_SwiftNSFastEnumerationState>,objects:UnsafeMutablePointer<AnyObject>,count:Int)*/
    /*Swift.(file)._SwiftEmptyNSEnumerator.countByEnumerating(with:UnsafeMutablePointer<_SwiftNSFastEnumerationState>,objects:UnsafeMutablePointer<AnyObject>,count:Int)*/
    _SwiftEmptyNSEnumerator.prototype.countByEnumeratingWithObjectsCount = function ($info, state, objects, count) {
    };
    _SwiftEmptyNSEnumerator.$infoAddress = '0x7fb852ae1960';
    return _SwiftEmptyNSEnumerator;
}(__SwiftNativeNSEnumerator));
if (typeof _NSEnumerator$implementation != 'undefined')
    _mixin(_SwiftEmptyNSEnumerator, _NSEnumerator$implementation, false);
var _BridgingHashBuffer = /** @class */ (function (_super) {
    __extends(_BridgingHashBuffer, _super);
    function _BridgingHashBuffer() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    /*Swift.(file)._BridgingHashBuffer.allocate(owner:AnyObject,hashTable:_HashTable)*/
    /*Swift.(file)._BridgingHashBuffer.allocate(owner:AnyObject,hashTable:_HashTable)*/
    _BridgingHashBuffer.allocateOwnerHashTable = function ($info, owner, hashTable) {
    };
    /*Swift.(file)._BridgingHashBuffer.subscript(_:_HashTable.Bucket)*/
    /*Swift.(file)._BridgingHashBuffer.subscript(_:_HashTable.Bucket)*/
    _BridgingHashBuffer.prototype.subscript$get = function ($info, bucket) {
        return this[bucket];
    };
    /*Swift.(file)._BridgingHashBuffer.initialize(at:_HashTable.Bucket,to:AnyObject)*/
    /*Swift.(file)._BridgingHashBuffer.initialize(at:_HashTable.Bucket,to:AnyObject)*/
    _BridgingHashBuffer.prototype.initializeAtTo = function ($info, bucket, object) {
    };
    /*Swift.(file)._BridgingHashBuffer.init(_doNotCallMe:())*/
    /*Swift.(file).ManagedBuffer.init(_doNotCallMe:())*/
    _BridgingHashBuffer.prototype.init_doNotCallMetuple_type = function ($info, _doNotCallMe) {
        return _doNotCallMe;
    };
    var _0;
    _BridgingHashBuffer.$infoAddress = '0x7fb852ae1b28';
    _BridgingHashBuffer.Header = (_0 = /** @class */ (function () {
            function class_24() {
            }
            /*Swift.(file)._BridgingHashBuffer.Header.hashTable*/ /*
            hashTable$get() {
            return this.hashTable
            }
            get hashTable() { return this.hashTable$get() }*/ ;
            /*Swift.(file)._BridgingHashBuffer.Header.init(owner:AnyObject,hashTable:_HashTable)*/
            /*Swift.(file)._BridgingHashBuffer.Header.init(owner:AnyObject,hashTable:_HashTable)*/
            class_24.prototype.initOwnerAnyObjectHashTable_HashTable = function ($info, owner, hashTable) {
            };
            return class_24;
        }()),
        _0.$struct = true,
        _0.$infoAddress = '0x7fb852ae1c48',
        _0);
    return _BridgingHashBuffer;
}(ManagedBuffer));
var _HashTable = /** @class */ (function () {
    function _HashTable() {
    }
    /*Swift.(file)._HashTable.bucketMask*/ /*
    readonly bucketMask$get() {
    return this.bucketMask
    }
    readonly get bucketMask() { return this.bucketMask$get() }*/ ;
    /*Swift.(file)._HashTable.init(words:UnsafeMutablePointer<_HashTable.Word>,bucketCount:Int)*/
    /*Swift.(file)._HashTable.init(words:UnsafeMutablePointer<_HashTable.Word>,bucketCount:Int)*/
    _HashTable.prototype.initWordsUnsafeMutablePointerBucketCountInt = function ($info, words, bucketCount) {
    };
    /*Swift.(file)._HashTable.bucketCount*/ /*
    bucketCount$get() {
    return this.bucketCount
    }
    get bucketCount() { return this.bucketCount$get() }*/ ;
    /*Swift.(file)._HashTable.wordCount*/ /*
    wordCount$get() {
    return this.wordCount
    }
    get wordCount() { return this.wordCount$get() }*/ ;
    /*Swift.(file)._HashTable.capacity(forScale:Int8)*/
    /*Swift.(file)._HashTable.capacity(forScale:Int8)*/
    _HashTable.capacityForScale = function ($info, scale) {
    };
    /*Swift.(file)._HashTable.scale(forCapacity:Int)*/
    /*Swift.(file)._HashTable.scale(forCapacity:Int)*/
    _HashTable.scaleForCapacity = function ($info, capacity) {
    };
    /*Swift.(file)._HashTable.age(for:AnyObject)*/
    /*Swift.(file)._HashTable.age(for:AnyObject)*/
    _HashTable.ageFor = function ($info, cocoa) {
    };
    /*Swift.(file)._HashTable.hashSeed(for:AnyObject,scale:Int8)*/
    /*Swift.(file)._HashTable.hashSeed(for:AnyObject,scale:Int8)*/
    _HashTable.hashSeedForScale = function ($info, object, scale) {
    };
    /*Swift.(file)._HashTable.makeIterator()*/
    /*Swift.(file).Sequence.makeIterator()*/
    _HashTable.prototype.makeIterator = function ($info) {
        var _this = this;
        return new SwiftIterator(function (current) { return _this.contains(null, current + _this.lowerBound) ? current + _this.lowerBound : null; });
    };
    /*Swift.(file)._HashTable.isValid(_:_HashTable.Bucket)*/
    /*Swift.(file)._HashTable.isValid(_:_HashTable.Bucket)*/
    _HashTable.prototype.isValid = function ($info, bucket) {
    };
    /*Swift.(file)._HashTable.isOccupied(_:_HashTable.Bucket)*/
    /*Swift.(file)._HashTable.isOccupied(_:_HashTable.Bucket)*/
    _HashTable.prototype.isOccupied = function ($info, bucket) {
    };
    /*Swift.(file)._HashTable.checkOccupied(_:_HashTable.Bucket)*/
    /*Swift.(file)._HashTable.checkOccupied(_:_HashTable.Bucket)*/
    _HashTable.prototype.checkOccupied = function ($info, bucket) {
    };
    /*Swift.(file)._HashTable.occupiedBucket(after:_HashTable.Bucket)*/
    /*Swift.(file)._HashTable.occupiedBucket(after:_HashTable.Bucket)*/
    _HashTable.prototype.occupiedBucketAfter = function ($info, bucket) {
    };
    /*Swift.(file)._HashTable.startBucket*/ /*
    startBucket$get() {
    return this.startBucket
    }
    get startBucket() { return this.startBucket$get() }*/ ;
    /*Swift.(file)._HashTable.endBucket*/ /*
    endBucket$get() {
    return this.endBucket
    }
    get endBucket() { return this.endBucket$get() }*/ ;
    /*Swift.(file)._HashTable.idealBucket(forHashValue:Int)*/
    /*Swift.(file)._HashTable.idealBucket(forHashValue:Int)*/
    _HashTable.prototype.idealBucketForHashValue = function ($info, hashValue) {
    };
    /*Swift.(file)._HashTable.bucket(wrappedAfter:_HashTable.Bucket)*/
    /*Swift.(file)._HashTable.bucket(wrappedAfter:_HashTable.Bucket)*/
    _HashTable.prototype.bucketWrappedAfter = function ($info, bucket) {
    };
    /*Swift.(file)._HashTable.previousHole(before:_HashTable.Bucket)*/
    /*Swift.(file)._HashTable.previousHole(before:_HashTable.Bucket)*/
    _HashTable.prototype.previousHoleBefore = function ($info, bucket) {
    };
    /*Swift.(file)._HashTable.nextHole(atOrAfter:_HashTable.Bucket)*/
    /*Swift.(file)._HashTable.nextHole(atOrAfter:_HashTable.Bucket)*/
    _HashTable.prototype.nextHoleAtOrAfter = function ($info, bucket) {
    };
    /*Swift.(file)._HashTable.copyContents(of:_HashTable)*/
    /*Swift.(file)._HashTable.copyContents(of:_HashTable)*/
    _HashTable.prototype.copyContentsOf = function ($info, other) {
    };
    /*Swift.(file)._HashTable.insertNew(hashValue:Int)*/
    /*Swift.(file)._HashTable.insertNew(hashValue:Int)*/
    _HashTable.prototype.insertNewHashValue = function ($info, hashValue) {
    };
    /*Swift.(file)._HashTable.insert(_:_HashTable.Bucket)*/
    /*Swift.(file)._HashTable.insert(_:_HashTable.Bucket)*/
    _HashTable.prototype.insert = function ($info, bucket) {
    };
    /*Swift.(file)._HashTable.clear()*/
    /*Swift.(file)._HashTable.clear()*/
    _HashTable.prototype.clear = function ($info) {
    };
    /*Swift.(file)._HashTable.delete(at:_HashTable.Bucket,with:D)*/
    /*Swift.(file)._HashTable.delete(at:_HashTable.Bucket,with:D)*/
    _HashTable.prototype.deleteAtWith = function ($info, bucket, delegate) {
    };
    var _1, _2, _3;
    _HashTable.$struct = true;
    _HashTable.$infoAddress = '0x7fb851820e48';
    _HashTable.Bucket = (_1 = /** @class */ (function () {
            function class_25() {
            }
            /*Swift.(file)._HashTable.Bucket.init(offset:Int)*/
            /*Swift.(file)._HashTable.Bucket.init(offset:Int)*/
            class_25.prototype.initOffsetInt = function ($info, offset) {
                return offset;
            };
            /*Swift.(file)._HashTable.Bucket.init(word:Int,bit:Int)*/
            /*Swift.(file)._HashTable.Bucket.init(word:Int,bit:Int)*/
            class_25.prototype.initWordIntBitInt = function ($info, word, bit) {
            };
            /*Swift.(file)._HashTable.Bucket.word*/ /*
            word$get() {
            return this.word
            }
            get word() { return this.word$get() }*/ ;
            /*Swift.(file)._HashTable.Bucket.bit*/ /*
            bit$get() {
            return this.bit
            }
            get bit() { return this.bit$get() }*/ ;
            /*Swift.(file).Bucket.==infix(_:_HashTable.Bucket,_:_HashTable.Bucket)*/
            /*Swift.(file).Equatable.==infix(_:Self,_:Self)*/
            class_25.infix_61_61 = function ($info, lhs, rhs) {
                return lhs == rhs;
            };
            /*Swift.(file).Bucket.<infix(_:_HashTable.Bucket,_:_HashTable.Bucket)*/
            /*Swift.(file).Comparable.<infix(_:Self,_:Self)*/
            class_25.infix_60 = function ($info, lhs, rhs) {
                return lhs < rhs;
            };
            return class_25;
        }()),
        _1.$struct = true,
        _1.$infoAddress = '0x7fb8518030f8',
        _1);
    _HashTable.Index = (_2 = /** @class */ (function () {
            function class_26() {
            }
            /*Swift.(file)._HashTable.Index.age*/ /*
            readonly age$get() {
            return this.age
            }
            readonly get age() { return this.age$get() }*/ ;
            /*Swift.(file)._HashTable.Index.init(bucket:_HashTable.Bucket,age:Int32)*/
            /*Swift.(file)._HashTable.Index.init(bucket:_HashTable.Bucket,age:Int32)*/
            class_26.prototype.initBucket_HashTableBucketAgeInt32 = function ($info, bucket, age) {
            };
            /*Swift.(file).Index.==infix(_:_HashTable.Index,_:_HashTable.Index)*/
            /*Swift.(file).Equatable.==infix(_:Self,_:Self)*/
            class_26.infix_61_61 = function ($info, lhs, rhs) {
                return lhs == rhs;
            };
            /*Swift.(file).Index.<infix(_:_HashTable.Index,_:_HashTable.Index)*/
            /*Swift.(file).Comparable.<infix(_:Self,_:Self)*/
            class_26.infix_60 = function ($info, lhs, rhs) {
                return lhs < rhs;
            };
            return class_26;
        }()),
        _2.$struct = true,
        _2.$infoAddress = '0x7fb851803720',
        _2);
    _HashTable.Iterator = (_3 = /** @class */ (function () {
            function class_27() {
            }
            /*Swift.(file)._HashTable.Iterator.wordIndex*/ /*
            wordIndex$get() {
            return this.wordIndex
            }
            get wordIndex() { return this.wordIndex$get() }*/ ;
            /*Swift.(file)._HashTable.Iterator.word*/ /*
            word$get() {
            return this.word
            }
            get word() { return this.word$get() }*/ ;
            /*Swift.(file)._HashTable.Iterator.init(_:_HashTable)*/
            /*Swift.(file)._HashTable.Iterator.init(_:_HashTable)*/
            class_27.prototype.init_HashTable = function ($info, hashTable) {
                return hashTable;
            };
            /*Swift.(file)._HashTable.Iterator.next()*/
            /*Swift.(file).IteratorProtocol.next()*/
            class_27.prototype.next = function ($info) {
            };
            return class_27;
        }()),
        _3.$struct = true,
        _3.$infoAddress = '0x7fb852c6de10',
        _3);
    return _HashTable;
}());
if (typeof Equatable$implementation != 'undefined')
    _mixin(_HashTable.Bucket, Equatable$implementation, false);
if (typeof Comparable$implementation != 'undefined')
    _mixin(_HashTable.Bucket, Comparable$implementation, false);
if (typeof Equatable$implementation != 'undefined')
    _mixin(_HashTable.Index, Equatable$implementation, false);
if (typeof Comparable$implementation != 'undefined')
    _mixin(_HashTable.Index, Comparable$implementation, false);
if (typeof IteratorProtocol$implementation != 'undefined')
    _mixin(_HashTable.Iterator, IteratorProtocol$implementation, false);
if (typeof Sequence$implementation != 'undefined')
    _mixin(_HashTable, Sequence$implementation, false);
var JoinedSequence = /** @class */ (function () {
    function JoinedSequence() {
    }
    /*Swift.(file).JoinedSequence.init(base:Base,separator:Separator)*/
    /*Swift.(file).JoinedSequence.init(base:Base,separator:Separator)*/
    JoinedSequence.prototype.initBaseSeparator = function ($info, base, separator) {
    };
    /*Swift.(file).JoinedSequence.makeIterator()*/
    /*Swift.(file).Sequence.makeIterator()*/
    JoinedSequence.prototype.makeIterator = function ($info) {
        var _this = this;
        return new SwiftIterator(function (current) { return _this.contains(null, current + _this.lowerBound) ? current + _this.lowerBound : null; });
    };
    var _4, _5;
    JoinedSequence.$struct = true;
    JoinedSequence.$infoAddress = '0x7fb851823e38';
    JoinedSequence.Iterator = (_4 = /** @class */ (function () {
            function class_28() {
            }
            /*Swift.(file).JoinedSequence.Iterator.init(base:Base.Iterator,separator:Separator)*/
            /*Swift.(file).JoinedSequence.Iterator.init(base:Base.Iterator,separator:Separator)*/
            class_28.prototype.initBaseSeparator = function ($info, base, separator) {
            };
            /*Swift.(file).Iterator.next()*/
            /*Swift.(file).IteratorProtocol.next()*/
            class_28.prototype.next = function ($info) {
            };
            return class_28;
        }()),
        _4.$struct = true,
        _4.$infoAddress = '0x7fb8518241e8',
        _4._JoinIteratorState = (_5 = /** @class */ (function () {
                function class_29() {
                }
                Object.defineProperty(class_29, "start", {
                    get: function () { return Object.assign(new JoinedSequence.Iterator._JoinIteratorState(), __assign({ rawValue: "start" }, Array.from(arguments).slice(1))); },
                    enumerable: true,
                    configurable: true
                });
                Object.defineProperty(class_29, "generatingElements", {
                    get: function () { return Object.assign(new JoinedSequence.Iterator._JoinIteratorState(), __assign({ rawValue: "generatingElements" }, Array.from(arguments).slice(1))); },
                    enumerable: true,
                    configurable: true
                });
                Object.defineProperty(class_29, "generatingSeparator", {
                    get: function () { return Object.assign(new JoinedSequence.Iterator._JoinIteratorState(), __assign({ rawValue: "generatingSeparator" }, Array.from(arguments).slice(1))); },
                    enumerable: true,
                    configurable: true
                });
                Object.defineProperty(class_29, "end", {
                    get: function () { return Object.assign(new JoinedSequence.Iterator._JoinIteratorState(), __assign({ rawValue: "end" }, Array.from(arguments).slice(1))); },
                    enumerable: true,
                    configurable: true
                });
                /*Swift.(file).JoinedSequence.Iterator._JoinIteratorState.==(_:JoinedSequence<Base>.Iterator._JoinIteratorState,_:JoinedSequence<Base>.Iterator._JoinIteratorState)*/
                /*Swift.(file).Equatable.==infix(_:Self,_:Self)*/
                class_29.infix_61_61 = function ($info, a, b) {
                    return a == b;
                };
                /*Swift.(file).JoinedSequence.Iterator._JoinIteratorState.hashValue*/ /*
                hashValue$get() {
                return this.hashValue
                }
                get hashValue() { return this.hashValue$get() }*/ ;
                /*Swift.(file).JoinedSequence.Iterator._JoinIteratorState.hash(into:Hasher)*/
                /*Swift.(file).Hashable.hash(into:Hasher)*/
                class_29.prototype.hashInto = function ($info, hasher$inout) {
                };
                return class_29;
            }()),
            _5.$infoAddress = '0x7fb8518243a8',
            _5),
        _4);
    return JoinedSequence;
}());
if (typeof IteratorProtocol$implementation != 'undefined')
    _mixin(JoinedSequence.Iterator, IteratorProtocol$implementation, false);
if (typeof Sequence$implementation != 'undefined')
    _mixin(JoinedSequence, Sequence$implementation, false);
var AnyKeyPath = /** @class */ (function () {
    function AnyKeyPath() {
    }
    /*Swift.(file).AnyKeyPath.valueType*/ /*
    static valueType$get() {
    return this.valueType
    }
    static get valueType() { return this.valueType$get() }*/ ;
    /*Swift.(file).AnyKeyPath.hashValue*/ /*
    hashValue$get() {
    return this.hashValue
    }
    get hashValue() { return this.hashValue$get() }*/ ;
    /*Swift.(file).AnyKeyPath.hash(into:Hasher)*/
    /*Swift.(file).Hashable.hash(into:Hasher)*/
    AnyKeyPath.prototype.hashInto = function ($info, hasher$inout) {
    };
    /*Swift.(file).AnyKeyPath.==infix(_:AnyKeyPath,_:AnyKeyPath)*/
    /*Swift.(file).Equatable.==infix(_:Self,_:Self)*/
    AnyKeyPath.infix_61_61 = function ($info, a, b) {
        return a == b;
    };
    /*Swift.(file).AnyKeyPath.init()*/
    /*Swift.(file).AnyKeyPath.init()*/
    AnyKeyPath.prototype.init = function ($info) {
    };
    /*Swift.(file).AnyKeyPath.withBuffer(_:(KeyPathBuffer) throws -> T)*/
    /*Swift.(file).AnyKeyPath.withBuffer(_:(KeyPathBuffer) throws -> T)*/
    AnyKeyPath.prototype.withBuffer = function ($info, f) {
    };
    AnyKeyPath.$infoAddress = '0x7fb8518248d8';
    return AnyKeyPath;
}());
if (typeof Hashable$implementation != 'undefined')
    _mixin(AnyKeyPath, Hashable$implementation, false);
if (typeof _AppendKeyPath$implementation != 'undefined')
    _mixin(AnyKeyPath, _AppendKeyPath$implementation, false);
var PartialKeyPath = /** @class */ (function (_super) {
    __extends(PartialKeyPath, _super);
    function PartialKeyPath() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    /*Swift.(file).PartialKeyPath.init()*/
    /*Swift.(file).AnyKeyPath.init()*/
    PartialKeyPath.prototype.init = function ($info) {
    };
    PartialKeyPath.$infoAddress = '0x7fb852b511c0';
    return PartialKeyPath;
}(AnyKeyPath));
var KeyPath = /** @class */ (function (_super) {
    __extends(KeyPath, _super);
    function KeyPath() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    /*Swift.(file).KeyPath.appendedType(with:KeyPath<Value, AppendedValue>.Type)*/
    /*Swift.(file).KeyPath.appendedType(with:KeyPath<Value, AppendedValue>.Type)*/
    KeyPath.appendedTypeWith = function ($info, t) {
    };
    /*Swift.(file).KeyPath.init()*/
    /*Swift.(file).AnyKeyPath.init()*/
    KeyPath.prototype.init = function ($info) {
    };
    KeyPath.$infoAddress = '0x7fb852b514d0';
    return KeyPath;
}(PartialKeyPath));
var WritableKeyPath = /** @class */ (function (_super) {
    __extends(WritableKeyPath, _super);
    function WritableKeyPath() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    /*Swift.(file).WritableKeyPath.init()*/
    /*Swift.(file).AnyKeyPath.init()*/
    WritableKeyPath.prototype.init = function ($info) {
    };
    WritableKeyPath.$infoAddress = '0x7fb852b51828';
    return WritableKeyPath;
}(KeyPath));
var ReferenceWritableKeyPath = /** @class */ (function (_super) {
    __extends(ReferenceWritableKeyPath, _super);
    function ReferenceWritableKeyPath() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    /*Swift.(file).ReferenceWritableKeyPath.init()*/
    /*Swift.(file).AnyKeyPath.init()*/
    ReferenceWritableKeyPath.prototype.init = function ($info) {
    };
    ReferenceWritableKeyPath.$infoAddress = '0x7fb852b51bb0';
    return ReferenceWritableKeyPath;
}(WritableKeyPath));
var LazySequenceProtocol$implementation = /** @class */ (function () {
    function LazySequenceProtocol$implementation() {
    }
    /*Swift.(file).LazySequenceProtocol.drop(while:(Self.Elements.Element) -> Bool)*/
    /*Swift.(file).LazySequenceProtocol.drop(while:(Self.Elements.Element) -> Bool)*/
    LazySequenceProtocol$implementation.prototype.dropWhile = function ($info, predicate) {
    };
    /*Swift.(file).LazySequenceProtocol.filter(_:(Self.Elements.Element) -> Bool)*/
    /*Swift.(file).LazySequenceProtocol.filter(_:(Self.Elements.Element) -> Bool)*/
    LazySequenceProtocol$implementation.prototype.filterSwift = function ($info, isIncluded) {
    };
    /*Swift.(file).LazySequenceProtocol.flatMap(_:(Self.Elements.Element) -> SegmentOfResult)*/
    /*Swift.(file).LazySequenceProtocol.flatMap(_:(Self.Elements.Element) -> SegmentOfResult)*/
    LazySequenceProtocol$implementation.prototype.flatMap = function ($info, transform) {
    };
    /*Swift.(file).LazySequenceProtocol.compactMap(_:(Self.Elements.Element) -> ElementOfResult?)*/
    /*Swift.(file).LazySequenceProtocol.compactMap(_:(Self.Elements.Element) -> ElementOfResult?)*/
    LazySequenceProtocol$implementation.prototype.compactMap = function ($info, transform) {
    };
    /*Swift.(file).LazySequenceProtocol.joined()*/
    /*Swift.(file).LazySequenceProtocol.joined()*/
    LazySequenceProtocol$implementation.prototype.joined = function ($info) {
    };
    /*Swift.(file).LazySequenceProtocol.lazy*/ /**/ ;
    /*Swift.(file).LazySequenceProtocol.lazy*/ /**/ ;
    /*Swift.(file).LazySequenceProtocol.map(_:(Self.Element) -> U)*/
    /*Swift.(file).LazySequenceProtocol.map(_:(Self.Element) -> U)*/
    LazySequenceProtocol$implementation.prototype.mapSwift = function ($info, transform) {
    };
    /*Swift.(file).LazySequenceProtocol.prefix(while:(Self.Elements.Element) -> Bool)*/
    /*Swift.(file).LazySequenceProtocol.prefix(while:(Self.Elements.Element) -> Bool)*/
    LazySequenceProtocol$implementation.prototype.prefixWhile = function ($info, predicate) {
    };
    /*Swift.(file).LazySequenceProtocol.flatMap(_:(Self.Elements.Element) -> ElementOfResult?)*/
    /*Swift.(file).LazySequenceProtocol.flatMap(_:(Self.Elements.Element) -> ElementOfResult?)*/
    LazySequenceProtocol$implementation.prototype.flatMap = function ($info, transform) {
    };
    return LazySequenceProtocol$implementation;
}());
if (typeof Sequence$implementation != 'undefined')
    _mixin(LazySequenceProtocol$implementation, Sequence$implementation, false);
var MutableCollection$implementation = /** @class */ (function () {
    function MutableCollection$implementation() {
    }
    /*Swift.(file).MutableCollection.partition(by:(Self.Element) throws -> Bool)*/
    /*Swift.(file).MutableCollection.partition(by:(Self.Element) throws -> Bool)*/
    MutableCollection$implementation.prototype.partitionBy = function ($info, belongsInSecondPartition) {
    };
    /*Swift.(file).MutableCollection.partition(by:(Self.Element) throws -> Bool)*/
    /*Swift.(file).MutableCollection.partition(by:(Self.Element) throws -> Bool)*/
    MutableCollection$implementation.prototype.partitionBy = function ($info, belongsInSecondPartition) {
    };
    /*Swift.(file).MutableCollection.shuffle(using:T)*/
    /*Swift.(file).MutableCollection.shuffle(using:T)*/
    MutableCollection$implementation.prototype.shuffleUsing = function ($info, generator$inout) {
    };
    /*Swift.(file).MutableCollection.shuffle()*/
    /*Swift.(file).MutableCollection.shuffle()*/
    MutableCollection$implementation.prototype.shuffle = function ($info) {
    };
    /*Swift.(file).MutableCollection.withContiguousMutableStorageIfAvailable(_:(inout UnsafeMutableBufferPointer<Self.Element>) throws -> R)*/
    /*Swift.(file).MutableCollection.withContiguousMutableStorageIfAvailable(_:(inout UnsafeMutableBufferPointer<Self.Element>) throws -> R)*/
    MutableCollection$implementation.prototype.withContiguousMutableStorageIfAvailable = function ($info, body) {
    };
    /*Swift.(file).MutableCollection.subscript(_:Range<Self.Index>)*/
    /*Swift.(file).MutableCollection.subscript(_:Range<Self.Index>)*/
    MutableCollection$implementation.prototype.subcriptRange$get = function ($info, bounds) {
        return this[bounds];
    }; /*Swift.(file).MutableCollection.subscript(_:Range<Self.Index>)*/
    /*Swift.(file).MutableCollection.subscript(_:Range<Self.Index>)*/
    MutableCollection$implementation.prototype.subcriptRange$set = function ($info, newValue, bounds) {
        this[bounds] = newValue;
    };
    /*Swift.(file).MutableCollection.swapAt(_:Self.Index,_:Self.Index)*/
    /*Swift.(file).MutableCollection.swapAt(_:Self.Index,_:Self.Index)*/
    MutableCollection$implementation.prototype.swapAt = function ($info, i, j) {
    };
    /*Swift.(file).MutableCollection.subscript(_:R)*/
    /*Swift.(file).MutableCollection.subscript(_:R)*/
    MutableCollection$implementation.prototype.subscript$get = function ($info, r) {
        return this[r];
    }; /*Swift.(file).MutableCollection.subscript(_:R)*/
    /*Swift.(file).MutableCollection.subscript(_:R)*/
    MutableCollection$implementation.prototype.subscript$set = function ($info, newValue, r) {
        this[r] = newValue;
    };
    /*Swift.(file).MutableCollection.subscript(_:(UnboundedRange_) -> ())*/
    /*Swift.(file).MutableCollection.subscript(_:(UnboundedRange_) -> ())*/
    MutableCollection$implementation.prototype.subscript$get = function ($info, x) {
        return this[x];
    }; /*Swift.(file).MutableCollection.subscript(_:(UnboundedRange_) -> ())*/
    /*Swift.(file).MutableCollection.subscript(_:(UnboundedRange_) -> ())*/
    MutableCollection$implementation.prototype.subscript$set = function ($info, newValue, x) {
        this[x] = newValue;
    };
    /*Swift.(file).MutableCollection.reverse()*/
    /*Swift.(file).MutableCollection.reverse()*/
    MutableCollection$implementation.prototype.reverse = function ($info) {
    };
    /*Swift.(file).MutableCollection.sort()*/
    /*Swift.(file).MutableCollection.sort()*/
    MutableCollection$implementation.prototype.sortSwift = function ($info) {
    };
    /*Swift.(file).MutableCollection.sort(by:(Self.Element, Self.Element) throws -> Bool)*/
    /*Swift.(file).MutableCollection.sort(by:(Self.Element, Self.Element) throws -> Bool)*/
    MutableCollection$implementation.prototype.sortBy = function ($info, areInIncreasingOrder) {
        return this.sort(function (a, b) { return areInIncreasingOrder(null, a, b) ? -1 : 1; });
    };
    return MutableCollection$implementation;
}());
if (typeof Collection$implementation != 'undefined')
    _mixin(MutableCollection$implementation, Collection$implementation, false);
var _NativeDictionary = /** @class */ (function () {
    function _NativeDictionary() {
    }
    /*Swift.(file)._NativeDictionary.init()*/
    /*Swift.(file)._NativeDictionary.init()*/
    _NativeDictionary.prototype.init = function ($info) {
    };
    /*Swift.(file)._NativeDictionary.init(_:_RawDictionaryStorage)*/
    /*Swift.(file)._NativeDictionary.init(_:_RawDictionaryStorage)*/
    _NativeDictionary.prototype.init_RawDictionaryStorage = function ($info, storage) {
        return storage;
    };
    /*Swift.(file)._NativeDictionary.init(capacity:Int)*/
    /*Swift.(file)._NativeDictionary.init(capacity:Int)*/
    _NativeDictionary.prototype.initCapacityInt = function ($info, capacity) {
        return capacity;
    };
    /*Swift.(file)._NativeDictionary.init(_:_CocoaDictionary)*/
    /*Swift.(file)._NativeDictionary.init(_:_CocoaDictionary)*/
    _NativeDictionary.prototype.init_CocoaDictionary = function ($info, cocoa) {
        return cocoa;
    };
    /*Swift.(file)._NativeDictionary.init(_:_CocoaDictionary,capacity:Int)*/
    /*Swift.(file)._NativeDictionary.init(_:_CocoaDictionary,capacity:Int)*/
    _NativeDictionary.prototype.init_CocoaDictionaryCapacityInt = function ($info, cocoa, capacity) {
    };
    /*Swift.(file)._NativeDictionary.bridged()*/
    /*Swift.(file)._NativeDictionary.bridged()*/
    _NativeDictionary.prototype.bridged = function ($info) {
    };
    /*Swift.(file)._NativeDictionary.init(_unsafeUninitializedCapacity:Int,allowingDuplicates:Bool,initializingWith:(UnsafeMutableBufferPointer<Key>, UnsafeMutableBufferPointer<Value>, inout Int) -> Void)*/
    /*Swift.(file)._NativeDictionary.init(_unsafeUninitializedCapacity:Int,allowingDuplicates:Bool,initializingWith:(UnsafeMutableBufferPointer<Key>, UnsafeMutableBufferPointer<Value>, inout Int) -> Void)*/
    _NativeDictionary.prototype.init_unsafeUninitializedCapacityIntAllowingDuplicatesBoolInitializingWithfunction_type = function ($info, capacity, allowingDuplicates, initializer) {
    };
    /*Swift.(file)._NativeDictionary.capacity*/ /*
    capacity$get() {
    return this.capacity
    }
    get capacity() { return this.capacity$get() }*/ ;
    /*Swift.(file)._NativeDictionary.hashTable*/ /*
    hashTable$get() {
    return this.hashTable
    }
    get hashTable() { return this.hashTable$get() }*/ ;
    /*Swift.(file)._NativeDictionary.age*/ /*
    age$get() {
    return this.age
    }
    get age() { return this.age$get() }*/ ;
    /*Swift.(file)._NativeDictionary.invalidateIndices()*/
    /*Swift.(file)._NativeDictionary.invalidateIndices()*/
    _NativeDictionary.prototype.invalidateIndices = function ($info) {
    };
    /*Swift.(file)._NativeDictionary.uncheckedKey(at:_NativeDictionary<Key, Value>.Bucket)*/
    /*Swift.(file)._NativeDictionary.uncheckedKey(at:_NativeDictionary<Key, Value>.Bucket)*/
    _NativeDictionary.prototype.uncheckedKeyAt = function ($info, bucket) {
    };
    /*Swift.(file)._NativeDictionary.uncheckedValue(at:_NativeDictionary<Key, Value>.Bucket)*/
    /*Swift.(file)._NativeDictionary.uncheckedValue(at:_NativeDictionary<Key, Value>.Bucket)*/
    _NativeDictionary.prototype.uncheckedValueAt = function ($info, bucket) {
    };
    /*Swift.(file)._NativeDictionary.uncheckedInitialize(at:_NativeDictionary<Key, Value>.Bucket,toKey:Key,value:Value)*/
    /*Swift.(file)._NativeDictionary.uncheckedInitialize(at:_NativeDictionary<Key, Value>.Bucket,toKey:Key,value:Value)*/
    _NativeDictionary.prototype.uncheckedInitializeAtToKeyValue = function ($info, bucket, key, value) {
    };
    /*Swift.(file)._NativeDictionary.uncheckedDestroy(at:_NativeDictionary<Key, Value>.Bucket)*/
    /*Swift.(file)._NativeDictionary.uncheckedDestroy(at:_NativeDictionary<Key, Value>.Bucket)*/
    _NativeDictionary.prototype.uncheckedDestroyAt = function ($info, bucket) {
    };
    /*Swift.(file)._NativeDictionary.hashValue(for:Key)*/
    /*Swift.(file)._NativeDictionary.hashValue(for:Key)*/
    _NativeDictionary.prototype.hashValueFor = function ($info, key) {
    };
    /*Swift.(file)._NativeDictionary.find(_:Key)*/
    /*Swift.(file)._NativeDictionary.find(_:Key)*/
    _NativeDictionary.prototype.find = function ($info, key) {
    };
    /*Swift.(file)._NativeDictionary.find(_:Key,hashValue:Int)*/
    /*Swift.(file)._NativeDictionary.find(_:Key,hashValue:Int)*/
    _NativeDictionary.prototype.findHashValue = function ($info, key, hashValue) {
    };
    /*Swift.(file)._NativeDictionary.resize(capacity:Int)*/
    /*Swift.(file)._NativeDictionary.resize(capacity:Int)*/
    _NativeDictionary.prototype.resizeCapacity = function ($info, capacity) {
    };
    /*Swift.(file)._NativeDictionary.copyAndResize(capacity:Int)*/
    /*Swift.(file)._NativeDictionary.copyAndResize(capacity:Int)*/
    _NativeDictionary.prototype.copyAndResizeCapacity = function ($info, capacity) {
    };
    /*Swift.(file)._NativeDictionary.copy()*/
    /*Swift.(file)._NativeDictionary.copy()*/
    _NativeDictionary.prototype.copy = function ($info) {
    };
    /*Swift.(file)._NativeDictionary.ensureUnique(isUnique:Bool,capacity:Int)*/
    /*Swift.(file)._NativeDictionary.ensureUnique(isUnique:Bool,capacity:Int)*/
    _NativeDictionary.prototype.ensureUniqueIsUniqueCapacity = function ($info, isUnique, capacity) {
    };
    /*Swift.(file)._NativeDictionary.reserveCapacity(_:Int,isUnique:Bool)*/
    /*Swift.(file)._NativeDictionary.reserveCapacity(_:Int,isUnique:Bool)*/
    _NativeDictionary.prototype.reserveCapacityIsUnique = function ($info, capacity, isUnique) {
    };
    /*Swift.(file)._NativeDictionary.validatedBucket(for:_HashTable.Index)*/
    /*Swift.(file)._NativeDictionary.validatedBucket(for:_HashTable.Index)*/
    _NativeDictionary.prototype.validatedBucketFor = function ($info, index) {
    };
    /*Swift.(file)._NativeDictionary.validatedBucket(for:Dictionary<Key, Value>.Index)*/
    /*Swift.(file)._NativeDictionary.validatedBucket(for:Dictionary<Key, Value>.Index)*/
    _NativeDictionary.prototype.validatedBucketFor = function ($info, index) {
    };
    /*Swift.(file)._NativeDictionary.startIndex*/ /*
    startIndex$get() {
    return this.startIndex
    }
    get startIndex() { return this.startIndex$get() }*/ ;
    /*Swift.(file)._NativeDictionary.endIndex*/ /*
    endIndex$get() {
    return this.endIndex
    }
    get endIndex() { return this.endIndex$get() }*/ ;
    /*Swift.(file)._NativeDictionary.index(after:_NativeDictionary<Key, Value>.Index)*/
    /*Swift.(file)._DictionaryBuffer.index(after:Self.Index)*/
    _NativeDictionary.prototype.indexAfter = function ($info, index) {
    };
    /*Swift.(file)._NativeDictionary.index(forKey:Key)*/
    /*Swift.(file)._DictionaryBuffer.index(forKey:Self.Key)*/
    _NativeDictionary.prototype.indexForKey = function ($info, key) {
    };
    /*Swift.(file)._NativeDictionary.count*/ /*
    count$get() {
    return this.count
    }
    get count() { return this.count$get() }*/ ;
    /*Swift.(file)._NativeDictionary.contains(_:Key)*/
    /*Swift.(file)._DictionaryBuffer.contains(_:Self.Key)*/
    _NativeDictionary.prototype.contains = function ($info, key) {
    };
    /*Swift.(file)._NativeDictionary.lookup(_:Key)*/
    /*Swift.(file)._DictionaryBuffer.lookup(_:Self.Key)*/
    _NativeDictionary.prototype.lookup = function ($info, key) {
    };
    /*Swift.(file)._NativeDictionary.lookup(_:_NativeDictionary<Key, Value>.Index)*/
    /*Swift.(file)._DictionaryBuffer.lookup(_:Self.Index)*/
    _NativeDictionary.prototype.lookup = function ($info, index) {
    };
    /*Swift.(file)._NativeDictionary.key(at:_NativeDictionary<Key, Value>.Index)*/
    /*Swift.(file)._DictionaryBuffer.key(at:Self.Index)*/
    _NativeDictionary.prototype.keyAt = function ($info, index) {
    };
    /*Swift.(file)._NativeDictionary.value(at:_NativeDictionary<Key, Value>.Index)*/
    /*Swift.(file)._DictionaryBuffer.value(at:Self.Index)*/
    _NativeDictionary.prototype.valueAt = function ($info, index) {
    };
    /*Swift.(file)._NativeDictionary.subscript(_:Key,isUnique:Bool)*/
    /*Swift.(file)._NativeDictionary.subscript(_:Key,isUnique:Bool)*/
    _NativeDictionary.prototype.subscriptIsUnique$get = function ($info, key, isUnique) {
        return this[key];
    }; /*Swift.(file)._NativeDictionary.subscript(_:Key,isUnique:Bool)*/
    /*Swift.(file)._NativeDictionary.subscript(_:Key,isUnique:Bool)*/
    _NativeDictionary.prototype.subscriptIsUnique$_modify = function ($info, key, isUnique) {
        return this[key];
    };
    /*Swift.(file)._NativeDictionary.insertNew(key:Key,value:Value)*/
    /*Swift.(file)._NativeDictionary.insertNew(key:Key,value:Value)*/
    _NativeDictionary.prototype.insertNewKeyValue = function ($info, key, value) {
    };
    /*Swift.(file)._NativeDictionary.mutatingFind(_:Key,isUnique:Bool)*/
    /*Swift.(file)._NativeDictionary.mutatingFind(_:Key,isUnique:Bool)*/
    _NativeDictionary.prototype.mutatingFindIsUnique = function ($info, key, isUnique) {
    };
    /*Swift.(file)._NativeDictionary.updateValue(_:Value,forKey:Key,isUnique:Bool)*/
    /*Swift.(file)._NativeDictionary.updateValue(_:Value,forKey:Key,isUnique:Bool)*/
    _NativeDictionary.prototype.updateValueForKeyIsUnique = function ($info, value, key, isUnique) {
    };
    /*Swift.(file)._NativeDictionary.setValue(_:Value,forKey:Key,isUnique:Bool)*/
    /*Swift.(file)._NativeDictionary.setValue(_:Value,forKey:Key,isUnique:Bool)*/
    _NativeDictionary.prototype.setValueForKeyIsUnique = function ($info, value, key, isUnique) {
    };
    /*Swift.(file)._NativeDictionary.swapValuesAt(_:_NativeDictionary<Key, Value>.Bucket,_:_NativeDictionary<Key, Value>.Bucket,isUnique:Bool)*/
    /*Swift.(file)._NativeDictionary.swapValuesAt(_:_NativeDictionary<Key, Value>.Bucket,_:_NativeDictionary<Key, Value>.Bucket,isUnique:Bool)*/
    _NativeDictionary.prototype.swapValuesAtIsUnique = function ($info, a, b, isUnique) {
    };
    /*Swift.(file)._NativeDictionary.isEqual(to:_NativeDictionary<Key, Value>)*/
    /*Swift.(file)._NativeDictionary.isEqual(to:_NativeDictionary<Key, Value>)*/
    _NativeDictionary.prototype.isEqualTo = function ($info, other) {
    };
    /*Swift.(file)._NativeDictionary.isEqual(to:_CocoaDictionary)*/
    /*Swift.(file)._NativeDictionary.isEqual(to:_CocoaDictionary)*/
    _NativeDictionary.prototype.isEqualTo = function ($info, other) {
    };
    /*Swift.(file)._NativeDictionary.hashValue(at:_NativeDictionary<Key, Value>.Bucket)*/
    /*Swift.(file)._HashTableDelegate.hashValue(at:_HashTable.Bucket)*/
    _NativeDictionary.prototype.hashValueAt = function ($info, bucket) {
    };
    /*Swift.(file)._NativeDictionary.moveEntry(from:_NativeDictionary<Key, Value>.Bucket,to:_NativeDictionary<Key, Value>.Bucket)*/
    /*Swift.(file)._HashTableDelegate.moveEntry(from:_HashTable.Bucket,to:_HashTable.Bucket)*/
    _NativeDictionary.prototype.moveEntryFromTo = function ($info, source, target) {
    };
    /*Swift.(file)._NativeDictionary.swapEntry(_:_NativeDictionary<Key, Value>.Bucket,with:_NativeDictionary<Key, Value>.Bucket)*/
    /*Swift.(file)._NativeDictionary.swapEntry(_:_NativeDictionary<Key, Value>.Bucket,with:_NativeDictionary<Key, Value>.Bucket)*/
    _NativeDictionary.prototype.swapEntryWith = function ($info, left, right) {
    };
    /*Swift.(file)._NativeDictionary.uncheckedRemove(at:_NativeDictionary<Key, Value>.Bucket,isUnique:Bool)*/
    /*Swift.(file)._NativeDictionary.uncheckedRemove(at:_NativeDictionary<Key, Value>.Bucket,isUnique:Bool)*/
    _NativeDictionary.prototype.uncheckedRemoveAtIsUnique = function ($info, bucket, isUnique) {
    };
    /*Swift.(file)._NativeDictionary.removeAll(isUnique:Bool)*/
    /*Swift.(file)._NativeDictionary.removeAll(isUnique:Bool)*/
    _NativeDictionary.prototype.removeAllIsUnique = function ($info, isUnique) {
    };
    /*Swift.(file)._NativeDictionary.mapValues(_:(Value) throws -> T)*/
    /*Swift.(file)._NativeDictionary.mapValues(_:(Value) throws -> T)*/
    _NativeDictionary.prototype.mapValues = function ($info, transform) {
    };
    /*Swift.(file)._NativeDictionary.merge(_:S,isUnique:Bool,uniquingKeysWith:(Value, Value) throws -> Value)*/
    /*Swift.(file)._NativeDictionary.merge(_:S,isUnique:Bool,uniquingKeysWith:(Value, Value) throws -> Value)*/
    _NativeDictionary.prototype.mergeIsUniqueUniquingKeysWith = function ($info, keysAndValues, isUnique, combine) {
    };
    /*Swift.(file)._NativeDictionary.init(grouping:S,by:(S.Element) throws -> Key)*/
    /*Swift.(file)._NativeDictionary.init(grouping:S,by:(S.Element) throws -> Key)*/
    _NativeDictionary.prototype.initGroupingByfunction_type = function ($info, values, keyForValue) {
    };
    /*Swift.(file)._NativeDictionary.makeIterator()*/
    /*Swift.(file).Sequence.makeIterator()*/
    _NativeDictionary.prototype.makeIterator = function ($info) {
        var _this = this;
        return new SwiftIterator(function (current) { return _this.contains(null, current + _this.lowerBound) ? current + _this.lowerBound : null; });
    };
    var _6;
    _NativeDictionary.$struct = true;
    _NativeDictionary.$infoAddress = '0x7fb852ac7dc0';
    _NativeDictionary.Iterator = (_6 = /** @class */ (function () {
            function class_30() {
            }
            /*Swift.(file)._NativeDictionary.Iterator.iterator*/ /*
            iterator$get() {
            return this.iterator
            }
            get iterator() { return this.iterator$get() }*/ ;
            /*Swift.(file)._NativeDictionary.Iterator.init(_:_NativeDictionary<Key, Value>)*/
            /*Swift.(file)._NativeDictionary.Iterator.init(_:_NativeDictionary<Key, Value>)*/
            class_30.prototype.init_NativeDictionary = function ($info, base) {
                return base;
            };
            /*Swift.(file).Iterator.nextKey()*/
            /*Swift.(file).Iterator.nextKey()*/
            class_30.prototype.nextKey = function ($info) {
            };
            /*Swift.(file).Iterator.nextValue()*/
            /*Swift.(file).Iterator.nextValue()*/
            class_30.prototype.nextValue = function ($info) {
            };
            /*Swift.(file).Iterator.next()*/
            /*Swift.(file).IteratorProtocol.next()*/
            class_30.prototype.next = function ($info) {
            };
            return class_30;
        }()),
        _6.$struct = true,
        _6.$infoAddress = '0x7fb852b146c0',
        _6);
    return _NativeDictionary;
}());
if (typeof IteratorProtocol$implementation != 'undefined')
    _mixin(_NativeDictionary.Iterator, IteratorProtocol$implementation, false);
if (typeof _DictionaryBuffer$implementation != 'undefined')
    _mixin(_NativeDictionary, _DictionaryBuffer$implementation, false);
if (typeof _HashTableDelegate$implementation != 'undefined')
    _mixin(_NativeDictionary, _HashTableDelegate$implementation, false);
if (typeof Sequence$implementation != 'undefined')
    _mixin(_NativeDictionary, Sequence$implementation, false);
var _NativeSet = /** @class */ (function () {
    function _NativeSet() {
    }
    /*Swift.(file)._NativeSet.init()*/
    /*Swift.(file)._NativeSet.init()*/
    _NativeSet.prototype.init = function ($info) {
    };
    /*Swift.(file)._NativeSet.init(_:_RawSetStorage)*/
    /*Swift.(file)._NativeSet.init(_:_RawSetStorage)*/
    _NativeSet.prototype.init_RawSetStorage = function ($info, storage) {
        return storage;
    };
    /*Swift.(file)._NativeSet.init(capacity:Int)*/
    /*Swift.(file)._NativeSet.init(capacity:Int)*/
    _NativeSet.prototype.initCapacityInt = function ($info, capacity) {
        return capacity;
    };
    /*Swift.(file)._NativeSet.init(_:_CocoaSet)*/
    /*Swift.(file)._NativeSet.init(_:_CocoaSet)*/
    _NativeSet.prototype.init_CocoaSet = function ($info, cocoa) {
        return cocoa;
    };
    /*Swift.(file)._NativeSet.init(_:_CocoaSet,capacity:Int)*/
    /*Swift.(file)._NativeSet.init(_:_CocoaSet,capacity:Int)*/
    _NativeSet.prototype.init_CocoaSetCapacityInt = function ($info, cocoa, capacity) {
    };
    /*Swift.(file)._NativeSet.capacity*/ /*
    capacity$get() {
    return this.capacity
    }
    get capacity() { return this.capacity$get() }*/ ;
    /*Swift.(file)._NativeSet.hashTable*/ /*
    hashTable$get() {
    return this.hashTable
    }
    get hashTable() { return this.hashTable$get() }*/ ;
    /*Swift.(file)._NativeSet.age*/ /*
    age$get() {
    return this.age
    }
    get age() { return this.age$get() }*/ ;
    /*Swift.(file)._NativeSet.invalidateIndices()*/
    /*Swift.(file)._NativeSet.invalidateIndices()*/
    _NativeSet.prototype.invalidateIndices = function ($info) {
    };
    /*Swift.(file)._NativeSet.uncheckedElement(at:_NativeSet<Element>.Bucket)*/
    /*Swift.(file)._NativeSet.uncheckedElement(at:_NativeSet<Element>.Bucket)*/
    _NativeSet.prototype.uncheckedElementAt = function ($info, bucket) {
    };
    /*Swift.(file)._NativeSet.uncheckedInitialize(at:_NativeSet<Element>.Bucket,to:Element)*/
    /*Swift.(file)._NativeSet.uncheckedInitialize(at:_NativeSet<Element>.Bucket,to:Element)*/
    _NativeSet.prototype.uncheckedInitializeAtTo = function ($info, bucket, _element) {
    };
    /*Swift.(file)._NativeSet.hashValue(for:Element)*/
    /*Swift.(file)._NativeSet.hashValue(for:Element)*/
    _NativeSet.prototype.hashValueFor = function ($info, _element) {
    };
    /*Swift.(file)._NativeSet.find(_:Element)*/
    /*Swift.(file)._NativeSet.find(_:Element)*/
    _NativeSet.prototype.find = function ($info, _element) {
    };
    /*Swift.(file)._NativeSet.find(_:Element,hashValue:Int)*/
    /*Swift.(file)._NativeSet.find(_:Element,hashValue:Int)*/
    _NativeSet.prototype.findHashValue = function ($info, _element, hashValue) {
    };
    /*Swift.(file)._NativeSet.resize(capacity:Int)*/
    /*Swift.(file)._NativeSet.resize(capacity:Int)*/
    _NativeSet.prototype.resizeCapacity = function ($info, capacity) {
    };
    /*Swift.(file)._NativeSet.copyAndResize(capacity:Int)*/
    /*Swift.(file)._NativeSet.copyAndResize(capacity:Int)*/
    _NativeSet.prototype.copyAndResizeCapacity = function ($info, capacity) {
    };
    /*Swift.(file)._NativeSet.copy()*/
    /*Swift.(file)._NativeSet.copy()*/
    _NativeSet.prototype.copy = function ($info) {
    };
    /*Swift.(file)._NativeSet.ensureUnique(isUnique:Bool,capacity:Int)*/
    /*Swift.(file)._NativeSet.ensureUnique(isUnique:Bool,capacity:Int)*/
    _NativeSet.prototype.ensureUniqueIsUniqueCapacity = function ($info, isUnique, capacity) {
    };
    /*Swift.(file)._NativeSet.reserveCapacity(_:Int,isUnique:Bool)*/
    /*Swift.(file)._NativeSet.reserveCapacity(_:Int,isUnique:Bool)*/
    _NativeSet.prototype.reserveCapacityIsUnique = function ($info, capacity, isUnique) {
    };
    /*Swift.(file)._NativeSet.validatedBucket(for:_HashTable.Index)*/
    /*Swift.(file)._NativeSet.validatedBucket(for:_HashTable.Index)*/
    _NativeSet.prototype.validatedBucketFor = function ($info, index) {
    };
    /*Swift.(file)._NativeSet.validatedBucket(for:Set<Element>.Index)*/
    /*Swift.(file)._NativeSet.validatedBucket(for:Set<Element>.Index)*/
    _NativeSet.prototype.validatedBucketFor = function ($info, index) {
    };
    /*Swift.(file)._NativeSet.startIndex*/ /*
    startIndex$get() {
    return this.startIndex
    }
    get startIndex() { return this.startIndex$get() }*/ ;
    /*Swift.(file)._NativeSet.endIndex*/ /*
    endIndex$get() {
    return this.endIndex
    }
    get endIndex() { return this.endIndex$get() }*/ ;
    /*Swift.(file)._NativeSet.index(after:_NativeSet<Element>.Index)*/
    /*Swift.(file)._SetBuffer.index(after:Self.Index)*/
    _NativeSet.prototype.indexAfter = function ($info, index) {
    };
    /*Swift.(file)._NativeSet.index(for:Element)*/
    /*Swift.(file)._SetBuffer.index(for:Self.Element)*/
    _NativeSet.prototype.indexFor = function ($info, _element) {
    };
    /*Swift.(file)._NativeSet.count*/ /*
    count$get() {
    return this.count
    }
    get count() { return this.count$get() }*/ ;
    /*Swift.(file)._NativeSet.contains(_:Element)*/
    /*Swift.(file)._SetBuffer.contains(_:Self.Element)*/
    _NativeSet.prototype.contains = function ($info, member) {
    };
    /*Swift.(file)._NativeSet.element(at:_NativeSet<Element>.Index)*/
    /*Swift.(file)._SetBuffer.element(at:Self.Index)*/
    _NativeSet.prototype.elementAt = function ($info, index) {
    };
    /*Swift.(file)._NativeSet.insertNew(_:Element,isUnique:Bool)*/
    /*Swift.(file)._NativeSet.insertNew(_:Element,isUnique:Bool)*/
    _NativeSet.prototype.insertNewIsUnique = function ($info, _element, isUnique) {
    };
    /*Swift.(file)._NativeSet.insertNew(_:Element,at:_NativeSet<Element>.Bucket,isUnique:Bool)*/
    /*Swift.(file)._NativeSet.insertNew(_:Element,at:_NativeSet<Element>.Bucket,isUnique:Bool)*/
    _NativeSet.prototype.insertNewAtIsUnique = function ($info, _element, bucket, isUnique) {
    };
    /*Swift.(file)._NativeSet.update(with:Element,isUnique:Bool)*/
    /*Swift.(file)._NativeSet.update(with:Element,isUnique:Bool)*/
    _NativeSet.prototype.updateWithIsUnique = function ($info, _element, isUnique) {
    };
    /*Swift.(file)._NativeSet.isEqual(to:_NativeSet<Element>)*/
    /*Swift.(file)._NativeSet.isEqual(to:_NativeSet<Element>)*/
    _NativeSet.prototype.isEqualTo = function ($info, other) {
    };
    /*Swift.(file)._NativeSet.isEqual(to:_CocoaSet)*/
    /*Swift.(file)._NativeSet.isEqual(to:_CocoaSet)*/
    _NativeSet.prototype.isEqualTo = function ($info, other) {
    };
    /*Swift.(file)._NativeSet.hashValue(at:_NativeSet<Element>.Bucket)*/
    /*Swift.(file)._HashTableDelegate.hashValue(at:_HashTable.Bucket)*/
    _NativeSet.prototype.hashValueAt = function ($info, bucket) {
    };
    /*Swift.(file)._NativeSet.moveEntry(from:_NativeSet<Element>.Bucket,to:_NativeSet<Element>.Bucket)*/
    /*Swift.(file)._HashTableDelegate.moveEntry(from:_HashTable.Bucket,to:_HashTable.Bucket)*/
    _NativeSet.prototype.moveEntryFromTo = function ($info, source, target) {
    };
    /*Swift.(file)._NativeSet.uncheckedRemove(at:_NativeSet<Element>.Bucket,isUnique:Bool)*/
    /*Swift.(file)._NativeSet.uncheckedRemove(at:_NativeSet<Element>.Bucket,isUnique:Bool)*/
    _NativeSet.prototype.uncheckedRemoveAtIsUnique = function ($info, bucket, isUnique) {
    };
    /*Swift.(file)._NativeSet.removeAll(isUnique:Bool)*/
    /*Swift.(file)._NativeSet.removeAll(isUnique:Bool)*/
    _NativeSet.prototype.removeAllIsUnique = function ($info, isUnique) {
    };
    /*Swift.(file)._NativeSet.makeIterator()*/
    /*Swift.(file).Sequence.makeIterator()*/
    _NativeSet.prototype.makeIterator = function ($info) {
        var _this = this;
        return new SwiftIterator(function (current) { return _this.contains(null, current + _this.lowerBound) ? current + _this.lowerBound : null; });
    };
    /*Swift.(file)._NativeSet.bridged()*/
    /*Swift.(file)._NativeSet.bridged()*/
    _NativeSet.prototype.bridged = function ($info) {
    };
    var _7;
    _NativeSet.$struct = true;
    _NativeSet.$infoAddress = '0x7fb852b14bb8';
    _NativeSet.Iterator = (_7 = /** @class */ (function () {
            function class_31() {
            }
            /*Swift.(file)._NativeSet.Iterator.iterator*/ /*
            iterator$get() {
            return this.iterator
            }
            get iterator() { return this.iterator$get() }*/ ;
            /*Swift.(file)._NativeSet.Iterator.init(_:_NativeSet<Element>)*/
            /*Swift.(file)._NativeSet.Iterator.init(_:_NativeSet<Element>)*/
            class_31.prototype.init_NativeSet = function ($info, base) {
                return base;
            };
            /*Swift.(file).Iterator.next()*/
            /*Swift.(file).IteratorProtocol.next()*/
            class_31.prototype.next = function ($info) {
            };
            return class_31;
        }()),
        _7.$struct = true,
        _7.$infoAddress = '0x7fb852b16498',
        _7);
    return _NativeSet;
}());
if (typeof IteratorProtocol$implementation != 'undefined')
    _mixin(_NativeSet.Iterator, IteratorProtocol$implementation, false);
if (typeof _SetBuffer$implementation != 'undefined')
    _mixin(_NativeSet, _SetBuffer$implementation, false);
if (typeof _HashTableDelegate$implementation != 'undefined')
    _mixin(_NativeSet, _HashTableDelegate$implementation, false);
if (typeof Sequence$implementation != 'undefined')
    _mixin(_NativeSet, Sequence$implementation, false);
var _NormalizedUTF8CodeUnitIterator = /** @class */ (function () {
    function _NormalizedUTF8CodeUnitIterator() {
    }
    /*Swift.(file)._NormalizedUTF8CodeUnitIterator.utf8Buffer*/ /*
    utf8Buffer$get() {
    return this.utf8Buffer
    }
    get utf8Buffer() { return this.utf8Buffer$get() }*/ ;
    /*Swift.(file)._NormalizedUTF8CodeUnitIterator.bufferIndex*/ /*
    bufferIndex$get() {
    return this.bufferIndex
    }
    get bufferIndex() { return this.bufferIndex$get() }*/ ;
    /*Swift.(file)._NormalizedUTF8CodeUnitIterator.bufferCount*/ /*
    bufferCount$get() {
    return this.bufferCount
    }
    get bufferCount() { return this.bufferCount$get() }*/ ;
    /*Swift.(file)._NormalizedUTF8CodeUnitIterator.init(foreign:_StringGuts,range:Range<String.Index>)*/
    /*Swift.(file)._NormalizedUTF8CodeUnitIterator.init(foreign:_StringGuts,range:Range<String.Index>)*/
    _NormalizedUTF8CodeUnitIterator.prototype.initForeign_StringGutsRangeRange = function ($info, guts, range) {
    };
    /*Swift.(file)._NormalizedUTF8CodeUnitIterator.init(_:UnsafeBufferPointer<UInt8>,range:Range<Int>)*/
    /*Swift.(file)._NormalizedUTF8CodeUnitIterator.init(_:UnsafeBufferPointer<UInt8>,range:Range<Int>)*/
    _NormalizedUTF8CodeUnitIterator.prototype.initUnsafeBufferPointerRangeRange = function ($info, buffer, range) {
    };
    /*Swift.(file)._NormalizedUTF8CodeUnitIterator.next()*/
    /*Swift.(file).IteratorProtocol.next()*/
    _NormalizedUTF8CodeUnitIterator.prototype.next = function ($info) {
    };
    _NormalizedUTF8CodeUnitIterator.$struct = true;
    _NormalizedUTF8CodeUnitIterator.$infoAddress = '0x7fb852b18d28';
    return _NormalizedUTF8CodeUnitIterator;
}());
if (typeof IteratorProtocol$implementation != 'undefined')
    _mixin(_NormalizedUTF8CodeUnitIterator, IteratorProtocol$implementation, false);
if (typeof Sequence$implementation != 'undefined')
    _mixin(_NormalizedUTF8CodeUnitIterator, Sequence$implementation, false);
var _NormalizedUTF16CodeUnitIterator = /** @class */ (function () {
    function _NormalizedUTF16CodeUnitIterator() {
    }
    /*Swift.(file)._NormalizedUTF16CodeUnitIterator.normalizationBuffer*/ /*
    normalizationBuffer$get() {
    return this.normalizationBuffer
    }
    get normalizationBuffer() { return this.normalizationBuffer$get() }*/ ;
    /*Swift.(file)._NormalizedUTF16CodeUnitIterator.segmentHeapBuffer*/ /*
    segmentHeapBuffer$get() {
    return this.segmentHeapBuffer
    }
    get segmentHeapBuffer() { return this.segmentHeapBuffer$get() }*/ ;
    /*Swift.(file)._NormalizedUTF16CodeUnitIterator.normalizationHeapBuffer*/ /*
    normalizationHeapBuffer$get() {
    return this.normalizationHeapBuffer
    }
    get normalizationHeapBuffer() { return this.normalizationHeapBuffer$get() }*/ ;
    /*Swift.(file)._NormalizedUTF16CodeUnitIterator.source*/ /*
    source$get() {
    return this.source
    }
    get source() { return this.source$get() }*/ ;
    /*Swift.(file)._NormalizedUTF16CodeUnitIterator.segmentBufferIndex*/ /*
    segmentBufferIndex$get() {
    return this.segmentBufferIndex
    }
    get segmentBufferIndex() { return this.segmentBufferIndex$get() }*/ ;
    /*Swift.(file)._NormalizedUTF16CodeUnitIterator.segmentBufferCount*/ /*
    segmentBufferCount$get() {
    return this.segmentBufferCount
    }
    get segmentBufferCount() { return this.segmentBufferCount$get() }*/ ;
    /*Swift.(file)._NormalizedUTF16CodeUnitIterator.init(_:_StringGuts,_:Range<String.Index>)*/
    /*Swift.(file)._NormalizedUTF16CodeUnitIterator.init(_:_StringGuts,_:Range<String.Index>)*/
    _NormalizedUTF16CodeUnitIterator.prototype.init_StringGutsRange = function ($info, guts, range) {
    };
    /*Swift.(file)._NormalizedUTF16CodeUnitIterator.init(_:UnsafeBufferPointer<UInt8>,_:Range<Int>)*/
    /*Swift.(file)._NormalizedUTF16CodeUnitIterator.init(_:UnsafeBufferPointer<UInt8>,_:Range<Int>)*/
    _NormalizedUTF16CodeUnitIterator.prototype.initUnsafeBufferPointerRange = function ($info, buffer, range) {
    };
    /*Swift.(file)._NormalizedUTF16CodeUnitIterator.next()*/
    /*Swift.(file).IteratorProtocol.next()*/
    _NormalizedUTF16CodeUnitIterator.prototype.next = function ($info) {
    };
    /*Swift.(file)._NormalizedUTF16CodeUnitIterator.normalizeFromSource()*/
    /*Swift.(file)._NormalizedUTF16CodeUnitIterator.normalizeFromSource()*/
    _NormalizedUTF16CodeUnitIterator.prototype.normalizeFromSource = function ($info) {
    };
    /*Swift.(file)._NormalizedUTF16CodeUnitIterator.normalizeWithHeapBuffers(_:Int?)*/
    /*Swift.(file)._NormalizedUTF16CodeUnitIterator.normalizeWithHeapBuffers(_:Int?)*/
    _NormalizedUTF16CodeUnitIterator.prototype.normalizeWithHeapBuffers = function ($info, stackBufferCount) {
    };
    var _8, _9;
    _NormalizedUTF16CodeUnitIterator.$struct = true;
    _NormalizedUTF16CodeUnitIterator.$infoAddress = '0x7fb852b18f90';
    _NormalizedUTF16CodeUnitIterator._UTF8BufferSource = (_8 = /** @class */ (function () {
            function class_32() {
            }
            /*Swift.(file)._NormalizedUTF16CodeUnitIterator._UTF8BufferSource.isEmpty*/ /*
            isEmpty$get() {
            return this.isEmpty
            }
            get isEmpty() { return this.isEmpty$get() }*/ ;
            /*Swift.(file)._NormalizedUTF16CodeUnitIterator._UTF8BufferSource.buffer*/ /*
            buffer$get() {
            return this.buffer
            }
            get buffer() { return this.buffer$get() }*/ ;
            /*Swift.(file)._NormalizedUTF16CodeUnitIterator._UTF8BufferSource.index*/ /*
            index$get() {
            return this.index
            }
            get index() { return this.index$get() }*/ ;
            /*Swift.(file)._NormalizedUTF16CodeUnitIterator._UTF8BufferSource.range*/ /*
            range$get() {
            return this.range
            }
            get range() { return this.range$get() }*/ ;
            /*Swift.(file)._NormalizedUTF16CodeUnitIterator._UTF8BufferSource.init(_:UnsafeBufferPointer<UInt8>,_:Range<Int>)*/
            /*Swift.(file)._NormalizedUTF16CodeUnitIterator._UTF8BufferSource.init(_:UnsafeBufferPointer<UInt8>,_:Range<Int>)*/
            class_32.prototype.initUnsafeBufferPointerRange = function ($info, buffer, range) {
            };
            /*Swift.(file)._NormalizedUTF16CodeUnitIterator._UTF8BufferSource.tryFill(into:UnsafeMutableBufferPointer<UInt16>)*/
            /*Swift.(file)._SegmentSource.tryFill(into:UnsafeMutableBufferPointer<UInt16>)*/
            class_32.prototype.tryFillInto = function ($info, output) {
            };
            return class_32;
        }()),
        _8.$struct = true,
        _8.$infoAddress = '0x7fb852e0bd48',
        _8);
    _NormalizedUTF16CodeUnitIterator._ForeignStringGutsSource = (_9 = /** @class */ (function () {
            function class_33() {
            }
            /*Swift.(file)._NormalizedUTF16CodeUnitIterator._ForeignStringGutsSource.isEmpty*/ /*
            isEmpty$get() {
            return this.isEmpty
            }
            get isEmpty() { return this.isEmpty$get() }*/ ;
            /*Swift.(file)._NormalizedUTF16CodeUnitIterator._ForeignStringGutsSource.guts*/ /*
            guts$get() {
            return this.guts
            }
            get guts() { return this.guts$get() }*/ ;
            /*Swift.(file)._NormalizedUTF16CodeUnitIterator._ForeignStringGutsSource.index*/ /*
            index$get() {
            return this.index
            }
            get index() { return this.index$get() }*/ ;
            /*Swift.(file)._NormalizedUTF16CodeUnitIterator._ForeignStringGutsSource.range*/ /*
            range$get() {
            return this.range
            }
            get range() { return this.range$get() }*/ ;
            /*Swift.(file)._NormalizedUTF16CodeUnitIterator._ForeignStringGutsSource.init(_:_StringGuts,_:Range<String.Index>)*/
            /*Swift.(file)._NormalizedUTF16CodeUnitIterator._ForeignStringGutsSource.init(_:_StringGuts,_:Range<String.Index>)*/
            class_33.prototype.init_StringGutsRange = function ($info, guts, range) {
            };
            /*Swift.(file)._NormalizedUTF16CodeUnitIterator._ForeignStringGutsSource.tryFill(into:UnsafeMutableBufferPointer<UInt16>)*/
            /*Swift.(file)._SegmentSource.tryFill(into:UnsafeMutableBufferPointer<UInt16>)*/
            class_33.prototype.tryFillInto = function ($info, output) {
            };
            return class_33;
        }()),
        _9.$struct = true,
        _9.$infoAddress = '0x7fb852e0bed0',
        _9);
    return _NormalizedUTF16CodeUnitIterator;
}());
if (typeof _SegmentSource$implementation != 'undefined')
    _mixin(_NormalizedUTF16CodeUnitIterator._UTF8BufferSource, _SegmentSource$implementation, false);
if (typeof _SegmentSource$implementation != 'undefined')
    _mixin(_NormalizedUTF16CodeUnitIterator._ForeignStringGutsSource, _SegmentSource$implementation, false);
if (typeof IteratorProtocol$implementation != 'undefined')
    _mixin(_NormalizedUTF16CodeUnitIterator, IteratorProtocol$implementation, false);
var _NormalizedUTF8CodeUnitIterator_2 = /** @class */ (function () {
    function _NormalizedUTF8CodeUnitIterator_2() {
    }
    /*Swift.(file)._NormalizedUTF8CodeUnitIterator_2.outputPosition*/ /*
    outputPosition$get() {
    return this.outputPosition
    }
    get outputPosition() { return this.outputPosition$get() }*/ ;
    /*Swift.(file)._NormalizedUTF8CodeUnitIterator_2.outputBufferCount*/ /*
    outputBufferCount$get() {
    return this.outputBufferCount
    }
    get outputBufferCount() { return this.outputBufferCount$get() }*/ ;
    /*Swift.(file)._NormalizedUTF8CodeUnitIterator_2.gutsSlice*/ /*
    gutsSlice$get() {
    return this.gutsSlice
    }
    get gutsSlice() { return this.gutsSlice$get() }*/ ;
    /*Swift.(file)._NormalizedUTF8CodeUnitIterator_2.readPosition*/ /*
    readPosition$get() {
    return this.readPosition
    }
    get readPosition() { return this.readPosition$get() }*/ ;
    /*Swift.(file)._NormalizedUTF8CodeUnitIterator_2.init(_:_StringGutsSlice)*/
    /*Swift.(file)._NormalizedUTF8CodeUnitIterator_2.init(_:_StringGutsSlice)*/
    _NormalizedUTF8CodeUnitIterator_2.prototype.init_StringGutsSlice = function ($info, sliced) {
        return sliced;
    };
    /*Swift.(file)._NormalizedUTF8CodeUnitIterator_2.next()*/
    /*Swift.(file).IteratorProtocol.next()*/
    _NormalizedUTF8CodeUnitIterator_2.prototype.next = function ($info) {
    };
    /*Swift.(file)._NormalizedUTF8CodeUnitIterator_2.outputBufferThreshold*/ /*
    outputBufferThreshold$get() {
    return this.outputBufferThreshold
    }
    get outputBufferThreshold() { return this.outputBufferThreshold$get() }*/ ;
    /*Swift.(file)._NormalizedUTF8CodeUnitIterator_2.outputBufferEmpty*/ /*
    outputBufferEmpty$get() {
    return this.outputBufferEmpty
    }
    get outputBufferEmpty() { return this.outputBufferEmpty$get() }*/ ;
    /*Swift.(file)._NormalizedUTF8CodeUnitIterator_2.outputBufferFull*/ /*
    outputBufferFull$get() {
    return this.outputBufferFull
    }
    get outputBufferFull() { return this.outputBufferFull$get() }*/ ;
    /*Swift.(file)._NormalizedUTF8CodeUnitIterator_2.inputBufferEmpty*/ /*
    inputBufferEmpty$get() {
    return this.inputBufferEmpty
    }
    get inputBufferEmpty() { return this.inputBufferEmpty$get() }*/ ;
    /*Swift.(file)._NormalizedUTF8CodeUnitIterator_2.fastPathFill()*/
    /*Swift.(file)._NormalizedUTF8CodeUnitIterator_2.fastPathFill()*/
    _NormalizedUTF8CodeUnitIterator_2.prototype.fastPathFill = function ($info) {
    };
    /*Swift.(file)._NormalizedUTF8CodeUnitIterator_2.fill()*/
    /*Swift.(file)._NormalizedUTF8CodeUnitIterator_2.fill()*/
    _NormalizedUTF8CodeUnitIterator_2.prototype.fill = function ($info) {
    };
    /*Swift.(file)._NormalizedUTF8CodeUnitIterator_2.compare(with:_NormalizedUTF8CodeUnitIterator_2,expecting:_StringComparisonResult)*/
    /*Swift.(file)._NormalizedUTF8CodeUnitIterator_2.compare(with:_NormalizedUTF8CodeUnitIterator_2,expecting:_StringComparisonResult)*/
    _NormalizedUTF8CodeUnitIterator_2.prototype.compareWithExpecting = function ($info, other, expecting) {
    };
    _NormalizedUTF8CodeUnitIterator_2.$struct = true;
    _NormalizedUTF8CodeUnitIterator_2.$infoAddress = '0x7fb852b19540';
    return _NormalizedUTF8CodeUnitIterator_2;
}());
if (typeof Sequence$implementation != 'undefined')
    _mixin(_NormalizedUTF8CodeUnitIterator_2, Sequence$implementation, false);
if (typeof IteratorProtocol$implementation != 'undefined')
    _mixin(_NormalizedUTF8CodeUnitIterator_2, IteratorProtocol$implementation, false);
var ObjectIdentifier = /** @class */ (function () {
    function ObjectIdentifier() {
    }
    /*Swift.(file).ObjectIdentifier.init(_:AnyObject)*/
    /*Swift.(file).ObjectIdentifier.init(_:AnyObject)*/
    ObjectIdentifier.prototype.initAnyObject = function ($info, x) {
        return x;
    };
    /*Swift.(file).ObjectIdentifier.init(_:Any.Type)*/
    /*Swift.(file).ObjectIdentifier.init(_:Any.Type)*/
    ObjectIdentifier.prototype.initprotocol_composition_type = function ($info, x) {
        return x;
    };
    /*Swift.(file).ObjectIdentifier.==infix(_:ObjectIdentifier,_:ObjectIdentifier)*/
    /*Swift.(file).Equatable.==infix(_:Self,_:Self)*/
    ObjectIdentifier.infix_61_61 = function ($info, x, y) {
        return x == y;
    };
    /*Swift.(file).ObjectIdentifier.debugDescription*/ /*
    debugDescription$get() {
    return this.debugDescription
    }
    get debugDescription() { return this.debugDescription$get() }*/ ;
    /*Swift.(file).ObjectIdentifier.<infix(_:ObjectIdentifier,_:ObjectIdentifier)*/
    /*Swift.(file).Comparable.<infix(_:Self,_:Self)*/
    ObjectIdentifier.infix_60 = function ($info, lhs, rhs) {
        return lhs < rhs;
    };
    /*Swift.(file).ObjectIdentifier.hash(into:Hasher)*/
    /*Swift.(file).Hashable.hash(into:Hasher)*/
    ObjectIdentifier.prototype.hashInto = function ($info, hasher$inout) {
    };
    /*Swift.(file).ObjectIdentifier.hashValue*/ /*
    hashValue$get() {
    return this.hashValue
    }
    get hashValue() { return this.hashValue$get() }*/ ;
    ObjectIdentifier.$struct = true;
    ObjectIdentifier.$infoAddress = '0x7fb851827a38';
    return ObjectIdentifier;
}());
if (typeof Equatable$implementation != 'undefined')
    _mixin(ObjectIdentifier, Equatable$implementation, false);
if (typeof CustomDebugStringConvertible$implementation != 'undefined')
    _mixin(ObjectIdentifier, CustomDebugStringConvertible$implementation, false);
if (typeof Comparable$implementation != 'undefined')
    _mixin(ObjectIdentifier, Comparable$implementation, false);
if (typeof Hashable$implementation != 'undefined')
    _mixin(ObjectIdentifier, Hashable$implementation, false);
var Optional = /** @class */ (function () {
    function Optional() {
    }
    Object.defineProperty(Optional, "none", {
        get: function () { return Object.assign(new Optional(), __assign({ rawValue: "none" }, Array.from(arguments).slice(1))); },
        enumerable: true,
        configurable: true
    });
    Optional.some = function () { return Object.assign(new Optional(), __assign({ rawValue: "some" }, Array.from(arguments).slice(1))); };
    /*Swift.(file).Optional.init(_:Wrapped)*/
    /*Swift.(file).Optional.init(_:Wrapped)*/
    Optional.prototype.init = function ($info, some) {
        return some;
    };
    /*Swift.(file).Optional.map(_:(Wrapped) throws -> U)*/
    /*Swift.(file).Optional.map(_:(Wrapped) throws -> U)*/
    Optional.prototype.mapSwift = function ($info, transform) {
    };
    /*Swift.(file).Optional.flatMap(_:(Wrapped) throws -> U?)*/
    /*Swift.(file).Optional.flatMap(_:(Wrapped) throws -> U?)*/
    Optional.prototype.flatMap = function ($info, transform) {
    };
    /*Swift.(file).Optional.init(nilLiteral:())*/
    /*Swift.(file).ExpressibleByNilLiteral.init(nilLiteral:())*/
    Optional.prototype.initNilLiteraltuple_type = function ($info, nilLiteral) {
        return nilLiteral;
    };
    /*Swift.(file).Optional.unsafelyUnwrapped*/ /*
    unsafelyUnwrapped$get() {
    return this.unsafelyUnwrapped
    }
    get unsafelyUnwrapped() { return this.unsafelyUnwrapped$get() }*/ ;
    /*Swift.(file).Optional.==infix(_:Wrapped?,_:Wrapped?)*/
    /*Swift.(file).Equatable.==infix(_:Self,_:Self)*/
    Optional.infix_61_61 = function ($info, lhs, rhs) {
        return lhs == rhs;
    };
    /*Swift.(file).Optional.~=infix(_:_OptionalNilComparisonType,_:Wrapped?)*/
    /*Swift.(file).Optional.~=infix(_:_OptionalNilComparisonType,_:Wrapped?)*/
    Optional.infix_126_61 = function ($info, lhs, rhs) {
        /*return lhs ~= rhs*/
    };
    /*Swift.(file).Optional.==infix(_:Wrapped?,_:_OptionalNilComparisonType)*/
    /*Swift.(file).Optional.==infix(_:Wrapped?,_:_OptionalNilComparisonType)*/
    Optional.infix_61_61 = function ($info, lhs, rhs) {
        return lhs == rhs;
    };
    /*Swift.(file).Optional.!=infix(_:Wrapped?,_:_OptionalNilComparisonType)*/
    /*Swift.(file).Optional.!=infix(_:Wrapped?,_:_OptionalNilComparisonType)*/
    Optional.infix_33_61 = function ($info, lhs, rhs) {
        return lhs != rhs;
    };
    /*Swift.(file).Optional.==infix(_:_OptionalNilComparisonType,_:Wrapped?)*/
    /*Swift.(file).Optional.==infix(_:_OptionalNilComparisonType,_:Wrapped?)*/
    Optional.infix_61_61 = function ($info, lhs, rhs) {
        return lhs == rhs;
    };
    /*Swift.(file).Optional.!=infix(_:_OptionalNilComparisonType,_:Wrapped?)*/
    /*Swift.(file).Optional.!=infix(_:_OptionalNilComparisonType,_:Wrapped?)*/
    Optional.infix_33_61 = function ($info, lhs, rhs) {
        return lhs != rhs;
    };
    /*Swift.(file).Optional.encode(to:Encoder)*/
    /*Swift.(file).Encodable.encode(to:Encoder)*/
    Optional.prototype.encodeTo = function ($info, encoder) {
    };
    /*Swift.(file).Optional.init(from:Decoder)*/
    /*Swift.(file).Decodable.init(from:Decoder)*/
    Optional.prototype.initFromDecoder = function ($info, decoder) {
        return decoder;
    };
    /*Swift.(file).Optional.debugDescription*/ /*
    debugDescription$get() {
    return this.debugDescription
    }
    get debugDescription() { return this.debugDescription$get() }*/ ;
    /*Swift.(file).Optional.customMirror*/ /*
    customMirror$get() {
    return this.customMirror
    }
    get customMirror() { return this.customMirror$get() }*/ ;
    /*Swift.(file).Optional.hash(into:Hasher)*/
    /*Swift.(file).Hashable.hash(into:Hasher)*/
    Optional.prototype.hashInto = function ($info, hasher$inout) {
    };
    /*Swift.(file).Optional.hashValue*/ /*
    hashValue$get() {
    return this.hashValue
    }
    get hashValue() { return this.hashValue$get() }*/ ;
    Optional.$infoAddress = '0x7fb851809060';
    return Optional;
}());
var OptionSet$implementation = /** @class */ (function () {
    function OptionSet$implementation() {
    }
    /*Swift.(file).OptionSet.union(_:Self)*/
    /*Swift.(file).OptionSet.union(_:Self)*/
    OptionSet$implementation.prototype.union = function ($info, other) {
    };
    /*Swift.(file).OptionSet.intersection(_:Self)*/
    /*Swift.(file).OptionSet.intersection(_:Self)*/
    OptionSet$implementation.prototype.intersection = function ($info, other) {
    };
    /*Swift.(file).OptionSet.symmetricDifference(_:Self)*/
    /*Swift.(file).OptionSet.symmetricDifference(_:Self)*/
    OptionSet$implementation.prototype.symmetricDifference = function ($info, other) {
    };
    /*Swift.(file).OptionSet.contains(_:Self)*/
    /*Swift.(file).OptionSet.contains(_:Self)*/
    OptionSet$implementation.prototype.contains = function ($info, member) {
    };
    /*Swift.(file).OptionSet.insert(_:Self.Element)*/
    /*Swift.(file).OptionSet.insert(_:Self.Element)*/
    OptionSet$implementation.prototype.insert = function ($info, newMember) {
    };
    /*Swift.(file).OptionSet.remove(_:Self.Element)*/
    /*Swift.(file).OptionSet.remove(_:Self.Element)*/
    OptionSet$implementation.prototype.remove = function ($info, member) {
    };
    /*Swift.(file).OptionSet.update(with:Self.Element)*/
    /*Swift.(file).OptionSet.update(with:Self.Element)*/
    OptionSet$implementation.prototype.updateWith = function ($info, newMember) {
    };
    /*Swift.(file).OptionSet.init()*/
    /*Swift.(file).OptionSet.init()*/
    OptionSet$implementation.prototype.init = function ($info) {
    };
    /*Swift.(file).OptionSet.formUnion(_:Self)*/
    /*Swift.(file).OptionSet.formUnion(_:Self)*/
    OptionSet$implementation.prototype.formUnion = function ($info, other) {
    };
    /*Swift.(file).OptionSet.formIntersection(_:Self)*/
    /*Swift.(file).OptionSet.formIntersection(_:Self)*/
    OptionSet$implementation.prototype.formIntersection = function ($info, other) {
    };
    /*Swift.(file).OptionSet.formSymmetricDifference(_:Self)*/
    /*Swift.(file).OptionSet.formSymmetricDifference(_:Self)*/
    OptionSet$implementation.prototype.formSymmetricDifference = function ($info, other) {
    };
    return OptionSet$implementation;
}());
if (typeof SetAlgebra$implementation != 'undefined')
    _mixin(OptionSet$implementation, SetAlgebra$implementation, false);
if (typeof RawRepresentable$implementation != 'undefined')
    _mixin(OptionSet$implementation, RawRepresentable$implementation, false);
var Never = /** @class */ (function () {
    function Never() {
    }
    /*Swift.(file).Never.==(_:Never,_:Never)*/
    /*Swift.(file).Equatable.==infix(_:Self,_:Self)*/
    Never.infix_61_61 = function ($info, a, b) {
        return a == b;
    };
    /*Swift.(file).Never.<infix(_:Never,_:Never)*/
    /*Swift.(file).Comparable.<infix(_:Self,_:Self)*/
    Never.infix_60 = function ($info, lhs, rhs) {
        return lhs < rhs;
    };
    /*Swift.(file).Never.hashValue*/ /*
    hashValue$get() {
    return this.hashValue
    }
    get hashValue() { return this.hashValue$get() }*/ ;
    /*Swift.(file).Never.hash(into:Hasher)*/
    /*Swift.(file).Hashable.hash(into:Hasher)*/
    Never.prototype.hashInto = function ($info, hasher$inout) {
    };
    Never.$infoAddress = '0x7fb851829978';
    return Never;
}());
var PartialRangeFrom = /** @class */ (function () {
    function PartialRangeFrom() {
    }
    /*Swift.(file).PartialRangeFrom.init(_:Bound)*/
    /*Swift.(file).PartialRangeFrom.init(_:Bound)*/
    PartialRangeFrom.prototype.init = function ($info, lowerBound) {
        return lowerBound;
    };
    /*Swift.(file).PartialRangeFrom.relative(to:C)*/
    /*Swift.(file).RangeExpression.relative(to:C)*/
    PartialRangeFrom.prototype.relativeTo = function ($info, collection) {
    };
    /*Swift.(file).PartialRangeFrom.contains(_:Bound)*/
    /*Swift.(file).RangeExpression.contains(_:Self.Bound)*/
    PartialRangeFrom.prototype.contains = function ($info, _element) {
    };
    /*Swift.(file).PartialRangeFrom.makeIterator()*/
    /*Swift.(file).Sequence.makeIterator()*/
    PartialRangeFrom.prototype.makeIterator = function ($info) {
        var _this = this;
        return new SwiftIterator(function (current) { return _this.contains(null, current + _this.lowerBound) ? current + _this.lowerBound : null; });
    };
    var _10;
    PartialRangeFrom.$struct = true;
    PartialRangeFrom.$infoAddress = '0x7fb851248ef0';
    PartialRangeFrom.Iterator = (_10 = /** @class */ (function () {
            function class_34() {
            }
            /*Swift.(file).PartialRangeFrom.Iterator.init(_current:Bound)*/
            /*Swift.(file).PartialRangeFrom.Iterator.init(_current:Bound)*/
            class_34.prototype.init_current = function ($info, _current) {
                return _current;
            };
            /*Swift.(file).PartialRangeFrom.Iterator.next()*/
            /*Swift.(file).IteratorProtocol.next()*/
            class_34.prototype.next = function ($info) {
            };
            return class_34;
        }()),
        _10.$struct = true,
        _10.$infoAddress = '0x7fb852007f60',
        _10);
    return PartialRangeFrom;
}());
if (typeof IteratorProtocol$implementation != 'undefined')
    _mixin(PartialRangeFrom.Iterator, IteratorProtocol$implementation, false);
if (typeof RangeExpression$implementation != 'undefined')
    _mixin(PartialRangeFrom, RangeExpression$implementation, false);
if (typeof Sequence$implementation != 'undefined')
    _mixin(PartialRangeFrom, Sequence$implementation, false);
var RangeReplaceableCollection$implementation = /** @class */ (function () {
    function RangeReplaceableCollection$implementation() {
    }
    /*Swift.(file).RangeReplaceableCollection.+infix(_:Self,_:Other)*/
    /*Swift.(file).RangeReplaceableCollection.+infix(_:Self,_:Other)*/
    RangeReplaceableCollection$implementation.infix_43 = function ($info, lhs, rhs) {
        return lhs + rhs;
    };
    /*Swift.(file).RangeReplaceableCollection.+infix(_:Other,_:Self)*/
    /*Swift.(file).RangeReplaceableCollection.+infix(_:Other,_:Self)*/
    RangeReplaceableCollection$implementation.infix_43 = function ($info, lhs, rhs) {
        return lhs + rhs;
    };
    /*Swift.(file).RangeReplaceableCollection.+=infix(_:Self,_:Other)*/
    /*Swift.(file).RangeReplaceableCollection.+=infix(_:Self,_:Other)*/
    RangeReplaceableCollection$implementation.infix_43_61 = function ($info, lhs$inout, rhs) {
        lhs$inout.set(lhs$inout.get() + rhs);
    };
    /*Swift.(file).RangeReplaceableCollection.+infix(_:Self,_:Other)*/
    /*Swift.(file).RangeReplaceableCollection.+infix(_:Self,_:Other)*/
    RangeReplaceableCollection$implementation.infix_43 = function ($info, lhs, rhs) {
        return lhs + rhs;
    };
    /*Swift.(file).RangeReplaceableCollection.init(repeating:Self.Element,count:Int)*/
    /*Swift.(file).RangeReplaceableCollection.init(repeating:Self.Element,count:Int)*/
    RangeReplaceableCollection$implementation.prototype.initRepeatingCountInt = function ($info, repeatedValue, count) {
    };
    /*Swift.(file).RangeReplaceableCollection.init(_:S)*/
    /*Swift.(file).RangeReplaceableCollection.init(_:S)*/
    RangeReplaceableCollection$implementation.prototype.initBuffer = function ($info, _elements) {
        return _elements;
    };
    /*Swift.(file).RangeReplaceableCollection.append(_:Self.Element)*/
    /*Swift.(file).RangeReplaceableCollection.append(_:Self.Element)*/
    RangeReplaceableCollection$implementation.prototype.append = function ($info, newElement) {
    };
    /*Swift.(file).RangeReplaceableCollection.append(contentsOf:S)*/
    /*Swift.(file).RangeReplaceableCollection.append(contentsOf:S)*/
    RangeReplaceableCollection$implementation.prototype.appendContentsOf = function ($info, newElements) {
    };
    /*Swift.(file).RangeReplaceableCollection.insert(_:Self.Element,at:Self.Index)*/
    /*Swift.(file).RangeReplaceableCollection.insert(_:Self.Element,at:Self.Index)*/
    RangeReplaceableCollection$implementation.prototype.insertAt = function ($info, newElement, i) {
    };
    /*Swift.(file).RangeReplaceableCollection.insert(contentsOf:C,at:Self.Index)*/
    /*Swift.(file).RangeReplaceableCollection.insert(contentsOf:C,at:Self.Index)*/
    RangeReplaceableCollection$implementation.prototype.insertContentsOfAt = function ($info, newElements, i) {
        this.splice.apply(this, [i, 0].concat(newElements));
    };
    /*Swift.(file).RangeReplaceableCollection.remove(at:Self.Index)*/
    /*Swift.(file).RangeReplaceableCollection.remove(at:Self.Index)*/
    RangeReplaceableCollection$implementation.prototype.removeAt = function ($info, position) {
    };
    /*Swift.(file).RangeReplaceableCollection.removeSubrange(_:Range<Self.Index>)*/
    /*Swift.(file).RangeReplaceableCollection.removeSubrange(_:Range<Self.Index>)*/
    RangeReplaceableCollection$implementation.prototype.removeSubrange = function ($info, bounds) {
    };
    /*Swift.(file).RangeReplaceableCollection.removeFirst(_:Int)*/
    /*Swift.(file).RangeReplaceableCollection.removeFirst(_:Int)*/
    RangeReplaceableCollection$implementation.prototype.removeFirst = function ($info, k) {
    };
    /*Swift.(file).RangeReplaceableCollection.removeFirst()*/
    /*Swift.(file).RangeReplaceableCollection.removeFirst()*/
    RangeReplaceableCollection$implementation.prototype.removeFirst = function ($info) {
    };
    /*Swift.(file).RangeReplaceableCollection.removeAll(keepingCapacity:Bool)*/
    /*Swift.(file).RangeReplaceableCollection.removeAll(keepingCapacity:Bool)*/
    RangeReplaceableCollection$implementation.prototype.removeAllKeepingCapacity = function ($info, keepCapacity) {
    };
    /*Swift.(file).RangeReplaceableCollection.reserveCapacity(_:Int)*/
    /*Swift.(file).RangeReplaceableCollection.reserveCapacity(_:Int)*/
    RangeReplaceableCollection$implementation.prototype.reserveCapacity = function ($info, n) {
    };
    /*Swift.(file).RangeReplaceableCollection.removeFirst()*/
    /*Swift.(file).RangeReplaceableCollection.removeFirst()*/
    RangeReplaceableCollection$implementation.prototype.removeFirst = function ($info) {
    };
    /*Swift.(file).RangeReplaceableCollection.removeFirst(_:Int)*/
    /*Swift.(file).RangeReplaceableCollection.removeFirst(_:Int)*/
    RangeReplaceableCollection$implementation.prototype.removeFirst = function ($info, k) {
    };
    /*Swift.(file).RangeReplaceableCollection.replaceSubrange(_:R,with:C)*/
    /*Swift.(file).RangeReplaceableCollection.replaceSubrange(_:R,with:C)*/
    RangeReplaceableCollection$implementation.prototype.replaceSubrangeWith = function ($info, subrange, newElements) {
    };
    /*Swift.(file).RangeReplaceableCollection.removeSubrange(_:R)*/
    /*Swift.(file).RangeReplaceableCollection.removeSubrange(_:R)*/
    RangeReplaceableCollection$implementation.prototype.removeSubrange = function ($info, bounds) {
    };
    /*Swift.(file).RangeReplaceableCollection.popLast()*/
    /*Swift.(file).RangeReplaceableCollection.popLast()*/
    RangeReplaceableCollection$implementation.prototype.popLast = function ($info) {
    };
    /*Swift.(file).RangeReplaceableCollection.removeLast()*/
    /*Swift.(file).RangeReplaceableCollection.removeLast()*/
    RangeReplaceableCollection$implementation.prototype.removeLast = function ($info) {
    };
    /*Swift.(file).RangeReplaceableCollection.removeLast(_:Int)*/
    /*Swift.(file).RangeReplaceableCollection.removeLast(_:Int)*/
    RangeReplaceableCollection$implementation.prototype.removeLast = function ($info, k) {
    };
    /*Swift.(file).RangeReplaceableCollection.popLast()*/
    /*Swift.(file).RangeReplaceableCollection.popLast()*/
    RangeReplaceableCollection$implementation.prototype.popLast = function ($info) {
    };
    /*Swift.(file).RangeReplaceableCollection.removeLast()*/
    /*Swift.(file).RangeReplaceableCollection.removeLast()*/
    RangeReplaceableCollection$implementation.prototype.removeLast = function ($info) {
    };
    /*Swift.(file).RangeReplaceableCollection.removeLast(_:Int)*/
    /*Swift.(file).RangeReplaceableCollection.removeLast(_:Int)*/
    RangeReplaceableCollection$implementation.prototype.removeLast = function ($info, k) {
    };
    /*Swift.(file).RangeReplaceableCollection.filter(_:(Self.Element) throws -> Bool)*/
    /*Swift.(file).RangeReplaceableCollection.filter(_:(Self.Element) throws -> Bool)*/
    RangeReplaceableCollection$implementation.prototype.filterSwift = function ($info, isIncluded) {
    };
    /*Swift.(file).RangeReplaceableCollection.removeAll(where:(Self.Element) throws -> Bool)*/
    /*Swift.(file).RangeReplaceableCollection.removeAll(where:(Self.Element) throws -> Bool)*/
    RangeReplaceableCollection$implementation.prototype.removeAllWhere = function ($info, shouldBeRemoved) {
    };
    /*Swift.(file).RangeReplaceableCollection.removeAll(where:(Self.Element) throws -> Bool)*/
    /*Swift.(file).RangeReplaceableCollection.removeAll(where:(Self.Element) throws -> Bool)*/
    RangeReplaceableCollection$implementation.prototype.removeAllWhere = function ($info, shouldBeRemoved) {
    };
    return RangeReplaceableCollection$implementation;
}());
if (typeof Collection$implementation != 'undefined')
    _mixin(RangeReplaceableCollection$implementation, Collection$implementation, false);
var MIO_Mixin_Set = /** @class */ (function () {
    function MIO_Mixin_Set() {
    }
    /*Swift.(file).Set.init(minimumCapacity:Int)*/
    /*Swift.(file).Set.init(minimumCapacity:Int)*/
    MIO_Mixin_Set.prototype.initMinimumCapacityInt = function ($info, minimumCapacity) {
        return minimumCapacity;
    };
    /*Swift.(file).Set.init(_native:_NativeSet<Element>)*/
    /*Swift.(file).Set.init(_native:_NativeSet<Element>)*/
    MIO_Mixin_Set.prototype.init_native_NativeSet = function ($info, _native) {
        return _native;
    };
    /*Swift.(file).Set.init(_cocoa:_CocoaSet)*/
    /*Swift.(file).Set.init(_cocoa:_CocoaSet)*/
    MIO_Mixin_Set.prototype.init_cocoa_CocoaSet = function ($info, _cocoa) {
        return _cocoa;
    };
    /*Swift.(file).Set.init(_immutableCocoaSet:AnyObject)*/
    /*Swift.(file).Set.init(_immutableCocoaSet:AnyObject)*/
    MIO_Mixin_Set.prototype.init_immutableCocoaSetAnyObject = function ($info, _immutableCocoaSet) {
        return _immutableCocoaSet;
    };
    /*Swift.(file).Set.==infix(_:Set<Element>,_:Set<Element>)*/
    /*Swift.(file).Equatable.==infix(_:Self,_:Self)*/
    MIO_Mixin_Set.infix_61_61 = function ($info, lhs, rhs) {
        return lhs == rhs;
    };
    /*Swift.(file).Set.encode(to:Encoder)*/
    /*Swift.(file).Encodable.encode(to:Encoder)*/
    MIO_Mixin_Set.prototype.encodeTo = function ($info, encoder) {
    };
    /*Swift.(file).Set.init(from:Decoder)*/
    /*Swift.(file).Decodable.init(from:Decoder)*/
    MIO_Mixin_Set.prototype.initFromDecoder = function ($info, decoder) {
        return decoder;
    };
    /*Swift.(file).Set.init(arrayLiteral:[Element])*/
    /*Swift.(file).ExpressibleByArrayLiteral.init(arrayLiteral:[Self.ArrayLiteralElement])*/
    MIO_Mixin_Set.prototype.initArrayLiteralArray = function ($info, _elements) {
        return _elements;
    };
    /*Swift.(file).Set.makeIterator()*/
    /*Swift.(file).Sequence.makeIterator()*/
    /*Swift.(file).Collection.makeIterator()*/
    MIO_Mixin_Set.prototype.makeIterator = function ($info) {
        var _this = this;
        return new SwiftIterator(function (current) { return _this.contains(null, current + _this.lowerBound) ? current + _this.lowerBound : null; });
    };
    /*Swift.(file).Set.contains(_:Element)*/
    /*Swift.(file).SetAlgebra.contains(_:Self.Element)*/
    MIO_Mixin_Set.prototype.contains = function ($info, member) {
    };
    /*Swift.(file).Set.filter(_:(Element) throws -> Bool)*/
    /*Swift.(file).Set.filter(_:(Element) throws -> Bool)*/
    MIO_Mixin_Set.prototype.filterSwift = function ($info, isIncluded) {
    };
    /*Swift.(file).Set.startIndex*/ /*
    startIndex$get() {
    return this.startIndex
    }
    get startIndex() { return this.startIndex$get() }*/ ;
    /*Swift.(file).Set.endIndex*/ /*
    endIndex$get() {
    return this.endIndex
    }
    get endIndex() { return this.endIndex$get() }*/ ;
    /*Swift.(file).Set.subscript(_:Set<Element>.Index)*/
    /*Swift.(file).Collection.subscript(_:Self.Index)*/
    MIO_Mixin_Set.prototype.subscript$get = function ($info, position) {
        return this[position];
    };
    /*Swift.(file).Set.index(after:Set<Element>.Index)*/
    /*Swift.(file).Collection.index(after:Self.Index)*/
    MIO_Mixin_Set.prototype.indexAfter = function ($info, i) {
    };
    /*Swift.(file).Set.formIndex(after:Set<Element>.Index)*/
    /*Swift.(file).Collection.formIndex(after:Self.Index)*/
    MIO_Mixin_Set.prototype.formIndexAfter = function ($info, i$inout) {
    };
    /*Swift.(file).Set.firstIndex(of:Element)*/
    /*Swift.(file).Set.firstIndex(of:Element)*/
    MIO_Mixin_Set.prototype.firstIndexOf = function ($info, member) {
    };
    /*Swift.(file).Set.count*/
    MIO_Mixin_Set.prototype.count$get = function () {
        return this.size;
    };
    Object.defineProperty(MIO_Mixin_Set.prototype, "count", {
        get: function () { return this.count$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).Set.isEmpty*/ /*
    isEmpty$get() {
    return this.isEmpty
    }
    get isEmpty() { return this.isEmpty$get() }*/ ;
    /*Swift.(file).Set.hash(into:Hasher)*/
    /*Swift.(file).Hashable.hash(into:Hasher)*/
    MIO_Mixin_Set.prototype.hashInto = function ($info, hasher$inout) {
    };
    /*Swift.(file).Set.hashValue*/ /*
    hashValue$get() {
    return this.hashValue
    }
    get hashValue() { return this.hashValue$get() }*/ ;
    /*Swift.(file).Set.insert(_:Element)*/
    /*Swift.(file).SetAlgebra.insert(_:Self.Element)*/
    MIO_Mixin_Set.prototype.insert = function ($info, newMember) {
        this.add(newMember);
    };
    /*Swift.(file).Set.update(with:Element)*/
    /*Swift.(file).SetAlgebra.update(with:Self.Element)*/
    MIO_Mixin_Set.prototype.updateWith = function ($info, newMember) {
    };
    /*Swift.(file).Set.remove(_:Element)*/
    /*Swift.(file).SetAlgebra.remove(_:Self.Element)*/
    MIO_Mixin_Set.prototype.remove = function ($info, member) {
    };
    /*Swift.(file).Set.remove(at:Set<Element>.Index)*/
    /*Swift.(file).Set.remove(at:Set<Element>.Index)*/
    MIO_Mixin_Set.prototype.removeAt = function ($info, position) {
    };
    /*Swift.(file).Set.removeAll(keepingCapacity:Bool)*/
    /*Swift.(file).Set.removeAll(keepingCapacity:Bool)*/
    MIO_Mixin_Set.prototype.removeAllKeepingCapacity = function ($info, keepCapacity) {
    };
    /*Swift.(file).Set.removeFirst()*/
    /*Swift.(file).Set.removeFirst()*/
    MIO_Mixin_Set.prototype.removeFirst = function ($info) {
    };
    /*Swift.(file).Set.init()*/
    /*Swift.(file).SetAlgebra.init()*/
    MIO_Mixin_Set.prototype.init = function ($info) {
        return new Set();
    };
    /*Swift.(file).Set.init(_:Source)*/
    /*Swift.(file).SetAlgebra.init(_:S)*/
    MIO_Mixin_Set.prototype.initSource = function ($info, sequence) {
        return new Set(sequence);
    };
    /*Swift.(file).Set.isSubset(of:S)*/
    /*Swift.(file).Set.isSubset(of:S)*/
    MIO_Mixin_Set.prototype.isSubsetOf = function ($info, possibleSuperset) {
    };
    /*Swift.(file).Set.isStrictSubset(of:S)*/
    /*Swift.(file).Set.isStrictSubset(of:S)*/
    MIO_Mixin_Set.prototype.isStrictSubsetOf = function ($info, possibleStrictSuperset) {
    };
    /*Swift.(file).Set.isSuperset(of:S)*/
    /*Swift.(file).Set.isSuperset(of:S)*/
    MIO_Mixin_Set.prototype.isSupersetOf = function ($info, possibleSubset) {
    };
    /*Swift.(file).Set.isStrictSuperset(of:S)*/
    /*Swift.(file).Set.isStrictSuperset(of:S)*/
    MIO_Mixin_Set.prototype.isStrictSupersetOf = function ($info, possibleStrictSubset) {
    };
    /*Swift.(file).Set.isDisjoint(with:S)*/
    /*Swift.(file).Set.isDisjoint(with:S)*/
    MIO_Mixin_Set.prototype.isDisjointWith = function ($info, other) {
    };
    /*Swift.(file).Set.union(_:S)*/
    /*Swift.(file).SetAlgebra.union(_:Self)*/
    MIO_Mixin_Set.prototype.union = function ($info, other) {
    };
    /*Swift.(file).Set.formUnion(_:S)*/
    /*Swift.(file).SetAlgebra.formUnion(_:Self)*/
    MIO_Mixin_Set.prototype.formUnion = function ($info, other) {
    };
    /*Swift.(file).Set.subtracting(_:S)*/
    /*Swift.(file).Set.subtracting(_:S)*/
    MIO_Mixin_Set.prototype.subtracting = function ($info, other) {
    };
    /*Swift.(file).Set.subtract(_:S)*/
    /*Swift.(file).Set.subtract(_:S)*/
    MIO_Mixin_Set.prototype.subtract = function ($info, other) {
    };
    /*Swift.(file).Set.intersection(_:S)*/
    /*Swift.(file).Set.intersection(_:S)*/
    MIO_Mixin_Set.prototype.intersection = function ($info, other) {
    };
    /*Swift.(file).Set.formIntersection(_:S)*/
    /*Swift.(file).SetAlgebra.formIntersection(_:Self)*/
    MIO_Mixin_Set.prototype.formIntersection = function ($info, other) {
    };
    /*Swift.(file).Set.symmetricDifference(_:S)*/
    /*Swift.(file).SetAlgebra.symmetricDifference(_:Self)*/
    MIO_Mixin_Set.prototype.symmetricDifference = function ($info, other) {
    };
    /*Swift.(file).Set.formSymmetricDifference(_:S)*/
    /*Swift.(file).Set.formSymmetricDifference(_:S)*/
    MIO_Mixin_Set.prototype.formSymmetricDifference = function ($info, other) {
    };
    /*Swift.(file).Set.description*/ /*
    description$get() {
    return this.description
    }
    get description() { return this.description$get() }*/ ;
    /*Swift.(file).Set.debugDescription*/ /*
    debugDescription$get() {
    return this.debugDescription
    }
    get debugDescription() { return this.debugDescription$get() }*/ ;
    /*Swift.(file).Set.subtract(_:Set<Element>)*/
    /*Swift.(file).SetAlgebra.subtract(_:Self)*/
    MIO_Mixin_Set.prototype.subtract = function ($info, other) {
    };
    /*Swift.(file).Set.isSubset(of:Set<Element>)*/
    /*Swift.(file).SetAlgebra.isSubset(of:Self)*/
    MIO_Mixin_Set.prototype.isSubsetOf = function ($info, other) {
    };
    /*Swift.(file).Set.isSuperset(of:Set<Element>)*/
    /*Swift.(file).SetAlgebra.isSuperset(of:Self)*/
    MIO_Mixin_Set.prototype.isSupersetOf = function ($info, other) {
    };
    /*Swift.(file).Set.isDisjoint(with:Set<Element>)*/
    /*Swift.(file).SetAlgebra.isDisjoint(with:Self)*/
    MIO_Mixin_Set.prototype.isDisjointWith = function ($info, other) {
    };
    /*Swift.(file).Set.subtracting(_:Set<Element>)*/
    /*Swift.(file).SetAlgebra.subtracting(_:Self)*/
    MIO_Mixin_Set.prototype.subtracting = function ($info, other) {
    };
    /*Swift.(file).Set.isStrictSuperset(of:Set<Element>)*/
    /*Swift.(file).Set.isStrictSuperset(of:Set<Element>)*/
    MIO_Mixin_Set.prototype.isStrictSupersetOf = function ($info, other) {
    };
    /*Swift.(file).Set.isStrictSubset(of:Set<Element>)*/
    /*Swift.(file).Set.isStrictSubset(of:Set<Element>)*/
    MIO_Mixin_Set.prototype.isStrictSubsetOf = function ($info, other) {
    };
    /*Swift.(file).Set.intersection(_:Set<Element>)*/
    /*Swift.(file).SetAlgebra.intersection(_:Self)*/
    MIO_Mixin_Set.prototype.intersection = function ($info, other) {
    };
    /*Swift.(file).Set.formSymmetricDifference(_:Set<Element>)*/
    /*Swift.(file).SetAlgebra.formSymmetricDifference(_:Self)*/
    MIO_Mixin_Set.prototype.formSymmetricDifference = function ($info, other) {
    };
    /*Swift.(file).Set.popFirst()*/
    /*Swift.(file).Set.popFirst()*/
    MIO_Mixin_Set.prototype.popFirst = function ($info) {
    };
    /*Swift.(file).Set.capacity*/ /*
    capacity$get() {
    return this.capacity
    }
    get capacity() { return this.capacity$get() }*/ ;
    /*Swift.(file).Set.reserveCapacity(_:Int)*/
    /*Swift.(file).Set.reserveCapacity(_:Int)*/
    MIO_Mixin_Set.prototype.reserveCapacity = function ($info, minimumCapacity) {
    };
    /*Swift.(file).Set.insert(_:ConcreteElement)*/
    /*Swift.(file).Set.insert(_:ConcreteElement)*/
    MIO_Mixin_Set.prototype.insertConcreteElement = function ($info, newMember) {
    };
    /*Swift.(file).Set.update(with:ConcreteElement)*/
    /*Swift.(file).Set.update(with:ConcreteElement)*/
    MIO_Mixin_Set.prototype.updateWith = function ($info, newMember) {
    };
    /*Swift.(file).Set.remove(_:ConcreteElement)*/
    /*Swift.(file).Set.remove(_:ConcreteElement)*/
    MIO_Mixin_Set.prototype.remove = function ($info, member) {
    };
    var _11, _12, _13, _14, _15;
    MIO_Mixin_Set.$struct = true;
    MIO_Mixin_Set.$mixin = true;
    MIO_Mixin_Set.$infoAddress = '0x7fb8528eb1a0';
    MIO_Mixin_Set.Index = (_11 = /** @class */ (function () {
            function class_35() {
            }
            /*Swift.(file).Set.Index.init(_variant:Set<Element>.Index._Variant)*/
            /*Swift.(file).Set.Index.init(_variant:Set<Element>.Index._Variant)*/
            class_35.prototype.init_variantSetIndex_Variant = function ($info, _variant) {
                return _variant;
            };
            /*Swift.(file).Set.Index.init(_native:_HashTable.Index)*/
            /*Swift.(file).Set.Index.init(_native:_HashTable.Index)*/
            class_35.prototype.init_native_HashTableIndex = function ($info, index) {
                return index;
            };
            /*Swift.(file).Set.Index.init(_cocoa:_CocoaSet.Index)*/
            /*Swift.(file).Set.Index.init(_cocoa:_CocoaSet.Index)*/
            class_35.prototype.init_cocoa_CocoaSetIndex = function ($info, index) {
                return index;
            };
            /*Swift.(file).Index.==infix(_:Set<Element>.Index,_:Set<Element>.Index)*/
            /*Swift.(file).Equatable.==infix(_:Self,_:Self)*/
            class_35.infix_61_61 = function ($info, lhs, rhs) {
                return lhs == rhs;
            };
            /*Swift.(file).Index.<infix(_:Set<Element>.Index,_:Set<Element>.Index)*/
            /*Swift.(file).Comparable.<infix(_:Self,_:Self)*/
            class_35.infix_60 = function ($info, lhs, rhs) {
                return lhs < rhs;
            };
            /*Swift.(file).Index.hash(into:Hasher)*/
            /*Swift.(file).Hashable.hash(into:Hasher)*/
            class_35.prototype.hashInto = function ($info, hasher$inout) {
            };
            /*Swift.(file).Index.hashValue*/ /*
            hashValue$get() {
            return this.hashValue
            }
            get hashValue() { return this.hashValue$get() }*/ ;
            return class_35;
        }()),
        _11.$struct = true,
        _11.$infoAddress = '0x7fb851815a48',
        _11._Variant = (_12 = /** @class */ (function () {
                function class_36() {
                }
                class_36._native = function () { return Object.assign(new MIO_Mixin_Set.Index._Variant(), __assign({ rawValue: "_native" }, Array.from(arguments).slice(1))); };
                class_36.cocoa = function () { return Object.assign(new MIO_Mixin_Set.Index._Variant(), __assign({ rawValue: "cocoa" }, Array.from(arguments).slice(1))); };
                return class_36;
            }()),
            _12.$infoAddress = '0x7fb851cef018',
            _12),
        _11);
    MIO_Mixin_Set.Iterator = (_13 = /** @class */ (function () {
            function class_37() {
            }
            /*Swift.(file).Set.Iterator.init(_variant:Set<Element>.Iterator._Variant)*/
            /*Swift.(file).Set.Iterator.init(_variant:Set<Element>.Iterator._Variant)*/
            class_37.prototype.init_variantSetIterator_Variant = function ($info, _variant) {
                return _variant;
            };
            /*Swift.(file).Set.Iterator.init(_native:_NativeSet<Set<Element>.Iterator.Element>.Iterator)*/
            /*Swift.(file).Set.Iterator.init(_native:_NativeSet<Set<Element>.Iterator.Element>.Iterator)*/
            class_37.prototype.init_native_NativeSetIterator = function ($info, _native) {
                return _native;
            };
            /*Swift.(file).Set.Iterator.init(_cocoa:_CocoaSet.Iterator)*/
            /*Swift.(file).Set.Iterator.init(_cocoa:_CocoaSet.Iterator)*/
            class_37.prototype.init_cocoa_CocoaSetIterator = function ($info, _cocoa) {
                return _cocoa;
            };
            /*Swift.(file).Iterator.next()*/
            /*Swift.(file).IteratorProtocol.next()*/
            class_37.prototype.next = function ($info) {
            };
            /*Swift.(file).Iterator.customMirror*/ /*
            customMirror$get() {
            return this.customMirror
            }
            get customMirror() { return this.customMirror$get() }*/ ;
            return class_37;
        }()),
        _13.$struct = true,
        _13.$infoAddress = '0x7fb85125c4c8',
        _13._Variant = (_14 = /** @class */ (function () {
                function class_38() {
                }
                class_38._native = function () { return Object.assign(new MIO_Mixin_Set.Iterator._Variant(), __assign({ rawValue: "_native" }, Array.from(arguments).slice(1))); };
                class_38.cocoa = function () { return Object.assign(new MIO_Mixin_Set.Iterator._Variant(), __assign({ rawValue: "cocoa" }, Array.from(arguments).slice(1))); };
                return class_38;
            }()),
            _14.$infoAddress = '0x7fb851cf1e70',
            _14),
        _13);
    MIO_Mixin_Set._Variant = (_15 = /** @class */ (function () {
            function class_39() {
            }
            /*Swift.(file).Set._Variant.init(dummy:())*/
            /*Swift.(file).Set._Variant.init(dummy:())*/
            class_39.prototype.initDummytuple_type = function ($info, dummy) {
                return dummy;
            };
            /*Swift.(file).Set._Variant.init(native:_NativeSet<Element>)*/
            /*Swift.(file).Set._Variant.init(native:_NativeSet<Element>)*/
            class_39.prototype.initNative_NativeSet = function ($info, _native) {
                return _native;
            };
            /*Swift.(file).Set._Variant.init(cocoa:_CocoaSet)*/
            /*Swift.(file).Set._Variant.init(cocoa:_CocoaSet)*/
            class_39.prototype.initCocoa_CocoaSet = function ($info, cocoa) {
                return cocoa;
            };
            /*Swift.(file)._Variant.guaranteedNative*/ /*
            guaranteedNative$get() {
            return this.guaranteedNative
            }
            get guaranteedNative() { return this.guaranteedNative$get() }*/ ;
            /*Swift.(file)._Variant.isUniquelyReferenced()*/
            /*Swift.(file)._Variant.isUniquelyReferenced()*/
            class_39.prototype.isUniquelyReferenced = function ($info) {
            };
            /*Swift.(file)._Variant.isNative*/ /*
            isNative$get() {
            return this.isNative
            }
            get isNative() { return this.isNative$get() }*/ ;
            /*Swift.(file)._Variant.asNative*/ /*
            asNative$get() {
            return this.asNative
            }
            get asNative() { return this.asNative$get() }*/ ;
            /*Swift.(file)._Variant.asCocoa*/ /*
            asCocoa$get() {
            return this.asCocoa
            }
            get asCocoa() { return this.asCocoa$get() }*/ ;
            /*Swift.(file)._Variant.reserveCapacity(_:Int)*/
            /*Swift.(file)._Variant.reserveCapacity(_:Int)*/
            class_39.prototype.reserveCapacity = function ($info, capacity) {
            };
            /*Swift.(file)._Variant.capacity*/ /*
            capacity$get() {
            return this.capacity
            }
            get capacity() { return this.capacity$get() }*/ ;
            /*Swift.(file)._Variant.startIndex*/ /*
            startIndex$get() {
            return this.startIndex
            }
            get startIndex() { return this.startIndex$get() }*/ ;
            /*Swift.(file)._Variant.endIndex*/ /*
            endIndex$get() {
            return this.endIndex
            }
            get endIndex() { return this.endIndex$get() }*/ ;
            /*Swift.(file)._Variant.index(after:Set<Element>._Variant.Index)*/
            /*Swift.(file)._SetBuffer.index(after:Self.Index)*/
            class_39.prototype.indexAfter = function ($info, index) {
            };
            /*Swift.(file)._Variant.formIndex(after:Set<Element>._Variant.Index)*/
            /*Swift.(file)._Variant.formIndex(after:Set<Element>._Variant.Index)*/
            class_39.prototype.formIndexAfter = function ($info, index$inout) {
            };
            /*Swift.(file)._Variant.index(for:Element)*/
            /*Swift.(file)._SetBuffer.index(for:Self.Element)*/
            class_39.prototype.indexFor = function ($info, _element) {
            };
            /*Swift.(file)._Variant.count*/ /*
            count$get() {
            return this.count
            }
            get count() { return this.count$get() }*/ ;
            /*Swift.(file)._Variant.contains(_:Element)*/
            /*Swift.(file)._SetBuffer.contains(_:Self.Element)*/
            class_39.prototype.contains = function ($info, member) {
            };
            /*Swift.(file)._Variant.element(at:Set<Element>._Variant.Index)*/
            /*Swift.(file)._SetBuffer.element(at:Self.Index)*/
            class_39.prototype.elementAt = function ($info, index) {
            };
            /*Swift.(file)._Variant.update(with:Element)*/
            /*Swift.(file)._Variant.update(with:Element)*/
            class_39.prototype.updateWith = function ($info, value) {
            };
            /*Swift.(file)._Variant.insert(_:Element)*/
            /*Swift.(file)._Variant.insert(_:Element)*/
            class_39.prototype.insert = function ($info, _element) {
            };
            /*Swift.(file)._Variant.remove(at:Set<Element>._Variant.Index)*/
            /*Swift.(file)._Variant.remove(at:Set<Element>._Variant.Index)*/
            class_39.prototype.removeAt = function ($info, index) {
            };
            /*Swift.(file)._Variant.remove(_:Element)*/
            /*Swift.(file)._Variant.remove(_:Element)*/
            class_39.prototype.remove = function ($info, member) {
            };
            /*Swift.(file)._Variant.removeAll(keepingCapacity:Bool)*/
            /*Swift.(file)._Variant.removeAll(keepingCapacity:Bool)*/
            class_39.prototype.removeAllKeepingCapacity = function ($info, keepCapacity) {
            };
            /*Swift.(file)._Variant.makeIterator()*/
            /*Swift.(file)._Variant.makeIterator()*/
            class_39.prototype.makeIterator = function ($info) {
            };
            return class_39;
        }()),
        _15.$struct = true,
        _15.$infoAddress = '0x7fb851279ab0',
        _15);
    return MIO_Mixin_Set;
}());
if (typeof Equatable$implementation != 'undefined')
    _mixin(MIO_Mixin_Set.Index, Equatable$implementation, false);
if (typeof Comparable$implementation != 'undefined')
    _mixin(MIO_Mixin_Set.Index, Comparable$implementation, false);
if (typeof Hashable$implementation != 'undefined')
    _mixin(MIO_Mixin_Set.Index, Hashable$implementation, false);
if (typeof IteratorProtocol$implementation != 'undefined')
    _mixin(MIO_Mixin_Set.Iterator, IteratorProtocol$implementation, false);
if (typeof CustomReflectable$implementation != 'undefined')
    _mixin(MIO_Mixin_Set.Iterator, CustomReflectable$implementation, false);
if (typeof _SetBuffer$implementation != 'undefined')
    _mixin(MIO_Mixin_Set._Variant, _SetBuffer$implementation, false);
if (typeof Equatable$implementation != 'undefined')
    _mixin(MIO_Mixin_Set, Equatable$implementation, false);
if (typeof Encodable$implementation != 'undefined')
    _mixin(MIO_Mixin_Set, Encodable$implementation, false);
if (typeof Decodable$implementation != 'undefined')
    _mixin(MIO_Mixin_Set, Decodable$implementation, false);
if (typeof ExpressibleByArrayLiteral$implementation != 'undefined')
    _mixin(MIO_Mixin_Set, ExpressibleByArrayLiteral$implementation, false);
if (typeof Sequence$implementation != 'undefined')
    _mixin(MIO_Mixin_Set, Sequence$implementation, false);
if (typeof Collection$implementation != 'undefined')
    _mixin(MIO_Mixin_Set, Collection$implementation, false);
if (typeof Hashable$implementation != 'undefined')
    _mixin(MIO_Mixin_Set, Hashable$implementation, false);
if (typeof _HasCustomAnyHashableRepresentation$implementation != 'undefined')
    _mixin(MIO_Mixin_Set, _HasCustomAnyHashableRepresentation$implementation, false);
if (typeof SetAlgebra$implementation != 'undefined')
    _mixin(MIO_Mixin_Set, SetAlgebra$implementation, false);
if (typeof CustomStringConvertible$implementation != 'undefined')
    _mixin(MIO_Mixin_Set, CustomStringConvertible$implementation, false);
if (typeof CustomDebugStringConvertible$implementation != 'undefined')
    _mixin(MIO_Mixin_Set, CustomDebugStringConvertible$implementation, false);
if (typeof CustomReflectable$implementation != 'undefined')
    _mixin(MIO_Mixin_Set, CustomReflectable$implementation, false);
_mixin(Set, MIO_Mixin_Set, true);
var _SwiftSetNSEnumerator = /** @class */ (function (_super) {
    __extends(_SwiftSetNSEnumerator, _super);
    function _SwiftSetNSEnumerator() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    /*Swift.(file)._SwiftSetNSEnumerator.bridgedElements*/ /*
    bridgedElements$get() {
    return this.bridgedElements
    }
    get bridgedElements() { return this.bridgedElements$get() }*/ ;
    /*Swift.(file)._SwiftSetNSEnumerator.nextBucket*/ /*
    nextBucket$get() {
    return this.nextBucket
    }
    get nextBucket() { return this.nextBucket$get() }*/ ;
    /*Swift.(file)._SwiftSetNSEnumerator.endBucket*/ /*
    endBucket$get() {
    return this.endBucket
    }
    get endBucket() { return this.endBucket$get() }*/ ;
    /*Swift.(file)._SwiftSetNSEnumerator.init()*/
    /*Swift.(file).__SwiftNativeNSEnumerator.init()*/
    _SwiftSetNSEnumerator.prototype.init = function ($info) {
    };
    /*Swift.(file)._SwiftSetNSEnumerator.init(_:_NativeSet<Element>)*/
    /*Swift.(file)._SwiftSetNSEnumerator.init(_:_NativeSet<Element>)*/
    _SwiftSetNSEnumerator.prototype.init_NativeSet = function ($info, base) {
        return base;
    };
    /*Swift.(file)._SwiftSetNSEnumerator.init(_:_SwiftDeferredNSSet<Element>)*/
    /*Swift.(file)._SwiftSetNSEnumerator.init(_:_SwiftDeferredNSSet<Element>)*/
    _SwiftSetNSEnumerator.prototype.init_SwiftDeferredNSSet = function ($info, deferred) {
        return deferred;
    };
    /*Swift.(file)._SwiftSetNSEnumerator.bridgedElement(at:_HashTable.Bucket)*/
    /*Swift.(file)._SwiftSetNSEnumerator.bridgedElement(at:_HashTable.Bucket)*/
    _SwiftSetNSEnumerator.prototype.bridgedElementAt = function ($info, bucket) {
    };
    /*Swift.(file)._SwiftSetNSEnumerator.nextObject()*/
    /*Swift.(file)._NSEnumerator.nextObject()*/
    _SwiftSetNSEnumerator.prototype.nextObject = function ($info) {
    };
    /*Swift.(file)._SwiftSetNSEnumerator.countByEnumerating(with:UnsafeMutablePointer<_SwiftNSFastEnumerationState>,objects:UnsafeMutablePointer<AnyObject>,count:Int)*/
    /*Swift.(file)._SwiftSetNSEnumerator.countByEnumerating(with:UnsafeMutablePointer<_SwiftNSFastEnumerationState>,objects:UnsafeMutablePointer<AnyObject>,count:Int)*/
    _SwiftSetNSEnumerator.prototype.countByEnumeratingWithObjectsCount = function ($info, state, objects, count) {
    };
    _SwiftSetNSEnumerator.$infoAddress = '0x7fb85125e108';
    return _SwiftSetNSEnumerator;
}(__SwiftNativeNSEnumerator));
if (typeof _NSEnumerator$implementation != 'undefined')
    _mixin(_SwiftSetNSEnumerator, _NSEnumerator$implementation, false);
var _SwiftDeferredNSSet = /** @class */ (function (_super) {
    __extends(_SwiftDeferredNSSet, _super);
    function _SwiftDeferredNSSet() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    /*Swift.(file)._SwiftDeferredNSSet.init(_:_NativeSet<Element>)*/
    /*Swift.(file)._SwiftDeferredNSSet.init(_:_NativeSet<Element>)*/
    _SwiftDeferredNSSet.prototype.init_NativeSet = function ($info, _native) {
        return _native;
    };
    /*Swift.(file)._SwiftDeferredNSSet.bridgeElements()*/
    /*Swift.(file)._SwiftDeferredNSSet.bridgeElements()*/
    _SwiftDeferredNSSet.prototype.bridgeElements = function ($info) {
    };
    /*Swift.(file)._SwiftDeferredNSSet.init(objects:UnsafePointer<AnyObject?>,count:Int)*/
    /*Swift.(file)._NSSetCore.init(objects:UnsafePointer<AnyObject?>,count:Int)*/
    _SwiftDeferredNSSet.prototype.initObjectsUnsafePointerCountInt = function ($info, objects, count) {
    };
    /*Swift.(file)._SwiftDeferredNSSet.copy(with:_SwiftNSZone?)*/
    /*Swift.(file)._NSSetCore.copy(with:_SwiftNSZone?)*/
    /*Swift.(file)._NSCopying.copy(with:_SwiftNSZone?)*/
    _SwiftDeferredNSSet.prototype.copyWith = function ($info, zone) {
    };
    /*Swift.(file)._SwiftDeferredNSSet.member(_:AnyObject)*/
    /*Swift.(file)._NSSetCore.member(_:AnyObject)*/
    _SwiftDeferredNSSet.prototype.member = function ($info, object) {
    };
    /*Swift.(file)._SwiftDeferredNSSet.objectEnumerator()*/
    /*Swift.(file)._NSSetCore.objectEnumerator()*/
    _SwiftDeferredNSSet.prototype.objectEnumerator = function ($info) {
    };
    /*Swift.(file)._SwiftDeferredNSSet.count*/ /*
    count$get() {
    return this.count
    }
    get count() { return this.count$get() }*/ ;
    /*Swift.(file)._SwiftDeferredNSSet.countByEnumerating(with:UnsafeMutablePointer<_SwiftNSFastEnumerationState>,objects:UnsafeMutablePointer<AnyObject>?,count:Int)*/
    /*Swift.(file)._NSSetCore.countByEnumerating(with:UnsafeMutablePointer<_SwiftNSFastEnumerationState>,objects:UnsafeMutablePointer<AnyObject>?,count:Int)*/
    /*Swift.(file)._NSFastEnumeration.countByEnumerating(with:UnsafeMutablePointer<_SwiftNSFastEnumerationState>,objects:UnsafeMutablePointer<AnyObject>?,count:Int)*/
    _SwiftDeferredNSSet.prototype.countByEnumeratingWithObjectsCount = function ($info, state, objects, count) {
    };
    /*Swift.(file)._SwiftDeferredNSSet.init()*/
    /*Swift.(file).__SwiftNativeNSSet.init()*/
    _SwiftDeferredNSSet.prototype.init = function ($info) {
    };
    _SwiftDeferredNSSet.$infoAddress = '0x7fb85125e3e0';
    return _SwiftDeferredNSSet;
}(__SwiftNativeNSSet));
if (typeof _NSSetCore$implementation != 'undefined')
    _mixin(_SwiftDeferredNSSet, _NSSetCore$implementation, false);
var _CocoaSet = /** @class */ (function () {
    function _CocoaSet() {
    }
    /*Swift.(file)._CocoaSet.init(_:AnyObject)*/
    /*Swift.(file)._CocoaSet.init(_:AnyObject)*/
    _CocoaSet.prototype.initAnyObject = function ($info, object) {
        return object;
    };
    /*Swift.(file)._CocoaSet.member(for:_CocoaSet.Index)*/
    /*Swift.(file)._CocoaSet.member(for:_CocoaSet.Index)*/
    _CocoaSet.prototype.memberFor = function ($info, index) {
    };
    /*Swift.(file)._CocoaSet.member(for:AnyObject)*/
    /*Swift.(file)._CocoaSet.member(for:AnyObject)*/
    _CocoaSet.prototype.memberFor = function ($info, _element) {
    };
    /*Swift.(file)._CocoaSet.isEqual(to:_CocoaSet)*/
    /*Swift.(file)._CocoaSet.isEqual(to:_CocoaSet)*/
    _CocoaSet.prototype.isEqualTo = function ($info, other) {
    };
    /*Swift.(file)._CocoaSet.startIndex*/ /*
    startIndex$get() {
    return this.startIndex
    }
    get startIndex() { return this.startIndex$get() }*/ ;
    /*Swift.(file)._CocoaSet.endIndex*/ /*
    endIndex$get() {
    return this.endIndex
    }
    get endIndex() { return this.endIndex$get() }*/ ;
    /*Swift.(file)._CocoaSet.index(after:_CocoaSet.Index)*/
    /*Swift.(file)._SetBuffer.index(after:Self.Index)*/
    _CocoaSet.prototype.indexAfter = function ($info, index) {
    };
    /*Swift.(file)._CocoaSet.validate(_:_CocoaSet.Index)*/
    /*Swift.(file)._CocoaSet.validate(_:_CocoaSet.Index)*/
    _CocoaSet.prototype.validate = function ($info, index) {
    };
    /*Swift.(file)._CocoaSet.formIndex(after:_CocoaSet.Index,isUnique:Bool)*/
    /*Swift.(file)._CocoaSet.formIndex(after:_CocoaSet.Index,isUnique:Bool)*/
    _CocoaSet.prototype.formIndexAfterIsUnique = function ($info, index$inout, isUnique) {
    };
    /*Swift.(file)._CocoaSet.index(for:AnyObject)*/
    /*Swift.(file)._SetBuffer.index(for:Self.Element)*/
    _CocoaSet.prototype.indexFor = function ($info, _element) {
    };
    /*Swift.(file)._CocoaSet.count*/ /*
    count$get() {
    return this.count
    }
    get count() { return this.count$get() }*/ ;
    /*Swift.(file)._CocoaSet.contains(_:AnyObject)*/
    /*Swift.(file)._SetBuffer.contains(_:Self.Element)*/
    _CocoaSet.prototype.contains = function ($info, _element) {
    };
    /*Swift.(file)._CocoaSet.element(at:_CocoaSet.Index)*/
    /*Swift.(file)._SetBuffer.element(at:Self.Index)*/
    _CocoaSet.prototype.elementAt = function ($info, i) {
    };
    /*Swift.(file)._CocoaSet.makeIterator()*/
    /*Swift.(file).Sequence.makeIterator()*/
    _CocoaSet.prototype.makeIterator = function ($info) {
        var _this = this;
        return new SwiftIterator(function (current) { return _this.contains(null, current + _this.lowerBound) ? current + _this.lowerBound : null; });
    };
    var _16, _17, _18;
    _CocoaSet.$struct = true;
    _CocoaSet.$infoAddress = '0x7fb851816188';
    _CocoaSet.Index = (_16 = /** @class */ (function () {
            function class_40() {
            }
            /*Swift.(file)._CocoaSet.Index.init(_:_CocoaSet.Index.Storage,offset:Int)*/
            /*Swift.(file)._CocoaSet.Index.init(_:_CocoaSet.Index.Storage,offset:Int)*/
            class_40.prototype.init_CocoaSetIndexStorageOffsetInt = function ($info, storage, offset) {
            };
            /*Swift.(file).Index.==infix(_:_CocoaSet.Index,_:_CocoaSet.Index)*/
            /*Swift.(file).Equatable.==infix(_:Self,_:Self)*/
            class_40.infix_61_61 = function ($info, lhs, rhs) {
                return lhs == rhs;
            };
            /*Swift.(file).Index.age*/ /*
            age$get() {
            return this.age
            }
            get age() { return this.age$get() }*/ ;
            /*Swift.(file).Index.<infix(_:_CocoaSet.Index,_:_CocoaSet.Index)*/
            /*Swift.(file).Comparable.<infix(_:Self,_:Self)*/
            class_40.infix_60 = function ($info, lhs, rhs) {
                return lhs < rhs;
            };
            return class_40;
        }()),
        _16.$struct = true,
        _16.$infoAddress = '0x7fb8518163e8',
        _16.Storage = (_17 = /** @class */ (function () {
                function class_41() {
                }
                /*Swift.(file).Index.Storage.allKeys*/ /*
                allKeys$get() {
                return this.allKeys
                }
                get allKeys() { return this.allKeys$get() }*/ ;
                /*Swift.(file).Index.Storage.init(_:_CocoaSet,_:_BridgingBuffer)*/
                /*Swift.(file).Index.Storage.init(_:_CocoaSet,_:_BridgingBuffer)*/
                class_41.prototype.init_CocoaSet_BridgingBuffer = function ($info, base, allKeys) {
                };
                return class_41;
            }()),
            _17.$infoAddress = '0x7fb852e88760',
            _17),
        _16);
    _CocoaSet.Iterator = (_18 = /** @class */ (function () {
            function class_42() {
            }
            /*Swift.(file)._CocoaSet.Iterator.itemIndex*/ /*
            itemIndex$get() {
            return this.itemIndex
            }
            get itemIndex() { return this.itemIndex$get() }*/ ;
            /*Swift.(file)._CocoaSet.Iterator.itemCount*/ /*
            itemCount$get() {
            return this.itemCount
            }
            get itemCount() { return this.itemCount$get() }*/ ;
            /*Swift.(file)._CocoaSet.Iterator.init(_:_CocoaSet)*/
            /*Swift.(file)._CocoaSet.Iterator.init(_:_CocoaSet)*/
            class_42.prototype.init_CocoaSet = function ($info, base) {
                return base;
            };
            /*Swift.(file).Iterator.next()*/
            /*Swift.(file).IteratorProtocol.next()*/
            class_42.prototype.next = function ($info) {
            };
            return class_42;
        }()),
        _18.$infoAddress = '0x7fb851276f60',
        _18);
    return _CocoaSet;
}());
if (typeof Equatable$implementation != 'undefined')
    _mixin(_CocoaSet.Index, Equatable$implementation, false);
if (typeof Comparable$implementation != 'undefined')
    _mixin(_CocoaSet.Index, Comparable$implementation, false);
if (typeof IteratorProtocol$implementation != 'undefined')
    _mixin(_CocoaSet.Iterator, IteratorProtocol$implementation, false);
if (typeof _SetBuffer$implementation != 'undefined')
    _mixin(_CocoaSet, _SetBuffer$implementation, false);
if (typeof Sequence$implementation != 'undefined')
    _mixin(_CocoaSet, Sequence$implementation, false);
var _EmptySetSingleton = /** @class */ (function (_super) {
    __extends(_EmptySetSingleton, _super);
    function _EmptySetSingleton() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    /*Swift.(file)._EmptySetSingleton.init(_doNotCallMe:())*/
    /*Swift.(file)._RawSetStorage.init(_doNotCallMe:())*/
    _EmptySetSingleton.prototype.init_doNotCallMetuple_type = function ($info, _doNotCallMe) {
        return _doNotCallMe;
    };
    /*Swift.(file)._EmptySetSingleton.init(objects:UnsafePointer<AnyObject?>,count:Int)*/
    /*Swift.(file)._NSSetCore.init(objects:UnsafePointer<AnyObject?>,count:Int)*/
    _EmptySetSingleton.prototype.initObjectsUnsafePointerCountInt = function ($info, objects, count) {
    };
    /*Swift.(file)._EmptySetSingleton.copy(with:_SwiftNSZone?)*/
    /*Swift.(file)._NSSetCore.copy(with:_SwiftNSZone?)*/
    /*Swift.(file)._NSCopying.copy(with:_SwiftNSZone?)*/
    _EmptySetSingleton.prototype.copyWith = function ($info, zone) {
    };
    /*Swift.(file)._EmptySetSingleton.count*/ /*
    count$get() {
    return this.count
    }
    get count() { return this.count$get() }*/ ;
    /*Swift.(file)._EmptySetSingleton.member(_:AnyObject)*/
    /*Swift.(file)._NSSetCore.member(_:AnyObject)*/
    _EmptySetSingleton.prototype.member = function ($info, object) {
    };
    /*Swift.(file)._EmptySetSingleton.objectEnumerator()*/
    /*Swift.(file)._NSSetCore.objectEnumerator()*/
    _EmptySetSingleton.prototype.objectEnumerator = function ($info) {
    };
    /*Swift.(file)._EmptySetSingleton.countByEnumerating(with:UnsafeMutablePointer<_SwiftNSFastEnumerationState>,objects:UnsafeMutablePointer<AnyObject>?,count:Int)*/
    /*Swift.(file)._NSSetCore.countByEnumerating(with:UnsafeMutablePointer<_SwiftNSFastEnumerationState>,objects:UnsafeMutablePointer<AnyObject>?,count:Int)*/
    /*Swift.(file)._NSFastEnumeration.countByEnumerating(with:UnsafeMutablePointer<_SwiftNSFastEnumerationState>,objects:UnsafeMutablePointer<AnyObject>?,count:Int)*/
    _EmptySetSingleton.prototype.countByEnumeratingWithObjectsCount = function ($info, state, objects, count) {
    };
    _EmptySetSingleton.$infoAddress = '0x7fb8512790f0';
    return _EmptySetSingleton;
}(_RawSetStorage));
if (typeof _NSSetCore$implementation != 'undefined')
    _mixin(_EmptySetSingleton, _NSSetCore$implementation, false);
var _SetStorage = /** @class */ (function (_super) {
    __extends(_SetStorage, _super);
    function _SetStorage() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    /*Swift.(file)._SetStorage.init(_doNotCallMe:())*/
    /*Swift.(file)._RawSetStorage.init(_doNotCallMe:())*/
    _SetStorage.prototype.init_doNotCallMetuple_type = function ($info, _doNotCallMe) {
        return _doNotCallMe;
    };
    /*Swift.(file)._SetStorage.asNative*/ /*
    asNative$get() {
    return this.asNative
    }
    get asNative() { return this.asNative$get() }*/ ;
    /*Swift.(file)._SetStorage.init(objects:UnsafePointer<AnyObject?>,count:Int)*/
    /*Swift.(file)._NSSetCore.init(objects:UnsafePointer<AnyObject?>,count:Int)*/
    _SetStorage.prototype.initObjectsUnsafePointerCountInt = function ($info, objects, count) {
    };
    /*Swift.(file)._SetStorage.copy(with:_SwiftNSZone?)*/
    /*Swift.(file)._NSSetCore.copy(with:_SwiftNSZone?)*/
    /*Swift.(file)._NSCopying.copy(with:_SwiftNSZone?)*/
    _SetStorage.prototype.copyWith = function ($info, zone) {
    };
    /*Swift.(file)._SetStorage.count*/ /*
    count$get() {
    return this.count
    }
    get count() { return this.count$get() }*/ ;
    /*Swift.(file)._SetStorage.objectEnumerator()*/
    /*Swift.(file)._NSSetCore.objectEnumerator()*/
    _SetStorage.prototype.objectEnumerator = function ($info) {
    };
    /*Swift.(file)._SetStorage.countByEnumerating(with:UnsafeMutablePointer<_SwiftNSFastEnumerationState>,objects:UnsafeMutablePointer<AnyObject>?,count:Int)*/
    /*Swift.(file)._NSSetCore.countByEnumerating(with:UnsafeMutablePointer<_SwiftNSFastEnumerationState>,objects:UnsafeMutablePointer<AnyObject>?,count:Int)*/
    /*Swift.(file)._NSFastEnumeration.countByEnumerating(with:UnsafeMutablePointer<_SwiftNSFastEnumerationState>,objects:UnsafeMutablePointer<AnyObject>?,count:Int)*/
    _SetStorage.prototype.countByEnumeratingWithObjectsCount = function ($info, state, objects, count) {
    };
    /*Swift.(file)._SetStorage.member(_:AnyObject)*/
    /*Swift.(file)._NSSetCore.member(_:AnyObject)*/
    _SetStorage.prototype.member = function ($info, object) {
    };
    /*Swift.(file)._SetStorage.copy(original:_RawSetStorage)*/
    /*Swift.(file)._SetStorage.copy(original:_RawSetStorage)*/
    _SetStorage.copyOriginal = function ($info, original) {
    };
    /*Swift.(file)._SetStorage.resize(original:_RawSetStorage,capacity:Int,move:Bool)*/
    /*Swift.(file)._SetStorage.resize(original:_RawSetStorage,capacity:Int,move:Bool)*/
    _SetStorage.resizeOriginalCapacityMove = function ($info, original, capacity, move) {
    };
    /*Swift.(file)._SetStorage.allocate(capacity:Int)*/
    /*Swift.(file)._SetStorage.allocate(capacity:Int)*/
    _SetStorage.allocateCapacity = function ($info, capacity) {
    };
    /*Swift.(file)._SetStorage.convert(_:_CocoaSet,capacity:Int)*/
    /*Swift.(file)._SetStorage.convert(_:_CocoaSet,capacity:Int)*/
    _SetStorage.convertCapacity = function ($info, cocoa, capacity) {
    };
    /*Swift.(file)._SetStorage.allocate(scale:Int8,age:Int32?,seed:Int?)*/
    /*Swift.(file)._SetStorage.allocate(scale:Int8,age:Int32?,seed:Int?)*/
    _SetStorage.allocateScaleAgeSeed = function ($info, scale, age, seed) {
    };
    _SetStorage.$infoAddress = '0x7fb851279540';
    return _SetStorage;
}(_RawSetStorage));
if (typeof _NSSetCore$implementation != 'undefined')
    _mixin(_SetStorage, _NSSetCore$implementation, false);
var StaticString = /** @class */ (function () {
    function StaticString() {
    }
    /*Swift.(file).StaticString.unicodeScalar*/ /*
    unicodeScalar$get() {
    return this.unicodeScalar
    }
    get unicodeScalar() { return this.unicodeScalar$get() }*/ ;
    /*Swift.(file).StaticString.utf8CodeUnitCount*/ /*
    utf8CodeUnitCount$get() {
    return this.utf8CodeUnitCount
    }
    get utf8CodeUnitCount() { return this.utf8CodeUnitCount$get() }*/ ;
    /*Swift.(file).StaticString.hasPointerRepresentation*/ /*
    hasPointerRepresentation$get() {
    return this.hasPointerRepresentation
    }
    get hasPointerRepresentation() { return this.hasPointerRepresentation$get() }*/ ;
    /*Swift.(file).StaticString.isASCII*/ /*
    isASCII$get() {
    return this.isASCII
    }
    get isASCII() { return this.isASCII$get() }*/ ;
    /*Swift.(file).StaticString.withUTF8Buffer(_:(UnsafeBufferPointer<UInt8>) -> R)*/
    /*Swift.(file).StaticString.withUTF8Buffer(_:(UnsafeBufferPointer<UInt8>) -> R)*/
    StaticString.prototype.withUTF8Buffer = function ($info, body) {
    };
    /*Swift.(file).StaticString.init()*/
    /*Swift.(file).StaticString.init()*/
    StaticString.prototype.init = function ($info) {
    };
    /*Swift.(file).StaticString.init(_start:RawPointer,utf8CodeUnitCount:Word,isASCII:Int1)*/
    /*Swift.(file).StaticString.init(_start:RawPointer,utf8CodeUnitCount:Word,isASCII:Int1)*/
    StaticString.prototype.init_startRawPointerUtf8CodeUnitCountWordIsASCIIInt1 = function ($info, _start, utf8CodeUnitCount, isASCII) {
    };
    /*Swift.(file).StaticString.init(unicodeScalar:Int32)*/
    /*Swift.(file).StaticString.init(unicodeScalar:Int32)*/
    StaticString.prototype.initUnicodeScalarInt32 = function ($info, unicodeScalar) {
        return unicodeScalar;
    };
    /*Swift.(file).StaticString.init(_builtinUnicodeScalarLiteral:Int32)*/
    /*Swift.(file)._ExpressibleByBuiltinUnicodeScalarLiteral.init(_builtinUnicodeScalarLiteral:Int32)*/
    StaticString.prototype.init_builtinUnicodeScalarLiteralInt32 = function ($info, value) {
        return value;
    };
    /*Swift.(file).StaticString.init(unicodeScalarLiteral:StaticString)*/
    /*Swift.(file).ExpressibleByUnicodeScalarLiteral.init(unicodeScalarLiteral:Self.UnicodeScalarLiteralType)*/
    StaticString.prototype.initUnicodeScalarLiteral = function ($info, value) {
        return value;
    };
    /*Swift.(file).StaticString.init(_builtinExtendedGraphemeClusterLiteral:RawPointer,utf8CodeUnitCount:Word,isASCII:Int1)*/
    /*Swift.(file)._ExpressibleByBuiltinExtendedGraphemeClusterLiteral.init(_builtinExtendedGraphemeClusterLiteral:RawPointer,utf8CodeUnitCount:Word,isASCII:Int1)*/
    StaticString.prototype.init_builtinExtendedGraphemeClusterLiteralRawPointerUtf8CodeUnitCountWordIsASCIIInt1 = function ($info, start, utf8CodeUnitCount, isASCII) {
    };
    /*Swift.(file).StaticString.init(extendedGraphemeClusterLiteral:StaticString)*/
    /*Swift.(file).ExpressibleByExtendedGraphemeClusterLiteral.init(extendedGraphemeClusterLiteral:Self.ExtendedGraphemeClusterLiteralType)*/
    StaticString.prototype.initExtendedGraphemeClusterLiteral = function ($info, value) {
        return value;
    };
    /*Swift.(file).StaticString.init(_builtinStringLiteral:RawPointer,utf8CodeUnitCount:Word,isASCII:Int1)*/
    /*Swift.(file)._ExpressibleByBuiltinStringLiteral.init(_builtinStringLiteral:RawPointer,utf8CodeUnitCount:Word,isASCII:Int1)*/
    StaticString.prototype.init_builtinStringLiteralRawPointerUtf8CodeUnitCountWordIsASCIIInt1 = function ($info, start, utf8CodeUnitCount, isASCII) {
    };
    /*Swift.(file).StaticString.init(stringLiteral:StaticString)*/
    /*Swift.(file).ExpressibleByStringLiteral.init(stringLiteral:Self.StringLiteralType)*/
    StaticString.prototype.initStringLiteral = function ($info, value) {
        return value;
    };
    /*Swift.(file).StaticString.description*/ /*
    description$get() {
    return this.description
    }
    get description() { return this.description$get() }*/ ;
    /*Swift.(file).StaticString.debugDescription*/ /*
    debugDescription$get() {
    return this.debugDescription
    }
    get debugDescription() { return this.debugDescription$get() }*/ ;
    /*Swift.(file).StaticString.customMirror*/ /*
    customMirror$get() {
    return this.customMirror
    }
    get customMirror() { return this.customMirror$get() }*/ ;
    StaticString.$struct = true;
    StaticString.$infoAddress = '0x7fb85528feb8';
    return StaticString;
}());
if (typeof _ExpressibleByBuiltinUnicodeScalarLiteral$implementation != 'undefined')
    _mixin(StaticString, _ExpressibleByBuiltinUnicodeScalarLiteral$implementation, false);
if (typeof _ExpressibleByBuiltinExtendedGraphemeClusterLiteral$implementation != 'undefined')
    _mixin(StaticString, _ExpressibleByBuiltinExtendedGraphemeClusterLiteral$implementation, false);
if (typeof _ExpressibleByBuiltinStringLiteral$implementation != 'undefined')
    _mixin(StaticString, _ExpressibleByBuiltinStringLiteral$implementation, false);
if (typeof ExpressibleByUnicodeScalarLiteral$implementation != 'undefined')
    _mixin(StaticString, ExpressibleByUnicodeScalarLiteral$implementation, false);
if (typeof ExpressibleByExtendedGraphemeClusterLiteral$implementation != 'undefined')
    _mixin(StaticString, ExpressibleByExtendedGraphemeClusterLiteral$implementation, false);
if (typeof ExpressibleByStringLiteral$implementation != 'undefined')
    _mixin(StaticString, ExpressibleByStringLiteral$implementation, false);
if (typeof CustomStringConvertible$implementation != 'undefined')
    _mixin(StaticString, CustomStringConvertible$implementation, false);
if (typeof CustomDebugStringConvertible$implementation != 'undefined')
    _mixin(StaticString, CustomDebugStringConvertible$implementation, false);
if (typeof CustomReflectable$implementation != 'undefined')
    _mixin(StaticString, CustomReflectable$implementation, false);
var Strideable$implementation = /** @class */ (function () {
    function Strideable$implementation() {
    }
    /*Swift.(file).Strideable.<infix(_:Self,_:Self)*/
    /*Swift.(file).Strideable.<infix(_:Self,_:Self)*/
    Strideable$implementation.infix_60 = function ($info, x, y) {
        return x < y;
    };
    /*Swift.(file).Strideable.==infix(_:Self,_:Self)*/
    /*Swift.(file).Strideable.==infix(_:Self,_:Self)*/
    Strideable$implementation.infix_61_61 = function ($info, x, y) {
        return x == y;
    };
    /*Swift.(file).Strideable.+infix(_:Self,_:Self.Stride)*/
    /*Swift.(file).Strideable.+infix(_:Self,_:Self.Stride)*/
    Strideable$implementation.infix_43 = function ($info, lhs, rhs) {
        return lhs + rhs;
    };
    /*Swift.(file).Strideable.+infix(_:Self.Stride,_:Self)*/
    /*Swift.(file).Strideable.+infix(_:Self.Stride,_:Self)*/
    Strideable$implementation.infix_43 = function ($info, lhs, rhs) {
        return lhs + rhs;
    };
    /*Swift.(file).Strideable.-infix(_:Self,_:Self.Stride)*/
    /*Swift.(file).Strideable.-infix(_:Self,_:Self.Stride)*/
    Strideable$implementation.infix_45 = function ($info, lhs, rhs) {
        return lhs - rhs;
    };
    /*Swift.(file).Strideable.-infix(_:Self,_:Self)*/
    /*Swift.(file).Strideable.-infix(_:Self,_:Self)*/
    Strideable$implementation.infix_45 = function ($info, lhs, rhs) {
        return lhs - rhs;
    };
    /*Swift.(file).Strideable.+=infix(_:Self,_:Self.Stride)*/
    /*Swift.(file).Strideable.+=infix(_:Self,_:Self.Stride)*/
    Strideable$implementation.infix_43_61 = function ($info, lhs$inout, rhs) {
        lhs$inout.set(lhs$inout.get() + rhs);
    };
    /*Swift.(file).Strideable.-=infix(_:Self,_:Self.Stride)*/
    /*Swift.(file).Strideable.-=infix(_:Self,_:Self.Stride)*/
    Strideable$implementation.infix_45_61 = function ($info, lhs$inout, rhs) {
        lhs$inout.set(lhs$inout.get() - rhs);
    };
    return Strideable$implementation;
}());
if (typeof Comparable$implementation != 'undefined')
    _mixin(Strideable$implementation, Comparable$implementation, false);
var StrideTo = /** @class */ (function () {
    function StrideTo() {
    }
    /*Swift.(file).StrideTo.init(_start:Element,end:Element,stride:Element.Stride)*/
    /*Swift.(file).StrideTo.init(_start:Element,end:Element,stride:Element.Stride)*/
    StrideTo.prototype.init_startEndStride = function ($info, _start, end, stride) {
    };
    /*Swift.(file).StrideTo.makeIterator()*/
    /*Swift.(file).Sequence.makeIterator()*/
    StrideTo.prototype.makeIterator = function ($info) {
        var _this = this;
        return new SwiftIterator(function (current) { return _this.contains(null, current + _this.lowerBound) ? current + _this.lowerBound : null; });
    };
    /*Swift.(file).StrideTo.underestimatedCount*/ /*
    underestimatedCount$get() {
    return this.underestimatedCount
    }
    get underestimatedCount() { return this.underestimatedCount$get() }*/ ;
    /*Swift.(file).StrideTo.customMirror*/ /*
    customMirror$get() {
    return this.customMirror
    }
    get customMirror() { return this.customMirror$get() }*/ ;
    StrideTo.$struct = true;
    StrideTo.$infoAddress = '0x7fb851291f48';
    return StrideTo;
}());
if (typeof Sequence$implementation != 'undefined')
    _mixin(StrideTo, Sequence$implementation, false);
if (typeof CustomReflectable$implementation != 'undefined')
    _mixin(StrideTo, CustomReflectable$implementation, false);
var StrideThrough = /** @class */ (function () {
    function StrideThrough() {
    }
    /*Swift.(file).StrideThrough.init(_start:Element,end:Element,stride:Element.Stride)*/
    /*Swift.(file).StrideThrough.init(_start:Element,end:Element,stride:Element.Stride)*/
    StrideThrough.prototype.init_startEndStride = function ($info, _start, end, stride) {
    };
    /*Swift.(file).StrideThrough.makeIterator()*/
    /*Swift.(file).Sequence.makeIterator()*/
    StrideThrough.prototype.makeIterator = function ($info) {
        var _this = this;
        return new SwiftIterator(function (current) { return _this.contains(null, current + _this.lowerBound) ? current + _this.lowerBound : null; });
    };
    /*Swift.(file).StrideThrough.underestimatedCount*/ /*
    underestimatedCount$get() {
    return this.underestimatedCount
    }
    get underestimatedCount() { return this.underestimatedCount$get() }*/ ;
    /*Swift.(file).StrideThrough.customMirror*/ /*
    customMirror$get() {
    return this.customMirror
    }
    get customMirror() { return this.customMirror$get() }*/ ;
    StrideThrough.$struct = true;
    StrideThrough.$infoAddress = '0x7fb851292ef0';
    return StrideThrough;
}());
if (typeof Sequence$implementation != 'undefined')
    _mixin(StrideThrough, Sequence$implementation, false);
if (typeof CustomReflectable$implementation != 'undefined')
    _mixin(StrideThrough, CustomReflectable$implementation, false);
var AnyIndex = /** @class */ (function () {
    function AnyIndex() {
    }
    /*Swift.(file).AnyIndex.init(_:BaseIndex)*/
    /*Swift.(file).AnyIndex.init(_:BaseIndex)*/
    AnyIndex.prototype.init = function ($info, base) {
        return base;
    };
    /*Swift.(file).AnyIndex.init(_box:_AnyIndexBox)*/
    /*Swift.(file).AnyIndex.init(_box:_AnyIndexBox)*/
    AnyIndex.prototype.init_box_AnyIndexBox = function ($info, _box) {
        return _box;
    };
    /*Swift.(file).AnyIndex.==infix(_:AnyIndex,_:AnyIndex)*/
    /*Swift.(file).Equatable.==infix(_:Self,_:Self)*/
    AnyIndex.infix_61_61 = function ($info, lhs, rhs) {
        return lhs == rhs;
    };
    /*Swift.(file).AnyIndex.<infix(_:AnyIndex,_:AnyIndex)*/
    /*Swift.(file).Comparable.<infix(_:Self,_:Self)*/
    AnyIndex.infix_60 = function ($info, lhs, rhs) {
        return lhs < rhs;
    };
    AnyIndex.$struct = true;
    AnyIndex.$infoAddress = '0x7fb854809318';
    return AnyIndex;
}());
if (typeof Comparable$implementation != 'undefined')
    _mixin(AnyIndex, Comparable$implementation, false);
var _AnyCollectionProtocol$implementation = /** @class */ (function () {
    function _AnyCollectionProtocol$implementation() {
    }
    return _AnyCollectionProtocol$implementation;
}());
if (typeof Collection$implementation != 'undefined')
    _mixin(_AnyCollectionProtocol$implementation, Collection$implementation, false);
var AnyCollection = /** @class */ (function () {
    function AnyCollection() {
    }
    /*Swift.(file).AnyCollection.init(_box:_AnyCollectionBox<Element>)*/
    /*Swift.(file).AnyCollection.init(_box:_AnyCollectionBox<Element>)*/
    AnyCollection.prototype.init_box_AnyCollectionBox = function ($info, _box) {
        return _box;
    };
    /*Swift.(file).AnyCollection.makeIterator()*/
    /*Swift.(file).Collection.makeIterator()*/
    /*Swift.(file).Sequence.makeIterator()*/
    AnyCollection.prototype.makeIterator = function ($info) {
        var _this = this;
        return new SwiftIterator(function (current) { return _this[current]; });
    };
    /*Swift.(file).AnyCollection.dropLast(_:Int)*/
    /*Swift.(file).AnyCollection.dropLast(_:Int)*/
    AnyCollection.prototype.dropLast = function ($info, n) {
    };
    /*Swift.(file).AnyCollection.prefix(while:(Element) throws -> Bool)*/
    /*Swift.(file).AnyCollection.prefix(while:(Element) throws -> Bool)*/
    AnyCollection.prototype.prefixWhile = function ($info, predicate) {
    };
    /*Swift.(file).AnyCollection.suffix(_:Int)*/
    /*Swift.(file).AnyCollection.suffix(_:Int)*/
    AnyCollection.prototype.suffix = function ($info, maxLength) {
    };
    /*Swift.(file).AnyCollection.underestimatedCount*/ /*
    underestimatedCount$get() {
    return this.underestimatedCount
    }
    get underestimatedCount() { return this.underestimatedCount$get() }*/ ;
    /*Swift.(file).AnyCollection.map(_:(Element) throws -> T)*/
    /*Swift.(file).AnyCollection.map(_:(Element) throws -> T)*/
    AnyCollection.prototype.mapSwift = function ($info, transform) {
    };
    /*Swift.(file).AnyCollection.filter(_:(Element) throws -> Bool)*/
    /*Swift.(file).AnyCollection.filter(_:(Element) throws -> Bool)*/
    AnyCollection.prototype.filterSwift = function ($info, isIncluded) {
    };
    /*Swift.(file).AnyCollection.forEach(_:(Element) throws -> Void)*/
    /*Swift.(file).AnyCollection.forEach(_:(Element) throws -> Void)*/
    AnyCollection.prototype.forEachSwift = function ($info, body) {
    };
    /*Swift.(file).AnyCollection.drop(while:(Element) throws -> Bool)*/
    /*Swift.(file).AnyCollection.drop(while:(Element) throws -> Bool)*/
    AnyCollection.prototype.dropWhile = function ($info, predicate) {
    };
    /*Swift.(file).AnyCollection.dropFirst(_:Int)*/
    /*Swift.(file).AnyCollection.dropFirst(_:Int)*/
    AnyCollection.prototype.dropFirst = function ($info, n) {
    };
    /*Swift.(file).AnyCollection.prefix(_:Int)*/
    /*Swift.(file).AnyCollection.prefix(_:Int)*/
    AnyCollection.prototype.prefix = function ($info, maxLength) {
    };
    /*Swift.(file).AnyCollection.init(_:C)*/
    /*Swift.(file).AnyCollection.init(_:C)*/
    AnyCollection.prototype.init = function ($info, base) {
        return base;
    };
    /*Swift.(file).AnyCollection.init(_:AnyCollection<Element>)*/
    /*Swift.(file).AnyCollection.init(_:AnyCollection<Element>)*/
    AnyCollection.prototype.initAnyCollection = function ($info, other) {
        return other;
    };
    /*Swift.(file).AnyCollection.init(_:C)*/
    /*Swift.(file).AnyCollection.init(_:C)*/
    AnyCollection.prototype.init = function ($info, base) {
        return base;
    };
    /*Swift.(file).AnyCollection.init(_:AnyBidirectionalCollection<Element>)*/
    /*Swift.(file).AnyCollection.init(_:AnyBidirectionalCollection<Element>)*/
    AnyCollection.prototype.initAnyBidirectionalCollection = function ($info, other) {
        return other;
    };
    /*Swift.(file).AnyCollection.init(_:C)*/
    /*Swift.(file).AnyCollection.init(_:C)*/
    AnyCollection.prototype.init = function ($info, base) {
        return base;
    };
    /*Swift.(file).AnyCollection.init(_:AnyRandomAccessCollection<Element>)*/
    /*Swift.(file).AnyCollection.init(_:AnyRandomAccessCollection<Element>)*/
    AnyCollection.prototype.initAnyRandomAccessCollection = function ($info, other) {
        return other;
    };
    /*Swift.(file).AnyCollection.startIndex*/ /*
    startIndex$get() {
    return this.startIndex
    }
    get startIndex() { return this.startIndex$get() }*/ ;
    /*Swift.(file).AnyCollection.endIndex*/ /*
    endIndex$get() {
    return this.endIndex
    }
    get endIndex() { return this.endIndex$get() }*/ ;
    /*Swift.(file).AnyCollection.subscript(_:AnyCollection<Element>.Index)*/
    /*Swift.(file).Collection.subscript(_:Self.Index)*/
    AnyCollection.prototype.subscript$get = function ($info, position) {
        return this[position];
    };
    /*Swift.(file).AnyCollection.subscript(_:Range<AnyCollection<Element>.Index>)*/
    /*Swift.(file).Collection.subscript(_:Range<Self.Index>)*/
    AnyCollection.prototype.subcriptRange$get = function ($info, bounds) {
        return this[bounds];
    };
    /*Swift.(file).AnyCollection.index(after:AnyCollection<Element>.Index)*/
    /*Swift.(file).Collection.index(after:Self.Index)*/
    AnyCollection.prototype.indexAfter = function ($info, i) {
    };
    /*Swift.(file).AnyCollection.formIndex(after:AnyCollection<Element>.Index)*/
    /*Swift.(file).Collection.formIndex(after:Self.Index)*/
    AnyCollection.prototype.formIndexAfter = function ($info, i$inout) {
    };
    /*Swift.(file).AnyCollection.index(_:AnyCollection<Element>.Index,offsetBy:Int)*/
    /*Swift.(file).Collection.index(_:Self.Index,offsetBy:Int)*/
    AnyCollection.prototype.indexOffsetBy = function ($info, i, n) {
    };
    /*Swift.(file).AnyCollection.index(_:AnyCollection<Element>.Index,offsetBy:Int,limitedBy:AnyCollection<Element>.Index)*/
    /*Swift.(file).Collection.index(_:Self.Index,offsetBy:Int,limitedBy:Self.Index)*/
    AnyCollection.prototype.indexOffsetByLimitedBy = function ($info, i, n, limit) {
    };
    /*Swift.(file).AnyCollection.formIndex(_:AnyCollection<Element>.Index,offsetBy:Int)*/
    /*Swift.(file).AnyCollection.formIndex(_:AnyCollection<Element>.Index,offsetBy:Int)*/
    AnyCollection.prototype.formIndexOffsetBy = function ($info, i$inout, n) {
    };
    /*Swift.(file).AnyCollection.formIndex(_:AnyCollection<Element>.Index,offsetBy:Int,limitedBy:AnyCollection<Element>.Index)*/
    /*Swift.(file).AnyCollection.formIndex(_:AnyCollection<Element>.Index,offsetBy:Int,limitedBy:AnyCollection<Element>.Index)*/
    AnyCollection.prototype.formIndexOffsetByLimitedBy = function ($info, i$inout, n, limit) {
    };
    /*Swift.(file).AnyCollection.distance(from:AnyCollection<Element>.Index,to:AnyCollection<Element>.Index)*/
    /*Swift.(file).Collection.distance(from:Self.Index,to:Self.Index)*/
    AnyCollection.prototype.distanceFromTo = function ($info, start, end) {
    };
    /*Swift.(file).AnyCollection.count*/ /*
    count$get() {
    return this.count
    }
    get count() { return this.count$get() }*/ ;
    AnyCollection.$struct = true;
    AnyCollection.$infoAddress = '0x7fb851301dd8';
    return AnyCollection;
}());
if (typeof Collection$implementation != 'undefined')
    _mixin(AnyCollection, Collection$implementation, false);
if (typeof _AnyCollectionProtocol$implementation != 'undefined')
    _mixin(AnyCollection, _AnyCollectionProtocol$implementation, false);
var Mirror = /** @class */ (function () {
    function Mirror() {
    }
    /*Swift.(file).Mirror.init(reflecting:Any)*/
    /*Swift.(file).Mirror.init(reflecting:Any)*/
    Mirror.prototype.initReflectingprotocol_composition_type = function ($info, subject) {
        return subject;
    };
    /*Swift.(file).Mirror.init(_:Subject,children:C,displayStyle:Mirror.DisplayStyle?,ancestorRepresentation:Mirror.AncestorRepresentation)*/
    /*Swift.(file).Mirror.init(_:Subject,children:C,displayStyle:Mirror.DisplayStyle?,ancestorRepresentation:Mirror.AncestorRepresentation)*/
    Mirror.prototype.initChildrenDisplayStyleOptionalAncestorRepresentationMirrorAncestorRepresentation = function ($info, subject, children, displayStyle, ancestorRepresentation) {
    };
    /*Swift.(file).Mirror.init(_:Subject,unlabeledChildren:C,displayStyle:Mirror.DisplayStyle?,ancestorRepresentation:Mirror.AncestorRepresentation)*/
    /*Swift.(file).Mirror.init(_:Subject,unlabeledChildren:C,displayStyle:Mirror.DisplayStyle?,ancestorRepresentation:Mirror.AncestorRepresentation)*/
    Mirror.prototype.initUnlabeledChildrenDisplayStyleOptionalAncestorRepresentationMirrorAncestorRepresentation = function ($info, subject, unlabeledChildren, displayStyle, ancestorRepresentation) {
    };
    /*Swift.(file).Mirror.init(_:Subject,children:KeyValuePairs<String, Any>,displayStyle:Mirror.DisplayStyle?,ancestorRepresentation:Mirror.AncestorRepresentation)*/
    /*Swift.(file).Mirror.init(_:Subject,children:KeyValuePairs<String, Any>,displayStyle:Mirror.DisplayStyle?,ancestorRepresentation:Mirror.AncestorRepresentation)*/
    Mirror.prototype.initChildrenKeyValuePairsDisplayStyleOptionalAncestorRepresentationMirrorAncestorRepresentation = function ($info, subject, children, displayStyle, ancestorRepresentation) {
    };
    /*Swift.(file).Mirror.subjectType*/ /*
    readonly subjectType$get() {
    return this.subjectType
    }
    readonly get subjectType() { return this.subjectType$get() }*/ ;
    /*Swift.(file).Mirror.children*/ /*
    readonly children$get() {
    return this.children
    }
    readonly get children() { return this.children$get() }*/ ;
    /*Swift.(file).Mirror.displayStyle*/ /*
    readonly displayStyle$get() {
    return this.displayStyle
    }
    readonly get displayStyle() { return this.displayStyle$get() }*/ ;
    /*Swift.(file).Mirror.superclassMirror*/ /*
    superclassMirror$get() {
    return this.superclassMirror
    }
    get superclassMirror() { return this.superclassMirror$get() }*/ ;
    /*Swift.(file).Mirror.init(internalReflecting:Any,subjectType:Any.Type?,customAncestor:Mirror?)*/
    /*Swift.(file).Mirror.init(internalReflecting:Any,subjectType:Any.Type?,customAncestor:Mirror?)*/
    Mirror.prototype.initInternalReflectingprotocol_composition_typeSubjectTypeOptionalCustomAncestorOptional = function ($info, subject, subjectType, customAncestor) {
    };
    /*Swift.(file).Mirror.quickLookObject(_:Any)*/
    /*Swift.(file).Mirror.quickLookObject(_:Any)*/
    Mirror.quickLookObject = function ($info, subject) {
    };
    /*Swift.(file).Mirror.descendant(_:MirrorPath,_:[MirrorPath])*/
    /*Swift.(file).Mirror.descendant(_:MirrorPath,_:[MirrorPath])*/
    Mirror.prototype.descendant = function ($info, first, rest) {
    };
    /*Swift.(file).Mirror.description*/ /*
    description$get() {
    return this.description
    }
    get description() { return this.description$get() }*/ ;
    /*Swift.(file).Mirror.customMirror*/ /*
    customMirror$get() {
    return this.customMirror
    }
    get customMirror() { return this.customMirror$get() }*/ ;
    var _19, _20, _21, _22;
    Mirror.$struct = true;
    Mirror.$infoAddress = '0x7fb854809818';
    Mirror._DefaultDescendantRepresentation = (_19 = /** @class */ (function () {
            function class_43() {
            }
            Object.defineProperty(class_43, "generated", {
                get: function () { return Object.assign(new Mirror._DefaultDescendantRepresentation(), __assign({ rawValue: "generated" }, Array.from(arguments).slice(1))); },
                enumerable: true,
                configurable: true
            });
            Object.defineProperty(class_43, "suppressed", {
                get: function () { return Object.assign(new Mirror._DefaultDescendantRepresentation(), __assign({ rawValue: "suppressed" }, Array.from(arguments).slice(1))); },
                enumerable: true,
                configurable: true
            });
            /*Swift.(file).Mirror._DefaultDescendantRepresentation.==(_:Mirror._DefaultDescendantRepresentation,_:Mirror._DefaultDescendantRepresentation)*/
            /*Swift.(file).Equatable.==infix(_:Self,_:Self)*/
            class_43.infix_61_61 = function ($info, a, b) {
                return a == b;
            };
            /*Swift.(file).Mirror._DefaultDescendantRepresentation.hashValue*/ /*
            hashValue$get() {
            return this.hashValue
            }
            get hashValue() { return this.hashValue$get() }*/ ;
            /*Swift.(file).Mirror._DefaultDescendantRepresentation.hash(into:Hasher)*/
            /*Swift.(file).Hashable.hash(into:Hasher)*/
            class_43.prototype.hashInto = function ($info, hasher$inout) {
            };
            return class_43;
        }()),
        _19.$infoAddress = '0x7fb854809998',
        _19);
    Mirror.AncestorRepresentation = (_20 = /** @class */ (function () {
            function class_44() {
            }
            Object.defineProperty(class_44, "generated", {
                get: function () { return Object.assign(new Mirror.AncestorRepresentation(), __assign({ rawValue: "generated" }, Array.from(arguments).slice(1))); },
                enumerable: true,
                configurable: true
            });
            class_44.customized = function () { return Object.assign(new Mirror.AncestorRepresentation(), __assign({ rawValue: "customized" }, Array.from(arguments).slice(1))); };
            Object.defineProperty(class_44, "suppressed", {
                get: function () { return Object.assign(new Mirror.AncestorRepresentation(), __assign({ rawValue: "suppressed" }, Array.from(arguments).slice(1))); },
                enumerable: true,
                configurable: true
            });
            return class_44;
        }()),
        _20.$infoAddress = '0x7fb851d89970',
        _20);
    Mirror.DisplayStyle = (_21 = /** @class */ (function () {
            function class_45() {
            }
            Object.defineProperty(class_45, "struct", {
                get: function () { return Object.assign(new Mirror.DisplayStyle(), __assign({ rawValue: "struct" }, Array.from(arguments).slice(1))); },
                enumerable: true,
                configurable: true
            });
            Object.defineProperty(class_45, "_class", {
                get: function () { return Object.assign(new Mirror.DisplayStyle(), __assign({ rawValue: "_class" }, Array.from(arguments).slice(1))); },
                enumerable: true,
                configurable: true
            });
            Object.defineProperty(class_45, "enum", {
                get: function () { return Object.assign(new Mirror.DisplayStyle(), __assign({ rawValue: "enum" }, Array.from(arguments).slice(1))); },
                enumerable: true,
                configurable: true
            });
            Object.defineProperty(class_45, "tuple", {
                get: function () { return Object.assign(new Mirror.DisplayStyle(), __assign({ rawValue: "tuple" }, Array.from(arguments).slice(1))); },
                enumerable: true,
                configurable: true
            });
            Object.defineProperty(class_45, "optional", {
                get: function () { return Object.assign(new Mirror.DisplayStyle(), __assign({ rawValue: "optional" }, Array.from(arguments).slice(1))); },
                enumerable: true,
                configurable: true
            });
            Object.defineProperty(class_45, "collection", {
                get: function () { return Object.assign(new Mirror.DisplayStyle(), __assign({ rawValue: "collection" }, Array.from(arguments).slice(1))); },
                enumerable: true,
                configurable: true
            });
            Object.defineProperty(class_45, "dictionary", {
                get: function () { return Object.assign(new Mirror.DisplayStyle(), __assign({ rawValue: "dictionary" }, Array.from(arguments).slice(1))); },
                enumerable: true,
                configurable: true
            });
            Object.defineProperty(class_45, "set", {
                get: function () { return Object.assign(new Mirror.DisplayStyle(), __assign({ rawValue: "set" }, Array.from(arguments).slice(1))); },
                enumerable: true,
                configurable: true
            });
            /*Swift.(file).Mirror.DisplayStyle.==(_:Mirror.DisplayStyle,_:Mirror.DisplayStyle)*/
            /*Swift.(file).Equatable.==infix(_:Self,_:Self)*/
            class_45.infix_61_61 = function ($info, a, b) {
                return a == b;
            };
            /*Swift.(file).Mirror.DisplayStyle.hashValue*/ /*
            hashValue$get() {
            return this.hashValue
            }
            get hashValue() { return this.hashValue$get() }*/ ;
            /*Swift.(file).Mirror.DisplayStyle.hash(into:Hasher)*/
            /*Swift.(file).Hashable.hash(into:Hasher)*/
            class_45.prototype.hashInto = function ($info, hasher$inout) {
            };
            return class_45;
        }()),
        _21.$infoAddress = '0x7fb854809e30',
        _21);
    Mirror._Dummy = (_22 = /** @class */ (function () {
            function class_46() {
            }
            /*Swift.(file).Mirror._Dummy.init(mirror:Mirror)*/
            /*Swift.(file).Mirror._Dummy.init(mirror:Mirror)*/
            class_46.prototype.initMirrorMirror = function ($info, mirror) {
                return mirror;
            };
            /*Swift.(file).Mirror._Dummy.mirror*/ /*
            mirror$get() {
            return this.mirror
            }
            get mirror() { return this.mirror$get() }*/ ;
            /*Swift.(file).Mirror._Dummy.customMirror*/ /*
            customMirror$get() {
            return this.customMirror
            }
            get customMirror() { return this.customMirror$get() }*/ ;
            return class_46;
        }()),
        _22.$struct = true,
        _22.$infoAddress = '0x7fb851d8d2a8',
        _22);
    return Mirror;
}());
if (typeof CustomReflectable$implementation != 'undefined')
    _mixin(Mirror._Dummy, CustomReflectable$implementation, false);
if (typeof CustomStringConvertible$implementation != 'undefined')
    _mixin(Mirror, CustomStringConvertible$implementation, false);
if (typeof CustomReflectable$implementation != 'undefined')
    _mixin(Mirror, CustomReflectable$implementation, false);
var _ArrayProtocol$implementation = /** @class */ (function () {
    function _ArrayProtocol$implementation() {
    }
    /*Swift.(file)._ArrayProtocol.filter(_:(Self.Element) throws -> Bool)*/
    /*Swift.(file)._ArrayProtocol.filter(_:(Self.Element) throws -> Bool)*/
    _ArrayProtocol$implementation.prototype.filterSwift = function ($info, isIncluded) {
        return this.filter(isIncluded.bind(null, null));
    };
    return _ArrayProtocol$implementation;
}());
if (typeof RangeReplaceableCollection$implementation != 'undefined')
    _mixin(_ArrayProtocol$implementation, RangeReplaceableCollection$implementation, false);
if (typeof ExpressibleByArrayLiteral$implementation != 'undefined')
    _mixin(_ArrayProtocol$implementation, ExpressibleByArrayLiteral$implementation, false);
var BidirectionalCollection$implementation = /** @class */ (function () {
    function BidirectionalCollection$implementation() {
    }
    /*Swift.(file).BidirectionalCollection.formIndex(before:Self.Index)*/
    /*Swift.(file).BidirectionalCollection.formIndex(before:Self.Index)*/
    BidirectionalCollection$implementation.prototype.formIndexBefore = function ($info, i$inout) {
    };
    /*Swift.(file).BidirectionalCollection.index(_:Self.Index,offsetBy:Int)*/
    /*Swift.(file).BidirectionalCollection.index(_:Self.Index,offsetBy:Int)*/
    BidirectionalCollection$implementation.prototype.indexOffsetBy = function ($info, i, distance) {
    };
    /*Swift.(file).BidirectionalCollection.index(_:Self.Index,offsetBy:Int,limitedBy:Self.Index)*/
    /*Swift.(file).BidirectionalCollection.index(_:Self.Index,offsetBy:Int,limitedBy:Self.Index)*/
    BidirectionalCollection$implementation.prototype.indexOffsetByLimitedBy = function ($info, i, distance, limit) {
    };
    /*Swift.(file).BidirectionalCollection.distance(from:Self.Index,to:Self.Index)*/
    /*Swift.(file).BidirectionalCollection.distance(from:Self.Index,to:Self.Index)*/
    BidirectionalCollection$implementation.prototype.distanceFromTo = function ($info, start, end) {
    };
    /*Swift.(file).BidirectionalCollection.popLast()*/
    /*Swift.(file).BidirectionalCollection.popLast()*/
    BidirectionalCollection$implementation.prototype.popLast = function ($info) {
    };
    /*Swift.(file).BidirectionalCollection.removeLast()*/
    /*Swift.(file).BidirectionalCollection.removeLast()*/
    BidirectionalCollection$implementation.prototype.removeLast = function ($info) {
    };
    /*Swift.(file).BidirectionalCollection.removeLast(_:Int)*/
    /*Swift.(file).BidirectionalCollection.removeLast(_:Int)*/
    BidirectionalCollection$implementation.prototype.removeLast = function ($info, k) {
    };
    /*Swift.(file).BidirectionalCollection.dropLast(_:Int)*/
    /*Swift.(file).BidirectionalCollection.dropLast(_:Int)*/
    BidirectionalCollection$implementation.prototype.dropLast = function ($info, k) {
    };
    /*Swift.(file).BidirectionalCollection.suffix(_:Int)*/
    /*Swift.(file).BidirectionalCollection.suffix(_:Int)*/
    BidirectionalCollection$implementation.prototype.suffix = function ($info, maxLength) {
    };
    /*Swift.(file).BidirectionalCollection.last*/ /**/ ;
    /*Swift.(file).BidirectionalCollection.last(where:(Self.Element) throws -> Bool)*/
    /*Swift.(file).BidirectionalCollection.last(where:(Self.Element) throws -> Bool)*/
    BidirectionalCollection$implementation.prototype.lastWhere = function ($info, predicate) {
    };
    /*Swift.(file).BidirectionalCollection.lastIndex(where:(Self.Element) throws -> Bool)*/
    /*Swift.(file).BidirectionalCollection.lastIndex(where:(Self.Element) throws -> Bool)*/
    BidirectionalCollection$implementation.prototype.lastIndexWhere = function ($info, predicate) {
    };
    /*Swift.(file).BidirectionalCollection.lastIndex(of:Self.Element)*/
    /*Swift.(file).BidirectionalCollection.lastIndex(of:Self.Element)*/
    BidirectionalCollection$implementation.prototype.lastIndexOf = function ($info, _element) {
    };
    /*Swift.(file).BidirectionalCollection.reversed()*/
    /*Swift.(file).BidirectionalCollection.reversed()*/
    BidirectionalCollection$implementation.prototype.reversed = function ($info) {
    };
    /*Swift.(file).BidirectionalCollection.joined(separator:String)*/
    /*Swift.(file).BidirectionalCollection.joined(separator:String)*/
    BidirectionalCollection$implementation.prototype.joinedSeparator = function ($info, separator) {
        return this.join(separator);
    };
    return BidirectionalCollection$implementation;
}());
if (typeof Collection$implementation != 'undefined')
    _mixin(BidirectionalCollection$implementation, Collection$implementation, false);
var Character = /** @class */ (function () {
    function Character() {
    }
    /*Swift.(file).Character.init(unchecked:String)*/
    /*Swift.(file).Character.init(unchecked:String)*/
    Character.prototype.initUncheckedString = function ($info, str) {
        return str;
    };
    /*Swift.(file).Character.==infix(_:Character,_:Character)*/
    /*Swift.(file).Equatable.==infix(_:Self,_:Self)*/
    Character.infix_61_61 = function ($info, lhs, rhs) {
        return lhs == rhs;
    };
    /*Swift.(file).Character.utf8*/ /*
    utf8$get() {
    return this.utf8
    }
    get utf8() { return this.utf8$get() }*/ ;
    /*Swift.(file).Character.utf16*/ /*
    utf16$get() {
    return this.utf16
    }
    get utf16() { return this.utf16$get() }*/ ;
    /*Swift.(file).Character.unicodeScalars*/ /*
    unicodeScalars$get() {
    return this.unicodeScalars
    }
    get unicodeScalars() { return this.unicodeScalars$get() }*/ ;
    /*Swift.(file).Character.init(_:Unicode.Scalar)*/
    /*Swift.(file).Character.init(_:Unicode.Scalar)*/
    Character.prototype.initUnicodeScalar = function ($info, content) {
        return content;
    };
    /*Swift.(file).Character.init(_builtinUnicodeScalarLiteral:Int32)*/
    /*Swift.(file)._ExpressibleByBuiltinUnicodeScalarLiteral.init(_builtinUnicodeScalarLiteral:Int32)*/
    Character.prototype.init_builtinUnicodeScalarLiteralInt32 = function ($info, value) {
        return value;
    };
    /*Swift.(file).Character.init(_builtinExtendedGraphemeClusterLiteral:RawPointer,utf8CodeUnitCount:Word,isASCII:Int1)*/
    /*Swift.(file)._ExpressibleByBuiltinExtendedGraphemeClusterLiteral.init(_builtinExtendedGraphemeClusterLiteral:RawPointer,utf8CodeUnitCount:Word,isASCII:Int1)*/
    Character.prototype.init_builtinExtendedGraphemeClusterLiteralRawPointerUtf8CodeUnitCountWordIsASCIIInt1 = function ($info, start, utf8CodeUnitCount, isASCII) {
    };
    /*Swift.(file).Character.init(extendedGraphemeClusterLiteral:Character)*/
    /*Swift.(file).ExpressibleByExtendedGraphemeClusterLiteral.init(extendedGraphemeClusterLiteral:Self.ExtendedGraphemeClusterLiteralType)*/
    Character.prototype.initExtendedGraphemeClusterLiteral = function ($info, value) {
        return value;
    };
    /*Swift.(file).Character.init(_:String)*/
    /*Swift.(file).LosslessStringConvertible.init(_:String)*/
    Character.prototype.initString = function ($info, s) {
        return s;
    };
    /*Swift.(file).Character.description*/ /*
    description$get() {
    return this.description
    }
    get description() { return this.description$get() }*/ ;
    /*Swift.(file).Character.debugDescription*/ /*
    debugDescription$get() {
    return this.debugDescription
    }
    get debugDescription() { return this.debugDescription$get() }*/ ;
    /*Swift.(file).Character.<infix(_:Character,_:Character)*/
    /*Swift.(file).Comparable.<infix(_:Self,_:Self)*/
    Character.infix_60 = function ($info, lhs, rhs) {
        return lhs < rhs;
    };
    /*Swift.(file).Character.hash(into:Hasher)*/
    /*Swift.(file).Hashable.hash(into:Hasher)*/
    Character.prototype.hashInto = function ($info, hasher$inout) {
    };
    /*Swift.(file).Character.hashValue*/ /*
    hashValue$get() {
    return this.hashValue
    }
    get hashValue() { return this.hashValue$get() }*/ ;
    /*Swift.(file).Character.customMirror*/ /*
    customMirror$get() {
    return this.customMirror
    }
    get customMirror() { return this.customMirror$get() }*/ ;
    /*Swift.(file).Character.customPlaygroundQuickLook*/ /*
    customPlaygroundQuickLook$get() {
    return this.customPlaygroundQuickLook
    }
    get customPlaygroundQuickLook() { return this.customPlaygroundQuickLook$get() }*/ ;
    /*Swift.(file).Character.write(to:Target)*/
    /*Swift.(file).TextOutputStreamable.write(to:Target)*/
    Character.prototype.writeTo = function ($info, target$inout) {
    };
    /*Swift.(file).Character.isASCII*/ /*
    isASCII$get() {
    return this.isASCII
    }
    get isASCII() { return this.isASCII$get() }*/ ;
    /*Swift.(file).Character.asciiValue*/ /*
    asciiValue$get() {
    return this.asciiValue
    }
    get asciiValue() { return this.asciiValue$get() }*/ ;
    /*Swift.(file).Character.isWhitespace*/ /*
    isWhitespace$get() {
    return this.isWhitespace
    }
    get isWhitespace() { return this.isWhitespace$get() }*/ ;
    /*Swift.(file).Character.isNewline*/ /*
    isNewline$get() {
    return this.isNewline
    }
    get isNewline() { return this.isNewline$get() }*/ ;
    /*Swift.(file).Character.isNumber*/ /*
    isNumber$get() {
    return this.isNumber
    }
    get isNumber() { return this.isNumber$get() }*/ ;
    /*Swift.(file).Character.isWholeNumber*/ /*
    isWholeNumber$get() {
    return this.isWholeNumber
    }
    get isWholeNumber() { return this.isWholeNumber$get() }*/ ;
    /*Swift.(file).Character.wholeNumberValue*/ /*
    wholeNumberValue$get() {
    return this.wholeNumberValue
    }
    get wholeNumberValue() { return this.wholeNumberValue$get() }*/ ;
    /*Swift.(file).Character.isHexDigit*/ /*
    isHexDigit$get() {
    return this.isHexDigit
    }
    get isHexDigit() { return this.isHexDigit$get() }*/ ;
    /*Swift.(file).Character.hexDigitValue*/ /*
    hexDigitValue$get() {
    return this.hexDigitValue
    }
    get hexDigitValue() { return this.hexDigitValue$get() }*/ ;
    /*Swift.(file).Character.isLetter*/ /*
    isLetter$get() {
    return this.isLetter
    }
    get isLetter() { return this.isLetter$get() }*/ ;
    /*Swift.(file).Character.uppercased()*/
    /*Swift.(file).Character.uppercased()*/
    Character.prototype.uppercased = function ($info) {
    };
    /*Swift.(file).Character.lowercased()*/
    /*Swift.(file).Character.lowercased()*/
    Character.prototype.lowercased = function ($info) {
    };
    /*Swift.(file).Character.isUppercase*/ /*
    isUppercase$get() {
    return this.isUppercase
    }
    get isUppercase() { return this.isUppercase$get() }*/ ;
    /*Swift.(file).Character.isLowercase*/ /*
    isLowercase$get() {
    return this.isLowercase
    }
    get isLowercase() { return this.isLowercase$get() }*/ ;
    /*Swift.(file).Character.isCased*/ /*
    isCased$get() {
    return this.isCased
    }
    get isCased() { return this.isCased$get() }*/ ;
    /*Swift.(file).Character.isSymbol*/ /*
    isSymbol$get() {
    return this.isSymbol
    }
    get isSymbol() { return this.isSymbol$get() }*/ ;
    /*Swift.(file).Character.isMathSymbol*/ /*
    isMathSymbol$get() {
    return this.isMathSymbol
    }
    get isMathSymbol() { return this.isMathSymbol$get() }*/ ;
    /*Swift.(file).Character.isCurrencySymbol*/ /*
    isCurrencySymbol$get() {
    return this.isCurrencySymbol
    }
    get isCurrencySymbol() { return this.isCurrencySymbol$get() }*/ ;
    /*Swift.(file).Character.isPunctuation*/ /*
    isPunctuation$get() {
    return this.isPunctuation
    }
    get isPunctuation() { return this.isPunctuation$get() }*/ ;
    Character.$struct = true;
    Character.$infoAddress = '0x7fb85180e218';
    return Character;
}());
if (typeof Equatable$implementation != 'undefined')
    _mixin(Character, Equatable$implementation, false);
if (typeof _ExpressibleByBuiltinExtendedGraphemeClusterLiteral$implementation != 'undefined')
    _mixin(Character, _ExpressibleByBuiltinExtendedGraphemeClusterLiteral$implementation, false);
if (typeof ExpressibleByExtendedGraphemeClusterLiteral$implementation != 'undefined')
    _mixin(Character, ExpressibleByExtendedGraphemeClusterLiteral$implementation, false);
if (typeof CustomStringConvertible$implementation != 'undefined')
    _mixin(Character, CustomStringConvertible$implementation, false);
if (typeof LosslessStringConvertible$implementation != 'undefined')
    _mixin(Character, LosslessStringConvertible$implementation, false);
if (typeof CustomDebugStringConvertible$implementation != 'undefined')
    _mixin(Character, CustomDebugStringConvertible$implementation, false);
if (typeof Comparable$implementation != 'undefined')
    _mixin(Character, Comparable$implementation, false);
if (typeof Hashable$implementation != 'undefined')
    _mixin(Character, Hashable$implementation, false);
if (typeof CustomReflectable$implementation != 'undefined')
    _mixin(Character, CustomReflectable$implementation, false);
if (typeof _CustomPlaygroundQuickLookable$implementation != 'undefined')
    _mixin(Character, _CustomPlaygroundQuickLookable$implementation, false);
if (typeof TextOutputStreamable$implementation != 'undefined')
    _mixin(Character, TextOutputStreamable$implementation, false);
var MIO_Mixin_Dictionary = /** @class */ (function () {
    function MIO_Mixin_Dictionary() {
    }
    MIO_Mixin_Dictionary.prototype.cloneStructFill = function ($info, obj) {
        var _this = this;
        obj.forEach(function (val, prop) { return _this.set(prop, _cloneStruct(val)); });
    };
    /*Swift.(file).Dictionary.init(_native:_NativeDictionary<Key, Value>)*/
    /*Swift.(file).Dictionary.init(_native:_NativeDictionary<Key, Value>)*/
    MIO_Mixin_Dictionary.prototype.init_native_NativeDictionary = function ($info, _native) {
        return _native;
    };
    /*Swift.(file).Dictionary.init(_cocoa:_CocoaDictionary)*/
    /*Swift.(file).Dictionary.init(_cocoa:_CocoaDictionary)*/
    MIO_Mixin_Dictionary.prototype.init_cocoa_CocoaDictionary = function ($info, _cocoa) {
        return _cocoa;
    };
    /*Swift.(file).Dictionary.init(_immutableCocoaDictionary:AnyObject)*/
    /*Swift.(file).Dictionary.init(_immutableCocoaDictionary:AnyObject)*/
    MIO_Mixin_Dictionary.prototype.init_immutableCocoaDictionaryAnyObject = function ($info, _immutableCocoaDictionary) {
        return _immutableCocoaDictionary;
    };
    /*Swift.(file).Dictionary.init()*/
    /*Swift.(file).Dictionary.init()*/
    MIO_Mixin_Dictionary.prototype.init = function ($info) {
        return new Map();
    };
    /*Swift.(file).Dictionary.init(minimumCapacity:Int)*/
    /*Swift.(file).Dictionary.init(minimumCapacity:Int)*/
    MIO_Mixin_Dictionary.prototype.initMinimumCapacityInt = function ($info, minimumCapacity) {
        return minimumCapacity;
    };
    /*Swift.(file).Dictionary.init(uniqueKeysWithValues:S)*/
    /*Swift.(file).Dictionary.init(uniqueKeysWithValues:S)*/
    MIO_Mixin_Dictionary.prototype.initUniqueKeysWithValues = function ($info, keysAndValues) {
        return keysAndValues;
    };
    /*Swift.(file).Dictionary.init(_:S,uniquingKeysWith:(Value, Value) throws -> Value)*/
    /*Swift.(file).Dictionary.init(_:S,uniquingKeysWith:(Value, Value) throws -> Value)*/
    MIO_Mixin_Dictionary.prototype.initUniquingKeysWithfunction_type = function ($info, keysAndValues, combine) {
    };
    /*Swift.(file).Dictionary.init(grouping:S,by:(S.Element) throws -> Key)*/
    /*Swift.(file).Dictionary.init(grouping:S,by:(S.Element) throws -> Key)*/
    MIO_Mixin_Dictionary.prototype.initGroupingByfunction_type = function ($info, values, keyForValue) {
    };
    /*Swift.(file).Dictionary.keys*/ /*
    keys$get() {
    return this.keys
    }
    get keys() { return this.keys$get() }*/ ;
    /*Swift.(file).Dictionary.values*/ /*
    values$get() {
    return this.values
    }
    get values() { return this.values$get() }*/ ;
    /*Swift.(file).Dictionary.==infix(_:[Key : Value],_:[Key : Value])*/
    /*Swift.(file).Equatable.==infix(_:Self,_:Self)*/
    MIO_Mixin_Dictionary.infix_61_61 = function ($info, lhs, rhs) {
        return lhs == rhs;
    };
    /*Swift.(file).Dictionary.encode(to:Encoder)*/
    /*Swift.(file).Encodable.encode(to:Encoder)*/
    MIO_Mixin_Dictionary.prototype.encodeTo = function ($info, encoder) {
    };
    /*Swift.(file).Dictionary.init(from:Decoder)*/
    /*Swift.(file).Decodable.init(from:Decoder)*/
    MIO_Mixin_Dictionary.prototype.initFromDecoder = function ($info, decoder) {
        return decoder;
    };
    /*Swift.(file).Dictionary.makeIterator()*/
    /*Swift.(file).Sequence.makeIterator()*/
    /*Swift.(file).Collection.makeIterator()*/
    MIO_Mixin_Dictionary.prototype.makeIterator = function ($info) {
        var _this = this;
        return new SwiftIterator(function (current) { return Array.from(_this)[current]; });
    };
    /*Swift.(file).Dictionary.filter(_:(Dictionary<Key, Value>.Element) throws -> Bool)*/
    /*Swift.(file).Dictionary.filter(_:(Dictionary<Key, Value>.Element) throws -> Bool)*/
    MIO_Mixin_Dictionary.prototype.filterSwift = function ($info, isIncluded) {
    };
    /*Swift.(file).Dictionary.startIndex*/ /*
    startIndex$get() {
    return this.startIndex
    }
    get startIndex() { return this.startIndex$get() }*/ ;
    /*Swift.(file).Dictionary.endIndex*/ /*
    endIndex$get() {
    return this.endIndex
    }
    get endIndex() { return this.endIndex$get() }*/ ;
    /*Swift.(file).Dictionary.index(after:Dictionary<Key, Value>.Index)*/
    /*Swift.(file).Collection.index(after:Self.Index)*/
    MIO_Mixin_Dictionary.prototype.indexAfter = function ($info, i) {
    };
    /*Swift.(file).Dictionary.formIndex(after:Dictionary<Key, Value>.Index)*/
    /*Swift.(file).Collection.formIndex(after:Self.Index)*/
    MIO_Mixin_Dictionary.prototype.formIndexAfter = function ($info, i$inout) {
    };
    /*Swift.(file).Dictionary.index(forKey:Key)*/
    /*Swift.(file).Dictionary.index(forKey:Key)*/
    MIO_Mixin_Dictionary.prototype.indexForKey = function ($info, key) {
    };
    /*Swift.(file).Dictionary.subscript(_:Dictionary<Key, Value>.Index)*/
    /*Swift.(file).Collection.subscript(_:Self.Index)*/
    MIO_Mixin_Dictionary.prototype.subscript$get = function ($info, position) {
        return this.get(position);
    };
    /*Swift.(file).Dictionary.count*/
    MIO_Mixin_Dictionary.prototype.count$get = function () {
        return this.size;
    };
    Object.defineProperty(MIO_Mixin_Dictionary.prototype, "count", {
        get: function () { return this.count$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).Dictionary.isEmpty*/ /*
    isEmpty$get() {
    return this.isEmpty
    }
    get isEmpty() { return this.isEmpty$get() }*/ ;
    /*Swift.(file).Dictionary.subscript(_:Key)*/
    /*Swift.(file).Dictionary.subscript(_:Key)*/
    MIO_Mixin_Dictionary.prototype.subscript$get = function ($info, key) {
        return this.get(key);
    }; /*Swift.(file).Dictionary.subscript(_:Key)*/
    /*Swift.(file).Dictionary.subscript(_:Key)*/
    MIO_Mixin_Dictionary.prototype.subscript$set = function ($info, newValue, key) {
        if (newValue == null)
            this.delete(key);
        else
            this.set(key, newValue);
    }; /*Swift.(file).Dictionary.subscript(_:Key)*/
    /*Swift.(file).Dictionary.subscript(_:Key)*/
    MIO_Mixin_Dictionary.prototype.subscript$_modify = function ($info, key) {
        return this.get(key);
    };
    /*Swift.(file).Dictionary.init(dictionaryLiteral:[(Key, Value)])*/
    /*Swift.(file).ExpressibleByDictionaryLiteral.init(dictionaryLiteral:[(Self.Key, Self.Value)])*/
    MIO_Mixin_Dictionary.prototype.initDictionaryLiteralArray = function ($info, _elements) {
        return _elements;
    };
    /*Swift.(file).Dictionary.subscript(_:Key,default:() -> Value)*/
    /*Swift.(file).Dictionary.subscript(_:Key,default:() -> Value)*/
    MIO_Mixin_Dictionary.prototype.subscriptDefault$get = function ($info, key, defaultValue) {
        return this[key];
    }; /*Swift.(file).Dictionary.subscript(_:Key,default:() -> Value)*/
    /*Swift.(file).Dictionary.subscript(_:Key,default:() -> Value)*/
    MIO_Mixin_Dictionary.prototype.subscriptDefault$_modify = function ($info, key, defaultValue) {
        return this[key];
    };
    /*Swift.(file).Dictionary.mapValues(_:(Value) throws -> T)*/
    /*Swift.(file).Dictionary.mapValues(_:(Value) throws -> T)*/
    MIO_Mixin_Dictionary.prototype.mapValues = function ($info, transform) {
    };
    /*Swift.(file).Dictionary.compactMapValues(_:(Value) throws -> T?)*/
    /*Swift.(file).Dictionary.compactMapValues(_:(Value) throws -> T?)*/
    MIO_Mixin_Dictionary.prototype.compactMapValues = function ($info, transform) {
    };
    /*Swift.(file).Dictionary.updateValue(_:Value,forKey:Key)*/
    /*Swift.(file).Dictionary.updateValue(_:Value,forKey:Key)*/
    MIO_Mixin_Dictionary.prototype.updateValueForKey = function ($info, value, key) {
    };
    /*Swift.(file).Dictionary.merge(_:S,uniquingKeysWith:(Value, Value) throws -> Value)*/
    /*Swift.(file).Dictionary.merge(_:S,uniquingKeysWith:(Value, Value) throws -> Value)*/
    MIO_Mixin_Dictionary.prototype.mergeUniquingKeysWith = function ($info, other, combine) {
    };
    /*Swift.(file).Dictionary.merge(_:[Key : Value],uniquingKeysWith:(Value, Value) throws -> Value)*/
    /*Swift.(file).Dictionary.merge(_:[Key : Value],uniquingKeysWith:(Value, Value) throws -> Value)*/
    MIO_Mixin_Dictionary.prototype.mergeUniquingKeysWith = function ($info, other, combine) {
    };
    /*Swift.(file).Dictionary.merging(_:S,uniquingKeysWith:(Value, Value) throws -> Value)*/
    /*Swift.(file).Dictionary.merging(_:S,uniquingKeysWith:(Value, Value) throws -> Value)*/
    MIO_Mixin_Dictionary.prototype.mergingUniquingKeysWith = function ($info, other, combine) {
    };
    /*Swift.(file).Dictionary.merging(_:[Key : Value],uniquingKeysWith:(Value, Value) throws -> Value)*/
    /*Swift.(file).Dictionary.merging(_:[Key : Value],uniquingKeysWith:(Value, Value) throws -> Value)*/
    MIO_Mixin_Dictionary.prototype.mergingUniquingKeysWith = function ($info, other, combine) {
    };
    /*Swift.(file).Dictionary.remove(at:Dictionary<Key, Value>.Index)*/
    /*Swift.(file).Dictionary.remove(at:Dictionary<Key, Value>.Index)*/
    MIO_Mixin_Dictionary.prototype.removeAt = function ($info, index) {
    };
    /*Swift.(file).Dictionary.removeValue(forKey:Key)*/
    /*Swift.(file).Dictionary.removeValue(forKey:Key)*/
    MIO_Mixin_Dictionary.prototype.removeValueForKey = function ($info, key) {
    };
    /*Swift.(file).Dictionary.removeAll(keepingCapacity:Bool)*/
    /*Swift.(file).Dictionary.removeAll(keepingCapacity:Bool)*/
    MIO_Mixin_Dictionary.prototype.removeAllKeepingCapacity = function ($info, keepCapacity) {
    };
    /*Swift.(file).Dictionary.hash(into:Hasher)*/
    /*Swift.(file).Hashable.hash(into:Hasher)*/
    MIO_Mixin_Dictionary.prototype.hashInto = function ($info, hasher$inout) {
    };
    /*Swift.(file).Dictionary.hashValue*/ /*
    hashValue$get() {
    return this.hashValue
    }
    get hashValue() { return this.hashValue$get() }*/ ;
    /*Swift.(file).Dictionary.description*/ /*
    description$get() {
    return this.description
    }
    get description() { return this.description$get() }*/ ;
    /*Swift.(file).Dictionary.debugDescription*/ /*
    debugDescription$get() {
    return this.debugDescription
    }
    get debugDescription() { return this.debugDescription$get() }*/ ;
    /*Swift.(file).Dictionary.popFirst()*/
    /*Swift.(file).Dictionary.popFirst()*/
    MIO_Mixin_Dictionary.prototype.popFirst = function ($info) {
    };
    /*Swift.(file).Dictionary.capacity*/ /*
    capacity$get() {
    return this.capacity
    }
    get capacity() { return this.capacity$get() }*/ ;
    /*Swift.(file).Dictionary.reserveCapacity(_:Int)*/
    /*Swift.(file).Dictionary.reserveCapacity(_:Int)*/
    MIO_Mixin_Dictionary.prototype.reserveCapacity = function ($info, minimumCapacity) {
    };
    /*Swift.(file).Dictionary.init(_unsafeUninitializedCapacity:Int,allowingDuplicates:Bool,initializingWith:(UnsafeMutableBufferPointer<Key>, UnsafeMutableBufferPointer<Value>, inout Int) -> Void)*/
    /*Swift.(file).Dictionary.init(_unsafeUninitializedCapacity:Int,allowingDuplicates:Bool,initializingWith:(UnsafeMutableBufferPointer<Key>, UnsafeMutableBufferPointer<Value>, inout Int) -> Void)*/
    MIO_Mixin_Dictionary.prototype.init_unsafeUninitializedCapacityIntAllowingDuplicatesBoolInitializingWithfunction_type = function ($info, capacity, allowingDuplicates, initializer) {
    };
    var _23, _24, _25, _26, _27, _28, _29, _30, _31;
    MIO_Mixin_Dictionary.$struct = true;
    MIO_Mixin_Dictionary.$mixin = true;
    MIO_Mixin_Dictionary.$infoAddress = '0x7fb8528eb4d0';
    MIO_Mixin_Dictionary.Keys = (_23 = /** @class */ (function () {
            function class_47() {
            }
            /*Swift.(file).Dictionary.Keys.init(_dictionary:Dictionary<Key, Value>)*/
            /*Swift.(file).Dictionary.Keys.init(_dictionary:Dictionary<Key, Value>)*/
            class_47.prototype.init_dictionaryDictionary = function ($info, _dictionary) {
                return _dictionary;
            };
            /*Swift.(file).Dictionary.Keys.startIndex*/ /*
            startIndex$get() {
            return this.startIndex
            }
            get startIndex() { return this.startIndex$get() }*/ ;
            /*Swift.(file).Dictionary.Keys.endIndex*/ /*
            endIndex$get() {
            return this.endIndex
            }
            get endIndex() { return this.endIndex$get() }*/ ;
            /*Swift.(file).Dictionary.Keys.index(after:Dictionary<Key, Value>.Index)*/
            /*Swift.(file).Collection.index(after:Self.Index)*/
            class_47.prototype.indexAfter = function ($info, i) {
            };
            /*Swift.(file).Dictionary.Keys.formIndex(after:Dictionary<Key, Value>.Index)*/
            /*Swift.(file).Collection.formIndex(after:Self.Index)*/
            class_47.prototype.formIndexAfter = function ($info, i$inout) {
            };
            /*Swift.(file).Dictionary.Keys.subscript(_:Dictionary<Key, Value>.Index)*/
            /*Swift.(file).Collection.subscript(_:Self.Index)*/
            class_47.prototype.subscript$get = function ($info, position) {
                return this[position];
            };
            /*Swift.(file).Dictionary.Keys.count*/ /*
            count$get() {
            return this.count
            }
            get count() { return this.count$get() }*/ ;
            /*Swift.(file).Dictionary.Keys.isEmpty*/ /*
            isEmpty$get() {
            return this.isEmpty
            }
            get isEmpty() { return this.isEmpty$get() }*/ ;
            /*Swift.(file).Dictionary.Keys.==infix(_:Dictionary<Key, Value>.Keys,_:Dictionary<Key, Value>.Keys)*/
            /*Swift.(file).Equatable.==infix(_:Self,_:Self)*/
            class_47.infix_61_61 = function ($info, lhs, rhs) {
                return lhs == rhs;
            };
            /*Swift.(file).Dictionary.Keys.description*/ /*
            description$get() {
            return this.description
            }
            get description() { return this.description$get() }*/ ;
            /*Swift.(file).Dictionary.Keys.debugDescription*/ /*
            debugDescription$get() {
            return this.debugDescription
            }
            get debugDescription() { return this.debugDescription$get() }*/ ;
            /*Swift.(file).Keys.makeIterator()*/
            /*Swift.(file).Collection.makeIterator()*/
            /*Swift.(file).Sequence.makeIterator()*/
            class_47.prototype.makeIterator = function ($info) {
                var _this = this;
                return new SwiftIterator(function (current) { return _this[current]; });
            };
            return class_47;
        }()),
        _23.$struct = true,
        _23.$infoAddress = '0x7fb851814c80',
        _23.Iterator = (_24 = /** @class */ (function () {
                function class_48() {
                }
                /*Swift.(file).Keys.Iterator.init(_:Dictionary<Key, Value>.Iterator)*/
                /*Swift.(file).Keys.Iterator.init(_:Dictionary<Key, Value>.Iterator)*/
                class_48.prototype.initDictionaryIterator = function ($info, base) {
                    return base;
                };
                /*Swift.(file).Keys.Iterator.next()*/
                /*Swift.(file).IteratorProtocol.next()*/
                class_48.prototype.next = function ($info) {
                };
                return class_48;
            }()),
            _24.$struct = true,
            _24.$infoAddress = '0x7fb852c52a60',
            _24),
        _23);
    MIO_Mixin_Dictionary.Values = (_25 = /** @class */ (function () {
            function class_49() {
            }
            /*Swift.(file).Dictionary.Values.init(_variant:Dictionary<Key, Value>._Variant)*/
            /*Swift.(file).Dictionary.Values.init(_variant:Dictionary<Key, Value>._Variant)*/
            class_49.prototype.init_variantDictionary_Variant = function ($info, _variant) {
                return _variant;
            };
            /*Swift.(file).Dictionary.Values.init(_dictionary:Dictionary<Key, Value>)*/
            /*Swift.(file).Dictionary.Values.init(_dictionary:Dictionary<Key, Value>)*/
            class_49.prototype.init_dictionaryDictionary = function ($info, _dictionary) {
                return _dictionary;
            };
            /*Swift.(file).Dictionary.Values.startIndex*/ /*
            startIndex$get() {
            return this.startIndex
            }
            get startIndex() { return this.startIndex$get() }*/ ;
            /*Swift.(file).Dictionary.Values.endIndex*/ /*
            endIndex$get() {
            return this.endIndex
            }
            get endIndex() { return this.endIndex$get() }*/ ;
            /*Swift.(file).Dictionary.Values.index(after:Dictionary<Key, Value>.Index)*/
            /*Swift.(file).Collection.index(after:Self.Index)*/
            class_49.prototype.indexAfter = function ($info, i) {
            };
            /*Swift.(file).Dictionary.Values.formIndex(after:Dictionary<Key, Value>.Index)*/
            /*Swift.(file).Collection.formIndex(after:Self.Index)*/
            class_49.prototype.formIndexAfter = function ($info, i$inout) {
            };
            /*Swift.(file).Dictionary.Values.subscript(_:Dictionary<Key, Value>.Index)*/
            /*Swift.(file).MutableCollection.subscript(_:Self.Index)*/
            /*Swift.(file).Collection.subscript(_:Self.Index)*/
            class_49.prototype.subscript$get = function ($info, position) {
                return this[position];
            }; /*Swift.(file).Dictionary.Values.subscript(_:Dictionary<Key, Value>.Index)*/
            /*Swift.(file).MutableCollection.subscript(_:Self.Index)*/
            /*Swift.(file).Collection.subscript(_:Self.Index)*/
            class_49.prototype.subscript$_modify = function ($info, position) {
                return this[position];
            };
            /*Swift.(file).Dictionary.Values.count*/ /*
            count$get() {
            return this.count
            }
            get count() { return this.count$get() }*/ ;
            /*Swift.(file).Dictionary.Values.isEmpty*/ /*
            isEmpty$get() {
            return this.isEmpty
            }
            get isEmpty() { return this.isEmpty$get() }*/ ;
            /*Swift.(file).Dictionary.Values.description*/ /*
            description$get() {
            return this.description
            }
            get description() { return this.description$get() }*/ ;
            /*Swift.(file).Dictionary.Values.debugDescription*/ /*
            debugDescription$get() {
            return this.debugDescription
            }
            get debugDescription() { return this.debugDescription$get() }*/ ;
            /*Swift.(file).Dictionary.Values.swapAt(_:Dictionary<Key, Value>.Index,_:Dictionary<Key, Value>.Index)*/
            /*Swift.(file).MutableCollection.swapAt(_:Self.Index,_:Self.Index)*/
            class_49.prototype.swapAt = function ($info, i, j) {
            };
            /*Swift.(file).Values.makeIterator()*/
            /*Swift.(file).Collection.makeIterator()*/
            /*Swift.(file).Sequence.makeIterator()*/
            class_49.prototype.makeIterator = function ($info) {
                var _this = this;
                return new SwiftIterator(function (current) { return _this[current]; });
            };
            return class_49;
        }()),
        _25.$struct = true,
        _25.$infoAddress = '0x7fb852ac2b48',
        _25.Iterator = (_26 = /** @class */ (function () {
                function class_50() {
                }
                /*Swift.(file).Values.Iterator.init(_:Dictionary<Key, Value>.Iterator)*/
                /*Swift.(file).Values.Iterator.init(_:Dictionary<Key, Value>.Iterator)*/
                class_50.prototype.initDictionaryIterator = function ($info, base) {
                    return base;
                };
                /*Swift.(file).Values.Iterator.next()*/
                /*Swift.(file).IteratorProtocol.next()*/
                class_50.prototype.next = function ($info) {
                };
                return class_50;
            }()),
            _26.$struct = true,
            _26.$infoAddress = '0x7fb852c56e20',
            _26),
        _25);
    MIO_Mixin_Dictionary.Index = (_27 = /** @class */ (function () {
            function class_51() {
            }
            /*Swift.(file).Dictionary.Index.init(_variant:Dictionary<Key, Value>.Index._Variant)*/
            /*Swift.(file).Dictionary.Index.init(_variant:Dictionary<Key, Value>.Index._Variant)*/
            class_51.prototype.init_variantDictionaryIndex_Variant = function ($info, _variant) {
                return _variant;
            };
            /*Swift.(file).Dictionary.Index.init(_native:_HashTable.Index)*/
            /*Swift.(file).Dictionary.Index.init(_native:_HashTable.Index)*/
            class_51.prototype.init_native_HashTableIndex = function ($info, index) {
                return index;
            };
            /*Swift.(file).Dictionary.Index.init(_cocoa:_CocoaDictionary.Index)*/
            /*Swift.(file).Dictionary.Index.init(_cocoa:_CocoaDictionary.Index)*/
            class_51.prototype.init_cocoa_CocoaDictionaryIndex = function ($info, index) {
                return index;
            };
            /*Swift.(file).Index.==infix(_:Dictionary<Key, Value>.Index,_:Dictionary<Key, Value>.Index)*/
            /*Swift.(file).Equatable.==infix(_:Self,_:Self)*/
            class_51.infix_61_61 = function ($info, lhs, rhs) {
                return lhs == rhs;
            };
            /*Swift.(file).Index.<infix(_:Dictionary<Key, Value>.Index,_:Dictionary<Key, Value>.Index)*/
            /*Swift.(file).Comparable.<infix(_:Self,_:Self)*/
            class_51.infix_60 = function ($info, lhs, rhs) {
                return lhs < rhs;
            };
            /*Swift.(file).Index.hash(into:Hasher)*/
            /*Swift.(file).Hashable.hash(into:Hasher)*/
            class_51.prototype.hashInto = function ($info, hasher$inout) {
            };
            /*Swift.(file).Index.hashValue*/ /*
            hashValue$get() {
            return this.hashValue
            }
            get hashValue() { return this.hashValue$get() }*/ ;
            return class_51;
        }()),
        _27.$struct = true,
        _27.$infoAddress = '0x7fb851817318',
        _27._Variant = (_28 = /** @class */ (function () {
                function class_52() {
                }
                class_52._native = function () { return Object.assign(new MIO_Mixin_Dictionary.Index._Variant(), __assign({ rawValue: "_native" }, Array.from(arguments).slice(1))); };
                class_52.cocoa = function () { return Object.assign(new MIO_Mixin_Dictionary.Index._Variant(), __assign({ rawValue: "cocoa" }, Array.from(arguments).slice(1))); };
                return class_52;
            }()),
            _28.$infoAddress = '0x7fb852c57e88',
            _28),
        _27);
    MIO_Mixin_Dictionary.Iterator = (_29 = /** @class */ (function () {
            function class_53() {
            }
            /*Swift.(file).Dictionary.Iterator.init(_variant:Dictionary<Key, Value>.Iterator._Variant)*/
            /*Swift.(file).Dictionary.Iterator.init(_variant:Dictionary<Key, Value>.Iterator._Variant)*/
            class_53.prototype.init_variantDictionaryIterator_Variant = function ($info, _variant) {
                return _variant;
            };
            /*Swift.(file).Dictionary.Iterator.init(_native:_NativeDictionary<Key, Value>.Iterator)*/
            /*Swift.(file).Dictionary.Iterator.init(_native:_NativeDictionary<Key, Value>.Iterator)*/
            class_53.prototype.init_native_NativeDictionaryIterator = function ($info, _native) {
                return _native;
            };
            /*Swift.(file).Dictionary.Iterator.init(_cocoa:_CocoaDictionary.Iterator)*/
            /*Swift.(file).Dictionary.Iterator.init(_cocoa:_CocoaDictionary.Iterator)*/
            class_53.prototype.init_cocoa_CocoaDictionaryIterator = function ($info, _cocoa) {
                return _cocoa;
            };
            /*Swift.(file).Iterator.next()*/
            /*Swift.(file).IteratorProtocol.next()*/
            class_53.prototype.next = function ($info) {
            };
            /*Swift.(file).Iterator.customMirror*/ /*
            customMirror$get() {
            return this.customMirror
            }
            get customMirror() { return this.customMirror$get() }*/ ;
            return class_53;
        }()),
        _29.$struct = true,
        _29.$infoAddress = '0x7fb852ac4490',
        _29._Variant = (_30 = /** @class */ (function () {
                function class_54() {
                }
                class_54._native = function () { return Object.assign(new MIO_Mixin_Dictionary.Iterator._Variant(), __assign({ rawValue: "_native" }, Array.from(arguments).slice(1))); };
                class_54.cocoa = function () { return Object.assign(new MIO_Mixin_Dictionary.Iterator._Variant(), __assign({ rawValue: "cocoa" }, Array.from(arguments).slice(1))); };
                return class_54;
            }()),
            _30.$infoAddress = '0x7fb852c5d7f0',
            _30),
        _29);
    MIO_Mixin_Dictionary._Variant = (_31 = /** @class */ (function () {
            function class_55() {
            }
            /*Swift.(file).Dictionary._Variant.init(native:_NativeDictionary<Key, Value>)*/
            /*Swift.(file).Dictionary._Variant.init(native:_NativeDictionary<Key, Value>)*/
            class_55.prototype.initNative_NativeDictionary = function ($info, _native) {
                return _native;
            };
            /*Swift.(file).Dictionary._Variant.init(dummy:Void)*/
            /*Swift.(file).Dictionary._Variant.init(dummy:Void)*/
            class_55.prototype.initDummyVoid = function ($info, dummy) {
                return dummy;
            };
            /*Swift.(file).Dictionary._Variant.init(cocoa:_CocoaDictionary)*/
            /*Swift.(file).Dictionary._Variant.init(cocoa:_CocoaDictionary)*/
            class_55.prototype.initCocoa_CocoaDictionary = function ($info, cocoa) {
                return cocoa;
            };
            /*Swift.(file)._Variant.guaranteedNative*/ /*
            guaranteedNative$get() {
            return this.guaranteedNative
            }
            get guaranteedNative() { return this.guaranteedNative$get() }*/ ;
            /*Swift.(file)._Variant.isUniquelyReferenced()*/
            /*Swift.(file)._Variant.isUniquelyReferenced()*/
            class_55.prototype.isUniquelyReferenced = function ($info) {
            };
            /*Swift.(file)._Variant.isNative*/ /*
            isNative$get() {
            return this.isNative
            }
            get isNative() { return this.isNative$get() }*/ ;
            /*Swift.(file)._Variant.asNative*/ /*
            asNative$get() {
            return this.asNative
            }
            get asNative() { return this.asNative$get() }*/ ;
            /*Swift.(file)._Variant.asCocoa*/ /*
            asCocoa$get() {
            return this.asCocoa
            }
            get asCocoa() { return this.asCocoa$get() }*/ ;
            /*Swift.(file)._Variant.reserveCapacity(_:Int)*/
            /*Swift.(file)._Variant.reserveCapacity(_:Int)*/
            class_55.prototype.reserveCapacity = function ($info, capacity) {
            };
            /*Swift.(file)._Variant.capacity*/ /*
            capacity$get() {
            return this.capacity
            }
            get capacity() { return this.capacity$get() }*/ ;
            /*Swift.(file)._Variant.startIndex*/ /*
            startIndex$get() {
            return this.startIndex
            }
            get startIndex() { return this.startIndex$get() }*/ ;
            /*Swift.(file)._Variant.endIndex*/ /*
            endIndex$get() {
            return this.endIndex
            }
            get endIndex() { return this.endIndex$get() }*/ ;
            /*Swift.(file)._Variant.index(after:Dictionary<Key, Value>._Variant.Index)*/
            /*Swift.(file)._DictionaryBuffer.index(after:Self.Index)*/
            class_55.prototype.indexAfter = function ($info, index) {
            };
            /*Swift.(file)._Variant.formIndex(after:Dictionary<Key, Value>._Variant.Index)*/
            /*Swift.(file)._Variant.formIndex(after:Dictionary<Key, Value>._Variant.Index)*/
            class_55.prototype.formIndexAfter = function ($info, index$inout) {
            };
            /*Swift.(file)._Variant.index(forKey:Key)*/
            /*Swift.(file)._DictionaryBuffer.index(forKey:Self.Key)*/
            class_55.prototype.indexForKey = function ($info, key) {
            };
            /*Swift.(file)._Variant.count*/ /*
            count$get() {
            return this.count
            }
            get count() { return this.count$get() }*/ ;
            /*Swift.(file)._Variant.contains(_:Key)*/
            /*Swift.(file)._DictionaryBuffer.contains(_:Self.Key)*/
            class_55.prototype.contains = function ($info, key) {
            };
            /*Swift.(file)._Variant.lookup(_:Key)*/
            /*Swift.(file)._DictionaryBuffer.lookup(_:Self.Key)*/
            class_55.prototype.lookup = function ($info, key) {
            };
            /*Swift.(file)._Variant.lookup(_:Dictionary<Key, Value>._Variant.Index)*/
            /*Swift.(file)._DictionaryBuffer.lookup(_:Self.Index)*/
            class_55.prototype.lookup = function ($info, index) {
            };
            /*Swift.(file)._Variant.key(at:Dictionary<Key, Value>._Variant.Index)*/
            /*Swift.(file)._DictionaryBuffer.key(at:Self.Index)*/
            class_55.prototype.keyAt = function ($info, index) {
            };
            /*Swift.(file)._Variant.value(at:Dictionary<Key, Value>._Variant.Index)*/
            /*Swift.(file)._DictionaryBuffer.value(at:Self.Index)*/
            class_55.prototype.valueAt = function ($info, index) {
            };
            /*Swift.(file)._Variant.subscript(_:Key)*/
            /*Swift.(file)._Variant.subscript(_:Key)*/
            class_55.prototype.subscript$get = function ($info, key) {
                return this[key];
            }; /*Swift.(file)._Variant.subscript(_:Key)*/
            /*Swift.(file)._Variant.subscript(_:Key)*/
            class_55.prototype.subscript$_modify = function ($info, key) {
                return this[key];
            };
            /*Swift.(file)._Variant.mutatingFind(_:Key)*/
            /*Swift.(file)._Variant.mutatingFind(_:Key)*/
            class_55.prototype.mutatingFind = function ($info, key) {
            };
            /*Swift.(file)._Variant.ensureUniqueNative()*/
            /*Swift.(file)._Variant.ensureUniqueNative()*/
            class_55.prototype.ensureUniqueNative = function ($info) {
            };
            /*Swift.(file)._Variant.updateValue(_:Value,forKey:Key)*/
            /*Swift.(file)._Variant.updateValue(_:Value,forKey:Key)*/
            class_55.prototype.updateValueForKey = function ($info, value, key) {
            };
            /*Swift.(file)._Variant.setValue(_:Value,forKey:Key)*/
            /*Swift.(file)._Variant.setValue(_:Value,forKey:Key)*/
            class_55.prototype.setValueForKey = function ($info, value, key) {
            };
            /*Swift.(file)._Variant.remove(at:Dictionary<Key, Value>._Variant.Index)*/
            /*Swift.(file)._Variant.remove(at:Dictionary<Key, Value>._Variant.Index)*/
            class_55.prototype.removeAt = function ($info, index) {
            };
            /*Swift.(file)._Variant.removeValue(forKey:Key)*/
            /*Swift.(file)._Variant.removeValue(forKey:Key)*/
            class_55.prototype.removeValueForKey = function ($info, key) {
            };
            /*Swift.(file)._Variant.removeAll(keepingCapacity:Bool)*/
            /*Swift.(file)._Variant.removeAll(keepingCapacity:Bool)*/
            class_55.prototype.removeAllKeepingCapacity = function ($info, keepCapacity) {
            };
            /*Swift.(file)._Variant.makeIterator()*/
            /*Swift.(file)._Variant.makeIterator()*/
            class_55.prototype.makeIterator = function ($info) {
            };
            /*Swift.(file)._Variant.mapValues(_:(Value) throws -> T)*/
            /*Swift.(file)._Variant.mapValues(_:(Value) throws -> T)*/
            class_55.prototype.mapValues = function ($info, transform) {
            };
            /*Swift.(file)._Variant.merge(_:S,uniquingKeysWith:(Value, Value) throws -> Value)*/
            /*Swift.(file)._Variant.merge(_:S,uniquingKeysWith:(Value, Value) throws -> Value)*/
            class_55.prototype.mergeUniquingKeysWith = function ($info, keysAndValues, combine) {
            };
            return class_55;
        }()),
        _31.$struct = true,
        _31.$infoAddress = '0x7fb852acdef0',
        _31);
    return MIO_Mixin_Dictionary;
}());
if (typeof IteratorProtocol$implementation != 'undefined')
    _mixin(MIO_Mixin_Dictionary.Keys.Iterator, IteratorProtocol$implementation, false);
if (typeof Collection$implementation != 'undefined')
    _mixin(MIO_Mixin_Dictionary.Keys, Collection$implementation, false);
if (typeof Equatable$implementation != 'undefined')
    _mixin(MIO_Mixin_Dictionary.Keys, Equatable$implementation, false);
if (typeof CustomStringConvertible$implementation != 'undefined')
    _mixin(MIO_Mixin_Dictionary.Keys, CustomStringConvertible$implementation, false);
if (typeof CustomDebugStringConvertible$implementation != 'undefined')
    _mixin(MIO_Mixin_Dictionary.Keys, CustomDebugStringConvertible$implementation, false);
if (typeof IteratorProtocol$implementation != 'undefined')
    _mixin(MIO_Mixin_Dictionary.Values.Iterator, IteratorProtocol$implementation, false);
if (typeof MutableCollection$implementation != 'undefined')
    _mixin(MIO_Mixin_Dictionary.Values, MutableCollection$implementation, false);
if (typeof CustomStringConvertible$implementation != 'undefined')
    _mixin(MIO_Mixin_Dictionary.Values, CustomStringConvertible$implementation, false);
if (typeof CustomDebugStringConvertible$implementation != 'undefined')
    _mixin(MIO_Mixin_Dictionary.Values, CustomDebugStringConvertible$implementation, false);
if (typeof Equatable$implementation != 'undefined')
    _mixin(MIO_Mixin_Dictionary.Index, Equatable$implementation, false);
if (typeof Comparable$implementation != 'undefined')
    _mixin(MIO_Mixin_Dictionary.Index, Comparable$implementation, false);
if (typeof Hashable$implementation != 'undefined')
    _mixin(MIO_Mixin_Dictionary.Index, Hashable$implementation, false);
if (typeof IteratorProtocol$implementation != 'undefined')
    _mixin(MIO_Mixin_Dictionary.Iterator, IteratorProtocol$implementation, false);
if (typeof CustomReflectable$implementation != 'undefined')
    _mixin(MIO_Mixin_Dictionary.Iterator, CustomReflectable$implementation, false);
if (typeof _DictionaryBuffer$implementation != 'undefined')
    _mixin(MIO_Mixin_Dictionary._Variant, _DictionaryBuffer$implementation, false);
if (typeof Equatable$implementation != 'undefined')
    _mixin(MIO_Mixin_Dictionary, Equatable$implementation, false);
if (typeof Encodable$implementation != 'undefined')
    _mixin(MIO_Mixin_Dictionary, Encodable$implementation, false);
if (typeof Decodable$implementation != 'undefined')
    _mixin(MIO_Mixin_Dictionary, Decodable$implementation, false);
if (typeof Sequence$implementation != 'undefined')
    _mixin(MIO_Mixin_Dictionary, Sequence$implementation, false);
if (typeof Collection$implementation != 'undefined')
    _mixin(MIO_Mixin_Dictionary, Collection$implementation, false);
if (typeof ExpressibleByDictionaryLiteral$implementation != 'undefined')
    _mixin(MIO_Mixin_Dictionary, ExpressibleByDictionaryLiteral$implementation, false);
if (typeof Hashable$implementation != 'undefined')
    _mixin(MIO_Mixin_Dictionary, Hashable$implementation, false);
if (typeof _HasCustomAnyHashableRepresentation$implementation != 'undefined')
    _mixin(MIO_Mixin_Dictionary, _HasCustomAnyHashableRepresentation$implementation, false);
if (typeof CustomStringConvertible$implementation != 'undefined')
    _mixin(MIO_Mixin_Dictionary, CustomStringConvertible$implementation, false);
if (typeof CustomDebugStringConvertible$implementation != 'undefined')
    _mixin(MIO_Mixin_Dictionary, CustomDebugStringConvertible$implementation, false);
if (typeof CustomReflectable$implementation != 'undefined')
    _mixin(MIO_Mixin_Dictionary, CustomReflectable$implementation, false);
_mixin(Map, MIO_Mixin_Dictionary, true);
var Dictionary = /** @class */ (function () {
    function Dictionary() {
    }
    return Dictionary;
}());
_mixin(Dictionary, MIO_Mixin_Dictionary, true);
var FlattenSequence = /** @class */ (function () {
    function FlattenSequence() {
    }
    /*Swift.(file).FlattenSequence.init(_base:Base)*/
    /*Swift.(file).FlattenSequence.init(_base:Base)*/
    FlattenSequence.prototype.init_base = function ($info, _base) {
        return _base;
    };
    /*Swift.(file).FlattenSequence.makeIterator()*/
    /*Swift.(file).Sequence.makeIterator()*/
    /*Swift.(file).Collection.makeIterator()*/
    FlattenSequence.prototype.makeIterator = function ($info) {
        var _this = this;
        return new SwiftIterator(function (current) { return _this.contains(null, current + _this.lowerBound) ? current + _this.lowerBound : null; });
    };
    /*Swift.(file).FlattenSequence.startIndex*/ /*
    startIndex$get() {
    return this.startIndex
    }
    get startIndex() { return this.startIndex$get() }*/ ;
    /*Swift.(file).FlattenSequence.endIndex*/ /*
    endIndex$get() {
    return this.endIndex
    }
    get endIndex() { return this.endIndex$get() }*/ ;
    /*Swift.(file).FlattenSequence.index(after:FlattenSequence<Base>.Index)*/
    /*Swift.(file).Collection.index(after:Self.Index)*/
    /*Swift.(file).BidirectionalCollection.index(after:Self.Index)*/
    FlattenSequence.prototype.indexAfter = function ($info, i) {
    };
    /*Swift.(file).FlattenSequence.formIndex(after:FlattenSequence<Base>.Index)*/
    /*Swift.(file).Collection.formIndex(after:Self.Index)*/
    /*Swift.(file).BidirectionalCollection.formIndex(after:Self.Index)*/
    FlattenSequence.prototype.formIndexAfter = function ($info, i$inout) {
    };
    /*Swift.(file).FlattenSequence.distance(from:FlattenSequence<Base>.Index,to:FlattenSequence<Base>.Index)*/
    /*Swift.(file).Collection.distance(from:Self.Index,to:Self.Index)*/
    /*Swift.(file).BidirectionalCollection.distance(from:Self.Index,to:Self.Index)*/
    FlattenSequence.prototype.distanceFromTo = function ($info, start, end) {
    };
    /*Swift.(file).FlattenSequence.index(_:FlattenSequence<Base>.Index,offsetBy:Int)*/
    /*Swift.(file).Collection.index(_:Self.Index,offsetBy:Int)*/
    /*Swift.(file).BidirectionalCollection.index(_:Self.Index,offsetBy:Int)*/
    FlattenSequence.prototype.indexOffsetBy = function ($info, i, n) {
    };
    /*Swift.(file).FlattenSequence.formIndex(_:FlattenSequence<Base>.Index,offsetBy:Int)*/
    /*Swift.(file).FlattenSequence.formIndex(_:FlattenSequence<Base>.Index,offsetBy:Int)*/
    FlattenSequence.prototype.formIndexOffsetBy = function ($info, i$inout, n) {
    };
    /*Swift.(file).FlattenSequence.index(_:FlattenSequence<Base>.Index,offsetBy:Int,limitedBy:FlattenSequence<Base>.Index)*/
    /*Swift.(file).Collection.index(_:Self.Index,offsetBy:Int,limitedBy:Self.Index)*/
    /*Swift.(file).BidirectionalCollection.index(_:Self.Index,offsetBy:Int,limitedBy:Self.Index)*/
    FlattenSequence.prototype.indexOffsetByLimitedBy = function ($info, i, n, limit) {
    };
    /*Swift.(file).FlattenSequence.formIndex(_:FlattenSequence<Base>.Index,offsetBy:Int,limitedBy:FlattenSequence<Base>.Index)*/
    /*Swift.(file).FlattenSequence.formIndex(_:FlattenSequence<Base>.Index,offsetBy:Int,limitedBy:FlattenSequence<Base>.Index)*/
    FlattenSequence.prototype.formIndexOffsetByLimitedBy = function ($info, i$inout, n, limit) {
    };
    /*Swift.(file).FlattenSequence.subscript(_:FlattenSequence<Base>.Index)*/
    /*Swift.(file).Collection.subscript(_:Self.Index)*/
    /*Swift.(file).BidirectionalCollection.subscript(_:Self.Index)*/
    FlattenSequence.prototype.subscript$get = function ($info, position) {
        return this[position];
    };
    /*Swift.(file).FlattenSequence.subscript(_:Range<FlattenSequence<Base>.Index>)*/
    /*Swift.(file).Collection.subscript(_:Range<Self.Index>)*/
    /*Swift.(file).BidirectionalCollection.subscript(_:Range<Self.Index>)*/
    FlattenSequence.prototype.subcriptRange$get = function ($info, bounds) {
        return this[bounds];
    };
    /*Swift.(file).FlattenSequence.index(before:FlattenSequence<Base>.Index)*/
    /*Swift.(file).BidirectionalCollection.index(before:Self.Index)*/
    FlattenSequence.prototype.indexBefore = function ($info, i) {
    };
    /*Swift.(file).FlattenSequence.formIndex(before:FlattenSequence<Base>.Index)*/
    /*Swift.(file).BidirectionalCollection.formIndex(before:Self.Index)*/
    FlattenSequence.prototype.formIndexBefore = function ($info, i$inout) {
    };
    var _32, _33;
    FlattenSequence.$struct = true;
    FlattenSequence.$infoAddress = '0x7fb85181e3f0';
    FlattenSequence.Index = (_32 = /** @class */ (function () {
            function class_56() {
            }
            /*Swift.(file).FlattenSequence.Index.init(_:Base.Index,_:Base.Element.Index?)*/
            /*Swift.(file).FlattenSequence.Index.init(_:Base.Index,_:Base.Element.Index?)*/
            class_56.prototype.initOptional = function ($info, _outer, inner) {
            };
            /*Swift.(file).Index.==infix(_:FlattenCollection<Base>.Index,_:FlattenCollection<Base>.Index)*/
            /*Swift.(file).Equatable.==infix(_:Self,_:Self)*/
            class_56.infix_61_61 = function ($info, lhs, rhs) {
                return lhs == rhs;
            };
            /*Swift.(file).Index.<infix(_:FlattenCollection<Base>.Index,_:FlattenCollection<Base>.Index)*/
            /*Swift.(file).Comparable.<infix(_:Self,_:Self)*/
            class_56.infix_60 = function ($info, lhs, rhs) {
                return lhs < rhs;
            };
            /*Swift.(file).Index.hash(into:Hasher)*/
            /*Swift.(file).Hashable.hash(into:Hasher)*/
            class_56.prototype.hashInto = function ($info, hasher$inout) {
            };
            /*Swift.(file).Index.hashValue*/ /*
            hashValue$get() {
            return this.hashValue
            }
            get hashValue() { return this.hashValue$get() }*/ ;
            return class_56;
        }()),
        _32.$struct = true,
        _32.$infoAddress = '0x7fb85181e7f8',
        _32);
    FlattenSequence.Iterator = (_33 = /** @class */ (function () {
            function class_57() {
            }
            /*Swift.(file).FlattenSequence.Iterator.init(_base:Base.Iterator)*/
            /*Swift.(file).FlattenSequence.Iterator.init(_base:Base.Iterator)*/
            class_57.prototype.init_base = function ($info, _base) {
                return _base;
            };
            /*Swift.(file).Iterator.next()*/
            /*Swift.(file).IteratorProtocol.next()*/
            class_57.prototype.next = function ($info) {
            };
            return class_57;
        }()),
        _33.$struct = true,
        _33.$infoAddress = '0x7fb852ada5f8',
        _33);
    return FlattenSequence;
}());
if (typeof Equatable$implementation != 'undefined')
    _mixin(FlattenSequence.Index, Equatable$implementation, false);
if (typeof Comparable$implementation != 'undefined')
    _mixin(FlattenSequence.Index, Comparable$implementation, false);
if (typeof Hashable$implementation != 'undefined')
    _mixin(FlattenSequence.Index, Hashable$implementation, false);
if (typeof IteratorProtocol$implementation != 'undefined')
    _mixin(FlattenSequence.Iterator, IteratorProtocol$implementation, false);
if (typeof Sequence$implementation != 'undefined')
    _mixin(FlattenSequence.Iterator, Sequence$implementation, false);
if (typeof Sequence$implementation != 'undefined')
    _mixin(FlattenSequence, Sequence$implementation, false);
if (typeof Collection$implementation != 'undefined')
    _mixin(FlattenSequence, Collection$implementation, false);
if (typeof BidirectionalCollection$implementation != 'undefined')
    _mixin(FlattenSequence, BidirectionalCollection$implementation, false);
var FloatingPoint$implementation = /** @class */ (function () {
    function FloatingPoint$implementation() {
    }
    /*Swift.(file).FloatingPoint.==infix(_:Self,_:Self)*/
    /*Swift.(file).FloatingPoint.==infix(_:Self,_:Self)*/
    FloatingPoint$implementation.infix_61_61 = function ($info, lhs, rhs) {
        return lhs == rhs;
    };
    /*Swift.(file).FloatingPoint.<infix(_:Self,_:Self)*/
    /*Swift.(file).FloatingPoint.<infix(_:Self,_:Self)*/
    FloatingPoint$implementation.infix_60 = function ($info, lhs, rhs) {
        return lhs < rhs;
    };
    /*Swift.(file).FloatingPoint.<=infix(_:Self,_:Self)*/
    /*Swift.(file).FloatingPoint.<=infix(_:Self,_:Self)*/
    FloatingPoint$implementation.infix_60_61 = function ($info, lhs, rhs) {
        return lhs <= rhs;
    };
    /*Swift.(file).FloatingPoint.>infix(_:Self,_:Self)*/
    /*Swift.(file).FloatingPoint.>infix(_:Self,_:Self)*/
    FloatingPoint$implementation.infix_62 = function ($info, lhs, rhs) {
        return lhs > rhs;
    };
    /*Swift.(file).FloatingPoint.>=infix(_:Self,_:Self)*/
    /*Swift.(file).FloatingPoint.>=infix(_:Self,_:Self)*/
    FloatingPoint$implementation.infix_62_61 = function ($info, lhs, rhs) {
        return lhs >= rhs;
    };
    /*Swift.(file).FloatingPoint.ulpOfOne*/ /**/ ;
    /*Swift.(file).FloatingPoint.rounded(_:FloatingPointRoundingRule)*/
    /*Swift.(file).FloatingPoint.rounded(_:FloatingPointRoundingRule)*/
    FloatingPoint$implementation.prototype.rounded = function ($info, rule) {
    };
    /*Swift.(file).FloatingPoint.rounded()*/
    /*Swift.(file).FloatingPoint.rounded()*/
    FloatingPoint$implementation.prototype.rounded = function ($info) {
    };
    /*Swift.(file).FloatingPoint.round()*/
    /*Swift.(file).FloatingPoint.round()*/
    FloatingPoint$implementation.prototype.round = function ($info) {
    };
    /*Swift.(file).FloatingPoint.nextDown*/ /**/ ;
    /*Swift.(file).FloatingPoint.truncatingRemainder(dividingBy:Self)*/
    /*Swift.(file).FloatingPoint.truncatingRemainder(dividingBy:Self)*/
    FloatingPoint$implementation.prototype.truncatingRemainderDividingBy = function ($info, other) {
    };
    /*Swift.(file).FloatingPoint.remainder(dividingBy:Self)*/
    /*Swift.(file).FloatingPoint.remainder(dividingBy:Self)*/
    FloatingPoint$implementation.prototype.remainderDividingBy = function ($info, other) {
    };
    /*Swift.(file).FloatingPoint.squareRoot()*/
    /*Swift.(file).FloatingPoint.squareRoot()*/
    FloatingPoint$implementation.prototype.squareRoot = function ($info) {
    };
    /*Swift.(file).FloatingPoint.addingProduct(_:Self,_:Self)*/
    /*Swift.(file).FloatingPoint.addingProduct(_:Self,_:Self)*/
    FloatingPoint$implementation.prototype.addingProduct = function ($info, lhs, rhs) {
    };
    /*Swift.(file).FloatingPoint.minimum(_:Self,_:Self)*/
    /*Swift.(file).FloatingPoint.minimum(_:Self,_:Self)*/
    FloatingPoint$implementation.minimum = function ($info, x, y) {
    };
    /*Swift.(file).FloatingPoint.maximum(_:Self,_:Self)*/
    /*Swift.(file).FloatingPoint.maximum(_:Self,_:Self)*/
    FloatingPoint$implementation.maximum = function ($info, x, y) {
    };
    /*Swift.(file).FloatingPoint.minimumMagnitude(_:Self,_:Self)*/
    /*Swift.(file).FloatingPoint.minimumMagnitude(_:Self,_:Self)*/
    FloatingPoint$implementation.minimumMagnitude = function ($info, x, y) {
    };
    /*Swift.(file).FloatingPoint.maximumMagnitude(_:Self,_:Self)*/
    /*Swift.(file).FloatingPoint.maximumMagnitude(_:Self,_:Self)*/
    FloatingPoint$implementation.maximumMagnitude = function ($info, x, y) {
    };
    /*Swift.(file).FloatingPoint.floatingPointClass*/ /**/ ;
    return FloatingPoint$implementation;
}());
if (typeof SignedNumeric$implementation != 'undefined')
    _mixin(FloatingPoint$implementation, SignedNumeric$implementation, false);
if (typeof Strideable$implementation != 'undefined')
    _mixin(FloatingPoint$implementation, Strideable$implementation, false);
if (typeof Hashable$implementation != 'undefined')
    _mixin(FloatingPoint$implementation, Hashable$implementation, false);
var BinaryFloatingPoint$implementation = /** @class */ (function () {
    function BinaryFloatingPoint$implementation() {
    }
    /*Swift.(file).BinaryFloatingPoint.radix*/ /**/ ;
    /*Swift.(file).BinaryFloatingPoint.init(signOf:Self,magnitudeOf:Self)*/
    /*Swift.(file).BinaryFloatingPoint.init(signOf:Self,magnitudeOf:Self)*/
    BinaryFloatingPoint$implementation.prototype.initSignOfMagnitudeOf = function ($info, signOf, magnitudeOf) {
    };
    /*Swift.(file).BinaryFloatingPoint.init(_:Source)*/
    /*Swift.(file).BinaryFloatingPoint.init(_:Source)*/
    BinaryFloatingPoint$implementation.prototype.init = function ($info, value) {
        return value;
    };
    /*Swift.(file).BinaryFloatingPoint.init(exactly:Source)*/
    /*Swift.(file).BinaryFloatingPoint.init(exactly:Source)*/
    BinaryFloatingPoint$implementation.prototype.initExactly = function ($info, value) {
        return value;
    };
    /*Swift.(file).BinaryFloatingPoint.isTotallyOrdered(belowOrEqualTo:Self)*/
    /*Swift.(file).BinaryFloatingPoint.isTotallyOrdered(belowOrEqualTo:Self)*/
    BinaryFloatingPoint$implementation.prototype.isTotallyOrderedBelowOrEqualTo = function ($info, other) {
    };
    /*Swift.(file).BinaryFloatingPoint.init(_:Source)*/
    /*Swift.(file).BinaryFloatingPoint.init(_:Source)*/
    BinaryFloatingPoint$implementation.prototype.init = function ($info, value) {
        return value;
    };
    /*Swift.(file).BinaryFloatingPoint.init(exactly:Source)*/
    /*Swift.(file).BinaryFloatingPoint.init(exactly:Source)*/
    BinaryFloatingPoint$implementation.prototype.initExactly = function ($info, value) {
        return value;
    };
    /*Swift.(file).BinaryFloatingPoint.random(in:Range<Self>,using:T)*/
    /*Swift.(file).BinaryFloatingPoint.random(in:Range<Self>,using:T)*/
    BinaryFloatingPoint$implementation.randomInUsing = function ($info, range, generator$inout) {
    };
    /*Swift.(file).BinaryFloatingPoint.random(in:Range<Self>)*/
    /*Swift.(file).BinaryFloatingPoint.random(in:Range<Self>)*/
    BinaryFloatingPoint$implementation.randomIn = function ($info, range) {
    };
    /*Swift.(file).BinaryFloatingPoint.random(in:ClosedRange<Self>,using:T)*/
    /*Swift.(file).BinaryFloatingPoint.random(in:ClosedRange<Self>,using:T)*/
    BinaryFloatingPoint$implementation.randomInUsing = function ($info, range, generator$inout) {
    };
    /*Swift.(file).BinaryFloatingPoint.random(in:ClosedRange<Self>)*/
    /*Swift.(file).BinaryFloatingPoint.random(in:ClosedRange<Self>)*/
    BinaryFloatingPoint$implementation.randomIn = function ($info, range) {
    };
    return BinaryFloatingPoint$implementation;
}());
if (typeof FloatingPoint$implementation != 'undefined')
    _mixin(BinaryFloatingPoint$implementation, FloatingPoint$implementation, false);
if (typeof ExpressibleByFloatLiteral$implementation != 'undefined')
    _mixin(BinaryFloatingPoint$implementation, ExpressibleByFloatLiteral$implementation, false);
var Float = /** @class */ (function () {
    function Float() {
    }
    /*Swift.(file).Float.init()*/
    /*Swift.(file).Float.init()*/
    Float.prototype.init = function ($info) {
    };
    /*Swift.(file).Float.init(_:FPIEEE32)*/
    /*Swift.(file).Float.init(_:FPIEEE32)*/
    Float.prototype.initFPIEEE32 = function ($info, _value) {
        return _value;
    };
    /*Swift.(file).Float.+infix(_:Float,_:Float)*/
    /*Swift.(file).FloatingPoint.+infix(_:Self,_:Self)*/
    /*Swift.(file).AdditiveArithmetic.+infix(_:Self,_:Self)*/
    Float.infix_43 = function ($info, lhs, rhs) {
        return lhs + rhs;
    };
    /*Swift.(file).Float.-infix(_:Float,_:Float)*/
    /*Swift.(file).FloatingPoint.-infix(_:Self,_:Self)*/
    /*Swift.(file).AdditiveArithmetic.-infix(_:Self,_:Self)*/
    Float.infix_45 = function ($info, lhs, rhs) {
        return lhs - rhs;
    };
    /*Swift.(file).Float.*infix(_:Float,_:Float)*/
    /*Swift.(file).FloatingPoint.*infix(_:Self,_:Self)*/
    /*Swift.(file).Numeric.*infix(_:Self,_:Self)*/
    Float.infix_42 = function ($info, lhs, rhs) {
        return lhs * rhs;
    };
    /*Swift.(file).Float./infix(_:Float,_:Float)*/
    /*Swift.(file).FloatingPoint./infix(_:Self,_:Self)*/
    Float.infix_47 = function ($info, lhs, rhs) {
        return lhs / rhs;
    };
    /*Swift.(file).Float.init(from:Decoder)*/
    /*Swift.(file).Decodable.init(from:Decoder)*/
    Float.prototype.initFromDecoder = function ($info, decoder) {
        return decoder;
    };
    /*Swift.(file).Float.encode(to:Encoder)*/
    /*Swift.(file).Encodable.encode(to:Encoder)*/
    Float.prototype.encodeTo = function ($info, encoder) {
    };
    /*Swift.(file).Float.init(_:S)*/
    /*Swift.(file).LosslessStringConvertible.init(_:String)*/
    Float.prototype.initString = function ($info, _text) {
        return _text;
    };
    /*Swift.(file).Float.description*/ /*
    description$get() {
    return this.description
    }
    get description() { return this.description$get() }*/ ;
    /*Swift.(file).Float.debugDescription*/ /*
    debugDescription$get() {
    return this.debugDescription
    }
    get debugDescription() { return this.debugDescription$get() }*/ ;
    /*Swift.(file).Float.write(to:Target)*/
    /*Swift.(file).TextOutputStreamable.write(to:Target)*/
    Float.prototype.writeTo = function ($info, target$inout) {
    };
    /*Swift.(file).Float.exponentBitCount*/ /*
    static exponentBitCount$get() {
    return this.exponentBitCount
    }
    static get exponentBitCount() { return this.exponentBitCount$get() }*/ ;
    /*Swift.(file).Float.significandBitCount*/ /*
    static significandBitCount$get() {
    return this.significandBitCount
    }
    static get significandBitCount() { return this.significandBitCount$get() }*/ ;
    /*Swift.(file).Float.bitPattern*/ /*
    bitPattern$get() {
    return this.bitPattern
    }
    get bitPattern() { return this.bitPattern$get() }*/ ;
    /*Swift.(file).Float.init(bitPattern:UInt32)*/
    /*Swift.(file).Float.init(bitPattern:UInt32)*/
    Float.prototype.initBitPatternUInt32 = function ($info, bitPattern) {
        return bitPattern;
    };
    /*Swift.(file).Float.sign*/ /*
    sign$get() {
    return this.sign
    }
    get sign() { return this.sign$get() }*/ ;
    /*Swift.(file).Float.isSignMinus*/ /*
    isSignMinus$get() {
    return this.isSignMinus
    }
    get isSignMinus() { return this.isSignMinus$get() }*/ ;
    /*Swift.(file).Float.exponentBitPattern*/ /*
    exponentBitPattern$get() {
    return this.exponentBitPattern
    }
    get exponentBitPattern() { return this.exponentBitPattern$get() }*/ ;
    /*Swift.(file).Float.significandBitPattern*/ /*
    significandBitPattern$get() {
    return this.significandBitPattern
    }
    get significandBitPattern() { return this.significandBitPattern$get() }*/ ;
    /*Swift.(file).Float.init(sign:FloatingPointSign,exponentBitPattern:UInt,significandBitPattern:UInt32)*/
    /*Swift.(file).BinaryFloatingPoint.init(sign:FloatingPointSign,exponentBitPattern:Self.RawExponent,significandBitPattern:Self.RawSignificand)*/
    Float.prototype.initSignFloatingPointSignExponentBitPatternSignificandBitPattern = function ($info, sign, exponentBitPattern, significandBitPattern) {
    };
    /*Swift.(file).Float.isCanonical*/ /*
    isCanonical$get() {
    return this.isCanonical
    }
    get isCanonical() { return this.isCanonical$get() }*/ ;
    /*Swift.(file).Float.infinity*/ /*
    static infinity$get() {
    return this.infinity
    }
    static get infinity() { return this.infinity$get() }*/ ;
    /*Swift.(file).Float.nan*/ /*
    static nan$get() {
    return this.nan
    }
    static get nan() { return this.nan$get() }*/ ;
    /*Swift.(file).Float.signalingNaN*/ /*
    static signalingNaN$get() {
    return this.signalingNaN
    }
    static get signalingNaN() { return this.signalingNaN$get() }*/ ;
    /*Swift.(file).Float.quietNaN*/ /*
    static quietNaN$get() {
    return this.quietNaN
    }
    static get quietNaN() { return this.quietNaN$get() }*/ ;
    /*Swift.(file).Float.greatestFiniteMagnitude*/ /*
    static greatestFiniteMagnitude$get() {
    return this.greatestFiniteMagnitude
    }
    static get greatestFiniteMagnitude() { return this.greatestFiniteMagnitude$get() }*/ ;
    /*Swift.(file).Float.pi*/ /*
    static pi$get() {
    return this.pi
    }
    static get pi() { return this.pi$get() }*/ ;
    /*Swift.(file).Float.ulp*/ /*
    ulp$get() {
    return this.ulp
    }
    get ulp() { return this.ulp$get() }*/ ;
    /*Swift.(file).Float.leastNormalMagnitude*/ /*
    static leastNormalMagnitude$get() {
    return this.leastNormalMagnitude
    }
    static get leastNormalMagnitude() { return this.leastNormalMagnitude$get() }*/ ;
    /*Swift.(file).Float.leastNonzeroMagnitude*/ /*
    static leastNonzeroMagnitude$get() {
    return this.leastNonzeroMagnitude
    }
    static get leastNonzeroMagnitude() { return this.leastNonzeroMagnitude$get() }*/ ;
    /*Swift.(file).Float.ulpOfOne*/ /*
    static ulpOfOne$get() {
    return this.ulpOfOne
    }
    static get ulpOfOne() { return this.ulpOfOne$get() }*/ ;
    /*Swift.(file).Float.exponent*/ /*
    exponent$get() {
    return this.exponent
    }
    get exponent() { return this.exponent$get() }*/ ;
    /*Swift.(file).Float.significand*/ /*
    significand$get() {
    return this.significand
    }
    get significand() { return this.significand$get() }*/ ;
    /*Swift.(file).Float.init(sign:FloatingPointSign,exponent:Int,significand:Float)*/
    /*Swift.(file).FloatingPoint.init(sign:FloatingPointSign,exponent:Self.Exponent,significand:Self)*/
    Float.prototype.initSignFloatingPointSignExponentSignificand = function ($info, sign, exponent, significand) {
    };
    /*Swift.(file).Float.init(nan:Float.RawSignificand,signaling:Bool)*/
    /*Swift.(file).Float.init(nan:Float.RawSignificand,signaling:Bool)*/
    Float.prototype.initNanFloatRawSignificandSignalingBool = function ($info, payload, signaling) {
    };
    /*Swift.(file).Float.nextUp*/ /*
    nextUp$get() {
    return this.nextUp
    }
    get nextUp() { return this.nextUp$get() }*/ ;
    /*Swift.(file).Float.round(_:FloatingPointRoundingRule)*/
    /*Swift.(file).FloatingPoint.round(_:FloatingPointRoundingRule)*/
    Float.prototype.round = function ($info, rule) {
    };
    /*Swift.(file).Float.negate()*/
    /*Swift.(file).FloatingPoint.negate()*/
    /*Swift.(file).SignedNumeric.negate()*/
    Float.prototype.negate = function ($info) {
    };
    /*Swift.(file).Float.+=infix(_:Float,_:Float)*/
    /*Swift.(file).FloatingPoint.+=infix(_:Self,_:Self)*/
    /*Swift.(file).AdditiveArithmetic.+=infix(_:Self,_:Self)*/
    Float.infix_43_61 = function ($info, lhs$inout, rhs) {
        lhs$inout.set(lhs$inout.get() + rhs);
    };
    /*Swift.(file).Float.-=infix(_:Float,_:Float)*/
    /*Swift.(file).FloatingPoint.-=infix(_:Self,_:Self)*/
    /*Swift.(file).AdditiveArithmetic.-=infix(_:Self,_:Self)*/
    Float.infix_45_61 = function ($info, lhs$inout, rhs) {
        lhs$inout.set(lhs$inout.get() - rhs);
    };
    /*Swift.(file).Float.*=infix(_:Float,_:Float)*/
    /*Swift.(file).FloatingPoint.*=infix(_:Self,_:Self)*/
    /*Swift.(file).Numeric.*=infix(_:Self,_:Self)*/
    Float.infix_42_61 = function ($info, lhs$inout, rhs) {
        lhs$inout.set(lhs$inout.get() * rhs);
    };
    /*Swift.(file).Float./=infix(_:Float,_:Float)*/
    /*Swift.(file).FloatingPoint./=infix(_:Self,_:Self)*/
    Float.infix_47_61 = function ($info, lhs$inout, rhs) {
        lhs$inout.set(lhs$inout.get() / rhs);
    };
    /*Swift.(file).Float.formRemainder(dividingBy:Float)*/
    /*Swift.(file).FloatingPoint.formRemainder(dividingBy:Self)*/
    Float.prototype.formRemainderDividingBy = function ($info, other) {
    };
    /*Swift.(file).Float.formTruncatingRemainder(dividingBy:Float)*/
    /*Swift.(file).FloatingPoint.formTruncatingRemainder(dividingBy:Self)*/
    Float.prototype.formTruncatingRemainderDividingBy = function ($info, other) {
    };
    /*Swift.(file).Float.formSquareRoot()*/
    /*Swift.(file).FloatingPoint.formSquareRoot()*/
    Float.prototype.formSquareRoot = function ($info) {
    };
    /*Swift.(file).Float.addProduct(_:Float,_:Float)*/
    /*Swift.(file).FloatingPoint.addProduct(_:Self,_:Self)*/
    Float.prototype.addProduct = function ($info, lhs, rhs) {
    };
    /*Swift.(file).Float.isEqual(to:Float)*/
    /*Swift.(file).FloatingPoint.isEqual(to:Self)*/
    Float.prototype.isEqualTo = function ($info, other) {
    };
    /*Swift.(file).Float.isLess(than:Float)*/
    /*Swift.(file).FloatingPoint.isLess(than:Self)*/
    Float.prototype.isLessThan = function ($info, other) {
    };
    /*Swift.(file).Float.isLessThanOrEqualTo(_:Float)*/
    /*Swift.(file).FloatingPoint.isLessThanOrEqualTo(_:Self)*/
    Float.prototype.isLessThanOrEqualTo = function ($info, other) {
    };
    /*Swift.(file).Float.isNormal*/ /*
    isNormal$get() {
    return this.isNormal
    }
    get isNormal() { return this.isNormal$get() }*/ ;
    /*Swift.(file).Float.isZero*/ /*
    isZero$get() {
    return this.isZero
    }
    get isZero() { return this.isZero$get() }*/ ;
    /*Swift.(file).Float.isSubnormal*/ /*
    isSubnormal$get() {
    return this.isSubnormal
    }
    get isSubnormal() { return this.isSubnormal$get() }*/ ;
    /*Swift.(file).Float.isInfinite*/ /*
    isInfinite$get() {
    return this.isInfinite
    }
    get isInfinite() { return this.isInfinite$get() }*/ ;
    /*Swift.(file).Float.isSignalingNaN*/ /*
    isSignalingNaN$get() {
    return this.isSignalingNaN
    }
    get isSignalingNaN() { return this.isSignalingNaN$get() }*/ ;
    /*Swift.(file).Float.binade*/ /*
    binade$get() {
    return this.binade
    }
    get binade() { return this.binade$get() }*/ ;
    /*Swift.(file).Float.significandWidth*/ /*
    significandWidth$get() {
    return this.significandWidth
    }
    get significandWidth() { return this.significandWidth$get() }*/ ;
    /*Swift.(file).Float.init(floatLiteral:Float)*/
    /*Swift.(file).ExpressibleByFloatLiteral.init(floatLiteral:Self.FloatLiteralType)*/
    Float.prototype.initFloatLiteral = function ($info, value) {
        return value;
    };
    /*Swift.(file).Float.init(_builtinIntegerLiteral:IntLiteral)*/
    /*Swift.(file)._ExpressibleByBuiltinIntegerLiteral.init(_builtinIntegerLiteral:IntLiteral)*/
    Float.prototype.init_builtinIntegerLiteralIntLiteral = function ($info, value) {
        return value;
    };
    /*Swift.(file).Float.init(integerLiteral:Int64)*/
    /*Swift.(file).ExpressibleByIntegerLiteral.init(integerLiteral:Self.IntegerLiteralType)*/
    Float.prototype.initIntegerLiteral = function ($info, value) {
        return value;
    };
    /*Swift.(file).Float.init(_builtinFloatLiteral:FPIEEE80)*/
    /*Swift.(file)._ExpressibleByBuiltinFloatLiteral.init(_builtinFloatLiteral:_MaxBuiltinFloatType)*/
    Float.prototype.init_builtinFloatLiteral_MaxBuiltinFloatType = function ($info, value) {
        return value;
    };
    /*Swift.(file).Float.hash(into:Hasher)*/
    /*Swift.(file).Hashable.hash(into:Hasher)*/
    Float.prototype.hashInto = function ($info, hasher$inout) {
    };
    /*Swift.(file).Float.hashValue*/ /*
    hashValue$get() {
    return this.hashValue
    }
    get hashValue() { return this.hashValue$get() }*/ ;
    /*Swift.(file).Float.magnitude*/ /*
    magnitude$get() {
    return this.magnitude
    }
    get magnitude() { return this.magnitude$get() }*/ ;
    /*Swift.(file).Float.-prefix(_:Float)*/
    /*Swift.(file).FloatingPoint.-prefix(_:Self)*/
    /*Swift.(file).SignedNumeric.-prefix(_:Self)*/
    Float.prefix_45 = function ($info, x) {
        return -x;
    };
    /*Swift.(file).Float.init(_:Int)*/
    /*Swift.(file).FloatingPoint.init(_:Int)*/
    Float.prototype.initInt = function ($info, v) {
        return v;
    };
    /*Swift.(file).Float.init(_:Source)*/
    /*Swift.(file).FloatingPoint.init(_:Source)*/
    Float.prototype.init = function ($info, value) {
        return value;
    };
    /*Swift.(file).Float.init(_:Float)*/
    /*Swift.(file).BinaryFloatingPoint.init(_:Float)*/
    Float.prototype.initFloat = function ($info, other) {
        return other;
    };
    /*Swift.(file).Float.init(exactly:Float)*/
    /*Swift.(file).Float.init(exactly:Float)*/
    Float.prototype.initExactlyFloat = function ($info, other) {
        return other;
    };
    /*Swift.(file).Float.init(_:Double)*/
    /*Swift.(file).BinaryFloatingPoint.init(_:Double)*/
    Float.prototype.initDouble = function ($info, other) {
        return other;
    };
    /*Swift.(file).Float.init(exactly:Double)*/
    /*Swift.(file).Float.init(exactly:Double)*/
    Float.prototype.initExactlyDouble = function ($info, other) {
        return other;
    };
    /*Swift.(file).Float.init(_:Float80)*/
    /*Swift.(file).BinaryFloatingPoint.init(_:Float80)*/
    Float.prototype.initFloat80 = function ($info, other) {
        return other;
    };
    /*Swift.(file).Float.init(exactly:Float80)*/
    /*Swift.(file).Float.init(exactly:Float80)*/
    Float.prototype.initExactlyFloat80 = function ($info, other) {
        return other;
    };
    /*Swift.(file).Float.distance(to:Float)*/
    /*Swift.(file).Strideable.distance(to:Self)*/
    Float.prototype.distanceTo = function ($info, other) {
    };
    /*Swift.(file).Float.advanced(by:Float)*/
    /*Swift.(file).Strideable.advanced(by:Self.Stride)*/
    Float.prototype.advancedBy = function ($info, amount) {
    };
    /*Swift.(file).Float.customMirror*/ /*
    customMirror$get() {
    return this.customMirror
    }
    get customMirror() { return this.customMirror$get() }*/ ;
    /*Swift.(file).Float.customPlaygroundQuickLook*/ /*
    customPlaygroundQuickLook$get() {
    return this.customPlaygroundQuickLook
    }
    get customPlaygroundQuickLook() { return this.customPlaygroundQuickLook$get() }*/ ;
    var _34, _35, _36, _37, _38, _39;
    Float.$struct = true;
    Float.$mixin = true;
    Float.$infoAddress = '0x7fb8519994b8';
    Float.SIMD2Storage = (_34 = /** @class */ (function () {
            function class_58() {
            }
            /*Swift.(file).Float.SIMD2Storage.init()*/
            /*Swift.(file).SIMDStorage.init()*/
            class_58.prototype.init = function ($info) {
            };
            /*Swift.(file).Float.SIMD2Storage.subscript(_:Int)*/
            /*Swift.(file).SIMDStorage.subscript(_:Int)*/
            class_58.prototype.subscript$get = function ($info, index) {
                return this[index];
            }; /*Swift.(file).Float.SIMD2Storage.subscript(_:Int)*/
            /*Swift.(file).SIMDStorage.subscript(_:Int)*/
            class_58.prototype.subscript$set = function ($info, newValue, index) {
                this[index] = newValue;
            };
            return class_58;
        }()),
        _34.$struct = true,
        _34.$infoAddress = '0x7fb855332108',
        _34);
    Float.SIMD4Storage = (_35 = /** @class */ (function () {
            function class_59() {
            }
            /*Swift.(file).Float.SIMD4Storage.init()*/
            /*Swift.(file).SIMDStorage.init()*/
            class_59.prototype.init = function ($info) {
            };
            /*Swift.(file).Float.SIMD4Storage.subscript(_:Int)*/
            /*Swift.(file).SIMDStorage.subscript(_:Int)*/
            class_59.prototype.subscript$get = function ($info, index) {
                return this[index];
            }; /*Swift.(file).Float.SIMD4Storage.subscript(_:Int)*/
            /*Swift.(file).SIMDStorage.subscript(_:Int)*/
            class_59.prototype.subscript$set = function ($info, newValue, index) {
                this[index] = newValue;
            };
            return class_59;
        }()),
        _35.$struct = true,
        _35.$infoAddress = '0x7fb8553322b0',
        _35);
    Float.SIMD8Storage = (_36 = /** @class */ (function () {
            function class_60() {
            }
            /*Swift.(file).Float.SIMD8Storage.init()*/
            /*Swift.(file).SIMDStorage.init()*/
            class_60.prototype.init = function ($info) {
            };
            /*Swift.(file).Float.SIMD8Storage.subscript(_:Int)*/
            /*Swift.(file).SIMDStorage.subscript(_:Int)*/
            class_60.prototype.subscript$get = function ($info, index) {
                return this[index];
            }; /*Swift.(file).Float.SIMD8Storage.subscript(_:Int)*/
            /*Swift.(file).SIMDStorage.subscript(_:Int)*/
            class_60.prototype.subscript$set = function ($info, newValue, index) {
                this[index] = newValue;
            };
            return class_60;
        }()),
        _36.$struct = true,
        _36.$infoAddress = '0x7fb855332458',
        _36);
    Float.SIMD16Storage = (_37 = /** @class */ (function () {
            function class_61() {
            }
            /*Swift.(file).Float.SIMD16Storage.init()*/
            /*Swift.(file).SIMDStorage.init()*/
            class_61.prototype.init = function ($info) {
            };
            /*Swift.(file).Float.SIMD16Storage.subscript(_:Int)*/
            /*Swift.(file).SIMDStorage.subscript(_:Int)*/
            class_61.prototype.subscript$get = function ($info, index) {
                return this[index];
            }; /*Swift.(file).Float.SIMD16Storage.subscript(_:Int)*/
            /*Swift.(file).SIMDStorage.subscript(_:Int)*/
            class_61.prototype.subscript$set = function ($info, newValue, index) {
                this[index] = newValue;
            };
            return class_61;
        }()),
        _37.$struct = true,
        _37.$infoAddress = '0x7fb855332600',
        _37);
    Float.SIMD32Storage = (_38 = /** @class */ (function () {
            function class_62() {
            }
            /*Swift.(file).Float.SIMD32Storage.init()*/
            /*Swift.(file).SIMDStorage.init()*/
            class_62.prototype.init = function ($info) {
            };
            /*Swift.(file).Float.SIMD32Storage.subscript(_:Int)*/
            /*Swift.(file).SIMDStorage.subscript(_:Int)*/
            class_62.prototype.subscript$get = function ($info, index) {
                return this[index];
            }; /*Swift.(file).Float.SIMD32Storage.subscript(_:Int)*/
            /*Swift.(file).SIMDStorage.subscript(_:Int)*/
            class_62.prototype.subscript$set = function ($info, newValue, index) {
                this[index] = newValue;
            };
            return class_62;
        }()),
        _38.$struct = true,
        _38.$infoAddress = '0x7fb8553327a8',
        _38);
    Float.SIMD64Storage = (_39 = /** @class */ (function () {
            function class_63() {
            }
            /*Swift.(file).Float.SIMD64Storage.init()*/
            /*Swift.(file).SIMDStorage.init()*/
            class_63.prototype.init = function ($info) {
            };
            /*Swift.(file).Float.SIMD64Storage.subscript(_:Int)*/
            /*Swift.(file).SIMDStorage.subscript(_:Int)*/
            class_63.prototype.subscript$get = function ($info, index) {
                return this[index];
            }; /*Swift.(file).Float.SIMD64Storage.subscript(_:Int)*/
            /*Swift.(file).SIMDStorage.subscript(_:Int)*/
            class_63.prototype.subscript$set = function ($info, newValue, index) {
                this[index] = newValue;
            };
            return class_63;
        }()),
        _39.$struct = true,
        _39.$infoAddress = '0x7fb855332950',
        _39);
    return Float;
}());
if (typeof SIMDStorage$implementation != 'undefined')
    _mixin(Float.SIMD2Storage, SIMDStorage$implementation, false);
if (typeof SIMDStorage$implementation != 'undefined')
    _mixin(Float.SIMD4Storage, SIMDStorage$implementation, false);
if (typeof SIMDStorage$implementation != 'undefined')
    _mixin(Float.SIMD8Storage, SIMDStorage$implementation, false);
if (typeof SIMDStorage$implementation != 'undefined')
    _mixin(Float.SIMD16Storage, SIMDStorage$implementation, false);
if (typeof SIMDStorage$implementation != 'undefined')
    _mixin(Float.SIMD32Storage, SIMDStorage$implementation, false);
if (typeof SIMDStorage$implementation != 'undefined')
    _mixin(Float.SIMD64Storage, SIMDStorage$implementation, false);
if (typeof Codable$implementation != 'undefined')
    _mixin(Float, Codable$implementation, false);
if (typeof LosslessStringConvertible$implementation != 'undefined')
    _mixin(Float, LosslessStringConvertible$implementation, false);
if (typeof CustomStringConvertible$implementation != 'undefined')
    _mixin(Float, CustomStringConvertible$implementation, false);
if (typeof CustomDebugStringConvertible$implementation != 'undefined')
    _mixin(Float, CustomDebugStringConvertible$implementation, false);
if (typeof TextOutputStreamable$implementation != 'undefined')
    _mixin(Float, TextOutputStreamable$implementation, false);
if (typeof BinaryFloatingPoint$implementation != 'undefined')
    _mixin(Float, BinaryFloatingPoint$implementation, false);
if (typeof _ExpressibleByBuiltinIntegerLiteral$implementation != 'undefined')
    _mixin(Float, _ExpressibleByBuiltinIntegerLiteral$implementation, false);
if (typeof ExpressibleByIntegerLiteral$implementation != 'undefined')
    _mixin(Float, ExpressibleByIntegerLiteral$implementation, false);
if (typeof _ExpressibleByBuiltinFloatLiteral$implementation != 'undefined')
    _mixin(Float, _ExpressibleByBuiltinFloatLiteral$implementation, false);
if (typeof Hashable$implementation != 'undefined')
    _mixin(Float, Hashable$implementation, false);
if (typeof _HasCustomAnyHashableRepresentation$implementation != 'undefined')
    _mixin(Float, _HasCustomAnyHashableRepresentation$implementation, false);
if (typeof Strideable$implementation != 'undefined')
    _mixin(Float, Strideable$implementation, false);
if (typeof CustomReflectable$implementation != 'undefined')
    _mixin(Float, CustomReflectable$implementation, false);
if (typeof _CustomPlaygroundQuickLookable$implementation != 'undefined')
    _mixin(Float, _CustomPlaygroundQuickLookable$implementation, false);
if (typeof SIMDScalar$implementation != 'undefined')
    _mixin(Float, SIMDScalar$implementation, false);
if (typeof _CVarArgPassedAsDouble$implementation != 'undefined')
    _mixin(Float, _CVarArgPassedAsDouble$implementation, false);
if (typeof _CVarArgAligned$implementation != 'undefined')
    _mixin(Float, _CVarArgAligned$implementation, false);
var MIO_Mixin_Double = /** @class */ (function () {
    function MIO_Mixin_Double() {
    }
    /*Swift.(file).Double.init()*/
    /*Swift.(file).Double.init()*/
    MIO_Mixin_Double.prototype.init = function ($info) {
    };
    /*Swift.(file).Double.init(_:FPIEEE64)*/
    /*Swift.(file).Double.init(_:FPIEEE64)*/
    MIO_Mixin_Double.prototype.initFPIEEE64 = function ($info, _value) {
        return _value;
    };
    /*Swift.(file).Double.init(from:Decoder)*/
    /*Swift.(file).Decodable.init(from:Decoder)*/
    MIO_Mixin_Double.prototype.initFromDecoder = function ($info, decoder) {
        return decoder;
    };
    /*Swift.(file).Double.encode(to:Encoder)*/
    /*Swift.(file).Encodable.encode(to:Encoder)*/
    MIO_Mixin_Double.prototype.encodeTo = function ($info, encoder) {
    };
    /*Swift.(file).Double.init(_:S)*/
    /*Swift.(file).LosslessStringConvertible.init(_:String)*/
    MIO_Mixin_Double.prototype.initString = function ($info, _text) {
        return _text;
    };
    /*Swift.(file).Double.description*/ /*
    description$get() {
    return this.description
    }
    get description() { return this.description$get() }*/ ;
    /*Swift.(file).Double.debugDescription*/ /*
    debugDescription$get() {
    return this.debugDescription
    }
    get debugDescription() { return this.debugDescription$get() }*/ ;
    /*Swift.(file).Double.write(to:Target)*/
    /*Swift.(file).TextOutputStreamable.write(to:Target)*/
    MIO_Mixin_Double.prototype.writeTo = function ($info, target$inout) {
    };
    /*Swift.(file).Double.exponentBitCount*/ /*
    static exponentBitCount$get() {
    return this.exponentBitCount
    }
    static get exponentBitCount() { return this.exponentBitCount$get() }*/ ;
    /*Swift.(file).Double.significandBitCount*/ /*
    static significandBitCount$get() {
    return this.significandBitCount
    }
    static get significandBitCount() { return this.significandBitCount$get() }*/ ;
    /*Swift.(file).Double.bitPattern*/ /*
    bitPattern$get() {
    return this.bitPattern
    }
    get bitPattern() { return this.bitPattern$get() }*/ ;
    /*Swift.(file).Double.init(bitPattern:UInt64)*/
    /*Swift.(file).Double.init(bitPattern:UInt64)*/
    MIO_Mixin_Double.prototype.initBitPatternUInt64 = function ($info, bitPattern) {
        return bitPattern;
    };
    /*Swift.(file).Double.sign*/ /*
    sign$get() {
    return this.sign
    }
    get sign() { return this.sign$get() }*/ ;
    /*Swift.(file).Double.isSignMinus*/ /*
    isSignMinus$get() {
    return this.isSignMinus
    }
    get isSignMinus() { return this.isSignMinus$get() }*/ ;
    /*Swift.(file).Double.exponentBitPattern*/ /*
    exponentBitPattern$get() {
    return this.exponentBitPattern
    }
    get exponentBitPattern() { return this.exponentBitPattern$get() }*/ ;
    /*Swift.(file).Double.significandBitPattern*/ /*
    significandBitPattern$get() {
    return this.significandBitPattern
    }
    get significandBitPattern() { return this.significandBitPattern$get() }*/ ;
    /*Swift.(file).Double.init(sign:FloatingPointSign,exponentBitPattern:UInt,significandBitPattern:UInt64)*/
    /*Swift.(file).BinaryFloatingPoint.init(sign:FloatingPointSign,exponentBitPattern:Self.RawExponent,significandBitPattern:Self.RawSignificand)*/
    MIO_Mixin_Double.prototype.initSignFloatingPointSignExponentBitPatternSignificandBitPattern = function ($info, sign, exponentBitPattern, significandBitPattern) {
    };
    /*Swift.(file).Double.isCanonical*/ /*
    isCanonical$get() {
    return this.isCanonical
    }
    get isCanonical() { return this.isCanonical$get() }*/ ;
    /*Swift.(file).Double.infinity*/ /*
    static infinity$get() {
    return this.infinity
    }
    static get infinity() { return this.infinity$get() }*/ ;
    /*Swift.(file).Double.nan*/ /*
    static nan$get() {
    return this.nan
    }
    static get nan() { return this.nan$get() }*/ ;
    /*Swift.(file).Double.signalingNaN*/ /*
    static signalingNaN$get() {
    return this.signalingNaN
    }
    static get signalingNaN() { return this.signalingNaN$get() }*/ ;
    /*Swift.(file).Double.quietNaN*/ /*
    static quietNaN$get() {
    return this.quietNaN
    }
    static get quietNaN() { return this.quietNaN$get() }*/ ;
    /*Swift.(file).Double.greatestFiniteMagnitude*/ /*
    static greatestFiniteMagnitude$get() {
    return this.greatestFiniteMagnitude
    }
    static get greatestFiniteMagnitude() { return this.greatestFiniteMagnitude$get() }*/ ;
    /*Swift.(file).Double.pi*/ /*
    static pi$get() {
    return this.pi
    }
    static get pi() { return this.pi$get() }*/ ;
    /*Swift.(file).Double.ulp*/ /*
    ulp$get() {
    return this.ulp
    }
    get ulp() { return this.ulp$get() }*/ ;
    /*Swift.(file).Double.leastNormalMagnitude*/ /*
    static leastNormalMagnitude$get() {
    return this.leastNormalMagnitude
    }
    static get leastNormalMagnitude() { return this.leastNormalMagnitude$get() }*/ ;
    /*Swift.(file).Double.leastNonzeroMagnitude*/ /*
    static leastNonzeroMagnitude$get() {
    return this.leastNonzeroMagnitude
    }
    static get leastNonzeroMagnitude() { return this.leastNonzeroMagnitude$get() }*/ ;
    /*Swift.(file).Double.ulpOfOne*/ /*
    static ulpOfOne$get() {
    return this.ulpOfOne
    }
    static get ulpOfOne() { return this.ulpOfOne$get() }*/ ;
    /*Swift.(file).Double.exponent*/ /*
    exponent$get() {
    return this.exponent
    }
    get exponent() { return this.exponent$get() }*/ ;
    /*Swift.(file).Double.significand*/ /*
    significand$get() {
    return this.significand
    }
    get significand() { return this.significand$get() }*/ ;
    /*Swift.(file).Double.init(sign:FloatingPointSign,exponent:Int,significand:Double)*/
    /*Swift.(file).FloatingPoint.init(sign:FloatingPointSign,exponent:Self.Exponent,significand:Self)*/
    MIO_Mixin_Double.prototype.initSignFloatingPointSignExponentSignificand = function ($info, sign, exponent, significand) {
    };
    /*Swift.(file).Double.init(nan:Double.RawSignificand,signaling:Bool)*/
    /*Swift.(file).Double.init(nan:Double.RawSignificand,signaling:Bool)*/
    MIO_Mixin_Double.prototype.initNanDoubleRawSignificandSignalingBool = function ($info, payload, signaling) {
    };
    /*Swift.(file).Double.nextUp*/ /*
    nextUp$get() {
    return this.nextUp
    }
    get nextUp() { return this.nextUp$get() }*/ ;
    /*Swift.(file).Double.round(_:FloatingPointRoundingRule)*/
    /*Swift.(file).FloatingPoint.round(_:FloatingPointRoundingRule)*/
    MIO_Mixin_Double.prototype.round = function ($info, rule) {
    };
    /*Swift.(file).Double.negate()*/
    /*Swift.(file).FloatingPoint.negate()*/
    /*Swift.(file).SignedNumeric.negate()*/
    MIO_Mixin_Double.prototype.negate = function ($info) {
    };
    /*Swift.(file).Double.+=infix(_:Double,_:Double)*/
    /*Swift.(file).FloatingPoint.+=infix(_:Self,_:Self)*/
    /*Swift.(file).AdditiveArithmetic.+=infix(_:Self,_:Self)*/
    MIO_Mixin_Double.infix_43_61 = function ($info, lhs$inout, rhs) {
        lhs$inout.set(lhs$inout.get() + rhs);
    };
    /*Swift.(file).Double.-=infix(_:Double,_:Double)*/
    /*Swift.(file).FloatingPoint.-=infix(_:Self,_:Self)*/
    /*Swift.(file).AdditiveArithmetic.-=infix(_:Self,_:Self)*/
    MIO_Mixin_Double.infix_45_61 = function ($info, lhs$inout, rhs) {
        lhs$inout.set(lhs$inout.get() - rhs);
    };
    /*Swift.(file).Double.*=infix(_:Double,_:Double)*/
    /*Swift.(file).FloatingPoint.*=infix(_:Self,_:Self)*/
    /*Swift.(file).Numeric.*=infix(_:Self,_:Self)*/
    MIO_Mixin_Double.infix_42_61 = function ($info, lhs$inout, rhs) {
        lhs$inout.set(lhs$inout.get() * rhs);
    };
    /*Swift.(file).Double./=infix(_:Double,_:Double)*/
    /*Swift.(file).FloatingPoint./=infix(_:Self,_:Self)*/
    MIO_Mixin_Double.infix_47_61 = function ($info, lhs$inout, rhs) {
        lhs$inout.set(lhs$inout.get() / rhs);
    };
    /*Swift.(file).Double.formRemainder(dividingBy:Double)*/
    /*Swift.(file).FloatingPoint.formRemainder(dividingBy:Self)*/
    MIO_Mixin_Double.prototype.formRemainderDividingBy = function ($info, other) {
    };
    /*Swift.(file).Double.formTruncatingRemainder(dividingBy:Double)*/
    /*Swift.(file).FloatingPoint.formTruncatingRemainder(dividingBy:Self)*/
    MIO_Mixin_Double.prototype.formTruncatingRemainderDividingBy = function ($info, other) {
    };
    /*Swift.(file).Double.formSquareRoot()*/
    /*Swift.(file).FloatingPoint.formSquareRoot()*/
    MIO_Mixin_Double.prototype.formSquareRoot = function ($info) {
    };
    /*Swift.(file).Double.addProduct(_:Double,_:Double)*/
    /*Swift.(file).FloatingPoint.addProduct(_:Self,_:Self)*/
    MIO_Mixin_Double.prototype.addProduct = function ($info, lhs, rhs) {
    };
    /*Swift.(file).Double.isEqual(to:Double)*/
    /*Swift.(file).FloatingPoint.isEqual(to:Self)*/
    MIO_Mixin_Double.prototype.isEqualTo = function ($info, other) {
    };
    /*Swift.(file).Double.isLess(than:Double)*/
    /*Swift.(file).FloatingPoint.isLess(than:Self)*/
    MIO_Mixin_Double.prototype.isLessThan = function ($info, other) {
    };
    /*Swift.(file).Double.isLessThanOrEqualTo(_:Double)*/
    /*Swift.(file).FloatingPoint.isLessThanOrEqualTo(_:Self)*/
    MIO_Mixin_Double.prototype.isLessThanOrEqualTo = function ($info, other) {
    };
    /*Swift.(file).Double.isNormal*/ /*
    isNormal$get() {
    return this.isNormal
    }
    get isNormal() { return this.isNormal$get() }*/ ;
    /*Swift.(file).Double.isZero*/ /*
    isZero$get() {
    return this.isZero
    }
    get isZero() { return this.isZero$get() }*/ ;
    /*Swift.(file).Double.isSubnormal*/ /*
    isSubnormal$get() {
    return this.isSubnormal
    }
    get isSubnormal() { return this.isSubnormal$get() }*/ ;
    /*Swift.(file).Double.isInfinite*/ /*
    isInfinite$get() {
    return this.isInfinite
    }
    get isInfinite() { return this.isInfinite$get() }*/ ;
    /*Swift.(file).Double.isSignalingNaN*/ /*
    isSignalingNaN$get() {
    return this.isSignalingNaN
    }
    get isSignalingNaN() { return this.isSignalingNaN$get() }*/ ;
    /*Swift.(file).Double.binade*/ /*
    binade$get() {
    return this.binade
    }
    get binade() { return this.binade$get() }*/ ;
    /*Swift.(file).Double.significandWidth*/ /*
    significandWidth$get() {
    return this.significandWidth
    }
    get significandWidth() { return this.significandWidth$get() }*/ ;
    /*Swift.(file).Double.init(floatLiteral:Double)*/
    /*Swift.(file).ExpressibleByFloatLiteral.init(floatLiteral:Self.FloatLiteralType)*/
    MIO_Mixin_Double.prototype.initFloatLiteral = function ($info, value) {
        return value;
    };
    /*Swift.(file).Double.init(_builtinIntegerLiteral:IntLiteral)*/
    /*Swift.(file)._ExpressibleByBuiltinIntegerLiteral.init(_builtinIntegerLiteral:IntLiteral)*/
    MIO_Mixin_Double.prototype.init_builtinIntegerLiteralIntLiteral = function ($info, value) {
        return value;
    };
    /*Swift.(file).Double.init(integerLiteral:Int64)*/
    /*Swift.(file).ExpressibleByIntegerLiteral.init(integerLiteral:Self.IntegerLiteralType)*/
    MIO_Mixin_Double.prototype.initIntegerLiteral = function ($info, value) {
        return value;
    };
    /*Swift.(file).Double.init(_builtinFloatLiteral:FPIEEE80)*/
    /*Swift.(file)._ExpressibleByBuiltinFloatLiteral.init(_builtinFloatLiteral:_MaxBuiltinFloatType)*/
    MIO_Mixin_Double.prototype.init_builtinFloatLiteral_MaxBuiltinFloatType = function ($info, value) {
        return value;
    };
    /*Swift.(file).Double.hash(into:Hasher)*/
    /*Swift.(file).Hashable.hash(into:Hasher)*/
    MIO_Mixin_Double.prototype.hashInto = function ($info, hasher$inout) {
    };
    /*Swift.(file).Double.hashValue*/ /*
    hashValue$get() {
    return this.hashValue
    }
    get hashValue() { return this.hashValue$get() }*/ ;
    /*Swift.(file).Double.magnitude*/ /*
    magnitude$get() {
    return this.magnitude
    }
    get magnitude() { return this.magnitude$get() }*/ ;
    /*Swift.(file).Double.-prefix(_:Double)*/
    /*Swift.(file).FloatingPoint.-prefix(_:Self)*/
    /*Swift.(file).SignedNumeric.-prefix(_:Self)*/
    MIO_Mixin_Double.prefix_45 = function ($info, x) {
        return -x;
    };
    /*Swift.(file).Double.init(_:Int)*/
    /*Swift.(file).FloatingPoint.init(_:Int)*/
    MIO_Mixin_Double.prototype.initInt = function ($info, v) {
        return v;
    };
    /*Swift.(file).Double.init(_:Source)*/
    /*Swift.(file).FloatingPoint.init(_:Source)*/
    MIO_Mixin_Double.prototype.init = function ($info, value) {
        return value;
    };
    /*Swift.(file).Double.init(_:Float)*/
    /*Swift.(file).BinaryFloatingPoint.init(_:Float)*/
    MIO_Mixin_Double.prototype.initFloat = function ($info, other) {
        return other;
    };
    /*Swift.(file).Double.init(exactly:Float)*/
    /*Swift.(file).Double.init(exactly:Float)*/
    MIO_Mixin_Double.prototype.initExactlyFloat = function ($info, other) {
        return other;
    };
    /*Swift.(file).Double.init(_:Double)*/
    /*Swift.(file).BinaryFloatingPoint.init(_:Double)*/
    MIO_Mixin_Double.prototype.initDouble = function ($info, other) {
        return other;
    };
    /*Swift.(file).Double.init(exactly:Double)*/
    /*Swift.(file).Double.init(exactly:Double)*/
    MIO_Mixin_Double.prototype.initExactlyDouble = function ($info, other) {
        return other;
    };
    /*Swift.(file).Double.init(_:Float80)*/
    /*Swift.(file).BinaryFloatingPoint.init(_:Float80)*/
    MIO_Mixin_Double.prototype.initFloat80 = function ($info, other) {
        return other;
    };
    /*Swift.(file).Double.init(exactly:Float80)*/
    /*Swift.(file).Double.init(exactly:Float80)*/
    MIO_Mixin_Double.prototype.initExactlyFloat80 = function ($info, other) {
        return other;
    };
    /*Swift.(file).Double.+infix(_:Double,_:Double)*/
    /*Swift.(file).FloatingPoint.+infix(_:Self,_:Self)*/
    /*Swift.(file).AdditiveArithmetic.+infix(_:Self,_:Self)*/
    MIO_Mixin_Double.infix_43 = function ($info, lhs, rhs) {
        return lhs + rhs;
    };
    /*Swift.(file).Double.-infix(_:Double,_:Double)*/
    /*Swift.(file).FloatingPoint.-infix(_:Self,_:Self)*/
    /*Swift.(file).AdditiveArithmetic.-infix(_:Self,_:Self)*/
    MIO_Mixin_Double.infix_45 = function ($info, lhs, rhs) {
        return lhs - rhs;
    };
    /*Swift.(file).Double.*infix(_:Double,_:Double)*/
    /*Swift.(file).FloatingPoint.*infix(_:Self,_:Self)*/
    /*Swift.(file).Numeric.*infix(_:Self,_:Self)*/
    MIO_Mixin_Double.infix_42 = function ($info, lhs, rhs) {
        return lhs * rhs;
    };
    /*Swift.(file).Double./infix(_:Double,_:Double)*/
    /*Swift.(file).FloatingPoint./infix(_:Self,_:Self)*/
    MIO_Mixin_Double.infix_47 = function ($info, lhs, rhs) {
        return lhs / rhs;
    };
    /*Swift.(file).Double.distance(to:Double)*/
    /*Swift.(file).Strideable.distance(to:Self)*/
    MIO_Mixin_Double.prototype.distanceTo = function ($info, other) {
    };
    /*Swift.(file).Double.advanced(by:Double)*/
    /*Swift.(file).Strideable.advanced(by:Self.Stride)*/
    MIO_Mixin_Double.prototype.advancedBy = function ($info, amount) {
    };
    /*Swift.(file).Double.customMirror*/ /*
    customMirror$get() {
    return this.customMirror
    }
    get customMirror() { return this.customMirror$get() }*/ ;
    /*Swift.(file).Double.customPlaygroundQuickLook*/ /*
    customPlaygroundQuickLook$get() {
    return this.customPlaygroundQuickLook
    }
    get customPlaygroundQuickLook() { return this.customPlaygroundQuickLook$get() }*/ ;
    var _40, _41, _42, _43, _44, _45;
    MIO_Mixin_Double.$struct = true;
    MIO_Mixin_Double.$mixin = true;
    MIO_Mixin_Double.$infoAddress = '0x7fb855158070';
    MIO_Mixin_Double.SIMD2Storage = (_40 = /** @class */ (function () {
            function class_64() {
            }
            /*Swift.(file).Double.SIMD2Storage.init()*/
            /*Swift.(file).SIMDStorage.init()*/
            class_64.prototype.init = function ($info) {
            };
            /*Swift.(file).Double.SIMD2Storage.subscript(_:Int)*/
            /*Swift.(file).SIMDStorage.subscript(_:Int)*/
            class_64.prototype.subscript$get = function ($info, index) {
                return this[index];
            }; /*Swift.(file).Double.SIMD2Storage.subscript(_:Int)*/
            /*Swift.(file).SIMDStorage.subscript(_:Int)*/
            class_64.prototype.subscript$set = function ($info, newValue, index) {
                this[index] = newValue;
            };
            return class_64;
        }()),
        _40.$struct = true,
        _40.$infoAddress = '0x7fb851bb6e08',
        _40);
    MIO_Mixin_Double.SIMD4Storage = (_41 = /** @class */ (function () {
            function class_65() {
            }
            /*Swift.(file).Double.SIMD4Storage.init()*/
            /*Swift.(file).SIMDStorage.init()*/
            class_65.prototype.init = function ($info) {
            };
            /*Swift.(file).Double.SIMD4Storage.subscript(_:Int)*/
            /*Swift.(file).SIMDStorage.subscript(_:Int)*/
            class_65.prototype.subscript$get = function ($info, index) {
                return this[index];
            }; /*Swift.(file).Double.SIMD4Storage.subscript(_:Int)*/
            /*Swift.(file).SIMDStorage.subscript(_:Int)*/
            class_65.prototype.subscript$set = function ($info, newValue, index) {
                this[index] = newValue;
            };
            return class_65;
        }()),
        _41.$struct = true,
        _41.$infoAddress = '0x7fb851bb6fb0',
        _41);
    MIO_Mixin_Double.SIMD8Storage = (_42 = /** @class */ (function () {
            function class_66() {
            }
            /*Swift.(file).Double.SIMD8Storage.init()*/
            /*Swift.(file).SIMDStorage.init()*/
            class_66.prototype.init = function ($info) {
            };
            /*Swift.(file).Double.SIMD8Storage.subscript(_:Int)*/
            /*Swift.(file).SIMDStorage.subscript(_:Int)*/
            class_66.prototype.subscript$get = function ($info, index) {
                return this[index];
            }; /*Swift.(file).Double.SIMD8Storage.subscript(_:Int)*/
            /*Swift.(file).SIMDStorage.subscript(_:Int)*/
            class_66.prototype.subscript$set = function ($info, newValue, index) {
                this[index] = newValue;
            };
            return class_66;
        }()),
        _42.$struct = true,
        _42.$infoAddress = '0x7fb851bb7158',
        _42);
    MIO_Mixin_Double.SIMD16Storage = (_43 = /** @class */ (function () {
            function class_67() {
            }
            /*Swift.(file).Double.SIMD16Storage.init()*/
            /*Swift.(file).SIMDStorage.init()*/
            class_67.prototype.init = function ($info) {
            };
            /*Swift.(file).Double.SIMD16Storage.subscript(_:Int)*/
            /*Swift.(file).SIMDStorage.subscript(_:Int)*/
            class_67.prototype.subscript$get = function ($info, index) {
                return this[index];
            }; /*Swift.(file).Double.SIMD16Storage.subscript(_:Int)*/
            /*Swift.(file).SIMDStorage.subscript(_:Int)*/
            class_67.prototype.subscript$set = function ($info, newValue, index) {
                this[index] = newValue;
            };
            return class_67;
        }()),
        _43.$struct = true,
        _43.$infoAddress = '0x7fb851bb7300',
        _43);
    MIO_Mixin_Double.SIMD32Storage = (_44 = /** @class */ (function () {
            function class_68() {
            }
            /*Swift.(file).Double.SIMD32Storage.init()*/
            /*Swift.(file).SIMDStorage.init()*/
            class_68.prototype.init = function ($info) {
            };
            /*Swift.(file).Double.SIMD32Storage.subscript(_:Int)*/
            /*Swift.(file).SIMDStorage.subscript(_:Int)*/
            class_68.prototype.subscript$get = function ($info, index) {
                return this[index];
            }; /*Swift.(file).Double.SIMD32Storage.subscript(_:Int)*/
            /*Swift.(file).SIMDStorage.subscript(_:Int)*/
            class_68.prototype.subscript$set = function ($info, newValue, index) {
                this[index] = newValue;
            };
            return class_68;
        }()),
        _44.$struct = true,
        _44.$infoAddress = '0x7fb851bb74a8',
        _44);
    MIO_Mixin_Double.SIMD64Storage = (_45 = /** @class */ (function () {
            function class_69() {
            }
            /*Swift.(file).Double.SIMD64Storage.init()*/
            /*Swift.(file).SIMDStorage.init()*/
            class_69.prototype.init = function ($info) {
            };
            /*Swift.(file).Double.SIMD64Storage.subscript(_:Int)*/
            /*Swift.(file).SIMDStorage.subscript(_:Int)*/
            class_69.prototype.subscript$get = function ($info, index) {
                return this[index];
            }; /*Swift.(file).Double.SIMD64Storage.subscript(_:Int)*/
            /*Swift.(file).SIMDStorage.subscript(_:Int)*/
            class_69.prototype.subscript$set = function ($info, newValue, index) {
                this[index] = newValue;
            };
            return class_69;
        }()),
        _45.$struct = true,
        _45.$infoAddress = '0x7fb851bb7650',
        _45);
    return MIO_Mixin_Double;
}());
if (typeof SIMDStorage$implementation != 'undefined')
    _mixin(MIO_Mixin_Double.SIMD2Storage, SIMDStorage$implementation, false);
if (typeof SIMDStorage$implementation != 'undefined')
    _mixin(MIO_Mixin_Double.SIMD4Storage, SIMDStorage$implementation, false);
if (typeof SIMDStorage$implementation != 'undefined')
    _mixin(MIO_Mixin_Double.SIMD8Storage, SIMDStorage$implementation, false);
if (typeof SIMDStorage$implementation != 'undefined')
    _mixin(MIO_Mixin_Double.SIMD16Storage, SIMDStorage$implementation, false);
if (typeof SIMDStorage$implementation != 'undefined')
    _mixin(MIO_Mixin_Double.SIMD32Storage, SIMDStorage$implementation, false);
if (typeof SIMDStorage$implementation != 'undefined')
    _mixin(MIO_Mixin_Double.SIMD64Storage, SIMDStorage$implementation, false);
if (typeof Codable$implementation != 'undefined')
    _mixin(MIO_Mixin_Double, Codable$implementation, false);
if (typeof LosslessStringConvertible$implementation != 'undefined')
    _mixin(MIO_Mixin_Double, LosslessStringConvertible$implementation, false);
if (typeof CustomStringConvertible$implementation != 'undefined')
    _mixin(MIO_Mixin_Double, CustomStringConvertible$implementation, false);
if (typeof CustomDebugStringConvertible$implementation != 'undefined')
    _mixin(MIO_Mixin_Double, CustomDebugStringConvertible$implementation, false);
if (typeof TextOutputStreamable$implementation != 'undefined')
    _mixin(MIO_Mixin_Double, TextOutputStreamable$implementation, false);
if (typeof BinaryFloatingPoint$implementation != 'undefined')
    _mixin(MIO_Mixin_Double, BinaryFloatingPoint$implementation, false);
if (typeof _ExpressibleByBuiltinIntegerLiteral$implementation != 'undefined')
    _mixin(MIO_Mixin_Double, _ExpressibleByBuiltinIntegerLiteral$implementation, false);
if (typeof ExpressibleByIntegerLiteral$implementation != 'undefined')
    _mixin(MIO_Mixin_Double, ExpressibleByIntegerLiteral$implementation, false);
if (typeof _ExpressibleByBuiltinFloatLiteral$implementation != 'undefined')
    _mixin(MIO_Mixin_Double, _ExpressibleByBuiltinFloatLiteral$implementation, false);
if (typeof Hashable$implementation != 'undefined')
    _mixin(MIO_Mixin_Double, Hashable$implementation, false);
if (typeof _HasCustomAnyHashableRepresentation$implementation != 'undefined')
    _mixin(MIO_Mixin_Double, _HasCustomAnyHashableRepresentation$implementation, false);
if (typeof Strideable$implementation != 'undefined')
    _mixin(MIO_Mixin_Double, Strideable$implementation, false);
if (typeof CustomReflectable$implementation != 'undefined')
    _mixin(MIO_Mixin_Double, CustomReflectable$implementation, false);
if (typeof _CustomPlaygroundQuickLookable$implementation != 'undefined')
    _mixin(MIO_Mixin_Double, _CustomPlaygroundQuickLookable$implementation, false);
if (typeof SIMDScalar$implementation != 'undefined')
    _mixin(MIO_Mixin_Double, SIMDScalar$implementation, false);
if (typeof _CVarArgPassedAsDouble$implementation != 'undefined')
    _mixin(MIO_Mixin_Double, _CVarArgPassedAsDouble$implementation, false);
if (typeof _CVarArgAligned$implementation != 'undefined')
    _mixin(MIO_Mixin_Double, _CVarArgAligned$implementation, false);
_mixin(Number, MIO_Mixin_Double, true);
var Double = /** @class */ (function () {
    function Double() {
    }
    return Double;
}());
_mixin(Double, MIO_Mixin_Double, true);
var Float80 = /** @class */ (function () {
    function Float80() {
    }
    /*Swift.(file).Float80.init()*/
    /*Swift.(file).Float80.init()*/
    Float80.prototype.init = function ($info) {
    };
    /*Swift.(file).Float80.init(_:FPIEEE80)*/
    /*Swift.(file).Float80.init(_:FPIEEE80)*/
    Float80.prototype.initFPIEEE80 = function ($info, _value) {
        return _value;
    };
    /*Swift.(file).Float80.+infix(_:Float80,_:Float80)*/
    /*Swift.(file).FloatingPoint.+infix(_:Self,_:Self)*/
    /*Swift.(file).AdditiveArithmetic.+infix(_:Self,_:Self)*/
    Float80.infix_43 = function ($info, lhs, rhs) {
        return lhs + rhs;
    };
    /*Swift.(file).Float80.-infix(_:Float80,_:Float80)*/
    /*Swift.(file).FloatingPoint.-infix(_:Self,_:Self)*/
    /*Swift.(file).AdditiveArithmetic.-infix(_:Self,_:Self)*/
    Float80.infix_45 = function ($info, lhs, rhs) {
        return lhs - rhs;
    };
    /*Swift.(file).Float80.*infix(_:Float80,_:Float80)*/
    /*Swift.(file).FloatingPoint.*infix(_:Self,_:Self)*/
    /*Swift.(file).Numeric.*infix(_:Self,_:Self)*/
    Float80.infix_42 = function ($info, lhs, rhs) {
        return lhs * rhs;
    };
    /*Swift.(file).Float80./infix(_:Float80,_:Float80)*/
    /*Swift.(file).FloatingPoint./infix(_:Self,_:Self)*/
    Float80.infix_47 = function ($info, lhs, rhs) {
        return lhs / rhs;
    };
    /*Swift.(file).Float80.init(_:S)*/
    /*Swift.(file).LosslessStringConvertible.init(_:String)*/
    Float80.prototype.initString = function ($info, _text) {
        return _text;
    };
    /*Swift.(file).Float80.description*/ /*
    description$get() {
    return this.description
    }
    get description() { return this.description$get() }*/ ;
    /*Swift.(file).Float80.debugDescription*/ /*
    debugDescription$get() {
    return this.debugDescription
    }
    get debugDescription() { return this.debugDescription$get() }*/ ;
    /*Swift.(file).Float80.write(to:Target)*/
    /*Swift.(file).TextOutputStreamable.write(to:Target)*/
    Float80.prototype.writeTo = function ($info, target$inout) {
    };
    /*Swift.(file).Float80.exponentBitCount*/ /*
    static exponentBitCount$get() {
    return this.exponentBitCount
    }
    static get exponentBitCount() { return this.exponentBitCount$get() }*/ ;
    /*Swift.(file).Float80.significandBitCount*/ /*
    static significandBitCount$get() {
    return this.significandBitCount
    }
    static get significandBitCount() { return this.significandBitCount$get() }*/ ;
    /*Swift.(file).Float80.exponentBitPattern*/ /*
    exponentBitPattern$get() {
    return this.exponentBitPattern
    }
    get exponentBitPattern() { return this.exponentBitPattern$get() }*/ ;
    /*Swift.(file).Float80.significandBitPattern*/ /*
    significandBitPattern$get() {
    return this.significandBitPattern
    }
    get significandBitPattern() { return this.significandBitPattern$get() }*/ ;
    /*Swift.(file).Float80.init(sign:FloatingPointSign,exponentBitPattern:UInt,significandBitPattern:UInt64)*/
    /*Swift.(file).BinaryFloatingPoint.init(sign:FloatingPointSign,exponentBitPattern:Self.RawExponent,significandBitPattern:Self.RawSignificand)*/
    Float80.prototype.initSignFloatingPointSignExponentBitPatternSignificandBitPattern = function ($info, sign, exponentBitPattern, significandBitPattern) {
    };
    /*Swift.(file).Float80.isCanonical*/ /*
    isCanonical$get() {
    return this.isCanonical
    }
    get isCanonical() { return this.isCanonical$get() }*/ ;
    /*Swift.(file).Float80.infinity*/ /*
    static infinity$get() {
    return this.infinity
    }
    static get infinity() { return this.infinity$get() }*/ ;
    /*Swift.(file).Float80.nan*/ /*
    static nan$get() {
    return this.nan
    }
    static get nan() { return this.nan$get() }*/ ;
    /*Swift.(file).Float80.signalingNaN*/ /*
    static signalingNaN$get() {
    return this.signalingNaN
    }
    static get signalingNaN() { return this.signalingNaN$get() }*/ ;
    /*Swift.(file).Float80.quietNaN*/ /*
    static quietNaN$get() {
    return this.quietNaN
    }
    static get quietNaN() { return this.quietNaN$get() }*/ ;
    /*Swift.(file).Float80.greatestFiniteMagnitude*/ /*
    static greatestFiniteMagnitude$get() {
    return this.greatestFiniteMagnitude
    }
    static get greatestFiniteMagnitude() { return this.greatestFiniteMagnitude$get() }*/ ;
    /*Swift.(file).Float80.pi*/ /*
    static pi$get() {
    return this.pi
    }
    static get pi() { return this.pi$get() }*/ ;
    /*Swift.(file).Float80.ulp*/ /*
    ulp$get() {
    return this.ulp
    }
    get ulp() { return this.ulp$get() }*/ ;
    /*Swift.(file).Float80.leastNormalMagnitude*/ /*
    static leastNormalMagnitude$get() {
    return this.leastNormalMagnitude
    }
    static get leastNormalMagnitude() { return this.leastNormalMagnitude$get() }*/ ;
    /*Swift.(file).Float80.leastNonzeroMagnitude*/ /*
    static leastNonzeroMagnitude$get() {
    return this.leastNonzeroMagnitude
    }
    static get leastNonzeroMagnitude() { return this.leastNonzeroMagnitude$get() }*/ ;
    /*Swift.(file).Float80.ulpOfOne*/ /*
    static ulpOfOne$get() {
    return this.ulpOfOne
    }
    static get ulpOfOne() { return this.ulpOfOne$get() }*/ ;
    /*Swift.(file).Float80.exponent*/ /*
    exponent$get() {
    return this.exponent
    }
    get exponent() { return this.exponent$get() }*/ ;
    /*Swift.(file).Float80.significand*/ /*
    significand$get() {
    return this.significand
    }
    get significand() { return this.significand$get() }*/ ;
    /*Swift.(file).Float80.init(sign:FloatingPointSign,exponent:Int,significand:Float80)*/
    /*Swift.(file).FloatingPoint.init(sign:FloatingPointSign,exponent:Self.Exponent,significand:Self)*/
    Float80.prototype.initSignFloatingPointSignExponentSignificand = function ($info, sign, exponent, significand) {
    };
    /*Swift.(file).Float80.init(nan:Float80.RawSignificand,signaling:Bool)*/
    /*Swift.(file).Float80.init(nan:Float80.RawSignificand,signaling:Bool)*/
    Float80.prototype.initNanFloat80RawSignificandSignalingBool = function ($info, payload, signaling) {
    };
    /*Swift.(file).Float80.nextUp*/ /*
    nextUp$get() {
    return this.nextUp
    }
    get nextUp() { return this.nextUp$get() }*/ ;
    /*Swift.(file).Float80.round(_:FloatingPointRoundingRule)*/
    /*Swift.(file).FloatingPoint.round(_:FloatingPointRoundingRule)*/
    Float80.prototype.round = function ($info, rule) {
    };
    /*Swift.(file).Float80.negate()*/
    /*Swift.(file).FloatingPoint.negate()*/
    /*Swift.(file).SignedNumeric.negate()*/
    Float80.prototype.negate = function ($info) {
    };
    /*Swift.(file).Float80.+=infix(_:Float80,_:Float80)*/
    /*Swift.(file).FloatingPoint.+=infix(_:Self,_:Self)*/
    /*Swift.(file).AdditiveArithmetic.+=infix(_:Self,_:Self)*/
    Float80.infix_43_61 = function ($info, lhs$inout, rhs) {
        lhs$inout.set(lhs$inout.get() + rhs);
    };
    /*Swift.(file).Float80.-=infix(_:Float80,_:Float80)*/
    /*Swift.(file).FloatingPoint.-=infix(_:Self,_:Self)*/
    /*Swift.(file).AdditiveArithmetic.-=infix(_:Self,_:Self)*/
    Float80.infix_45_61 = function ($info, lhs$inout, rhs) {
        lhs$inout.set(lhs$inout.get() - rhs);
    };
    /*Swift.(file).Float80.*=infix(_:Float80,_:Float80)*/
    /*Swift.(file).FloatingPoint.*=infix(_:Self,_:Self)*/
    /*Swift.(file).Numeric.*=infix(_:Self,_:Self)*/
    Float80.infix_42_61 = function ($info, lhs$inout, rhs) {
        lhs$inout.set(lhs$inout.get() * rhs);
    };
    /*Swift.(file).Float80./=infix(_:Float80,_:Float80)*/
    /*Swift.(file).FloatingPoint./=infix(_:Self,_:Self)*/
    Float80.infix_47_61 = function ($info, lhs$inout, rhs) {
        lhs$inout.set(lhs$inout.get() / rhs);
    };
    /*Swift.(file).Float80.formRemainder(dividingBy:Float80)*/
    /*Swift.(file).FloatingPoint.formRemainder(dividingBy:Self)*/
    Float80.prototype.formRemainderDividingBy = function ($info, other) {
    };
    /*Swift.(file).Float80.formTruncatingRemainder(dividingBy:Float80)*/
    /*Swift.(file).FloatingPoint.formTruncatingRemainder(dividingBy:Self)*/
    Float80.prototype.formTruncatingRemainderDividingBy = function ($info, other) {
    };
    /*Swift.(file).Float80.formSquareRoot()*/
    /*Swift.(file).FloatingPoint.formSquareRoot()*/
    Float80.prototype.formSquareRoot = function ($info) {
    };
    /*Swift.(file).Float80.addProduct(_:Float80,_:Float80)*/
    /*Swift.(file).FloatingPoint.addProduct(_:Self,_:Self)*/
    Float80.prototype.addProduct = function ($info, lhs, rhs) {
    };
    /*Swift.(file).Float80.isEqual(to:Float80)*/
    /*Swift.(file).FloatingPoint.isEqual(to:Self)*/
    Float80.prototype.isEqualTo = function ($info, other) {
    };
    /*Swift.(file).Float80.isLess(than:Float80)*/
    /*Swift.(file).FloatingPoint.isLess(than:Self)*/
    Float80.prototype.isLessThan = function ($info, other) {
    };
    /*Swift.(file).Float80.isLessThanOrEqualTo(_:Float80)*/
    /*Swift.(file).FloatingPoint.isLessThanOrEqualTo(_:Self)*/
    Float80.prototype.isLessThanOrEqualTo = function ($info, other) {
    };
    /*Swift.(file).Float80.isNormal*/ /*
    isNormal$get() {
    return this.isNormal
    }
    get isNormal() { return this.isNormal$get() }*/ ;
    /*Swift.(file).Float80.isZero*/ /*
    isZero$get() {
    return this.isZero
    }
    get isZero() { return this.isZero$get() }*/ ;
    /*Swift.(file).Float80.isSubnormal*/ /*
    isSubnormal$get() {
    return this.isSubnormal
    }
    get isSubnormal() { return this.isSubnormal$get() }*/ ;
    /*Swift.(file).Float80.isInfinite*/ /*
    isInfinite$get() {
    return this.isInfinite
    }
    get isInfinite() { return this.isInfinite$get() }*/ ;
    /*Swift.(file).Float80.isSignalingNaN*/ /*
    isSignalingNaN$get() {
    return this.isSignalingNaN
    }
    get isSignalingNaN() { return this.isSignalingNaN$get() }*/ ;
    /*Swift.(file).Float80.binade*/ /*
    binade$get() {
    return this.binade
    }
    get binade() { return this.binade$get() }*/ ;
    /*Swift.(file).Float80.significandWidth*/ /*
    significandWidth$get() {
    return this.significandWidth
    }
    get significandWidth() { return this.significandWidth$get() }*/ ;
    /*Swift.(file).Float80.init(floatLiteral:Float80)*/
    /*Swift.(file).ExpressibleByFloatLiteral.init(floatLiteral:Self.FloatLiteralType)*/
    Float80.prototype.initFloatLiteral = function ($info, value) {
        return value;
    };
    /*Swift.(file).Float80.init(_builtinIntegerLiteral:IntLiteral)*/
    /*Swift.(file)._ExpressibleByBuiltinIntegerLiteral.init(_builtinIntegerLiteral:IntLiteral)*/
    Float80.prototype.init_builtinIntegerLiteralIntLiteral = function ($info, value) {
        return value;
    };
    /*Swift.(file).Float80.init(integerLiteral:Int64)*/
    /*Swift.(file).ExpressibleByIntegerLiteral.init(integerLiteral:Self.IntegerLiteralType)*/
    Float80.prototype.initIntegerLiteral = function ($info, value) {
        return value;
    };
    /*Swift.(file).Float80.init(_builtinFloatLiteral:FPIEEE80)*/
    /*Swift.(file)._ExpressibleByBuiltinFloatLiteral.init(_builtinFloatLiteral:_MaxBuiltinFloatType)*/
    Float80.prototype.init_builtinFloatLiteral_MaxBuiltinFloatType = function ($info, value) {
        return value;
    };
    /*Swift.(file).Float80.hash(into:Hasher)*/
    /*Swift.(file).Hashable.hash(into:Hasher)*/
    Float80.prototype.hashInto = function ($info, hasher$inout) {
    };
    /*Swift.(file).Float80.hashValue*/ /*
    hashValue$get() {
    return this.hashValue
    }
    get hashValue() { return this.hashValue$get() }*/ ;
    /*Swift.(file).Float80.magnitude*/ /*
    magnitude$get() {
    return this.magnitude
    }
    get magnitude() { return this.magnitude$get() }*/ ;
    /*Swift.(file).Float80.-prefix(_:Float80)*/
    /*Swift.(file).FloatingPoint.-prefix(_:Self)*/
    /*Swift.(file).SignedNumeric.-prefix(_:Self)*/
    Float80.prefix_45 = function ($info, x) {
        return -x;
    };
    /*Swift.(file).Float80.init(_:Int)*/
    /*Swift.(file).FloatingPoint.init(_:Int)*/
    Float80.prototype.initInt = function ($info, v) {
        return v;
    };
    /*Swift.(file).Float80.init(_:Source)*/
    /*Swift.(file).FloatingPoint.init(_:Source)*/
    Float80.prototype.init = function ($info, value) {
        return value;
    };
    /*Swift.(file).Float80.init(_:Float)*/
    /*Swift.(file).BinaryFloatingPoint.init(_:Float)*/
    Float80.prototype.initFloat = function ($info, other) {
        return other;
    };
    /*Swift.(file).Float80.init(exactly:Float)*/
    /*Swift.(file).Float80.init(exactly:Float)*/
    Float80.prototype.initExactlyFloat = function ($info, other) {
        return other;
    };
    /*Swift.(file).Float80.init(_:Double)*/
    /*Swift.(file).BinaryFloatingPoint.init(_:Double)*/
    Float80.prototype.initDouble = function ($info, other) {
        return other;
    };
    /*Swift.(file).Float80.init(exactly:Double)*/
    /*Swift.(file).Float80.init(exactly:Double)*/
    Float80.prototype.initExactlyDouble = function ($info, other) {
        return other;
    };
    /*Swift.(file).Float80.init(_:Float80)*/
    /*Swift.(file).BinaryFloatingPoint.init(_:Float80)*/
    Float80.prototype.initFloat80 = function ($info, other) {
        return other;
    };
    /*Swift.(file).Float80.init(exactly:Float80)*/
    /*Swift.(file).Float80.init(exactly:Float80)*/
    Float80.prototype.initExactlyFloat80 = function ($info, other) {
        return other;
    };
    /*Swift.(file).Float80.distance(to:Float80)*/
    /*Swift.(file).Strideable.distance(to:Self)*/
    Float80.prototype.distanceTo = function ($info, other) {
    };
    /*Swift.(file).Float80.advanced(by:Float80)*/
    /*Swift.(file).Strideable.advanced(by:Self.Stride)*/
    Float80.prototype.advancedBy = function ($info, amount) {
    };
    /*Swift.(file).Float80.customMirror*/ /*
    customMirror$get() {
    return this.customMirror
    }
    get customMirror() { return this.customMirror$get() }*/ ;
    var _46;
    Float80.$struct = true;
    Float80.$mixin = true;
    Float80.$infoAddress = '0x7fb85182b018';
    Float80._Representation = (_46 = /** @class */ (function () {
            function class_70() {
            }
            /*Swift.(file).Float80._Representation.signAndExponent*/ /*
            signAndExponent$get() {
            return this.signAndExponent
            }
            get signAndExponent() { return this.signAndExponent$get() }*/ ;
            /*Swift.(file).Float80._Representation.sign*/ /*
            sign$get() {
            return this.sign
            }
            get sign() { return this.sign$get() }*/ ;
            /*Swift.(file).Float80._Representation.exponentBitPattern*/ /*
            exponentBitPattern$get() {
            return this.exponentBitPattern
            }
            get exponentBitPattern() { return this.exponentBitPattern$get() }*/ ;
            /*Swift.(file).Float80._Representation.init(explicitSignificand:UInt64,signAndExponent:UInt16)*/
            /*Swift.(file).Float80._Representation.init(explicitSignificand:UInt64,signAndExponent:UInt16)*/
            class_70.prototype.initExplicitSignificandUInt64SignAndExponentUInt16 = function ($info, explicitSignificand, signAndExponent) {
            };
            return class_70;
        }()),
        _46.$struct = true,
        _46.$infoAddress = '0x7fb851bc5e88',
        _46);
    return Float80;
}());
if (typeof LosslessStringConvertible$implementation != 'undefined')
    _mixin(Float80, LosslessStringConvertible$implementation, false);
if (typeof CustomStringConvertible$implementation != 'undefined')
    _mixin(Float80, CustomStringConvertible$implementation, false);
if (typeof CustomDebugStringConvertible$implementation != 'undefined')
    _mixin(Float80, CustomDebugStringConvertible$implementation, false);
if (typeof TextOutputStreamable$implementation != 'undefined')
    _mixin(Float80, TextOutputStreamable$implementation, false);
if (typeof BinaryFloatingPoint$implementation != 'undefined')
    _mixin(Float80, BinaryFloatingPoint$implementation, false);
if (typeof _ExpressibleByBuiltinIntegerLiteral$implementation != 'undefined')
    _mixin(Float80, _ExpressibleByBuiltinIntegerLiteral$implementation, false);
if (typeof ExpressibleByIntegerLiteral$implementation != 'undefined')
    _mixin(Float80, ExpressibleByIntegerLiteral$implementation, false);
if (typeof _ExpressibleByBuiltinFloatLiteral$implementation != 'undefined')
    _mixin(Float80, _ExpressibleByBuiltinFloatLiteral$implementation, false);
if (typeof Hashable$implementation != 'undefined')
    _mixin(Float80, Hashable$implementation, false);
if (typeof _HasCustomAnyHashableRepresentation$implementation != 'undefined')
    _mixin(Float80, _HasCustomAnyHashableRepresentation$implementation, false);
if (typeof Strideable$implementation != 'undefined')
    _mixin(Float80, Strideable$implementation, false);
if (typeof CustomReflectable$implementation != 'undefined')
    _mixin(Float80, CustomReflectable$implementation, false);
if (typeof CVarArg$implementation != 'undefined')
    _mixin(Float80, CVarArg$implementation, false);
if (typeof _CVarArgAligned$implementation != 'undefined')
    _mixin(Float80, _CVarArgAligned$implementation, false);
var BinaryInteger$implementation = /** @class */ (function () {
    function BinaryInteger$implementation() {
    }
    /*Swift.(file).BinaryInteger.==infix(_:Self,_:Other)*/
    /*Swift.(file).BinaryInteger.==infix(_:Self,_:Other)*/
    BinaryInteger$implementation.infix_61_61 = function ($info, lhs, rhs) {
        return lhs == rhs;
    };
    /*Swift.(file).BinaryInteger.!=infix(_:Self,_:Other)*/
    /*Swift.(file).BinaryInteger.!=infix(_:Self,_:Other)*/
    BinaryInteger$implementation.infix_33_61 = function ($info, lhs, rhs) {
        return lhs != rhs;
    };
    /*Swift.(file).BinaryInteger.<infix(_:Self,_:Other)*/
    /*Swift.(file).BinaryInteger.<infix(_:Self,_:Other)*/
    BinaryInteger$implementation.infix_60 = function ($info, lhs, rhs) {
        return lhs < rhs;
    };
    /*Swift.(file).BinaryInteger.<=infix(_:Self,_:Other)*/
    /*Swift.(file).BinaryInteger.<=infix(_:Self,_:Other)*/
    BinaryInteger$implementation.infix_60_61 = function ($info, lhs, rhs) {
        return lhs <= rhs;
    };
    /*Swift.(file).BinaryInteger.>=infix(_:Self,_:Other)*/
    /*Swift.(file).BinaryInteger.>=infix(_:Self,_:Other)*/
    BinaryInteger$implementation.infix_62_61 = function ($info, lhs, rhs) {
        return lhs >= rhs;
    };
    /*Swift.(file).BinaryInteger.>infix(_:Self,_:Other)*/
    /*Swift.(file).BinaryInteger.>infix(_:Self,_:Other)*/
    BinaryInteger$implementation.infix_62 = function ($info, lhs, rhs) {
        return lhs > rhs;
    };
    /*Swift.(file).BinaryInteger.!=infix(_:Self,_:Self)*/
    /*Swift.(file).BinaryInteger.!=infix(_:Self,_:Self)*/
    BinaryInteger$implementation.infix_33_61 = function ($info, lhs, rhs) {
        return lhs != rhs;
    };
    /*Swift.(file).BinaryInteger.<=infix(_:Self,_:Self)*/
    /*Swift.(file).BinaryInteger.<=infix(_:Self,_:Self)*/
    BinaryInteger$implementation.infix_60_61 = function ($info, lhs, rhs) {
        return lhs <= rhs;
    };
    /*Swift.(file).BinaryInteger.>=infix(_:Self,_:Self)*/
    /*Swift.(file).BinaryInteger.>=infix(_:Self,_:Self)*/
    BinaryInteger$implementation.infix_62_61 = function ($info, lhs, rhs) {
        return lhs >= rhs;
    };
    /*Swift.(file).BinaryInteger.>infix(_:Self,_:Self)*/
    /*Swift.(file).BinaryInteger.>infix(_:Self,_:Self)*/
    BinaryInteger$implementation.infix_62 = function ($info, lhs, rhs) {
        return lhs > rhs;
    };
    /*Swift.(file).BinaryInteger.init()*/
    /*Swift.(file).BinaryInteger.init()*/
    BinaryInteger$implementation.prototype.init = function ($info) {
    };
    /*Swift.(file).BinaryInteger.signum()*/
    /*Swift.(file).BinaryInteger.signum()*/
    BinaryInteger$implementation.prototype.signum = function ($info) {
    };
    /*Swift.(file).BinaryInteger.quotientAndRemainder(dividingBy:Self)*/
    /*Swift.(file).BinaryInteger.quotientAndRemainder(dividingBy:Self)*/
    BinaryInteger$implementation.prototype.quotientAndRemainderDividingBy = function ($info, rhs) {
    };
    /*Swift.(file).BinaryInteger.isMultiple(of:Self)*/
    /*Swift.(file).BinaryInteger.isMultiple(of:Self)*/
    BinaryInteger$implementation.prototype.isMultipleOf = function ($info, other) {
    };
    /*Swift.(file).BinaryInteger.&infix(_:Self,_:Self)*/
    /*Swift.(file).BinaryInteger.&infix(_:Self,_:Self)*/
    BinaryInteger$implementation.infix_38 = function ($info, lhs, rhs) {
        /*return lhs & rhs*/
    };
    /*Swift.(file).BinaryInteger.|infix(_:Self,_:Self)*/
    /*Swift.(file).BinaryInteger.|infix(_:Self,_:Self)*/
    BinaryInteger$implementation.infix_124 = function ($info, lhs, rhs) {
        return lhs | rhs;
    };
    /*Swift.(file).BinaryInteger.^infix(_:Self,_:Self)*/
    /*Swift.(file).BinaryInteger.^infix(_:Self,_:Self)*/
    BinaryInteger$implementation.infix_94 = function ($info, lhs, rhs) {
        return lhs ^ rhs;
    };
    /*Swift.(file).BinaryInteger.>>infix(_:Self,_:RHS)*/
    /*Swift.(file).BinaryInteger.>>infix(_:Self,_:RHS)*/
    BinaryInteger$implementation.infix_62_62 = function ($info, lhs, rhs) {
        return lhs >> rhs;
    };
    /*Swift.(file).BinaryInteger.<<infix(_:Self,_:RHS)*/
    /*Swift.(file).BinaryInteger.<<infix(_:Self,_:RHS)*/
    BinaryInteger$implementation.infix_60_60 = function ($info, lhs, rhs) {
        return lhs << rhs;
    };
    /*Swift.(file).BinaryInteger.description*/ /**/ ;
    /*Swift.(file).BinaryInteger.distance(to:Self)*/
    /*Swift.(file).BinaryInteger.distance(to:Self)*/
    BinaryInteger$implementation.prototype.distanceTo = function ($info, other) {
    };
    /*Swift.(file).BinaryInteger.advanced(by:Int)*/
    /*Swift.(file).BinaryInteger.advanced(by:Int)*/
    BinaryInteger$implementation.prototype.advancedBy = function ($info, n) {
    };
    /*Swift.(file).BinaryInteger.addWithOverflow(_:Self,_:Self)*/
    /*Swift.(file).BinaryInteger.addWithOverflow(_:Self,_:Self)*/
    BinaryInteger$implementation.addWithOverflow = function ($info, lhs, rhs) {
    };
    /*Swift.(file).BinaryInteger.subtractWithOverflow(_:Self,_:Self)*/
    /*Swift.(file).BinaryInteger.subtractWithOverflow(_:Self,_:Self)*/
    BinaryInteger$implementation.subtractWithOverflow = function ($info, lhs, rhs) {
    };
    /*Swift.(file).BinaryInteger.multiplyWithOverflow(_:Self,_:Self)*/
    /*Swift.(file).BinaryInteger.multiplyWithOverflow(_:Self,_:Self)*/
    BinaryInteger$implementation.multiplyWithOverflow = function ($info, lhs, rhs) {
    };
    /*Swift.(file).BinaryInteger.divideWithOverflow(_:Self,_:Self)*/
    /*Swift.(file).BinaryInteger.divideWithOverflow(_:Self,_:Self)*/
    BinaryInteger$implementation.divideWithOverflow = function ($info, lhs, rhs) {
    };
    /*Swift.(file).BinaryInteger.remainderWithOverflow(_:Self,_:Self)*/
    /*Swift.(file).BinaryInteger.remainderWithOverflow(_:Self,_:Self)*/
    BinaryInteger$implementation.remainderWithOverflow = function ($info, lhs, rhs) {
    };
    return BinaryInteger$implementation;
}());
if (typeof Hashable$implementation != 'undefined')
    _mixin(BinaryInteger$implementation, Hashable$implementation, false);
if (typeof Numeric$implementation != 'undefined')
    _mixin(BinaryInteger$implementation, Numeric$implementation, false);
if (typeof CustomStringConvertible$implementation != 'undefined')
    _mixin(BinaryInteger$implementation, CustomStringConvertible$implementation, false);
if (typeof Strideable$implementation != 'undefined')
    _mixin(BinaryInteger$implementation, Strideable$implementation, false);
var FixedWidthInteger$implementation = /** @class */ (function () {
    function FixedWidthInteger$implementation() {
    }
    /*Swift.(file).FixedWidthInteger.init(_:S,radix:Int)*/
    /*Swift.(file).FixedWidthInteger.init(_:S,radix:Int)*/
    FixedWidthInteger$implementation.prototype.initRadixInt = function ($info, _text, radix) {
    };
    /*Swift.(file).FixedWidthInteger.init(_:String)*/
    /*Swift.(file).FixedWidthInteger.init(_:String)*/
    FixedWidthInteger$implementation.prototype.initString = function ($info, description) {
        return description;
    };
    /*Swift.(file).FixedWidthInteger.bitWidth*/ /**/ ;
    /*Swift.(file).FixedWidthInteger.init(littleEndian:Self)*/
    /*Swift.(file).FixedWidthInteger.init(littleEndian:Self)*/
    FixedWidthInteger$implementation.prototype.initLittleEndian = function ($info, value) {
        return value;
    };
    /*Swift.(file).FixedWidthInteger.init(bigEndian:Self)*/
    /*Swift.(file).FixedWidthInteger.init(bigEndian:Self)*/
    FixedWidthInteger$implementation.prototype.initBigEndian = function ($info, value) {
        return value;
    };
    /*Swift.(file).FixedWidthInteger.littleEndian*/ /**/ ;
    /*Swift.(file).FixedWidthInteger.bigEndian*/ /**/ ;
    /*Swift.(file).FixedWidthInteger.&>>infix(_:Self,_:Self)*/
    /*Swift.(file).FixedWidthInteger.&>>infix(_:Self,_:Self)*/
    FixedWidthInteger$implementation.infix_38_62_62 = function ($info, lhs, rhs) {
        /*return lhs &>> rhs*/
    };
    /*Swift.(file).FixedWidthInteger.&>>infix(_:Self,_:Other)*/
    /*Swift.(file).FixedWidthInteger.&>>infix(_:Self,_:Other)*/
    FixedWidthInteger$implementation.infix_38_62_62 = function ($info, lhs, rhs) {
        /*return lhs &>> rhs*/
    };
    /*Swift.(file).FixedWidthInteger.&>>=infix(_:Self,_:Other)*/
    /*Swift.(file).FixedWidthInteger.&>>=infix(_:Self,_:Other)*/
    FixedWidthInteger$implementation.infix_38_62_62_61 = function ($info, lhs$inout, rhs) {
        /*lhs$inout.set(lhs$inout.get() &>> rhs)*/
    };
    /*Swift.(file).FixedWidthInteger.&<<infix(_:Self,_:Self)*/
    /*Swift.(file).FixedWidthInteger.&<<infix(_:Self,_:Self)*/
    FixedWidthInteger$implementation.infix_38_60_60 = function ($info, lhs, rhs) {
        /*return lhs &<< rhs*/
    };
    /*Swift.(file).FixedWidthInteger.&<<infix(_:Self,_:Other)*/
    /*Swift.(file).FixedWidthInteger.&<<infix(_:Self,_:Other)*/
    FixedWidthInteger$implementation.infix_38_60_60 = function ($info, lhs, rhs) {
        /*return lhs &<< rhs*/
    };
    /*Swift.(file).FixedWidthInteger.&<<=infix(_:Self,_:Other)*/
    /*Swift.(file).FixedWidthInteger.&<<=infix(_:Self,_:Other)*/
    FixedWidthInteger$implementation.infix_38_60_60_61 = function ($info, lhs$inout, rhs) {
        /*lhs$inout.set(lhs$inout.get() &<< rhs)*/
    };
    /*Swift.(file).FixedWidthInteger.random(in:Range<Self>,using:T)*/
    /*Swift.(file).FixedWidthInteger.random(in:Range<Self>,using:T)*/
    FixedWidthInteger$implementation.randomInUsing = function ($info, range, generator$inout) {
    };
    /*Swift.(file).FixedWidthInteger.random(in:Range<Self>)*/
    /*Swift.(file).FixedWidthInteger.random(in:Range<Self>)*/
    FixedWidthInteger$implementation.randomIn = function ($info, range) {
    };
    /*Swift.(file).FixedWidthInteger.random(in:ClosedRange<Self>,using:T)*/
    /*Swift.(file).FixedWidthInteger.random(in:ClosedRange<Self>,using:T)*/
    FixedWidthInteger$implementation.randomInUsing = function ($info, range, generator$inout) {
    };
    /*Swift.(file).FixedWidthInteger.random(in:ClosedRange<Self>)*/
    /*Swift.(file).FixedWidthInteger.random(in:ClosedRange<Self>)*/
    FixedWidthInteger$implementation.randomIn = function ($info, range) {
    };
    /*Swift.(file).FixedWidthInteger.~prefix(_:Self)*/
    /*Swift.(file).FixedWidthInteger.~prefix(_:Self)*/
    FixedWidthInteger$implementation.prefix_126 = function ($info, x) {
        return ~x;
    };
    /*Swift.(file).FixedWidthInteger.>>infix(_:Self,_:Other)*/
    /*Swift.(file).FixedWidthInteger.>>infix(_:Self,_:Other)*/
    FixedWidthInteger$implementation.infix_62_62 = function ($info, lhs, rhs) {
        return lhs >> rhs;
    };
    /*Swift.(file).FixedWidthInteger.>>=infix(_:Self,_:Other)*/
    /*Swift.(file).FixedWidthInteger.>>=infix(_:Self,_:Other)*/
    FixedWidthInteger$implementation.infix_62_62_61 = function ($info, lhs$inout, rhs) {
        lhs$inout.set(lhs$inout.get() >> rhs);
    };
    /*Swift.(file).FixedWidthInteger.<<infix(_:Self,_:Other)*/
    /*Swift.(file).FixedWidthInteger.<<infix(_:Self,_:Other)*/
    FixedWidthInteger$implementation.infix_60_60 = function ($info, lhs, rhs) {
        return lhs << rhs;
    };
    /*Swift.(file).FixedWidthInteger.<<=infix(_:Self,_:Other)*/
    /*Swift.(file).FixedWidthInteger.<<=infix(_:Self,_:Other)*/
    FixedWidthInteger$implementation.infix_60_60_61 = function ($info, lhs$inout, rhs) {
        lhs$inout.set(lhs$inout.get() << rhs);
    };
    /*Swift.(file).FixedWidthInteger.init(_:T)*/
    /*Swift.(file).FixedWidthInteger.init(_:T)*/
    FixedWidthInteger$implementation.prototype.init = function ($info, source) {
        return source;
    };
    /*Swift.(file).FixedWidthInteger.init(exactly:T)*/
    /*Swift.(file).FixedWidthInteger.init(exactly:T)*/
    FixedWidthInteger$implementation.prototype.initExactly = function ($info, source) {
        return source;
    };
    /*Swift.(file).FixedWidthInteger.init(clamping:Other)*/
    /*Swift.(file).FixedWidthInteger.init(clamping:Other)*/
    FixedWidthInteger$implementation.prototype.initClamping = function ($info, source) {
        return source;
    };
    /*Swift.(file).FixedWidthInteger.init(truncatingIfNeeded:T)*/
    /*Swift.(file).FixedWidthInteger.init(truncatingIfNeeded:T)*/
    FixedWidthInteger$implementation.prototype.initTruncatingIfNeeded = function ($info, source) {
        return source;
    };
    /*Swift.(file).FixedWidthInteger.&+infix(_:Self,_:Self)*/
    /*Swift.(file).FixedWidthInteger.&+infix(_:Self,_:Self)*/
    FixedWidthInteger$implementation.infix_38_43 = function ($info, lhs, rhs) {
        /*return lhs &+ rhs*/
    };
    /*Swift.(file).FixedWidthInteger.&+=infix(_:Self,_:Self)*/
    /*Swift.(file).FixedWidthInteger.&+=infix(_:Self,_:Self)*/
    FixedWidthInteger$implementation.infix_38_43_61 = function ($info, lhs$inout, rhs) {
        /*return lhs$inout &+= rhs*/
    };
    /*Swift.(file).FixedWidthInteger.&-infix(_:Self,_:Self)*/
    /*Swift.(file).FixedWidthInteger.&-infix(_:Self,_:Self)*/
    FixedWidthInteger$implementation.infix_38_45 = function ($info, lhs, rhs) {
        /*return lhs &- rhs*/
    };
    /*Swift.(file).FixedWidthInteger.&-=infix(_:Self,_:Self)*/
    /*Swift.(file).FixedWidthInteger.&-=infix(_:Self,_:Self)*/
    FixedWidthInteger$implementation.infix_38_45_61 = function ($info, lhs$inout, rhs) {
        /*return lhs$inout &-= rhs*/
    };
    /*Swift.(file).FixedWidthInteger.&*infix(_:Self,_:Self)*/
    /*Swift.(file).FixedWidthInteger.&*infix(_:Self,_:Self)*/
    FixedWidthInteger$implementation.infix_38_42 = function ($info, lhs, rhs) {
        /*return lhs &* rhs*/
    };
    /*Swift.(file).FixedWidthInteger.&*=infix(_:Self,_:Self)*/
    /*Swift.(file).FixedWidthInteger.&*=infix(_:Self,_:Self)*/
    FixedWidthInteger$implementation.infix_38_42_61 = function ($info, lhs$inout, rhs) {
        /*return lhs$inout &*= rhs*/
    };
    /*Swift.(file).FixedWidthInteger.>>infix(_:Self,_:Self)*/
    /*Swift.(file).FixedWidthInteger.>>infix(_:Self,_:Self)*/
    FixedWidthInteger$implementation.infix_62_62 = function ($info, lhs, rhs) {
        return lhs >> rhs;
    };
    /*Swift.(file).FixedWidthInteger.>>=infix(_:Self,_:Self)*/
    /*Swift.(file).FixedWidthInteger.>>=infix(_:Self,_:Self)*/
    FixedWidthInteger$implementation.infix_62_62_61 = function ($info, lhs$inout, rhs) {
        lhs$inout.set(lhs$inout.get() >> rhs);
    };
    /*Swift.(file).FixedWidthInteger.<<infix(_:Self,_:Self)*/
    /*Swift.(file).FixedWidthInteger.<<infix(_:Self,_:Self)*/
    FixedWidthInteger$implementation.infix_60_60 = function ($info, lhs, rhs) {
        return lhs << rhs;
    };
    /*Swift.(file).FixedWidthInteger.<<=infix(_:Self,_:Self)*/
    /*Swift.(file).FixedWidthInteger.<<=infix(_:Self,_:Self)*/
    FixedWidthInteger$implementation.infix_60_60_61 = function ($info, lhs$inout, rhs) {
        lhs$inout.set(lhs$inout.get() << rhs);
    };
    /*Swift.(file).FixedWidthInteger.addWithOverflow(_:Self,_:Self)*/
    /*Swift.(file).FixedWidthInteger.addWithOverflow(_:Self,_:Self)*/
    FixedWidthInteger$implementation.addWithOverflow = function ($info, lhs, rhs) {
    };
    /*Swift.(file).FixedWidthInteger.subtractWithOverflow(_:Self,_:Self)*/
    /*Swift.(file).FixedWidthInteger.subtractWithOverflow(_:Self,_:Self)*/
    FixedWidthInteger$implementation.subtractWithOverflow = function ($info, lhs, rhs) {
    };
    /*Swift.(file).FixedWidthInteger.multiplyWithOverflow(_:Self,_:Self)*/
    /*Swift.(file).FixedWidthInteger.multiplyWithOverflow(_:Self,_:Self)*/
    FixedWidthInteger$implementation.multiplyWithOverflow = function ($info, lhs, rhs) {
    };
    /*Swift.(file).FixedWidthInteger.divideWithOverflow(_:Self,_:Self)*/
    /*Swift.(file).FixedWidthInteger.divideWithOverflow(_:Self,_:Self)*/
    FixedWidthInteger$implementation.divideWithOverflow = function ($info, lhs, rhs) {
    };
    /*Swift.(file).FixedWidthInteger.remainderWithOverflow(_:Self,_:Self)*/
    /*Swift.(file).FixedWidthInteger.remainderWithOverflow(_:Self,_:Self)*/
    FixedWidthInteger$implementation.remainderWithOverflow = function ($info, lhs, rhs) {
    };
    return FixedWidthInteger$implementation;
}());
if (typeof BinaryInteger$implementation != 'undefined')
    _mixin(FixedWidthInteger$implementation, BinaryInteger$implementation, false);
if (typeof LosslessStringConvertible$implementation != 'undefined')
    _mixin(FixedWidthInteger$implementation, LosslessStringConvertible$implementation, false);
var UnsignedInteger$implementation = /** @class */ (function () {
    function UnsignedInteger$implementation() {
    }
    /*Swift.(file).UnsignedInteger.magnitude*/ /**/ ;
    /*Swift.(file).UnsignedInteger.isSigned*/ /**/ ;
    /*Swift.(file).UnsignedInteger.init(_:T)*/
    /*Swift.(file).UnsignedInteger.init(_:T)*/
    UnsignedInteger$implementation.prototype.init = function ($info, source) {
        return source;
    };
    /*Swift.(file).UnsignedInteger.init(exactly:T)*/
    /*Swift.(file).UnsignedInteger.init(exactly:T)*/
    UnsignedInteger$implementation.prototype.initExactly = function ($info, source) {
        return source;
    };
    /*Swift.(file).UnsignedInteger.max*/ /**/ ;
    /*Swift.(file).UnsignedInteger.min*/ /**/ ;
    return UnsignedInteger$implementation;
}());
if (typeof BinaryInteger$implementation != 'undefined')
    _mixin(UnsignedInteger$implementation, BinaryInteger$implementation, false);
var SignedInteger$implementation = /** @class */ (function () {
    function SignedInteger$implementation() {
    }
    /*Swift.(file).SignedInteger.isSigned*/ /**/ ;
    /*Swift.(file).SignedInteger.init(_:T)*/
    /*Swift.(file).SignedInteger.init(_:T)*/
    SignedInteger$implementation.prototype.init = function ($info, source) {
        return source;
    };
    /*Swift.(file).SignedInteger.init(exactly:T)*/
    /*Swift.(file).SignedInteger.init(exactly:T)*/
    SignedInteger$implementation.prototype.initExactly = function ($info, source) {
        return source;
    };
    /*Swift.(file).SignedInteger.max*/ /**/ ;
    /*Swift.(file).SignedInteger.min*/ /**/ ;
    /*Swift.(file).SignedInteger.isMultiple(of:Self)*/
    /*Swift.(file).SignedInteger.isMultiple(of:Self)*/
    SignedInteger$implementation.prototype.isMultipleOf = function ($info, other) {
    };
    /*Swift.(file).SignedInteger.&+infix(_:Self,_:Self)*/
    /*Swift.(file).SignedInteger.&+infix(_:Self,_:Self)*/
    SignedInteger$implementation.infix_38_43 = function ($info, lhs, rhs) {
        /*return lhs &+ rhs*/
    };
    /*Swift.(file).SignedInteger.&-infix(_:Self,_:Self)*/
    /*Swift.(file).SignedInteger.&-infix(_:Self,_:Self)*/
    SignedInteger$implementation.infix_38_45 = function ($info, lhs, rhs) {
        /*return lhs &- rhs*/
    };
    /*Swift.(file).SignedInteger.&+infix(_:Self,_:Self)*/
    /*Swift.(file).SignedInteger.&+infix(_:Self,_:Self)*/
    SignedInteger$implementation.infix_38_43 = function ($info, lhs, rhs) {
        /*return lhs &+ rhs*/
    };
    /*Swift.(file).SignedInteger.&-infix(_:Self,_:Self)*/
    /*Swift.(file).SignedInteger.&-infix(_:Self,_:Self)*/
    SignedInteger$implementation.infix_38_45 = function ($info, lhs, rhs) {
        /*return lhs &- rhs*/
    };
    return SignedInteger$implementation;
}());
if (typeof BinaryInteger$implementation != 'undefined')
    _mixin(SignedInteger$implementation, BinaryInteger$implementation, false);
if (typeof SignedNumeric$implementation != 'undefined')
    _mixin(SignedInteger$implementation, SignedNumeric$implementation, false);
var LazyCollectionProtocol$implementation = /** @class */ (function () {
    function LazyCollectionProtocol$implementation() {
    }
    /*Swift.(file).LazyCollectionProtocol.lazy*/ /**/ ;
    /*Swift.(file).LazyCollectionProtocol.lazy*/ /**/ ;
    return LazyCollectionProtocol$implementation;
}());
if (typeof Collection$implementation != 'undefined')
    _mixin(LazyCollectionProtocol$implementation, Collection$implementation, false);
if (typeof LazySequenceProtocol$implementation != 'undefined')
    _mixin(LazyCollectionProtocol$implementation, LazySequenceProtocol$implementation, false);
var _Pointer$implementation = /** @class */ (function () {
    function _Pointer$implementation() {
    }
    /*Swift.(file)._Pointer.==infix(_:Self,_:Self)*/
    /*Swift.(file)._Pointer.==infix(_:Self,_:Self)*/
    _Pointer$implementation.infix_61_61 = function ($info, lhs, rhs) {
        return lhs == rhs;
    };
    /*Swift.(file)._Pointer.init(_:OpaquePointer)*/
    /*Swift.(file)._Pointer.init(_:OpaquePointer)*/
    _Pointer$implementation.prototype.initOpaquePointer = function ($info, from) {
        return from;
    };
    /*Swift.(file)._Pointer.init(_:OpaquePointer?)*/
    /*Swift.(file)._Pointer.init(_:OpaquePointer?)*/
    _Pointer$implementation.prototype.initOptional = function ($info, from) {
        return from;
    };
    /*Swift.(file)._Pointer.init(bitPattern:Int)*/
    /*Swift.(file)._Pointer.init(bitPattern:Int)*/
    _Pointer$implementation.prototype.initBitPatternInt = function ($info, bitPattern) {
        return bitPattern;
    };
    /*Swift.(file)._Pointer.init(bitPattern:UInt)*/
    /*Swift.(file)._Pointer.init(bitPattern:UInt)*/
    _Pointer$implementation.prototype.initBitPatternUInt = function ($info, bitPattern) {
        return bitPattern;
    };
    /*Swift.(file)._Pointer.init(_:Self)*/
    /*Swift.(file)._Pointer.init(_:Self)*/
    _Pointer$implementation.prototype.init = function ($info, other) {
        return other;
    };
    /*Swift.(file)._Pointer.init(_:Self?)*/
    /*Swift.(file)._Pointer.init(_:Self?)*/
    _Pointer$implementation.prototype.initOptional = function ($info, other) {
        return other;
    };
    /*Swift.(file)._Pointer.init(_:UnsafeMutablePointer<T>)*/
    /*Swift.(file)._Pointer.init(_:UnsafeMutablePointer<T>)*/
    _Pointer$implementation.prototype.initUnsafeMutablePointer = function ($info, other) {
        return other;
    };
    /*Swift.(file)._Pointer.init(_:UnsafeMutablePointer<T>?)*/
    /*Swift.(file)._Pointer.init(_:UnsafeMutablePointer<T>?)*/
    _Pointer$implementation.prototype.initOptional = function ($info, other) {
        return other;
    };
    /*Swift.(file)._Pointer.<infix(_:Self,_:Self)*/
    /*Swift.(file)._Pointer.<infix(_:Self,_:Self)*/
    _Pointer$implementation.infix_60 = function ($info, lhs, rhs) {
        return lhs < rhs;
    };
    /*Swift.(file)._Pointer.successor()*/
    /*Swift.(file)._Pointer.successor()*/
    _Pointer$implementation.prototype.successor = function ($info) {
    };
    /*Swift.(file)._Pointer.predecessor()*/
    /*Swift.(file)._Pointer.predecessor()*/
    _Pointer$implementation.prototype.predecessor = function ($info) {
    };
    /*Swift.(file)._Pointer.distance(to:Self)*/
    /*Swift.(file)._Pointer.distance(to:Self)*/
    _Pointer$implementation.prototype.distanceTo = function ($info, end) {
    };
    /*Swift.(file)._Pointer.advanced(by:Int)*/
    /*Swift.(file)._Pointer.advanced(by:Int)*/
    _Pointer$implementation.prototype.advancedBy = function ($info, n) {
    };
    /*Swift.(file)._Pointer.hash(into:Hasher)*/
    /*Swift.(file)._Pointer.hash(into:Hasher)*/
    _Pointer$implementation.prototype.hashInto = function ($info, hasher$inout) {
    };
    /*Swift.(file)._Pointer.debugDescription*/ /**/ ;
    /*Swift.(file)._Pointer.customMirror*/ /**/ ;
    return _Pointer$implementation;
}());
if (typeof Hashable$implementation != 'undefined')
    _mixin(_Pointer$implementation, Hashable$implementation, false);
if (typeof Strideable$implementation != 'undefined')
    _mixin(_Pointer$implementation, Strideable$implementation, false);
if (typeof CustomDebugStringConvertible$implementation != 'undefined')
    _mixin(_Pointer$implementation, CustomDebugStringConvertible$implementation, false);
if (typeof CustomReflectable$implementation != 'undefined')
    _mixin(_Pointer$implementation, CustomReflectable$implementation, false);
var LazyPrefixWhileSequence = /** @class */ (function () {
    function LazyPrefixWhileSequence() {
    }
    /*Swift.(file).LazyPrefixWhileSequence.init(_base:Base,predicate:(LazyPrefixWhileSequence<Base>.Element) -> Bool)*/
    /*Swift.(file).LazyPrefixWhileSequence.init(_base:Base,predicate:(LazyPrefixWhileSequence<Base>.Element) -> Bool)*/
    LazyPrefixWhileSequence.prototype.init_basePredicatefunction_type = function ($info, _base, predicate) {
    };
    /*Swift.(file).LazyPrefixWhileSequence.makeIterator()*/
    /*Swift.(file).Sequence.makeIterator()*/
    /*Swift.(file).Collection.makeIterator()*/
    LazyPrefixWhileSequence.prototype.makeIterator = function ($info) {
        var _this = this;
        return new SwiftIterator(function (current) { return _this.contains(null, current + _this.lowerBound) ? current + _this.lowerBound : null; });
    };
    /*Swift.(file).LazyPrefixWhileSequence.startIndex*/ /*
    startIndex$get() {
    return this.startIndex
    }
    get startIndex() { return this.startIndex$get() }*/ ;
    /*Swift.(file).LazyPrefixWhileSequence.endIndex*/ /*
    endIndex$get() {
    return this.endIndex
    }
    get endIndex() { return this.endIndex$get() }*/ ;
    /*Swift.(file).LazyPrefixWhileSequence.index(after:LazyPrefixWhileSequence<Base>.Index)*/
    /*Swift.(file).Collection.index(after:Self.Index)*/
    /*Swift.(file).BidirectionalCollection.index(after:Self.Index)*/
    LazyPrefixWhileSequence.prototype.indexAfter = function ($info, i) {
    };
    /*Swift.(file).LazyPrefixWhileSequence.subscript(_:LazyPrefixWhileSequence<Base>.Index)*/
    /*Swift.(file).Collection.subscript(_:Self.Index)*/
    /*Swift.(file).BidirectionalCollection.subscript(_:Self.Index)*/
    LazyPrefixWhileSequence.prototype.subscript$get = function ($info, position) {
        return this[position];
    };
    /*Swift.(file).LazyPrefixWhileSequence.index(before:LazyPrefixWhileSequence<Base>.Index)*/
    /*Swift.(file).BidirectionalCollection.index(before:Self.Index)*/
    LazyPrefixWhileSequence.prototype.indexBefore = function ($info, i) {
    };
    var _47, _48, _49;
    LazyPrefixWhileSequence.$struct = true;
    LazyPrefixWhileSequence.$infoAddress = '0x7fb854000018';
    LazyPrefixWhileSequence._IndexRepresentation = (_47 = /** @class */ (function () {
            function class_71() {
            }
            class_71.index = function () { return Object.assign(new LazyPrefixWhileSequence._IndexRepresentation(), __assign({ rawValue: "index" }, Array.from(arguments).slice(1))); };
            Object.defineProperty(class_71, "pastEnd", {
                get: function () { return Object.assign(new LazyPrefixWhileSequence._IndexRepresentation(), __assign({ rawValue: "pastEnd" }, Array.from(arguments).slice(1))); },
                enumerable: true,
                configurable: true
            });
            return class_71;
        }()),
        _47.$infoAddress = '0x7fb852e28680',
        _47);
    LazyPrefixWhileSequence.Index = (_48 = /** @class */ (function () {
            function class_72() {
            }
            /*Swift.(file).LazyPrefixWhileSequence.Index.init(_:Base.Index)*/
            /*Swift.(file).LazyPrefixWhileSequence.Index.init(_:Base.Index)*/
            class_72.prototype.init = function ($info, i) {
                return i;
            };
            /*Swift.(file).LazyPrefixWhileSequence.Index.init(endOf:Base)*/
            /*Swift.(file).LazyPrefixWhileSequence.Index.init(endOf:Base)*/
            class_72.prototype.initEndOf = function ($info, endOf) {
                return endOf;
            };
            /*Swift.(file).Index.==infix(_:LazyPrefixWhileCollection<Base>.Index,_:LazyPrefixWhileCollection<Base>.Index)*/
            /*Swift.(file).Equatable.==infix(_:Self,_:Self)*/
            class_72.infix_61_61 = function ($info, lhs, rhs) {
                return lhs == rhs;
            };
            /*Swift.(file).Index.<infix(_:LazyPrefixWhileCollection<Base>.Index,_:LazyPrefixWhileCollection<Base>.Index)*/
            /*Swift.(file).Comparable.<infix(_:Self,_:Self)*/
            class_72.infix_60 = function ($info, lhs, rhs) {
                return lhs < rhs;
            };
            /*Swift.(file).Index.hash(into:Hasher)*/
            /*Swift.(file).Hashable.hash(into:Hasher)*/
            class_72.prototype.hashInto = function ($info, hasher$inout) {
            };
            /*Swift.(file).Index.hashValue*/ /*
            hashValue$get() {
            return this.hashValue
            }
            get hashValue() { return this.hashValue$get() }*/ ;
            return class_72;
        }()),
        _48.$struct = true,
        _48.$infoAddress = '0x7fb8540003c0',
        _48);
    LazyPrefixWhileSequence.Iterator = (_49 = /** @class */ (function () {
            function class_73() {
            }
            /*Swift.(file).LazyPrefixWhileSequence.Iterator.init(_base:Base.Iterator,predicate:(LazyPrefixWhileSequence<Base>.Iterator.Element) -> Bool)*/
            /*Swift.(file).LazyPrefixWhileSequence.Iterator.init(_base:Base.Iterator,predicate:(LazyPrefixWhileSequence<Base>.Iterator.Element) -> Bool)*/
            class_73.prototype.init_basePredicatefunction_type = function ($info, _base, predicate) {
            };
            /*Swift.(file).Iterator.next()*/
            /*Swift.(file).IteratorProtocol.next()*/
            class_73.prototype.next = function ($info) {
            };
            return class_73;
        }()),
        _49.$struct = true,
        _49.$infoAddress = '0x7fb851244490',
        _49);
    return LazyPrefixWhileSequence;
}());
if (typeof Comparable$implementation != 'undefined')
    _mixin(LazyPrefixWhileSequence.Index, Comparable$implementation, false);
if (typeof Hashable$implementation != 'undefined')
    _mixin(LazyPrefixWhileSequence.Index, Hashable$implementation, false);
if (typeof IteratorProtocol$implementation != 'undefined')
    _mixin(LazyPrefixWhileSequence.Iterator, IteratorProtocol$implementation, false);
if (typeof Sequence$implementation != 'undefined')
    _mixin(LazyPrefixWhileSequence.Iterator, Sequence$implementation, false);
if (typeof Sequence$implementation != 'undefined')
    _mixin(LazyPrefixWhileSequence, Sequence$implementation, false);
if (typeof LazySequenceProtocol$implementation != 'undefined')
    _mixin(LazyPrefixWhileSequence, LazySequenceProtocol$implementation, false);
if (typeof Collection$implementation != 'undefined')
    _mixin(LazyPrefixWhileSequence, Collection$implementation, false);
if (typeof LazyCollectionProtocol$implementation != 'undefined')
    _mixin(LazyPrefixWhileSequence, LazyCollectionProtocol$implementation, false);
if (typeof BidirectionalCollection$implementation != 'undefined')
    _mixin(LazyPrefixWhileSequence, BidirectionalCollection$implementation, false);
var RandomAccessCollection$implementation = /** @class */ (function () {
    function RandomAccessCollection$implementation() {
    }
    /*Swift.(file).RandomAccessCollection.index(_:Self.Index,offsetBy:Int,limitedBy:Self.Index)*/
    /*Swift.(file).RandomAccessCollection.index(_:Self.Index,offsetBy:Int,limitedBy:Self.Index)*/
    RandomAccessCollection$implementation.prototype.indexOffsetByLimitedBy = function ($info, i, distance, limit) {
    };
    /*Swift.(file).RandomAccessCollection.indices*/ /**/ ;
    /*Swift.(file).RandomAccessCollection.index(after:Self.Index)*/
    /*Swift.(file).RandomAccessCollection.index(after:Self.Index)*/
    RandomAccessCollection$implementation.prototype.indexAfter = function ($info, i) {
    };
    /*Swift.(file).RandomAccessCollection.index(before:Self.Index)*/
    /*Swift.(file).RandomAccessCollection.index(before:Self.Index)*/
    RandomAccessCollection$implementation.prototype.indexBefore = function ($info, i) {
    };
    /*Swift.(file).RandomAccessCollection.index(_:Self.Index,offsetBy:Self.Index.Stride)*/
    /*Swift.(file).RandomAccessCollection.index(_:Self.Index,offsetBy:Self.Index.Stride)*/
    RandomAccessCollection$implementation.prototype.indexOffsetBy = function ($info, i, distance) {
    };
    /*Swift.(file).RandomAccessCollection.distance(from:Self.Index,to:Self.Index)*/
    /*Swift.(file).RandomAccessCollection.distance(from:Self.Index,to:Self.Index)*/
    RandomAccessCollection$implementation.prototype.distanceFromTo = function ($info, start, end) {
    };
    return RandomAccessCollection$implementation;
}());
if (typeof BidirectionalCollection$implementation != 'undefined')
    _mixin(RandomAccessCollection$implementation, BidirectionalCollection$implementation, false);
var Range = /** @class */ (function () {
    function Range() {
    }
    /*Swift.(file).Range.lowerBound*/
    Range.prototype.lowerBound$get = function () {
        return this.lowerBound$internal;
    };
    Object.defineProperty(Range.prototype, "lowerBound", {
        get: function () { return this.lowerBound$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).Range.upperBound*/
    Range.prototype.upperBound$get = function () {
        return this.upperBound$internal;
    };
    Object.defineProperty(Range.prototype, "upperBound", {
        get: function () { return this.upperBound$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).Range.init(uncheckedBounds:(lower: Bound, upper: Bound))*/
    /*Swift.(file).Range.init(uncheckedBounds:(lower: Bound, upper: Bound))*/
    Range.prototype.initUncheckedBoundstuple_type = function ($info, bounds) {
        this.lowerBound$internal = bounds[0];
        this.upperBound$internal = bounds[1];
    };
    /*Swift.(file).Range.contains(_:Bound)*/
    /*Swift.(file).RangeExpression.contains(_:Self.Bound)*/
    Range.prototype.contains = function ($info, _element) {
        return _element >= this.lowerBound && _element < this.upperBound;
    };
    /*Swift.(file).Range.isEmpty*/ /*
    isEmpty$get() {
    return this.isEmpty
    }
    get isEmpty() { return this.isEmpty$get() }*/ ;
    /*Swift.(file).Range.==infix(_:Range<Bound>,_:Range<Bound>)*/
    /*Swift.(file).Equatable.==infix(_:Self,_:Self)*/
    Range.infix_61_61 = function ($info, lhs, rhs) {
        return lhs == rhs;
    };
    /*Swift.(file).Range.startIndex*/ /*
    startIndex$get() {
    return this.startIndex
    }
    get startIndex() { return this.startIndex$get() }*/ ;
    /*Swift.(file).Range.endIndex*/ /*
    endIndex$get() {
    return this.endIndex
    }
    get endIndex() { return this.endIndex$get() }*/ ;
    /*Swift.(file).Range.index(after:Range<Bound>.Index)*/
    /*Swift.(file).RandomAccessCollection.index(after:Self.Index)*/
    /*Swift.(file).Collection.index(after:Self.Index)*/
    /*Swift.(file).BidirectionalCollection.index(after:Self.Index)*/
    Range.prototype.indexAfter = function ($info, i) {
    };
    /*Swift.(file).Range.index(before:Range<Bound>.Index)*/
    /*Swift.(file).RandomAccessCollection.index(before:Self.Index)*/
    /*Swift.(file).BidirectionalCollection.index(before:Self.Index)*/
    Range.prototype.indexBefore = function ($info, i) {
    };
    /*Swift.(file).Range.index(_:Range<Bound>.Index,offsetBy:Int)*/
    /*Swift.(file).RandomAccessCollection.index(_:Self.Index,offsetBy:Int)*/
    /*Swift.(file).Collection.index(_:Self.Index,offsetBy:Int)*/
    /*Swift.(file).BidirectionalCollection.index(_:Self.Index,offsetBy:Int)*/
    Range.prototype.indexOffsetBy = function ($info, i, n) {
    };
    /*Swift.(file).Range.distance(from:Range<Bound>.Index,to:Range<Bound>.Index)*/
    /*Swift.(file).RandomAccessCollection.distance(from:Self.Index,to:Self.Index)*/
    /*Swift.(file).Collection.distance(from:Self.Index,to:Self.Index)*/
    /*Swift.(file).BidirectionalCollection.distance(from:Self.Index,to:Self.Index)*/
    Range.prototype.distanceFromTo = function ($info, start, end) {
    };
    /*Swift.(file).Range.subscript(_:Range<Range<Bound>.Index>)*/
    /*Swift.(file).RandomAccessCollection.subscript(_:Range<Self.Index>)*/
    /*Swift.(file).Collection.subscript(_:Range<Self.Index>)*/
    /*Swift.(file).BidirectionalCollection.subscript(_:Range<Self.Index>)*/
    Range.prototype.subcriptRange$get = function ($info, bounds) {
        return this[bounds];
    };
    /*Swift.(file).Range.indices*/ /*
    indices$get() {
    return this.indices
    }
    get indices() { return this.indices$get() }*/ ;
    /*Swift.(file).Range.subscript(_:Range<Bound>.Index)*/
    /*Swift.(file).RandomAccessCollection.subscript(_:Self.Index)*/
    /*Swift.(file).Collection.subscript(_:Self.Index)*/
    /*Swift.(file).BidirectionalCollection.subscript(_:Self.Index)*/
    Range.prototype.subscript$get = function ($info, position) {
        return this[position];
    };
    /*Swift.(file).Range.init(_:ClosedRange<Bound>)*/
    /*Swift.(file).Range.init(_:ClosedRange<Bound>)*/
    Range.prototype.initClosedRange = function ($info, other) {
        return other;
    };
    /*Swift.(file).Range.relative(to:C)*/
    /*Swift.(file).RangeExpression.relative(to:C)*/
    Range.prototype.relativeTo = function ($info, collection) {
    };
    /*Swift.(file).Range.clamped(to:Range<Bound>)*/
    /*Swift.(file).Range.clamped(to:Range<Bound>)*/
    Range.prototype.clampedTo = function ($info, limits) {
    };
    /*Swift.(file).Range.description*/ /*
    description$get() {
    return this.description
    }
    get description() { return this.description$get() }*/ ;
    /*Swift.(file).Range.debugDescription*/ /*
    debugDescription$get() {
    return this.debugDescription
    }
    get debugDescription() { return this.debugDescription$get() }*/ ;
    /*Swift.(file).Range.customMirror*/ /*
    customMirror$get() {
    return this.customMirror
    }
    get customMirror() { return this.customMirror$get() }*/ ;
    /*Swift.(file).Range.hash(into:Hasher)*/
    /*Swift.(file).Hashable.hash(into:Hasher)*/
    Range.prototype.hashInto = function ($info, hasher$inout) {
    };
    /*Swift.(file).Range.hashValue*/ /*
    hashValue$get() {
    return this.hashValue
    }
    get hashValue() { return this.hashValue$get() }*/ ;
    /*Swift.(file).Range.overlaps(_:Range<Bound>)*/
    /*Swift.(file).Range.overlaps(_:Range<Bound>)*/
    Range.prototype.overlaps = function ($info, other) {
    };
    /*Swift.(file).Range.overlaps(_:ClosedRange<Bound>)*/
    /*Swift.(file).Range.overlaps(_:ClosedRange<Bound>)*/
    Range.prototype.overlaps = function ($info, other) {
    };
    /*Swift.(file).Range.init(_:Range<Bound>)*/
    /*Swift.(file).Range.init(_:Range<Bound>)*/
    Range.prototype.initRange = function ($info, other) {
        return other;
    };
    Range.$struct = true;
    Range.$infoAddress = '0x7fb854000eb8';
    return Range;
}());
if (typeof Equatable$implementation != 'undefined')
    _mixin(Range, Equatable$implementation, false);
if (typeof Sequence$implementation != 'undefined')
    _mixin(Range, Sequence$implementation, false);
if (typeof Collection$implementation != 'undefined')
    _mixin(Range, Collection$implementation, false);
if (typeof BidirectionalCollection$implementation != 'undefined')
    _mixin(Range, BidirectionalCollection$implementation, false);
if (typeof RandomAccessCollection$implementation != 'undefined')
    _mixin(Range, RandomAccessCollection$implementation, false);
if (typeof RangeExpression$implementation != 'undefined')
    _mixin(Range, RangeExpression$implementation, false);
if (typeof CustomStringConvertible$implementation != 'undefined')
    _mixin(Range, CustomStringConvertible$implementation, false);
if (typeof CustomDebugStringConvertible$implementation != 'undefined')
    _mixin(Range, CustomDebugStringConvertible$implementation, false);
if (typeof CustomReflectable$implementation != 'undefined')
    _mixin(Range, CustomReflectable$implementation, false);
if (typeof Hashable$implementation != 'undefined')
    _mixin(Range, Hashable$implementation, false);
var Repeated = /** @class */ (function () {
    function Repeated() {
    }
    /*Swift.(file).Repeated.repeatedValue*/ /*
    readonly repeatedValue$get() {
    return this.repeatedValue
    }
    readonly get repeatedValue() { return this.repeatedValue$get() }*/ ;
    /*Swift.(file).Repeated.init(count:Int,repeatedValue:Element)*/
    /*Swift.(file).Repeated.init(count:Int,repeatedValue:Element)*/
    Repeated.prototype.initCountIntRepeatedValue = function ($info, count, repeatedValue) {
    };
    /*Swift.(file).Repeated.init(_repeating:Element,count:Int)*/
    /*Swift.(file).Repeated.init(_repeating:Element,count:Int)*/
    Repeated.prototype.init_repeatingCountInt = function ($info, repeatedValue, count) {
    };
    /*Swift.(file).Repeated.startIndex*/ /*
    startIndex$get() {
    return this.startIndex
    }
    get startIndex() { return this.startIndex$get() }*/ ;
    /*Swift.(file).Repeated.endIndex*/ /*
    endIndex$get() {
    return this.endIndex
    }
    get endIndex() { return this.endIndex$get() }*/ ;
    /*Swift.(file).Repeated.subscript(_:Int)*/
    /*Swift.(file).RandomAccessCollection.subscript(_:Self.Index)*/
    /*Swift.(file).BidirectionalCollection.subscript(_:Self.Index)*/
    /*Swift.(file).Collection.subscript(_:Self.Index)*/
    Repeated.prototype.subscript$get = function ($info, position) {
        return this[position];
    };
    Repeated.$struct = true;
    Repeated.$infoAddress = '0x7fb85124dc98';
    return Repeated;
}());
if (typeof RandomAccessCollection$implementation != 'undefined')
    _mixin(Repeated, RandomAccessCollection$implementation, false);
var ReversedCollection = /** @class */ (function () {
    function ReversedCollection() {
    }
    /*Swift.(file).ReversedCollection.init(_base:Base)*/
    /*Swift.(file).ReversedCollection.init(_base:Base)*/
    ReversedCollection.prototype.init_base = function ($info, _base) {
        return _base;
    };
    /*Swift.(file).ReversedCollection.makeIterator()*/
    /*Swift.(file).Sequence.makeIterator()*/
    /*Swift.(file).Collection.makeIterator()*/
    ReversedCollection.prototype.makeIterator = function ($info) {
        var _this = this;
        return new SwiftIterator(function (current) { return _this.contains(null, current + _this.lowerBound) ? current + _this.lowerBound : null; });
    };
    /*Swift.(file).ReversedCollection.startIndex*/ /*
    startIndex$get() {
    return this.startIndex
    }
    get startIndex() { return this.startIndex$get() }*/ ;
    /*Swift.(file).ReversedCollection.endIndex*/ /*
    endIndex$get() {
    return this.endIndex
    }
    get endIndex() { return this.endIndex$get() }*/ ;
    /*Swift.(file).ReversedCollection.index(after:ReversedCollection<Base>.Index)*/
    /*Swift.(file).BidirectionalCollection.index(after:Self.Index)*/
    /*Swift.(file).Collection.index(after:Self.Index)*/
    /*Swift.(file).RandomAccessCollection.index(after:Self.Index)*/
    ReversedCollection.prototype.indexAfter = function ($info, i) {
    };
    /*Swift.(file).ReversedCollection.index(before:ReversedCollection<Base>.Index)*/
    /*Swift.(file).BidirectionalCollection.index(before:Self.Index)*/
    /*Swift.(file).RandomAccessCollection.index(before:Self.Index)*/
    ReversedCollection.prototype.indexBefore = function ($info, i) {
    };
    /*Swift.(file).ReversedCollection.index(_:ReversedCollection<Base>.Index,offsetBy:Int)*/
    /*Swift.(file).BidirectionalCollection.index(_:Self.Index,offsetBy:Int)*/
    /*Swift.(file).Collection.index(_:Self.Index,offsetBy:Int)*/
    /*Swift.(file).RandomAccessCollection.index(_:Self.Index,offsetBy:Int)*/
    ReversedCollection.prototype.indexOffsetBy = function ($info, i, n) {
    };
    /*Swift.(file).ReversedCollection.index(_:ReversedCollection<Base>.Index,offsetBy:Int,limitedBy:ReversedCollection<Base>.Index)*/
    /*Swift.(file).BidirectionalCollection.index(_:Self.Index,offsetBy:Int,limitedBy:Self.Index)*/
    /*Swift.(file).Collection.index(_:Self.Index,offsetBy:Int,limitedBy:Self.Index)*/
    /*Swift.(file).RandomAccessCollection.index(_:Self.Index,offsetBy:Int,limitedBy:Self.Index)*/
    ReversedCollection.prototype.indexOffsetByLimitedBy = function ($info, i, n, limit) {
    };
    /*Swift.(file).ReversedCollection.distance(from:ReversedCollection<Base>.Index,to:ReversedCollection<Base>.Index)*/
    /*Swift.(file).BidirectionalCollection.distance(from:Self.Index,to:Self.Index)*/
    /*Swift.(file).Collection.distance(from:Self.Index,to:Self.Index)*/
    /*Swift.(file).RandomAccessCollection.distance(from:Self.Index,to:Self.Index)*/
    ReversedCollection.prototype.distanceFromTo = function ($info, start, end) {
    };
    /*Swift.(file).ReversedCollection.subscript(_:ReversedCollection<Base>.Index)*/
    /*Swift.(file).BidirectionalCollection.subscript(_:Self.Index)*/
    /*Swift.(file).Collection.subscript(_:Self.Index)*/
    /*Swift.(file).RandomAccessCollection.subscript(_:Self.Index)*/
    ReversedCollection.prototype.subscript$get = function ($info, position) {
        return this[position];
    };
    /*Swift.(file).ReversedCollection.reversed()*/
    /*Swift.(file).ReversedCollection.reversed()*/
    ReversedCollection.prototype.reversed = function ($info) {
    };
    var _50, _51;
    ReversedCollection.$struct = true;
    ReversedCollection.$infoAddress = '0x7fb85182a090';
    ReversedCollection.Index = (_50 = /** @class */ (function () {
            function class_74() {
            }
            /*Swift.(file).ReversedCollection.Index.init(_:Base.Index)*/
            /*Swift.(file).ReversedCollection.Index.init(_:Base.Index)*/
            class_74.prototype.init = function ($info, base) {
                return base;
            };
            /*Swift.(file).Index.==infix(_:ReversedCollection<Base>.Index,_:ReversedCollection<Base>.Index)*/
            /*Swift.(file).Equatable.==infix(_:Self,_:Self)*/
            class_74.infix_61_61 = function ($info, lhs, rhs) {
                return lhs == rhs;
            };
            /*Swift.(file).Index.<infix(_:ReversedCollection<Base>.Index,_:ReversedCollection<Base>.Index)*/
            /*Swift.(file).Comparable.<infix(_:Self,_:Self)*/
            class_74.infix_60 = function ($info, lhs, rhs) {
                return lhs < rhs;
            };
            /*Swift.(file).Index.hash(into:Hasher)*/
            /*Swift.(file).Hashable.hash(into:Hasher)*/
            class_74.prototype.hashInto = function ($info, hasher$inout) {
            };
            /*Swift.(file).Index.hashValue*/ /*
            hashValue$get() {
            return this.hashValue
            }
            get hashValue() { return this.hashValue$get() }*/ ;
            return class_74;
        }()),
        _50.$struct = true,
        _50.$infoAddress = '0x7fb85182a408',
        _50);
    ReversedCollection.Iterator = (_51 = /** @class */ (function () {
            function class_75() {
            }
            /*Swift.(file).ReversedCollection.Iterator.init(_base:Base)*/
            /*Swift.(file).ReversedCollection.Iterator.init(_base:Base)*/
            class_75.prototype.init_base = function ($info, _base) {
                return _base;
            };
            /*Swift.(file).Iterator.next()*/
            /*Swift.(file).IteratorProtocol.next()*/
            class_75.prototype.next = function ($info) {
            };
            return class_75;
        }()),
        _51.$struct = true,
        _51.$infoAddress = '0x7fb85124f1e0',
        _51);
    return ReversedCollection;
}());
if (typeof Comparable$implementation != 'undefined')
    _mixin(ReversedCollection.Index, Comparable$implementation, false);
if (typeof Hashable$implementation != 'undefined')
    _mixin(ReversedCollection.Index, Hashable$implementation, false);
if (typeof IteratorProtocol$implementation != 'undefined')
    _mixin(ReversedCollection.Iterator, IteratorProtocol$implementation, false);
if (typeof Sequence$implementation != 'undefined')
    _mixin(ReversedCollection.Iterator, Sequence$implementation, false);
if (typeof LazySequenceProtocol$implementation != 'undefined')
    _mixin(ReversedCollection, LazySequenceProtocol$implementation, false);
if (typeof Sequence$implementation != 'undefined')
    _mixin(ReversedCollection, Sequence$implementation, false);
if (typeof BidirectionalCollection$implementation != 'undefined')
    _mixin(ReversedCollection, BidirectionalCollection$implementation, false);
if (typeof RandomAccessCollection$implementation != 'undefined')
    _mixin(ReversedCollection, RandomAccessCollection$implementation, false);
var Slice = /** @class */ (function () {
    function Slice() {
    }
    /*Swift.(file).Slice.init(base:Base,bounds:Range<Base.Index>)*/
    /*Swift.(file).Slice.init(base:Base,bounds:Range<Base.Index>)*/
    Slice.prototype.initBaseBoundsRange = function ($info, base, bounds) {
    };
    /*Swift.(file).Slice.base*/ /*
    base$get() {
    return this.base
    }
    get base() { return this.base$get() }*/ ;
    /*Swift.(file).Slice.startIndex*/ /*
    startIndex$get() {
    return this.startIndex
    }
    get startIndex() { return this.startIndex$get() }*/ ;
    /*Swift.(file).Slice.endIndex*/ /*
    endIndex$get() {
    return this.endIndex
    }
    get endIndex() { return this.endIndex$get() }*/ ;
    /*Swift.(file).Slice.subscript(_:Slice<Base>.Index)*/
    /*Swift.(file).Collection.subscript(_:Self.Index)*/
    /*Swift.(file).BidirectionalCollection.subscript(_:Self.Index)*/
    /*Swift.(file).RandomAccessCollection.subscript(_:Self.Index)*/
    /*Swift.(file).RangeReplaceableCollection.subscript(_:Self.Index)*/
    Slice.prototype.subscript$get = function ($info, index) {
        return this[index];
    };
    /*Swift.(file).Slice.subscript(_:Range<Slice<Base>.Index>)*/
    /*Swift.(file).Collection.subscript(_:Range<Self.Index>)*/
    /*Swift.(file).BidirectionalCollection.subscript(_:Range<Self.Index>)*/
    /*Swift.(file).RandomAccessCollection.subscript(_:Range<Self.Index>)*/
    /*Swift.(file).RangeReplaceableCollection.subscript(_:Range<Self.Index>)*/
    Slice.prototype.subcriptRange$get = function ($info, bounds) {
        return this[bounds];
    };
    /*Swift.(file).Slice.indices*/ /*
    indices$get() {
    return this.indices
    }
    get indices() { return this.indices$get() }*/ ;
    /*Swift.(file).Slice.index(after:Slice<Base>.Index)*/
    /*Swift.(file).Collection.index(after:Self.Index)*/
    /*Swift.(file).BidirectionalCollection.index(after:Self.Index)*/
    /*Swift.(file).RandomAccessCollection.index(after:Self.Index)*/
    Slice.prototype.indexAfter = function ($info, i) {
    };
    /*Swift.(file).Slice.formIndex(after:Slice<Base>.Index)*/
    /*Swift.(file).Collection.formIndex(after:Self.Index)*/
    /*Swift.(file).BidirectionalCollection.formIndex(after:Self.Index)*/
    /*Swift.(file).RandomAccessCollection.formIndex(after:Self.Index)*/
    Slice.prototype.formIndexAfter = function ($info, i$inout) {
    };
    /*Swift.(file).Slice.index(_:Slice<Base>.Index,offsetBy:Int)*/
    /*Swift.(file).Collection.index(_:Self.Index,offsetBy:Int)*/
    /*Swift.(file).BidirectionalCollection.index(_:Self.Index,offsetBy:Int)*/
    /*Swift.(file).RandomAccessCollection.index(_:Self.Index,offsetBy:Int)*/
    Slice.prototype.indexOffsetBy = function ($info, i, n) {
    };
    /*Swift.(file).Slice.index(_:Slice<Base>.Index,offsetBy:Int,limitedBy:Slice<Base>.Index)*/
    /*Swift.(file).Collection.index(_:Self.Index,offsetBy:Int,limitedBy:Self.Index)*/
    /*Swift.(file).BidirectionalCollection.index(_:Self.Index,offsetBy:Int,limitedBy:Self.Index)*/
    /*Swift.(file).RandomAccessCollection.index(_:Self.Index,offsetBy:Int,limitedBy:Self.Index)*/
    Slice.prototype.indexOffsetByLimitedBy = function ($info, i, n, limit) {
    };
    /*Swift.(file).Slice.distance(from:Slice<Base>.Index,to:Slice<Base>.Index)*/
    /*Swift.(file).Collection.distance(from:Self.Index,to:Self.Index)*/
    /*Swift.(file).BidirectionalCollection.distance(from:Self.Index,to:Self.Index)*/
    /*Swift.(file).RandomAccessCollection.distance(from:Self.Index,to:Self.Index)*/
    Slice.prototype.distanceFromTo = function ($info, start, end) {
    };
    /*Swift.(file).Slice.index(before:Slice<Base>.Index)*/
    /*Swift.(file).BidirectionalCollection.index(before:Self.Index)*/
    /*Swift.(file).RandomAccessCollection.index(before:Self.Index)*/
    Slice.prototype.indexBefore = function ($info, i) {
    };
    /*Swift.(file).Slice.formIndex(before:Slice<Base>.Index)*/
    /*Swift.(file).BidirectionalCollection.formIndex(before:Self.Index)*/
    /*Swift.(file).RandomAccessCollection.formIndex(before:Self.Index)*/
    Slice.prototype.formIndexBefore = function ($info, i$inout) {
    };
    /*Swift.(file).Slice.subscript(_:Slice<Base>.Index)*/
    /*Swift.(file).MutableCollection.subscript(_:Self.Index)*/
    Slice.prototype.subscript$get = function ($info, index) {
        return this[index];
    }; /*Swift.(file).Slice.subscript(_:Slice<Base>.Index)*/
    /*Swift.(file).MutableCollection.subscript(_:Self.Index)*/
    Slice.prototype.subscript$set = function ($info, newValue, index) {
        this[index] = newValue;
    };
    /*Swift.(file).Slice.subscript(_:Range<Slice<Base>.Index>)*/
    /*Swift.(file).MutableCollection.subscript(_:Range<Self.Index>)*/
    Slice.prototype.subcriptRange$get = function ($info, bounds) {
        return this[bounds];
    }; /*Swift.(file).Slice.subscript(_:Range<Slice<Base>.Index>)*/
    /*Swift.(file).MutableCollection.subscript(_:Range<Self.Index>)*/
    Slice.prototype.subcriptRange$set = function ($info, newValue, bounds) {
        this[bounds] = newValue;
    };
    /*Swift.(file).Slice.init()*/
    /*Swift.(file).RangeReplaceableCollection.init()*/
    Slice.prototype.init = function ($info) {
    };
    /*Swift.(file).Slice.init(repeating:Base.Element,count:Int)*/
    /*Swift.(file).RangeReplaceableCollection.init(repeating:Self.Element,count:Int)*/
    Slice.prototype.initRepeatingCountInt = function ($info, repeatedValue, count) {
    };
    /*Swift.(file).Slice.init(_:S)*/
    /*Swift.(file).RangeReplaceableCollection.init(_:S)*/
    Slice.prototype.initBuffer = function ($info, _elements) {
        return _elements;
    };
    /*Swift.(file).Slice.replaceSubrange(_:Range<Slice<Base>.Index>,with:C)*/
    /*Swift.(file).RangeReplaceableCollection.replaceSubrange(_:Range<Self.Index>,with:C)*/
    Slice.prototype.replaceSubrangeWith = function ($info, subRange, newElements) {
    };
    /*Swift.(file).Slice.insert(_:Base.Element,at:Slice<Base>.Index)*/
    /*Swift.(file).RangeReplaceableCollection.insert(_:Self.Element,at:Self.Index)*/
    Slice.prototype.insertAt = function ($info, newElement, i) {
    };
    /*Swift.(file).Slice.insert(contentsOf:S,at:Slice<Base>.Index)*/
    /*Swift.(file).RangeReplaceableCollection.insert(contentsOf:S,at:Self.Index)*/
    Slice.prototype.insertContentsOfAt = function ($info, newElements, i) {
    };
    /*Swift.(file).Slice.remove(at:Slice<Base>.Index)*/
    /*Swift.(file).RangeReplaceableCollection.remove(at:Self.Index)*/
    Slice.prototype.removeAt = function ($info, i) {
    };
    /*Swift.(file).Slice.removeSubrange(_:Range<Slice<Base>.Index>)*/
    /*Swift.(file).RangeReplaceableCollection.removeSubrange(_:Range<Self.Index>)*/
    Slice.prototype.removeSubrange = function ($info, bounds) {
    };
    /*Swift.(file).Slice.replaceSubrange(_:Range<Slice<Base>.Index>,with:C)*/
    /*Swift.(file).Slice.replaceSubrange(_:Range<Slice<Base>.Index>,with:C)*/
    Slice.prototype.replaceSubrangeWith = function ($info, subRange, newElements) {
    };
    /*Swift.(file).Slice.insert(_:Base.Element,at:Slice<Base>.Index)*/
    /*Swift.(file).Slice.insert(_:Base.Element,at:Slice<Base>.Index)*/
    Slice.prototype.insertAt = function ($info, newElement, i) {
    };
    /*Swift.(file).Slice.insert(contentsOf:S,at:Slice<Base>.Index)*/
    /*Swift.(file).Slice.insert(contentsOf:S,at:Slice<Base>.Index)*/
    Slice.prototype.insertContentsOfAt = function ($info, newElements, i) {
    };
    /*Swift.(file).Slice.remove(at:Slice<Base>.Index)*/
    /*Swift.(file).Slice.remove(at:Slice<Base>.Index)*/
    Slice.prototype.removeAt = function ($info, i) {
    };
    /*Swift.(file).Slice.removeSubrange(_:Range<Slice<Base>.Index>)*/
    /*Swift.(file).Slice.removeSubrange(_:Range<Slice<Base>.Index>)*/
    Slice.prototype.removeSubrange = function ($info, bounds) {
    };
    Slice.$struct = true;
    Slice.$infoAddress = '0x7fb852a9bfc0';
    return Slice;
}());
if (typeof LazySequenceProtocol$implementation != 'undefined')
    _mixin(Slice, LazySequenceProtocol$implementation, false);
if (typeof Collection$implementation != 'undefined')
    _mixin(Slice, Collection$implementation, false);
if (typeof BidirectionalCollection$implementation != 'undefined')
    _mixin(Slice, BidirectionalCollection$implementation, false);
if (typeof MutableCollection$implementation != 'undefined')
    _mixin(Slice, MutableCollection$implementation, false);
if (typeof RandomAccessCollection$implementation != 'undefined')
    _mixin(Slice, RandomAccessCollection$implementation, false);
if (typeof RangeReplaceableCollection$implementation != 'undefined')
    _mixin(Slice, RangeReplaceableCollection$implementation, false);
var _SmallString = /** @class */ (function () {
    function _SmallString() {
    }
    /*Swift.(file)._SmallString.leadingRawBits*/ /*
    leadingRawBits$get() {
    return this.leadingRawBits
    }
    get leadingRawBits() { return this.leadingRawBits$get() }*/ ;
    /*Swift.(file)._SmallString.trailingRawBits*/ /*
    trailingRawBits$get() {
    return this.trailingRawBits
    }
    get trailingRawBits() { return this.trailingRawBits$get() }*/ ;
    /*Swift.(file)._SmallString.init(rawUnchecked:_SmallString.RawBitPattern)*/
    /*Swift.(file)._SmallString.init(rawUnchecked:_SmallString.RawBitPattern)*/
    _SmallString.prototype.initRawUnchecked_SmallStringRawBitPattern = function ($info, bits) {
        return bits;
    };
    /*Swift.(file)._SmallString.init(raw:_SmallString.RawBitPattern)*/
    /*Swift.(file)._SmallString.init(raw:_SmallString.RawBitPattern)*/
    _SmallString.prototype.initRaw_SmallStringRawBitPattern = function ($info, bits) {
        return bits;
    };
    /*Swift.(file)._SmallString.init(_:_StringObject)*/
    /*Swift.(file)._SmallString.init(_:_StringObject)*/
    _SmallString.prototype.init_StringObject = function ($info, object) {
        return object;
    };
    /*Swift.(file)._SmallString.init()*/
    /*Swift.(file)._SmallString.init()*/
    _SmallString.prototype.init = function ($info) {
    };
    /*Swift.(file)._SmallString.capacity*/ /*
    static capacity$get() {
    return this.capacity
    }
    static get capacity() { return this.capacity$get() }*/ ;
    /*Swift.(file)._SmallString.rawDiscriminatedObject*/ /*
    rawDiscriminatedObject$get() {
    return this.rawDiscriminatedObject
    }
    get rawDiscriminatedObject() { return this.rawDiscriminatedObject$get() }*/ ;
    /*Swift.(file)._SmallString.capacity*/ /*
    capacity$get() {
    return this.capacity
    }
    get capacity() { return this.capacity$get() }*/ ;
    /*Swift.(file)._SmallString.count*/ /*
    count$get() {
    return this.count
    }
    get count() { return this.count$get() }*/ ;
    /*Swift.(file)._SmallString.unusedCapacity*/ /*
    unusedCapacity$get() {
    return this.unusedCapacity
    }
    get unusedCapacity() { return this.unusedCapacity$get() }*/ ;
    /*Swift.(file)._SmallString.isASCII*/ /*
    isASCII$get() {
    return this.isASCII
    }
    get isASCII() { return this.isASCII$get() }*/ ;
    /*Swift.(file)._SmallString.zeroTerminatedRawCodeUnits*/ /*
    zeroTerminatedRawCodeUnits$get() {
    return this.zeroTerminatedRawCodeUnits
    }
    get zeroTerminatedRawCodeUnits() { return this.zeroTerminatedRawCodeUnits$get() }*/ ;
    /*Swift.(file)._SmallString.computeIsASCII()*/
    /*Swift.(file)._SmallString.computeIsASCII()*/
    _SmallString.prototype.computeIsASCII = function ($info) {
    };
    /*Swift.(file)._SmallString.startIndex*/ /*
    startIndex$get() {
    return this.startIndex
    }
    get startIndex() { return this.startIndex$get() }*/ ;
    /*Swift.(file)._SmallString.endIndex*/ /*
    endIndex$get() {
    return this.endIndex
    }
    get endIndex() { return this.endIndex$get() }*/ ;
    /*Swift.(file)._SmallString.subscript(_:Int)*/
    /*Swift.(file).RandomAccessCollection.subscript(_:Self.Index)*/
    /*Swift.(file).MutableCollection.subscript(_:Self.Index)*/
    /*Swift.(file).BidirectionalCollection.subscript(_:Self.Index)*/
    /*Swift.(file).Collection.subscript(_:Self.Index)*/
    _SmallString.prototype.subscript$get = function ($info, idx) {
        return this[idx];
    }; /*Swift.(file)._SmallString.subscript(_:Int)*/
    /*Swift.(file).RandomAccessCollection.subscript(_:Self.Index)*/
    /*Swift.(file).MutableCollection.subscript(_:Self.Index)*/
    /*Swift.(file).BidirectionalCollection.subscript(_:Self.Index)*/
    /*Swift.(file).Collection.subscript(_:Self.Index)*/
    _SmallString.prototype.subscript$set = function ($info, newValue, idx) {
        this[idx] = newValue;
    };
    /*Swift.(file)._SmallString.subscript(_:Range<_SmallString.Index>)*/
    /*Swift.(file).RandomAccessCollection.subscript(_:Range<Self.Index>)*/
    /*Swift.(file).BidirectionalCollection.subscript(_:Range<Self.Index>)*/
    /*Swift.(file).Collection.subscript(_:Range<Self.Index>)*/
    _SmallString.prototype.subcriptRange$get = function ($info, bounds) {
        return this[bounds];
    };
    /*Swift.(file)._SmallString.withUTF8(_:(UnsafeBufferPointer<UInt8>) throws -> Result)*/
    /*Swift.(file)._SmallString.withUTF8(_:(UnsafeBufferPointer<UInt8>) throws -> Result)*/
    _SmallString.prototype.withUTF8 = function ($info, f) {
    };
    /*Swift.(file)._SmallString.withMutableCapacity(_:(UnsafeMutableBufferPointer<UInt8>) throws -> Int)*/
    /*Swift.(file)._SmallString.withMutableCapacity(_:(UnsafeMutableBufferPointer<UInt8>) throws -> Int)*/
    _SmallString.prototype.withMutableCapacity = function ($info, f) {
    };
    /*Swift.(file)._SmallString.init(leading:UInt64,trailing:UInt64,count:Int)*/
    /*Swift.(file)._SmallString.init(leading:UInt64,trailing:UInt64,count:Int)*/
    _SmallString.prototype.initLeadingUInt64TrailingUInt64CountInt = function ($info, leading, trailing, count) {
    };
    /*Swift.(file)._SmallString.init(_:UnsafeBufferPointer<UInt8>)*/
    /*Swift.(file)._SmallString.init(_:UnsafeBufferPointer<UInt8>)*/
    _SmallString.prototype.initUnsafeBufferPointer = function ($info, input) {
        return input;
    };
    /*Swift.(file)._SmallString.init(_:_SmallString,appending:_SmallString)*/
    /*Swift.(file)._SmallString.init(_:_SmallString,appending:_SmallString)*/
    _SmallString.prototype.init_SmallStringAppending_SmallString = function ($info, base, other) {
    };
    /*Swift.(file)._SmallString.init(taggedCocoa:AnyObject)*/
    /*Swift.(file)._SmallString.init(taggedCocoa:AnyObject)*/
    _SmallString.prototype.initTaggedCocoaAnyObject = function ($info, cocoa) {
        return cocoa;
    };
    _SmallString.$struct = true;
    _SmallString.$infoAddress = '0x7fb85127df68';
    return _SmallString;
}());
if (typeof RandomAccessCollection$implementation != 'undefined')
    _mixin(_SmallString, RandomAccessCollection$implementation, false);
if (typeof MutableCollection$implementation != 'undefined')
    _mixin(_SmallString, MutableCollection$implementation, false);
var StringProtocol$implementation = /** @class */ (function () {
    function StringProtocol$implementation() {
    }
    /*Swift.(file).StringProtocol.==infix(_:Self,_:RHS)*/
    /*Swift.(file).StringProtocol.==infix(_:Self,_:RHS)*/
    StringProtocol$implementation.infix_61_61 = function ($info, lhs, rhs) {
        return lhs == rhs;
    };
    /*Swift.(file).StringProtocol.!=infix(_:Self,_:RHS)*/
    /*Swift.(file).StringProtocol.!=infix(_:Self,_:RHS)*/
    StringProtocol$implementation.infix_33_61 = function ($info, lhs, rhs) {
        return lhs != rhs;
    };
    /*Swift.(file).StringProtocol.<infix(_:Self,_:RHS)*/
    /*Swift.(file).StringProtocol.<infix(_:Self,_:RHS)*/
    StringProtocol$implementation.infix_60 = function ($info, lhs, rhs) {
        return lhs < rhs;
    };
    /*Swift.(file).StringProtocol.>infix(_:Self,_:RHS)*/
    /*Swift.(file).StringProtocol.>infix(_:Self,_:RHS)*/
    StringProtocol$implementation.infix_62 = function ($info, lhs, rhs) {
        return lhs > rhs;
    };
    /*Swift.(file).StringProtocol.<=infix(_:Self,_:RHS)*/
    /*Swift.(file).StringProtocol.<=infix(_:Self,_:RHS)*/
    StringProtocol$implementation.infix_60_61 = function ($info, lhs, rhs) {
        return lhs <= rhs;
    };
    /*Swift.(file).StringProtocol.>=infix(_:Self,_:RHS)*/
    /*Swift.(file).StringProtocol.>=infix(_:Self,_:RHS)*/
    StringProtocol$implementation.infix_62_61 = function ($info, lhs, rhs) {
        return lhs >= rhs;
    };
    /*Swift.(file).StringProtocol.hash(into:Hasher)*/
    /*Swift.(file).StringProtocol.hash(into:Hasher)*/
    StringProtocol$implementation.prototype.hashInto = function ($info, hasher$inout) {
    };
    /*Swift.(file).StringProtocol.hasPrefix(_:Prefix)*/
    /*Swift.(file).StringProtocol.hasPrefix(_:Prefix)*/
    StringProtocol$implementation.prototype.hasPrefix = function ($info, prefix) {
    };
    /*Swift.(file).StringProtocol.hasSuffix(_:Suffix)*/
    /*Swift.(file).StringProtocol.hasSuffix(_:Suffix)*/
    StringProtocol$implementation.prototype.hasSuffix = function ($info, suffix) {
    };
    return StringProtocol$implementation;
}());
if (typeof BidirectionalCollection$implementation != 'undefined')
    _mixin(StringProtocol$implementation, BidirectionalCollection$implementation, false);
if (typeof TextOutputStream$implementation != 'undefined')
    _mixin(StringProtocol$implementation, TextOutputStream$implementation, false);
if (typeof TextOutputStreamable$implementation != 'undefined')
    _mixin(StringProtocol$implementation, TextOutputStreamable$implementation, false);
if (typeof LosslessStringConvertible$implementation != 'undefined')
    _mixin(StringProtocol$implementation, LosslessStringConvertible$implementation, false);
if (typeof ExpressibleByStringInterpolation$implementation != 'undefined')
    _mixin(StringProtocol$implementation, ExpressibleByStringInterpolation$implementation, false);
if (typeof Hashable$implementation != 'undefined')
    _mixin(StringProtocol$implementation, Hashable$implementation, false);
if (typeof Comparable$implementation != 'undefined')
    _mixin(StringProtocol$implementation, Comparable$implementation, false);
var Substring = /** @class */ (function () {
    function Substring() {
    }
    /*Swift.(file).Substring.init(_:Slice<String>)*/
    /*Swift.(file).Substring.init(_:Slice<String>)*/
    Substring.prototype.initSlice = function ($info, slice) {
        return slice;
    };
    /*Swift.(file).Substring.init(_:_StringGutsSlice)*/
    /*Swift.(file).Substring.init(_:_StringGutsSlice)*/
    Substring.prototype.init_StringGutsSlice = function ($info, slice) {
        return slice;
    };
    /*Swift.(file).Substring.init()*/
    /*Swift.(file).RangeReplaceableCollection.init()*/
    Substring.prototype.init = function ($info) {
    };
    /*Swift.(file).Substring.withUnsafeBytes(_:(UnsafeRawBufferPointer) throws -> R)*/
    /*Swift.(file)._HasContiguousBytes.withUnsafeBytes(_:(UnsafeRawBufferPointer) throws -> R)*/
    Substring.prototype.withUnsafeBytes = function ($info, body) {
    };
    /*Swift.(file).Substring.init(stringInterpolation:DefaultStringInterpolation)*/
    /*Swift.(file).ExpressibleByStringInterpolation.init(stringInterpolation:Self.StringInterpolation)*/
    Substring.prototype.initStringInterpolation = function ($info, stringInterpolation) {
        return stringInterpolation;
    };
    /*Swift.(file).Substring.startIndex*/ /*
    startIndex$get() {
    return this.startIndex
    }
    get startIndex() { return this.startIndex$get() }*/ ;
    /*Swift.(file).Substring.endIndex*/ /*
    endIndex$get() {
    return this.endIndex
    }
    get endIndex() { return this.endIndex$get() }*/ ;
    /*Swift.(file).Substring.index(after:Substring.Index)*/
    /*Swift.(file).BidirectionalCollection.index(after:Self.Index)*/
    /*Swift.(file).Collection.index(after:Self.Index)*/
    Substring.prototype.indexAfter = function ($info, i) {
    };
    /*Swift.(file).Substring.index(before:Substring.Index)*/
    /*Swift.(file).BidirectionalCollection.index(before:Self.Index)*/
    Substring.prototype.indexBefore = function ($info, i) {
    };
    /*Swift.(file).Substring.index(_:Substring.Index,offsetBy:Int)*/
    /*Swift.(file).BidirectionalCollection.index(_:Self.Index,offsetBy:Int)*/
    /*Swift.(file).Collection.index(_:Self.Index,offsetBy:Int)*/
    Substring.prototype.indexOffsetBy = function ($info, i, n) {
    };
    /*Swift.(file).Substring.index(_:Substring.Index,offsetBy:Int,limitedBy:Substring.Index)*/
    /*Swift.(file).BidirectionalCollection.index(_:Self.Index,offsetBy:Int,limitedBy:Self.Index)*/
    /*Swift.(file).Collection.index(_:Self.Index,offsetBy:Int,limitedBy:Self.Index)*/
    Substring.prototype.indexOffsetByLimitedBy = function ($info, i, n, limit) {
    };
    /*Swift.(file).Substring.distance(from:Substring.Index,to:Substring.Index)*/
    /*Swift.(file).BidirectionalCollection.distance(from:Self.Index,to:Self.Index)*/
    /*Swift.(file).Collection.distance(from:Self.Index,to:Self.Index)*/
    Substring.prototype.distanceFromTo = function ($info, start, end) {
    };
    /*Swift.(file).Substring.subscript(_:Substring.Index)*/
    /*Swift.(file).BidirectionalCollection.subscript(_:Self.Index)*/
    /*Swift.(file).Collection.subscript(_:Self.Index)*/
    /*Swift.(file).RangeReplaceableCollection.subscript(_:Self.Index)*/
    Substring.prototype.subscript$get = function ($info, i) {
        return this[i];
    };
    /*Swift.(file).Substring.replaceSubrange(_:Range<Substring.Index>,with:C)*/
    /*Swift.(file).RangeReplaceableCollection.replaceSubrange(_:Range<Self.Index>,with:C)*/
    Substring.prototype.replaceSubrangeWith = function ($info, bounds, newElements) {
    };
    /*Swift.(file).Substring.replaceSubrange(_:Range<Substring.Index>,with:Substring)*/
    /*Swift.(file).Substring.replaceSubrange(_:Range<Substring.Index>,with:Substring)*/
    Substring.prototype.replaceSubrangeWith = function ($info, bounds, newElements) {
    };
    /*Swift.(file).Substring.init(decoding:C,as:Encoding.Type)*/
    /*Swift.(file).StringProtocol.init(decoding:C,as:Encoding.Type)*/
    Substring.prototype.initDecodingAs = function ($info, codeUnits, sourceEncoding) {
    };
    /*Swift.(file).Substring.init(cString:UnsafePointer<CChar>)*/
    /*Swift.(file).StringProtocol.init(cString:UnsafePointer<CChar>)*/
    Substring.prototype.initCStringUnsafePointer = function ($info, nullTerminatedUTF8) {
        return nullTerminatedUTF8;
    };
    /*Swift.(file).Substring.init(decodingCString:UnsafePointer<Encoding.CodeUnit>,as:Encoding.Type)*/
    /*Swift.(file).StringProtocol.init(decodingCString:UnsafePointer<Encoding.CodeUnit>,as:Encoding.Type)*/
    Substring.prototype.initDecodingCStringUnsafePointerAs = function ($info, nullTerminatedCodeUnits, sourceEncoding) {
    };
    /*Swift.(file).Substring.withCString(_:(UnsafePointer<CChar>) throws -> Result)*/
    /*Swift.(file).StringProtocol.withCString(_:(UnsafePointer<CChar>) throws -> Result)*/
    Substring.prototype.withCString = function ($info, body) {
    };
    /*Swift.(file).Substring.withCString(encodedAs:TargetEncoding.Type,_:(UnsafePointer<TargetEncoding.CodeUnit>) throws -> Result)*/
    /*Swift.(file).StringProtocol.withCString(encodedAs:Encoding.Type,_:(UnsafePointer<Encoding.CodeUnit>) throws -> Result)*/
    Substring.prototype.withCStringEncodedAs = function ($info, targetEncoding, body) {
    };
    /*Swift.(file).Substring.hashValue*/ /*
    hashValue$get() {
    return this.hashValue
    }
    get hashValue() { return this.hashValue$get() }*/ ;
    /*Swift.(file).Substring.customMirror*/ /*
    customMirror$get() {
    return this.customMirror
    }
    get customMirror() { return this.customMirror$get() }*/ ;
    /*Swift.(file).Substring.description*/ /*
    description$get() {
    return this.description
    }
    get description() { return this.description$get() }*/ ;
    /*Swift.(file).Substring.debugDescription*/ /*
    debugDescription$get() {
    return this.debugDescription
    }
    get debugDescription() { return this.debugDescription$get() }*/ ;
    /*Swift.(file).Substring.init(_:String)*/
    /*Swift.(file).LosslessStringConvertible.init(_:String)*/
    Substring.prototype.initString = function ($info, content) {
        return content;
    };
    /*Swift.(file).Substring.init(_:Substring.UTF8View)*/
    /*Swift.(file).Substring.init(_:Substring.UTF8View)*/
    Substring.prototype.initSubstringUTF8View = function ($info, content) {
        return content;
    };
    /*Swift.(file).Substring.init(_:Substring.UTF16View)*/
    /*Swift.(file).Substring.init(_:Substring.UTF16View)*/
    Substring.prototype.initSubstringUTF16View = function ($info, content) {
        return content;
    };
    /*Swift.(file).Substring.init(_:Substring.UnicodeScalarView)*/
    /*Swift.(file).Substring.init(_:Substring.UnicodeScalarView)*/
    Substring.prototype.initSubstringUnicodeScalarView = function ($info, content) {
        return content;
    };
    /*Swift.(file).Substring.init(_:S)*/
    /*Swift.(file).RangeReplaceableCollection.init(_:S)*/
    Substring.prototype.initBuffer = function ($info, _elements) {
        return _elements;
    };
    /*Swift.(file).Substring.append(contentsOf:S)*/
    /*Swift.(file).RangeReplaceableCollection.append(contentsOf:S)*/
    Substring.prototype.appendContentsOf = function ($info, _elements) {
    };
    /*Swift.(file).Substring.lowercased()*/
    /*Swift.(file).StringProtocol.lowercased()*/
    Substring.prototype.lowercased = function ($info) {
    };
    /*Swift.(file).Substring.uppercased()*/
    /*Swift.(file).StringProtocol.uppercased()*/
    Substring.prototype.uppercased = function ($info) {
    };
    /*Swift.(file).Substring.filter(_:(Substring.Element) throws -> Bool)*/
    /*Swift.(file).Substring.filter(_:(Substring.Element) throws -> Bool)*/
    Substring.prototype.filterSwift = function ($info, isIncluded) {
    };
    /*Swift.(file).Substring.write(_:String)*/
    /*Swift.(file).TextOutputStream.write(_:String)*/
    Substring.prototype.write = function ($info, other) {
    };
    /*Swift.(file).Substring.write(to:Target)*/
    /*Swift.(file).TextOutputStreamable.write(to:Target)*/
    Substring.prototype.writeTo = function ($info, target$inout) {
    };
    /*Swift.(file).Substring.init(unicodeScalarLiteral:String)*/
    /*Swift.(file).ExpressibleByUnicodeScalarLiteral.init(unicodeScalarLiteral:Self.UnicodeScalarLiteralType)*/
    Substring.prototype.initUnicodeScalarLiteral = function ($info, value) {
        return value;
    };
    /*Swift.(file).Substring.init(extendedGraphemeClusterLiteral:String)*/
    /*Swift.(file).ExpressibleByExtendedGraphemeClusterLiteral.init(extendedGraphemeClusterLiteral:Self.ExtendedGraphemeClusterLiteralType)*/
    Substring.prototype.initExtendedGraphemeClusterLiteral = function ($info, value) {
        return value;
    };
    /*Swift.(file).Substring.init(stringLiteral:String)*/
    /*Swift.(file).ExpressibleByStringLiteral.init(stringLiteral:Self.StringLiteralType)*/
    Substring.prototype.initStringLiteral = function ($info, value) {
        return value;
    };
    /*Swift.(file).Substring.subscript(_:Range<Substring.Index>)*/
    /*Swift.(file).BidirectionalCollection.subscript(_:Range<Self.Index>)*/
    /*Swift.(file).Collection.subscript(_:Range<Self.Index>)*/
    /*Swift.(file).RangeReplaceableCollection.subscript(_:Range<Self.Index>)*/
    Substring.prototype.subcriptRange$get = function ($info, r) {
        return this[r];
    };
    /*Swift.(file).Substring.characters*/ /*
    characters$get() {
    return this.characters
    }
    get characters() { return this.characters$get() }*/ ;
    /*Swift.(file).Substring.withMutableCharacters(_:(inout Substring) -> R)*/
    /*Swift.(file).Substring.withMutableCharacters(_:(inout Substring) -> R)*/
    Substring.prototype.withMutableCharacters = function ($info, body) {
    };
    /*Swift.(file).Substring.subscript(_:ClosedRange<Substring.Index>)*/
    /*Swift.(file).Substring.subscript(_:ClosedRange<Substring.Index>)*/
    Substring.prototype.subscript$get = function ($info, bounds) {
        return this[bounds];
    };
    /*Swift.(file).Substring.customPlaygroundQuickLook*/ /*
    customPlaygroundQuickLook$get() {
    return this.customPlaygroundQuickLook
    }
    get customPlaygroundQuickLook() { return this.customPlaygroundQuickLook$get() }*/ ;
    var _52, _53, _54;
    Substring.$struct = true;
    Substring.$infoAddress = '0x7fb85182da28';
    Substring.UTF8View = (_52 = /** @class */ (function () {
            function class_76() {
            }
            /*Swift.(file).Substring.UTF8View.init(_slice:Slice<String.UTF8View>)*/
            /*Swift.(file).Substring.UTF8View.init(_slice:Slice<String.UTF8View>)*/
            class_76.prototype.init_sliceSlice = function ($info, _slice) {
                return _slice;
            };
            /*Swift.(file).UTF8View.init(_:String.UTF8View,_bounds:Range<Substring.UTF8View.Index>)*/
            /*Swift.(file).UTF8View.init(_:String.UTF8View,_bounds:Range<Substring.UTF8View.Index>)*/
            class_76.prototype.initStringUTF8View_boundsRange = function ($info, base, _bounds) {
            };
            /*Swift.(file).UTF8View.startIndex*/ /*
            startIndex$get() {
            return this.startIndex
            }
            get startIndex() { return this.startIndex$get() }*/ ;
            /*Swift.(file).UTF8View.endIndex*/ /*
            endIndex$get() {
            return this.endIndex
            }
            get endIndex() { return this.endIndex$get() }*/ ;
            /*Swift.(file).UTF8View.subscript(_:Substring.UTF8View.Index)*/
            /*Swift.(file).Collection.subscript(_:Self.Index)*/
            /*Swift.(file).BidirectionalCollection.subscript(_:Self.Index)*/
            class_76.prototype.subscript$get = function ($info, index) {
                return this[index];
            };
            /*Swift.(file).UTF8View.indices*/ /*
            indices$get() {
            return this.indices
            }
            get indices() { return this.indices$get() }*/ ;
            /*Swift.(file).UTF8View.index(after:Substring.UTF8View.Index)*/
            /*Swift.(file).Collection.index(after:Self.Index)*/
            /*Swift.(file).BidirectionalCollection.index(after:Self.Index)*/
            class_76.prototype.indexAfter = function ($info, i) {
            };
            /*Swift.(file).UTF8View.formIndex(after:Substring.UTF8View.Index)*/
            /*Swift.(file).Collection.formIndex(after:Self.Index)*/
            /*Swift.(file).BidirectionalCollection.formIndex(after:Self.Index)*/
            class_76.prototype.formIndexAfter = function ($info, i$inout) {
            };
            /*Swift.(file).UTF8View.index(_:Substring.UTF8View.Index,offsetBy:Int)*/
            /*Swift.(file).Collection.index(_:Self.Index,offsetBy:Int)*/
            /*Swift.(file).BidirectionalCollection.index(_:Self.Index,offsetBy:Int)*/
            class_76.prototype.indexOffsetBy = function ($info, i, n) {
            };
            /*Swift.(file).UTF8View.index(_:Substring.UTF8View.Index,offsetBy:Int,limitedBy:Substring.UTF8View.Index)*/
            /*Swift.(file).Collection.index(_:Self.Index,offsetBy:Int,limitedBy:Self.Index)*/
            /*Swift.(file).BidirectionalCollection.index(_:Self.Index,offsetBy:Int,limitedBy:Self.Index)*/
            class_76.prototype.indexOffsetByLimitedBy = function ($info, i, n, limit) {
            };
            /*Swift.(file).UTF8View.distance(from:Substring.UTF8View.Index,to:Substring.UTF8View.Index)*/
            /*Swift.(file).Collection.distance(from:Self.Index,to:Self.Index)*/
            /*Swift.(file).BidirectionalCollection.distance(from:Self.Index,to:Self.Index)*/
            class_76.prototype.distanceFromTo = function ($info, start, end) {
            };
            /*Swift.(file).UTF8View.index(before:Substring.UTF8View.Index)*/
            /*Swift.(file).BidirectionalCollection.index(before:Self.Index)*/
            class_76.prototype.indexBefore = function ($info, i) {
            };
            /*Swift.(file).UTF8View.formIndex(before:Substring.UTF8View.Index)*/
            /*Swift.(file).BidirectionalCollection.formIndex(before:Self.Index)*/
            class_76.prototype.formIndexBefore = function ($info, i$inout) {
            };
            /*Swift.(file).UTF8View.subscript(_:Range<Substring.UTF8View.Index>)*/
            /*Swift.(file).Collection.subscript(_:Range<Self.Index>)*/
            /*Swift.(file).BidirectionalCollection.subscript(_:Range<Self.Index>)*/
            class_76.prototype.subcriptRange$get = function ($info, r) {
                return this[r];
            };
            return class_76;
        }()),
        _52.$struct = true,
        _52.$infoAddress = '0x7fb8512a31a8',
        _52);
    Substring.UTF16View = (_53 = /** @class */ (function () {
            function class_77() {
            }
            /*Swift.(file).Substring.UTF16View.init(_slice:Slice<String.UTF16View>)*/
            /*Swift.(file).Substring.UTF16View.init(_slice:Slice<String.UTF16View>)*/
            class_77.prototype.init_sliceSlice = function ($info, _slice) {
                return _slice;
            };
            /*Swift.(file).UTF16View.init(_:String.UTF16View,_bounds:Range<Substring.UTF16View.Index>)*/
            /*Swift.(file).UTF16View.init(_:String.UTF16View,_bounds:Range<Substring.UTF16View.Index>)*/
            class_77.prototype.initStringUTF16View_boundsRange = function ($info, base, _bounds) {
            };
            /*Swift.(file).UTF16View.startIndex*/ /*
            startIndex$get() {
            return this.startIndex
            }
            get startIndex() { return this.startIndex$get() }*/ ;
            /*Swift.(file).UTF16View.endIndex*/ /*
            endIndex$get() {
            return this.endIndex
            }
            get endIndex() { return this.endIndex$get() }*/ ;
            /*Swift.(file).UTF16View.subscript(_:Substring.UTF16View.Index)*/
            /*Swift.(file).BidirectionalCollection.subscript(_:Self.Index)*/
            /*Swift.(file).Collection.subscript(_:Self.Index)*/
            class_77.prototype.subscript$get = function ($info, index) {
                return this[index];
            };
            /*Swift.(file).UTF16View.indices*/ /*
            indices$get() {
            return this.indices
            }
            get indices() { return this.indices$get() }*/ ;
            /*Swift.(file).UTF16View.index(after:Substring.UTF16View.Index)*/
            /*Swift.(file).BidirectionalCollection.index(after:Self.Index)*/
            /*Swift.(file).Collection.index(after:Self.Index)*/
            class_77.prototype.indexAfter = function ($info, i) {
            };
            /*Swift.(file).UTF16View.formIndex(after:Substring.UTF16View.Index)*/
            /*Swift.(file).BidirectionalCollection.formIndex(after:Self.Index)*/
            /*Swift.(file).Collection.formIndex(after:Self.Index)*/
            class_77.prototype.formIndexAfter = function ($info, i$inout) {
            };
            /*Swift.(file).UTF16View.index(_:Substring.UTF16View.Index,offsetBy:Int)*/
            /*Swift.(file).BidirectionalCollection.index(_:Self.Index,offsetBy:Int)*/
            /*Swift.(file).Collection.index(_:Self.Index,offsetBy:Int)*/
            class_77.prototype.indexOffsetBy = function ($info, i, n) {
            };
            /*Swift.(file).UTF16View.index(_:Substring.UTF16View.Index,offsetBy:Int,limitedBy:Substring.UTF16View.Index)*/
            /*Swift.(file).BidirectionalCollection.index(_:Self.Index,offsetBy:Int,limitedBy:Self.Index)*/
            /*Swift.(file).Collection.index(_:Self.Index,offsetBy:Int,limitedBy:Self.Index)*/
            class_77.prototype.indexOffsetByLimitedBy = function ($info, i, n, limit) {
            };
            /*Swift.(file).UTF16View.distance(from:Substring.UTF16View.Index,to:Substring.UTF16View.Index)*/
            /*Swift.(file).BidirectionalCollection.distance(from:Self.Index,to:Self.Index)*/
            /*Swift.(file).Collection.distance(from:Self.Index,to:Self.Index)*/
            class_77.prototype.distanceFromTo = function ($info, start, end) {
            };
            /*Swift.(file).UTF16View.index(before:Substring.UTF16View.Index)*/
            /*Swift.(file).BidirectionalCollection.index(before:Self.Index)*/
            class_77.prototype.indexBefore = function ($info, i) {
            };
            /*Swift.(file).UTF16View.formIndex(before:Substring.UTF16View.Index)*/
            /*Swift.(file).BidirectionalCollection.formIndex(before:Self.Index)*/
            class_77.prototype.formIndexBefore = function ($info, i$inout) {
            };
            /*Swift.(file).UTF16View.subscript(_:Range<Substring.UTF16View.Index>)*/
            /*Swift.(file).BidirectionalCollection.subscript(_:Range<Self.Index>)*/
            /*Swift.(file).Collection.subscript(_:Range<Self.Index>)*/
            class_77.prototype.subcriptRange$get = function ($info, r) {
                return this[r];
            };
            return class_77;
        }()),
        _53.$struct = true,
        _53.$infoAddress = '0x7fb8512a3580',
        _53);
    Substring.UnicodeScalarView = (_54 = /** @class */ (function () {
            function class_78() {
            }
            /*Swift.(file).Substring.UnicodeScalarView.init(_slice:Slice<String.UnicodeScalarView>)*/
            /*Swift.(file).Substring.UnicodeScalarView.init(_slice:Slice<String.UnicodeScalarView>)*/
            class_78.prototype.init_sliceSlice = function ($info, _slice) {
                return _slice;
            };
            /*Swift.(file).UnicodeScalarView.init(_:String.UnicodeScalarView,_bounds:Range<Substring.UnicodeScalarView.Index>)*/
            /*Swift.(file).UnicodeScalarView.init(_:String.UnicodeScalarView,_bounds:Range<Substring.UnicodeScalarView.Index>)*/
            class_78.prototype.initStringUnicodeScalarView_boundsRange = function ($info, base, _bounds) {
            };
            /*Swift.(file).UnicodeScalarView.startIndex*/ /*
            startIndex$get() {
            return this.startIndex
            }
            get startIndex() { return this.startIndex$get() }*/ ;
            /*Swift.(file).UnicodeScalarView.endIndex*/ /*
            endIndex$get() {
            return this.endIndex
            }
            get endIndex() { return this.endIndex$get() }*/ ;
            /*Swift.(file).UnicodeScalarView.subscript(_:Substring.UnicodeScalarView.Index)*/
            /*Swift.(file).BidirectionalCollection.subscript(_:Self.Index)*/
            /*Swift.(file).Collection.subscript(_:Self.Index)*/
            /*Swift.(file).RangeReplaceableCollection.subscript(_:Self.Index)*/
            class_78.prototype.subscript$get = function ($info, index) {
                return this[index];
            };
            /*Swift.(file).UnicodeScalarView.indices*/ /*
            indices$get() {
            return this.indices
            }
            get indices() { return this.indices$get() }*/ ;
            /*Swift.(file).UnicodeScalarView.index(after:Substring.UnicodeScalarView.Index)*/
            /*Swift.(file).BidirectionalCollection.index(after:Self.Index)*/
            /*Swift.(file).Collection.index(after:Self.Index)*/
            class_78.prototype.indexAfter = function ($info, i) {
            };
            /*Swift.(file).UnicodeScalarView.formIndex(after:Substring.UnicodeScalarView.Index)*/
            /*Swift.(file).BidirectionalCollection.formIndex(after:Self.Index)*/
            /*Swift.(file).Collection.formIndex(after:Self.Index)*/
            class_78.prototype.formIndexAfter = function ($info, i$inout) {
            };
            /*Swift.(file).UnicodeScalarView.index(_:Substring.UnicodeScalarView.Index,offsetBy:Int)*/
            /*Swift.(file).BidirectionalCollection.index(_:Self.Index,offsetBy:Int)*/
            /*Swift.(file).Collection.index(_:Self.Index,offsetBy:Int)*/
            class_78.prototype.indexOffsetBy = function ($info, i, n) {
            };
            /*Swift.(file).UnicodeScalarView.index(_:Substring.UnicodeScalarView.Index,offsetBy:Int,limitedBy:Substring.UnicodeScalarView.Index)*/
            /*Swift.(file).BidirectionalCollection.index(_:Self.Index,offsetBy:Int,limitedBy:Self.Index)*/
            /*Swift.(file).Collection.index(_:Self.Index,offsetBy:Int,limitedBy:Self.Index)*/
            class_78.prototype.indexOffsetByLimitedBy = function ($info, i, n, limit) {
            };
            /*Swift.(file).UnicodeScalarView.distance(from:Substring.UnicodeScalarView.Index,to:Substring.UnicodeScalarView.Index)*/
            /*Swift.(file).BidirectionalCollection.distance(from:Self.Index,to:Self.Index)*/
            /*Swift.(file).Collection.distance(from:Self.Index,to:Self.Index)*/
            class_78.prototype.distanceFromTo = function ($info, start, end) {
            };
            /*Swift.(file).UnicodeScalarView.index(before:Substring.UnicodeScalarView.Index)*/
            /*Swift.(file).BidirectionalCollection.index(before:Self.Index)*/
            class_78.prototype.indexBefore = function ($info, i) {
            };
            /*Swift.(file).UnicodeScalarView.formIndex(before:Substring.UnicodeScalarView.Index)*/
            /*Swift.(file).BidirectionalCollection.formIndex(before:Self.Index)*/
            class_78.prototype.formIndexBefore = function ($info, i$inout) {
            };
            /*Swift.(file).UnicodeScalarView.subscript(_:Range<Substring.UnicodeScalarView.Index>)*/
            /*Swift.(file).BidirectionalCollection.subscript(_:Range<Self.Index>)*/
            /*Swift.(file).Collection.subscript(_:Range<Self.Index>)*/
            /*Swift.(file).RangeReplaceableCollection.subscript(_:Range<Self.Index>)*/
            class_78.prototype.subcriptRange$get = function ($info, r) {
                return this[r];
            };
            /*Swift.(file).UnicodeScalarView.init()*/
            /*Swift.(file).RangeReplaceableCollection.init()*/
            class_78.prototype.init = function ($info) {
            };
            /*Swift.(file).UnicodeScalarView.replaceSubrange(_:Range<Substring.UnicodeScalarView.Index>,with:C)*/
            /*Swift.(file).RangeReplaceableCollection.replaceSubrange(_:Range<Self.Index>,with:C)*/
            class_78.prototype.replaceSubrangeWith = function ($info, target, replacement) {
            };
            return class_78;
        }()),
        _54.$struct = true,
        _54.$infoAddress = '0x7fb8512a39d0',
        _54);
    return Substring;
}());
if (typeof BidirectionalCollection$implementation != 'undefined')
    _mixin(Substring.UTF8View, BidirectionalCollection$implementation, false);
if (typeof BidirectionalCollection$implementation != 'undefined')
    _mixin(Substring.UTF16View, BidirectionalCollection$implementation, false);
if (typeof BidirectionalCollection$implementation != 'undefined')
    _mixin(Substring.UnicodeScalarView, BidirectionalCollection$implementation, false);
if (typeof RangeReplaceableCollection$implementation != 'undefined')
    _mixin(Substring.UnicodeScalarView, RangeReplaceableCollection$implementation, false);
if (typeof _HasContiguousBytes$implementation != 'undefined')
    _mixin(Substring, _HasContiguousBytes$implementation, false);
if (typeof Equatable$implementation != 'undefined')
    _mixin(Substring, Equatable$implementation, false);
if (typeof StringProtocol$implementation != 'undefined')
    _mixin(Substring, StringProtocol$implementation, false);
if (typeof CustomReflectable$implementation != 'undefined')
    _mixin(Substring, CustomReflectable$implementation, false);
if (typeof CustomStringConvertible$implementation != 'undefined')
    _mixin(Substring, CustomStringConvertible$implementation, false);
if (typeof CustomDebugStringConvertible$implementation != 'undefined')
    _mixin(Substring, CustomDebugStringConvertible$implementation, false);
if (typeof LosslessStringConvertible$implementation != 'undefined')
    _mixin(Substring, LosslessStringConvertible$implementation, false);
if (typeof RangeReplaceableCollection$implementation != 'undefined')
    _mixin(Substring, RangeReplaceableCollection$implementation, false);
if (typeof TextOutputStream$implementation != 'undefined')
    _mixin(Substring, TextOutputStream$implementation, false);
if (typeof TextOutputStreamable$implementation != 'undefined')
    _mixin(Substring, TextOutputStreamable$implementation, false);
if (typeof ExpressibleByUnicodeScalarLiteral$implementation != 'undefined')
    _mixin(Substring, ExpressibleByUnicodeScalarLiteral$implementation, false);
if (typeof ExpressibleByExtendedGraphemeClusterLiteral$implementation != 'undefined')
    _mixin(Substring, ExpressibleByExtendedGraphemeClusterLiteral$implementation, false);
if (typeof ExpressibleByStringLiteral$implementation != 'undefined')
    _mixin(Substring, ExpressibleByStringLiteral$implementation, false);
if (typeof _CustomPlaygroundQuickLookable$implementation != 'undefined')
    _mixin(Substring, _CustomPlaygroundQuickLookable$implementation, false);
var _UIntBuffer = /** @class */ (function () {
    function _UIntBuffer() {
    }
    /*Swift.(file)._UIntBuffer.init(_storage:_UIntBuffer<Element>.Storage,_bitCount:UInt8)*/
    /*Swift.(file)._UIntBuffer.init(_storage:_UIntBuffer<Element>.Storage,_bitCount:UInt8)*/
    _UIntBuffer.prototype.init_storage_UIntBufferStorage_bitCountUInt8 = function ($info, _storage, _bitCount) {
    };
    /*Swift.(file)._UIntBuffer.init(containing:Element)*/
    /*Swift.(file)._UIntBuffer.init(containing:Element)*/
    _UIntBuffer.prototype.initContaining = function ($info, e) {
        return e;
    };
    /*Swift.(file)._UIntBuffer.endIndex*/ /*
    endIndex$get() {
    return this.endIndex
    }
    get endIndex() { return this.endIndex$get() }*/ ;
    /*Swift.(file)._UIntBuffer.index(after:_UIntBuffer<Element>.Index)*/
    /*Swift.(file).Collection.index(after:Self.Index)*/
    /*Swift.(file).BidirectionalCollection.index(after:Self.Index)*/
    /*Swift.(file).RandomAccessCollection.index(after:Self.Index)*/
    _UIntBuffer.prototype.indexAfter = function ($info, i) {
    };
    /*Swift.(file)._UIntBuffer.subscript(_:_UIntBuffer<Element>.Index)*/
    /*Swift.(file).Collection.subscript(_:Self.Index)*/
    /*Swift.(file).BidirectionalCollection.subscript(_:Self.Index)*/
    /*Swift.(file).RandomAccessCollection.subscript(_:Self.Index)*/
    /*Swift.(file).RangeReplaceableCollection.subscript(_:Self.Index)*/
    _UIntBuffer.prototype.subscript$get = function ($info, i) {
        return this[i];
    };
    /*Swift.(file)._UIntBuffer.makeIterator()*/
    /*Swift.(file).Collection.makeIterator()*/
    /*Swift.(file).Sequence.makeIterator()*/
    _UIntBuffer.prototype.makeIterator = function ($info) {
        var _this = this;
        return new SwiftIterator(function (current) { return _this[current]; });
    };
    /*Swift.(file)._UIntBuffer.index(before:_UIntBuffer<Element>.Index)*/
    /*Swift.(file).BidirectionalCollection.index(before:Self.Index)*/
    /*Swift.(file).RandomAccessCollection.index(before:Self.Index)*/
    _UIntBuffer.prototype.indexBefore = function ($info, i) {
    };
    /*Swift.(file)._UIntBuffer.index(_:_UIntBuffer<Element>.Index,offsetBy:Int)*/
    /*Swift.(file).Collection.index(_:Self.Index,offsetBy:Int)*/
    /*Swift.(file).BidirectionalCollection.index(_:Self.Index,offsetBy:Int)*/
    /*Swift.(file).RandomAccessCollection.index(_:Self.Index,offsetBy:Int)*/
    _UIntBuffer.prototype.indexOffsetBy = function ($info, i, n) {
    };
    /*Swift.(file)._UIntBuffer.distance(from:_UIntBuffer<Element>.Index,to:_UIntBuffer<Element>.Index)*/
    /*Swift.(file).Collection.distance(from:Self.Index,to:Self.Index)*/
    /*Swift.(file).BidirectionalCollection.distance(from:Self.Index,to:Self.Index)*/
    /*Swift.(file).RandomAccessCollection.distance(from:Self.Index,to:Self.Index)*/
    _UIntBuffer.prototype.distanceFromTo = function ($info, i, j) {
    };
    /*Swift.(file)._UIntBuffer.init()*/
    /*Swift.(file).RangeReplaceableCollection.init()*/
    _UIntBuffer.prototype.init = function ($info) {
    };
    /*Swift.(file)._UIntBuffer.capacity*/ /*
    capacity$get() {
    return this.capacity
    }
    get capacity() { return this.capacity$get() }*/ ;
    /*Swift.(file)._UIntBuffer.append(_:Element)*/
    /*Swift.(file).RangeReplaceableCollection.append(_:Self.Element)*/
    _UIntBuffer.prototype.append = function ($info, newElement) {
    };
    /*Swift.(file)._UIntBuffer.removeFirst()*/
    /*Swift.(file).RangeReplaceableCollection.removeFirst()*/
    _UIntBuffer.prototype.removeFirst = function ($info) {
    };
    /*Swift.(file)._UIntBuffer.replaceSubrange(_:Range<_UIntBuffer<Element>.Index>,with:C)*/
    /*Swift.(file).RangeReplaceableCollection.replaceSubrange(_:Range<Self.Index>,with:C)*/
    _UIntBuffer.prototype.replaceSubrangeWith = function ($info, target, replacement) {
    };
    var _55, _56;
    _UIntBuffer.$struct = true;
    _UIntBuffer.$infoAddress = '0x7fb854801480';
    _UIntBuffer.Index = (_55 = /** @class */ (function () {
            function class_79() {
            }
            /*Swift.(file)._UIntBuffer.Index.init(bitOffset:UInt8)*/
            /*Swift.(file)._UIntBuffer.Index.init(bitOffset:UInt8)*/
            class_79.prototype.initBitOffsetUInt8 = function ($info, bitOffset) {
                return bitOffset;
            };
            /*Swift.(file)._UIntBuffer.Index.==infix(_:_UIntBuffer<Element>.Index,_:_UIntBuffer<Element>.Index)*/
            /*Swift.(file).Equatable.==infix(_:Self,_:Self)*/
            class_79.infix_61_61 = function ($info, lhs, rhs) {
                return lhs == rhs;
            };
            /*Swift.(file)._UIntBuffer.Index.<infix(_:_UIntBuffer<Element>.Index,_:_UIntBuffer<Element>.Index)*/
            /*Swift.(file).Comparable.<infix(_:Self,_:Self)*/
            class_79.infix_60 = function ($info, lhs, rhs) {
                return lhs < rhs;
            };
            return class_79;
        }()),
        _55.$struct = true,
        _55.$infoAddress = '0x7fb854806820',
        _55);
    _UIntBuffer.Iterator = (_56 = /** @class */ (function () {
            function class_80() {
            }
            /*Swift.(file)._UIntBuffer.Iterator.init(_:_UIntBuffer<Element>)*/
            /*Swift.(file)._UIntBuffer.Iterator.init(_:_UIntBuffer<Element>)*/
            class_80.prototype.init_UIntBuffer = function ($info, x) {
                return x;
            };
            /*Swift.(file)._UIntBuffer.Iterator.next()*/
            /*Swift.(file).IteratorProtocol.next()*/
            class_80.prototype.next = function ($info) {
            };
            return class_80;
        }()),
        _56.$struct = true,
        _56.$infoAddress = '0x7fb851d232f8',
        _56);
    return _UIntBuffer;
}());
if (typeof Comparable$implementation != 'undefined')
    _mixin(_UIntBuffer.Index, Comparable$implementation, false);
if (typeof IteratorProtocol$implementation != 'undefined')
    _mixin(_UIntBuffer.Iterator, IteratorProtocol$implementation, false);
if (typeof Sequence$implementation != 'undefined')
    _mixin(_UIntBuffer.Iterator, Sequence$implementation, false);
if (typeof Collection$implementation != 'undefined')
    _mixin(_UIntBuffer, Collection$implementation, false);
if (typeof Sequence$implementation != 'undefined')
    _mixin(_UIntBuffer, Sequence$implementation, false);
if (typeof BidirectionalCollection$implementation != 'undefined')
    _mixin(_UIntBuffer, BidirectionalCollection$implementation, false);
if (typeof RandomAccessCollection$implementation != 'undefined')
    _mixin(_UIntBuffer, RandomAccessCollection$implementation, false);
if (typeof RangeReplaceableCollection$implementation != 'undefined')
    _mixin(_UIntBuffer, RangeReplaceableCollection$implementation, false);
var UnsafeMutableBufferPointer = /** @class */ (function () {
    function UnsafeMutableBufferPointer() {
    }
    /*Swift.(file).UnsafeMutableBufferPointer.init(_position:UnsafeMutablePointer<Element>?,count:Int)*/
    /*Swift.(file).UnsafeMutableBufferPointer.init(_position:UnsafeMutablePointer<Element>?,count:Int)*/
    UnsafeMutableBufferPointer.prototype.init_positionOptionalCountInt = function ($info, _position, count) {
    };
    /*Swift.(file).UnsafeMutableBufferPointer.withUnsafeBytes(_:(UnsafeRawBufferPointer) throws -> R)*/
    /*Swift.(file)._HasContiguousBytes.withUnsafeBytes(_:(UnsafeRawBufferPointer) throws -> R)*/
    UnsafeMutableBufferPointer.prototype.withUnsafeBytes = function ($info, body) {
    };
    /*Swift.(file).UnsafeMutableBufferPointer.makeIterator()*/
    /*Swift.(file).Sequence.makeIterator()*/
    /*Swift.(file).Collection.makeIterator()*/
    UnsafeMutableBufferPointer.prototype.makeIterator = function ($info) {
        var _this = this;
        return new SwiftIterator(function (current) { return _this.contains(null, current + _this.lowerBound) ? current + _this.lowerBound : null; });
    };
    /*Swift.(file).UnsafeMutableBufferPointer.startIndex*/ /*
    startIndex$get() {
    return this.startIndex
    }
    get startIndex() { return this.startIndex$get() }*/ ;
    /*Swift.(file).UnsafeMutableBufferPointer.endIndex*/ /*
    endIndex$get() {
    return this.endIndex
    }
    get endIndex() { return this.endIndex$get() }*/ ;
    /*Swift.(file).UnsafeMutableBufferPointer.index(after:Int)*/
    /*Swift.(file).RandomAccessCollection.index(after:Self.Index)*/
    /*Swift.(file).Collection.index(after:Self.Index)*/
    /*Swift.(file).BidirectionalCollection.index(after:Self.Index)*/
    UnsafeMutableBufferPointer.prototype.indexAfter = function ($info, i) {
    };
    /*Swift.(file).UnsafeMutableBufferPointer.formIndex(after:Int)*/
    /*Swift.(file).RandomAccessCollection.formIndex(after:Self.Index)*/
    /*Swift.(file).Collection.formIndex(after:Self.Index)*/
    /*Swift.(file).BidirectionalCollection.formIndex(after:Self.Index)*/
    UnsafeMutableBufferPointer.prototype.formIndexAfter = function ($info, i$inout) {
    };
    /*Swift.(file).UnsafeMutableBufferPointer.index(before:Int)*/
    /*Swift.(file).RandomAccessCollection.index(before:Self.Index)*/
    /*Swift.(file).BidirectionalCollection.index(before:Self.Index)*/
    UnsafeMutableBufferPointer.prototype.indexBefore = function ($info, i) {
    };
    /*Swift.(file).UnsafeMutableBufferPointer.formIndex(before:Int)*/
    /*Swift.(file).RandomAccessCollection.formIndex(before:Self.Index)*/
    /*Swift.(file).BidirectionalCollection.formIndex(before:Self.Index)*/
    UnsafeMutableBufferPointer.prototype.formIndexBefore = function ($info, i$inout) {
    };
    /*Swift.(file).UnsafeMutableBufferPointer.index(_:Int,offsetBy:Int)*/
    /*Swift.(file).RandomAccessCollection.index(_:Self.Index,offsetBy:Int)*/
    /*Swift.(file).Collection.index(_:Self.Index,offsetBy:Int)*/
    /*Swift.(file).BidirectionalCollection.index(_:Self.Index,offsetBy:Int)*/
    UnsafeMutableBufferPointer.prototype.indexOffsetBy = function ($info, i, n) {
    };
    /*Swift.(file).UnsafeMutableBufferPointer.index(_:Int,offsetBy:Int,limitedBy:Int)*/
    /*Swift.(file).RandomAccessCollection.index(_:Self.Index,offsetBy:Int,limitedBy:Self.Index)*/
    /*Swift.(file).Collection.index(_:Self.Index,offsetBy:Int,limitedBy:Self.Index)*/
    /*Swift.(file).BidirectionalCollection.index(_:Self.Index,offsetBy:Int,limitedBy:Self.Index)*/
    UnsafeMutableBufferPointer.prototype.indexOffsetByLimitedBy = function ($info, i, n, limit) {
    };
    /*Swift.(file).UnsafeMutableBufferPointer.distance(from:Int,to:Int)*/
    /*Swift.(file).RandomAccessCollection.distance(from:Self.Index,to:Self.Index)*/
    /*Swift.(file).Collection.distance(from:Self.Index,to:Self.Index)*/
    /*Swift.(file).BidirectionalCollection.distance(from:Self.Index,to:Self.Index)*/
    UnsafeMutableBufferPointer.prototype.distanceFromTo = function ($info, start, end) {
    };
    /*Swift.(file).UnsafeMutableBufferPointer.indices*/ /*
    indices$get() {
    return this.indices
    }
    get indices() { return this.indices$get() }*/ ;
    /*Swift.(file).UnsafeMutableBufferPointer.subscript(_:Int)*/
    /*Swift.(file).MutableCollection.subscript(_:Self.Index)*/
    /*Swift.(file).RandomAccessCollection.subscript(_:Self.Index)*/
    /*Swift.(file).Collection.subscript(_:Self.Index)*/
    /*Swift.(file).BidirectionalCollection.subscript(_:Self.Index)*/
    UnsafeMutableBufferPointer.prototype.subscript$get = function ($info, i) {
        return this[i];
    }; /*Swift.(file).UnsafeMutableBufferPointer.subscript(_:Int)*/
    /*Swift.(file).MutableCollection.subscript(_:Self.Index)*/
    /*Swift.(file).RandomAccessCollection.subscript(_:Self.Index)*/
    /*Swift.(file).Collection.subscript(_:Self.Index)*/
    /*Swift.(file).BidirectionalCollection.subscript(_:Self.Index)*/
    UnsafeMutableBufferPointer.prototype.subscript$_modify = function ($info, i) {
        return this[i];
    };
    /*Swift.(file).UnsafeMutableBufferPointer.subscript(_unchecked:Int)*/
    /*Swift.(file).UnsafeMutableBufferPointer.subscript(_unchecked:Int)*/
    UnsafeMutableBufferPointer.prototype.subscript_unchecked$get = function ($info, i) {
        return this[i];
    }; /*Swift.(file).UnsafeMutableBufferPointer.subscript(_unchecked:Int)*/
    /*Swift.(file).UnsafeMutableBufferPointer.subscript(_unchecked:Int)*/
    UnsafeMutableBufferPointer.prototype.subscript_unchecked$_modify = function ($info, i) {
        return this[i];
    };
    /*Swift.(file).UnsafeMutableBufferPointer.subscript(_:Range<Int>)*/
    /*Swift.(file).MutableCollection.subscript(_:Range<Self.Index>)*/
    /*Swift.(file).RandomAccessCollection.subscript(_:Range<Self.Index>)*/
    /*Swift.(file).Collection.subscript(_:Range<Self.Index>)*/
    /*Swift.(file).BidirectionalCollection.subscript(_:Range<Self.Index>)*/
    UnsafeMutableBufferPointer.prototype.subcriptRange$get = function ($info, bounds) {
        return this[bounds];
    }; /*Swift.(file).UnsafeMutableBufferPointer.subscript(_:Range<Int>)*/
    /*Swift.(file).MutableCollection.subscript(_:Range<Self.Index>)*/
    /*Swift.(file).RandomAccessCollection.subscript(_:Range<Self.Index>)*/
    /*Swift.(file).Collection.subscript(_:Range<Self.Index>)*/
    /*Swift.(file).BidirectionalCollection.subscript(_:Range<Self.Index>)*/
    UnsafeMutableBufferPointer.prototype.subcriptRange$set = function ($info, newValue, bounds) {
        this[bounds] = newValue;
    };
    /*Swift.(file).UnsafeMutableBufferPointer.swapAt(_:Int,_:Int)*/
    /*Swift.(file).MutableCollection.swapAt(_:Self.Index,_:Self.Index)*/
    UnsafeMutableBufferPointer.prototype.swapAt = function ($info, i, j) {
    };
    /*Swift.(file).UnsafeMutableBufferPointer.init(start:UnsafeMutablePointer<Element>?,count:Int)*/
    /*Swift.(file).UnsafeMutableBufferPointer.init(start:UnsafeMutablePointer<Element>?,count:Int)*/
    UnsafeMutableBufferPointer.prototype.initStartOptionalCountInt = function ($info, start, count) {
    };
    /*Swift.(file).UnsafeMutableBufferPointer.init(_empty:())*/
    /*Swift.(file).UnsafeMutableBufferPointer.init(_empty:())*/
    UnsafeMutableBufferPointer.prototype.init_emptytuple_type = function ($info, _empty) {
        return _empty;
    };
    /*Swift.(file).UnsafeMutableBufferPointer.init(mutating:UnsafeBufferPointer<Element>)*/
    /*Swift.(file).UnsafeMutableBufferPointer.init(mutating:UnsafeBufferPointer<Element>)*/
    UnsafeMutableBufferPointer.prototype.initMutatingUnsafeBufferPointer = function ($info, other) {
        return other;
    };
    /*Swift.(file).UnsafeMutableBufferPointer.withContiguousMutableStorageIfAvailable(_:(inout UnsafeMutableBufferPointer<Element>) throws -> R)*/
    /*Swift.(file).MutableCollection.withContiguousMutableStorageIfAvailable(_:(inout UnsafeMutableBufferPointer<Self.Element>) throws -> R)*/
    UnsafeMutableBufferPointer.prototype.withContiguousMutableStorageIfAvailable = function ($info, body) {
    };
    /*Swift.(file).UnsafeMutableBufferPointer.withContiguousStorageIfAvailable(_:(UnsafeBufferPointer<Element>) throws -> R)*/
    /*Swift.(file).Sequence.withContiguousStorageIfAvailable(_:(UnsafeBufferPointer<Self.Element>) throws -> R)*/
    UnsafeMutableBufferPointer.prototype.withContiguousStorageIfAvailable = function ($info, body) {
    };
    /*Swift.(file).UnsafeMutableBufferPointer.init(rebasing:Slice<UnsafeMutableBufferPointer<Element>>)*/
    /*Swift.(file).UnsafeMutableBufferPointer.init(rebasing:Slice<UnsafeMutableBufferPointer<Element>>)*/
    UnsafeMutableBufferPointer.prototype.initRebasingSlice = function ($info, slice) {
        return slice;
    };
    /*Swift.(file).UnsafeMutableBufferPointer.deallocate()*/
    /*Swift.(file).UnsafeMutableBufferPointer.deallocate()*/
    UnsafeMutableBufferPointer.prototype.deallocate = function ($info) {
    };
    /*Swift.(file).UnsafeMutableBufferPointer.allocate(capacity:Int)*/
    /*Swift.(file).UnsafeMutableBufferPointer.allocate(capacity:Int)*/
    UnsafeMutableBufferPointer.allocateCapacity = function ($info, count) {
    };
    /*Swift.(file).UnsafeMutableBufferPointer.initialize(repeating:Element)*/
    /*Swift.(file).UnsafeMutableBufferPointer.initialize(repeating:Element)*/
    UnsafeMutableBufferPointer.prototype.initializeRepeating = function ($info, repeatedValue) {
    };
    /*Swift.(file).UnsafeMutableBufferPointer.assign(repeating:Element)*/
    /*Swift.(file).UnsafeMutableBufferPointer.assign(repeating:Element)*/
    UnsafeMutableBufferPointer.prototype.assignRepeating = function ($info, repeatedValue) {
    };
    /*Swift.(file).UnsafeMutableBufferPointer.withMemoryRebound(to:T.Type,_:(UnsafeMutableBufferPointer<T>) throws -> Result)*/
    /*Swift.(file).UnsafeMutableBufferPointer.withMemoryRebound(to:T.Type,_:(UnsafeMutableBufferPointer<T>) throws -> Result)*/
    UnsafeMutableBufferPointer.prototype.withMemoryReboundTo = function ($info, type, body) {
    };
    /*Swift.(file).UnsafeMutableBufferPointer.baseAddress*/ /*
    baseAddress$get() {
    return this.baseAddress
    }
    get baseAddress() { return this.baseAddress$get() }*/ ;
    /*Swift.(file).UnsafeMutableBufferPointer.debugDescription*/ /*
    debugDescription$get() {
    return this.debugDescription
    }
    get debugDescription() { return this.debugDescription$get() }*/ ;
    /*Swift.(file).UnsafeMutableBufferPointer.initialize(from:S)*/
    /*Swift.(file).UnsafeMutableBufferPointer.initialize(from:S)*/
    UnsafeMutableBufferPointer.prototype.initializeFrom = function ($info, source) {
    };
    UnsafeMutableBufferPointer.$struct = true;
    UnsafeMutableBufferPointer.$infoAddress = '0x7fb852aa7ff8';
    return UnsafeMutableBufferPointer;
}());
if (typeof _HasContiguousBytes$implementation != 'undefined')
    _mixin(UnsafeMutableBufferPointer, _HasContiguousBytes$implementation, false);
if (typeof Sequence$implementation != 'undefined')
    _mixin(UnsafeMutableBufferPointer, Sequence$implementation, false);
if (typeof MutableCollection$implementation != 'undefined')
    _mixin(UnsafeMutableBufferPointer, MutableCollection$implementation, false);
if (typeof RandomAccessCollection$implementation != 'undefined')
    _mixin(UnsafeMutableBufferPointer, RandomAccessCollection$implementation, false);
if (typeof CustomDebugStringConvertible$implementation != 'undefined')
    _mixin(UnsafeMutableBufferPointer, CustomDebugStringConvertible$implementation, false);
var UnsafeBufferPointer = /** @class */ (function () {
    function UnsafeBufferPointer() {
    }
    /*Swift.(file).UnsafeBufferPointer.init(_position:UnsafePointer<Element>?,count:Int)*/
    /*Swift.(file).UnsafeBufferPointer.init(_position:UnsafePointer<Element>?,count:Int)*/
    UnsafeBufferPointer.prototype.init_positionOptionalCountInt = function ($info, _position, count) {
    };
    /*Swift.(file).UnsafeBufferPointer.withUnsafeBytes(_:(UnsafeRawBufferPointer) throws -> R)*/
    /*Swift.(file)._HasContiguousBytes.withUnsafeBytes(_:(UnsafeRawBufferPointer) throws -> R)*/
    UnsafeBufferPointer.prototype.withUnsafeBytes = function ($info, body) {
    };
    /*Swift.(file).UnsafeBufferPointer.hasNormalizationBoundary(before:Int)*/
    /*Swift.(file).UnsafeBufferPointer.hasNormalizationBoundary(before:Int)*/
    UnsafeBufferPointer.prototype.hasNormalizationBoundaryBefore = function ($info, index) {
    };
    /*Swift.(file).UnsafeBufferPointer.makeIterator()*/
    /*Swift.(file).Sequence.makeIterator()*/
    /*Swift.(file).Collection.makeIterator()*/
    UnsafeBufferPointer.prototype.makeIterator = function ($info) {
        var _this = this;
        return new SwiftIterator(function (current) { return _this.contains(null, current + _this.lowerBound) ? current + _this.lowerBound : null; });
    };
    /*Swift.(file).UnsafeBufferPointer.startIndex*/ /*
    startIndex$get() {
    return this.startIndex
    }
    get startIndex() { return this.startIndex$get() }*/ ;
    /*Swift.(file).UnsafeBufferPointer.endIndex*/ /*
    endIndex$get() {
    return this.endIndex
    }
    get endIndex() { return this.endIndex$get() }*/ ;
    /*Swift.(file).UnsafeBufferPointer.index(after:Int)*/
    /*Swift.(file).Collection.index(after:Self.Index)*/
    /*Swift.(file).RandomAccessCollection.index(after:Self.Index)*/
    /*Swift.(file).BidirectionalCollection.index(after:Self.Index)*/
    UnsafeBufferPointer.prototype.indexAfter = function ($info, i) {
    };
    /*Swift.(file).UnsafeBufferPointer.formIndex(after:Int)*/
    /*Swift.(file).Collection.formIndex(after:Self.Index)*/
    /*Swift.(file).RandomAccessCollection.formIndex(after:Self.Index)*/
    /*Swift.(file).BidirectionalCollection.formIndex(after:Self.Index)*/
    UnsafeBufferPointer.prototype.formIndexAfter = function ($info, i$inout) {
    };
    /*Swift.(file).UnsafeBufferPointer.index(before:Int)*/
    /*Swift.(file).RandomAccessCollection.index(before:Self.Index)*/
    /*Swift.(file).BidirectionalCollection.index(before:Self.Index)*/
    UnsafeBufferPointer.prototype.indexBefore = function ($info, i) {
    };
    /*Swift.(file).UnsafeBufferPointer.formIndex(before:Int)*/
    /*Swift.(file).RandomAccessCollection.formIndex(before:Self.Index)*/
    /*Swift.(file).BidirectionalCollection.formIndex(before:Self.Index)*/
    UnsafeBufferPointer.prototype.formIndexBefore = function ($info, i$inout) {
    };
    /*Swift.(file).UnsafeBufferPointer.index(_:Int,offsetBy:Int)*/
    /*Swift.(file).Collection.index(_:Self.Index,offsetBy:Int)*/
    /*Swift.(file).RandomAccessCollection.index(_:Self.Index,offsetBy:Int)*/
    /*Swift.(file).BidirectionalCollection.index(_:Self.Index,offsetBy:Int)*/
    UnsafeBufferPointer.prototype.indexOffsetBy = function ($info, i, n) {
    };
    /*Swift.(file).UnsafeBufferPointer.index(_:Int,offsetBy:Int,limitedBy:Int)*/
    /*Swift.(file).Collection.index(_:Self.Index,offsetBy:Int,limitedBy:Self.Index)*/
    /*Swift.(file).RandomAccessCollection.index(_:Self.Index,offsetBy:Int,limitedBy:Self.Index)*/
    /*Swift.(file).BidirectionalCollection.index(_:Self.Index,offsetBy:Int,limitedBy:Self.Index)*/
    UnsafeBufferPointer.prototype.indexOffsetByLimitedBy = function ($info, i, n, limit) {
    };
    /*Swift.(file).UnsafeBufferPointer.distance(from:Int,to:Int)*/
    /*Swift.(file).Collection.distance(from:Self.Index,to:Self.Index)*/
    /*Swift.(file).RandomAccessCollection.distance(from:Self.Index,to:Self.Index)*/
    /*Swift.(file).BidirectionalCollection.distance(from:Self.Index,to:Self.Index)*/
    UnsafeBufferPointer.prototype.distanceFromTo = function ($info, start, end) {
    };
    /*Swift.(file).UnsafeBufferPointer.indices*/ /*
    indices$get() {
    return this.indices
    }
    get indices() { return this.indices$get() }*/ ;
    /*Swift.(file).UnsafeBufferPointer.subscript(_:Int)*/
    /*Swift.(file).Collection.subscript(_:Self.Index)*/
    /*Swift.(file).RandomAccessCollection.subscript(_:Self.Index)*/
    /*Swift.(file).BidirectionalCollection.subscript(_:Self.Index)*/
    UnsafeBufferPointer.prototype.subscript$get = function ($info, i) {
        return this[i];
    };
    /*Swift.(file).UnsafeBufferPointer.subscript(_unchecked:Int)*/
    /*Swift.(file).UnsafeBufferPointer.subscript(_unchecked:Int)*/
    UnsafeBufferPointer.prototype.subscript_unchecked$get = function ($info, i) {
        return this[i];
    };
    /*Swift.(file).UnsafeBufferPointer.subscript(_:Range<Int>)*/
    /*Swift.(file).Collection.subscript(_:Range<Self.Index>)*/
    /*Swift.(file).RandomAccessCollection.subscript(_:Range<Self.Index>)*/
    /*Swift.(file).BidirectionalCollection.subscript(_:Range<Self.Index>)*/
    UnsafeBufferPointer.prototype.subcriptRange$get = function ($info, bounds) {
        return this[bounds];
    };
    /*Swift.(file).UnsafeBufferPointer.init(start:UnsafePointer<Element>?,count:Int)*/
    /*Swift.(file).UnsafeBufferPointer.init(start:UnsafePointer<Element>?,count:Int)*/
    UnsafeBufferPointer.prototype.initStartOptionalCountInt = function ($info, start, count) {
    };
    /*Swift.(file).UnsafeBufferPointer.init(_empty:())*/
    /*Swift.(file).UnsafeBufferPointer.init(_empty:())*/
    UnsafeBufferPointer.prototype.init_emptytuple_type = function ($info, _empty) {
        return _empty;
    };
    /*Swift.(file).UnsafeBufferPointer.init(_:UnsafeMutableBufferPointer<Element>)*/
    /*Swift.(file).UnsafeBufferPointer.init(_:UnsafeMutableBufferPointer<Element>)*/
    UnsafeBufferPointer.prototype.initUnsafeMutableBufferPointer = function ($info, other) {
        return other;
    };
    /*Swift.(file).UnsafeBufferPointer.withContiguousStorageIfAvailable(_:(UnsafeBufferPointer<Element>) throws -> R)*/
    /*Swift.(file).Sequence.withContiguousStorageIfAvailable(_:(UnsafeBufferPointer<Self.Element>) throws -> R)*/
    UnsafeBufferPointer.prototype.withContiguousStorageIfAvailable = function ($info, body) {
    };
    /*Swift.(file).UnsafeBufferPointer.init(rebasing:Slice<UnsafeBufferPointer<Element>>)*/
    /*Swift.(file).UnsafeBufferPointer.init(rebasing:Slice<UnsafeBufferPointer<Element>>)*/
    UnsafeBufferPointer.prototype.initRebasingSlice = function ($info, slice) {
        return slice;
    };
    /*Swift.(file).UnsafeBufferPointer.init(rebasing:Slice<UnsafeMutableBufferPointer<Element>>)*/
    /*Swift.(file).UnsafeBufferPointer.init(rebasing:Slice<UnsafeMutableBufferPointer<Element>>)*/
    UnsafeBufferPointer.prototype.initRebasingSlice = function ($info, slice) {
        return slice;
    };
    /*Swift.(file).UnsafeBufferPointer.deallocate()*/
    /*Swift.(file).UnsafeBufferPointer.deallocate()*/
    UnsafeBufferPointer.prototype.deallocate = function ($info) {
    };
    /*Swift.(file).UnsafeBufferPointer.withMemoryRebound(to:T.Type,_:(UnsafeBufferPointer<T>) throws -> Result)*/
    /*Swift.(file).UnsafeBufferPointer.withMemoryRebound(to:T.Type,_:(UnsafeBufferPointer<T>) throws -> Result)*/
    UnsafeBufferPointer.prototype.withMemoryReboundTo = function ($info, type, body) {
    };
    /*Swift.(file).UnsafeBufferPointer.baseAddress*/ /*
    baseAddress$get() {
    return this.baseAddress
    }
    get baseAddress() { return this.baseAddress$get() }*/ ;
    /*Swift.(file).UnsafeBufferPointer.debugDescription*/ /*
    debugDescription$get() {
    return this.debugDescription
    }
    get debugDescription() { return this.debugDescription$get() }*/ ;
    var _57;
    UnsafeBufferPointer.$struct = true;
    UnsafeBufferPointer.$infoAddress = '0x7fb852a9fb30';
    UnsafeBufferPointer.Iterator = (_57 = /** @class */ (function () {
            function class_81() {
            }
            /*Swift.(file).UnsafeBufferPointer.Iterator.init(_position:UnsafePointer<UnsafeBufferPointer<Element>.Iterator.Element>?,_end:UnsafePointer<UnsafeBufferPointer<Element>.Iterator.Element>?)*/
            /*Swift.(file).UnsafeBufferPointer.Iterator.init(_position:UnsafePointer<UnsafeBufferPointer<Element>.Iterator.Element>?,_end:UnsafePointer<UnsafeBufferPointer<Element>.Iterator.Element>?)*/
            class_81.prototype.init_positionOptional_endOptional = function ($info, _position, _end) {
            };
            /*Swift.(file).Iterator.next()*/
            /*Swift.(file).IteratorProtocol.next()*/
            class_81.prototype.next = function ($info) {
            };
            return class_81;
        }()),
        _57.$struct = true,
        _57.$infoAddress = '0x7fb8512aafb0',
        _57);
    return UnsafeBufferPointer;
}());
if (typeof IteratorProtocol$implementation != 'undefined')
    _mixin(UnsafeBufferPointer.Iterator, IteratorProtocol$implementation, false);
if (typeof _HasContiguousBytes$implementation != 'undefined')
    _mixin(UnsafeBufferPointer, _HasContiguousBytes$implementation, false);
if (typeof Sequence$implementation != 'undefined')
    _mixin(UnsafeBufferPointer, Sequence$implementation, false);
if (typeof Collection$implementation != 'undefined')
    _mixin(UnsafeBufferPointer, Collection$implementation, false);
if (typeof RandomAccessCollection$implementation != 'undefined')
    _mixin(UnsafeBufferPointer, RandomAccessCollection$implementation, false);
if (typeof CustomDebugStringConvertible$implementation != 'undefined')
    _mixin(UnsafeBufferPointer, CustomDebugStringConvertible$implementation, false);
var UnsafeMutableRawBufferPointer = /** @class */ (function () {
    function UnsafeMutableRawBufferPointer() {
    }
    /*Swift.(file).UnsafeMutableRawBufferPointer.init(_position:UnsafeMutableRawPointer?,_end:UnsafeMutableRawPointer?)*/
    /*Swift.(file).UnsafeMutableRawBufferPointer.init(_position:UnsafeMutableRawPointer?,_end:UnsafeMutableRawPointer?)*/
    UnsafeMutableRawBufferPointer.prototype.init_positionOptional_endOptional = function ($info, _position, _end) {
    };
    /*Swift.(file).UnsafeMutableRawBufferPointer.makeIterator()*/
    /*Swift.(file).Sequence.makeIterator()*/
    /*Swift.(file).Collection.makeIterator()*/
    UnsafeMutableRawBufferPointer.prototype.makeIterator = function ($info) {
        var _this = this;
        return new SwiftIterator(function (current) { return _this.contains(null, current + _this.lowerBound) ? current + _this.lowerBound : null; });
    };
    /*Swift.(file).UnsafeMutableRawBufferPointer.startIndex*/ /*
    startIndex$get() {
    return this.startIndex
    }
    get startIndex() { return this.startIndex$get() }*/ ;
    /*Swift.(file).UnsafeMutableRawBufferPointer.endIndex*/ /*
    endIndex$get() {
    return this.endIndex
    }
    get endIndex() { return this.endIndex$get() }*/ ;
    /*Swift.(file).UnsafeMutableRawBufferPointer.indices*/ /*
    indices$get() {
    return this.indices
    }
    get indices() { return this.indices$get() }*/ ;
    /*Swift.(file).UnsafeMutableRawBufferPointer.subscript(_:Int)*/
    /*Swift.(file).MutableCollection.subscript(_:Self.Index)*/
    /*Swift.(file).Collection.subscript(_:Self.Index)*/
    /*Swift.(file).RandomAccessCollection.subscript(_:Self.Index)*/
    /*Swift.(file).BidirectionalCollection.subscript(_:Self.Index)*/
    UnsafeMutableRawBufferPointer.prototype.subscript$get = function ($info, i) {
        return this[i];
    }; /*Swift.(file).UnsafeMutableRawBufferPointer.subscript(_:Int)*/
    /*Swift.(file).MutableCollection.subscript(_:Self.Index)*/
    /*Swift.(file).Collection.subscript(_:Self.Index)*/
    /*Swift.(file).RandomAccessCollection.subscript(_:Self.Index)*/
    /*Swift.(file).BidirectionalCollection.subscript(_:Self.Index)*/
    UnsafeMutableRawBufferPointer.prototype.subscript$set = function ($info, newValue, i) {
        this[i] = newValue;
    };
    /*Swift.(file).UnsafeMutableRawBufferPointer.subscript(_:Range<Int>)*/
    /*Swift.(file).MutableCollection.subscript(_:Range<Self.Index>)*/
    /*Swift.(file).Collection.subscript(_:Range<Self.Index>)*/
    /*Swift.(file).RandomAccessCollection.subscript(_:Range<Self.Index>)*/
    /*Swift.(file).BidirectionalCollection.subscript(_:Range<Self.Index>)*/
    UnsafeMutableRawBufferPointer.prototype.subcriptRange$get = function ($info, bounds) {
        return this[bounds];
    }; /*Swift.(file).UnsafeMutableRawBufferPointer.subscript(_:Range<Int>)*/
    /*Swift.(file).MutableCollection.subscript(_:Range<Self.Index>)*/
    /*Swift.(file).Collection.subscript(_:Range<Self.Index>)*/
    /*Swift.(file).RandomAccessCollection.subscript(_:Range<Self.Index>)*/
    /*Swift.(file).BidirectionalCollection.subscript(_:Range<Self.Index>)*/
    UnsafeMutableRawBufferPointer.prototype.subcriptRange$set = function ($info, newValue, bounds) {
        this[bounds] = newValue;
    };
    /*Swift.(file).UnsafeMutableRawBufferPointer.swapAt(_:Int,_:Int)*/
    /*Swift.(file).MutableCollection.swapAt(_:Self.Index,_:Self.Index)*/
    UnsafeMutableRawBufferPointer.prototype.swapAt = function ($info, i, j) {
    };
    /*Swift.(file).UnsafeMutableRawBufferPointer.count*/ /*
    count$get() {
    return this.count
    }
    get count() { return this.count$get() }*/ ;
    /*Swift.(file).UnsafeMutableRawBufferPointer.allocate(byteCount:Int,alignment:Int)*/
    /*Swift.(file).UnsafeMutableRawBufferPointer.allocate(byteCount:Int,alignment:Int)*/
    UnsafeMutableRawBufferPointer.allocateByteCountAlignment = function ($info, byteCount, alignment) {
    };
    /*Swift.(file).UnsafeMutableRawBufferPointer.deallocate()*/
    /*Swift.(file).UnsafeMutableRawBufferPointer.deallocate()*/
    UnsafeMutableRawBufferPointer.prototype.deallocate = function ($info) {
    };
    /*Swift.(file).UnsafeMutableRawBufferPointer.load(fromByteOffset:Int,as:T.Type)*/
    /*Swift.(file).UnsafeMutableRawBufferPointer.load(fromByteOffset:Int,as:T.Type)*/
    UnsafeMutableRawBufferPointer.prototype.loadFromByteOffsetAs = function ($info, offset, type) {
    };
    /*Swift.(file).UnsafeMutableRawBufferPointer.storeBytes(of:T,toByteOffset:Int,as:T.Type)*/
    /*Swift.(file).UnsafeMutableRawBufferPointer.storeBytes(of:T,toByteOffset:Int,as:T.Type)*/
    UnsafeMutableRawBufferPointer.prototype.storeBytesOfToByteOffsetAs = function ($info, value, offset, as) {
    };
    /*Swift.(file).UnsafeMutableRawBufferPointer.copyMemory(from:UnsafeRawBufferPointer)*/
    /*Swift.(file).UnsafeMutableRawBufferPointer.copyMemory(from:UnsafeRawBufferPointer)*/
    UnsafeMutableRawBufferPointer.prototype.copyMemoryFrom = function ($info, source) {
    };
    /*Swift.(file).UnsafeMutableRawBufferPointer.copyBytes(from:C)*/
    /*Swift.(file).UnsafeMutableRawBufferPointer.copyBytes(from:C)*/
    UnsafeMutableRawBufferPointer.prototype.copyBytesFrom = function ($info, source) {
    };
    /*Swift.(file).UnsafeMutableRawBufferPointer.init(start:UnsafeMutableRawPointer?,count:Int)*/
    /*Swift.(file).UnsafeMutableRawBufferPointer.init(start:UnsafeMutableRawPointer?,count:Int)*/
    UnsafeMutableRawBufferPointer.prototype.initStartOptionalCountInt = function ($info, start, count) {
    };
    /*Swift.(file).UnsafeMutableRawBufferPointer.init(_:UnsafeMutableRawBufferPointer)*/
    /*Swift.(file).UnsafeMutableRawBufferPointer.init(_:UnsafeMutableRawBufferPointer)*/
    UnsafeMutableRawBufferPointer.prototype.initUnsafeMutableRawBufferPointer = function ($info, bytes) {
        return bytes;
    };
    /*Swift.(file).UnsafeMutableRawBufferPointer.init(mutating:UnsafeRawBufferPointer)*/
    /*Swift.(file).UnsafeMutableRawBufferPointer.init(mutating:UnsafeRawBufferPointer)*/
    UnsafeMutableRawBufferPointer.prototype.initMutatingUnsafeRawBufferPointer = function ($info, bytes) {
        return bytes;
    };
    /*Swift.(file).UnsafeMutableRawBufferPointer.init(_:UnsafeMutableBufferPointer<T>)*/
    /*Swift.(file).UnsafeMutableRawBufferPointer.init(_:UnsafeMutableBufferPointer<T>)*/
    UnsafeMutableRawBufferPointer.prototype.initUnsafeMutableBufferPointer = function ($info, buffer) {
        return buffer;
    };
    /*Swift.(file).UnsafeMutableRawBufferPointer.init(rebasing:Slice<UnsafeMutableRawBufferPointer>)*/
    /*Swift.(file).UnsafeMutableRawBufferPointer.init(rebasing:Slice<UnsafeMutableRawBufferPointer>)*/
    UnsafeMutableRawBufferPointer.prototype.initRebasingSlice = function ($info, slice) {
        return slice;
    };
    /*Swift.(file).UnsafeMutableRawBufferPointer.baseAddress*/ /*
    baseAddress$get() {
    return this.baseAddress
    }
    get baseAddress() { return this.baseAddress$get() }*/ ;
    /*Swift.(file).UnsafeMutableRawBufferPointer.initializeMemory(as:T.Type,repeating:T)*/
    /*Swift.(file).UnsafeMutableRawBufferPointer.initializeMemory(as:T.Type,repeating:T)*/
    UnsafeMutableRawBufferPointer.prototype.initializeMemoryAsRepeating = function ($info, type, repeatedValue) {
    };
    /*Swift.(file).UnsafeMutableRawBufferPointer.initializeMemory(as:S.Element.Type,from:S)*/
    /*Swift.(file).UnsafeMutableRawBufferPointer.initializeMemory(as:S.Element.Type,from:S)*/
    UnsafeMutableRawBufferPointer.prototype.initializeMemoryAsFrom = function ($info, type, source) {
    };
    /*Swift.(file).UnsafeMutableRawBufferPointer.bindMemory(to:T.Type)*/
    /*Swift.(file).UnsafeMutableRawBufferPointer.bindMemory(to:T.Type)*/
    UnsafeMutableRawBufferPointer.prototype.bindMemoryTo = function ($info, type) {
    };
    /*Swift.(file).UnsafeMutableRawBufferPointer.debugDescription*/ /*
    debugDescription$get() {
    return this.debugDescription
    }
    get debugDescription() { return this.debugDescription$get() }*/ ;
    /*Swift.(file).UnsafeMutableRawBufferPointer.subscript(_:Range<Int>)*/
    /*Swift.(file).UnsafeMutableRawBufferPointer.subscript(_:Range<Int>)*/
    UnsafeMutableRawBufferPointer.prototype.subscript$get = function ($info, bounds) {
        return this[bounds];
    }; /*Swift.(file).UnsafeMutableRawBufferPointer.subscript(_:Range<Int>)*/
    /*Swift.(file).UnsafeMutableRawBufferPointer.subscript(_:Range<Int>)*/
    UnsafeMutableRawBufferPointer.prototype.subscript$set = function ($info, newValue, bounds) {
        this[bounds] = newValue;
    };
    /*Swift.(file).UnsafeMutableRawBufferPointer.subscript(_:Range<Int>)*/
    /*Swift.(file).UnsafeMutableRawBufferPointer.subscript(_:Range<Int>)*/
    UnsafeMutableRawBufferPointer.prototype.subscript$get = function ($info, bounds) {
        return this[bounds];
    }; /*Swift.(file).UnsafeMutableRawBufferPointer.subscript(_:Range<Int>)*/
    /*Swift.(file).UnsafeMutableRawBufferPointer.subscript(_:Range<Int>)*/
    UnsafeMutableRawBufferPointer.prototype.subscript$set = function ($info, newValue, bounds) {
        this[bounds] = newValue;
    };
    /*Swift.(file).UnsafeMutableRawBufferPointer.allocate(count:Int)*/
    /*Swift.(file).UnsafeMutableRawBufferPointer.allocate(count:Int)*/
    UnsafeMutableRawBufferPointer.allocateCount = function ($info, count) {
    };
    /*Swift.(file).UnsafeMutableRawBufferPointer.copyBytes(from:UnsafeRawBufferPointer)*/
    /*Swift.(file).UnsafeMutableRawBufferPointer.copyBytes(from:UnsafeRawBufferPointer)*/
    UnsafeMutableRawBufferPointer.prototype.copyBytesFrom = function ($info, source) {
    };
    UnsafeMutableRawBufferPointer.$struct = true;
    UnsafeMutableRawBufferPointer.$infoAddress = '0x7fb8552a0f08';
    return UnsafeMutableRawBufferPointer;
}());
if (typeof Sequence$implementation != 'undefined')
    _mixin(UnsafeMutableRawBufferPointer, Sequence$implementation, false);
if (typeof MutableCollection$implementation != 'undefined')
    _mixin(UnsafeMutableRawBufferPointer, MutableCollection$implementation, false);
if (typeof RandomAccessCollection$implementation != 'undefined')
    _mixin(UnsafeMutableRawBufferPointer, RandomAccessCollection$implementation, false);
if (typeof CustomDebugStringConvertible$implementation != 'undefined')
    _mixin(UnsafeMutableRawBufferPointer, CustomDebugStringConvertible$implementation, false);
var UnsafeRawBufferPointer = /** @class */ (function () {
    function UnsafeRawBufferPointer() {
    }
    /*Swift.(file).UnsafeRawBufferPointer.init(_position:UnsafeRawPointer?,_end:UnsafeRawPointer?)*/
    /*Swift.(file).UnsafeRawBufferPointer.init(_position:UnsafeRawPointer?,_end:UnsafeRawPointer?)*/
    UnsafeRawBufferPointer.prototype.init_positionOptional_endOptional = function ($info, _position, _end) {
    };
    /*Swift.(file).UnsafeRawBufferPointer.makeIterator()*/
    /*Swift.(file).Sequence.makeIterator()*/
    /*Swift.(file).Collection.makeIterator()*/
    UnsafeRawBufferPointer.prototype.makeIterator = function ($info) {
        var _this = this;
        return new SwiftIterator(function (current) { return _this.contains(null, current + _this.lowerBound) ? current + _this.lowerBound : null; });
    };
    /*Swift.(file).UnsafeRawBufferPointer.startIndex*/ /*
    startIndex$get() {
    return this.startIndex
    }
    get startIndex() { return this.startIndex$get() }*/ ;
    /*Swift.(file).UnsafeRawBufferPointer.endIndex*/ /*
    endIndex$get() {
    return this.endIndex
    }
    get endIndex() { return this.endIndex$get() }*/ ;
    /*Swift.(file).UnsafeRawBufferPointer.indices*/ /*
    indices$get() {
    return this.indices
    }
    get indices() { return this.indices$get() }*/ ;
    /*Swift.(file).UnsafeRawBufferPointer.subscript(_:Int)*/
    /*Swift.(file).Collection.subscript(_:Self.Index)*/
    /*Swift.(file).RandomAccessCollection.subscript(_:Self.Index)*/
    /*Swift.(file).BidirectionalCollection.subscript(_:Self.Index)*/
    UnsafeRawBufferPointer.prototype.subscript$get = function ($info, i) {
        return this[i];
    };
    /*Swift.(file).UnsafeRawBufferPointer.subscript(_:Range<Int>)*/
    /*Swift.(file).Collection.subscript(_:Range<Self.Index>)*/
    /*Swift.(file).RandomAccessCollection.subscript(_:Range<Self.Index>)*/
    /*Swift.(file).BidirectionalCollection.subscript(_:Range<Self.Index>)*/
    UnsafeRawBufferPointer.prototype.subcriptRange$get = function ($info, bounds) {
        return this[bounds];
    };
    /*Swift.(file).UnsafeRawBufferPointer.count*/ /*
    count$get() {
    return this.count
    }
    get count() { return this.count$get() }*/ ;
    /*Swift.(file).UnsafeRawBufferPointer.deallocate()*/
    /*Swift.(file).UnsafeRawBufferPointer.deallocate()*/
    UnsafeRawBufferPointer.prototype.deallocate = function ($info) {
    };
    /*Swift.(file).UnsafeRawBufferPointer.load(fromByteOffset:Int,as:T.Type)*/
    /*Swift.(file).UnsafeRawBufferPointer.load(fromByteOffset:Int,as:T.Type)*/
    UnsafeRawBufferPointer.prototype.loadFromByteOffsetAs = function ($info, offset, type) {
    };
    /*Swift.(file).UnsafeRawBufferPointer.init(start:UnsafeRawPointer?,count:Int)*/
    /*Swift.(file).UnsafeRawBufferPointer.init(start:UnsafeRawPointer?,count:Int)*/
    UnsafeRawBufferPointer.prototype.initStartOptionalCountInt = function ($info, start, count) {
    };
    /*Swift.(file).UnsafeRawBufferPointer.init(_:UnsafeMutableRawBufferPointer)*/
    /*Swift.(file).UnsafeRawBufferPointer.init(_:UnsafeMutableRawBufferPointer)*/
    UnsafeRawBufferPointer.prototype.initUnsafeMutableRawBufferPointer = function ($info, bytes) {
        return bytes;
    };
    /*Swift.(file).UnsafeRawBufferPointer.init(_:UnsafeRawBufferPointer)*/
    /*Swift.(file).UnsafeRawBufferPointer.init(_:UnsafeRawBufferPointer)*/
    UnsafeRawBufferPointer.prototype.initUnsafeRawBufferPointer = function ($info, bytes) {
        return bytes;
    };
    /*Swift.(file).UnsafeRawBufferPointer.init(_:UnsafeMutableBufferPointer<T>)*/
    /*Swift.(file).UnsafeRawBufferPointer.init(_:UnsafeMutableBufferPointer<T>)*/
    UnsafeRawBufferPointer.prototype.initUnsafeMutableBufferPointer = function ($info, buffer) {
        return buffer;
    };
    /*Swift.(file).UnsafeRawBufferPointer.init(_:UnsafeBufferPointer<T>)*/
    /*Swift.(file).UnsafeRawBufferPointer.init(_:UnsafeBufferPointer<T>)*/
    UnsafeRawBufferPointer.prototype.initUnsafeBufferPointer = function ($info, buffer) {
        return buffer;
    };
    /*Swift.(file).UnsafeRawBufferPointer.init(rebasing:Slice<UnsafeRawBufferPointer>)*/
    /*Swift.(file).UnsafeRawBufferPointer.init(rebasing:Slice<UnsafeRawBufferPointer>)*/
    UnsafeRawBufferPointer.prototype.initRebasingSlice = function ($info, slice) {
        return slice;
    };
    /*Swift.(file).UnsafeRawBufferPointer.init(rebasing:Slice<UnsafeMutableRawBufferPointer>)*/
    /*Swift.(file).UnsafeRawBufferPointer.init(rebasing:Slice<UnsafeMutableRawBufferPointer>)*/
    UnsafeRawBufferPointer.prototype.initRebasingSlice = function ($info, slice) {
        return slice;
    };
    /*Swift.(file).UnsafeRawBufferPointer.baseAddress*/ /*
    baseAddress$get() {
    return this.baseAddress
    }
    get baseAddress() { return this.baseAddress$get() }*/ ;
    /*Swift.(file).UnsafeRawBufferPointer.bindMemory(to:T.Type)*/
    /*Swift.(file).UnsafeRawBufferPointer.bindMemory(to:T.Type)*/
    UnsafeRawBufferPointer.prototype.bindMemoryTo = function ($info, type) {
    };
    /*Swift.(file).UnsafeRawBufferPointer.debugDescription*/ /*
    debugDescription$get() {
    return this.debugDescription
    }
    get debugDescription() { return this.debugDescription$get() }*/ ;
    /*Swift.(file).UnsafeRawBufferPointer.subscript(_:Range<Int>)*/
    /*Swift.(file).UnsafeRawBufferPointer.subscript(_:Range<Int>)*/
    UnsafeRawBufferPointer.prototype.subscript$get = function ($info, bounds) {
        return this[bounds];
    };
    var _58;
    UnsafeRawBufferPointer.$struct = true;
    UnsafeRawBufferPointer.$infoAddress = '0x7fb855161c90';
    UnsafeRawBufferPointer.Iterator = (_58 = /** @class */ (function () {
            function class_82() {
            }
            /*Swift.(file).UnsafeRawBufferPointer.Iterator.init(_position:UnsafeRawPointer?,_end:UnsafeRawPointer?)*/
            /*Swift.(file).UnsafeRawBufferPointer.Iterator.init(_position:UnsafeRawPointer?,_end:UnsafeRawPointer?)*/
            class_82.prototype.init_positionOptional_endOptional = function ($info, _position, _end) {
            };
            /*Swift.(file).Iterator.next()*/
            /*Swift.(file).IteratorProtocol.next()*/
            class_82.prototype.next = function ($info) {
            };
            return class_82;
        }()),
        _58.$struct = true,
        _58.$infoAddress = '0x7fb8512ac210',
        _58);
    return UnsafeRawBufferPointer;
}());
if (typeof IteratorProtocol$implementation != 'undefined')
    _mixin(UnsafeRawBufferPointer.Iterator, IteratorProtocol$implementation, false);
if (typeof Sequence$implementation != 'undefined')
    _mixin(UnsafeRawBufferPointer.Iterator, Sequence$implementation, false);
if (typeof Sequence$implementation != 'undefined')
    _mixin(UnsafeRawBufferPointer, Sequence$implementation, false);
if (typeof Collection$implementation != 'undefined')
    _mixin(UnsafeRawBufferPointer, Collection$implementation, false);
if (typeof RandomAccessCollection$implementation != 'undefined')
    _mixin(UnsafeRawBufferPointer, RandomAccessCollection$implementation, false);
if (typeof CustomDebugStringConvertible$implementation != 'undefined')
    _mixin(UnsafeRawBufferPointer, CustomDebugStringConvertible$implementation, false);
var UnsafePointer = /** @class */ (function () {
    function UnsafePointer() {
    }
    /*Swift.(file).UnsafePointer.init(_:RawPointer)*/
    /*Swift.(file)._Pointer.init(_:RawPointer)*/
    UnsafePointer.prototype.initRawPointer = function ($info, _rawValue) {
        return _rawValue;
    };
    /*Swift.(file).UnsafePointer.deallocate()*/
    /*Swift.(file).UnsafePointer.deallocate()*/
    UnsafePointer.prototype.deallocate = function ($info) {
    };
    /*Swift.(file).UnsafePointer.pointee*/ /*
    pointee$get() {
    return this.pointee
    }
    get pointee() { return this.pointee$get() }*/ ;
    /*Swift.(file).UnsafePointer.withMemoryRebound(to:T.Type,capacity:Int,_:(UnsafePointer<T>) throws -> Result)*/
    /*Swift.(file).UnsafePointer.withMemoryRebound(to:T.Type,capacity:Int,_:(UnsafePointer<T>) throws -> Result)*/
    UnsafePointer.prototype.withMemoryReboundToCapacity = function ($info, type, count, body) {
    };
    /*Swift.(file).UnsafePointer.subscript(_:Int)*/
    /*Swift.(file).UnsafePointer.subscript(_:Int)*/
    UnsafePointer.prototype.subscript$unsafeAddress = function ($info, i) {
        return this[i];
    };
    /*Swift.(file).UnsafePointer.hashValue*/ /*
    hashValue$get() {
    return this.hashValue
    }
    get hashValue() { return this.hashValue$get() }*/ ;
    /*Swift.(file).UnsafePointer.summary*/ /*
    summary$get() {
    return this.summary
    }
    get summary() { return this.summary$get() }*/ ;
    /*Swift.(file).UnsafePointer.customPlaygroundQuickLook*/ /*
    customPlaygroundQuickLook$get() {
    return this.customPlaygroundQuickLook
    }
    get customPlaygroundQuickLook() { return this.customPlaygroundQuickLook$get() }*/ ;
    UnsafePointer.$struct = true;
    UnsafePointer.$infoAddress = '0x7fb855032928';
    return UnsafePointer;
}());
if (typeof _Pointer$implementation != 'undefined')
    _mixin(UnsafePointer, _Pointer$implementation, false);
if (typeof _CustomPlaygroundQuickLookable$implementation != 'undefined')
    _mixin(UnsafePointer, _CustomPlaygroundQuickLookable$implementation, false);
if (typeof CVarArg$implementation != 'undefined')
    _mixin(UnsafePointer, CVarArg$implementation, false);
var UnsafeMutablePointer = /** @class */ (function () {
    function UnsafeMutablePointer() {
    }
    /*Swift.(file).UnsafeMutablePointer.init(_:RawPointer)*/
    /*Swift.(file)._Pointer.init(_:RawPointer)*/
    UnsafeMutablePointer.prototype.initRawPointer = function ($info, _rawValue) {
        return _rawValue;
    };
    /*Swift.(file).UnsafeMutablePointer.init(mutating:UnsafePointer<Pointee>)*/
    /*Swift.(file).UnsafeMutablePointer.init(mutating:UnsafePointer<Pointee>)*/
    UnsafeMutablePointer.prototype.initMutatingUnsafePointer = function ($info, other) {
        return other;
    };
    /*Swift.(file).UnsafeMutablePointer.init(mutating:UnsafePointer<Pointee>?)*/
    /*Swift.(file).UnsafeMutablePointer.init(mutating:UnsafePointer<Pointee>?)*/
    UnsafeMutablePointer.prototype.initMutatingOptional = function ($info, other) {
        return other;
    };
    /*Swift.(file).UnsafeMutablePointer.allocate(capacity:Int)*/
    /*Swift.(file).UnsafeMutablePointer.allocate(capacity:Int)*/
    UnsafeMutablePointer.allocateCapacity = function ($info, count) {
    };
    /*Swift.(file).UnsafeMutablePointer.deallocate()*/
    /*Swift.(file).UnsafeMutablePointer.deallocate()*/
    UnsafeMutablePointer.prototype.deallocate = function ($info) {
    };
    /*Swift.(file).UnsafeMutablePointer.pointee*/ /*
    pointee$get() {
    return this.pointee
    }
    get pointee() { return this.pointee$get() }*/ ;
    /*Swift.(file).UnsafeMutablePointer.initialize(repeating:Pointee,count:Int)*/
    /*Swift.(file).UnsafeMutablePointer.initialize(repeating:Pointee,count:Int)*/
    UnsafeMutablePointer.prototype.initializeRepeatingCount = function ($info, repeatedValue, count) {
    };
    /*Swift.(file).UnsafeMutablePointer.initialize(to:Pointee)*/
    /*Swift.(file).UnsafeMutablePointer.initialize(to:Pointee)*/
    UnsafeMutablePointer.prototype.initializeTo = function ($info, value) {
    };
    /*Swift.(file).UnsafeMutablePointer.move()*/
    /*Swift.(file).UnsafeMutablePointer.move()*/
    UnsafeMutablePointer.prototype.move = function ($info) {
    };
    /*Swift.(file).UnsafeMutablePointer.assign(repeating:Pointee,count:Int)*/
    /*Swift.(file).UnsafeMutablePointer.assign(repeating:Pointee,count:Int)*/
    UnsafeMutablePointer.prototype.assignRepeatingCount = function ($info, repeatedValue, count) {
    };
    /*Swift.(file).UnsafeMutablePointer.assign(from:UnsafePointer<Pointee>,count:Int)*/
    /*Swift.(file).UnsafeMutablePointer.assign(from:UnsafePointer<Pointee>,count:Int)*/
    UnsafeMutablePointer.prototype.assignFromCount = function ($info, source, count) {
    };
    /*Swift.(file).UnsafeMutablePointer.moveInitialize(from:UnsafeMutablePointer<Pointee>,count:Int)*/
    /*Swift.(file).UnsafeMutablePointer.moveInitialize(from:UnsafeMutablePointer<Pointee>,count:Int)*/
    UnsafeMutablePointer.prototype.moveInitializeFromCount = function ($info, source, count) {
    };
    /*Swift.(file).UnsafeMutablePointer.initialize(from:UnsafePointer<Pointee>,count:Int)*/
    /*Swift.(file).UnsafeMutablePointer.initialize(from:UnsafePointer<Pointee>,count:Int)*/
    UnsafeMutablePointer.prototype.initializeFromCount = function ($info, source, count) {
    };
    /*Swift.(file).UnsafeMutablePointer.moveAssign(from:UnsafeMutablePointer<Pointee>,count:Int)*/
    /*Swift.(file).UnsafeMutablePointer.moveAssign(from:UnsafeMutablePointer<Pointee>,count:Int)*/
    UnsafeMutablePointer.prototype.moveAssignFromCount = function ($info, source, count) {
    };
    /*Swift.(file).UnsafeMutablePointer.deinitialize(count:Int)*/
    /*Swift.(file).UnsafeMutablePointer.deinitialize(count:Int)*/
    UnsafeMutablePointer.prototype.deinitializeCount = function ($info, count) {
    };
    /*Swift.(file).UnsafeMutablePointer.withMemoryRebound(to:T.Type,capacity:Int,_:(UnsafeMutablePointer<T>) throws -> Result)*/
    /*Swift.(file).UnsafeMutablePointer.withMemoryRebound(to:T.Type,capacity:Int,_:(UnsafeMutablePointer<T>) throws -> Result)*/
    UnsafeMutablePointer.prototype.withMemoryReboundToCapacity = function ($info, type, count, body) {
    };
    /*Swift.(file).UnsafeMutablePointer.subscript(_:Int)*/
    /*Swift.(file).UnsafeMutablePointer.subscript(_:Int)*/
    UnsafeMutablePointer.prototype.subscript$unsafeAddress = function ($info, i) {
        return this[i];
    }; /*Swift.(file).UnsafeMutablePointer.subscript(_:Int)*/
    /*Swift.(file).UnsafeMutablePointer.subscript(_:Int)*/
    UnsafeMutablePointer.prototype.subscript$unsafeMutableAddress = function ($info, i) {
        return this[i];
    };
    /*Swift.(file).UnsafeMutablePointer.hashValue*/ /*
    hashValue$get() {
    return this.hashValue
    }
    get hashValue() { return this.hashValue$get() }*/ ;
    /*Swift.(file).UnsafeMutablePointer.initialize(to:Pointee,count:Int)*/
    /*Swift.(file).UnsafeMutablePointer.initialize(to:Pointee,count:Int)*/
    UnsafeMutablePointer.prototype.initializeToCount = function ($info, newValue, count) {
    };
    /*Swift.(file).UnsafeMutablePointer.deinitialize()*/
    /*Swift.(file).UnsafeMutablePointer.deinitialize()*/
    UnsafeMutablePointer.prototype.deinitialize = function ($info) {
    };
    /*Swift.(file).UnsafeMutablePointer.deallocate(capacity:Int)*/
    /*Swift.(file).UnsafeMutablePointer.deallocate(capacity:Int)*/
    UnsafeMutablePointer.prototype.deallocateCapacity = function ($info, _) {
    };
    /*Swift.(file).UnsafeMutablePointer.initialize(from:C)*/
    /*Swift.(file).UnsafeMutablePointer.initialize(from:C)*/
    UnsafeMutablePointer.prototype.initializeFrom = function ($info, source) {
    };
    /*Swift.(file).UnsafeMutablePointer.summary*/ /*
    summary$get() {
    return this.summary
    }
    get summary() { return this.summary$get() }*/ ;
    /*Swift.(file).UnsafeMutablePointer.customPlaygroundQuickLook*/ /*
    customPlaygroundQuickLook$get() {
    return this.customPlaygroundQuickLook
    }
    get customPlaygroundQuickLook() { return this.customPlaygroundQuickLook$get() }*/ ;
    UnsafeMutablePointer.$struct = true;
    UnsafeMutablePointer.$infoAddress = '0x7fb855032688';
    return UnsafeMutablePointer;
}());
if (typeof _Pointer$implementation != 'undefined')
    _mixin(UnsafeMutablePointer, _Pointer$implementation, false);
if (typeof _CustomPlaygroundQuickLookable$implementation != 'undefined')
    _mixin(UnsafeMutablePointer, _CustomPlaygroundQuickLookable$implementation, false);
if (typeof CVarArg$implementation != 'undefined')
    _mixin(UnsafeMutablePointer, CVarArg$implementation, false);
var UnsafeRawPointer = /** @class */ (function () {
    function UnsafeRawPointer() {
    }
    /*Swift.(file).UnsafeRawPointer.init(_:RawPointer)*/
    /*Swift.(file)._Pointer.init(_:RawPointer)*/
    UnsafeRawPointer.prototype.initRawPointer = function ($info, _rawValue) {
        return _rawValue;
    };
    /*Swift.(file).UnsafeRawPointer.init(_:UnsafePointer<T>)*/
    /*Swift.(file).UnsafeRawPointer.init(_:UnsafePointer<T>)*/
    UnsafeRawPointer.prototype.initUnsafePointer = function ($info, other) {
        return other;
    };
    /*Swift.(file).UnsafeRawPointer.init(_:UnsafePointer<T>?)*/
    /*Swift.(file).UnsafeRawPointer.init(_:UnsafePointer<T>?)*/
    UnsafeRawPointer.prototype.initOptional = function ($info, other) {
        return other;
    };
    /*Swift.(file).UnsafeRawPointer.init(_:UnsafeMutableRawPointer)*/
    /*Swift.(file).UnsafeRawPointer.init(_:UnsafeMutableRawPointer)*/
    UnsafeRawPointer.prototype.initUnsafeMutableRawPointer = function ($info, other) {
        return other;
    };
    /*Swift.(file).UnsafeRawPointer.init(_:UnsafeMutableRawPointer?)*/
    /*Swift.(file).UnsafeRawPointer.init(_:UnsafeMutableRawPointer?)*/
    UnsafeRawPointer.prototype.initOptional = function ($info, other) {
        return other;
    };
    /*Swift.(file).UnsafeRawPointer.deallocate()*/
    /*Swift.(file).UnsafeRawPointer.deallocate()*/
    UnsafeRawPointer.prototype.deallocate = function ($info) {
    };
    /*Swift.(file).UnsafeRawPointer.bindMemory(to:T.Type,capacity:Int)*/
    /*Swift.(file).UnsafeRawPointer.bindMemory(to:T.Type,capacity:Int)*/
    UnsafeRawPointer.prototype.bindMemoryToCapacity = function ($info, type, count) {
    };
    /*Swift.(file).UnsafeRawPointer.assumingMemoryBound(to:T.Type)*/
    /*Swift.(file).UnsafeRawPointer.assumingMemoryBound(to:T.Type)*/
    UnsafeRawPointer.prototype.assumingMemoryBoundTo = function ($info, to) {
    };
    /*Swift.(file).UnsafeRawPointer.load(fromByteOffset:Int,as:T.Type)*/
    /*Swift.(file).UnsafeRawPointer.load(fromByteOffset:Int,as:T.Type)*/
    UnsafeRawPointer.prototype.loadFromByteOffsetAs = function ($info, offset, type) {
    };
    /*Swift.(file).UnsafeRawPointer.hashValue*/ /*
    hashValue$get() {
    return this.hashValue
    }
    get hashValue() { return this.hashValue$get() }*/ ;
    /*Swift.(file).UnsafeRawPointer.init(_:AutoreleasingUnsafeMutablePointer<T>)*/
    /*Swift.(file).UnsafeRawPointer.init(_:AutoreleasingUnsafeMutablePointer<T>)*/
    UnsafeRawPointer.prototype.initAutoreleasingUnsafeMutablePointer = function ($info, other) {
        return other;
    };
    /*Swift.(file).UnsafeRawPointer.init(_:AutoreleasingUnsafeMutablePointer<T>?)*/
    /*Swift.(file).UnsafeRawPointer.init(_:AutoreleasingUnsafeMutablePointer<T>?)*/
    UnsafeRawPointer.prototype.initOptional = function ($info, other) {
        return other;
    };
    /*Swift.(file).UnsafeRawPointer.advanced(by:Int)*/
    /*Swift.(file).Strideable.advanced(by:Self.Stride)*/
    UnsafeRawPointer.prototype.advancedBy = function ($info, n) {
    };
    /*Swift.(file).UnsafeRawPointer.summary*/ /*
    summary$get() {
    return this.summary
    }
    get summary() { return this.summary$get() }*/ ;
    /*Swift.(file).UnsafeRawPointer.customPlaygroundQuickLook*/ /*
    customPlaygroundQuickLook$get() {
    return this.customPlaygroundQuickLook
    }
    get customPlaygroundQuickLook() { return this.customPlaygroundQuickLook$get() }*/ ;
    UnsafeRawPointer.$struct = true;
    UnsafeRawPointer.$infoAddress = '0x7fb85515c508';
    return UnsafeRawPointer;
}());
if (typeof _Pointer$implementation != 'undefined')
    _mixin(UnsafeRawPointer, _Pointer$implementation, false);
if (typeof Strideable$implementation != 'undefined')
    _mixin(UnsafeRawPointer, Strideable$implementation, false);
if (typeof _CustomPlaygroundQuickLookable$implementation != 'undefined')
    _mixin(UnsafeRawPointer, _CustomPlaygroundQuickLookable$implementation, false);
var UnsafeMutableRawPointer = /** @class */ (function () {
    function UnsafeMutableRawPointer() {
    }
    /*Swift.(file).UnsafeMutableRawPointer.init(_:RawPointer)*/
    /*Swift.(file)._Pointer.init(_:RawPointer)*/
    UnsafeMutableRawPointer.prototype.initRawPointer = function ($info, _rawValue) {
        return _rawValue;
    };
    /*Swift.(file).UnsafeMutableRawPointer.init(_:UnsafeMutablePointer<T>)*/
    /*Swift.(file).UnsafeMutableRawPointer.init(_:UnsafeMutablePointer<T>)*/
    UnsafeMutableRawPointer.prototype.initUnsafeMutablePointer = function ($info, other) {
        return other;
    };
    /*Swift.(file).UnsafeMutableRawPointer.init(_:UnsafeMutablePointer<T>?)*/
    /*Swift.(file).UnsafeMutableRawPointer.init(_:UnsafeMutablePointer<T>?)*/
    UnsafeMutableRawPointer.prototype.initOptional = function ($info, other) {
        return other;
    };
    /*Swift.(file).UnsafeMutableRawPointer.init(mutating:UnsafeRawPointer)*/
    /*Swift.(file).UnsafeMutableRawPointer.init(mutating:UnsafeRawPointer)*/
    UnsafeMutableRawPointer.prototype.initMutatingUnsafeRawPointer = function ($info, other) {
        return other;
    };
    /*Swift.(file).UnsafeMutableRawPointer.init(mutating:UnsafeRawPointer?)*/
    /*Swift.(file).UnsafeMutableRawPointer.init(mutating:UnsafeRawPointer?)*/
    UnsafeMutableRawPointer.prototype.initMutatingOptional = function ($info, other) {
        return other;
    };
    /*Swift.(file).UnsafeMutableRawPointer.allocate(byteCount:Int,alignment:Int)*/
    /*Swift.(file).UnsafeMutableRawPointer.allocate(byteCount:Int,alignment:Int)*/
    UnsafeMutableRawPointer.allocateByteCountAlignment = function ($info, byteCount, alignment) {
    };
    /*Swift.(file).UnsafeMutableRawPointer.deallocate()*/
    /*Swift.(file).UnsafeMutableRawPointer.deallocate()*/
    UnsafeMutableRawPointer.prototype.deallocate = function ($info) {
    };
    /*Swift.(file).UnsafeMutableRawPointer.bindMemory(to:T.Type,capacity:Int)*/
    /*Swift.(file).UnsafeMutableRawPointer.bindMemory(to:T.Type,capacity:Int)*/
    UnsafeMutableRawPointer.prototype.bindMemoryToCapacity = function ($info, type, count) {
    };
    /*Swift.(file).UnsafeMutableRawPointer.assumingMemoryBound(to:T.Type)*/
    /*Swift.(file).UnsafeMutableRawPointer.assumingMemoryBound(to:T.Type)*/
    UnsafeMutableRawPointer.prototype.assumingMemoryBoundTo = function ($info, to) {
    };
    /*Swift.(file).UnsafeMutableRawPointer.initializeMemory(as:T.Type,repeating:T,count:Int)*/
    /*Swift.(file).UnsafeMutableRawPointer.initializeMemory(as:T.Type,repeating:T,count:Int)*/
    UnsafeMutableRawPointer.prototype.initializeMemoryAsRepeatingCount = function ($info, type, repeatedValue, count) {
    };
    /*Swift.(file).UnsafeMutableRawPointer.initializeMemory(as:T.Type,from:UnsafePointer<T>,count:Int)*/
    /*Swift.(file).UnsafeMutableRawPointer.initializeMemory(as:T.Type,from:UnsafePointer<T>,count:Int)*/
    UnsafeMutableRawPointer.prototype.initializeMemoryAsFromCount = function ($info, type, source, count) {
    };
    /*Swift.(file).UnsafeMutableRawPointer.moveInitializeMemory(as:T.Type,from:UnsafeMutablePointer<T>,count:Int)*/
    /*Swift.(file).UnsafeMutableRawPointer.moveInitializeMemory(as:T.Type,from:UnsafeMutablePointer<T>,count:Int)*/
    UnsafeMutableRawPointer.prototype.moveInitializeMemoryAsFromCount = function ($info, type, source, count) {
    };
    /*Swift.(file).UnsafeMutableRawPointer.load(fromByteOffset:Int,as:T.Type)*/
    /*Swift.(file).UnsafeMutableRawPointer.load(fromByteOffset:Int,as:T.Type)*/
    UnsafeMutableRawPointer.prototype.loadFromByteOffsetAs = function ($info, offset, type) {
    };
    /*Swift.(file).UnsafeMutableRawPointer.storeBytes(of:T,toByteOffset:Int,as:T.Type)*/
    /*Swift.(file).UnsafeMutableRawPointer.storeBytes(of:T,toByteOffset:Int,as:T.Type)*/
    UnsafeMutableRawPointer.prototype.storeBytesOfToByteOffsetAs = function ($info, value, offset, type) {
    };
    /*Swift.(file).UnsafeMutableRawPointer.copyMemory(from:UnsafeRawPointer,byteCount:Int)*/
    /*Swift.(file).UnsafeMutableRawPointer.copyMemory(from:UnsafeRawPointer,byteCount:Int)*/
    UnsafeMutableRawPointer.prototype.copyMemoryFromByteCount = function ($info, source, byteCount) {
    };
    /*Swift.(file).UnsafeMutableRawPointer.hashValue*/ /*
    hashValue$get() {
    return this.hashValue
    }
    get hashValue() { return this.hashValue$get() }*/ ;
    /*Swift.(file).UnsafeMutableRawPointer.init(_:AutoreleasingUnsafeMutablePointer<T>)*/
    /*Swift.(file).UnsafeMutableRawPointer.init(_:AutoreleasingUnsafeMutablePointer<T>)*/
    UnsafeMutableRawPointer.prototype.initAutoreleasingUnsafeMutablePointer = function ($info, other) {
        return other;
    };
    /*Swift.(file).UnsafeMutableRawPointer.init(_:AutoreleasingUnsafeMutablePointer<T>?)*/
    /*Swift.(file).UnsafeMutableRawPointer.init(_:AutoreleasingUnsafeMutablePointer<T>?)*/
    UnsafeMutableRawPointer.prototype.initOptional = function ($info, other) {
        return other;
    };
    /*Swift.(file).UnsafeMutableRawPointer.advanced(by:Int)*/
    /*Swift.(file).Strideable.advanced(by:Self.Stride)*/
    UnsafeMutableRawPointer.prototype.advancedBy = function ($info, n) {
    };
    /*Swift.(file).UnsafeMutableRawPointer.init(_:UnsafeRawPointer)*/
    /*Swift.(file).UnsafeMutableRawPointer.init(_:UnsafeRawPointer)*/
    UnsafeMutableRawPointer.prototype.initUnsafeRawPointer = function ($info, from) {
        return from;
    };
    /*Swift.(file).UnsafeMutableRawPointer.init(_:UnsafeRawPointer?)*/
    /*Swift.(file).UnsafeMutableRawPointer.init(_:UnsafeRawPointer?)*/
    UnsafeMutableRawPointer.prototype.initOptional = function ($info, from) {
        return from;
    };
    /*Swift.(file).UnsafeMutableRawPointer.init(_:UnsafePointer<T>)*/
    /*Swift.(file).UnsafeMutableRawPointer.init(_:UnsafePointer<T>)*/
    UnsafeMutableRawPointer.prototype.initUnsafePointer = function ($info, from) {
        return from;
    };
    /*Swift.(file).UnsafeMutableRawPointer.init(_:UnsafePointer<T>?)*/
    /*Swift.(file).UnsafeMutableRawPointer.init(_:UnsafePointer<T>?)*/
    UnsafeMutableRawPointer.prototype.initOptional = function ($info, from) {
        return from;
    };
    /*Swift.(file).UnsafeMutableRawPointer.summary*/ /*
    summary$get() {
    return this.summary
    }
    get summary() { return this.summary$get() }*/ ;
    /*Swift.(file).UnsafeMutableRawPointer.customPlaygroundQuickLook*/ /*
    customPlaygroundQuickLook$get() {
    return this.customPlaygroundQuickLook
    }
    get customPlaygroundQuickLook() { return this.customPlaygroundQuickLook$get() }*/ ;
    /*Swift.(file).UnsafeMutableRawPointer.allocate(bytes:Int,alignedTo:Int)*/
    /*Swift.(file).UnsafeMutableRawPointer.allocate(bytes:Int,alignedTo:Int)*/
    UnsafeMutableRawPointer.allocateBytesAlignedTo = function ($info, size, alignment) {
    };
    /*Swift.(file).UnsafeMutableRawPointer.deallocate(bytes:Int,alignedTo:Int)*/
    /*Swift.(file).UnsafeMutableRawPointer.deallocate(bytes:Int,alignedTo:Int)*/
    UnsafeMutableRawPointer.prototype.deallocateBytesAlignedTo = function ($info, _, _) {
    };
    /*Swift.(file).UnsafeMutableRawPointer.copyBytes(from:UnsafeRawPointer,count:Int)*/
    /*Swift.(file).UnsafeMutableRawPointer.copyBytes(from:UnsafeRawPointer,count:Int)*/
    UnsafeMutableRawPointer.prototype.copyBytesFromCount = function ($info, source, count) {
    };
    /*Swift.(file).UnsafeMutableRawPointer.initializeMemory(as:T.Type,at:Int,count:Int,to:T)*/
    /*Swift.(file).UnsafeMutableRawPointer.initializeMemory(as:T.Type,at:Int,count:Int,to:T)*/
    UnsafeMutableRawPointer.prototype.initializeMemoryAsAtCountTo = function ($info, type, offset, count, repeatedValue) {
    };
    /*Swift.(file).UnsafeMutableRawPointer.initializeMemory(as:C.Element.Type,from:C)*/
    /*Swift.(file).UnsafeMutableRawPointer.initializeMemory(as:C.Element.Type,from:C)*/
    UnsafeMutableRawPointer.prototype.initializeMemoryAsFrom = function ($info, type, source) {
    };
    UnsafeMutableRawPointer.$struct = true;
    UnsafeMutableRawPointer.$infoAddress = '0x7fb85515c360';
    return UnsafeMutableRawPointer;
}());
if (typeof _Pointer$implementation != 'undefined')
    _mixin(UnsafeMutableRawPointer, _Pointer$implementation, false);
if (typeof Strideable$implementation != 'undefined')
    _mixin(UnsafeMutableRawPointer, Strideable$implementation, false);
if (typeof _CustomPlaygroundQuickLookable$implementation != 'undefined')
    _mixin(UnsafeMutableRawPointer, _CustomPlaygroundQuickLookable$implementation, false);
var Unicode = /** @class */ (function () {
    function Unicode() {
    }
    var _59, _60, _61, _62, _63, _64, _65, _66, _67, _68, _69, _70, _71, _72, _73, _74, _75;
    Unicode.$infoAddress = '0x7fb8518272a8';
    Unicode.Scalar = (_59 = /** @class */ (function () {
            function class_83() {
            }
            /*Swift.(file).Unicode.Scalar.init(_value:UInt32)*/
            /*Swift.(file).Unicode.Scalar.init(_value:UInt32)*/
            class_83.prototype.init_valueUInt32 = function ($info, _value) {
                return _value;
            };
            /*Swift.(file).Scalar.==infix(_:Unicode.Scalar,_:Unicode.Scalar)*/
            /*Swift.(file).Equatable.==infix(_:Self,_:Self)*/
            class_83.infix_61_61 = function ($info, lhs, rhs) {
                return lhs == rhs;
            };
            /*Swift.(file).Scalar.value*/ /*
            value$get() {
            return this.value
            }
            get value() { return this.value$get() }*/ ;
            /*Swift.(file).Scalar.init(_builtinUnicodeScalarLiteral:Int32)*/
            /*Swift.(file)._ExpressibleByBuiltinUnicodeScalarLiteral.init(_builtinUnicodeScalarLiteral:Int32)*/
            class_83.prototype.init_builtinUnicodeScalarLiteralInt32 = function ($info, value) {
                return value;
            };
            /*Swift.(file).Scalar.init(unicodeScalarLiteral:Unicode.Scalar)*/
            /*Swift.(file).ExpressibleByUnicodeScalarLiteral.init(unicodeScalarLiteral:Self.UnicodeScalarLiteralType)*/
            class_83.prototype.initUnicodeScalarLiteral = function ($info, value) {
                return value;
            };
            /*Swift.(file).Scalar.init(_:UInt32)*/
            /*Swift.(file).Scalar.init(_:UInt32)*/
            class_83.prototype.initUInt32 = function ($info, v) {
                return v;
            };
            /*Swift.(file).Scalar.init(_:UInt16)*/
            /*Swift.(file).Scalar.init(_:UInt16)*/
            class_83.prototype.initUInt16 = function ($info, v) {
                return v;
            };
            /*Swift.(file).Scalar.init(_:UInt8)*/
            /*Swift.(file).Scalar.init(_:UInt8)*/
            class_83.prototype.initUInt8 = function ($info, v) {
                return v;
            };
            /*Swift.(file).Scalar.init(_:Unicode.Scalar)*/
            /*Swift.(file).Scalar.init(_:Unicode.Scalar)*/
            class_83.prototype.initUnicodeScalar = function ($info, v) {
                return v;
            };
            /*Swift.(file).Scalar.escaped(asASCII:Bool)*/
            /*Swift.(file).Scalar.escaped(asASCII:Bool)*/
            class_83.prototype.escapedAsASCII = function ($info, forceASCII) {
            };
            /*Swift.(file).Scalar.isASCII*/ /*
            isASCII$get() {
            return this.isASCII
            }
            get isASCII() { return this.isASCII$get() }*/ ;
            /*Swift.(file).Scalar.description*/ /*
            description$get() {
            return this.description
            }
            get description() { return this.description$get() }*/ ;
            /*Swift.(file).Scalar.debugDescription*/ /*
            debugDescription$get() {
            return this.debugDescription
            }
            get debugDescription() { return this.debugDescription$get() }*/ ;
            /*Swift.(file).Scalar.init(_:String)*/
            /*Swift.(file).LosslessStringConvertible.init(_:String)*/
            class_83.prototype.initString = function ($info, description) {
                return description;
            };
            /*Swift.(file).Scalar.hash(into:Hasher)*/
            /*Swift.(file).Hashable.hash(into:Hasher)*/
            class_83.prototype.hashInto = function ($info, hasher$inout) {
            };
            /*Swift.(file).Scalar.hashValue*/ /*
            hashValue$get() {
            return this.hashValue
            }
            get hashValue() { return this.hashValue$get() }*/ ;
            /*Swift.(file).Scalar.init(_:Int)*/
            /*Swift.(file).Scalar.init(_:Int)*/
            class_83.prototype.initInt = function ($info, v) {
                return v;
            };
            /*Swift.(file).Scalar.<infix(_:Unicode.Scalar,_:Unicode.Scalar)*/
            /*Swift.(file).Comparable.<infix(_:Self,_:Self)*/
            class_83.infix_60 = function ($info, lhs, rhs) {
                return lhs < rhs;
            };
            /*Swift.(file).Scalar.init()*/
            /*Swift.(file).Scalar.init()*/
            class_83.prototype.init = function ($info) {
            };
            /*Swift.(file).Scalar.withUTF16CodeUnits(_:(UnsafeBufferPointer<UInt16>) throws -> Result)*/
            /*Swift.(file).Scalar.withUTF16CodeUnits(_:(UnsafeBufferPointer<UInt16>) throws -> Result)*/
            class_83.prototype.withUTF16CodeUnits = function ($info, body) {
            };
            /*Swift.(file).Scalar.withUTF8CodeUnits(_:(UnsafeBufferPointer<UInt8>) throws -> Result)*/
            /*Swift.(file).Scalar.withUTF8CodeUnits(_:(UnsafeBufferPointer<UInt8>) throws -> Result)*/
            class_83.prototype.withUTF8CodeUnits = function ($info, body) {
            };
            /*Swift.(file).Scalar.customMirror*/ /*
            customMirror$get() {
            return this.customMirror
            }
            get customMirror() { return this.customMirror$get() }*/ ;
            /*Swift.(file).Scalar.customPlaygroundQuickLook*/ /*
            customPlaygroundQuickLook$get() {
            return this.customPlaygroundQuickLook
            }
            get customPlaygroundQuickLook() { return this.customPlaygroundQuickLook$get() }*/ ;
            /*Swift.(file).Scalar.write(to:Target)*/
            /*Swift.(file).TextOutputStreamable.write(to:Target)*/
            class_83.prototype.writeTo = function ($info, target$inout) {
            };
            /*Swift.(file).Scalar.init(_unchecked:UInt32)*/
            /*Swift.(file).Scalar.init(_unchecked:UInt32)*/
            class_83.prototype.init_uncheckedUInt32 = function ($info, value) {
                return value;
            };
            return class_83;
        }()),
        _59.$struct = true,
        _59.$infoAddress = '0x7fb851827500',
        _59.UTF16View = (_60 = /** @class */ (function () {
                function class_84() {
                }
                /*Swift.(file).Scalar.UTF16View.init(value:Unicode.Scalar)*/
                /*Swift.(file).Scalar.UTF16View.init(value:Unicode.Scalar)*/
                class_84.prototype.initValueUnicodeScalar = function ($info, value) {
                    return value;
                };
                /*Swift.(file).Scalar.UTF16View.value*/ /*
                value$get() {
                return this.value
                }
                get value() { return this.value$get() }*/ ;
                /*Swift.(file).UTF16View.startIndex*/ /*
                startIndex$get() {
                return this.startIndex
                }
                get startIndex() { return this.startIndex$get() }*/ ;
                /*Swift.(file).UTF16View.endIndex*/ /*
                endIndex$get() {
                return this.endIndex
                }
                get endIndex() { return this.endIndex$get() }*/ ;
                /*Swift.(file).UTF16View.subscript(_:Int)*/
                /*Swift.(file).RandomAccessCollection.subscript(_:Self.Index)*/
                /*Swift.(file).BidirectionalCollection.subscript(_:Self.Index)*/
                /*Swift.(file).Collection.subscript(_:Self.Index)*/
                class_84.prototype.subscript$get = function ($info, position) {
                    return this[position];
                };
                return class_84;
            }()),
            _60.$struct = true,
            _60.$infoAddress = '0x7fb852b5dda8',
            _60),
        _59.Properties = (_61 = /** @class */ (function () {
                function class_85() {
                }
                /*Swift.(file).Scalar.Properties.init(_:Unicode.Scalar)*/
                /*Swift.(file).Scalar.Properties.init(_:Unicode.Scalar)*/
                class_85.prototype.initUnicodeScalar = function ($info, scalar) {
                    return scalar;
                };
                /*Swift.(file).Scalar.Properties.icuValue*/ /*
                icuValue$get() {
                return this.icuValue
                }
                get icuValue() { return this.icuValue$get() }*/ ;
                /*Swift.(file).Properties.isAlphabetic*/ /*
                isAlphabetic$get() {
                return this.isAlphabetic
                }
                get isAlphabetic() { return this.isAlphabetic$get() }*/ ;
                /*Swift.(file).Properties.isASCIIHexDigit*/ /*
                isASCIIHexDigit$get() {
                return this.isASCIIHexDigit
                }
                get isASCIIHexDigit() { return this.isASCIIHexDigit$get() }*/ ;
                /*Swift.(file).Properties.isBidiControl*/ /*
                isBidiControl$get() {
                return this.isBidiControl
                }
                get isBidiControl() { return this.isBidiControl$get() }*/ ;
                /*Swift.(file).Properties.isBidiMirrored*/ /*
                isBidiMirrored$get() {
                return this.isBidiMirrored
                }
                get isBidiMirrored() { return this.isBidiMirrored$get() }*/ ;
                /*Swift.(file).Properties.isDash*/ /*
                isDash$get() {
                return this.isDash
                }
                get isDash() { return this.isDash$get() }*/ ;
                /*Swift.(file).Properties.isDefaultIgnorableCodePoint*/ /*
                isDefaultIgnorableCodePoint$get() {
                return this.isDefaultIgnorableCodePoint
                }
                get isDefaultIgnorableCodePoint() { return this.isDefaultIgnorableCodePoint$get() }*/ ;
                /*Swift.(file).Properties.isDeprecated*/ /*
                isDeprecated$get() {
                return this.isDeprecated
                }
                get isDeprecated() { return this.isDeprecated$get() }*/ ;
                /*Swift.(file).Properties.isDiacritic*/ /*
                isDiacritic$get() {
                return this.isDiacritic
                }
                get isDiacritic() { return this.isDiacritic$get() }*/ ;
                /*Swift.(file).Properties.isExtender*/ /*
                isExtender$get() {
                return this.isExtender
                }
                get isExtender() { return this.isExtender$get() }*/ ;
                /*Swift.(file).Properties.isFullCompositionExclusion*/ /*
                isFullCompositionExclusion$get() {
                return this.isFullCompositionExclusion
                }
                get isFullCompositionExclusion() { return this.isFullCompositionExclusion$get() }*/ ;
                /*Swift.(file).Properties.isGraphemeBase*/ /*
                isGraphemeBase$get() {
                return this.isGraphemeBase
                }
                get isGraphemeBase() { return this.isGraphemeBase$get() }*/ ;
                /*Swift.(file).Properties.isGraphemeExtend*/ /*
                isGraphemeExtend$get() {
                return this.isGraphemeExtend
                }
                get isGraphemeExtend() { return this.isGraphemeExtend$get() }*/ ;
                /*Swift.(file).Properties.isHexDigit*/ /*
                isHexDigit$get() {
                return this.isHexDigit
                }
                get isHexDigit() { return this.isHexDigit$get() }*/ ;
                /*Swift.(file).Properties.isIDContinue*/ /*
                isIDContinue$get() {
                return this.isIDContinue
                }
                get isIDContinue() { return this.isIDContinue$get() }*/ ;
                /*Swift.(file).Properties.isIDStart*/ /*
                isIDStart$get() {
                return this.isIDStart
                }
                get isIDStart() { return this.isIDStart$get() }*/ ;
                /*Swift.(file).Properties.isIdeographic*/ /*
                isIdeographic$get() {
                return this.isIdeographic
                }
                get isIdeographic() { return this.isIdeographic$get() }*/ ;
                /*Swift.(file).Properties.isIDSBinaryOperator*/ /*
                isIDSBinaryOperator$get() {
                return this.isIDSBinaryOperator
                }
                get isIDSBinaryOperator() { return this.isIDSBinaryOperator$get() }*/ ;
                /*Swift.(file).Properties.isIDSTrinaryOperator*/ /*
                isIDSTrinaryOperator$get() {
                return this.isIDSTrinaryOperator
                }
                get isIDSTrinaryOperator() { return this.isIDSTrinaryOperator$get() }*/ ;
                /*Swift.(file).Properties.isJoinControl*/ /*
                isJoinControl$get() {
                return this.isJoinControl
                }
                get isJoinControl() { return this.isJoinControl$get() }*/ ;
                /*Swift.(file).Properties.isLogicalOrderException*/ /*
                isLogicalOrderException$get() {
                return this.isLogicalOrderException
                }
                get isLogicalOrderException() { return this.isLogicalOrderException$get() }*/ ;
                /*Swift.(file).Properties.isLowercase*/ /*
                isLowercase$get() {
                return this.isLowercase
                }
                get isLowercase() { return this.isLowercase$get() }*/ ;
                /*Swift.(file).Properties.isMath*/ /*
                isMath$get() {
                return this.isMath
                }
                get isMath() { return this.isMath$get() }*/ ;
                /*Swift.(file).Properties.isNoncharacterCodePoint*/ /*
                isNoncharacterCodePoint$get() {
                return this.isNoncharacterCodePoint
                }
                get isNoncharacterCodePoint() { return this.isNoncharacterCodePoint$get() }*/ ;
                /*Swift.(file).Properties.isQuotationMark*/ /*
                isQuotationMark$get() {
                return this.isQuotationMark
                }
                get isQuotationMark() { return this.isQuotationMark$get() }*/ ;
                /*Swift.(file).Properties.isRadical*/ /*
                isRadical$get() {
                return this.isRadical
                }
                get isRadical() { return this.isRadical$get() }*/ ;
                /*Swift.(file).Properties.isSoftDotted*/ /*
                isSoftDotted$get() {
                return this.isSoftDotted
                }
                get isSoftDotted() { return this.isSoftDotted$get() }*/ ;
                /*Swift.(file).Properties.isTerminalPunctuation*/ /*
                isTerminalPunctuation$get() {
                return this.isTerminalPunctuation
                }
                get isTerminalPunctuation() { return this.isTerminalPunctuation$get() }*/ ;
                /*Swift.(file).Properties.isUnifiedIdeograph*/ /*
                isUnifiedIdeograph$get() {
                return this.isUnifiedIdeograph
                }
                get isUnifiedIdeograph() { return this.isUnifiedIdeograph$get() }*/ ;
                /*Swift.(file).Properties.isUppercase*/ /*
                isUppercase$get() {
                return this.isUppercase
                }
                get isUppercase() { return this.isUppercase$get() }*/ ;
                /*Swift.(file).Properties.isWhitespace*/ /*
                isWhitespace$get() {
                return this.isWhitespace
                }
                get isWhitespace() { return this.isWhitespace$get() }*/ ;
                /*Swift.(file).Properties.isXIDContinue*/ /*
                isXIDContinue$get() {
                return this.isXIDContinue
                }
                get isXIDContinue() { return this.isXIDContinue$get() }*/ ;
                /*Swift.(file).Properties.isXIDStart*/ /*
                isXIDStart$get() {
                return this.isXIDStart
                }
                get isXIDStart() { return this.isXIDStart$get() }*/ ;
                /*Swift.(file).Properties.isSentenceTerminal*/ /*
                isSentenceTerminal$get() {
                return this.isSentenceTerminal
                }
                get isSentenceTerminal() { return this.isSentenceTerminal$get() }*/ ;
                /*Swift.(file).Properties.isVariationSelector*/ /*
                isVariationSelector$get() {
                return this.isVariationSelector
                }
                get isVariationSelector() { return this.isVariationSelector$get() }*/ ;
                /*Swift.(file).Properties.isPatternSyntax*/ /*
                isPatternSyntax$get() {
                return this.isPatternSyntax
                }
                get isPatternSyntax() { return this.isPatternSyntax$get() }*/ ;
                /*Swift.(file).Properties.isPatternWhitespace*/ /*
                isPatternWhitespace$get() {
                return this.isPatternWhitespace
                }
                get isPatternWhitespace() { return this.isPatternWhitespace$get() }*/ ;
                /*Swift.(file).Properties.isCased*/ /*
                isCased$get() {
                return this.isCased
                }
                get isCased() { return this.isCased$get() }*/ ;
                /*Swift.(file).Properties.isCaseIgnorable*/ /*
                isCaseIgnorable$get() {
                return this.isCaseIgnorable
                }
                get isCaseIgnorable() { return this.isCaseIgnorable$get() }*/ ;
                /*Swift.(file).Properties.changesWhenLowercased*/ /*
                changesWhenLowercased$get() {
                return this.changesWhenLowercased
                }
                get changesWhenLowercased() { return this.changesWhenLowercased$get() }*/ ;
                /*Swift.(file).Properties.changesWhenUppercased*/ /*
                changesWhenUppercased$get() {
                return this.changesWhenUppercased
                }
                get changesWhenUppercased() { return this.changesWhenUppercased$get() }*/ ;
                /*Swift.(file).Properties.changesWhenTitlecased*/ /*
                changesWhenTitlecased$get() {
                return this.changesWhenTitlecased
                }
                get changesWhenTitlecased() { return this.changesWhenTitlecased$get() }*/ ;
                /*Swift.(file).Properties.changesWhenCaseFolded*/ /*
                changesWhenCaseFolded$get() {
                return this.changesWhenCaseFolded
                }
                get changesWhenCaseFolded() { return this.changesWhenCaseFolded$get() }*/ ;
                /*Swift.(file).Properties.changesWhenCaseMapped*/ /*
                changesWhenCaseMapped$get() {
                return this.changesWhenCaseMapped
                }
                get changesWhenCaseMapped() { return this.changesWhenCaseMapped$get() }*/ ;
                /*Swift.(file).Properties.changesWhenNFKCCaseFolded*/ /*
                changesWhenNFKCCaseFolded$get() {
                return this.changesWhenNFKCCaseFolded
                }
                get changesWhenNFKCCaseFolded() { return this.changesWhenNFKCCaseFolded$get() }*/ ;
                /*Swift.(file).Properties.isEmoji*/ /*
                isEmoji$get() {
                return this.isEmoji
                }
                get isEmoji() { return this.isEmoji$get() }*/ ;
                /*Swift.(file).Properties.isEmojiPresentation*/ /*
                isEmojiPresentation$get() {
                return this.isEmojiPresentation
                }
                get isEmojiPresentation() { return this.isEmojiPresentation$get() }*/ ;
                /*Swift.(file).Properties.isEmojiModifier*/ /*
                isEmojiModifier$get() {
                return this.isEmojiModifier
                }
                get isEmojiModifier() { return this.isEmojiModifier$get() }*/ ;
                /*Swift.(file).Properties.isEmojiModifierBase*/ /*
                isEmojiModifierBase$get() {
                return this.isEmojiModifierBase
                }
                get isEmojiModifierBase() { return this.isEmojiModifierBase$get() }*/ ;
                /*Swift.(file).Properties.lowercaseMapping*/ /*
                lowercaseMapping$get() {
                return this.lowercaseMapping
                }
                get lowercaseMapping() { return this.lowercaseMapping$get() }*/ ;
                /*Swift.(file).Properties.titlecaseMapping*/ /*
                titlecaseMapping$get() {
                return this.titlecaseMapping
                }
                get titlecaseMapping() { return this.titlecaseMapping$get() }*/ ;
                /*Swift.(file).Properties.uppercaseMapping*/ /*
                uppercaseMapping$get() {
                return this.uppercaseMapping
                }
                get uppercaseMapping() { return this.uppercaseMapping$get() }*/ ;
                /*Swift.(file).Properties.age*/ /*
                age$get() {
                return this.age
                }
                get age() { return this.age$get() }*/ ;
                /*Swift.(file).Properties.generalCategory*/ /*
                generalCategory$get() {
                return this.generalCategory
                }
                get generalCategory() { return this.generalCategory$get() }*/ ;
                /*Swift.(file).Properties.nameAlias*/ /*
                nameAlias$get() {
                return this.nameAlias
                }
                get nameAlias() { return this.nameAlias$get() }*/ ;
                /*Swift.(file).Properties.canonicalCombiningClass*/ /*
                canonicalCombiningClass$get() {
                return this.canonicalCombiningClass
                }
                get canonicalCombiningClass() { return this.canonicalCombiningClass$get() }*/ ;
                /*Swift.(file).Properties.numericType*/ /*
                numericType$get() {
                return this.numericType
                }
                get numericType() { return this.numericType$get() }*/ ;
                /*Swift.(file).Properties.numericValue*/ /*
                numericValue$get() {
                return this.numericValue
                }
                get numericValue() { return this.numericValue$get() }*/ ;
                return class_85;
            }()),
            _61.$struct = true,
            _61.$infoAddress = '0x7fb8512a99b0',
            _61),
        _59);
    Unicode.GeneralCategory = (_62 = /** @class */ (function () {
            function class_86() {
            }
            Object.defineProperty(class_86, "uppercaseLetter", {
                get: function () { return Object.assign(new Unicode.GeneralCategory(), __assign({ rawValue: "uppercaseLetter" }, Array.from(arguments).slice(1))); },
                enumerable: true,
                configurable: true
            });
            Object.defineProperty(class_86, "lowercaseLetter", {
                get: function () { return Object.assign(new Unicode.GeneralCategory(), __assign({ rawValue: "lowercaseLetter" }, Array.from(arguments).slice(1))); },
                enumerable: true,
                configurable: true
            });
            Object.defineProperty(class_86, "titlecaseLetter", {
                get: function () { return Object.assign(new Unicode.GeneralCategory(), __assign({ rawValue: "titlecaseLetter" }, Array.from(arguments).slice(1))); },
                enumerable: true,
                configurable: true
            });
            Object.defineProperty(class_86, "modifierLetter", {
                get: function () { return Object.assign(new Unicode.GeneralCategory(), __assign({ rawValue: "modifierLetter" }, Array.from(arguments).slice(1))); },
                enumerable: true,
                configurable: true
            });
            Object.defineProperty(class_86, "otherLetter", {
                get: function () { return Object.assign(new Unicode.GeneralCategory(), __assign({ rawValue: "otherLetter" }, Array.from(arguments).slice(1))); },
                enumerable: true,
                configurable: true
            });
            Object.defineProperty(class_86, "nonspacingMark", {
                get: function () { return Object.assign(new Unicode.GeneralCategory(), __assign({ rawValue: "nonspacingMark" }, Array.from(arguments).slice(1))); },
                enumerable: true,
                configurable: true
            });
            Object.defineProperty(class_86, "spacingMark", {
                get: function () { return Object.assign(new Unicode.GeneralCategory(), __assign({ rawValue: "spacingMark" }, Array.from(arguments).slice(1))); },
                enumerable: true,
                configurable: true
            });
            Object.defineProperty(class_86, "enclosingMark", {
                get: function () { return Object.assign(new Unicode.GeneralCategory(), __assign({ rawValue: "enclosingMark" }, Array.from(arguments).slice(1))); },
                enumerable: true,
                configurable: true
            });
            Object.defineProperty(class_86, "decimalNumber", {
                get: function () { return Object.assign(new Unicode.GeneralCategory(), __assign({ rawValue: "decimalNumber" }, Array.from(arguments).slice(1))); },
                enumerable: true,
                configurable: true
            });
            Object.defineProperty(class_86, "letterNumber", {
                get: function () { return Object.assign(new Unicode.GeneralCategory(), __assign({ rawValue: "letterNumber" }, Array.from(arguments).slice(1))); },
                enumerable: true,
                configurable: true
            });
            Object.defineProperty(class_86, "otherNumber", {
                get: function () { return Object.assign(new Unicode.GeneralCategory(), __assign({ rawValue: "otherNumber" }, Array.from(arguments).slice(1))); },
                enumerable: true,
                configurable: true
            });
            Object.defineProperty(class_86, "connectorPunctuation", {
                get: function () { return Object.assign(new Unicode.GeneralCategory(), __assign({ rawValue: "connectorPunctuation" }, Array.from(arguments).slice(1))); },
                enumerable: true,
                configurable: true
            });
            Object.defineProperty(class_86, "dashPunctuation", {
                get: function () { return Object.assign(new Unicode.GeneralCategory(), __assign({ rawValue: "dashPunctuation" }, Array.from(arguments).slice(1))); },
                enumerable: true,
                configurable: true
            });
            Object.defineProperty(class_86, "openPunctuation", {
                get: function () { return Object.assign(new Unicode.GeneralCategory(), __assign({ rawValue: "openPunctuation" }, Array.from(arguments).slice(1))); },
                enumerable: true,
                configurable: true
            });
            Object.defineProperty(class_86, "closePunctuation", {
                get: function () { return Object.assign(new Unicode.GeneralCategory(), __assign({ rawValue: "closePunctuation" }, Array.from(arguments).slice(1))); },
                enumerable: true,
                configurable: true
            });
            Object.defineProperty(class_86, "initialPunctuation", {
                get: function () { return Object.assign(new Unicode.GeneralCategory(), __assign({ rawValue: "initialPunctuation" }, Array.from(arguments).slice(1))); },
                enumerable: true,
                configurable: true
            });
            Object.defineProperty(class_86, "finalPunctuation", {
                get: function () { return Object.assign(new Unicode.GeneralCategory(), __assign({ rawValue: "finalPunctuation" }, Array.from(arguments).slice(1))); },
                enumerable: true,
                configurable: true
            });
            Object.defineProperty(class_86, "otherPunctuation", {
                get: function () { return Object.assign(new Unicode.GeneralCategory(), __assign({ rawValue: "otherPunctuation" }, Array.from(arguments).slice(1))); },
                enumerable: true,
                configurable: true
            });
            Object.defineProperty(class_86, "mathSymbol", {
                get: function () { return Object.assign(new Unicode.GeneralCategory(), __assign({ rawValue: "mathSymbol" }, Array.from(arguments).slice(1))); },
                enumerable: true,
                configurable: true
            });
            Object.defineProperty(class_86, "currencySymbol", {
                get: function () { return Object.assign(new Unicode.GeneralCategory(), __assign({ rawValue: "currencySymbol" }, Array.from(arguments).slice(1))); },
                enumerable: true,
                configurable: true
            });
            Object.defineProperty(class_86, "modifierSymbol", {
                get: function () { return Object.assign(new Unicode.GeneralCategory(), __assign({ rawValue: "modifierSymbol" }, Array.from(arguments).slice(1))); },
                enumerable: true,
                configurable: true
            });
            Object.defineProperty(class_86, "otherSymbol", {
                get: function () { return Object.assign(new Unicode.GeneralCategory(), __assign({ rawValue: "otherSymbol" }, Array.from(arguments).slice(1))); },
                enumerable: true,
                configurable: true
            });
            Object.defineProperty(class_86, "spaceSeparator", {
                get: function () { return Object.assign(new Unicode.GeneralCategory(), __assign({ rawValue: "spaceSeparator" }, Array.from(arguments).slice(1))); },
                enumerable: true,
                configurable: true
            });
            Object.defineProperty(class_86, "lineSeparator", {
                get: function () { return Object.assign(new Unicode.GeneralCategory(), __assign({ rawValue: "lineSeparator" }, Array.from(arguments).slice(1))); },
                enumerable: true,
                configurable: true
            });
            Object.defineProperty(class_86, "paragraphSeparator", {
                get: function () { return Object.assign(new Unicode.GeneralCategory(), __assign({ rawValue: "paragraphSeparator" }, Array.from(arguments).slice(1))); },
                enumerable: true,
                configurable: true
            });
            Object.defineProperty(class_86, "control", {
                get: function () { return Object.assign(new Unicode.GeneralCategory(), __assign({ rawValue: "control" }, Array.from(arguments).slice(1))); },
                enumerable: true,
                configurable: true
            });
            Object.defineProperty(class_86, "format", {
                get: function () { return Object.assign(new Unicode.GeneralCategory(), __assign({ rawValue: "format" }, Array.from(arguments).slice(1))); },
                enumerable: true,
                configurable: true
            });
            Object.defineProperty(class_86, "surrogate", {
                get: function () { return Object.assign(new Unicode.GeneralCategory(), __assign({ rawValue: "surrogate" }, Array.from(arguments).slice(1))); },
                enumerable: true,
                configurable: true
            });
            Object.defineProperty(class_86, "privateUse", {
                get: function () { return Object.assign(new Unicode.GeneralCategory(), __assign({ rawValue: "privateUse" }, Array.from(arguments).slice(1))); },
                enumerable: true,
                configurable: true
            });
            Object.defineProperty(class_86, "unassigned", {
                get: function () { return Object.assign(new Unicode.GeneralCategory(), __assign({ rawValue: "unassigned" }, Array.from(arguments).slice(1))); },
                enumerable: true,
                configurable: true
            });
            /*Swift.(file).Unicode.GeneralCategory.init(rawValue:__swift_stdlib_UCharCategory)*/
            /*Swift.(file).Unicode.GeneralCategory.init(rawValue:__swift_stdlib_UCharCategory)*/
            class_86.prototype.initRawValue__swift_stdlib_UCharCategory = function ($info, rawValue) {
                return rawValue;
            };
            /*Swift.(file).Unicode.GeneralCategory.==(_:Unicode.GeneralCategory,_:Unicode.GeneralCategory)*/
            /*Swift.(file).Equatable.==infix(_:Self,_:Self)*/
            class_86.infix_61_61 = function ($info, a, b) {
                return a == b;
            };
            /*Swift.(file).Unicode.GeneralCategory.hashValue*/ /*
            hashValue$get() {
            return this.hashValue
            }
            get hashValue() { return this.hashValue$get() }*/ ;
            /*Swift.(file).Unicode.GeneralCategory.hash(into:Hasher)*/
            /*Swift.(file).Hashable.hash(into:Hasher)*/
            class_86.prototype.hashInto = function ($info, hasher$inout) {
            };
            return class_86;
        }()),
        _62.$infoAddress = '0x7fb854806df8',
        _62);
    Unicode.CanonicalCombiningClass = (_63 = /** @class */ (function () {
            function class_87() {
            }
            /*Swift.(file).Unicode.CanonicalCombiningClass.overlay*/ /*
            static readonly overlay$get() {
            return this.overlay
            }
            static readonly get overlay() { return this.overlay$get() }*/ ;
            /*Swift.(file).Unicode.CanonicalCombiningClass.nukta*/ /*
            static readonly nukta$get() {
            return this.nukta
            }
            static readonly get nukta() { return this.nukta$get() }*/ ;
            /*Swift.(file).Unicode.CanonicalCombiningClass.kanaVoicing*/ /*
            static readonly kanaVoicing$get() {
            return this.kanaVoicing
            }
            static readonly get kanaVoicing() { return this.kanaVoicing$get() }*/ ;
            /*Swift.(file).Unicode.CanonicalCombiningClass.virama*/ /*
            static readonly virama$get() {
            return this.virama
            }
            static readonly get virama() { return this.virama$get() }*/ ;
            /*Swift.(file).Unicode.CanonicalCombiningClass.attachedBelowLeft*/ /*
            static readonly attachedBelowLeft$get() {
            return this.attachedBelowLeft
            }
            static readonly get attachedBelowLeft() { return this.attachedBelowLeft$get() }*/ ;
            /*Swift.(file).Unicode.CanonicalCombiningClass.attachedBelow*/ /*
            static readonly attachedBelow$get() {
            return this.attachedBelow
            }
            static readonly get attachedBelow() { return this.attachedBelow$get() }*/ ;
            /*Swift.(file).Unicode.CanonicalCombiningClass.attachedAbove*/ /*
            static readonly attachedAbove$get() {
            return this.attachedAbove
            }
            static readonly get attachedAbove() { return this.attachedAbove$get() }*/ ;
            /*Swift.(file).Unicode.CanonicalCombiningClass.attachedAboveRight*/ /*
            static readonly attachedAboveRight$get() {
            return this.attachedAboveRight
            }
            static readonly get attachedAboveRight() { return this.attachedAboveRight$get() }*/ ;
            /*Swift.(file).Unicode.CanonicalCombiningClass.belowLeft*/ /*
            static readonly belowLeft$get() {
            return this.belowLeft
            }
            static readonly get belowLeft() { return this.belowLeft$get() }*/ ;
            /*Swift.(file).Unicode.CanonicalCombiningClass.below*/ /*
            static readonly below$get() {
            return this.below
            }
            static readonly get below() { return this.below$get() }*/ ;
            /*Swift.(file).Unicode.CanonicalCombiningClass.belowRight*/ /*
            static readonly belowRight$get() {
            return this.belowRight
            }
            static readonly get belowRight() { return this.belowRight$get() }*/ ;
            /*Swift.(file).Unicode.CanonicalCombiningClass.left*/ /*
            static readonly left$get() {
            return this.left
            }
            static readonly get left() { return this.left$get() }*/ ;
            /*Swift.(file).Unicode.CanonicalCombiningClass.right*/ /*
            static readonly right$get() {
            return this.right
            }
            static readonly get right() { return this.right$get() }*/ ;
            /*Swift.(file).Unicode.CanonicalCombiningClass.aboveLeft*/ /*
            static readonly aboveLeft$get() {
            return this.aboveLeft
            }
            static readonly get aboveLeft() { return this.aboveLeft$get() }*/ ;
            /*Swift.(file).Unicode.CanonicalCombiningClass.above*/ /*
            static readonly above$get() {
            return this.above
            }
            static readonly get above() { return this.above$get() }*/ ;
            /*Swift.(file).Unicode.CanonicalCombiningClass.aboveRight*/ /*
            static readonly aboveRight$get() {
            return this.aboveRight
            }
            static readonly get aboveRight() { return this.aboveRight$get() }*/ ;
            /*Swift.(file).Unicode.CanonicalCombiningClass.doubleBelow*/ /*
            static readonly doubleBelow$get() {
            return this.doubleBelow
            }
            static readonly get doubleBelow() { return this.doubleBelow$get() }*/ ;
            /*Swift.(file).Unicode.CanonicalCombiningClass.doubleAbove*/ /*
            static readonly doubleAbove$get() {
            return this.doubleAbove
            }
            static readonly get doubleAbove() { return this.doubleAbove$get() }*/ ;
            /*Swift.(file).Unicode.CanonicalCombiningClass.iotaSubscript*/ /*
            static readonly iotaSubscript$get() {
            return this.iotaSubscript
            }
            static readonly get iotaSubscript() { return this.iotaSubscript$get() }*/ ;
            /*Swift.(file).Unicode.CanonicalCombiningClass.rawValue*/ /*
            readonly rawValue$get() {
            return this.rawValue
            }
            readonly get rawValue() { return this.rawValue$get() }*/ ;
            /*Swift.(file).Unicode.CanonicalCombiningClass.init(rawValue:UInt8)*/
            /*Swift.(file).RawRepresentable.init(rawValue:Self.RawValue)*/
            class_87.prototype.initRawValue = function ($info, rawValue) {
                return rawValue;
            };
            /*Swift.(file).Unicode.CanonicalCombiningClass.==infix(_:Unicode.CanonicalCombiningClass,_:Unicode.CanonicalCombiningClass)*/
            /*Swift.(file).Equatable.==infix(_:Self,_:Self)*/
            class_87.infix_61_61 = function ($info, lhs, rhs) {
                return lhs == rhs;
            };
            /*Swift.(file).Unicode.CanonicalCombiningClass.<infix(_:Unicode.CanonicalCombiningClass,_:Unicode.CanonicalCombiningClass)*/
            /*Swift.(file).Comparable.<infix(_:Self,_:Self)*/
            class_87.infix_60 = function ($info, lhs, rhs) {
                return lhs < rhs;
            };
            /*Swift.(file).Unicode.CanonicalCombiningClass.hashValue*/ /*
            hashValue$get() {
            return this.hashValue
            }
            get hashValue() { return this.hashValue$get() }*/ ;
            /*Swift.(file).Unicode.CanonicalCombiningClass.hash(into:Hasher)*/
            /*Swift.(file).Hashable.hash(into:Hasher)*/
            class_87.prototype.hashInto = function ($info, hasher$inout) {
            };
            return class_87;
        }()),
        _63.$struct = true,
        _63.$infoAddress = '0x7fb8548072d8',
        _63);
    Unicode.NumericType = (_64 = /** @class */ (function () {
            function class_88() {
            }
            Object.defineProperty(class_88, "decimal", {
                get: function () { return Object.assign(new Unicode.NumericType(), __assign({ rawValue: "decimal" }, Array.from(arguments).slice(1))); },
                enumerable: true,
                configurable: true
            });
            Object.defineProperty(class_88, "digit", {
                get: function () { return Object.assign(new Unicode.NumericType(), __assign({ rawValue: "digit" }, Array.from(arguments).slice(1))); },
                enumerable: true,
                configurable: true
            });
            Object.defineProperty(class_88, "numeric", {
                get: function () { return Object.assign(new Unicode.NumericType(), __assign({ rawValue: "numeric" }, Array.from(arguments).slice(1))); },
                enumerable: true,
                configurable: true
            });
            /*Swift.(file).Unicode.NumericType.init(rawValue:__swift_stdlib_UNumericType)*/
            /*Swift.(file).Unicode.NumericType.init(rawValue:__swift_stdlib_UNumericType)*/
            class_88.prototype.initRawValue__swift_stdlib_UNumericType = function ($info, rawValue) {
                return rawValue;
            };
            /*Swift.(file).Unicode.NumericType.==(_:Unicode.NumericType,_:Unicode.NumericType)*/
            /*Swift.(file).Equatable.==infix(_:Self,_:Self)*/
            class_88.infix_61_61 = function ($info, a, b) {
                return a == b;
            };
            /*Swift.(file).Unicode.NumericType.hashValue*/ /*
            hashValue$get() {
            return this.hashValue
            }
            get hashValue() { return this.hashValue$get() }*/ ;
            /*Swift.(file).Unicode.NumericType.hash(into:Hasher)*/
            /*Swift.(file).Hashable.hash(into:Hasher)*/
            class_88.prototype.hashInto = function ($info, hasher$inout) {
            };
            return class_88;
        }()),
        _64.$infoAddress = '0x7fb854807e68',
        _64);
    Unicode.UTF32 = (_65 = /** @class */ (function () {
            function class_89() {
            }
            Object.defineProperty(class_89, "_swift3Codec", {
                get: function () { return Object.assign(new Unicode.UTF32(), __assign({ rawValue: "_swift3Codec" }, Array.from(arguments).slice(1))); },
                enumerable: true,
                configurable: true
            });
            /*Swift.(file).Unicode.UTF32.==(_:Unicode.UTF32,_:Unicode.UTF32)*/
            /*Swift.(file).Equatable.==infix(_:Self,_:Self)*/
            class_89.infix_61_61 = function ($info, a, b) {
                return a == b;
            };
            /*Swift.(file).Unicode.UTF32.hashValue*/ /*
            hashValue$get() {
            return this.hashValue
            }
            get hashValue() { return this.hashValue$get() }*/ ;
            /*Swift.(file).Unicode.UTF32.hash(into:Hasher)*/
            /*Swift.(file).Hashable.hash(into:Hasher)*/
            class_89.prototype.hashInto = function ($info, hasher$inout) {
            };
            /*Swift.(file).UTF32.encodedReplacementCharacter*/ /*
            static encodedReplacementCharacter$get() {
            return this.encodedReplacementCharacter
            }
            static get encodedReplacementCharacter() { return this.encodedReplacementCharacter$get() }*/ ;
            /*Swift.(file).UTF32.decode(_:Unicode.UTF32.EncodedScalar)*/
            /*Swift.(file)._UnicodeEncoding.decode(_:Self.EncodedScalar)*/
            class_89.decode = function ($info, source) {
            };
            /*Swift.(file).UTF32.encode(_:Unicode.Scalar)*/
            /*Swift.(file)._UnicodeEncoding.encode(_:Unicode.Scalar)*/
            class_89.encode = function ($info, source) {
            };
            /*Swift.(file).UTF32.init()*/
            /*Swift.(file).UnicodeCodec.init()*/
            class_89.prototype.init = function ($info) {
            };
            /*Swift.(file).UTF32.decode(_:I)*/
            /*Swift.(file).UnicodeCodec.decode(_:I)*/
            class_89.prototype.decode = function ($info, input$inout) {
            };
            /*Swift.(file).UTF32.encode(_:Unicode.Scalar,into:(Unicode.UTF32.CodeUnit) -> Void)*/
            /*Swift.(file).UnicodeCodec.encode(_:Unicode.Scalar,into:(Self.CodeUnit) -> Void)*/
            class_89.encodeInto = function ($info, input, processCodeUnit) {
            };
            return class_89;
        }()),
        _65.$infoAddress = '0x7fb854808388',
        _65.Parser = (_66 = /** @class */ (function () {
                function class_90() {
                }
                /*Swift.(file).UTF32.Parser.init()*/
                /*Swift.(file)._UnicodeParser.init()*/
                class_90.prototype.init = function ($info) {
                };
                /*Swift.(file).Parser.parseScalar(from:I)*/
                /*Swift.(file)._UnicodeParser.parseScalar(from:I)*/
                class_90.prototype.parseScalarFrom = function ($info, input$inout) {
                };
                return class_90;
            }()),
            _66.$struct = true,
            _66.$infoAddress = '0x7fb8512ae9e0',
            _66),
        _65);
    Unicode.ASCII = (_67 = /** @class */ (function () {
            function class_91() {
            }
            /*Swift.(file).ASCII.decode(_:Unicode.ASCII.EncodedScalar)*/
            /*Swift.(file)._UnicodeEncoding.decode(_:Self.EncodedScalar)*/
            class_91.decode = function ($info, source) {
            };
            /*Swift.(file).ASCII.encode(_:Unicode.Scalar)*/
            /*Swift.(file)._UnicodeEncoding.encode(_:Unicode.Scalar)*/
            class_91.encode = function ($info, source) {
            };
            /*Swift.(file).ASCII.transcode(_:FromEncoding.EncodedScalar,from:FromEncoding.Type)*/
            /*Swift.(file)._UnicodeEncoding.transcode(_:FromEncoding.EncodedScalar,from:FromEncoding.Type)*/
            class_91.transcodeFrom = function ($info, content, _) {
            };
            return class_91;
        }()),
        _67.$infoAddress = '0x7fb8511ed520',
        _67.Parser = (_68 = /** @class */ (function () {
                function class_92() {
                }
                /*Swift.(file).ASCII.Parser.init()*/
                /*Swift.(file)._UnicodeParser.init()*/
                class_92.prototype.init = function ($info) {
                };
                /*Swift.(file).Parser.parseScalar(from:I)*/
                /*Swift.(file)._UnicodeParser.parseScalar(from:I)*/
                class_92.prototype.parseScalarFrom = function ($info, input$inout) {
                };
                return class_92;
            }()),
            _68.$struct = true,
            _68.$infoAddress = '0x7fb8511ee3e8',
            _68),
        _67);
    Unicode.UTF16 = (_69 = /** @class */ (function () {
            function class_93() {
            }
            class_93._swift3Buffer = function () { return Object.assign(new Unicode.UTF16(), __assign({ rawValue: "_swift3Buffer" }, Array.from(arguments).slice(1))); };
            /*Swift.(file).UTF16.encodedReplacementCharacter*/ /*
            static encodedReplacementCharacter$get() {
            return this.encodedReplacementCharacter
            }
            static get encodedReplacementCharacter() { return this.encodedReplacementCharacter$get() }*/ ;
            /*Swift.(file).UTF16.decode(_:Unicode.UTF16.EncodedScalar)*/
            /*Swift.(file)._UnicodeEncoding.decode(_:Self.EncodedScalar)*/
            class_93.decode = function ($info, source) {
            };
            /*Swift.(file).UTF16.encode(_:Unicode.Scalar)*/
            /*Swift.(file)._UnicodeEncoding.encode(_:Unicode.Scalar)*/
            class_93.encode = function ($info, source) {
            };
            /*Swift.(file).UTF16.transcode(_:FromEncoding.EncodedScalar,from:FromEncoding.Type)*/
            /*Swift.(file)._UnicodeEncoding.transcode(_:FromEncoding.EncodedScalar,from:FromEncoding.Type)*/
            class_93.transcodeFrom = function ($info, content, _) {
            };
            /*Swift.(file).UTF16.init()*/
            /*Swift.(file).UnicodeCodec.init()*/
            class_93.prototype.init = function ($info) {
            };
            /*Swift.(file).UTF16.decode(_:I)*/
            /*Swift.(file).UnicodeCodec.decode(_:I)*/
            class_93.prototype.decode = function ($info, input$inout) {
            };
            /*Swift.(file).UTF16.encode(_:Unicode.Scalar,into:(Unicode.UTF16.CodeUnit) -> Void)*/
            /*Swift.(file).UnicodeCodec.encode(_:Unicode.Scalar,into:(Self.CodeUnit) -> Void)*/
            class_93.encodeInto = function ($info, input, processCodeUnit) {
            };
            /*Swift.(file).UTF16.width(_:Unicode.Scalar)*/
            /*Swift.(file).UTF16.width(_:Unicode.Scalar)*/
            class_93.width = function ($info, x) {
            };
            /*Swift.(file).UTF16.leadSurrogate(_:Unicode.Scalar)*/
            /*Swift.(file).UTF16.leadSurrogate(_:Unicode.Scalar)*/
            class_93.leadSurrogate = function ($info, x) {
            };
            /*Swift.(file).UTF16.trailSurrogate(_:Unicode.Scalar)*/
            /*Swift.(file).UTF16.trailSurrogate(_:Unicode.Scalar)*/
            class_93.trailSurrogate = function ($info, x) {
            };
            /*Swift.(file).UTF16.isLeadSurrogate(_:Unicode.UTF16.CodeUnit)*/
            /*Swift.(file).UTF16.isLeadSurrogate(_:Unicode.UTF16.CodeUnit)*/
            class_93.isLeadSurrogate = function ($info, x) {
            };
            /*Swift.(file).UTF16.isTrailSurrogate(_:Unicode.UTF16.CodeUnit)*/
            /*Swift.(file).UTF16.isTrailSurrogate(_:Unicode.UTF16.CodeUnit)*/
            class_93.isTrailSurrogate = function ($info, x) {
            };
            /*Swift.(file).UTF16.transcodedLength(of:Input,decodedAs:Encoding.Type,repairingIllFormedSequences:Bool)*/
            /*Swift.(file).UTF16.transcodedLength(of:Input,decodedAs:Encoding.Type,repairingIllFormedSequences:Bool)*/
            class_93.transcodedLengthOfDecodedAsRepairingIllFormedSequences = function ($info, input, sourceEncoding, repairingIllFormedSequences) {
            };
            return class_93;
        }()),
        _69.$infoAddress = '0x7fb852adc140',
        _69.ForwardParser = (_70 = /** @class */ (function () {
                function class_94() {
                }
                /*Swift.(file).UTF16.ForwardParser.init()*/
                /*Swift.(file)._UnicodeParser.init()*/
                class_94.prototype.init = function ($info) {
                };
                return class_94;
            }()),
            _70.$struct = true,
            _70.$infoAddress = '0x7fb8512ae6b0',
            _70),
        _69.ReverseParser = (_71 = /** @class */ (function () {
                function class_95() {
                }
                /*Swift.(file).UTF16.ReverseParser.init()*/
                /*Swift.(file)._UnicodeParser.init()*/
                class_95.prototype.init = function ($info) {
                };
                return class_95;
            }()),
            _71.$struct = true,
            _71.$infoAddress = '0x7fb8512ae458',
            _71),
        _69);
    Unicode.UTF8 = (_72 = /** @class */ (function () {
            function class_96() {
            }
            class_96._swift3Buffer = function () { return Object.assign(new Unicode.UTF8(), __assign({ rawValue: "_swift3Buffer" }, Array.from(arguments).slice(1))); };
            /*Swift.(file).UTF8.encodedReplacementCharacter*/ /*
            static encodedReplacementCharacter$get() {
            return this.encodedReplacementCharacter
            }
            static get encodedReplacementCharacter() { return this.encodedReplacementCharacter$get() }*/ ;
            /*Swift.(file).UTF8.decode(_:Unicode.UTF8.EncodedScalar)*/
            /*Swift.(file)._UnicodeEncoding.decode(_:Self.EncodedScalar)*/
            class_96.decode = function ($info, source) {
            };
            /*Swift.(file).UTF8.encode(_:Unicode.Scalar)*/
            /*Swift.(file)._UnicodeEncoding.encode(_:Unicode.Scalar)*/
            class_96.encode = function ($info, source) {
            };
            /*Swift.(file).UTF8.transcode(_:FromEncoding.EncodedScalar,from:FromEncoding.Type)*/
            /*Swift.(file)._UnicodeEncoding.transcode(_:FromEncoding.EncodedScalar,from:FromEncoding.Type)*/
            class_96.transcodeFrom = function ($info, content, _) {
            };
            /*Swift.(file).UTF8.init()*/
            /*Swift.(file).UnicodeCodec.init()*/
            class_96.prototype.init = function ($info) {
            };
            /*Swift.(file).UTF8.decode(_:I)*/
            /*Swift.(file).UnicodeCodec.decode(_:I)*/
            class_96.prototype.decode = function ($info, input$inout) {
            };
            /*Swift.(file).UTF8.encode(_:Unicode.Scalar,into:(Unicode.UTF8.CodeUnit) -> Void)*/
            /*Swift.(file).UnicodeCodec.encode(_:Unicode.Scalar,into:(Self.CodeUnit) -> Void)*/
            class_96.encodeInto = function ($info, input, processCodeUnit) {
            };
            /*Swift.(file).UTF8.isContinuation(_:Unicode.UTF8.CodeUnit)*/
            /*Swift.(file).UTF8.isContinuation(_:Unicode.UTF8.CodeUnit)*/
            class_96.isContinuation = function ($info, _byte) {
            };
            return class_96;
        }()),
        _72.$infoAddress = '0x7fb851251868',
        _72.ForwardParser = (_73 = /** @class */ (function () {
                function class_97() {
                }
                /*Swift.(file).UTF8.ForwardParser.init()*/
                /*Swift.(file)._UnicodeParser.init()*/
                class_97.prototype.init = function ($info) {
                };
                return class_97;
            }()),
            _73.$struct = true,
            _73.$infoAddress = '0x7fb8512ae200',
            _73),
        _72.ReverseParser = (_74 = /** @class */ (function () {
                function class_98() {
                }
                /*Swift.(file).UTF8.ReverseParser.init()*/
                /*Swift.(file)._UnicodeParser.init()*/
                class_98.prototype.init = function ($info) {
                };
                return class_98;
            }()),
            _74.$struct = true,
            _74.$infoAddress = '0x7fb8512adfa8',
            _74),
        _72);
    Unicode.ParseResult = (_75 = /** @class */ (function () {
            function class_99() {
            }
            class_99.valid = function () { return Object.assign(new Unicode.ParseResult(), __assign({ rawValue: "valid" }, Array.from(arguments).slice(1))); };
            Object.defineProperty(class_99, "emptyInput", {
                get: function () { return Object.assign(new Unicode.ParseResult(), __assign({ rawValue: "emptyInput" }, Array.from(arguments).slice(1))); },
                enumerable: true,
                configurable: true
            });
            class_99.error = function () { return Object.assign(new Unicode.ParseResult(), __assign({ rawValue: "error" }, Array.from(arguments).slice(1))); };
            return class_99;
        }()),
        _75.$infoAddress = '0x7fb851d2e958',
        _75);
    return Unicode;
}());
if (typeof RandomAccessCollection$implementation != 'undefined')
    _mixin(Unicode.Scalar.UTF16View, RandomAccessCollection$implementation, false);
if (typeof Equatable$implementation != 'undefined')
    _mixin(Unicode.Scalar, Equatable$implementation, false);
if (typeof _ExpressibleByBuiltinUnicodeScalarLiteral$implementation != 'undefined')
    _mixin(Unicode.Scalar, _ExpressibleByBuiltinUnicodeScalarLiteral$implementation, false);
if (typeof ExpressibleByUnicodeScalarLiteral$implementation != 'undefined')
    _mixin(Unicode.Scalar, ExpressibleByUnicodeScalarLiteral$implementation, false);
if (typeof CustomStringConvertible$implementation != 'undefined')
    _mixin(Unicode.Scalar, CustomStringConvertible$implementation, false);
if (typeof CustomDebugStringConvertible$implementation != 'undefined')
    _mixin(Unicode.Scalar, CustomDebugStringConvertible$implementation, false);
if (typeof LosslessStringConvertible$implementation != 'undefined')
    _mixin(Unicode.Scalar, LosslessStringConvertible$implementation, false);
if (typeof Hashable$implementation != 'undefined')
    _mixin(Unicode.Scalar, Hashable$implementation, false);
if (typeof Comparable$implementation != 'undefined')
    _mixin(Unicode.Scalar, Comparable$implementation, false);
if (typeof CustomReflectable$implementation != 'undefined')
    _mixin(Unicode.Scalar, CustomReflectable$implementation, false);
if (typeof _CustomPlaygroundQuickLookable$implementation != 'undefined')
    _mixin(Unicode.Scalar, _CustomPlaygroundQuickLookable$implementation, false);
if (typeof TextOutputStreamable$implementation != 'undefined')
    _mixin(Unicode.Scalar, TextOutputStreamable$implementation, false);
if (typeof Comparable$implementation != 'undefined')
    _mixin(Unicode.CanonicalCombiningClass, Comparable$implementation, false);
if (typeof Hashable$implementation != 'undefined')
    _mixin(Unicode.CanonicalCombiningClass, Hashable$implementation, false);
if (typeof RawRepresentable$implementation != 'undefined')
    _mixin(Unicode.CanonicalCombiningClass, RawRepresentable$implementation, false);
if (typeof Unicode != 'undefined' && typeof Unicode.Parser$implementation != 'undefined')
    _mixin(Unicode.UTF32.Parser, Unicode.Parser$implementation, false);
if (typeof Unicode != 'undefined' && typeof Unicode.Parser$implementation != 'undefined')
    _mixin(Unicode.ASCII.Parser, Unicode.Parser$implementation, false);
if (typeof Unicode != 'undefined' && typeof Unicode.Parser$implementation != 'undefined')
    _mixin(Unicode.UTF16.ForwardParser, Unicode.Parser$implementation, false);
if (typeof _UTFParser$implementation != 'undefined')
    _mixin(Unicode.UTF16.ForwardParser, _UTFParser$implementation, false);
if (typeof Unicode != 'undefined' && typeof Unicode.Parser$implementation != 'undefined')
    _mixin(Unicode.UTF16.ReverseParser, Unicode.Parser$implementation, false);
if (typeof _UTFParser$implementation != 'undefined')
    _mixin(Unicode.UTF16.ReverseParser, _UTFParser$implementation, false);
if (typeof Unicode != 'undefined' && typeof Unicode.Parser$implementation != 'undefined')
    _mixin(Unicode.UTF8.ForwardParser, Unicode.Parser$implementation, false);
if (typeof _UTFParser$implementation != 'undefined')
    _mixin(Unicode.UTF8.ForwardParser, _UTFParser$implementation, false);
if (typeof Unicode != 'undefined' && typeof Unicode.Parser$implementation != 'undefined')
    _mixin(Unicode.UTF8.ReverseParser, Unicode.Parser$implementation, false);
if (typeof _UTFParser$implementation != 'undefined')
    _mixin(Unicode.UTF8.ReverseParser, _UTFParser$implementation, false);
var _ValidUTF8Buffer = /** @class */ (function () {
    function _ValidUTF8Buffer() {
    }
    /*Swift.(file)._ValidUTF8Buffer.init(_biasedBits:UInt32)*/
    /*Swift.(file)._ValidUTF8Buffer.init(_biasedBits:UInt32)*/
    _ValidUTF8Buffer.prototype.init_biasedBitsUInt32 = function ($info, _biasedBits) {
        return _biasedBits;
    };
    /*Swift.(file)._ValidUTF8Buffer.init(_containing:_ValidUTF8Buffer.Element)*/
    /*Swift.(file)._ValidUTF8Buffer.init(_containing:_ValidUTF8Buffer.Element)*/
    _ValidUTF8Buffer.prototype.init_containing_ValidUTF8BufferElement = function ($info, e) {
        return e;
    };
    /*Swift.(file)._ValidUTF8Buffer.endIndex*/ /*
    endIndex$get() {
    return this.endIndex
    }
    get endIndex() { return this.endIndex$get() }*/ ;
    /*Swift.(file)._ValidUTF8Buffer.count*/ /*
    count$get() {
    return this.count
    }
    get count() { return this.count$get() }*/ ;
    /*Swift.(file)._ValidUTF8Buffer.isEmpty*/ /*
    isEmpty$get() {
    return this.isEmpty
    }
    get isEmpty() { return this.isEmpty$get() }*/ ;
    /*Swift.(file)._ValidUTF8Buffer.index(after:_ValidUTF8Buffer.Index)*/
    /*Swift.(file).BidirectionalCollection.index(after:Self.Index)*/
    /*Swift.(file).Collection.index(after:Self.Index)*/
    /*Swift.(file).RandomAccessCollection.index(after:Self.Index)*/
    _ValidUTF8Buffer.prototype.indexAfter = function ($info, i) {
    };
    /*Swift.(file)._ValidUTF8Buffer.subscript(_:_ValidUTF8Buffer.Index)*/
    /*Swift.(file).BidirectionalCollection.subscript(_:Self.Index)*/
    /*Swift.(file).RangeReplaceableCollection.subscript(_:Self.Index)*/
    /*Swift.(file).Collection.subscript(_:Self.Index)*/
    /*Swift.(file).RandomAccessCollection.subscript(_:Self.Index)*/
    _ValidUTF8Buffer.prototype.subscript$get = function ($info, i) {
        return this[i];
    };
    /*Swift.(file)._ValidUTF8Buffer.makeIterator()*/
    /*Swift.(file).Collection.makeIterator()*/
    /*Swift.(file).Sequence.makeIterator()*/
    _ValidUTF8Buffer.prototype.makeIterator = function ($info) {
        var _this = this;
        return new SwiftIterator(function (current) { return _this[current]; });
    };
    /*Swift.(file)._ValidUTF8Buffer.index(before:_ValidUTF8Buffer.Index)*/
    /*Swift.(file).BidirectionalCollection.index(before:Self.Index)*/
    /*Swift.(file).RandomAccessCollection.index(before:Self.Index)*/
    _ValidUTF8Buffer.prototype.indexBefore = function ($info, i) {
    };
    /*Swift.(file)._ValidUTF8Buffer.distance(from:_ValidUTF8Buffer.Index,to:_ValidUTF8Buffer.Index)*/
    /*Swift.(file).BidirectionalCollection.distance(from:Self.Index,to:Self.Index)*/
    /*Swift.(file).Collection.distance(from:Self.Index,to:Self.Index)*/
    /*Swift.(file).RandomAccessCollection.distance(from:Self.Index,to:Self.Index)*/
    _ValidUTF8Buffer.prototype.distanceFromTo = function ($info, i, j) {
    };
    /*Swift.(file)._ValidUTF8Buffer.index(_:_ValidUTF8Buffer.Index,offsetBy:Int)*/
    /*Swift.(file).BidirectionalCollection.index(_:Self.Index,offsetBy:Int)*/
    /*Swift.(file).Collection.index(_:Self.Index,offsetBy:Int)*/
    /*Swift.(file).RandomAccessCollection.index(_:Self.Index,offsetBy:Int)*/
    _ValidUTF8Buffer.prototype.indexOffsetBy = function ($info, i, n) {
    };
    /*Swift.(file)._ValidUTF8Buffer.init()*/
    /*Swift.(file).RangeReplaceableCollection.init()*/
    _ValidUTF8Buffer.prototype.init = function ($info) {
    };
    /*Swift.(file)._ValidUTF8Buffer.capacity*/ /*
    capacity$get() {
    return this.capacity
    }
    get capacity() { return this.capacity$get() }*/ ;
    /*Swift.(file)._ValidUTF8Buffer.capacity*/ /*
    static capacity$get() {
    return this.capacity
    }
    static get capacity() { return this.capacity$get() }*/ ;
    /*Swift.(file)._ValidUTF8Buffer.append(_:_ValidUTF8Buffer.Element)*/
    /*Swift.(file).RangeReplaceableCollection.append(_:Self.Element)*/
    _ValidUTF8Buffer.prototype.append = function ($info, e) {
    };
    /*Swift.(file)._ValidUTF8Buffer.removeFirst()*/
    /*Swift.(file).RangeReplaceableCollection.removeFirst()*/
    _ValidUTF8Buffer.prototype.removeFirst = function ($info) {
    };
    /*Swift.(file)._ValidUTF8Buffer.replaceSubrange(_:Range<_ValidUTF8Buffer.Index>,with:C)*/
    /*Swift.(file).RangeReplaceableCollection.replaceSubrange(_:Range<Self.Index>,with:C)*/
    _ValidUTF8Buffer.prototype.replaceSubrangeWith = function ($info, target, replacement) {
    };
    /*Swift.(file)._ValidUTF8Buffer.append(contentsOf:_ValidUTF8Buffer)*/
    /*Swift.(file)._ValidUTF8Buffer.append(contentsOf:_ValidUTF8Buffer)*/
    _ValidUTF8Buffer.prototype.appendContentsOf = function ($info, other) {
    };
    /*Swift.(file)._ValidUTF8Buffer.encodedReplacementCharacter*/ /*
    static encodedReplacementCharacter$get() {
    return this.encodedReplacementCharacter
    }
    static get encodedReplacementCharacter() { return this.encodedReplacementCharacter$get() }*/ ;
    var _76, _77;
    _ValidUTF8Buffer.$struct = true;
    _ValidUTF8Buffer.$infoAddress = '0x7fb854808c68';
    _ValidUTF8Buffer.Index = (_76 = /** @class */ (function () {
            function class_100() {
            }
            /*Swift.(file)._ValidUTF8Buffer.Index.init(_biasedBits:UInt32)*/
            /*Swift.(file)._ValidUTF8Buffer.Index.init(_biasedBits:UInt32)*/
            class_100.prototype.init_biasedBitsUInt32 = function ($info, _biasedBits) {
                return _biasedBits;
            };
            /*Swift.(file)._ValidUTF8Buffer.Index.==infix(_:_ValidUTF8Buffer.Index,_:_ValidUTF8Buffer.Index)*/
            /*Swift.(file).Equatable.==infix(_:Self,_:Self)*/
            class_100.infix_61_61 = function ($info, lhs, rhs) {
                return lhs == rhs;
            };
            /*Swift.(file)._ValidUTF8Buffer.Index.<infix(_:_ValidUTF8Buffer.Index,_:_ValidUTF8Buffer.Index)*/
            /*Swift.(file).Comparable.<infix(_:Self,_:Self)*/
            class_100.infix_60 = function ($info, lhs, rhs) {
                return lhs < rhs;
            };
            return class_100;
        }()),
        _76.$struct = true,
        _76.$infoAddress = '0x7fb854808eb0',
        _76);
    _ValidUTF8Buffer.Iterator = (_77 = /** @class */ (function () {
            function class_101() {
            }
            /*Swift.(file)._ValidUTF8Buffer.Iterator.init(_:_ValidUTF8Buffer)*/
            /*Swift.(file)._ValidUTF8Buffer.Iterator.init(_:_ValidUTF8Buffer)*/
            class_101.prototype.init_ValidUTF8Buffer = function ($info, x) {
                return x;
            };
            /*Swift.(file)._ValidUTF8Buffer.Iterator.next()*/
            /*Swift.(file).IteratorProtocol.next()*/
            class_101.prototype.next = function ($info) {
            };
            return class_101;
        }()),
        _77.$struct = true,
        _77.$infoAddress = '0x7fb852f82d10',
        _77);
    return _ValidUTF8Buffer;
}());
if (typeof Comparable$implementation != 'undefined')
    _mixin(_ValidUTF8Buffer.Index, Comparable$implementation, false);
if (typeof IteratorProtocol$implementation != 'undefined')
    _mixin(_ValidUTF8Buffer.Iterator, IteratorProtocol$implementation, false);
if (typeof Sequence$implementation != 'undefined')
    _mixin(_ValidUTF8Buffer.Iterator, Sequence$implementation, false);
if (typeof Collection$implementation != 'undefined')
    _mixin(_ValidUTF8Buffer, Collection$implementation, false);
if (typeof Sequence$implementation != 'undefined')
    _mixin(_ValidUTF8Buffer, Sequence$implementation, false);
if (typeof BidirectionalCollection$implementation != 'undefined')
    _mixin(_ValidUTF8Buffer, BidirectionalCollection$implementation, false);
if (typeof RandomAccessCollection$implementation != 'undefined')
    _mixin(_ValidUTF8Buffer, RandomAccessCollection$implementation, false);
if (typeof RangeReplaceableCollection$implementation != 'undefined')
    _mixin(_ValidUTF8Buffer, RangeReplaceableCollection$implementation, false);
var CollectionOfOne = /** @class */ (function () {
    function CollectionOfOne() {
    }
    /*Swift.(file).CollectionOfOne.init(_:Element)*/
    /*Swift.(file).CollectionOfOne.init(_:Element)*/
    CollectionOfOne.prototype.init = function ($info, _element) {
        return _element;
    };
    /*Swift.(file).CollectionOfOne.endIndex*/ /*
    endIndex$get() {
    return this.endIndex
    }
    get endIndex() { return this.endIndex$get() }*/ ;
    /*Swift.(file).CollectionOfOne.index(after:CollectionOfOne<Element>.Index)*/
    /*Swift.(file).BidirectionalCollection.index(after:Self.Index)*/
    /*Swift.(file).RandomAccessCollection.index(after:Self.Index)*/
    /*Swift.(file).Collection.index(after:Self.Index)*/
    CollectionOfOne.prototype.indexAfter = function ($info, i) {
    };
    /*Swift.(file).CollectionOfOne.index(before:CollectionOfOne<Element>.Index)*/
    /*Swift.(file).BidirectionalCollection.index(before:Self.Index)*/
    /*Swift.(file).RandomAccessCollection.index(before:Self.Index)*/
    CollectionOfOne.prototype.indexBefore = function ($info, i) {
    };
    /*Swift.(file).CollectionOfOne.makeIterator()*/
    /*Swift.(file).Collection.makeIterator()*/
    /*Swift.(file).Sequence.makeIterator()*/
    CollectionOfOne.prototype.makeIterator = function ($info) {
        var _this = this;
        return new SwiftIterator(function (current) { return _this[current]; });
    };
    /*Swift.(file).CollectionOfOne.subscript(_:Int)*/
    /*Swift.(file).BidirectionalCollection.subscript(_:Self.Index)*/
    /*Swift.(file).RandomAccessCollection.subscript(_:Self.Index)*/
    /*Swift.(file).MutableCollection.subscript(_:Self.Index)*/
    /*Swift.(file).Collection.subscript(_:Self.Index)*/
    CollectionOfOne.prototype.subscript$get = function ($info, position) {
        return this[position];
    }; /*Swift.(file).CollectionOfOne.subscript(_:Int)*/
    /*Swift.(file).BidirectionalCollection.subscript(_:Self.Index)*/
    /*Swift.(file).RandomAccessCollection.subscript(_:Self.Index)*/
    /*Swift.(file).MutableCollection.subscript(_:Self.Index)*/
    /*Swift.(file).Collection.subscript(_:Self.Index)*/
    CollectionOfOne.prototype.subscript$_modify = function ($info, position) {
        return this[position];
    };
    /*Swift.(file).CollectionOfOne.subscript(_:Range<Int>)*/
    /*Swift.(file).BidirectionalCollection.subscript(_:Range<Self.Index>)*/
    /*Swift.(file).RandomAccessCollection.subscript(_:Range<Self.Index>)*/
    /*Swift.(file).MutableCollection.subscript(_:Range<Self.Index>)*/
    /*Swift.(file).Collection.subscript(_:Range<Self.Index>)*/
    CollectionOfOne.prototype.subcriptRange$get = function ($info, bounds) {
        return this[bounds];
    }; /*Swift.(file).CollectionOfOne.subscript(_:Range<Int>)*/
    /*Swift.(file).BidirectionalCollection.subscript(_:Range<Self.Index>)*/
    /*Swift.(file).RandomAccessCollection.subscript(_:Range<Self.Index>)*/
    /*Swift.(file).MutableCollection.subscript(_:Range<Self.Index>)*/
    /*Swift.(file).Collection.subscript(_:Range<Self.Index>)*/
    CollectionOfOne.prototype.subcriptRange$set = function ($info, newValue, bounds) {
        this[bounds] = newValue;
    };
    /*Swift.(file).CollectionOfOne.count*/ /*
    count$get() {
    return this.count
    }
    get count() { return this.count$get() }*/ ;
    /*Swift.(file).CollectionOfOne.debugDescription*/ /*
    debugDescription$get() {
    return this.debugDescription
    }
    get debugDescription() { return this.debugDescription$get() }*/ ;
    /*Swift.(file).CollectionOfOne.customMirror*/ /*
    customMirror$get() {
    return this.customMirror
    }
    get customMirror() { return this.customMirror$get() }*/ ;
    var _78;
    CollectionOfOne.$struct = true;
    CollectionOfOne.$infoAddress = '0x7fb8512d9500';
    CollectionOfOne.Iterator = (_78 = /** @class */ (function () {
            function class_102() {
            }
            /*Swift.(file).CollectionOfOne.Iterator.init(_elements:CollectionOfOne<Element>.Iterator.Element?)*/
            /*Swift.(file).CollectionOfOne.Iterator.init(_elements:CollectionOfOne<Element>.Iterator.Element?)*/
            class_102.prototype.init_elementsOptional = function ($info, _elements) {
                return _elements;
            };
            /*Swift.(file).Iterator.next()*/
            /*Swift.(file).IteratorProtocol.next()*/
            class_102.prototype.next = function ($info) {
            };
            return class_102;
        }()),
        _78.$struct = true,
        _78.$infoAddress = '0x7fb8512d9868',
        _78);
    return CollectionOfOne;
}());
if (typeof IteratorProtocol$implementation != 'undefined')
    _mixin(CollectionOfOne.Iterator, IteratorProtocol$implementation, false);
if (typeof RandomAccessCollection$implementation != 'undefined')
    _mixin(CollectionOfOne, RandomAccessCollection$implementation, false);
if (typeof MutableCollection$implementation != 'undefined')
    _mixin(CollectionOfOne, MutableCollection$implementation, false);
if (typeof CustomDebugStringConvertible$implementation != 'undefined')
    _mixin(CollectionOfOne, CustomDebugStringConvertible$implementation, false);
if (typeof CustomReflectable$implementation != 'undefined')
    _mixin(CollectionOfOne, CustomReflectable$implementation, false);
var AnyBidirectionalCollection = /** @class */ (function () {
    function AnyBidirectionalCollection() {
    }
    /*Swift.(file).AnyBidirectionalCollection.init(_box:_AnyBidirectionalCollectionBox<Element>)*/
    /*Swift.(file).AnyBidirectionalCollection.init(_box:_AnyBidirectionalCollectionBox<Element>)*/
    AnyBidirectionalCollection.prototype.init_box_AnyBidirectionalCollectionBox = function ($info, _box) {
        return _box;
    };
    /*Swift.(file).AnyBidirectionalCollection.makeIterator()*/
    /*Swift.(file).Collection.makeIterator()*/
    /*Swift.(file).Sequence.makeIterator()*/
    AnyBidirectionalCollection.prototype.makeIterator = function ($info) {
        var _this = this;
        return new SwiftIterator(function (current) { return _this[current]; });
    };
    /*Swift.(file).AnyBidirectionalCollection.dropLast(_:Int)*/
    /*Swift.(file).AnyBidirectionalCollection.dropLast(_:Int)*/
    AnyBidirectionalCollection.prototype.dropLast = function ($info, n) {
    };
    /*Swift.(file).AnyBidirectionalCollection.prefix(while:(Element) throws -> Bool)*/
    /*Swift.(file).AnyBidirectionalCollection.prefix(while:(Element) throws -> Bool)*/
    AnyBidirectionalCollection.prototype.prefixWhile = function ($info, predicate) {
    };
    /*Swift.(file).AnyBidirectionalCollection.suffix(_:Int)*/
    /*Swift.(file).AnyBidirectionalCollection.suffix(_:Int)*/
    AnyBidirectionalCollection.prototype.suffix = function ($info, maxLength) {
    };
    /*Swift.(file).AnyBidirectionalCollection.underestimatedCount*/ /*
    underestimatedCount$get() {
    return this.underestimatedCount
    }
    get underestimatedCount() { return this.underestimatedCount$get() }*/ ;
    /*Swift.(file).AnyBidirectionalCollection.map(_:(Element) throws -> T)*/
    /*Swift.(file).AnyBidirectionalCollection.map(_:(Element) throws -> T)*/
    AnyBidirectionalCollection.prototype.mapSwift = function ($info, transform) {
    };
    /*Swift.(file).AnyBidirectionalCollection.filter(_:(Element) throws -> Bool)*/
    /*Swift.(file).AnyBidirectionalCollection.filter(_:(Element) throws -> Bool)*/
    AnyBidirectionalCollection.prototype.filterSwift = function ($info, isIncluded) {
    };
    /*Swift.(file).AnyBidirectionalCollection.forEach(_:(Element) throws -> Void)*/
    /*Swift.(file).AnyBidirectionalCollection.forEach(_:(Element) throws -> Void)*/
    AnyBidirectionalCollection.prototype.forEachSwift = function ($info, body) {
    };
    /*Swift.(file).AnyBidirectionalCollection.drop(while:(Element) throws -> Bool)*/
    /*Swift.(file).AnyBidirectionalCollection.drop(while:(Element) throws -> Bool)*/
    AnyBidirectionalCollection.prototype.dropWhile = function ($info, predicate) {
    };
    /*Swift.(file).AnyBidirectionalCollection.dropFirst(_:Int)*/
    /*Swift.(file).AnyBidirectionalCollection.dropFirst(_:Int)*/
    AnyBidirectionalCollection.prototype.dropFirst = function ($info, n) {
    };
    /*Swift.(file).AnyBidirectionalCollection.prefix(_:Int)*/
    /*Swift.(file).AnyBidirectionalCollection.prefix(_:Int)*/
    AnyBidirectionalCollection.prototype.prefix = function ($info, maxLength) {
    };
    /*Swift.(file).AnyBidirectionalCollection.init(_:C)*/
    /*Swift.(file).AnyBidirectionalCollection.init(_:C)*/
    AnyBidirectionalCollection.prototype.init = function ($info, base) {
        return base;
    };
    /*Swift.(file).AnyBidirectionalCollection.init(_:AnyBidirectionalCollection<Element>)*/
    /*Swift.(file).AnyBidirectionalCollection.init(_:AnyBidirectionalCollection<Element>)*/
    AnyBidirectionalCollection.prototype.initAnyBidirectionalCollection = function ($info, other) {
        return other;
    };
    /*Swift.(file).AnyBidirectionalCollection.init(_:C)*/
    /*Swift.(file).AnyBidirectionalCollection.init(_:C)*/
    AnyBidirectionalCollection.prototype.init = function ($info, base) {
        return base;
    };
    /*Swift.(file).AnyBidirectionalCollection.init(_:AnyRandomAccessCollection<Element>)*/
    /*Swift.(file).AnyBidirectionalCollection.init(_:AnyRandomAccessCollection<Element>)*/
    AnyBidirectionalCollection.prototype.initAnyRandomAccessCollection = function ($info, other) {
        return other;
    };
    /*Swift.(file).AnyBidirectionalCollection.init(_:AnyCollection<Element>)*/
    /*Swift.(file).AnyBidirectionalCollection.init(_:AnyCollection<Element>)*/
    AnyBidirectionalCollection.prototype.initAnyCollection = function ($info, other) {
        return other;
    };
    /*Swift.(file).AnyBidirectionalCollection.startIndex*/ /*
    startIndex$get() {
    return this.startIndex
    }
    get startIndex() { return this.startIndex$get() }*/ ;
    /*Swift.(file).AnyBidirectionalCollection.endIndex*/ /*
    endIndex$get() {
    return this.endIndex
    }
    get endIndex() { return this.endIndex$get() }*/ ;
    /*Swift.(file).AnyBidirectionalCollection.subscript(_:AnyBidirectionalCollection<Element>.Index)*/
    /*Swift.(file).BidirectionalCollection.subscript(_:Self.Index)*/
    /*Swift.(file).Collection.subscript(_:Self.Index)*/
    AnyBidirectionalCollection.prototype.subscript$get = function ($info, position) {
        return this[position];
    };
    /*Swift.(file).AnyBidirectionalCollection.subscript(_:Range<AnyBidirectionalCollection<Element>.Index>)*/
    /*Swift.(file).BidirectionalCollection.subscript(_:Range<Self.Index>)*/
    /*Swift.(file).Collection.subscript(_:Range<Self.Index>)*/
    AnyBidirectionalCollection.prototype.subcriptRange$get = function ($info, bounds) {
        return this[bounds];
    };
    /*Swift.(file).AnyBidirectionalCollection.index(after:AnyBidirectionalCollection<Element>.Index)*/
    /*Swift.(file).BidirectionalCollection.index(after:Self.Index)*/
    /*Swift.(file).Collection.index(after:Self.Index)*/
    AnyBidirectionalCollection.prototype.indexAfter = function ($info, i) {
    };
    /*Swift.(file).AnyBidirectionalCollection.formIndex(after:AnyBidirectionalCollection<Element>.Index)*/
    /*Swift.(file).BidirectionalCollection.formIndex(after:Self.Index)*/
    /*Swift.(file).Collection.formIndex(after:Self.Index)*/
    AnyBidirectionalCollection.prototype.formIndexAfter = function ($info, i$inout) {
    };
    /*Swift.(file).AnyBidirectionalCollection.index(_:AnyBidirectionalCollection<Element>.Index,offsetBy:Int)*/
    /*Swift.(file).BidirectionalCollection.index(_:Self.Index,offsetBy:Int)*/
    /*Swift.(file).Collection.index(_:Self.Index,offsetBy:Int)*/
    AnyBidirectionalCollection.prototype.indexOffsetBy = function ($info, i, n) {
    };
    /*Swift.(file).AnyBidirectionalCollection.index(_:AnyBidirectionalCollection<Element>.Index,offsetBy:Int,limitedBy:AnyBidirectionalCollection<Element>.Index)*/
    /*Swift.(file).BidirectionalCollection.index(_:Self.Index,offsetBy:Int,limitedBy:Self.Index)*/
    /*Swift.(file).Collection.index(_:Self.Index,offsetBy:Int,limitedBy:Self.Index)*/
    AnyBidirectionalCollection.prototype.indexOffsetByLimitedBy = function ($info, i, n, limit) {
    };
    /*Swift.(file).AnyBidirectionalCollection.formIndex(_:AnyBidirectionalCollection<Element>.Index,offsetBy:Int)*/
    /*Swift.(file).AnyBidirectionalCollection.formIndex(_:AnyBidirectionalCollection<Element>.Index,offsetBy:Int)*/
    AnyBidirectionalCollection.prototype.formIndexOffsetBy = function ($info, i$inout, n) {
    };
    /*Swift.(file).AnyBidirectionalCollection.formIndex(_:AnyBidirectionalCollection<Element>.Index,offsetBy:Int,limitedBy:AnyBidirectionalCollection<Element>.Index)*/
    /*Swift.(file).AnyBidirectionalCollection.formIndex(_:AnyBidirectionalCollection<Element>.Index,offsetBy:Int,limitedBy:AnyBidirectionalCollection<Element>.Index)*/
    AnyBidirectionalCollection.prototype.formIndexOffsetByLimitedBy = function ($info, i$inout, n, limit) {
    };
    /*Swift.(file).AnyBidirectionalCollection.distance(from:AnyBidirectionalCollection<Element>.Index,to:AnyBidirectionalCollection<Element>.Index)*/
    /*Swift.(file).BidirectionalCollection.distance(from:Self.Index,to:Self.Index)*/
    /*Swift.(file).Collection.distance(from:Self.Index,to:Self.Index)*/
    AnyBidirectionalCollection.prototype.distanceFromTo = function ($info, start, end) {
    };
    /*Swift.(file).AnyBidirectionalCollection.count*/ /*
    count$get() {
    return this.count
    }
    get count() { return this.count$get() }*/ ;
    /*Swift.(file).AnyBidirectionalCollection.index(before:AnyBidirectionalCollection<Element>.Index)*/
    /*Swift.(file).BidirectionalCollection.index(before:Self.Index)*/
    AnyBidirectionalCollection.prototype.indexBefore = function ($info, i) {
    };
    /*Swift.(file).AnyBidirectionalCollection.formIndex(before:AnyBidirectionalCollection<Element>.Index)*/
    /*Swift.(file).BidirectionalCollection.formIndex(before:Self.Index)*/
    AnyBidirectionalCollection.prototype.formIndexBefore = function ($info, i$inout) {
    };
    AnyBidirectionalCollection.$struct = true;
    AnyBidirectionalCollection.$infoAddress = '0x7fb851302248';
    return AnyBidirectionalCollection;
}());
if (typeof BidirectionalCollection$implementation != 'undefined')
    _mixin(AnyBidirectionalCollection, BidirectionalCollection$implementation, false);
if (typeof _AnyCollectionProtocol$implementation != 'undefined')
    _mixin(AnyBidirectionalCollection, _AnyCollectionProtocol$implementation, false);
var AnyRandomAccessCollection = /** @class */ (function () {
    function AnyRandomAccessCollection() {
    }
    /*Swift.(file).AnyRandomAccessCollection.init(_box:_AnyRandomAccessCollectionBox<Element>)*/
    /*Swift.(file).AnyRandomAccessCollection.init(_box:_AnyRandomAccessCollectionBox<Element>)*/
    AnyRandomAccessCollection.prototype.init_box_AnyRandomAccessCollectionBox = function ($info, _box) {
        return _box;
    };
    /*Swift.(file).AnyRandomAccessCollection.makeIterator()*/
    /*Swift.(file).Collection.makeIterator()*/
    /*Swift.(file).Sequence.makeIterator()*/
    AnyRandomAccessCollection.prototype.makeIterator = function ($info) {
        var _this = this;
        return new SwiftIterator(function (current) { return _this[current]; });
    };
    /*Swift.(file).AnyRandomAccessCollection.dropLast(_:Int)*/
    /*Swift.(file).AnyRandomAccessCollection.dropLast(_:Int)*/
    AnyRandomAccessCollection.prototype.dropLast = function ($info, n) {
    };
    /*Swift.(file).AnyRandomAccessCollection.prefix(while:(Element) throws -> Bool)*/
    /*Swift.(file).AnyRandomAccessCollection.prefix(while:(Element) throws -> Bool)*/
    AnyRandomAccessCollection.prototype.prefixWhile = function ($info, predicate) {
    };
    /*Swift.(file).AnyRandomAccessCollection.suffix(_:Int)*/
    /*Swift.(file).AnyRandomAccessCollection.suffix(_:Int)*/
    AnyRandomAccessCollection.prototype.suffix = function ($info, maxLength) {
    };
    /*Swift.(file).AnyRandomAccessCollection.underestimatedCount*/ /*
    underestimatedCount$get() {
    return this.underestimatedCount
    }
    get underestimatedCount() { return this.underestimatedCount$get() }*/ ;
    /*Swift.(file).AnyRandomAccessCollection.map(_:(Element) throws -> T)*/
    /*Swift.(file).AnyRandomAccessCollection.map(_:(Element) throws -> T)*/
    AnyRandomAccessCollection.prototype.mapSwift = function ($info, transform) {
    };
    /*Swift.(file).AnyRandomAccessCollection.filter(_:(Element) throws -> Bool)*/
    /*Swift.(file).AnyRandomAccessCollection.filter(_:(Element) throws -> Bool)*/
    AnyRandomAccessCollection.prototype.filterSwift = function ($info, isIncluded) {
    };
    /*Swift.(file).AnyRandomAccessCollection.forEach(_:(Element) throws -> Void)*/
    /*Swift.(file).AnyRandomAccessCollection.forEach(_:(Element) throws -> Void)*/
    AnyRandomAccessCollection.prototype.forEachSwift = function ($info, body) {
    };
    /*Swift.(file).AnyRandomAccessCollection.drop(while:(Element) throws -> Bool)*/
    /*Swift.(file).AnyRandomAccessCollection.drop(while:(Element) throws -> Bool)*/
    AnyRandomAccessCollection.prototype.dropWhile = function ($info, predicate) {
    };
    /*Swift.(file).AnyRandomAccessCollection.dropFirst(_:Int)*/
    /*Swift.(file).AnyRandomAccessCollection.dropFirst(_:Int)*/
    AnyRandomAccessCollection.prototype.dropFirst = function ($info, n) {
    };
    /*Swift.(file).AnyRandomAccessCollection.prefix(_:Int)*/
    /*Swift.(file).AnyRandomAccessCollection.prefix(_:Int)*/
    AnyRandomAccessCollection.prototype.prefix = function ($info, maxLength) {
    };
    /*Swift.(file).AnyRandomAccessCollection.init(_:C)*/
    /*Swift.(file).AnyRandomAccessCollection.init(_:C)*/
    AnyRandomAccessCollection.prototype.init = function ($info, base) {
        return base;
    };
    /*Swift.(file).AnyRandomAccessCollection.init(_:AnyRandomAccessCollection<Element>)*/
    /*Swift.(file).AnyRandomAccessCollection.init(_:AnyRandomAccessCollection<Element>)*/
    AnyRandomAccessCollection.prototype.initAnyRandomAccessCollection = function ($info, other) {
        return other;
    };
    /*Swift.(file).AnyRandomAccessCollection.init(_:AnyCollection<Element>)*/
    /*Swift.(file).AnyRandomAccessCollection.init(_:AnyCollection<Element>)*/
    AnyRandomAccessCollection.prototype.initAnyCollection = function ($info, other) {
        return other;
    };
    /*Swift.(file).AnyRandomAccessCollection.init(_:AnyBidirectionalCollection<Element>)*/
    /*Swift.(file).AnyRandomAccessCollection.init(_:AnyBidirectionalCollection<Element>)*/
    AnyRandomAccessCollection.prototype.initAnyBidirectionalCollection = function ($info, other) {
        return other;
    };
    /*Swift.(file).AnyRandomAccessCollection.startIndex*/ /*
    startIndex$get() {
    return this.startIndex
    }
    get startIndex() { return this.startIndex$get() }*/ ;
    /*Swift.(file).AnyRandomAccessCollection.endIndex*/ /*
    endIndex$get() {
    return this.endIndex
    }
    get endIndex() { return this.endIndex$get() }*/ ;
    /*Swift.(file).AnyRandomAccessCollection.subscript(_:AnyRandomAccessCollection<Element>.Index)*/
    /*Swift.(file).RandomAccessCollection.subscript(_:Self.Index)*/
    /*Swift.(file).BidirectionalCollection.subscript(_:Self.Index)*/
    /*Swift.(file).Collection.subscript(_:Self.Index)*/
    AnyRandomAccessCollection.prototype.subscript$get = function ($info, position) {
        return this[position];
    };
    /*Swift.(file).AnyRandomAccessCollection.subscript(_:Range<AnyRandomAccessCollection<Element>.Index>)*/
    /*Swift.(file).RandomAccessCollection.subscript(_:Range<Self.Index>)*/
    /*Swift.(file).BidirectionalCollection.subscript(_:Range<Self.Index>)*/
    /*Swift.(file).Collection.subscript(_:Range<Self.Index>)*/
    AnyRandomAccessCollection.prototype.subcriptRange$get = function ($info, bounds) {
        return this[bounds];
    };
    /*Swift.(file).AnyRandomAccessCollection.index(after:AnyRandomAccessCollection<Element>.Index)*/
    /*Swift.(file).RandomAccessCollection.index(after:Self.Index)*/
    /*Swift.(file).BidirectionalCollection.index(after:Self.Index)*/
    /*Swift.(file).Collection.index(after:Self.Index)*/
    AnyRandomAccessCollection.prototype.indexAfter = function ($info, i) {
    };
    /*Swift.(file).AnyRandomAccessCollection.formIndex(after:AnyRandomAccessCollection<Element>.Index)*/
    /*Swift.(file).RandomAccessCollection.formIndex(after:Self.Index)*/
    /*Swift.(file).BidirectionalCollection.formIndex(after:Self.Index)*/
    /*Swift.(file).Collection.formIndex(after:Self.Index)*/
    AnyRandomAccessCollection.prototype.formIndexAfter = function ($info, i$inout) {
    };
    /*Swift.(file).AnyRandomAccessCollection.index(_:AnyRandomAccessCollection<Element>.Index,offsetBy:Int)*/
    /*Swift.(file).RandomAccessCollection.index(_:Self.Index,offsetBy:Int)*/
    /*Swift.(file).BidirectionalCollection.index(_:Self.Index,offsetBy:Int)*/
    /*Swift.(file).Collection.index(_:Self.Index,offsetBy:Int)*/
    AnyRandomAccessCollection.prototype.indexOffsetBy = function ($info, i, n) {
    };
    /*Swift.(file).AnyRandomAccessCollection.index(_:AnyRandomAccessCollection<Element>.Index,offsetBy:Int,limitedBy:AnyRandomAccessCollection<Element>.Index)*/
    /*Swift.(file).RandomAccessCollection.index(_:Self.Index,offsetBy:Int,limitedBy:Self.Index)*/
    /*Swift.(file).BidirectionalCollection.index(_:Self.Index,offsetBy:Int,limitedBy:Self.Index)*/
    /*Swift.(file).Collection.index(_:Self.Index,offsetBy:Int,limitedBy:Self.Index)*/
    AnyRandomAccessCollection.prototype.indexOffsetByLimitedBy = function ($info, i, n, limit) {
    };
    /*Swift.(file).AnyRandomAccessCollection.formIndex(_:AnyRandomAccessCollection<Element>.Index,offsetBy:Int)*/
    /*Swift.(file).AnyRandomAccessCollection.formIndex(_:AnyRandomAccessCollection<Element>.Index,offsetBy:Int)*/
    AnyRandomAccessCollection.prototype.formIndexOffsetBy = function ($info, i$inout, n) {
    };
    /*Swift.(file).AnyRandomAccessCollection.formIndex(_:AnyRandomAccessCollection<Element>.Index,offsetBy:Int,limitedBy:AnyRandomAccessCollection<Element>.Index)*/
    /*Swift.(file).AnyRandomAccessCollection.formIndex(_:AnyRandomAccessCollection<Element>.Index,offsetBy:Int,limitedBy:AnyRandomAccessCollection<Element>.Index)*/
    AnyRandomAccessCollection.prototype.formIndexOffsetByLimitedBy = function ($info, i$inout, n, limit) {
    };
    /*Swift.(file).AnyRandomAccessCollection.distance(from:AnyRandomAccessCollection<Element>.Index,to:AnyRandomAccessCollection<Element>.Index)*/
    /*Swift.(file).RandomAccessCollection.distance(from:Self.Index,to:Self.Index)*/
    /*Swift.(file).BidirectionalCollection.distance(from:Self.Index,to:Self.Index)*/
    /*Swift.(file).Collection.distance(from:Self.Index,to:Self.Index)*/
    AnyRandomAccessCollection.prototype.distanceFromTo = function ($info, start, end) {
    };
    /*Swift.(file).AnyRandomAccessCollection.count*/ /*
    count$get() {
    return this.count
    }
    get count() { return this.count$get() }*/ ;
    /*Swift.(file).AnyRandomAccessCollection.index(before:AnyRandomAccessCollection<Element>.Index)*/
    /*Swift.(file).RandomAccessCollection.index(before:Self.Index)*/
    /*Swift.(file).BidirectionalCollection.index(before:Self.Index)*/
    AnyRandomAccessCollection.prototype.indexBefore = function ($info, i) {
    };
    /*Swift.(file).AnyRandomAccessCollection.formIndex(before:AnyRandomAccessCollection<Element>.Index)*/
    /*Swift.(file).RandomAccessCollection.formIndex(before:Self.Index)*/
    /*Swift.(file).BidirectionalCollection.formIndex(before:Self.Index)*/
    AnyRandomAccessCollection.prototype.formIndexBefore = function ($info, i$inout) {
    };
    AnyRandomAccessCollection.$struct = true;
    AnyRandomAccessCollection.$infoAddress = '0x7fb8513026b8';
    return AnyRandomAccessCollection;
}());
if (typeof RandomAccessCollection$implementation != 'undefined')
    _mixin(AnyRandomAccessCollection, RandomAccessCollection$implementation, false);
if (typeof _AnyCollectionProtocol$implementation != 'undefined')
    _mixin(AnyRandomAccessCollection, _AnyCollectionProtocol$implementation, false);
var _ArrayBufferProtocol$implementation = /** @class */ (function () {
    function _ArrayBufferProtocol$implementation() {
    }
    /*Swift.(file)._ArrayBufferProtocol.subscriptBaseAddress*/ /**/ ;
    /*Swift.(file)._ArrayBufferProtocol.init(copying:Self)*/
    /*Swift.(file)._ArrayBufferProtocol.init(copying:Self)*/
    _ArrayBufferProtocol$implementation.prototype.initCopying = function ($info, buffer) {
        return buffer;
    };
    /*Swift.(file)._ArrayBufferProtocol.replaceSubrange(_:Range<Int>,with:Int,elementsOf:C)*/
    /*Swift.(file)._ArrayBufferProtocol.replaceSubrange(_:Range<Int>,with:Int,elementsOf:C)*/
    _ArrayBufferProtocol$implementation.prototype.replaceSubrangeWithElementsOf = function ($info, subrange, newCount, newValues) {
    };
    return _ArrayBufferProtocol$implementation;
}());
if (typeof MutableCollection$implementation != 'undefined')
    _mixin(_ArrayBufferProtocol$implementation, MutableCollection$implementation, false);
if (typeof RandomAccessCollection$implementation != 'undefined')
    _mixin(_ArrayBufferProtocol$implementation, RandomAccessCollection$implementation, false);
var MIO_Mixin_Array = /** @class */ (function () {
    function MIO_Mixin_Array() {
    }
    /*Swift.(file).Array.init(_buffer:Array<Element>._Buffer)*/
    /*Swift.(file).Array.init(_buffer:Array<Element>._Buffer)*/
    MIO_Mixin_Array.prototype.init_bufferArray_Buffer = function ($info, _buffer) {
        return _buffer;
    };
    /*Swift.(file).Array.==infix(_:Array<Element>,_:Array<Element>)*/
    /*Swift.(file).Equatable.==infix(_:Self,_:Self)*/
    MIO_Mixin_Array.infix_61_61 = function ($info, lhs, rhs) {
        return lhs == rhs;
    };
    /*Swift.(file).Array.+infix(_:Array<Element>,_:Array<Element>)*/
    /*Swift.(file).Array.+infix(_:Array<Element>,_:Array<Element>)*/
    MIO_Mixin_Array.infix_43 = function ($info, lhs, rhs) {
        return lhs.concat(rhs);
    };
    /*Swift.(file).Array.+=infix(_:Array<Element>,_:Array<Element>)*/
    /*Swift.(file).Array.+=infix(_:Array<Element>,_:Array<Element>)*/
    MIO_Mixin_Array.infix_43_61 = function ($info, lhs$inout, rhs) {
        lhs$inout.get().appendContentsOf(null, rhs);
    };
    /*Swift.(file).Array.capacity*/ /*
    capacity$get() {
    return this.capacity
    }
    get capacity() { return this.capacity$get() }*/ ;
    /*Swift.(file).Array.startIndex*/ /*
    startIndex$get() {
    return this.startIndex
    }
    get startIndex() { return this.startIndex$get() }*/ ;
    /*Swift.(file).Array.endIndex*/ /*
    endIndex$get() {
    return this.endIndex
    }
    get endIndex() { return this.endIndex$get() }*/ ;
    /*Swift.(file).Array.index(after:Int)*/
    /*Swift.(file).RandomAccessCollection.index(after:Self.Index)*/
    /*Swift.(file).BidirectionalCollection.index(after:Self.Index)*/
    /*Swift.(file).Collection.index(after:Self.Index)*/
    MIO_Mixin_Array.prototype.indexAfter = function ($info, i) {
    };
    /*Swift.(file).Array.formIndex(after:Int)*/
    /*Swift.(file).RandomAccessCollection.formIndex(after:Self.Index)*/
    /*Swift.(file).BidirectionalCollection.formIndex(after:Self.Index)*/
    /*Swift.(file).Collection.formIndex(after:Self.Index)*/
    MIO_Mixin_Array.prototype.formIndexAfter = function ($info, i$inout) {
    };
    /*Swift.(file).Array.index(before:Int)*/
    /*Swift.(file).RandomAccessCollection.index(before:Self.Index)*/
    /*Swift.(file).BidirectionalCollection.index(before:Self.Index)*/
    MIO_Mixin_Array.prototype.indexBefore = function ($info, i) {
    };
    /*Swift.(file).Array.formIndex(before:Int)*/
    /*Swift.(file).RandomAccessCollection.formIndex(before:Self.Index)*/
    /*Swift.(file).BidirectionalCollection.formIndex(before:Self.Index)*/
    MIO_Mixin_Array.prototype.formIndexBefore = function ($info, i$inout) {
    };
    /*Swift.(file).Array.index(_:Int,offsetBy:Int)*/
    /*Swift.(file).RandomAccessCollection.index(_:Self.Index,offsetBy:Int)*/
    /*Swift.(file).BidirectionalCollection.index(_:Self.Index,offsetBy:Int)*/
    /*Swift.(file).Collection.index(_:Self.Index,offsetBy:Int)*/
    MIO_Mixin_Array.prototype.indexOffsetBy = function ($info, i, distance) {
    };
    /*Swift.(file).Array.index(_:Int,offsetBy:Int,limitedBy:Int)*/
    /*Swift.(file).RandomAccessCollection.index(_:Self.Index,offsetBy:Int,limitedBy:Self.Index)*/
    /*Swift.(file).BidirectionalCollection.index(_:Self.Index,offsetBy:Int,limitedBy:Self.Index)*/
    /*Swift.(file).Collection.index(_:Self.Index,offsetBy:Int,limitedBy:Self.Index)*/
    MIO_Mixin_Array.prototype.indexOffsetByLimitedBy = function ($info, i, distance, limit) {
    };
    /*Swift.(file).Array.distance(from:Int,to:Int)*/
    /*Swift.(file).RandomAccessCollection.distance(from:Self.Index,to:Self.Index)*/
    /*Swift.(file).BidirectionalCollection.distance(from:Self.Index,to:Self.Index)*/
    /*Swift.(file).Collection.distance(from:Self.Index,to:Self.Index)*/
    MIO_Mixin_Array.prototype.distanceFromTo = function ($info, start, end) {
    };
    /*Swift.(file).Array.subscript(_:Int)*/
    /*Swift.(file).RandomAccessCollection.subscript(_:Self.Index)*/
    /*Swift.(file).MutableCollection.subscript(_:Self.Index)*/
    /*Swift.(file).BidirectionalCollection.subscript(_:Self.Index)*/
    /*Swift.(file).Collection.subscript(_:Self.Index)*/
    /*Swift.(file).RangeReplaceableCollection.subscript(_:Self.Index)*/
    MIO_Mixin_Array.prototype.subscript$get = function ($info, index) {
        return this[index];
    }; /*Swift.(file).Array.subscript(_:Int)*/
    /*Swift.(file).RandomAccessCollection.subscript(_:Self.Index)*/
    /*Swift.(file).MutableCollection.subscript(_:Self.Index)*/
    /*Swift.(file).BidirectionalCollection.subscript(_:Self.Index)*/
    /*Swift.(file).Collection.subscript(_:Self.Index)*/
    /*Swift.(file).RangeReplaceableCollection.subscript(_:Self.Index)*/
    MIO_Mixin_Array.prototype.subscript$_modify = function ($info, index) {
        return this[index];
    };
    /*Swift.(file).Array.subscript(_:Range<Int>)*/
    /*Swift.(file).RandomAccessCollection.subscript(_:Range<Self.Index>)*/
    /*Swift.(file).MutableCollection.subscript(_:Range<Self.Index>)*/
    /*Swift.(file).BidirectionalCollection.subscript(_:Range<Self.Index>)*/
    /*Swift.(file).Collection.subscript(_:Range<Self.Index>)*/
    /*Swift.(file).RangeReplaceableCollection.subscript(_:Range<Self.Index>)*/
    MIO_Mixin_Array.prototype.subcriptRange$get = function ($info, bounds) {
        return this[bounds];
    }; /*Swift.(file).Array.subscript(_:Range<Int>)*/
    /*Swift.(file).RandomAccessCollection.subscript(_:Range<Self.Index>)*/
    /*Swift.(file).MutableCollection.subscript(_:Range<Self.Index>)*/
    /*Swift.(file).BidirectionalCollection.subscript(_:Range<Self.Index>)*/
    /*Swift.(file).Collection.subscript(_:Range<Self.Index>)*/
    /*Swift.(file).RangeReplaceableCollection.subscript(_:Range<Self.Index>)*/
    MIO_Mixin_Array.prototype.subcriptRange$set = function ($info, rhs, bounds) {
        this[bounds] = rhs;
    };
    /*Swift.(file).Array.count*/
    MIO_Mixin_Array.prototype.count$get = function () {
        return this.length;
    };
    Object.defineProperty(MIO_Mixin_Array.prototype, "count", {
        get: function () { return this.count$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).Array.init(arrayLiteral:[Element])*/
    /*Swift.(file).ExpressibleByArrayLiteral.init(arrayLiteral:[Self.ArrayLiteralElement])*/
    MIO_Mixin_Array.prototype.initArrayLiteralArray = function ($info, _elements) {
        return _elements;
    };
    /*Swift.(file).Array.init()*/
    /*Swift.(file).RangeReplaceableCollection.init()*/
    MIO_Mixin_Array.prototype.init = function ($info) {
        return [];
    };
    /*Swift.(file).Array.init(_:S)*/
    /*Swift.(file)._ArrayProtocol.init(_:Self._Buffer)*/
    /*Swift.(file).RangeReplaceableCollection.init(_:S)*/
    MIO_Mixin_Array.prototype.initBuffer = function ($info, s) {
        return s;
    };
    /*Swift.(file).Array.init(repeating:Element,count:Int)*/
    /*Swift.(file).RangeReplaceableCollection.init(repeating:Self.Element,count:Int)*/
    MIO_Mixin_Array.prototype.initRepeatingCountInt = function ($info, repeatedValue, count) {
        return new Array(count).fill(repeatedValue);
    };
    /*Swift.(file).Array.init(_uninitializedCount:Int)*/
    /*Swift.(file).Array.init(_uninitializedCount:Int)*/
    MIO_Mixin_Array.prototype.init_uninitializedCountInt = function ($info, count) {
        return count;
    };
    /*Swift.(file).Array.reserveCapacity(_:Int)*/
    /*Swift.(file)._ArrayProtocol.reserveCapacity(_:Int)*/
    /*Swift.(file).RangeReplaceableCollection.reserveCapacity(_:Int)*/
    MIO_Mixin_Array.prototype.reserveCapacity = function ($info, minimumCapacity) {
    };
    /*Swift.(file).Array.append(_:Element)*/
    /*Swift.(file).RangeReplaceableCollection.append(_:Self.Element)*/
    MIO_Mixin_Array.prototype.append = function ($info, newElement) {
        this.push(newElement);
    };
    /*Swift.(file).Array.append(contentsOf:S)*/
    /*Swift.(file).RangeReplaceableCollection.append(contentsOf:S)*/
    MIO_Mixin_Array.prototype.appendContentsOf = function ($info, newElements) {
        this.push.apply(this, newElements);
    };
    /*Swift.(file).Array.reserveCapacityForAppend(newElementsCount:Int)*/
    /*Swift.(file).Array.reserveCapacityForAppend(newElementsCount:Int)*/
    MIO_Mixin_Array.prototype.reserveCapacityForAppendNewElementsCount = function ($info, newElementsCount) {
    };
    /*Swift.(file).Array.remove(at:Int)*/
    /*Swift.(file)._ArrayProtocol.remove(at:Int)*/
    /*Swift.(file).RangeReplaceableCollection.remove(at:Self.Index)*/
    MIO_Mixin_Array.prototype.removeAt = function ($info, index) {
        this.splice(index, 1);
    };
    /*Swift.(file).Array.insert(_:Element,at:Int)*/
    /*Swift.(file)._ArrayProtocol.insert(_:Self.Element,at:Int)*/
    /*Swift.(file).RangeReplaceableCollection.insert(_:Self.Element,at:Self.Index)*/
    MIO_Mixin_Array.prototype.insertAt = function ($info, newElement, i) {
        this.splice(i, 0, newElement);
    };
    /*Swift.(file).Array.removeAll(keepingCapacity:Bool)*/
    /*Swift.(file).RangeReplaceableCollection.removeAll(keepingCapacity:Bool)*/
    MIO_Mixin_Array.prototype.removeAllKeepingCapacity = function ($info, keepCapacity) {
    };
    /*Swift.(file).Array.withContiguousMutableStorageIfAvailable(_:(inout UnsafeMutableBufferPointer<Element>) throws -> R)*/
    /*Swift.(file).MutableCollection.withContiguousMutableStorageIfAvailable(_:(inout UnsafeMutableBufferPointer<Self.Element>) throws -> R)*/
    MIO_Mixin_Array.prototype.withContiguousMutableStorageIfAvailable = function ($info, body) {
    };
    /*Swift.(file).Array.withContiguousStorageIfAvailable(_:(UnsafeBufferPointer<Element>) throws -> R)*/
    /*Swift.(file).Sequence.withContiguousStorageIfAvailable(_:(UnsafeBufferPointer<Self.Element>) throws -> R)*/
    MIO_Mixin_Array.prototype.withContiguousStorageIfAvailable = function ($info, body) {
    };
    /*Swift.(file).Array.customMirror*/ /*
    customMirror$get() {
    return this.customMirror
    }
    get customMirror() { return this.customMirror$get() }*/ ;
    /*Swift.(file).Array.description*/ /*
    description$get() {
    return this.description
    }
    get description() { return this.description$get() }*/ ;
    /*Swift.(file).Array.debugDescription*/ /*
    debugDescription$get() {
    return this.debugDescription
    }
    get debugDescription() { return this.debugDescription$get() }*/ ;
    /*Swift.(file).Array.init(_unsafeUninitializedCapacity:Int,initializingWith:(inout UnsafeMutableBufferPointer<Element>, inout Int) throws -> Void)*/
    /*Swift.(file).Array.init(_unsafeUninitializedCapacity:Int,initializingWith:(inout UnsafeMutableBufferPointer<Element>, inout Int) throws -> Void)*/
    MIO_Mixin_Array.prototype.init_unsafeUninitializedCapacityIntInitializingWithfunction_type = function ($info, _unsafeUninitializedCapacity, initializer) {
    };
    /*Swift.(file).Array.withUnsafeBufferPointer(_:(UnsafeBufferPointer<Element>) throws -> R)*/
    /*Swift.(file).Array.withUnsafeBufferPointer(_:(UnsafeBufferPointer<Element>) throws -> R)*/
    MIO_Mixin_Array.prototype.withUnsafeBufferPointer = function ($info, body) {
    };
    /*Swift.(file).Array.withUnsafeMutableBufferPointer(_:(inout UnsafeMutableBufferPointer<Element>) throws -> R)*/
    /*Swift.(file).Array.withUnsafeMutableBufferPointer(_:(inout UnsafeMutableBufferPointer<Element>) throws -> R)*/
    MIO_Mixin_Array.prototype.withUnsafeMutableBufferPointer = function ($info, body) {
    };
    /*Swift.(file).Array.replaceSubrange(_:Range<Int>,with:C)*/
    /*Swift.(file).RangeReplaceableCollection.replaceSubrange(_:Range<Self.Index>,with:C)*/
    MIO_Mixin_Array.prototype.replaceSubrangeWith = function ($info, subrange, newElements) {
    };
    /*Swift.(file).Array.hash(into:Hasher)*/
    /*Swift.(file).Hashable.hash(into:Hasher)*/
    MIO_Mixin_Array.prototype.hashInto = function ($info, hasher$inout) {
    };
    /*Swift.(file).Array.hashValue*/ /*
    hashValue$get() {
    return this.hashValue
    }
    get hashValue() { return this.hashValue$get() }*/ ;
    /*Swift.(file).Array.withUnsafeMutableBytes(_:(UnsafeMutableRawBufferPointer) throws -> R)*/
    /*Swift.(file).Array.withUnsafeMutableBytes(_:(UnsafeMutableRawBufferPointer) throws -> R)*/
    MIO_Mixin_Array.prototype.withUnsafeMutableBytes = function ($info, body) {
    };
    /*Swift.(file).Array.withUnsafeBytes(_:(UnsafeRawBufferPointer) throws -> R)*/
    /*Swift.(file)._HasContiguousBytes.withUnsafeBytes(_:(UnsafeRawBufferPointer) throws -> R)*/
    MIO_Mixin_Array.prototype.withUnsafeBytes = function ($info, body) {
    };
    /*Swift.(file).Array.init(_immutableCocoaArray:AnyObject)*/
    /*Swift.(file).Array.init(_immutableCocoaArray:AnyObject)*/
    MIO_Mixin_Array.prototype.init_immutableCocoaArrayAnyObject = function ($info, _immutableCocoaArray) {
        return _immutableCocoaArray;
    };
    /*Swift.(file).Array.encode(to:Encoder)*/
    /*Swift.(file).Encodable.encode(to:Encoder)*/
    MIO_Mixin_Array.prototype.encodeTo = function ($info, encoder) {
    };
    /*Swift.(file).Array.init(from:Decoder)*/
    /*Swift.(file).Decodable.init(from:Decoder)*/
    MIO_Mixin_Array.prototype.initFromDecoder = function ($info, decoder) {
        return decoder;
    };
    MIO_Mixin_Array.$struct = true;
    MIO_Mixin_Array.$mixin = true;
    MIO_Mixin_Array.$infoAddress = '0x7fb85180c410';
    return MIO_Mixin_Array;
}());
if (typeof _DestructorSafeContainer$implementation != 'undefined')
    _mixin(MIO_Mixin_Array, _DestructorSafeContainer$implementation, false);
if (typeof Equatable$implementation != 'undefined')
    _mixin(MIO_Mixin_Array, Equatable$implementation, false);
if (typeof _ArrayProtocol$implementation != 'undefined')
    _mixin(MIO_Mixin_Array, _ArrayProtocol$implementation, false);
if (typeof RandomAccessCollection$implementation != 'undefined')
    _mixin(MIO_Mixin_Array, RandomAccessCollection$implementation, false);
if (typeof MutableCollection$implementation != 'undefined')
    _mixin(MIO_Mixin_Array, MutableCollection$implementation, false);
if (typeof ExpressibleByArrayLiteral$implementation != 'undefined')
    _mixin(MIO_Mixin_Array, ExpressibleByArrayLiteral$implementation, false);
if (typeof RangeReplaceableCollection$implementation != 'undefined')
    _mixin(MIO_Mixin_Array, RangeReplaceableCollection$implementation, false);
if (typeof CustomReflectable$implementation != 'undefined')
    _mixin(MIO_Mixin_Array, CustomReflectable$implementation, false);
if (typeof CustomStringConvertible$implementation != 'undefined')
    _mixin(MIO_Mixin_Array, CustomStringConvertible$implementation, false);
if (typeof CustomDebugStringConvertible$implementation != 'undefined')
    _mixin(MIO_Mixin_Array, CustomDebugStringConvertible$implementation, false);
if (typeof Hashable$implementation != 'undefined')
    _mixin(MIO_Mixin_Array, Hashable$implementation, false);
if (typeof _HasCustomAnyHashableRepresentation$implementation != 'undefined')
    _mixin(MIO_Mixin_Array, _HasCustomAnyHashableRepresentation$implementation, false);
if (typeof Encodable$implementation != 'undefined')
    _mixin(MIO_Mixin_Array, Encodable$implementation, false);
if (typeof Decodable$implementation != 'undefined')
    _mixin(MIO_Mixin_Array, Decodable$implementation, false);
if (typeof _HasContiguousBytes$implementation != 'undefined')
    _mixin(MIO_Mixin_Array, _HasContiguousBytes$implementation, false);
_mixin(Array, MIO_Mixin_Array, true);
var ArraySlice = /** @class */ (function () {
    function ArraySlice() {
    }
    /*Swift.(file).ArraySlice.init(_buffer:ArraySlice<Element>._Buffer)*/
    /*Swift.(file).ArraySlice.init(_buffer:ArraySlice<Element>._Buffer)*/
    ArraySlice.prototype.init_bufferArraySlice_Buffer = function ($info, _buffer) {
        return _buffer;
    };
    /*Swift.(file).ArraySlice.init(_buffer:_ContiguousArrayBuffer<Element>)*/
    /*Swift.(file).ArraySlice.init(_buffer:_ContiguousArrayBuffer<Element>)*/
    ArraySlice.prototype.init_buffer_ContiguousArrayBuffer = function ($info, buffer) {
        return buffer;
    };
    /*Swift.(file).ArraySlice.==infix(_:ArraySlice<Element>,_:ArraySlice<Element>)*/
    /*Swift.(file).Equatable.==infix(_:Self,_:Self)*/
    ArraySlice.infix_61_61 = function ($info, lhs, rhs) {
        return lhs == rhs;
    };
    /*Swift.(file).ArraySlice.capacity*/ /*
    capacity$get() {
    return this.capacity
    }
    get capacity() { return this.capacity$get() }*/ ;
    /*Swift.(file).ArraySlice.startIndex*/ /*
    startIndex$get() {
    return this.startIndex
    }
    get startIndex() { return this.startIndex$get() }*/ ;
    /*Swift.(file).ArraySlice.endIndex*/ /*
    endIndex$get() {
    return this.endIndex
    }
    get endIndex() { return this.endIndex$get() }*/ ;
    /*Swift.(file).ArraySlice.index(after:Int)*/
    /*Swift.(file).RandomAccessCollection.index(after:Self.Index)*/
    /*Swift.(file).BidirectionalCollection.index(after:Self.Index)*/
    /*Swift.(file).Collection.index(after:Self.Index)*/
    ArraySlice.prototype.indexAfter = function ($info, i) {
    };
    /*Swift.(file).ArraySlice.formIndex(after:Int)*/
    /*Swift.(file).RandomAccessCollection.formIndex(after:Self.Index)*/
    /*Swift.(file).BidirectionalCollection.formIndex(after:Self.Index)*/
    /*Swift.(file).Collection.formIndex(after:Self.Index)*/
    ArraySlice.prototype.formIndexAfter = function ($info, i$inout) {
    };
    /*Swift.(file).ArraySlice.index(before:Int)*/
    /*Swift.(file).RandomAccessCollection.index(before:Self.Index)*/
    /*Swift.(file).BidirectionalCollection.index(before:Self.Index)*/
    ArraySlice.prototype.indexBefore = function ($info, i) {
    };
    /*Swift.(file).ArraySlice.formIndex(before:Int)*/
    /*Swift.(file).RandomAccessCollection.formIndex(before:Self.Index)*/
    /*Swift.(file).BidirectionalCollection.formIndex(before:Self.Index)*/
    ArraySlice.prototype.formIndexBefore = function ($info, i$inout) {
    };
    /*Swift.(file).ArraySlice.index(_:Int,offsetBy:Int)*/
    /*Swift.(file).RandomAccessCollection.index(_:Self.Index,offsetBy:Int)*/
    /*Swift.(file).BidirectionalCollection.index(_:Self.Index,offsetBy:Int)*/
    /*Swift.(file).Collection.index(_:Self.Index,offsetBy:Int)*/
    ArraySlice.prototype.indexOffsetBy = function ($info, i, distance) {
    };
    /*Swift.(file).ArraySlice.index(_:Int,offsetBy:Int,limitedBy:Int)*/
    /*Swift.(file).RandomAccessCollection.index(_:Self.Index,offsetBy:Int,limitedBy:Self.Index)*/
    /*Swift.(file).BidirectionalCollection.index(_:Self.Index,offsetBy:Int,limitedBy:Self.Index)*/
    /*Swift.(file).Collection.index(_:Self.Index,offsetBy:Int,limitedBy:Self.Index)*/
    ArraySlice.prototype.indexOffsetByLimitedBy = function ($info, i, distance, limit) {
    };
    /*Swift.(file).ArraySlice.distance(from:Int,to:Int)*/
    /*Swift.(file).RandomAccessCollection.distance(from:Self.Index,to:Self.Index)*/
    /*Swift.(file).BidirectionalCollection.distance(from:Self.Index,to:Self.Index)*/
    /*Swift.(file).Collection.distance(from:Self.Index,to:Self.Index)*/
    ArraySlice.prototype.distanceFromTo = function ($info, start, end) {
    };
    /*Swift.(file).ArraySlice.subscript(_:Int)*/
    /*Swift.(file).RandomAccessCollection.subscript(_:Self.Index)*/
    /*Swift.(file).MutableCollection.subscript(_:Self.Index)*/
    /*Swift.(file).BidirectionalCollection.subscript(_:Self.Index)*/
    /*Swift.(file).Collection.subscript(_:Self.Index)*/
    /*Swift.(file).RangeReplaceableCollection.subscript(_:Self.Index)*/
    ArraySlice.prototype.subscript$get = function ($info, index) {
        return this[index];
    }; /*Swift.(file).ArraySlice.subscript(_:Int)*/
    /*Swift.(file).RandomAccessCollection.subscript(_:Self.Index)*/
    /*Swift.(file).MutableCollection.subscript(_:Self.Index)*/
    /*Swift.(file).BidirectionalCollection.subscript(_:Self.Index)*/
    /*Swift.(file).Collection.subscript(_:Self.Index)*/
    /*Swift.(file).RangeReplaceableCollection.subscript(_:Self.Index)*/
    ArraySlice.prototype.subscript$_modify = function ($info, index) {
        return this[index];
    };
    /*Swift.(file).ArraySlice.subscript(_:Range<Int>)*/
    /*Swift.(file).RandomAccessCollection.subscript(_:Range<Self.Index>)*/
    /*Swift.(file).MutableCollection.subscript(_:Range<Self.Index>)*/
    /*Swift.(file).BidirectionalCollection.subscript(_:Range<Self.Index>)*/
    /*Swift.(file).Collection.subscript(_:Range<Self.Index>)*/
    /*Swift.(file).RangeReplaceableCollection.subscript(_:Range<Self.Index>)*/
    ArraySlice.prototype.subcriptRange$get = function ($info, bounds) {
        return this[bounds];
    }; /*Swift.(file).ArraySlice.subscript(_:Range<Int>)*/
    /*Swift.(file).RandomAccessCollection.subscript(_:Range<Self.Index>)*/
    /*Swift.(file).MutableCollection.subscript(_:Range<Self.Index>)*/
    /*Swift.(file).BidirectionalCollection.subscript(_:Range<Self.Index>)*/
    /*Swift.(file).Collection.subscript(_:Range<Self.Index>)*/
    /*Swift.(file).RangeReplaceableCollection.subscript(_:Range<Self.Index>)*/
    ArraySlice.prototype.subcriptRange$set = function ($info, rhs, bounds) {
        this[bounds] = rhs;
    };
    /*Swift.(file).ArraySlice.count*/ /*
    count$get() {
    return this.count
    }
    get count() { return this.count$get() }*/ ;
    /*Swift.(file).ArraySlice.init(arrayLiteral:[Element])*/
    /*Swift.(file).ExpressibleByArrayLiteral.init(arrayLiteral:[Self.ArrayLiteralElement])*/
    ArraySlice.prototype.initArrayLiteralArray = function ($info, _elements) {
        return _elements;
    };
    /*Swift.(file).ArraySlice.init()*/
    /*Swift.(file).RangeReplaceableCollection.init()*/
    ArraySlice.prototype.init = function ($info) {
    };
    /*Swift.(file).ArraySlice.init(_:S)*/
    /*Swift.(file).RangeReplaceableCollection.init(_:S)*/
    /*Swift.(file)._ArrayProtocol.init(_:Self._Buffer)*/
    ArraySlice.prototype.initBuffer = function ($info, s) {
        return s;
    };
    /*Swift.(file).ArraySlice.init(repeating:Element,count:Int)*/
    /*Swift.(file).RangeReplaceableCollection.init(repeating:Self.Element,count:Int)*/
    ArraySlice.prototype.initRepeatingCountInt = function ($info, repeatedValue, count) {
    };
    /*Swift.(file).ArraySlice.init(_uninitializedCount:Int)*/
    /*Swift.(file).ArraySlice.init(_uninitializedCount:Int)*/
    ArraySlice.prototype.init_uninitializedCountInt = function ($info, count) {
        return count;
    };
    /*Swift.(file).ArraySlice.reserveCapacity(_:Int)*/
    /*Swift.(file).RangeReplaceableCollection.reserveCapacity(_:Int)*/
    /*Swift.(file)._ArrayProtocol.reserveCapacity(_:Int)*/
    ArraySlice.prototype.reserveCapacity = function ($info, minimumCapacity) {
    };
    /*Swift.(file).ArraySlice.append(_:Element)*/
    /*Swift.(file).RangeReplaceableCollection.append(_:Self.Element)*/
    ArraySlice.prototype.append = function ($info, newElement) {
    };
    /*Swift.(file).ArraySlice.append(contentsOf:S)*/
    /*Swift.(file).RangeReplaceableCollection.append(contentsOf:S)*/
    ArraySlice.prototype.appendContentsOf = function ($info, newElements) {
    };
    /*Swift.(file).ArraySlice.reserveCapacityForAppend(newElementsCount:Int)*/
    /*Swift.(file).ArraySlice.reserveCapacityForAppend(newElementsCount:Int)*/
    ArraySlice.prototype.reserveCapacityForAppendNewElementsCount = function ($info, newElementsCount) {
    };
    /*Swift.(file).ArraySlice.remove(at:Int)*/
    /*Swift.(file).RangeReplaceableCollection.remove(at:Self.Index)*/
    /*Swift.(file)._ArrayProtocol.remove(at:Int)*/
    ArraySlice.prototype.removeAt = function ($info, index) {
    };
    /*Swift.(file).ArraySlice.insert(_:Element,at:Int)*/
    /*Swift.(file).RangeReplaceableCollection.insert(_:Self.Element,at:Self.Index)*/
    /*Swift.(file)._ArrayProtocol.insert(_:Self.Element,at:Int)*/
    ArraySlice.prototype.insertAt = function ($info, newElement, i) {
    };
    /*Swift.(file).ArraySlice.removeAll(keepingCapacity:Bool)*/
    /*Swift.(file).RangeReplaceableCollection.removeAll(keepingCapacity:Bool)*/
    ArraySlice.prototype.removeAllKeepingCapacity = function ($info, keepCapacity) {
    };
    /*Swift.(file).ArraySlice.withContiguousMutableStorageIfAvailable(_:(inout UnsafeMutableBufferPointer<Element>) throws -> R)*/
    /*Swift.(file).MutableCollection.withContiguousMutableStorageIfAvailable(_:(inout UnsafeMutableBufferPointer<Self.Element>) throws -> R)*/
    ArraySlice.prototype.withContiguousMutableStorageIfAvailable = function ($info, body) {
    };
    /*Swift.(file).ArraySlice.withContiguousStorageIfAvailable(_:(UnsafeBufferPointer<Element>) throws -> R)*/
    /*Swift.(file).Sequence.withContiguousStorageIfAvailable(_:(UnsafeBufferPointer<Self.Element>) throws -> R)*/
    ArraySlice.prototype.withContiguousStorageIfAvailable = function ($info, body) {
    };
    /*Swift.(file).ArraySlice.customMirror*/ /*
    customMirror$get() {
    return this.customMirror
    }
    get customMirror() { return this.customMirror$get() }*/ ;
    /*Swift.(file).ArraySlice.description*/ /*
    description$get() {
    return this.description
    }
    get description() { return this.description$get() }*/ ;
    /*Swift.(file).ArraySlice.debugDescription*/ /*
    debugDescription$get() {
    return this.debugDescription
    }
    get debugDescription() { return this.debugDescription$get() }*/ ;
    /*Swift.(file).ArraySlice.withUnsafeBufferPointer(_:(UnsafeBufferPointer<Element>) throws -> R)*/
    /*Swift.(file).ArraySlice.withUnsafeBufferPointer(_:(UnsafeBufferPointer<Element>) throws -> R)*/
    ArraySlice.prototype.withUnsafeBufferPointer = function ($info, body) {
    };
    /*Swift.(file).ArraySlice.withUnsafeMutableBufferPointer(_:(inout UnsafeMutableBufferPointer<Element>) throws -> R)*/
    /*Swift.(file).ArraySlice.withUnsafeMutableBufferPointer(_:(inout UnsafeMutableBufferPointer<Element>) throws -> R)*/
    ArraySlice.prototype.withUnsafeMutableBufferPointer = function ($info, body) {
    };
    /*Swift.(file).ArraySlice.replaceSubrange(_:Range<Int>,with:C)*/
    /*Swift.(file).RangeReplaceableCollection.replaceSubrange(_:Range<Self.Index>,with:C)*/
    ArraySlice.prototype.replaceSubrangeWith = function ($info, subrange, newElements) {
    };
    /*Swift.(file).ArraySlice.hash(into:Hasher)*/
    /*Swift.(file).Hashable.hash(into:Hasher)*/
    ArraySlice.prototype.hashInto = function ($info, hasher$inout) {
    };
    /*Swift.(file).ArraySlice.hashValue*/ /*
    hashValue$get() {
    return this.hashValue
    }
    get hashValue() { return this.hashValue$get() }*/ ;
    /*Swift.(file).ArraySlice.withUnsafeMutableBytes(_:(UnsafeMutableRawBufferPointer) throws -> R)*/
    /*Swift.(file).ArraySlice.withUnsafeMutableBytes(_:(UnsafeMutableRawBufferPointer) throws -> R)*/
    ArraySlice.prototype.withUnsafeMutableBytes = function ($info, body) {
    };
    /*Swift.(file).ArraySlice.withUnsafeBytes(_:(UnsafeRawBufferPointer) throws -> R)*/
    /*Swift.(file).ArraySlice.withUnsafeBytes(_:(UnsafeRawBufferPointer) throws -> R)*/
    ArraySlice.prototype.withUnsafeBytes = function ($info, body) {
    };
    /*Swift.(file).ArraySlice.init(_startIndex:Int)*/
    /*Swift.(file).ArraySlice.init(_startIndex:Int)*/
    ArraySlice.prototype.init_startIndexInt = function ($info, _startIndex) {
        return _startIndex;
    };
    ArraySlice.$struct = true;
    ArraySlice.$infoAddress = '0x7fb85180d698';
    return ArraySlice;
}());
if (typeof _DestructorSafeContainer$implementation != 'undefined')
    _mixin(ArraySlice, _DestructorSafeContainer$implementation, false);
if (typeof Equatable$implementation != 'undefined')
    _mixin(ArraySlice, Equatable$implementation, false);
if (typeof _ArrayProtocol$implementation != 'undefined')
    _mixin(ArraySlice, _ArrayProtocol$implementation, false);
if (typeof RandomAccessCollection$implementation != 'undefined')
    _mixin(ArraySlice, RandomAccessCollection$implementation, false);
if (typeof MutableCollection$implementation != 'undefined')
    _mixin(ArraySlice, MutableCollection$implementation, false);
if (typeof ExpressibleByArrayLiteral$implementation != 'undefined')
    _mixin(ArraySlice, ExpressibleByArrayLiteral$implementation, false);
if (typeof RangeReplaceableCollection$implementation != 'undefined')
    _mixin(ArraySlice, RangeReplaceableCollection$implementation, false);
if (typeof CustomReflectable$implementation != 'undefined')
    _mixin(ArraySlice, CustomReflectable$implementation, false);
if (typeof CustomStringConvertible$implementation != 'undefined')
    _mixin(ArraySlice, CustomStringConvertible$implementation, false);
if (typeof CustomDebugStringConvertible$implementation != 'undefined')
    _mixin(ArraySlice, CustomDebugStringConvertible$implementation, false);
if (typeof Hashable$implementation != 'undefined')
    _mixin(ArraySlice, Hashable$implementation, false);
var AutoreleasingUnsafeMutablePointer = /** @class */ (function () {
    function AutoreleasingUnsafeMutablePointer() {
    }
    /*Swift.(file).AutoreleasingUnsafeMutablePointer.init(_:RawPointer)*/
    /*Swift.(file)._Pointer.init(_:RawPointer)*/
    AutoreleasingUnsafeMutablePointer.prototype.initRawPointer = function ($info, _rawValue) {
        return _rawValue;
    };
    /*Swift.(file).AutoreleasingUnsafeMutablePointer.pointee*/ /*
    pointee$get() {
    return this.pointee
    }
    get pointee() { return this.pointee$get() }*/ ;
    /*Swift.(file).AutoreleasingUnsafeMutablePointer.subscript(_:Int)*/
    /*Swift.(file).AutoreleasingUnsafeMutablePointer.subscript(_:Int)*/
    AutoreleasingUnsafeMutablePointer.prototype.subscript$_read = function ($info, i) {
        return this[i];
    };
    /*Swift.(file).AutoreleasingUnsafeMutablePointer.init(_:UnsafePointer<U>)*/
    /*Swift.(file).AutoreleasingUnsafeMutablePointer.init(_:UnsafePointer<U>)*/
    AutoreleasingUnsafeMutablePointer.prototype.initUnsafePointer = function ($info, from) {
        return from;
    };
    /*Swift.(file).AutoreleasingUnsafeMutablePointer.init(_:UnsafePointer<U>?)*/
    /*Swift.(file).AutoreleasingUnsafeMutablePointer.init(_:UnsafePointer<U>?)*/
    AutoreleasingUnsafeMutablePointer.prototype.initOptional = function ($info, from) {
        return from;
    };
    /*Swift.(file).AutoreleasingUnsafeMutablePointer.hashValue*/ /*
    hashValue$get() {
    return this.hashValue
    }
    get hashValue() { return this.hashValue$get() }*/ ;
    AutoreleasingUnsafeMutablePointer.$struct = true;
    AutoreleasingUnsafeMutablePointer.$infoAddress = '0x7fb855032be0';
    return AutoreleasingUnsafeMutablePointer;
}());
if (typeof _Pointer$implementation != 'undefined')
    _mixin(AutoreleasingUnsafeMutablePointer, _Pointer$implementation, false);
if (typeof CVarArg$implementation != 'undefined')
    _mixin(AutoreleasingUnsafeMutablePointer, CVarArg$implementation, false);
var _CocoaArrayWrapper = /** @class */ (function () {
    function _CocoaArrayWrapper() {
    }
    /*Swift.(file)._CocoaArrayWrapper.init(_:AnyObject)*/
    /*Swift.(file)._CocoaArrayWrapper.init(_:AnyObject)*/
    _CocoaArrayWrapper.prototype.initAnyObject = function ($info, buffer) {
        return buffer;
    };
    /*Swift.(file)._CocoaArrayWrapper.core*/ /*
    core$get() {
    return this.core
    }
    get core() { return this.core$get() }*/ ;
    /*Swift.(file)._CocoaArrayWrapper.startIndex*/ /*
    startIndex$get() {
    return this.startIndex
    }
    get startIndex() { return this.startIndex$get() }*/ ;
    /*Swift.(file)._CocoaArrayWrapper.endIndex*/ /*
    endIndex$get() {
    return this.endIndex
    }
    get endIndex() { return this.endIndex$get() }*/ ;
    /*Swift.(file)._CocoaArrayWrapper.subscript(_:Int)*/
    /*Swift.(file).RandomAccessCollection.subscript(_:Self.Index)*/
    /*Swift.(file).BidirectionalCollection.subscript(_:Self.Index)*/
    /*Swift.(file).Collection.subscript(_:Self.Index)*/
    _CocoaArrayWrapper.prototype.subscript$get = function ($info, i) {
        return this[i];
    };
    /*Swift.(file)._CocoaArrayWrapper.subscript(_:Range<Int>)*/
    /*Swift.(file).RandomAccessCollection.subscript(_:Range<Self.Index>)*/
    /*Swift.(file).BidirectionalCollection.subscript(_:Range<Self.Index>)*/
    /*Swift.(file).Collection.subscript(_:Range<Self.Index>)*/
    _CocoaArrayWrapper.prototype.subcriptRange$get = function ($info, bounds) {
        return this[bounds];
    };
    /*Swift.(file)._CocoaArrayWrapper.contiguousStorage(_:Range<Int>)*/
    /*Swift.(file)._CocoaArrayWrapper.contiguousStorage(_:Range<Int>)*/
    _CocoaArrayWrapper.prototype.contiguousStorage = function ($info, subRange) {
    };
    _CocoaArrayWrapper.$struct = true;
    _CocoaArrayWrapper.$infoAddress = '0x7fb85123a8f0';
    return _CocoaArrayWrapper;
}());
if (typeof RandomAccessCollection$implementation != 'undefined')
    _mixin(_CocoaArrayWrapper, RandomAccessCollection$implementation, false);
var ContiguousArray = /** @class */ (function () {
    function ContiguousArray() {
    }
    /*Swift.(file).ContiguousArray.init(_buffer:ContiguousArray<Element>._Buffer)*/
    /*Swift.(file).ContiguousArray.init(_buffer:ContiguousArray<Element>._Buffer)*/
    ContiguousArray.prototype.init_bufferContiguousArray_Buffer = function ($info, _buffer) {
        return _buffer;
    };
    /*Swift.(file).ContiguousArray.==infix(_:ContiguousArray<Element>,_:ContiguousArray<Element>)*/
    /*Swift.(file).Equatable.==infix(_:Self,_:Self)*/
    ContiguousArray.infix_61_61 = function ($info, lhs, rhs) {
        return lhs == rhs;
    };
    /*Swift.(file).ContiguousArray.capacity*/ /*
    capacity$get() {
    return this.capacity
    }
    get capacity() { return this.capacity$get() }*/ ;
    /*Swift.(file).ContiguousArray.startIndex*/ /*
    startIndex$get() {
    return this.startIndex
    }
    get startIndex() { return this.startIndex$get() }*/ ;
    /*Swift.(file).ContiguousArray.endIndex*/ /*
    endIndex$get() {
    return this.endIndex
    }
    get endIndex() { return this.endIndex$get() }*/ ;
    /*Swift.(file).ContiguousArray.index(after:Int)*/
    /*Swift.(file).RandomAccessCollection.index(after:Self.Index)*/
    /*Swift.(file).BidirectionalCollection.index(after:Self.Index)*/
    /*Swift.(file).Collection.index(after:Self.Index)*/
    ContiguousArray.prototype.indexAfter = function ($info, i) {
    };
    /*Swift.(file).ContiguousArray.formIndex(after:Int)*/
    /*Swift.(file).RandomAccessCollection.formIndex(after:Self.Index)*/
    /*Swift.(file).BidirectionalCollection.formIndex(after:Self.Index)*/
    /*Swift.(file).Collection.formIndex(after:Self.Index)*/
    ContiguousArray.prototype.formIndexAfter = function ($info, i$inout) {
    };
    /*Swift.(file).ContiguousArray.index(before:Int)*/
    /*Swift.(file).RandomAccessCollection.index(before:Self.Index)*/
    /*Swift.(file).BidirectionalCollection.index(before:Self.Index)*/
    ContiguousArray.prototype.indexBefore = function ($info, i) {
    };
    /*Swift.(file).ContiguousArray.formIndex(before:Int)*/
    /*Swift.(file).RandomAccessCollection.formIndex(before:Self.Index)*/
    /*Swift.(file).BidirectionalCollection.formIndex(before:Self.Index)*/
    ContiguousArray.prototype.formIndexBefore = function ($info, i$inout) {
    };
    /*Swift.(file).ContiguousArray.index(_:Int,offsetBy:Int)*/
    /*Swift.(file).RandomAccessCollection.index(_:Self.Index,offsetBy:Int)*/
    /*Swift.(file).BidirectionalCollection.index(_:Self.Index,offsetBy:Int)*/
    /*Swift.(file).Collection.index(_:Self.Index,offsetBy:Int)*/
    ContiguousArray.prototype.indexOffsetBy = function ($info, i, distance) {
    };
    /*Swift.(file).ContiguousArray.index(_:Int,offsetBy:Int,limitedBy:Int)*/
    /*Swift.(file).RandomAccessCollection.index(_:Self.Index,offsetBy:Int,limitedBy:Self.Index)*/
    /*Swift.(file).BidirectionalCollection.index(_:Self.Index,offsetBy:Int,limitedBy:Self.Index)*/
    /*Swift.(file).Collection.index(_:Self.Index,offsetBy:Int,limitedBy:Self.Index)*/
    ContiguousArray.prototype.indexOffsetByLimitedBy = function ($info, i, distance, limit) {
    };
    /*Swift.(file).ContiguousArray.distance(from:Int,to:Int)*/
    /*Swift.(file).RandomAccessCollection.distance(from:Self.Index,to:Self.Index)*/
    /*Swift.(file).BidirectionalCollection.distance(from:Self.Index,to:Self.Index)*/
    /*Swift.(file).Collection.distance(from:Self.Index,to:Self.Index)*/
    ContiguousArray.prototype.distanceFromTo = function ($info, start, end) {
    };
    /*Swift.(file).ContiguousArray.subscript(_:Int)*/
    /*Swift.(file).RandomAccessCollection.subscript(_:Self.Index)*/
    /*Swift.(file).MutableCollection.subscript(_:Self.Index)*/
    /*Swift.(file).BidirectionalCollection.subscript(_:Self.Index)*/
    /*Swift.(file).Collection.subscript(_:Self.Index)*/
    /*Swift.(file).RangeReplaceableCollection.subscript(_:Self.Index)*/
    ContiguousArray.prototype.subscript$get = function ($info, index) {
        return this[index];
    }; /*Swift.(file).ContiguousArray.subscript(_:Int)*/
    /*Swift.(file).RandomAccessCollection.subscript(_:Self.Index)*/
    /*Swift.(file).MutableCollection.subscript(_:Self.Index)*/
    /*Swift.(file).BidirectionalCollection.subscript(_:Self.Index)*/
    /*Swift.(file).Collection.subscript(_:Self.Index)*/
    /*Swift.(file).RangeReplaceableCollection.subscript(_:Self.Index)*/
    ContiguousArray.prototype.subscript$_modify = function ($info, index) {
        return this[index];
    };
    /*Swift.(file).ContiguousArray.subscript(_:Range<Int>)*/
    /*Swift.(file).RandomAccessCollection.subscript(_:Range<Self.Index>)*/
    /*Swift.(file).MutableCollection.subscript(_:Range<Self.Index>)*/
    /*Swift.(file).BidirectionalCollection.subscript(_:Range<Self.Index>)*/
    /*Swift.(file).Collection.subscript(_:Range<Self.Index>)*/
    /*Swift.(file).RangeReplaceableCollection.subscript(_:Range<Self.Index>)*/
    ContiguousArray.prototype.subcriptRange$get = function ($info, bounds) {
        return this[bounds];
    }; /*Swift.(file).ContiguousArray.subscript(_:Range<Int>)*/
    /*Swift.(file).RandomAccessCollection.subscript(_:Range<Self.Index>)*/
    /*Swift.(file).MutableCollection.subscript(_:Range<Self.Index>)*/
    /*Swift.(file).BidirectionalCollection.subscript(_:Range<Self.Index>)*/
    /*Swift.(file).Collection.subscript(_:Range<Self.Index>)*/
    /*Swift.(file).RangeReplaceableCollection.subscript(_:Range<Self.Index>)*/
    ContiguousArray.prototype.subcriptRange$set = function ($info, rhs, bounds) {
        this[bounds] = rhs;
    };
    /*Swift.(file).ContiguousArray.count*/ /*
    count$get() {
    return this.count
    }
    get count() { return this.count$get() }*/ ;
    /*Swift.(file).ContiguousArray.init(arrayLiteral:[Element])*/
    /*Swift.(file).ExpressibleByArrayLiteral.init(arrayLiteral:[Self.ArrayLiteralElement])*/
    ContiguousArray.prototype.initArrayLiteralArray = function ($info, _elements) {
        return _elements;
    };
    /*Swift.(file).ContiguousArray.init()*/
    /*Swift.(file).RangeReplaceableCollection.init()*/
    ContiguousArray.prototype.init = function ($info) {
    };
    /*Swift.(file).ContiguousArray.init(_:S)*/
    /*Swift.(file)._ArrayProtocol.init(_:Self._Buffer)*/
    /*Swift.(file).RangeReplaceableCollection.init(_:S)*/
    ContiguousArray.prototype.initBuffer = function ($info, s) {
        return s;
    };
    /*Swift.(file).ContiguousArray.init(repeating:Element,count:Int)*/
    /*Swift.(file).RangeReplaceableCollection.init(repeating:Self.Element,count:Int)*/
    ContiguousArray.prototype.initRepeatingCountInt = function ($info, repeatedValue, count) {
    };
    /*Swift.(file).ContiguousArray.init(_uninitializedCount:Int)*/
    /*Swift.(file).ContiguousArray.init(_uninitializedCount:Int)*/
    ContiguousArray.prototype.init_uninitializedCountInt = function ($info, count) {
        return count;
    };
    /*Swift.(file).ContiguousArray.reserveCapacity(_:Int)*/
    /*Swift.(file)._ArrayProtocol.reserveCapacity(_:Int)*/
    /*Swift.(file).RangeReplaceableCollection.reserveCapacity(_:Int)*/
    ContiguousArray.prototype.reserveCapacity = function ($info, minimumCapacity) {
    };
    /*Swift.(file).ContiguousArray.append(_:Element)*/
    /*Swift.(file).RangeReplaceableCollection.append(_:Self.Element)*/
    ContiguousArray.prototype.append = function ($info, newElement) {
    };
    /*Swift.(file).ContiguousArray.append(contentsOf:S)*/
    /*Swift.(file).RangeReplaceableCollection.append(contentsOf:S)*/
    ContiguousArray.prototype.appendContentsOf = function ($info, newElements) {
    };
    /*Swift.(file).ContiguousArray.reserveCapacityForAppend(newElementsCount:Int)*/
    /*Swift.(file).ContiguousArray.reserveCapacityForAppend(newElementsCount:Int)*/
    ContiguousArray.prototype.reserveCapacityForAppendNewElementsCount = function ($info, newElementsCount) {
    };
    /*Swift.(file).ContiguousArray.remove(at:Int)*/
    /*Swift.(file)._ArrayProtocol.remove(at:Int)*/
    /*Swift.(file).RangeReplaceableCollection.remove(at:Self.Index)*/
    ContiguousArray.prototype.removeAt = function ($info, index) {
    };
    /*Swift.(file).ContiguousArray.insert(_:Element,at:Int)*/
    /*Swift.(file)._ArrayProtocol.insert(_:Self.Element,at:Int)*/
    /*Swift.(file).RangeReplaceableCollection.insert(_:Self.Element,at:Self.Index)*/
    ContiguousArray.prototype.insertAt = function ($info, newElement, i) {
    };
    /*Swift.(file).ContiguousArray.removeAll(keepingCapacity:Bool)*/
    /*Swift.(file).RangeReplaceableCollection.removeAll(keepingCapacity:Bool)*/
    ContiguousArray.prototype.removeAllKeepingCapacity = function ($info, keepCapacity) {
    };
    /*Swift.(file).ContiguousArray.withContiguousMutableStorageIfAvailable(_:(inout UnsafeMutableBufferPointer<Element>) throws -> R)*/
    /*Swift.(file).MutableCollection.withContiguousMutableStorageIfAvailable(_:(inout UnsafeMutableBufferPointer<Self.Element>) throws -> R)*/
    ContiguousArray.prototype.withContiguousMutableStorageIfAvailable = function ($info, body) {
    };
    /*Swift.(file).ContiguousArray.withContiguousStorageIfAvailable(_:(UnsafeBufferPointer<Element>) throws -> R)*/
    /*Swift.(file).Sequence.withContiguousStorageIfAvailable(_:(UnsafeBufferPointer<Self.Element>) throws -> R)*/
    ContiguousArray.prototype.withContiguousStorageIfAvailable = function ($info, body) {
    };
    /*Swift.(file).ContiguousArray.customMirror*/ /*
    customMirror$get() {
    return this.customMirror
    }
    get customMirror() { return this.customMirror$get() }*/ ;
    /*Swift.(file).ContiguousArray.description*/ /*
    description$get() {
    return this.description
    }
    get description() { return this.description$get() }*/ ;
    /*Swift.(file).ContiguousArray.debugDescription*/ /*
    debugDescription$get() {
    return this.debugDescription
    }
    get debugDescription() { return this.debugDescription$get() }*/ ;
    /*Swift.(file).ContiguousArray.withUnsafeBufferPointer(_:(UnsafeBufferPointer<Element>) throws -> R)*/
    /*Swift.(file).ContiguousArray.withUnsafeBufferPointer(_:(UnsafeBufferPointer<Element>) throws -> R)*/
    ContiguousArray.prototype.withUnsafeBufferPointer = function ($info, body) {
    };
    /*Swift.(file).ContiguousArray.withUnsafeMutableBufferPointer(_:(inout UnsafeMutableBufferPointer<Element>) throws -> R)*/
    /*Swift.(file).ContiguousArray.withUnsafeMutableBufferPointer(_:(inout UnsafeMutableBufferPointer<Element>) throws -> R)*/
    ContiguousArray.prototype.withUnsafeMutableBufferPointer = function ($info, body) {
    };
    /*Swift.(file).ContiguousArray.replaceSubrange(_:Range<Int>,with:C)*/
    /*Swift.(file).RangeReplaceableCollection.replaceSubrange(_:Range<Self.Index>,with:C)*/
    ContiguousArray.prototype.replaceSubrangeWith = function ($info, subrange, newElements) {
    };
    /*Swift.(file).ContiguousArray.hash(into:Hasher)*/
    /*Swift.(file).Hashable.hash(into:Hasher)*/
    ContiguousArray.prototype.hashInto = function ($info, hasher$inout) {
    };
    /*Swift.(file).ContiguousArray.hashValue*/ /*
    hashValue$get() {
    return this.hashValue
    }
    get hashValue() { return this.hashValue$get() }*/ ;
    /*Swift.(file).ContiguousArray.withUnsafeMutableBytes(_:(UnsafeMutableRawBufferPointer) throws -> R)*/
    /*Swift.(file).ContiguousArray.withUnsafeMutableBytes(_:(UnsafeMutableRawBufferPointer) throws -> R)*/
    ContiguousArray.prototype.withUnsafeMutableBytes = function ($info, body) {
    };
    /*Swift.(file).ContiguousArray.withUnsafeBytes(_:(UnsafeRawBufferPointer) throws -> R)*/
    /*Swift.(file)._HasContiguousBytes.withUnsafeBytes(_:(UnsafeRawBufferPointer) throws -> R)*/
    ContiguousArray.prototype.withUnsafeBytes = function ($info, body) {
    };
    ContiguousArray.$struct = true;
    ContiguousArray.$infoAddress = '0x7fb85180ec60';
    return ContiguousArray;
}());
if (typeof _DestructorSafeContainer$implementation != 'undefined')
    _mixin(ContiguousArray, _DestructorSafeContainer$implementation, false);
if (typeof Equatable$implementation != 'undefined')
    _mixin(ContiguousArray, Equatable$implementation, false);
if (typeof _ArrayProtocol$implementation != 'undefined')
    _mixin(ContiguousArray, _ArrayProtocol$implementation, false);
if (typeof RandomAccessCollection$implementation != 'undefined')
    _mixin(ContiguousArray, RandomAccessCollection$implementation, false);
if (typeof MutableCollection$implementation != 'undefined')
    _mixin(ContiguousArray, MutableCollection$implementation, false);
if (typeof ExpressibleByArrayLiteral$implementation != 'undefined')
    _mixin(ContiguousArray, ExpressibleByArrayLiteral$implementation, false);
if (typeof RangeReplaceableCollection$implementation != 'undefined')
    _mixin(ContiguousArray, RangeReplaceableCollection$implementation, false);
if (typeof CustomReflectable$implementation != 'undefined')
    _mixin(ContiguousArray, CustomReflectable$implementation, false);
if (typeof CustomStringConvertible$implementation != 'undefined')
    _mixin(ContiguousArray, CustomStringConvertible$implementation, false);
if (typeof CustomDebugStringConvertible$implementation != 'undefined')
    _mixin(ContiguousArray, CustomDebugStringConvertible$implementation, false);
if (typeof Hashable$implementation != 'undefined')
    _mixin(ContiguousArray, Hashable$implementation, false);
if (typeof _HasContiguousBytes$implementation != 'undefined')
    _mixin(ContiguousArray, _HasContiguousBytes$implementation, false);
var ClosedRange = /** @class */ (function () {
    function ClosedRange() {
    }
    /*Swift.(file).ClosedRange.lowerBound*/
    ClosedRange.prototype.lowerBound$get = function () {
        return this.lowerBound$internal;
    };
    Object.defineProperty(ClosedRange.prototype, "lowerBound", {
        get: function () { return this.lowerBound$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).ClosedRange.upperBound*/
    ClosedRange.prototype.upperBound$get = function () {
        return this.upperBound$internal;
    };
    Object.defineProperty(ClosedRange.prototype, "upperBound", {
        get: function () { return this.upperBound$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).ClosedRange.init(uncheckedBounds:(lower: Bound, upper: Bound))*/
    /*Swift.(file).ClosedRange.init(uncheckedBounds:(lower: Bound, upper: Bound))*/
    ClosedRange.prototype.initUncheckedBoundstuple_type = function ($info, bounds) {
        this.lowerBound$internal = bounds[0];
        this.upperBound$internal = bounds[1];
    };
    /*Swift.(file).ClosedRange.==infix(_:ClosedRange<Bound>,_:ClosedRange<Bound>)*/
    /*Swift.(file).Equatable.==infix(_:Self,_:Self)*/
    ClosedRange.infix_61_61 = function ($info, lhs, rhs) {
        return lhs == rhs;
    };
    /*Swift.(file).ClosedRange.isEmpty*/ /*
    isEmpty$get() {
    return this.isEmpty
    }
    get isEmpty() { return this.isEmpty$get() }*/ ;
    /*Swift.(file).ClosedRange.relative(to:C)*/
    /*Swift.(file).RangeExpression.relative(to:C)*/
    ClosedRange.prototype.relativeTo = function ($info, collection) {
    };
    /*Swift.(file).ClosedRange.contains(_:Bound)*/
    /*Swift.(file).RangeExpression.contains(_:Self.Bound)*/
    ClosedRange.prototype.contains = function ($info, _element) {
        return _element >= this.lowerBound && _element <= this.upperBound;
    };
    /*Swift.(file).ClosedRange.startIndex*/ /*
    startIndex$get() {
    return this.startIndex
    }
    get startIndex() { return this.startIndex$get() }*/ ;
    /*Swift.(file).ClosedRange.endIndex*/ /*
    endIndex$get() {
    return this.endIndex
    }
    get endIndex() { return this.endIndex$get() }*/ ;
    /*Swift.(file).ClosedRange.index(after:ClosedRange<Bound>.Index)*/
    /*Swift.(file).Collection.index(after:Self.Index)*/
    /*Swift.(file).BidirectionalCollection.index(after:Self.Index)*/
    /*Swift.(file).RandomAccessCollection.index(after:Self.Index)*/
    ClosedRange.prototype.indexAfter = function ($info, i) {
    };
    /*Swift.(file).ClosedRange.index(before:ClosedRange<Bound>.Index)*/
    /*Swift.(file).BidirectionalCollection.index(before:Self.Index)*/
    /*Swift.(file).RandomAccessCollection.index(before:Self.Index)*/
    ClosedRange.prototype.indexBefore = function ($info, i) {
    };
    /*Swift.(file).ClosedRange.index(_:ClosedRange<Bound>.Index,offsetBy:Int)*/
    /*Swift.(file).Collection.index(_:Self.Index,offsetBy:Int)*/
    /*Swift.(file).BidirectionalCollection.index(_:Self.Index,offsetBy:Int)*/
    /*Swift.(file).RandomAccessCollection.index(_:Self.Index,offsetBy:Int)*/
    ClosedRange.prototype.indexOffsetBy = function ($info, i, distance) {
    };
    /*Swift.(file).ClosedRange.distance(from:ClosedRange<Bound>.Index,to:ClosedRange<Bound>.Index)*/
    /*Swift.(file).Collection.distance(from:Self.Index,to:Self.Index)*/
    /*Swift.(file).BidirectionalCollection.distance(from:Self.Index,to:Self.Index)*/
    /*Swift.(file).RandomAccessCollection.distance(from:Self.Index,to:Self.Index)*/
    ClosedRange.prototype.distanceFromTo = function ($info, start, end) {
    };
    /*Swift.(file).ClosedRange.subscript(_:ClosedRange<Bound>.Index)*/
    /*Swift.(file).Collection.subscript(_:Self.Index)*/
    /*Swift.(file).BidirectionalCollection.subscript(_:Self.Index)*/
    /*Swift.(file).RandomAccessCollection.subscript(_:Self.Index)*/
    ClosedRange.prototype.subscript$get = function ($info, position) {
        return this[position];
    };
    /*Swift.(file).ClosedRange.subscript(_:Range<ClosedRange<Bound>.Index>)*/
    /*Swift.(file).Collection.subscript(_:Range<Self.Index>)*/
    /*Swift.(file).BidirectionalCollection.subscript(_:Range<Self.Index>)*/
    /*Swift.(file).RandomAccessCollection.subscript(_:Range<Self.Index>)*/
    ClosedRange.prototype.subcriptRange$get = function ($info, bounds) {
        return this[bounds];
    };
    /*Swift.(file).ClosedRange.hash(into:Hasher)*/
    /*Swift.(file).Hashable.hash(into:Hasher)*/
    ClosedRange.prototype.hashInto = function ($info, hasher$inout) {
    };
    /*Swift.(file).ClosedRange.hashValue*/ /*
    hashValue$get() {
    return this.hashValue
    }
    get hashValue() { return this.hashValue$get() }*/ ;
    /*Swift.(file).ClosedRange.description*/ /*
    description$get() {
    return this.description
    }
    get description() { return this.description$get() }*/ ;
    /*Swift.(file).ClosedRange.debugDescription*/ /*
    debugDescription$get() {
    return this.debugDescription
    }
    get debugDescription() { return this.debugDescription$get() }*/ ;
    /*Swift.(file).ClosedRange.customMirror*/ /*
    customMirror$get() {
    return this.customMirror
    }
    get customMirror() { return this.customMirror$get() }*/ ;
    /*Swift.(file).ClosedRange.clamped(to:ClosedRange<Bound>)*/
    /*Swift.(file).ClosedRange.clamped(to:ClosedRange<Bound>)*/
    ClosedRange.prototype.clampedTo = function ($info, limits) {
    };
    /*Swift.(file).ClosedRange.init(_:Range<Bound>)*/
    /*Swift.(file).ClosedRange.init(_:Range<Bound>)*/
    ClosedRange.prototype.initRange = function ($info, other) {
        return other;
    };
    /*Swift.(file).ClosedRange.overlaps(_:ClosedRange<Bound>)*/
    /*Swift.(file).ClosedRange.overlaps(_:ClosedRange<Bound>)*/
    ClosedRange.prototype.overlaps = function ($info, other) {
    };
    /*Swift.(file).ClosedRange.overlaps(_:Range<Bound>)*/
    /*Swift.(file).ClosedRange.overlaps(_:Range<Bound>)*/
    ClosedRange.prototype.overlaps = function ($info, other) {
    };
    /*Swift.(file).ClosedRange.init(_:ClosedRange<Bound>)*/
    /*Swift.(file).ClosedRange.init(_:ClosedRange<Bound>)*/
    ClosedRange.prototype.initClosedRange = function ($info, other) {
        return other;
    };
    var _79;
    ClosedRange.$struct = true;
    ClosedRange.$infoAddress = '0x7fb851812770';
    ClosedRange.Index = (_79 = /** @class */ (function () {
            function class_103() {
            }
            Object.defineProperty(class_103, "pastEnd", {
                get: function () { return Object.assign(new ClosedRange.Index(), __assign({ rawValue: "pastEnd" }, Array.from(arguments).slice(1))); },
                enumerable: true,
                configurable: true
            });
            class_103.inRange = function () { return Object.assign(new ClosedRange.Index(), __assign({ rawValue: "inRange" }, Array.from(arguments).slice(1))); };
            /*Swift.(file).Index.==infix(_:ClosedRange<Bound>.Index,_:ClosedRange<Bound>.Index)*/
            /*Swift.(file).Equatable.==infix(_:Self,_:Self)*/
            class_103.infix_61_61 = function ($info, lhs, rhs) {
                return lhs == rhs;
            };
            /*Swift.(file).Index.<infix(_:ClosedRange<Bound>.Index,_:ClosedRange<Bound>.Index)*/
            /*Swift.(file).Comparable.<infix(_:Self,_:Self)*/
            class_103.infix_60 = function ($info, lhs, rhs) {
                return lhs < rhs;
            };
            /*Swift.(file).Index.hash(into:Hasher)*/
            /*Swift.(file).Hashable.hash(into:Hasher)*/
            class_103.prototype.hashInto = function ($info, hasher$inout) {
            };
            /*Swift.(file).Index.hashValue*/ /*
            hashValue$get() {
            return this.hashValue
            }
            get hashValue() { return this.hashValue$get() }*/ ;
            return class_103;
        }()),
        _79.$infoAddress = '0x7fb851812b48',
        _79);
    return ClosedRange;
}());
if (typeof Equatable$implementation != 'undefined')
    _mixin(ClosedRange, Equatable$implementation, false);
if (typeof RangeExpression$implementation != 'undefined')
    _mixin(ClosedRange, RangeExpression$implementation, false);
if (typeof Sequence$implementation != 'undefined')
    _mixin(ClosedRange, Sequence$implementation, false);
if (typeof Collection$implementation != 'undefined')
    _mixin(ClosedRange, Collection$implementation, false);
if (typeof BidirectionalCollection$implementation != 'undefined')
    _mixin(ClosedRange, BidirectionalCollection$implementation, false);
if (typeof RandomAccessCollection$implementation != 'undefined')
    _mixin(ClosedRange, RandomAccessCollection$implementation, false);
if (typeof Hashable$implementation != 'undefined')
    _mixin(ClosedRange, Hashable$implementation, false);
if (typeof CustomStringConvertible$implementation != 'undefined')
    _mixin(ClosedRange, CustomStringConvertible$implementation, false);
if (typeof CustomDebugStringConvertible$implementation != 'undefined')
    _mixin(ClosedRange, CustomDebugStringConvertible$implementation, false);
if (typeof CustomReflectable$implementation != 'undefined')
    _mixin(ClosedRange, CustomReflectable$implementation, false);
var _ContiguousArrayBuffer = /** @class */ (function () {
    function _ContiguousArrayBuffer() {
    }
    /*Swift.(file)._ContiguousArrayBuffer.init(_uninitializedCount:Int,minimumCapacity:Int)*/
    /*Swift.(file)._ContiguousArrayBuffer.init(_uninitializedCount:Int,minimumCapacity:Int)*/
    _ContiguousArrayBuffer.prototype.init_uninitializedCountIntMinimumCapacityInt = function ($info, uninitializedCount, minimumCapacity) {
    };
    /*Swift.(file)._ContiguousArrayBuffer.init(count:Int,storage:_ContiguousArrayStorage<Element>)*/
    /*Swift.(file)._ContiguousArrayBuffer.init(count:Int,storage:_ContiguousArrayStorage<Element>)*/
    _ContiguousArrayBuffer.prototype.initCountIntStorage_ContiguousArrayStorage = function ($info, count, storage) {
    };
    /*Swift.(file)._ContiguousArrayBuffer.init(_:__ContiguousArrayStorageBase)*/
    /*Swift.(file)._ContiguousArrayBuffer.init(_:__ContiguousArrayStorageBase)*/
    _ContiguousArrayBuffer.prototype.init__ContiguousArrayStorageBase = function ($info, storage) {
        return storage;
    };
    /*Swift.(file)._ContiguousArrayBuffer.arrayPropertyIsNativeTypeChecked*/ /*
    arrayPropertyIsNativeTypeChecked$get() {
    return this.arrayPropertyIsNativeTypeChecked
    }
    get arrayPropertyIsNativeTypeChecked() { return this.arrayPropertyIsNativeTypeChecked$get() }*/ ;
    /*Swift.(file)._ContiguousArrayBuffer.firstElementAddress*/ /*
    firstElementAddress$get() {
    return this.firstElementAddress
    }
    get firstElementAddress() { return this.firstElementAddress$get() }*/ ;
    /*Swift.(file)._ContiguousArrayBuffer.firstElementAddressIfContiguous*/ /*
    firstElementAddressIfContiguous$get() {
    return this.firstElementAddressIfContiguous
    }
    get firstElementAddressIfContiguous() { return this.firstElementAddressIfContiguous$get() }*/ ;
    /*Swift.(file)._ContiguousArrayBuffer.withUnsafeBufferPointer(_:(UnsafeBufferPointer<Element>) throws -> R)*/
    /*Swift.(file)._ArrayBufferProtocol.withUnsafeBufferPointer(_:(UnsafeBufferPointer<Self.Element>) throws -> R)*/
    _ContiguousArrayBuffer.prototype.withUnsafeBufferPointer = function ($info, body) {
    };
    /*Swift.(file)._ContiguousArrayBuffer.withUnsafeMutableBufferPointer(_:(UnsafeMutableBufferPointer<Element>) throws -> R)*/
    /*Swift.(file)._ArrayBufferProtocol.withUnsafeMutableBufferPointer(_:(UnsafeMutableBufferPointer<Self.Element>) throws -> R)*/
    _ContiguousArrayBuffer.prototype.withUnsafeMutableBufferPointer = function ($info, body) {
    };
    /*Swift.(file)._ContiguousArrayBuffer.init()*/
    /*Swift.(file)._ArrayBufferProtocol.init()*/
    _ContiguousArrayBuffer.prototype.init = function ($info) {
    };
    /*Swift.(file)._ContiguousArrayBuffer.init(_buffer:_ContiguousArrayBuffer<Element>,shiftedToStartIndex:Int)*/
    /*Swift.(file)._ArrayBufferProtocol.init(_buffer:_ContiguousArrayBuffer<Self.Element>,shiftedToStartIndex:Int)*/
    _ContiguousArrayBuffer.prototype.init_buffer_ContiguousArrayBufferShiftedToStartIndexInt = function ($info, buffer, shiftedToStartIndex) {
    };
    /*Swift.(file)._ContiguousArrayBuffer.requestUniqueMutableBackingBuffer(minimumCapacity:Int)*/
    /*Swift.(file)._ArrayBufferProtocol.requestUniqueMutableBackingBuffer(minimumCapacity:Int)*/
    _ContiguousArrayBuffer.prototype.requestUniqueMutableBackingBufferMinimumCapacity = function ($info, minimumCapacity) {
    };
    /*Swift.(file)._ContiguousArrayBuffer.isMutableAndUniquelyReferenced()*/
    /*Swift.(file)._ArrayBufferProtocol.isMutableAndUniquelyReferenced()*/
    _ContiguousArrayBuffer.prototype.isMutableAndUniquelyReferenced = function ($info) {
    };
    /*Swift.(file)._ContiguousArrayBuffer.requestNativeBuffer()*/
    /*Swift.(file)._ArrayBufferProtocol.requestNativeBuffer()*/
    _ContiguousArrayBuffer.prototype.requestNativeBuffer = function ($info) {
    };
    /*Swift.(file)._ContiguousArrayBuffer.getElement(_:Int)*/
    /*Swift.(file)._ContiguousArrayBuffer.getElement(_:Int)*/
    _ContiguousArrayBuffer.prototype.getElement = function ($info, i) {
    };
    /*Swift.(file)._ContiguousArrayBuffer.subscript(_:Int)*/
    /*Swift.(file).MutableCollection.subscript(_:Self.Index)*/
    /*Swift.(file).RandomAccessCollection.subscript(_:Self.Index)*/
    /*Swift.(file).BidirectionalCollection.subscript(_:Self.Index)*/
    /*Swift.(file).Collection.subscript(_:Self.Index)*/
    _ContiguousArrayBuffer.prototype.subscript$get = function ($info, i) {
        return this[i];
    }; /*Swift.(file)._ContiguousArrayBuffer.subscript(_:Int)*/
    /*Swift.(file).MutableCollection.subscript(_:Self.Index)*/
    /*Swift.(file).RandomAccessCollection.subscript(_:Self.Index)*/
    /*Swift.(file).BidirectionalCollection.subscript(_:Self.Index)*/
    /*Swift.(file).Collection.subscript(_:Self.Index)*/
    _ContiguousArrayBuffer.prototype.subscript$set = function ($info, newValue, i) {
        this[i] = newValue;
    };
    /*Swift.(file)._ContiguousArrayBuffer.count*/ /*
    count$get() {
    return this.count
    }
    get count() { return this.count$get() }*/ ;
    /*Swift.(file)._ContiguousArrayBuffer.capacity*/ /*
    capacity$get() {
    return this.capacity
    }
    get capacity() { return this.capacity$get() }*/ ;
    /*Swift.(file)._ContiguousArrayBuffer.subscript(_:Range<Int>)*/
    /*Swift.(file)._ArrayBufferProtocol.subscript(_:Range<Int>)*/
    /*Swift.(file).MutableCollection.subscript(_:Range<Self.Index>)*/
    /*Swift.(file).RandomAccessCollection.subscript(_:Range<Self.Index>)*/
    /*Swift.(file).BidirectionalCollection.subscript(_:Range<Self.Index>)*/
    /*Swift.(file).Collection.subscript(_:Range<Self.Index>)*/
    _ContiguousArrayBuffer.prototype.subscript$get = function ($info, bounds) {
        return this[bounds];
    };
    _ContiguousArrayBuffer.prototype.subcriptRange$get = function ($info, bounds) {
        this.subscript$get.apply(this, arguments);
    }; /*Swift.(file)._ContiguousArrayBuffer.subscript(_:Range<Int>)*/
    /*Swift.(file)._ArrayBufferProtocol.subscript(_:Range<Int>)*/
    /*Swift.(file).MutableCollection.subscript(_:Range<Self.Index>)*/
    /*Swift.(file).RandomAccessCollection.subscript(_:Range<Self.Index>)*/
    /*Swift.(file).BidirectionalCollection.subscript(_:Range<Self.Index>)*/
    /*Swift.(file).Collection.subscript(_:Range<Self.Index>)*/
    _ContiguousArrayBuffer.prototype.subscript$set = function ($info, newValue, bounds) {
        this[bounds] = newValue;
    };
    _ContiguousArrayBuffer.prototype.subcriptRange$set = function ($info, newValue, bounds) {
        this.subscript$set.apply(this, arguments);
    };
    /*Swift.(file)._ContiguousArrayBuffer.isUniquelyReferenced()*/
    /*Swift.(file)._ContiguousArrayBuffer.isUniquelyReferenced()*/
    _ContiguousArrayBuffer.prototype.isUniquelyReferenced = function ($info) {
    };
    /*Swift.(file)._ContiguousArrayBuffer.owner*/ /*
    owner$get() {
    return this.owner
    }
    get owner() { return this.owner$get() }*/ ;
    /*Swift.(file)._ContiguousArrayBuffer.nativeOwner*/ /*
    nativeOwner$get() {
    return this.nativeOwner
    }
    get nativeOwner() { return this.nativeOwner$get() }*/ ;
    /*Swift.(file)._ContiguousArrayBuffer.identity*/ /*
    identity$get() {
    return this.identity
    }
    get identity() { return this.identity$get() }*/ ;
    /*Swift.(file)._ContiguousArrayBuffer.canStoreElements(ofDynamicType:Any.Type)*/
    /*Swift.(file)._ContiguousArrayBuffer.canStoreElements(ofDynamicType:Any.Type)*/
    _ContiguousArrayBuffer.prototype.canStoreElementsOfDynamicType = function ($info, proposedElementType) {
    };
    /*Swift.(file)._ContiguousArrayBuffer.storesOnlyElementsOfType(_:U.Type)*/
    /*Swift.(file)._ContiguousArrayBuffer.storesOnlyElementsOfType(_:U.Type)*/
    _ContiguousArrayBuffer.prototype.storesOnlyElementsOfType = function ($info, _) {
    };
    /*Swift.(file)._ContiguousArrayBuffer.startIndex*/ /*
    startIndex$get() {
    return this.startIndex
    }
    get startIndex() { return this.startIndex$get() }*/ ;
    /*Swift.(file)._ContiguousArrayBuffer.endIndex*/ /*
    endIndex$get() {
    return this.endIndex
    }
    get endIndex() { return this.endIndex$get() }*/ ;
    _ContiguousArrayBuffer.$struct = true;
    _ContiguousArrayBuffer.$infoAddress = '0x7fb852aaa7a0';
    return _ContiguousArrayBuffer;
}());
if (typeof _ArrayBufferProtocol$implementation != 'undefined')
    _mixin(_ContiguousArrayBuffer, _ArrayBufferProtocol$implementation, false);
if (typeof RandomAccessCollection$implementation != 'undefined')
    _mixin(_ContiguousArrayBuffer, RandomAccessCollection$implementation, false);
var LazyDropWhileSequence = /** @class */ (function () {
    function LazyDropWhileSequence() {
    }
    /*Swift.(file).LazyDropWhileSequence.init(_base:Base,predicate:(LazyDropWhileSequence<Base>.Element) -> Bool)*/
    /*Swift.(file).LazyDropWhileSequence.init(_base:Base,predicate:(LazyDropWhileSequence<Base>.Element) -> Bool)*/
    LazyDropWhileSequence.prototype.init_basePredicatefunction_type = function ($info, _base, predicate) {
    };
    /*Swift.(file).LazyDropWhileSequence.makeIterator()*/
    /*Swift.(file).Sequence.makeIterator()*/
    /*Swift.(file).Collection.makeIterator()*/
    LazyDropWhileSequence.prototype.makeIterator = function ($info) {
        var _this = this;
        return new SwiftIterator(function (current) { return _this.contains(null, current + _this.lowerBound) ? current + _this.lowerBound : null; });
    };
    /*Swift.(file).LazyDropWhileSequence.startIndex*/ /*
    startIndex$get() {
    return this.startIndex
    }
    get startIndex() { return this.startIndex$get() }*/ ;
    /*Swift.(file).LazyDropWhileSequence.endIndex*/ /*
    endIndex$get() {
    return this.endIndex
    }
    get endIndex() { return this.endIndex$get() }*/ ;
    /*Swift.(file).LazyDropWhileSequence.index(after:LazyDropWhileSequence<Base>.Index)*/
    /*Swift.(file).Collection.index(after:Self.Index)*/
    /*Swift.(file).BidirectionalCollection.index(after:Self.Index)*/
    LazyDropWhileSequence.prototype.indexAfter = function ($info, i) {
    };
    /*Swift.(file).LazyDropWhileSequence.subscript(_:LazyDropWhileSequence<Base>.Index)*/
    /*Swift.(file).Collection.subscript(_:Self.Index)*/
    /*Swift.(file).BidirectionalCollection.subscript(_:Self.Index)*/
    LazyDropWhileSequence.prototype.subscript$get = function ($info, position) {
        return this[position];
    };
    /*Swift.(file).LazyDropWhileSequence.index(before:LazyDropWhileSequence<Base>.Index)*/
    /*Swift.(file).BidirectionalCollection.index(before:Self.Index)*/
    LazyDropWhileSequence.prototype.indexBefore = function ($info, i) {
    };
    var _80;
    LazyDropWhileSequence.$struct = true;
    LazyDropWhileSequence.$infoAddress = '0x7fb852aceeb8';
    LazyDropWhileSequence.Iterator = (_80 = /** @class */ (function () {
            function class_104() {
            }
            /*Swift.(file).LazyDropWhileSequence.Iterator.init(_base:Base.Iterator,predicate:(LazyDropWhileSequence<Base>.Iterator.Element) -> Bool)*/
            /*Swift.(file).LazyDropWhileSequence.Iterator.init(_base:Base.Iterator,predicate:(LazyDropWhileSequence<Base>.Iterator.Element) -> Bool)*/
            class_104.prototype.init_basePredicatefunction_type = function ($info, _base, predicate) {
            };
            /*Swift.(file).Iterator.next()*/
            /*Swift.(file).IteratorProtocol.next()*/
            class_104.prototype.next = function ($info) {
            };
            return class_104;
        }()),
        _80.$struct = true,
        _80.$infoAddress = '0x7fb852acf258',
        _80);
    return LazyDropWhileSequence;
}());
if (typeof IteratorProtocol$implementation != 'undefined')
    _mixin(LazyDropWhileSequence.Iterator, IteratorProtocol$implementation, false);
if (typeof Sequence$implementation != 'undefined')
    _mixin(LazyDropWhileSequence, Sequence$implementation, false);
if (typeof LazySequenceProtocol$implementation != 'undefined')
    _mixin(LazyDropWhileSequence, LazySequenceProtocol$implementation, false);
if (typeof Collection$implementation != 'undefined')
    _mixin(LazyDropWhileSequence, Collection$implementation, false);
if (typeof BidirectionalCollection$implementation != 'undefined')
    _mixin(LazyDropWhileSequence, BidirectionalCollection$implementation, false);
if (typeof LazyCollectionProtocol$implementation != 'undefined')
    _mixin(LazyDropWhileSequence, LazyCollectionProtocol$implementation, false);
var EmptyCollection = /** @class */ (function () {
    function EmptyCollection() {
    }
    /*Swift.(file).EmptyCollection.init()*/
    /*Swift.(file).EmptyCollection.init()*/
    EmptyCollection.prototype.init = function ($info) {
    };
    /*Swift.(file).EmptyCollection.==infix(_:EmptyCollection<Element>,_:EmptyCollection<Element>)*/
    /*Swift.(file).Equatable.==infix(_:Self,_:Self)*/
    EmptyCollection.infix_61_61 = function ($info, lhs, rhs) {
        return lhs == rhs;
    };
    /*Swift.(file).EmptyCollection.makeIterator()*/
    /*Swift.(file).Sequence.makeIterator()*/
    /*Swift.(file).Collection.makeIterator()*/
    EmptyCollection.prototype.makeIterator = function ($info) {
        var _this = this;
        return new SwiftIterator(function (current) { return _this.contains(null, current + _this.lowerBound) ? current + _this.lowerBound : null; });
    };
    /*Swift.(file).EmptyCollection.startIndex*/ /*
    startIndex$get() {
    return this.startIndex
    }
    get startIndex() { return this.startIndex$get() }*/ ;
    /*Swift.(file).EmptyCollection.endIndex*/ /*
    endIndex$get() {
    return this.endIndex
    }
    get endIndex() { return this.endIndex$get() }*/ ;
    /*Swift.(file).EmptyCollection.index(after:EmptyCollection<Element>.Index)*/
    /*Swift.(file).RandomAccessCollection.index(after:Self.Index)*/
    /*Swift.(file).BidirectionalCollection.index(after:Self.Index)*/
    /*Swift.(file).Collection.index(after:Self.Index)*/
    EmptyCollection.prototype.indexAfter = function ($info, i) {
    };
    /*Swift.(file).EmptyCollection.index(before:EmptyCollection<Element>.Index)*/
    /*Swift.(file).RandomAccessCollection.index(before:Self.Index)*/
    /*Swift.(file).BidirectionalCollection.index(before:Self.Index)*/
    EmptyCollection.prototype.indexBefore = function ($info, i) {
    };
    /*Swift.(file).EmptyCollection.subscript(_:EmptyCollection<Element>.Index)*/
    /*Swift.(file).RandomAccessCollection.subscript(_:Self.Index)*/
    /*Swift.(file).MutableCollection.subscript(_:Self.Index)*/
    /*Swift.(file).BidirectionalCollection.subscript(_:Self.Index)*/
    /*Swift.(file).Collection.subscript(_:Self.Index)*/
    EmptyCollection.prototype.subscript$get = function ($info, position) {
        return this[position];
    }; /*Swift.(file).EmptyCollection.subscript(_:EmptyCollection<Element>.Index)*/
    /*Swift.(file).RandomAccessCollection.subscript(_:Self.Index)*/
    /*Swift.(file).MutableCollection.subscript(_:Self.Index)*/
    /*Swift.(file).BidirectionalCollection.subscript(_:Self.Index)*/
    /*Swift.(file).Collection.subscript(_:Self.Index)*/
    EmptyCollection.prototype.subscript$set = function ($info, newValue, position) {
        this[position] = newValue;
    };
    /*Swift.(file).EmptyCollection.subscript(_:Range<EmptyCollection<Element>.Index>)*/
    /*Swift.(file).RandomAccessCollection.subscript(_:Range<Self.Index>)*/
    /*Swift.(file).MutableCollection.subscript(_:Range<Self.Index>)*/
    /*Swift.(file).BidirectionalCollection.subscript(_:Range<Self.Index>)*/
    /*Swift.(file).Collection.subscript(_:Range<Self.Index>)*/
    EmptyCollection.prototype.subcriptRange$get = function ($info, bounds) {
        return this[bounds];
    }; /*Swift.(file).EmptyCollection.subscript(_:Range<EmptyCollection<Element>.Index>)*/
    /*Swift.(file).RandomAccessCollection.subscript(_:Range<Self.Index>)*/
    /*Swift.(file).MutableCollection.subscript(_:Range<Self.Index>)*/
    /*Swift.(file).BidirectionalCollection.subscript(_:Range<Self.Index>)*/
    /*Swift.(file).Collection.subscript(_:Range<Self.Index>)*/
    EmptyCollection.prototype.subcriptRange$set = function ($info, newValue, bounds) {
        this[bounds] = newValue;
    };
    /*Swift.(file).EmptyCollection.count*/ /*
    count$get() {
    return this.count
    }
    get count() { return this.count$get() }*/ ;
    /*Swift.(file).EmptyCollection.index(_:EmptyCollection<Element>.Index,offsetBy:Int)*/
    /*Swift.(file).RandomAccessCollection.index(_:Self.Index,offsetBy:Int)*/
    /*Swift.(file).BidirectionalCollection.index(_:Self.Index,offsetBy:Int)*/
    /*Swift.(file).Collection.index(_:Self.Index,offsetBy:Int)*/
    EmptyCollection.prototype.indexOffsetBy = function ($info, i, n) {
    };
    /*Swift.(file).EmptyCollection.index(_:EmptyCollection<Element>.Index,offsetBy:Int,limitedBy:EmptyCollection<Element>.Index)*/
    /*Swift.(file).RandomAccessCollection.index(_:Self.Index,offsetBy:Int,limitedBy:Self.Index)*/
    /*Swift.(file).BidirectionalCollection.index(_:Self.Index,offsetBy:Int,limitedBy:Self.Index)*/
    /*Swift.(file).Collection.index(_:Self.Index,offsetBy:Int,limitedBy:Self.Index)*/
    EmptyCollection.prototype.indexOffsetByLimitedBy = function ($info, i, n, limit) {
    };
    /*Swift.(file).EmptyCollection.distance(from:EmptyCollection<Element>.Index,to:EmptyCollection<Element>.Index)*/
    /*Swift.(file).RandomAccessCollection.distance(from:Self.Index,to:Self.Index)*/
    /*Swift.(file).BidirectionalCollection.distance(from:Self.Index,to:Self.Index)*/
    /*Swift.(file).Collection.distance(from:Self.Index,to:Self.Index)*/
    EmptyCollection.prototype.distanceFromTo = function ($info, start, end) {
    };
    var _81;
    EmptyCollection.$struct = true;
    EmptyCollection.$infoAddress = '0x7fb85181dbd0';
    EmptyCollection.Iterator = (_81 = /** @class */ (function () {
            function class_105() {
            }
            /*Swift.(file).EmptyCollection.Iterator.init()*/
            /*Swift.(file).EmptyCollection.Iterator.init()*/
            class_105.prototype.init = function ($info) {
            };
            /*Swift.(file).Iterator.next()*/
            /*Swift.(file).IteratorProtocol.next()*/
            class_105.prototype.next = function ($info) {
            };
            return class_105;
        }()),
        _81.$struct = true,
        _81.$infoAddress = '0x7fb852ad2a58',
        _81);
    return EmptyCollection;
}());
if (typeof IteratorProtocol$implementation != 'undefined')
    _mixin(EmptyCollection.Iterator, IteratorProtocol$implementation, false);
if (typeof Sequence$implementation != 'undefined')
    _mixin(EmptyCollection.Iterator, Sequence$implementation, false);
if (typeof Equatable$implementation != 'undefined')
    _mixin(EmptyCollection, Equatable$implementation, false);
if (typeof Sequence$implementation != 'undefined')
    _mixin(EmptyCollection, Sequence$implementation, false);
if (typeof RandomAccessCollection$implementation != 'undefined')
    _mixin(EmptyCollection, RandomAccessCollection$implementation, false);
if (typeof MutableCollection$implementation != 'undefined')
    _mixin(EmptyCollection, MutableCollection$implementation, false);
var LazyFilterSequence = /** @class */ (function () {
    function LazyFilterSequence() {
    }
    /*Swift.(file).LazyFilterSequence.init(_base:Base,_:(Base.Element) -> Bool)*/
    /*Swift.(file).LazyFilterSequence.init(_base:Base,_:(Base.Element) -> Bool)*/
    LazyFilterSequence.prototype.init_basefunction_type = function ($info, base, isIncluded) {
    };
    /*Swift.(file).LazyFilterSequence.makeIterator()*/
    /*Swift.(file).Sequence.makeIterator()*/
    /*Swift.(file).Collection.makeIterator()*/
    LazyFilterSequence.prototype.makeIterator = function ($info) {
        var _this = this;
        return new SwiftIterator(function (current) { return _this.contains(null, current + _this.lowerBound) ? current + _this.lowerBound : null; });
    };
    /*Swift.(file).LazyFilterSequence.underestimatedCount*/ /*
    underestimatedCount$get() {
    return this.underestimatedCount
    }
    get underestimatedCount() { return this.underestimatedCount$get() }*/ ;
    /*Swift.(file).LazyFilterSequence.startIndex*/ /*
    startIndex$get() {
    return this.startIndex
    }
    get startIndex() { return this.startIndex$get() }*/ ;
    /*Swift.(file).LazyFilterSequence.endIndex*/ /*
    endIndex$get() {
    return this.endIndex
    }
    get endIndex() { return this.endIndex$get() }*/ ;
    /*Swift.(file).LazyFilterSequence.index(after:LazyFilterSequence<Base>.Index)*/
    /*Swift.(file).Collection.index(after:Self.Index)*/
    /*Swift.(file).BidirectionalCollection.index(after:Self.Index)*/
    LazyFilterSequence.prototype.indexAfter = function ($info, i) {
    };
    /*Swift.(file).LazyFilterSequence.formIndex(after:LazyFilterSequence<Base>.Index)*/
    /*Swift.(file).Collection.formIndex(after:Self.Index)*/
    /*Swift.(file).BidirectionalCollection.formIndex(after:Self.Index)*/
    LazyFilterSequence.prototype.formIndexAfter = function ($info, i$inout) {
    };
    /*Swift.(file).LazyFilterSequence.distance(from:LazyFilterSequence<Base>.Index,to:LazyFilterSequence<Base>.Index)*/
    /*Swift.(file).Collection.distance(from:Self.Index,to:Self.Index)*/
    /*Swift.(file).BidirectionalCollection.distance(from:Self.Index,to:Self.Index)*/
    LazyFilterSequence.prototype.distanceFromTo = function ($info, start, end) {
    };
    /*Swift.(file).LazyFilterSequence.index(_:LazyFilterSequence<Base>.Index,offsetBy:Int)*/
    /*Swift.(file).Collection.index(_:Self.Index,offsetBy:Int)*/
    /*Swift.(file).BidirectionalCollection.index(_:Self.Index,offsetBy:Int)*/
    LazyFilterSequence.prototype.indexOffsetBy = function ($info, i, n) {
    };
    /*Swift.(file).LazyFilterSequence.formIndex(_:LazyFilterSequence<Base>.Index,offsetBy:Int)*/
    /*Swift.(file).LazyFilterSequence.formIndex(_:LazyFilterSequence<Base>.Index,offsetBy:Int)*/
    LazyFilterSequence.prototype.formIndexOffsetBy = function ($info, i$inout, n) {
    };
    /*Swift.(file).LazyFilterSequence.index(_:LazyFilterSequence<Base>.Index,offsetBy:Int,limitedBy:LazyFilterSequence<Base>.Index)*/
    /*Swift.(file).Collection.index(_:Self.Index,offsetBy:Int,limitedBy:Self.Index)*/
    /*Swift.(file).BidirectionalCollection.index(_:Self.Index,offsetBy:Int,limitedBy:Self.Index)*/
    LazyFilterSequence.prototype.indexOffsetByLimitedBy = function ($info, i, n, limit) {
    };
    /*Swift.(file).LazyFilterSequence.formIndex(_:LazyFilterSequence<Base>.Index,offsetBy:Int,limitedBy:LazyFilterSequence<Base>.Index)*/
    /*Swift.(file).LazyFilterSequence.formIndex(_:LazyFilterSequence<Base>.Index,offsetBy:Int,limitedBy:LazyFilterSequence<Base>.Index)*/
    LazyFilterSequence.prototype.formIndexOffsetByLimitedBy = function ($info, i$inout, n, limit) {
    };
    /*Swift.(file).LazyFilterSequence.subscript(_:LazyFilterSequence<Base>.Index)*/
    /*Swift.(file).Collection.subscript(_:Self.Index)*/
    /*Swift.(file).BidirectionalCollection.subscript(_:Self.Index)*/
    LazyFilterSequence.prototype.subscript$get = function ($info, position) {
        return this[position];
    };
    /*Swift.(file).LazyFilterSequence.subscript(_:Range<LazyFilterSequence<Base>.Index>)*/
    /*Swift.(file).Collection.subscript(_:Range<Self.Index>)*/
    /*Swift.(file).BidirectionalCollection.subscript(_:Range<Self.Index>)*/
    LazyFilterSequence.prototype.subcriptRange$get = function ($info, bounds) {
        return this[bounds];
    };
    /*Swift.(file).LazyFilterSequence.index(before:LazyFilterSequence<Base>.Index)*/
    /*Swift.(file).BidirectionalCollection.index(before:Self.Index)*/
    LazyFilterSequence.prototype.indexBefore = function ($info, i) {
    };
    /*Swift.(file).LazyFilterSequence.formIndex(before:LazyFilterSequence<Base>.Index)*/
    /*Swift.(file).BidirectionalCollection.formIndex(before:Self.Index)*/
    LazyFilterSequence.prototype.formIndexBefore = function ($info, i$inout) {
    };
    /*Swift.(file).LazyFilterSequence.filter(_:(LazyFilterSequence<Base>.Element) -> Bool)*/
    /*Swift.(file).LazyFilterSequence.filter(_:(LazyFilterSequence<Base>.Element) -> Bool)*/
    LazyFilterSequence.prototype.filterSwift = function ($info, isIncluded) {
    };
    var _82;
    LazyFilterSequence.$struct = true;
    LazyFilterSequence.$infoAddress = '0x7fb852ad60c0';
    LazyFilterSequence.Iterator = (_82 = /** @class */ (function () {
            function class_106() {
            }
            /*Swift.(file).LazyFilterSequence.Iterator.init(_base:Base.Iterator,_:(Base.Element) -> Bool)*/
            /*Swift.(file).LazyFilterSequence.Iterator.init(_base:Base.Iterator,_:(Base.Element) -> Bool)*/
            class_106.prototype.init_basefunction_type = function ($info, _base, isIncluded) {
            };
            /*Swift.(file).Iterator.next()*/
            /*Swift.(file).IteratorProtocol.next()*/
            class_106.prototype.next = function ($info) {
            };
            return class_106;
        }()),
        _82.$struct = true,
        _82.$infoAddress = '0x7fb852ad6438',
        _82);
    return LazyFilterSequence;
}());
if (typeof IteratorProtocol$implementation != 'undefined')
    _mixin(LazyFilterSequence.Iterator, IteratorProtocol$implementation, false);
if (typeof Sequence$implementation != 'undefined')
    _mixin(LazyFilterSequence.Iterator, Sequence$implementation, false);
if (typeof Sequence$implementation != 'undefined')
    _mixin(LazyFilterSequence, Sequence$implementation, false);
if (typeof LazySequenceProtocol$implementation != 'undefined')
    _mixin(LazyFilterSequence, LazySequenceProtocol$implementation, false);
if (typeof Collection$implementation != 'undefined')
    _mixin(LazyFilterSequence, Collection$implementation, false);
if (typeof LazyCollectionProtocol$implementation != 'undefined')
    _mixin(LazyFilterSequence, LazyCollectionProtocol$implementation, false);
if (typeof BidirectionalCollection$implementation != 'undefined')
    _mixin(LazyFilterSequence, BidirectionalCollection$implementation, false);
var _FixedArray2 = /** @class */ (function () {
    function _FixedArray2() {
    }
    /*Swift.(file)._FixedArray2.init(storage:(T, T),_count:Int8)*/
    /*Swift.(file)._FixedArray2.init(storage:(T, T),_count:Int8)*/
    _FixedArray2.prototype.initStoragetuple_type_countInt8 = function ($info, storage, _count) {
    };
    /*Swift.(file)._FixedArray2.capacity*/ /*
    static capacity$get() {
    return this.capacity
    }
    static get capacity() { return this.capacity$get() }*/ ;
    /*Swift.(file)._FixedArray2.capacity*/ /*
    capacity$get() {
    return this.capacity
    }
    get capacity() { return this.capacity$get() }*/ ;
    /*Swift.(file)._FixedArray2.count*/ /*
    count$get() {
    return this.count
    }
    get count() { return this.count$get() }*/ ;
    /*Swift.(file)._FixedArray2.startIndex*/ /*
    startIndex$get() {
    return this.startIndex
    }
    get startIndex() { return this.startIndex$get() }*/ ;
    /*Swift.(file)._FixedArray2.endIndex*/ /*
    endIndex$get() {
    return this.endIndex
    }
    get endIndex() { return this.endIndex$get() }*/ ;
    /*Swift.(file)._FixedArray2.subscript(_:_FixedArray2<T>.Index)*/
    /*Swift.(file).RandomAccessCollection.subscript(_:Self.Index)*/
    /*Swift.(file).MutableCollection.subscript(_:Self.Index)*/
    /*Swift.(file).BidirectionalCollection.subscript(_:Self.Index)*/
    /*Swift.(file).Collection.subscript(_:Self.Index)*/
    _FixedArray2.prototype.subscript$get = function ($info, i) {
        return this[i];
    }; /*Swift.(file)._FixedArray2.subscript(_:_FixedArray2<T>.Index)*/
    /*Swift.(file).RandomAccessCollection.subscript(_:Self.Index)*/
    /*Swift.(file).MutableCollection.subscript(_:Self.Index)*/
    /*Swift.(file).BidirectionalCollection.subscript(_:Self.Index)*/
    /*Swift.(file).Collection.subscript(_:Self.Index)*/
    _FixedArray2.prototype.subscript$set = function ($info, newValue, i) {
        this[i] = newValue;
    };
    /*Swift.(file)._FixedArray2.index(after:_FixedArray2<T>.Index)*/
    /*Swift.(file).RandomAccessCollection.index(after:Self.Index)*/
    /*Swift.(file).BidirectionalCollection.index(after:Self.Index)*/
    /*Swift.(file).Collection.index(after:Self.Index)*/
    _FixedArray2.prototype.indexAfter = function ($info, i) {
    };
    /*Swift.(file)._FixedArray2.index(before:_FixedArray2<T>.Index)*/
    /*Swift.(file).RandomAccessCollection.index(before:Self.Index)*/
    /*Swift.(file).BidirectionalCollection.index(before:Self.Index)*/
    _FixedArray2.prototype.indexBefore = function ($info, i) {
    };
    /*Swift.(file)._FixedArray2.append(_:T)*/
    /*Swift.(file)._FixedArray2.append(_:T)*/
    _FixedArray2.prototype.append = function ($info, newElement) {
    };
    /*Swift.(file)._FixedArray2.init(count:Int)*/
    /*Swift.(file)._FixedArray2.init(count:Int)*/
    _FixedArray2.prototype.initCountInt = function ($info, count) {
        return count;
    };
    /*Swift.(file)._FixedArray2.init()*/
    /*Swift.(file)._FixedArray2.init()*/
    _FixedArray2.prototype.init = function ($info) {
    };
    /*Swift.(file)._FixedArray2.init(allZeros:())*/
    /*Swift.(file)._FixedArray2.init(allZeros:())*/
    _FixedArray2.prototype.initAllZerostuple_type = function ($info, allZeros) {
        return allZeros;
    };
    /*Swift.(file)._FixedArray2.withUnsafeMutableBufferPointer(_:(UnsafeMutableBufferPointer<_FixedArray2<T>.Element>) throws -> R)*/
    /*Swift.(file)._FixedArray2.withUnsafeMutableBufferPointer(_:(UnsafeMutableBufferPointer<_FixedArray2<T>.Element>) throws -> R)*/
    _FixedArray2.prototype.withUnsafeMutableBufferPointer = function ($info, body) {
    };
    /*Swift.(file)._FixedArray2.withUnsafeBufferPointer(_:(UnsafeBufferPointer<_FixedArray2<T>.Element>) throws -> R)*/
    /*Swift.(file)._FixedArray2.withUnsafeBufferPointer(_:(UnsafeBufferPointer<_FixedArray2<T>.Element>) throws -> R)*/
    _FixedArray2.prototype.withUnsafeBufferPointer = function ($info, body) {
    };
    _FixedArray2.$struct = true;
    _FixedArray2.$infoAddress = '0x7fb852ad7768';
    return _FixedArray2;
}());
if (typeof RandomAccessCollection$implementation != 'undefined')
    _mixin(_FixedArray2, RandomAccessCollection$implementation, false);
if (typeof MutableCollection$implementation != 'undefined')
    _mixin(_FixedArray2, MutableCollection$implementation, false);
var _FixedArray4 = /** @class */ (function () {
    function _FixedArray4() {
    }
    /*Swift.(file)._FixedArray4.init(storage:(T, T, T, T),_count:Int8)*/
    /*Swift.(file)._FixedArray4.init(storage:(T, T, T, T),_count:Int8)*/
    _FixedArray4.prototype.initStoragetuple_type_countInt8 = function ($info, storage, _count) {
    };
    /*Swift.(file)._FixedArray4.capacity*/ /*
    static capacity$get() {
    return this.capacity
    }
    static get capacity() { return this.capacity$get() }*/ ;
    /*Swift.(file)._FixedArray4.capacity*/ /*
    capacity$get() {
    return this.capacity
    }
    get capacity() { return this.capacity$get() }*/ ;
    /*Swift.(file)._FixedArray4.count*/ /*
    count$get() {
    return this.count
    }
    get count() { return this.count$get() }*/ ;
    /*Swift.(file)._FixedArray4.startIndex*/ /*
    startIndex$get() {
    return this.startIndex
    }
    get startIndex() { return this.startIndex$get() }*/ ;
    /*Swift.(file)._FixedArray4.endIndex*/ /*
    endIndex$get() {
    return this.endIndex
    }
    get endIndex() { return this.endIndex$get() }*/ ;
    /*Swift.(file)._FixedArray4.subscript(_:_FixedArray4<T>.Index)*/
    /*Swift.(file).RandomAccessCollection.subscript(_:Self.Index)*/
    /*Swift.(file).MutableCollection.subscript(_:Self.Index)*/
    /*Swift.(file).BidirectionalCollection.subscript(_:Self.Index)*/
    /*Swift.(file).Collection.subscript(_:Self.Index)*/
    _FixedArray4.prototype.subscript$get = function ($info, i) {
        return this[i];
    }; /*Swift.(file)._FixedArray4.subscript(_:_FixedArray4<T>.Index)*/
    /*Swift.(file).RandomAccessCollection.subscript(_:Self.Index)*/
    /*Swift.(file).MutableCollection.subscript(_:Self.Index)*/
    /*Swift.(file).BidirectionalCollection.subscript(_:Self.Index)*/
    /*Swift.(file).Collection.subscript(_:Self.Index)*/
    _FixedArray4.prototype.subscript$set = function ($info, newValue, i) {
        this[i] = newValue;
    };
    /*Swift.(file)._FixedArray4.index(after:_FixedArray4<T>.Index)*/
    /*Swift.(file).RandomAccessCollection.index(after:Self.Index)*/
    /*Swift.(file).BidirectionalCollection.index(after:Self.Index)*/
    /*Swift.(file).Collection.index(after:Self.Index)*/
    _FixedArray4.prototype.indexAfter = function ($info, i) {
    };
    /*Swift.(file)._FixedArray4.index(before:_FixedArray4<T>.Index)*/
    /*Swift.(file).RandomAccessCollection.index(before:Self.Index)*/
    /*Swift.(file).BidirectionalCollection.index(before:Self.Index)*/
    _FixedArray4.prototype.indexBefore = function ($info, i) {
    };
    /*Swift.(file)._FixedArray4.append(_:T)*/
    /*Swift.(file)._FixedArray4.append(_:T)*/
    _FixedArray4.prototype.append = function ($info, newElement) {
    };
    /*Swift.(file)._FixedArray4.init(count:Int)*/
    /*Swift.(file)._FixedArray4.init(count:Int)*/
    _FixedArray4.prototype.initCountInt = function ($info, count) {
        return count;
    };
    /*Swift.(file)._FixedArray4.init()*/
    /*Swift.(file)._FixedArray4.init()*/
    _FixedArray4.prototype.init = function ($info) {
    };
    /*Swift.(file)._FixedArray4.init(allZeros:())*/
    /*Swift.(file)._FixedArray4.init(allZeros:())*/
    _FixedArray4.prototype.initAllZerostuple_type = function ($info, allZeros) {
        return allZeros;
    };
    /*Swift.(file)._FixedArray4.withUnsafeMutableBufferPointer(_:(UnsafeMutableBufferPointer<_FixedArray4<T>.Element>) throws -> R)*/
    /*Swift.(file)._FixedArray4.withUnsafeMutableBufferPointer(_:(UnsafeMutableBufferPointer<_FixedArray4<T>.Element>) throws -> R)*/
    _FixedArray4.prototype.withUnsafeMutableBufferPointer = function ($info, body) {
    };
    /*Swift.(file)._FixedArray4.withUnsafeBufferPointer(_:(UnsafeBufferPointer<_FixedArray4<T>.Element>) throws -> R)*/
    /*Swift.(file)._FixedArray4.withUnsafeBufferPointer(_:(UnsafeBufferPointer<_FixedArray4<T>.Element>) throws -> R)*/
    _FixedArray4.prototype.withUnsafeBufferPointer = function ($info, body) {
    };
    _FixedArray4.$struct = true;
    _FixedArray4.$infoAddress = '0x7fb852ad8270';
    return _FixedArray4;
}());
if (typeof RandomAccessCollection$implementation != 'undefined')
    _mixin(_FixedArray4, RandomAccessCollection$implementation, false);
if (typeof MutableCollection$implementation != 'undefined')
    _mixin(_FixedArray4, MutableCollection$implementation, false);
var _FixedArray8 = /** @class */ (function () {
    function _FixedArray8() {
    }
    /*Swift.(file)._FixedArray8.init(storage:(T, T, T, T, T, T, T, T),_count:Int8)*/
    /*Swift.(file)._FixedArray8.init(storage:(T, T, T, T, T, T, T, T),_count:Int8)*/
    _FixedArray8.prototype.initStoragetuple_type_countInt8 = function ($info, storage, _count) {
    };
    /*Swift.(file)._FixedArray8.capacity*/ /*
    static capacity$get() {
    return this.capacity
    }
    static get capacity() { return this.capacity$get() }*/ ;
    /*Swift.(file)._FixedArray8.capacity*/ /*
    capacity$get() {
    return this.capacity
    }
    get capacity() { return this.capacity$get() }*/ ;
    /*Swift.(file)._FixedArray8.count*/ /*
    count$get() {
    return this.count
    }
    get count() { return this.count$get() }*/ ;
    /*Swift.(file)._FixedArray8.startIndex*/ /*
    startIndex$get() {
    return this.startIndex
    }
    get startIndex() { return this.startIndex$get() }*/ ;
    /*Swift.(file)._FixedArray8.endIndex*/ /*
    endIndex$get() {
    return this.endIndex
    }
    get endIndex() { return this.endIndex$get() }*/ ;
    /*Swift.(file)._FixedArray8.subscript(_:_FixedArray8<T>.Index)*/
    /*Swift.(file).RandomAccessCollection.subscript(_:Self.Index)*/
    /*Swift.(file).MutableCollection.subscript(_:Self.Index)*/
    /*Swift.(file).BidirectionalCollection.subscript(_:Self.Index)*/
    /*Swift.(file).Collection.subscript(_:Self.Index)*/
    _FixedArray8.prototype.subscript$get = function ($info, i) {
        return this[i];
    }; /*Swift.(file)._FixedArray8.subscript(_:_FixedArray8<T>.Index)*/
    /*Swift.(file).RandomAccessCollection.subscript(_:Self.Index)*/
    /*Swift.(file).MutableCollection.subscript(_:Self.Index)*/
    /*Swift.(file).BidirectionalCollection.subscript(_:Self.Index)*/
    /*Swift.(file).Collection.subscript(_:Self.Index)*/
    _FixedArray8.prototype.subscript$set = function ($info, newValue, i) {
        this[i] = newValue;
    };
    /*Swift.(file)._FixedArray8.index(after:_FixedArray8<T>.Index)*/
    /*Swift.(file).RandomAccessCollection.index(after:Self.Index)*/
    /*Swift.(file).BidirectionalCollection.index(after:Self.Index)*/
    /*Swift.(file).Collection.index(after:Self.Index)*/
    _FixedArray8.prototype.indexAfter = function ($info, i) {
    };
    /*Swift.(file)._FixedArray8.index(before:_FixedArray8<T>.Index)*/
    /*Swift.(file).RandomAccessCollection.index(before:Self.Index)*/
    /*Swift.(file).BidirectionalCollection.index(before:Self.Index)*/
    _FixedArray8.prototype.indexBefore = function ($info, i) {
    };
    /*Swift.(file)._FixedArray8.append(_:T)*/
    /*Swift.(file)._FixedArray8.append(_:T)*/
    _FixedArray8.prototype.append = function ($info, newElement) {
    };
    /*Swift.(file)._FixedArray8.init(count:Int)*/
    /*Swift.(file)._FixedArray8.init(count:Int)*/
    _FixedArray8.prototype.initCountInt = function ($info, count) {
        return count;
    };
    /*Swift.(file)._FixedArray8.init()*/
    /*Swift.(file)._FixedArray8.init()*/
    _FixedArray8.prototype.init = function ($info) {
    };
    /*Swift.(file)._FixedArray8.init(allZeros:())*/
    /*Swift.(file)._FixedArray8.init(allZeros:())*/
    _FixedArray8.prototype.initAllZerostuple_type = function ($info, allZeros) {
        return allZeros;
    };
    /*Swift.(file)._FixedArray8.withUnsafeMutableBufferPointer(_:(UnsafeMutableBufferPointer<_FixedArray8<T>.Element>) throws -> R)*/
    /*Swift.(file)._FixedArray8.withUnsafeMutableBufferPointer(_:(UnsafeMutableBufferPointer<_FixedArray8<T>.Element>) throws -> R)*/
    _FixedArray8.prototype.withUnsafeMutableBufferPointer = function ($info, body) {
    };
    /*Swift.(file)._FixedArray8.withUnsafeBufferPointer(_:(UnsafeBufferPointer<_FixedArray8<T>.Element>) throws -> R)*/
    /*Swift.(file)._FixedArray8.withUnsafeBufferPointer(_:(UnsafeBufferPointer<_FixedArray8<T>.Element>) throws -> R)*/
    _FixedArray8.prototype.withUnsafeBufferPointer = function ($info, body) {
    };
    _FixedArray8.$struct = true;
    _FixedArray8.$infoAddress = '0x7fb852ad8d78';
    return _FixedArray8;
}());
if (typeof RandomAccessCollection$implementation != 'undefined')
    _mixin(_FixedArray8, RandomAccessCollection$implementation, false);
if (typeof MutableCollection$implementation != 'undefined')
    _mixin(_FixedArray8, MutableCollection$implementation, false);
var _FixedArray16 = /** @class */ (function () {
    function _FixedArray16() {
    }
    /*Swift.(file)._FixedArray16.init(storage:(T, T, T, T, T, T, T, T, T, T, T, T, T, T, T, T),_count:Int8)*/
    /*Swift.(file)._FixedArray16.init(storage:(T, T, T, T, T, T, T, T, T, T, T, T, T, T, T, T),_count:Int8)*/
    _FixedArray16.prototype.initStoragetuple_type_countInt8 = function ($info, storage, _count) {
    };
    /*Swift.(file)._FixedArray16.capacity*/ /*
    static capacity$get() {
    return this.capacity
    }
    static get capacity() { return this.capacity$get() }*/ ;
    /*Swift.(file)._FixedArray16.capacity*/ /*
    capacity$get() {
    return this.capacity
    }
    get capacity() { return this.capacity$get() }*/ ;
    /*Swift.(file)._FixedArray16.count*/ /*
    count$get() {
    return this.count
    }
    get count() { return this.count$get() }*/ ;
    /*Swift.(file)._FixedArray16.startIndex*/ /*
    startIndex$get() {
    return this.startIndex
    }
    get startIndex() { return this.startIndex$get() }*/ ;
    /*Swift.(file)._FixedArray16.endIndex*/ /*
    endIndex$get() {
    return this.endIndex
    }
    get endIndex() { return this.endIndex$get() }*/ ;
    /*Swift.(file)._FixedArray16.subscript(_:_FixedArray16<T>.Index)*/
    /*Swift.(file).RandomAccessCollection.subscript(_:Self.Index)*/
    /*Swift.(file).MutableCollection.subscript(_:Self.Index)*/
    /*Swift.(file).BidirectionalCollection.subscript(_:Self.Index)*/
    /*Swift.(file).Collection.subscript(_:Self.Index)*/
    _FixedArray16.prototype.subscript$get = function ($info, i) {
        return this[i];
    }; /*Swift.(file)._FixedArray16.subscript(_:_FixedArray16<T>.Index)*/
    /*Swift.(file).RandomAccessCollection.subscript(_:Self.Index)*/
    /*Swift.(file).MutableCollection.subscript(_:Self.Index)*/
    /*Swift.(file).BidirectionalCollection.subscript(_:Self.Index)*/
    /*Swift.(file).Collection.subscript(_:Self.Index)*/
    _FixedArray16.prototype.subscript$set = function ($info, newValue, i) {
        this[i] = newValue;
    };
    /*Swift.(file)._FixedArray16.index(after:_FixedArray16<T>.Index)*/
    /*Swift.(file).RandomAccessCollection.index(after:Self.Index)*/
    /*Swift.(file).BidirectionalCollection.index(after:Self.Index)*/
    /*Swift.(file).Collection.index(after:Self.Index)*/
    _FixedArray16.prototype.indexAfter = function ($info, i) {
    };
    /*Swift.(file)._FixedArray16.index(before:_FixedArray16<T>.Index)*/
    /*Swift.(file).RandomAccessCollection.index(before:Self.Index)*/
    /*Swift.(file).BidirectionalCollection.index(before:Self.Index)*/
    _FixedArray16.prototype.indexBefore = function ($info, i) {
    };
    /*Swift.(file)._FixedArray16.append(_:T)*/
    /*Swift.(file)._FixedArray16.append(_:T)*/
    _FixedArray16.prototype.append = function ($info, newElement) {
    };
    /*Swift.(file)._FixedArray16.init(count:Int)*/
    /*Swift.(file)._FixedArray16.init(count:Int)*/
    _FixedArray16.prototype.initCountInt = function ($info, count) {
        return count;
    };
    /*Swift.(file)._FixedArray16.init()*/
    /*Swift.(file)._FixedArray16.init()*/
    _FixedArray16.prototype.init = function ($info) {
    };
    /*Swift.(file)._FixedArray16.init(allZeros:())*/
    /*Swift.(file)._FixedArray16.init(allZeros:())*/
    _FixedArray16.prototype.initAllZerostuple_type = function ($info, allZeros) {
        return allZeros;
    };
    /*Swift.(file)._FixedArray16.withUnsafeMutableBufferPointer(_:(UnsafeMutableBufferPointer<_FixedArray16<T>.Element>) throws -> R)*/
    /*Swift.(file)._FixedArray16.withUnsafeMutableBufferPointer(_:(UnsafeMutableBufferPointer<_FixedArray16<T>.Element>) throws -> R)*/
    _FixedArray16.prototype.withUnsafeMutableBufferPointer = function ($info, body) {
    };
    /*Swift.(file)._FixedArray16.withUnsafeBufferPointer(_:(UnsafeBufferPointer<_FixedArray16<T>.Element>) throws -> R)*/
    /*Swift.(file)._FixedArray16.withUnsafeBufferPointer(_:(UnsafeBufferPointer<_FixedArray16<T>.Element>) throws -> R)*/
    _FixedArray16.prototype.withUnsafeBufferPointer = function ($info, body) {
    };
    _FixedArray16.$struct = true;
    _FixedArray16.$infoAddress = '0x7fb852ad9880';
    return _FixedArray16;
}());
if (typeof RandomAccessCollection$implementation != 'undefined')
    _mixin(_FixedArray16, RandomAccessCollection$implementation, false);
if (typeof MutableCollection$implementation != 'undefined')
    _mixin(_FixedArray16, MutableCollection$implementation, false);
var DefaultIndices = /** @class */ (function () {
    function DefaultIndices() {
    }
    /*Swift.(file).DefaultIndices.init(_elements:Elements,startIndex:Elements.Index,endIndex:Elements.Index)*/
    /*Swift.(file).DefaultIndices.init(_elements:Elements,startIndex:Elements.Index,endIndex:Elements.Index)*/
    DefaultIndices.prototype.init_elementsStartIndexEndIndex = function ($info, _elements, startIndex, endIndex) {
    };
    /*Swift.(file).DefaultIndices.startIndex*/ /*
    startIndex$get() {
    return this.startIndex
    }
    get startIndex() { return this.startIndex$get() }*/ ;
    /*Swift.(file).DefaultIndices.endIndex*/ /*
    endIndex$get() {
    return this.endIndex
    }
    get endIndex() { return this.endIndex$get() }*/ ;
    /*Swift.(file).DefaultIndices.subscript(_:DefaultIndices<Elements>.Index)*/
    /*Swift.(file).Collection.subscript(_:Self.Index)*/
    /*Swift.(file).BidirectionalCollection.subscript(_:Self.Index)*/
    /*Swift.(file).RandomAccessCollection.subscript(_:Self.Index)*/
    DefaultIndices.prototype.subscript$get = function ($info, i) {
        return this[i];
    };
    /*Swift.(file).DefaultIndices.subscript(_:Range<DefaultIndices<Elements>.Index>)*/
    /*Swift.(file).Collection.subscript(_:Range<Self.Index>)*/
    /*Swift.(file).BidirectionalCollection.subscript(_:Range<Self.Index>)*/
    /*Swift.(file).RandomAccessCollection.subscript(_:Range<Self.Index>)*/
    DefaultIndices.prototype.subcriptRange$get = function ($info, bounds) {
        return this[bounds];
    };
    /*Swift.(file).DefaultIndices.index(after:DefaultIndices<Elements>.Index)*/
    /*Swift.(file).Collection.index(after:Self.Index)*/
    /*Swift.(file).BidirectionalCollection.index(after:Self.Index)*/
    /*Swift.(file).RandomAccessCollection.index(after:Self.Index)*/
    DefaultIndices.prototype.indexAfter = function ($info, i) {
    };
    /*Swift.(file).DefaultIndices.formIndex(after:DefaultIndices<Elements>.Index)*/
    /*Swift.(file).Collection.formIndex(after:Self.Index)*/
    /*Swift.(file).BidirectionalCollection.formIndex(after:Self.Index)*/
    /*Swift.(file).RandomAccessCollection.formIndex(after:Self.Index)*/
    DefaultIndices.prototype.formIndexAfter = function ($info, i$inout) {
    };
    /*Swift.(file).DefaultIndices.indices*/ /*
    indices$get() {
    return this.indices
    }
    get indices() { return this.indices$get() }*/ ;
    /*Swift.(file).DefaultIndices.index(before:DefaultIndices<Elements>.Index)*/
    /*Swift.(file).BidirectionalCollection.index(before:Self.Index)*/
    /*Swift.(file).RandomAccessCollection.index(before:Self.Index)*/
    DefaultIndices.prototype.indexBefore = function ($info, i) {
    };
    /*Swift.(file).DefaultIndices.formIndex(before:DefaultIndices<Elements>.Index)*/
    /*Swift.(file).BidirectionalCollection.formIndex(before:Self.Index)*/
    /*Swift.(file).RandomAccessCollection.formIndex(before:Self.Index)*/
    DefaultIndices.prototype.formIndexBefore = function ($info, i$inout) {
    };
    DefaultIndices.$struct = true;
    DefaultIndices.$infoAddress = '0x7fb852b47a38';
    return DefaultIndices;
}());
if (typeof Collection$implementation != 'undefined')
    _mixin(DefaultIndices, Collection$implementation, false);
if (typeof BidirectionalCollection$implementation != 'undefined')
    _mixin(DefaultIndices, BidirectionalCollection$implementation, false);
if (typeof RandomAccessCollection$implementation != 'undefined')
    _mixin(DefaultIndices, RandomAccessCollection$implementation, false);
var UInt8 = /** @class */ (function () {
    function UInt8() {
    }
    /*Swift.(file).UInt8.init(_builtinIntegerLiteral:IntLiteral)*/
    /*Swift.(file)._ExpressibleByBuiltinIntegerLiteral.init(_builtinIntegerLiteral:IntLiteral)*/
    UInt8.prototype.init_builtinIntegerLiteralIntLiteral = function ($info, x) {
        return x;
    };
    /*Swift.(file).UInt8.init(bitPattern:Int8)*/
    /*Swift.(file).UInt8.init(bitPattern:Int8)*/
    UInt8.prototype.initBitPatternInt8 = function ($info, x) {
        return x;
    };
    /*Swift.(file).UInt8.init(_:Float)*/
    /*Swift.(file).UInt8.init(_:Float)*/
    UInt8.prototype.initFloat = function ($info, source) {
        return source;
    };
    /*Swift.(file).UInt8.init(exactly:Float)*/
    /*Swift.(file).UInt8.init(exactly:Float)*/
    UInt8.prototype.initExactlyFloat = function ($info, source) {
        return source;
    };
    /*Swift.(file).UInt8.init(_:Double)*/
    /*Swift.(file).UInt8.init(_:Double)*/
    UInt8.prototype.initDouble = function ($info, source) {
        return source;
    };
    /*Swift.(file).UInt8.init(exactly:Double)*/
    /*Swift.(file).UInt8.init(exactly:Double)*/
    UInt8.prototype.initExactlyDouble = function ($info, source) {
        return source;
    };
    /*Swift.(file).UInt8.init(_:Float80)*/
    /*Swift.(file).UInt8.init(_:Float80)*/
    UInt8.prototype.initFloat80 = function ($info, source) {
        return source;
    };
    /*Swift.(file).UInt8.init(exactly:Float80)*/
    /*Swift.(file).UInt8.init(exactly:Float80)*/
    UInt8.prototype.initExactlyFloat80 = function ($info, source) {
        return source;
    };
    /*Swift.(file).UInt8.==infix(_:UInt8,_:UInt8)*/
    /*Swift.(file).Equatable.==infix(_:Self,_:Self)*/
    UInt8.infix_61_61 = function ($info, lhs, rhs) {
        return lhs == rhs;
    };
    /*Swift.(file).UInt8.<infix(_:UInt8,_:UInt8)*/
    /*Swift.(file).Comparable.<infix(_:Self,_:Self)*/
    UInt8.infix_60 = function ($info, lhs, rhs) {
        return lhs < rhs;
    };
    /*Swift.(file).UInt8.+=infix(_:UInt8,_:UInt8)*/
    /*Swift.(file).BinaryInteger.+=infix(_:Self,_:Self)*/
    /*Swift.(file).AdditiveArithmetic.+=infix(_:Self,_:Self)*/
    UInt8.infix_43_61 = function ($info, lhs$inout, rhs) {
        lhs$inout.set(lhs$inout.get() + rhs);
    };
    /*Swift.(file).UInt8.-=infix(_:UInt8,_:UInt8)*/
    /*Swift.(file).BinaryInteger.-=infix(_:Self,_:Self)*/
    /*Swift.(file).AdditiveArithmetic.-=infix(_:Self,_:Self)*/
    UInt8.infix_45_61 = function ($info, lhs$inout, rhs) {
        lhs$inout.set(lhs$inout.get() - rhs);
    };
    /*Swift.(file).UInt8.*=infix(_:UInt8,_:UInt8)*/
    /*Swift.(file).BinaryInteger.*=infix(_:Self,_:Self)*/
    /*Swift.(file).Numeric.*=infix(_:Self,_:Self)*/
    UInt8.infix_42_61 = function ($info, lhs$inout, rhs) {
        lhs$inout.set(lhs$inout.get() * rhs);
    };
    /*Swift.(file).UInt8./=infix(_:UInt8,_:UInt8)*/
    /*Swift.(file).BinaryInteger./=infix(_:Self,_:Self)*/
    UInt8.infix_47_61 = function ($info, lhs$inout, rhs) {
        lhs$inout.set((lhs$inout.get() / rhs) | 0);
    };
    /*Swift.(file).UInt8.dividedReportingOverflow(by:UInt8)*/
    /*Swift.(file).FixedWidthInteger.dividedReportingOverflow(by:Self)*/
    UInt8.prototype.dividedReportingOverflowBy = function ($info, other) {
    };
    /*Swift.(file).UInt8.remainderReportingOverflow(dividingBy:UInt8)*/
    /*Swift.(file).FixedWidthInteger.remainderReportingOverflow(dividingBy:Self)*/
    UInt8.prototype.remainderReportingOverflowDividingBy = function ($info, other) {
    };
    /*Swift.(file).UInt8.addingReportingOverflow(_:UInt8)*/
    /*Swift.(file).FixedWidthInteger.addingReportingOverflow(_:Self)*/
    UInt8.prototype.addingReportingOverflow = function ($info, other) {
    };
    /*Swift.(file).UInt8.subtractingReportingOverflow(_:UInt8)*/
    /*Swift.(file).FixedWidthInteger.subtractingReportingOverflow(_:Self)*/
    UInt8.prototype.subtractingReportingOverflow = function ($info, other) {
    };
    /*Swift.(file).UInt8.multipliedReportingOverflow(by:UInt8)*/
    /*Swift.(file).FixedWidthInteger.multipliedReportingOverflow(by:Self)*/
    UInt8.prototype.multipliedReportingOverflowBy = function ($info, other) {
    };
    /*Swift.(file).UInt8.%=infix(_:UInt8,_:UInt8)*/
    /*Swift.(file).BinaryInteger.%=infix(_:Self,_:Self)*/
    UInt8.infix_37_61 = function ($info, lhs$inout, rhs) {
        lhs$inout.set(lhs$inout.get() % rhs);
    };
    /*Swift.(file).UInt8.init(_:Int8)*/
    /*Swift.(file).UInt8.init(_:Int8)*/
    UInt8.prototype.initInt8 = function ($info, _value) {
        return _value;
    };
    /*Swift.(file).UInt8.&=infix(_:UInt8,_:UInt8)*/
    /*Swift.(file).BinaryInteger.&=infix(_:Self,_:Self)*/
    UInt8.infix_38_61 = function ($info, lhs$inout, rhs) {
        /*lhs$inout.set(lhs$inout.get() & rhs)*/
    };
    /*Swift.(file).UInt8.|=infix(_:UInt8,_:UInt8)*/
    /*Swift.(file).BinaryInteger.|=infix(_:Self,_:Self)*/
    UInt8.infix_124_61 = function ($info, lhs$inout, rhs) {
        lhs$inout.set(lhs$inout.get() | rhs);
    };
    /*Swift.(file).UInt8.^=infix(_:UInt8,_:UInt8)*/
    /*Swift.(file).BinaryInteger.^=infix(_:Self,_:Self)*/
    UInt8.infix_94_61 = function ($info, lhs$inout, rhs) {
        lhs$inout.set(lhs$inout.get() ^ rhs);
    };
    /*Swift.(file).UInt8.&>>=infix(_:UInt8,_:UInt8)*/
    /*Swift.(file).FixedWidthInteger.&>>=infix(_:Self,_:Self)*/
    UInt8.infix_38_62_62_61 = function ($info, lhs$inout, rhs) {
        /*lhs$inout.set(lhs$inout.get() &>> rhs)*/
    };
    /*Swift.(file).UInt8.&<<=infix(_:UInt8,_:UInt8)*/
    /*Swift.(file).FixedWidthInteger.&<<=infix(_:Self,_:Self)*/
    UInt8.infix_38_60_60_61 = function ($info, lhs$inout, rhs) {
        /*lhs$inout.set(lhs$inout.get() &<< rhs)*/
    };
    /*Swift.(file).UInt8.bitWidth*/ /*
    static bitWidth$get() {
    return this.bitWidth
    }
    static get bitWidth() { return this.bitWidth$get() }*/ ;
    /*Swift.(file).UInt8.leadingZeroBitCount*/ /*
    leadingZeroBitCount$get() {
    return this.leadingZeroBitCount
    }
    get leadingZeroBitCount() { return this.leadingZeroBitCount$get() }*/ ;
    /*Swift.(file).UInt8.trailingZeroBitCount*/ /*
    trailingZeroBitCount$get() {
    return this.trailingZeroBitCount
    }
    get trailingZeroBitCount() { return this.trailingZeroBitCount$get() }*/ ;
    /*Swift.(file).UInt8.nonzeroBitCount*/ /*
    nonzeroBitCount$get() {
    return this.nonzeroBitCount
    }
    get nonzeroBitCount() { return this.nonzeroBitCount$get() }*/ ;
    /*Swift.(file).UInt8.init(_truncatingBits:UInt)*/
    /*Swift.(file).FixedWidthInteger.init(_truncatingBits:UInt)*/
    UInt8.prototype.init_truncatingBitsUInt = function ($info, bits) {
        return bits;
    };
    /*Swift.(file).UInt8.multipliedFullWidth(by:UInt8)*/
    /*Swift.(file).FixedWidthInteger.multipliedFullWidth(by:Self)*/
    UInt8.prototype.multipliedFullWidthBy = function ($info, other) {
    };
    /*Swift.(file).UInt8.dividingFullWidth(_:(high: UInt8, low: UInt8.Magnitude))*/
    /*Swift.(file).FixedWidthInteger.dividingFullWidth(_:(high: Self, low: Self.Magnitude))*/
    UInt8.prototype.dividingFullWidth = function ($info, dividend) {
    };
    /*Swift.(file).UInt8.byteSwapped*/ /*
    byteSwapped$get() {
    return this.byteSwapped
    }
    get byteSwapped() { return this.byteSwapped$get() }*/ ;
    /*Swift.(file).UInt8.toIntMax()*/
    /*Swift.(file).UInt8.toIntMax()*/
    UInt8.prototype.toIntMax = function ($info) {
    };
    /*Swift.(file).UInt8.signum()*/
    /*Swift.(file).BinaryInteger.signum()*/
    UInt8.prototype.signum = function ($info) {
    };
    /*Swift.(file).UInt8.&infix(_:UInt8,_:UInt8)*/
    /*Swift.(file).BinaryInteger.&infix(_:Self,_:Self)*/
    UInt8.infix_38 = function ($info, lhs, rhs) {
        /*return lhs & rhs*/
    };
    /*Swift.(file).UInt8.|infix(_:UInt8,_:UInt8)*/
    /*Swift.(file).BinaryInteger.|infix(_:Self,_:Self)*/
    UInt8.infix_124 = function ($info, lhs, rhs) {
        return lhs | rhs;
    };
    /*Swift.(file).UInt8.^infix(_:UInt8,_:UInt8)*/
    /*Swift.(file).BinaryInteger.^infix(_:Self,_:Self)*/
    UInt8.infix_94 = function ($info, lhs, rhs) {
        return lhs ^ rhs;
    };
    /*Swift.(file).UInt8.&>>infix(_:UInt8,_:UInt8)*/
    /*Swift.(file).FixedWidthInteger.&>>infix(_:Self,_:Self)*/
    UInt8.infix_38_62_62 = function ($info, lhs, rhs) {
        /*return lhs &>> rhs*/
    };
    /*Swift.(file).UInt8.&<<infix(_:UInt8,_:UInt8)*/
    /*Swift.(file).FixedWidthInteger.&<<infix(_:Self,_:Self)*/
    UInt8.infix_38_60_60 = function ($info, lhs, rhs) {
        /*return lhs &<< rhs*/
    };
    /*Swift.(file).UInt8./infix(_:UInt8,_:UInt8)*/
    /*Swift.(file).BinaryInteger./infix(_:Self,_:Self)*/
    UInt8.infix_47 = function ($info, lhs, rhs) {
        return (lhs / rhs) | 0;
    };
    /*Swift.(file).UInt8.%infix(_:UInt8,_:UInt8)*/
    /*Swift.(file).BinaryInteger.%infix(_:Self,_:Self)*/
    UInt8.infix_37 = function ($info, lhs, rhs) {
        return lhs % rhs;
    };
    /*Swift.(file).UInt8.+infix(_:UInt8,_:UInt8)*/
    /*Swift.(file).BinaryInteger.+infix(_:Self,_:Self)*/
    /*Swift.(file).AdditiveArithmetic.+infix(_:Self,_:Self)*/
    UInt8.infix_43 = function ($info, lhs, rhs) {
        return lhs + rhs;
    };
    /*Swift.(file).UInt8.-infix(_:UInt8,_:UInt8)*/
    /*Swift.(file).BinaryInteger.-infix(_:Self,_:Self)*/
    /*Swift.(file).AdditiveArithmetic.-infix(_:Self,_:Self)*/
    UInt8.infix_45 = function ($info, lhs, rhs) {
        return lhs - rhs;
    };
    /*Swift.(file).UInt8.*infix(_:UInt8,_:UInt8)*/
    /*Swift.(file).BinaryInteger.*infix(_:Self,_:Self)*/
    /*Swift.(file).Numeric.*infix(_:Self,_:Self)*/
    UInt8.infix_42 = function ($info, lhs, rhs) {
        return lhs * rhs;
    };
    /*Swift.(file).UInt8.>>infix(_:UInt8,_:UInt8)*/
    /*Swift.(file).UInt8.>>infix(_:UInt8,_:UInt8)*/
    UInt8.infix_62_62 = function ($info, lhs, rhs) {
        return lhs >> rhs;
    };
    /*Swift.(file).UInt8.>>=infix(_:UInt8,_:UInt8)*/
    /*Swift.(file).UInt8.>>=infix(_:UInt8,_:UInt8)*/
    UInt8.infix_62_62_61 = function ($info, lhs$inout, rhs) {
        lhs$inout.set(lhs$inout.get() >> rhs);
    };
    /*Swift.(file).UInt8.<<infix(_:UInt8,_:UInt8)*/
    /*Swift.(file).UInt8.<<infix(_:UInt8,_:UInt8)*/
    UInt8.infix_60_60 = function ($info, lhs, rhs) {
        var binaryRepr = lhs.toString(2);
        var result = 0;
        for (var i = 0; i < binaryRepr.length; i++) {
            var j = i - rhs;
            if (binaryRepr[j] !== '1')
                continue;
            result += Math.pow(2, 7 - j);
        }
        return result;
    };
    /*Swift.(file).UInt8.<<=infix(_:UInt8,_:UInt8)*/
    /*Swift.(file).UInt8.<<=infix(_:UInt8,_:UInt8)*/
    UInt8.infix_60_60_61 = function ($info, lhs$inout, rhs) {
        lhs$inout.set(lhs$inout.get() << rhs);
    };
    /*Swift.(file).UInt8.<=infix(_:UInt8,_:UInt8)*/
    /*Swift.(file).Comparable.<=infix(_:Self,_:Self)*/
    UInt8.infix_60_61 = function ($info, lhs, rhs) {
        return lhs <= rhs;
    };
    /*Swift.(file).UInt8.>=infix(_:UInt8,_:UInt8)*/
    /*Swift.(file).Comparable.>=infix(_:Self,_:Self)*/
    UInt8.infix_62_61 = function ($info, lhs, rhs) {
        return lhs >= rhs;
    };
    /*Swift.(file).UInt8.>infix(_:UInt8,_:UInt8)*/
    /*Swift.(file).Comparable.>infix(_:Self,_:Self)*/
    UInt8.infix_62 = function ($info, lhs, rhs) {
        return lhs > rhs;
    };
    /*Swift.(file).UInt8.init(from:Decoder)*/
    /*Swift.(file).Decodable.init(from:Decoder)*/
    UInt8.prototype.initFromDecoder = function ($info, decoder) {
        return decoder;
    };
    /*Swift.(file).UInt8.encode(to:Encoder)*/
    /*Swift.(file).Encodable.encode(to:Encoder)*/
    UInt8.prototype.encodeTo = function ($info, encoder) {
    };
    /*Swift.(file).UInt8.hash(into:Hasher)*/
    /*Swift.(file).Hashable.hash(into:Hasher)*/
    UInt8.prototype.hashInto = function ($info, hasher$inout) {
    };
    /*Swift.(file).UInt8.hashValue*/ /*
    hashValue$get() {
    return this.hashValue
    }
    get hashValue() { return this.hashValue$get() }*/ ;
    /*Swift.(file).UInt8.init(truncatingBitPattern:UInt16)*/
    /*Swift.(file).UInt8.init(truncatingBitPattern:UInt16)*/
    UInt8.prototype.initTruncatingBitPatternUInt16 = function ($info, source) {
        return source;
    };
    /*Swift.(file).UInt8.init(truncatingBitPattern:Int16)*/
    /*Swift.(file).UInt8.init(truncatingBitPattern:Int16)*/
    UInt8.prototype.initTruncatingBitPatternInt16 = function ($info, source) {
        return source;
    };
    /*Swift.(file).UInt8.init(truncatingBitPattern:UInt32)*/
    /*Swift.(file).UInt8.init(truncatingBitPattern:UInt32)*/
    UInt8.prototype.initTruncatingBitPatternUInt32 = function ($info, source) {
        return source;
    };
    /*Swift.(file).UInt8.init(truncatingBitPattern:Int32)*/
    /*Swift.(file).UInt8.init(truncatingBitPattern:Int32)*/
    UInt8.prototype.initTruncatingBitPatternInt32 = function ($info, source) {
        return source;
    };
    /*Swift.(file).UInt8.init(truncatingBitPattern:UInt64)*/
    /*Swift.(file).UInt8.init(truncatingBitPattern:UInt64)*/
    UInt8.prototype.initTruncatingBitPatternUInt64 = function ($info, source) {
        return source;
    };
    /*Swift.(file).UInt8.init(truncatingBitPattern:Int64)*/
    /*Swift.(file).UInt8.init(truncatingBitPattern:Int64)*/
    UInt8.prototype.initTruncatingBitPatternInt64 = function ($info, source) {
        return source;
    };
    /*Swift.(file).UInt8.init(truncatingBitPattern:UInt)*/
    /*Swift.(file).UInt8.init(truncatingBitPattern:UInt)*/
    UInt8.prototype.initTruncatingBitPatternUInt = function ($info, source) {
        return source;
    };
    /*Swift.(file).UInt8.init(truncatingBitPattern:Int)*/
    /*Swift.(file).UInt8.init(truncatingBitPattern:Int)*/
    UInt8.prototype.initTruncatingBitPatternInt = function ($info, source) {
        return source;
    };
    /*Swift.(file).UInt8.init(ascii:Unicode.Scalar)*/
    /*Swift.(file).UInt8.init(ascii:Unicode.Scalar)*/
    UInt8.prototype.initAsciiUnicodeScalar = function ($info, v) {
        return v;
    };
    /*Swift.(file).UInt8.customMirror*/ /*
    customMirror$get() {
    return this.customMirror
    }
    get customMirror() { return this.customMirror$get() }*/ ;
    /*Swift.(file).UInt8.customPlaygroundQuickLook*/ /*
    customPlaygroundQuickLook$get() {
    return this.customPlaygroundQuickLook
    }
    get customPlaygroundQuickLook() { return this.customPlaygroundQuickLook$get() }*/ ;
    var _83, _84, _85, _86, _87, _88, _89;
    UInt8.$struct = true;
    UInt8.$mixin = true;
    UInt8.$infoAddress = '0x7fb851821308';
    UInt8.Words = (_83 = /** @class */ (function () {
            function class_107() {
            }
            /*Swift.(file).UInt8.Words.init(_:UInt8)*/
            /*Swift.(file).UInt8.Words.init(_:UInt8)*/
            class_107.prototype.initUInt8 = function ($info, value) {
                return value;
            };
            /*Swift.(file).UInt8.Words.count*/ /*
            count$get() {
            return this.count
            }
            get count() { return this.count$get() }*/ ;
            /*Swift.(file).UInt8.Words.startIndex*/ /*
            startIndex$get() {
            return this.startIndex
            }
            get startIndex() { return this.startIndex$get() }*/ ;
            /*Swift.(file).UInt8.Words.endIndex*/ /*
            endIndex$get() {
            return this.endIndex
            }
            get endIndex() { return this.endIndex$get() }*/ ;
            /*Swift.(file).UInt8.Words.indices*/ /*
            indices$get() {
            return this.indices
            }
            get indices() { return this.indices$get() }*/ ;
            /*Swift.(file).UInt8.Words.index(after:Int)*/
            /*Swift.(file).RandomAccessCollection.index(after:Self.Index)*/
            /*Swift.(file).BidirectionalCollection.index(after:Self.Index)*/
            /*Swift.(file).Collection.index(after:Self.Index)*/
            class_107.prototype.indexAfter = function ($info, i) {
            };
            /*Swift.(file).UInt8.Words.index(before:Int)*/
            /*Swift.(file).RandomAccessCollection.index(before:Self.Index)*/
            /*Swift.(file).BidirectionalCollection.index(before:Self.Index)*/
            class_107.prototype.indexBefore = function ($info, i) {
            };
            /*Swift.(file).UInt8.Words.subscript(_:Int)*/
            /*Swift.(file).RandomAccessCollection.subscript(_:Self.Index)*/
            /*Swift.(file).BidirectionalCollection.subscript(_:Self.Index)*/
            /*Swift.(file).Collection.subscript(_:Self.Index)*/
            class_107.prototype.subscript$get = function ($info, position) {
                return this[position];
            };
            return class_107;
        }()),
        _83.$struct = true,
        _83.$infoAddress = '0x7fb852d2b468',
        _83);
    UInt8.SIMD2Storage = (_84 = /** @class */ (function () {
            function class_108() {
            }
            /*Swift.(file).UInt8.SIMD2Storage.init()*/
            /*Swift.(file).SIMDStorage.init()*/
            class_108.prototype.init = function ($info) {
            };
            /*Swift.(file).UInt8.SIMD2Storage.subscript(_:Int)*/
            /*Swift.(file).SIMDStorage.subscript(_:Int)*/
            class_108.prototype.subscript$get = function ($info, index) {
                return this[index];
            }; /*Swift.(file).UInt8.SIMD2Storage.subscript(_:Int)*/
            /*Swift.(file).SIMDStorage.subscript(_:Int)*/
            class_108.prototype.subscript$set = function ($info, newValue, index) {
                this[index] = newValue;
            };
            return class_108;
        }()),
        _84.$struct = true,
        _84.$infoAddress = '0x7fb852d32d90',
        _84);
    UInt8.SIMD4Storage = (_85 = /** @class */ (function () {
            function class_109() {
            }
            /*Swift.(file).UInt8.SIMD4Storage.init()*/
            /*Swift.(file).SIMDStorage.init()*/
            class_109.prototype.init = function ($info) {
            };
            /*Swift.(file).UInt8.SIMD4Storage.subscript(_:Int)*/
            /*Swift.(file).SIMDStorage.subscript(_:Int)*/
            class_109.prototype.subscript$get = function ($info, index) {
                return this[index];
            }; /*Swift.(file).UInt8.SIMD4Storage.subscript(_:Int)*/
            /*Swift.(file).SIMDStorage.subscript(_:Int)*/
            class_109.prototype.subscript$set = function ($info, newValue, index) {
                this[index] = newValue;
            };
            return class_109;
        }()),
        _85.$struct = true,
        _85.$infoAddress = '0x7fb852d32f38',
        _85);
    UInt8.SIMD8Storage = (_86 = /** @class */ (function () {
            function class_110() {
            }
            /*Swift.(file).UInt8.SIMD8Storage.init()*/
            /*Swift.(file).SIMDStorage.init()*/
            class_110.prototype.init = function ($info) {
            };
            /*Swift.(file).UInt8.SIMD8Storage.subscript(_:Int)*/
            /*Swift.(file).SIMDStorage.subscript(_:Int)*/
            class_110.prototype.subscript$get = function ($info, index) {
                return this[index];
            }; /*Swift.(file).UInt8.SIMD8Storage.subscript(_:Int)*/
            /*Swift.(file).SIMDStorage.subscript(_:Int)*/
            class_110.prototype.subscript$set = function ($info, newValue, index) {
                this[index] = newValue;
            };
            return class_110;
        }()),
        _86.$struct = true,
        _86.$infoAddress = '0x7fb852d330e0',
        _86);
    UInt8.SIMD16Storage = (_87 = /** @class */ (function () {
            function class_111() {
            }
            /*Swift.(file).UInt8.SIMD16Storage.init()*/
            /*Swift.(file).SIMDStorage.init()*/
            class_111.prototype.init = function ($info) {
            };
            /*Swift.(file).UInt8.SIMD16Storage.subscript(_:Int)*/
            /*Swift.(file).SIMDStorage.subscript(_:Int)*/
            class_111.prototype.subscript$get = function ($info, index) {
                return this[index];
            }; /*Swift.(file).UInt8.SIMD16Storage.subscript(_:Int)*/
            /*Swift.(file).SIMDStorage.subscript(_:Int)*/
            class_111.prototype.subscript$set = function ($info, newValue, index) {
                this[index] = newValue;
            };
            return class_111;
        }()),
        _87.$struct = true,
        _87.$infoAddress = '0x7fb852d33288',
        _87);
    UInt8.SIMD32Storage = (_88 = /** @class */ (function () {
            function class_112() {
            }
            /*Swift.(file).UInt8.SIMD32Storage.init()*/
            /*Swift.(file).SIMDStorage.init()*/
            class_112.prototype.init = function ($info) {
            };
            /*Swift.(file).UInt8.SIMD32Storage.subscript(_:Int)*/
            /*Swift.(file).SIMDStorage.subscript(_:Int)*/
            class_112.prototype.subscript$get = function ($info, index) {
                return this[index];
            }; /*Swift.(file).UInt8.SIMD32Storage.subscript(_:Int)*/
            /*Swift.(file).SIMDStorage.subscript(_:Int)*/
            class_112.prototype.subscript$set = function ($info, newValue, index) {
                this[index] = newValue;
            };
            return class_112;
        }()),
        _88.$struct = true,
        _88.$infoAddress = '0x7fb852d33430',
        _88);
    UInt8.SIMD64Storage = (_89 = /** @class */ (function () {
            function class_113() {
            }
            /*Swift.(file).UInt8.SIMD64Storage.init()*/
            /*Swift.(file).SIMDStorage.init()*/
            class_113.prototype.init = function ($info) {
            };
            /*Swift.(file).UInt8.SIMD64Storage.subscript(_:Int)*/
            /*Swift.(file).SIMDStorage.subscript(_:Int)*/
            class_113.prototype.subscript$get = function ($info, index) {
                return this[index];
            }; /*Swift.(file).UInt8.SIMD64Storage.subscript(_:Int)*/
            /*Swift.(file).SIMDStorage.subscript(_:Int)*/
            class_113.prototype.subscript$set = function ($info, newValue, index) {
                this[index] = newValue;
            };
            return class_113;
        }()),
        _89.$struct = true,
        _89.$infoAddress = '0x7fb852d335d8',
        _89);
    return UInt8;
}());
if (typeof RandomAccessCollection$implementation != 'undefined')
    _mixin(UInt8.Words, RandomAccessCollection$implementation, false);
if (typeof SIMDStorage$implementation != 'undefined')
    _mixin(UInt8.SIMD2Storage, SIMDStorage$implementation, false);
if (typeof SIMDStorage$implementation != 'undefined')
    _mixin(UInt8.SIMD4Storage, SIMDStorage$implementation, false);
if (typeof SIMDStorage$implementation != 'undefined')
    _mixin(UInt8.SIMD8Storage, SIMDStorage$implementation, false);
if (typeof SIMDStorage$implementation != 'undefined')
    _mixin(UInt8.SIMD16Storage, SIMDStorage$implementation, false);
if (typeof SIMDStorage$implementation != 'undefined')
    _mixin(UInt8.SIMD32Storage, SIMDStorage$implementation, false);
if (typeof SIMDStorage$implementation != 'undefined')
    _mixin(UInt8.SIMD64Storage, SIMDStorage$implementation, false);
if (typeof FixedWidthInteger$implementation != 'undefined')
    _mixin(UInt8, FixedWidthInteger$implementation, false);
if (typeof UnsignedInteger$implementation != 'undefined')
    _mixin(UInt8, UnsignedInteger$implementation, false);
if (typeof _ExpressibleByBuiltinIntegerLiteral$implementation != 'undefined')
    _mixin(UInt8, _ExpressibleByBuiltinIntegerLiteral$implementation, false);
if (typeof Codable$implementation != 'undefined')
    _mixin(UInt8, Codable$implementation, false);
if (typeof Hashable$implementation != 'undefined')
    _mixin(UInt8, Hashable$implementation, false);
if (typeof _HasCustomAnyHashableRepresentation$implementation != 'undefined')
    _mixin(UInt8, _HasCustomAnyHashableRepresentation$implementation, false);
if (typeof CustomReflectable$implementation != 'undefined')
    _mixin(UInt8, CustomReflectable$implementation, false);
if (typeof _CustomPlaygroundQuickLookable$implementation != 'undefined')
    _mixin(UInt8, _CustomPlaygroundQuickLookable$implementation, false);
if (typeof _StringElement$implementation != 'undefined')
    _mixin(UInt8, _StringElement$implementation, false);
if (typeof SIMDScalar$implementation != 'undefined')
    _mixin(UInt8, SIMDScalar$implementation, false);
if (typeof CVarArg$implementation != 'undefined')
    _mixin(UInt8, CVarArg$implementation, false);
var Int8 = /** @class */ (function () {
    function Int8() {
    }
    /*Swift.(file).Int8.init(_builtinIntegerLiteral:IntLiteral)*/
    /*Swift.(file)._ExpressibleByBuiltinIntegerLiteral.init(_builtinIntegerLiteral:IntLiteral)*/
    Int8.prototype.init_builtinIntegerLiteralIntLiteral = function ($info, x) {
        return x;
    };
    /*Swift.(file).Int8.init(bitPattern:UInt8)*/
    /*Swift.(file).Int8.init(bitPattern:UInt8)*/
    Int8.prototype.initBitPatternUInt8 = function ($info, x) {
        return x;
    };
    /*Swift.(file).Int8.init(_:Float)*/
    /*Swift.(file).Int8.init(_:Float)*/
    Int8.prototype.initFloat = function ($info, source) {
        return source;
    };
    /*Swift.(file).Int8.init(exactly:Float)*/
    /*Swift.(file).Int8.init(exactly:Float)*/
    Int8.prototype.initExactlyFloat = function ($info, source) {
        return source;
    };
    /*Swift.(file).Int8.init(_:Double)*/
    /*Swift.(file).Int8.init(_:Double)*/
    Int8.prototype.initDouble = function ($info, source) {
        return source;
    };
    /*Swift.(file).Int8.init(exactly:Double)*/
    /*Swift.(file).Int8.init(exactly:Double)*/
    Int8.prototype.initExactlyDouble = function ($info, source) {
        return source;
    };
    /*Swift.(file).Int8.init(_:Float80)*/
    /*Swift.(file).Int8.init(_:Float80)*/
    Int8.prototype.initFloat80 = function ($info, source) {
        return source;
    };
    /*Swift.(file).Int8.init(exactly:Float80)*/
    /*Swift.(file).Int8.init(exactly:Float80)*/
    Int8.prototype.initExactlyFloat80 = function ($info, source) {
        return source;
    };
    /*Swift.(file).Int8.==infix(_:Int8,_:Int8)*/
    /*Swift.(file).Equatable.==infix(_:Self,_:Self)*/
    Int8.infix_61_61 = function ($info, lhs, rhs) {
        return lhs == rhs;
    };
    /*Swift.(file).Int8.<infix(_:Int8,_:Int8)*/
    /*Swift.(file).Comparable.<infix(_:Self,_:Self)*/
    Int8.infix_60 = function ($info, lhs, rhs) {
        return lhs < rhs;
    };
    /*Swift.(file).Int8.+=infix(_:Int8,_:Int8)*/
    /*Swift.(file).BinaryInteger.+=infix(_:Self,_:Self)*/
    /*Swift.(file).AdditiveArithmetic.+=infix(_:Self,_:Self)*/
    Int8.infix_43_61 = function ($info, lhs$inout, rhs) {
        lhs$inout.set(lhs$inout.get() + rhs);
    };
    /*Swift.(file).Int8.-=infix(_:Int8,_:Int8)*/
    /*Swift.(file).BinaryInteger.-=infix(_:Self,_:Self)*/
    /*Swift.(file).AdditiveArithmetic.-=infix(_:Self,_:Self)*/
    Int8.infix_45_61 = function ($info, lhs$inout, rhs) {
        lhs$inout.set(lhs$inout.get() - rhs);
    };
    /*Swift.(file).Int8.*=infix(_:Int8,_:Int8)*/
    /*Swift.(file).BinaryInteger.*=infix(_:Self,_:Self)*/
    /*Swift.(file).Numeric.*=infix(_:Self,_:Self)*/
    Int8.infix_42_61 = function ($info, lhs$inout, rhs) {
        lhs$inout.set(lhs$inout.get() * rhs);
    };
    /*Swift.(file).Int8./=infix(_:Int8,_:Int8)*/
    /*Swift.(file).BinaryInteger./=infix(_:Self,_:Self)*/
    Int8.infix_47_61 = function ($info, lhs$inout, rhs) {
        lhs$inout.set((lhs$inout.get() / rhs) | 0);
    };
    /*Swift.(file).Int8.dividedReportingOverflow(by:Int8)*/
    /*Swift.(file).FixedWidthInteger.dividedReportingOverflow(by:Self)*/
    Int8.prototype.dividedReportingOverflowBy = function ($info, other) {
    };
    /*Swift.(file).Int8.remainderReportingOverflow(dividingBy:Int8)*/
    /*Swift.(file).FixedWidthInteger.remainderReportingOverflow(dividingBy:Self)*/
    Int8.prototype.remainderReportingOverflowDividingBy = function ($info, other) {
    };
    /*Swift.(file).Int8.addingReportingOverflow(_:Int8)*/
    /*Swift.(file).FixedWidthInteger.addingReportingOverflow(_:Self)*/
    Int8.prototype.addingReportingOverflow = function ($info, other) {
    };
    /*Swift.(file).Int8.subtractingReportingOverflow(_:Int8)*/
    /*Swift.(file).FixedWidthInteger.subtractingReportingOverflow(_:Self)*/
    Int8.prototype.subtractingReportingOverflow = function ($info, other) {
    };
    /*Swift.(file).Int8.multipliedReportingOverflow(by:Int8)*/
    /*Swift.(file).FixedWidthInteger.multipliedReportingOverflow(by:Self)*/
    Int8.prototype.multipliedReportingOverflowBy = function ($info, other) {
    };
    /*Swift.(file).Int8.%=infix(_:Int8,_:Int8)*/
    /*Swift.(file).BinaryInteger.%=infix(_:Self,_:Self)*/
    Int8.infix_37_61 = function ($info, lhs$inout, rhs) {
        lhs$inout.set(lhs$inout.get() % rhs);
    };
    /*Swift.(file).Int8.init(_:Int8)*/
    /*Swift.(file).Int8.init(_:Int8)*/
    Int8.prototype.initInt8 = function ($info, _value) {
        return _value;
    };
    /*Swift.(file).Int8.&=infix(_:Int8,_:Int8)*/
    /*Swift.(file).BinaryInteger.&=infix(_:Self,_:Self)*/
    Int8.infix_38_61 = function ($info, lhs$inout, rhs) {
        /*lhs$inout.set(lhs$inout.get() & rhs)*/
    };
    /*Swift.(file).Int8.|=infix(_:Int8,_:Int8)*/
    /*Swift.(file).BinaryInteger.|=infix(_:Self,_:Self)*/
    Int8.infix_124_61 = function ($info, lhs$inout, rhs) {
        lhs$inout.set(lhs$inout.get() | rhs);
    };
    /*Swift.(file).Int8.^=infix(_:Int8,_:Int8)*/
    /*Swift.(file).BinaryInteger.^=infix(_:Self,_:Self)*/
    Int8.infix_94_61 = function ($info, lhs$inout, rhs) {
        lhs$inout.set(lhs$inout.get() ^ rhs);
    };
    /*Swift.(file).Int8.&>>=infix(_:Int8,_:Int8)*/
    /*Swift.(file).FixedWidthInteger.&>>=infix(_:Self,_:Self)*/
    Int8.infix_38_62_62_61 = function ($info, lhs$inout, rhs) {
        /*lhs$inout.set(lhs$inout.get() &>> rhs)*/
    };
    /*Swift.(file).Int8.&<<=infix(_:Int8,_:Int8)*/
    /*Swift.(file).FixedWidthInteger.&<<=infix(_:Self,_:Self)*/
    Int8.infix_38_60_60_61 = function ($info, lhs$inout, rhs) {
        /*lhs$inout.set(lhs$inout.get() &<< rhs)*/
    };
    /*Swift.(file).Int8.bitWidth*/ /*
    static bitWidth$get() {
    return this.bitWidth
    }
    static get bitWidth() { return this.bitWidth$get() }*/ ;
    /*Swift.(file).Int8.leadingZeroBitCount*/ /*
    leadingZeroBitCount$get() {
    return this.leadingZeroBitCount
    }
    get leadingZeroBitCount() { return this.leadingZeroBitCount$get() }*/ ;
    /*Swift.(file).Int8.trailingZeroBitCount*/ /*
    trailingZeroBitCount$get() {
    return this.trailingZeroBitCount
    }
    get trailingZeroBitCount() { return this.trailingZeroBitCount$get() }*/ ;
    /*Swift.(file).Int8.nonzeroBitCount*/ /*
    nonzeroBitCount$get() {
    return this.nonzeroBitCount
    }
    get nonzeroBitCount() { return this.nonzeroBitCount$get() }*/ ;
    /*Swift.(file).Int8.init(_truncatingBits:UInt)*/
    /*Swift.(file).FixedWidthInteger.init(_truncatingBits:UInt)*/
    Int8.prototype.init_truncatingBitsUInt = function ($info, bits) {
        return bits;
    };
    /*Swift.(file).Int8.magnitude*/ /*
    magnitude$get() {
    return this.magnitude
    }
    get magnitude() { return this.magnitude$get() }*/ ;
    /*Swift.(file).Int8.multipliedFullWidth(by:Int8)*/
    /*Swift.(file).FixedWidthInteger.multipliedFullWidth(by:Self)*/
    Int8.prototype.multipliedFullWidthBy = function ($info, other) {
    };
    /*Swift.(file).Int8.dividingFullWidth(_:(high: Int8, low: Int8.Magnitude))*/
    /*Swift.(file).FixedWidthInteger.dividingFullWidth(_:(high: Self, low: Self.Magnitude))*/
    Int8.prototype.dividingFullWidth = function ($info, dividend) {
    };
    /*Swift.(file).Int8.byteSwapped*/ /*
    byteSwapped$get() {
    return this.byteSwapped
    }
    get byteSwapped() { return this.byteSwapped$get() }*/ ;
    /*Swift.(file).Int8.toUIntMax()*/
    /*Swift.(file).Int8.toUIntMax()*/
    Int8.prototype.toUIntMax = function ($info) {
    };
    /*Swift.(file).Int8.signum()*/
    /*Swift.(file).BinaryInteger.signum()*/
    Int8.prototype.signum = function ($info) {
    };
    /*Swift.(file).Int8.&infix(_:Int8,_:Int8)*/
    /*Swift.(file).BinaryInteger.&infix(_:Self,_:Self)*/
    Int8.infix_38 = function ($info, lhs, rhs) {
        /*return lhs & rhs*/
    };
    /*Swift.(file).Int8.|infix(_:Int8,_:Int8)*/
    /*Swift.(file).BinaryInteger.|infix(_:Self,_:Self)*/
    Int8.infix_124 = function ($info, lhs, rhs) {
        return lhs | rhs;
    };
    /*Swift.(file).Int8.^infix(_:Int8,_:Int8)*/
    /*Swift.(file).BinaryInteger.^infix(_:Self,_:Self)*/
    Int8.infix_94 = function ($info, lhs, rhs) {
        return lhs ^ rhs;
    };
    /*Swift.(file).Int8.&>>infix(_:Int8,_:Int8)*/
    /*Swift.(file).FixedWidthInteger.&>>infix(_:Self,_:Self)*/
    Int8.infix_38_62_62 = function ($info, lhs, rhs) {
        /*return lhs &>> rhs*/
    };
    /*Swift.(file).Int8.&<<infix(_:Int8,_:Int8)*/
    /*Swift.(file).FixedWidthInteger.&<<infix(_:Self,_:Self)*/
    Int8.infix_38_60_60 = function ($info, lhs, rhs) {
        /*return lhs &<< rhs*/
    };
    /*Swift.(file).Int8./infix(_:Int8,_:Int8)*/
    /*Swift.(file).BinaryInteger./infix(_:Self,_:Self)*/
    Int8.infix_47 = function ($info, lhs, rhs) {
        return (lhs / rhs) | 0;
    };
    /*Swift.(file).Int8.%infix(_:Int8,_:Int8)*/
    /*Swift.(file).BinaryInteger.%infix(_:Self,_:Self)*/
    Int8.infix_37 = function ($info, lhs, rhs) {
        return lhs % rhs;
    };
    /*Swift.(file).Int8.+infix(_:Int8,_:Int8)*/
    /*Swift.(file).BinaryInteger.+infix(_:Self,_:Self)*/
    /*Swift.(file).AdditiveArithmetic.+infix(_:Self,_:Self)*/
    Int8.infix_43 = function ($info, lhs, rhs) {
        return lhs + rhs;
    };
    /*Swift.(file).Int8.-infix(_:Int8,_:Int8)*/
    /*Swift.(file).BinaryInteger.-infix(_:Self,_:Self)*/
    /*Swift.(file).AdditiveArithmetic.-infix(_:Self,_:Self)*/
    Int8.infix_45 = function ($info, lhs, rhs) {
        return lhs - rhs;
    };
    /*Swift.(file).Int8.*infix(_:Int8,_:Int8)*/
    /*Swift.(file).BinaryInteger.*infix(_:Self,_:Self)*/
    /*Swift.(file).Numeric.*infix(_:Self,_:Self)*/
    Int8.infix_42 = function ($info, lhs, rhs) {
        return lhs * rhs;
    };
    /*Swift.(file).Int8.>>infix(_:Int8,_:Int8)*/
    /*Swift.(file).Int8.>>infix(_:Int8,_:Int8)*/
    Int8.infix_62_62 = function ($info, lhs, rhs) {
        return lhs >> rhs;
    };
    /*Swift.(file).Int8.>>=infix(_:Int8,_:Int8)*/
    /*Swift.(file).Int8.>>=infix(_:Int8,_:Int8)*/
    Int8.infix_62_62_61 = function ($info, lhs$inout, rhs) {
        lhs$inout.set(lhs$inout.get() >> rhs);
    };
    /*Swift.(file).Int8.<<infix(_:Int8,_:Int8)*/
    /*Swift.(file).Int8.<<infix(_:Int8,_:Int8)*/
    Int8.infix_60_60 = function ($info, lhs, rhs) {
        var binaryRepr = lhs.toString(2);
        var result = 0;
        for (var i = 0; i < binaryRepr.length; i++) {
            var j = i - rhs;
            if (binaryRepr[j] !== '1')
                continue;
            result += j === 0 ? -128 : Math.pow(2, 7 - j);
        }
        return result;
    };
    /*Swift.(file).Int8.<<=infix(_:Int8,_:Int8)*/
    /*Swift.(file).Int8.<<=infix(_:Int8,_:Int8)*/
    Int8.infix_60_60_61 = function ($info, lhs$inout, rhs) {
        lhs$inout.set(lhs$inout.get() << rhs);
    };
    /*Swift.(file).Int8.<=infix(_:Int8,_:Int8)*/
    /*Swift.(file).Comparable.<=infix(_:Self,_:Self)*/
    Int8.infix_60_61 = function ($info, lhs, rhs) {
        return lhs <= rhs;
    };
    /*Swift.(file).Int8.>=infix(_:Int8,_:Int8)*/
    /*Swift.(file).Comparable.>=infix(_:Self,_:Self)*/
    Int8.infix_62_61 = function ($info, lhs, rhs) {
        return lhs >= rhs;
    };
    /*Swift.(file).Int8.>infix(_:Int8,_:Int8)*/
    /*Swift.(file).Comparable.>infix(_:Self,_:Self)*/
    Int8.infix_62 = function ($info, lhs, rhs) {
        return lhs > rhs;
    };
    /*Swift.(file).Int8.init(from:Decoder)*/
    /*Swift.(file).Decodable.init(from:Decoder)*/
    Int8.prototype.initFromDecoder = function ($info, decoder) {
        return decoder;
    };
    /*Swift.(file).Int8.encode(to:Encoder)*/
    /*Swift.(file).Encodable.encode(to:Encoder)*/
    Int8.prototype.encodeTo = function ($info, encoder) {
    };
    /*Swift.(file).Int8.hash(into:Hasher)*/
    /*Swift.(file).Hashable.hash(into:Hasher)*/
    Int8.prototype.hashInto = function ($info, hasher$inout) {
    };
    /*Swift.(file).Int8.hashValue*/ /*
    hashValue$get() {
    return this.hashValue
    }
    get hashValue() { return this.hashValue$get() }*/ ;
    /*Swift.(file).Int8.init(truncatingBitPattern:UInt16)*/
    /*Swift.(file).Int8.init(truncatingBitPattern:UInt16)*/
    Int8.prototype.initTruncatingBitPatternUInt16 = function ($info, source) {
        return source;
    };
    /*Swift.(file).Int8.init(truncatingBitPattern:Int16)*/
    /*Swift.(file).Int8.init(truncatingBitPattern:Int16)*/
    Int8.prototype.initTruncatingBitPatternInt16 = function ($info, source) {
        return source;
    };
    /*Swift.(file).Int8.init(truncatingBitPattern:UInt32)*/
    /*Swift.(file).Int8.init(truncatingBitPattern:UInt32)*/
    Int8.prototype.initTruncatingBitPatternUInt32 = function ($info, source) {
        return source;
    };
    /*Swift.(file).Int8.init(truncatingBitPattern:Int32)*/
    /*Swift.(file).Int8.init(truncatingBitPattern:Int32)*/
    Int8.prototype.initTruncatingBitPatternInt32 = function ($info, source) {
        return source;
    };
    /*Swift.(file).Int8.init(truncatingBitPattern:UInt64)*/
    /*Swift.(file).Int8.init(truncatingBitPattern:UInt64)*/
    Int8.prototype.initTruncatingBitPatternUInt64 = function ($info, source) {
        return source;
    };
    /*Swift.(file).Int8.init(truncatingBitPattern:Int64)*/
    /*Swift.(file).Int8.init(truncatingBitPattern:Int64)*/
    Int8.prototype.initTruncatingBitPatternInt64 = function ($info, source) {
        return source;
    };
    /*Swift.(file).Int8.init(truncatingBitPattern:UInt)*/
    /*Swift.(file).Int8.init(truncatingBitPattern:UInt)*/
    Int8.prototype.initTruncatingBitPatternUInt = function ($info, source) {
        return source;
    };
    /*Swift.(file).Int8.init(truncatingBitPattern:Int)*/
    /*Swift.(file).Int8.init(truncatingBitPattern:Int)*/
    Int8.prototype.initTruncatingBitPatternInt = function ($info, source) {
        return source;
    };
    /*Swift.(file).Int8.customMirror*/ /*
    customMirror$get() {
    return this.customMirror
    }
    get customMirror() { return this.customMirror$get() }*/ ;
    /*Swift.(file).Int8.customPlaygroundQuickLook*/ /*
    customPlaygroundQuickLook$get() {
    return this.customPlaygroundQuickLook
    }
    get customPlaygroundQuickLook() { return this.customPlaygroundQuickLook$get() }*/ ;
    var _90, _91, _92, _93, _94, _95, _96;
    Int8.$struct = true;
    Int8.$mixin = true;
    Int8.$infoAddress = '0x7fb851821788';
    Int8.Words = (_90 = /** @class */ (function () {
            function class_114() {
            }
            /*Swift.(file).Int8.Words.init(_:Int8)*/
            /*Swift.(file).Int8.Words.init(_:Int8)*/
            class_114.prototype.initInt8 = function ($info, value) {
                return value;
            };
            /*Swift.(file).Int8.Words.count*/ /*
            count$get() {
            return this.count
            }
            get count() { return this.count$get() }*/ ;
            /*Swift.(file).Int8.Words.startIndex*/ /*
            startIndex$get() {
            return this.startIndex
            }
            get startIndex() { return this.startIndex$get() }*/ ;
            /*Swift.(file).Int8.Words.endIndex*/ /*
            endIndex$get() {
            return this.endIndex
            }
            get endIndex() { return this.endIndex$get() }*/ ;
            /*Swift.(file).Int8.Words.indices*/ /*
            indices$get() {
            return this.indices
            }
            get indices() { return this.indices$get() }*/ ;
            /*Swift.(file).Int8.Words.index(after:Int)*/
            /*Swift.(file).RandomAccessCollection.index(after:Self.Index)*/
            /*Swift.(file).BidirectionalCollection.index(after:Self.Index)*/
            /*Swift.(file).Collection.index(after:Self.Index)*/
            class_114.prototype.indexAfter = function ($info, i) {
            };
            /*Swift.(file).Int8.Words.index(before:Int)*/
            /*Swift.(file).RandomAccessCollection.index(before:Self.Index)*/
            /*Swift.(file).BidirectionalCollection.index(before:Self.Index)*/
            class_114.prototype.indexBefore = function ($info, i) {
            };
            /*Swift.(file).Int8.Words.subscript(_:Int)*/
            /*Swift.(file).RandomAccessCollection.subscript(_:Self.Index)*/
            /*Swift.(file).BidirectionalCollection.subscript(_:Self.Index)*/
            /*Swift.(file).Collection.subscript(_:Self.Index)*/
            class_114.prototype.subscript$get = function ($info, position) {
                return this[position];
            };
            return class_114;
        }()),
        _90.$struct = true,
        _90.$infoAddress = '0x7fb851be99b8',
        _90);
    Int8.SIMD2Storage = (_91 = /** @class */ (function () {
            function class_115() {
            }
            /*Swift.(file).Int8.SIMD2Storage.init()*/
            /*Swift.(file).SIMDStorage.init()*/
            class_115.prototype.init = function ($info) {
            };
            /*Swift.(file).Int8.SIMD2Storage.subscript(_:Int)*/
            /*Swift.(file).SIMDStorage.subscript(_:Int)*/
            class_115.prototype.subscript$get = function ($info, index) {
                return this[index];
            }; /*Swift.(file).Int8.SIMD2Storage.subscript(_:Int)*/
            /*Swift.(file).SIMDStorage.subscript(_:Int)*/
            class_115.prototype.subscript$set = function ($info, newValue, index) {
                this[index] = newValue;
            };
            return class_115;
        }()),
        _91.$struct = true,
        _91.$infoAddress = '0x7fb852d3cb80',
        _91);
    Int8.SIMD4Storage = (_92 = /** @class */ (function () {
            function class_116() {
            }
            /*Swift.(file).Int8.SIMD4Storage.init()*/
            /*Swift.(file).SIMDStorage.init()*/
            class_116.prototype.init = function ($info) {
            };
            /*Swift.(file).Int8.SIMD4Storage.subscript(_:Int)*/
            /*Swift.(file).SIMDStorage.subscript(_:Int)*/
            class_116.prototype.subscript$get = function ($info, index) {
                return this[index];
            }; /*Swift.(file).Int8.SIMD4Storage.subscript(_:Int)*/
            /*Swift.(file).SIMDStorage.subscript(_:Int)*/
            class_116.prototype.subscript$set = function ($info, newValue, index) {
                this[index] = newValue;
            };
            return class_116;
        }()),
        _92.$struct = true,
        _92.$infoAddress = '0x7fb852d3cd28',
        _92);
    Int8.SIMD8Storage = (_93 = /** @class */ (function () {
            function class_117() {
            }
            /*Swift.(file).Int8.SIMD8Storage.init()*/
            /*Swift.(file).SIMDStorage.init()*/
            class_117.prototype.init = function ($info) {
            };
            /*Swift.(file).Int8.SIMD8Storage.subscript(_:Int)*/
            /*Swift.(file).SIMDStorage.subscript(_:Int)*/
            class_117.prototype.subscript$get = function ($info, index) {
                return this[index];
            }; /*Swift.(file).Int8.SIMD8Storage.subscript(_:Int)*/
            /*Swift.(file).SIMDStorage.subscript(_:Int)*/
            class_117.prototype.subscript$set = function ($info, newValue, index) {
                this[index] = newValue;
            };
            return class_117;
        }()),
        _93.$struct = true,
        _93.$infoAddress = '0x7fb852d3ced0',
        _93);
    Int8.SIMD16Storage = (_94 = /** @class */ (function () {
            function class_118() {
            }
            /*Swift.(file).Int8.SIMD16Storage.init()*/
            /*Swift.(file).SIMDStorage.init()*/
            class_118.prototype.init = function ($info) {
            };
            /*Swift.(file).Int8.SIMD16Storage.subscript(_:Int)*/
            /*Swift.(file).SIMDStorage.subscript(_:Int)*/
            class_118.prototype.subscript$get = function ($info, index) {
                return this[index];
            }; /*Swift.(file).Int8.SIMD16Storage.subscript(_:Int)*/
            /*Swift.(file).SIMDStorage.subscript(_:Int)*/
            class_118.prototype.subscript$set = function ($info, newValue, index) {
                this[index] = newValue;
            };
            return class_118;
        }()),
        _94.$struct = true,
        _94.$infoAddress = '0x7fb852d3d078',
        _94);
    Int8.SIMD32Storage = (_95 = /** @class */ (function () {
            function class_119() {
            }
            /*Swift.(file).Int8.SIMD32Storage.init()*/
            /*Swift.(file).SIMDStorage.init()*/
            class_119.prototype.init = function ($info) {
            };
            /*Swift.(file).Int8.SIMD32Storage.subscript(_:Int)*/
            /*Swift.(file).SIMDStorage.subscript(_:Int)*/
            class_119.prototype.subscript$get = function ($info, index) {
                return this[index];
            }; /*Swift.(file).Int8.SIMD32Storage.subscript(_:Int)*/
            /*Swift.(file).SIMDStorage.subscript(_:Int)*/
            class_119.prototype.subscript$set = function ($info, newValue, index) {
                this[index] = newValue;
            };
            return class_119;
        }()),
        _95.$struct = true,
        _95.$infoAddress = '0x7fb852d3d220',
        _95);
    Int8.SIMD64Storage = (_96 = /** @class */ (function () {
            function class_120() {
            }
            /*Swift.(file).Int8.SIMD64Storage.init()*/
            /*Swift.(file).SIMDStorage.init()*/
            class_120.prototype.init = function ($info) {
            };
            /*Swift.(file).Int8.SIMD64Storage.subscript(_:Int)*/
            /*Swift.(file).SIMDStorage.subscript(_:Int)*/
            class_120.prototype.subscript$get = function ($info, index) {
                return this[index];
            }; /*Swift.(file).Int8.SIMD64Storage.subscript(_:Int)*/
            /*Swift.(file).SIMDStorage.subscript(_:Int)*/
            class_120.prototype.subscript$set = function ($info, newValue, index) {
                this[index] = newValue;
            };
            return class_120;
        }()),
        _96.$struct = true,
        _96.$infoAddress = '0x7fb852d3d3c8',
        _96);
    return Int8;
}());
if (typeof RandomAccessCollection$implementation != 'undefined')
    _mixin(Int8.Words, RandomAccessCollection$implementation, false);
if (typeof SIMDStorage$implementation != 'undefined')
    _mixin(Int8.SIMD2Storage, SIMDStorage$implementation, false);
if (typeof SIMDStorage$implementation != 'undefined')
    _mixin(Int8.SIMD4Storage, SIMDStorage$implementation, false);
if (typeof SIMDStorage$implementation != 'undefined')
    _mixin(Int8.SIMD8Storage, SIMDStorage$implementation, false);
if (typeof SIMDStorage$implementation != 'undefined')
    _mixin(Int8.SIMD16Storage, SIMDStorage$implementation, false);
if (typeof SIMDStorage$implementation != 'undefined')
    _mixin(Int8.SIMD32Storage, SIMDStorage$implementation, false);
if (typeof SIMDStorage$implementation != 'undefined')
    _mixin(Int8.SIMD64Storage, SIMDStorage$implementation, false);
if (typeof FixedWidthInteger$implementation != 'undefined')
    _mixin(Int8, FixedWidthInteger$implementation, false);
if (typeof SignedInteger$implementation != 'undefined')
    _mixin(Int8, SignedInteger$implementation, false);
if (typeof _ExpressibleByBuiltinIntegerLiteral$implementation != 'undefined')
    _mixin(Int8, _ExpressibleByBuiltinIntegerLiteral$implementation, false);
if (typeof Codable$implementation != 'undefined')
    _mixin(Int8, Codable$implementation, false);
if (typeof Hashable$implementation != 'undefined')
    _mixin(Int8, Hashable$implementation, false);
if (typeof _HasCustomAnyHashableRepresentation$implementation != 'undefined')
    _mixin(Int8, _HasCustomAnyHashableRepresentation$implementation, false);
if (typeof CustomReflectable$implementation != 'undefined')
    _mixin(Int8, CustomReflectable$implementation, false);
if (typeof _CustomPlaygroundQuickLookable$implementation != 'undefined')
    _mixin(Int8, _CustomPlaygroundQuickLookable$implementation, false);
if (typeof SIMDScalar$implementation != 'undefined')
    _mixin(Int8, SIMDScalar$implementation, false);
if (typeof CVarArg$implementation != 'undefined')
    _mixin(Int8, CVarArg$implementation, false);
var UInt16 = /** @class */ (function () {
    function UInt16() {
    }
    /*Swift.(file).UInt16.init(_builtinIntegerLiteral:IntLiteral)*/
    /*Swift.(file)._ExpressibleByBuiltinIntegerLiteral.init(_builtinIntegerLiteral:IntLiteral)*/
    UInt16.prototype.init_builtinIntegerLiteralIntLiteral = function ($info, x) {
        return x;
    };
    /*Swift.(file).UInt16.init(bitPattern:Int16)*/
    /*Swift.(file).UInt16.init(bitPattern:Int16)*/
    UInt16.prototype.initBitPatternInt16 = function ($info, x) {
        return x;
    };
    /*Swift.(file).UInt16.init(_:Float)*/
    /*Swift.(file).UInt16.init(_:Float)*/
    UInt16.prototype.initFloat = function ($info, source) {
        return source;
    };
    /*Swift.(file).UInt16.init(exactly:Float)*/
    /*Swift.(file).UInt16.init(exactly:Float)*/
    UInt16.prototype.initExactlyFloat = function ($info, source) {
        return source;
    };
    /*Swift.(file).UInt16.init(_:Double)*/
    /*Swift.(file).UInt16.init(_:Double)*/
    UInt16.prototype.initDouble = function ($info, source) {
        return source;
    };
    /*Swift.(file).UInt16.init(exactly:Double)*/
    /*Swift.(file).UInt16.init(exactly:Double)*/
    UInt16.prototype.initExactlyDouble = function ($info, source) {
        return source;
    };
    /*Swift.(file).UInt16.init(_:Float80)*/
    /*Swift.(file).UInt16.init(_:Float80)*/
    UInt16.prototype.initFloat80 = function ($info, source) {
        return source;
    };
    /*Swift.(file).UInt16.init(exactly:Float80)*/
    /*Swift.(file).UInt16.init(exactly:Float80)*/
    UInt16.prototype.initExactlyFloat80 = function ($info, source) {
        return source;
    };
    /*Swift.(file).UInt16.==infix(_:UInt16,_:UInt16)*/
    /*Swift.(file).Equatable.==infix(_:Self,_:Self)*/
    UInt16.infix_61_61 = function ($info, lhs, rhs) {
        return lhs == rhs;
    };
    /*Swift.(file).UInt16.<infix(_:UInt16,_:UInt16)*/
    /*Swift.(file).Comparable.<infix(_:Self,_:Self)*/
    UInt16.infix_60 = function ($info, lhs, rhs) {
        return lhs < rhs;
    };
    /*Swift.(file).UInt16.+=infix(_:UInt16,_:UInt16)*/
    /*Swift.(file).BinaryInteger.+=infix(_:Self,_:Self)*/
    /*Swift.(file).AdditiveArithmetic.+=infix(_:Self,_:Self)*/
    UInt16.infix_43_61 = function ($info, lhs$inout, rhs) {
        lhs$inout.set(lhs$inout.get() + rhs);
    };
    /*Swift.(file).UInt16.-=infix(_:UInt16,_:UInt16)*/
    /*Swift.(file).BinaryInteger.-=infix(_:Self,_:Self)*/
    /*Swift.(file).AdditiveArithmetic.-=infix(_:Self,_:Self)*/
    UInt16.infix_45_61 = function ($info, lhs$inout, rhs) {
        lhs$inout.set(lhs$inout.get() - rhs);
    };
    /*Swift.(file).UInt16.*=infix(_:UInt16,_:UInt16)*/
    /*Swift.(file).BinaryInteger.*=infix(_:Self,_:Self)*/
    /*Swift.(file).Numeric.*=infix(_:Self,_:Self)*/
    UInt16.infix_42_61 = function ($info, lhs$inout, rhs) {
        lhs$inout.set(lhs$inout.get() * rhs);
    };
    /*Swift.(file).UInt16./=infix(_:UInt16,_:UInt16)*/
    /*Swift.(file).BinaryInteger./=infix(_:Self,_:Self)*/
    UInt16.infix_47_61 = function ($info, lhs$inout, rhs) {
        lhs$inout.set((lhs$inout.get() / rhs) | 0);
    };
    /*Swift.(file).UInt16.dividedReportingOverflow(by:UInt16)*/
    /*Swift.(file).FixedWidthInteger.dividedReportingOverflow(by:Self)*/
    UInt16.prototype.dividedReportingOverflowBy = function ($info, other) {
    };
    /*Swift.(file).UInt16.remainderReportingOverflow(dividingBy:UInt16)*/
    /*Swift.(file).FixedWidthInteger.remainderReportingOverflow(dividingBy:Self)*/
    UInt16.prototype.remainderReportingOverflowDividingBy = function ($info, other) {
    };
    /*Swift.(file).UInt16.addingReportingOverflow(_:UInt16)*/
    /*Swift.(file).FixedWidthInteger.addingReportingOverflow(_:Self)*/
    UInt16.prototype.addingReportingOverflow = function ($info, other) {
    };
    /*Swift.(file).UInt16.subtractingReportingOverflow(_:UInt16)*/
    /*Swift.(file).FixedWidthInteger.subtractingReportingOverflow(_:Self)*/
    UInt16.prototype.subtractingReportingOverflow = function ($info, other) {
    };
    /*Swift.(file).UInt16.multipliedReportingOverflow(by:UInt16)*/
    /*Swift.(file).FixedWidthInteger.multipliedReportingOverflow(by:Self)*/
    UInt16.prototype.multipliedReportingOverflowBy = function ($info, other) {
    };
    /*Swift.(file).UInt16.%=infix(_:UInt16,_:UInt16)*/
    /*Swift.(file).BinaryInteger.%=infix(_:Self,_:Self)*/
    UInt16.infix_37_61 = function ($info, lhs$inout, rhs) {
        lhs$inout.set(lhs$inout.get() % rhs);
    };
    /*Swift.(file).UInt16.init(_:Int16)*/
    /*Swift.(file).UInt16.init(_:Int16)*/
    UInt16.prototype.initInt16 = function ($info, _value) {
        return _value;
    };
    /*Swift.(file).UInt16.&=infix(_:UInt16,_:UInt16)*/
    /*Swift.(file).BinaryInteger.&=infix(_:Self,_:Self)*/
    UInt16.infix_38_61 = function ($info, lhs$inout, rhs) {
        /*lhs$inout.set(lhs$inout.get() & rhs)*/
    };
    /*Swift.(file).UInt16.|=infix(_:UInt16,_:UInt16)*/
    /*Swift.(file).BinaryInteger.|=infix(_:Self,_:Self)*/
    UInt16.infix_124_61 = function ($info, lhs$inout, rhs) {
        lhs$inout.set(lhs$inout.get() | rhs);
    };
    /*Swift.(file).UInt16.^=infix(_:UInt16,_:UInt16)*/
    /*Swift.(file).BinaryInteger.^=infix(_:Self,_:Self)*/
    UInt16.infix_94_61 = function ($info, lhs$inout, rhs) {
        lhs$inout.set(lhs$inout.get() ^ rhs);
    };
    /*Swift.(file).UInt16.&>>=infix(_:UInt16,_:UInt16)*/
    /*Swift.(file).FixedWidthInteger.&>>=infix(_:Self,_:Self)*/
    UInt16.infix_38_62_62_61 = function ($info, lhs$inout, rhs) {
        /*lhs$inout.set(lhs$inout.get() &>> rhs)*/
    };
    /*Swift.(file).UInt16.&<<=infix(_:UInt16,_:UInt16)*/
    /*Swift.(file).FixedWidthInteger.&<<=infix(_:Self,_:Self)*/
    UInt16.infix_38_60_60_61 = function ($info, lhs$inout, rhs) {
        /*lhs$inout.set(lhs$inout.get() &<< rhs)*/
    };
    /*Swift.(file).UInt16.bitWidth*/ /*
    static bitWidth$get() {
    return this.bitWidth
    }
    static get bitWidth() { return this.bitWidth$get() }*/ ;
    /*Swift.(file).UInt16.leadingZeroBitCount*/ /*
    leadingZeroBitCount$get() {
    return this.leadingZeroBitCount
    }
    get leadingZeroBitCount() { return this.leadingZeroBitCount$get() }*/ ;
    /*Swift.(file).UInt16.trailingZeroBitCount*/ /*
    trailingZeroBitCount$get() {
    return this.trailingZeroBitCount
    }
    get trailingZeroBitCount() { return this.trailingZeroBitCount$get() }*/ ;
    /*Swift.(file).UInt16.nonzeroBitCount*/ /*
    nonzeroBitCount$get() {
    return this.nonzeroBitCount
    }
    get nonzeroBitCount() { return this.nonzeroBitCount$get() }*/ ;
    /*Swift.(file).UInt16.init(_truncatingBits:UInt)*/
    /*Swift.(file).FixedWidthInteger.init(_truncatingBits:UInt)*/
    UInt16.prototype.init_truncatingBitsUInt = function ($info, bits) {
        return bits;
    };
    /*Swift.(file).UInt16.multipliedFullWidth(by:UInt16)*/
    /*Swift.(file).FixedWidthInteger.multipliedFullWidth(by:Self)*/
    UInt16.prototype.multipliedFullWidthBy = function ($info, other) {
    };
    /*Swift.(file).UInt16.dividingFullWidth(_:(high: UInt16, low: UInt16.Magnitude))*/
    /*Swift.(file).FixedWidthInteger.dividingFullWidth(_:(high: Self, low: Self.Magnitude))*/
    UInt16.prototype.dividingFullWidth = function ($info, dividend) {
    };
    /*Swift.(file).UInt16.byteSwapped*/ /*
    byteSwapped$get() {
    return this.byteSwapped
    }
    get byteSwapped() { return this.byteSwapped$get() }*/ ;
    /*Swift.(file).UInt16.toIntMax()*/
    /*Swift.(file).UInt16.toIntMax()*/
    UInt16.prototype.toIntMax = function ($info) {
    };
    /*Swift.(file).UInt16.signum()*/
    /*Swift.(file).BinaryInteger.signum()*/
    UInt16.prototype.signum = function ($info) {
    };
    /*Swift.(file).UInt16.&infix(_:UInt16,_:UInt16)*/
    /*Swift.(file).BinaryInteger.&infix(_:Self,_:Self)*/
    UInt16.infix_38 = function ($info, lhs, rhs) {
        /*return lhs & rhs*/
    };
    /*Swift.(file).UInt16.|infix(_:UInt16,_:UInt16)*/
    /*Swift.(file).BinaryInteger.|infix(_:Self,_:Self)*/
    UInt16.infix_124 = function ($info, lhs, rhs) {
        return lhs | rhs;
    };
    /*Swift.(file).UInt16.^infix(_:UInt16,_:UInt16)*/
    /*Swift.(file).BinaryInteger.^infix(_:Self,_:Self)*/
    UInt16.infix_94 = function ($info, lhs, rhs) {
        return lhs ^ rhs;
    };
    /*Swift.(file).UInt16.&>>infix(_:UInt16,_:UInt16)*/
    /*Swift.(file).FixedWidthInteger.&>>infix(_:Self,_:Self)*/
    UInt16.infix_38_62_62 = function ($info, lhs, rhs) {
        /*return lhs &>> rhs*/
    };
    /*Swift.(file).UInt16.&<<infix(_:UInt16,_:UInt16)*/
    /*Swift.(file).FixedWidthInteger.&<<infix(_:Self,_:Self)*/
    UInt16.infix_38_60_60 = function ($info, lhs, rhs) {
        /*return lhs &<< rhs*/
    };
    /*Swift.(file).UInt16./infix(_:UInt16,_:UInt16)*/
    /*Swift.(file).BinaryInteger./infix(_:Self,_:Self)*/
    UInt16.infix_47 = function ($info, lhs, rhs) {
        return (lhs / rhs) | 0;
    };
    /*Swift.(file).UInt16.%infix(_:UInt16,_:UInt16)*/
    /*Swift.(file).BinaryInteger.%infix(_:Self,_:Self)*/
    UInt16.infix_37 = function ($info, lhs, rhs) {
        return lhs % rhs;
    };
    /*Swift.(file).UInt16.+infix(_:UInt16,_:UInt16)*/
    /*Swift.(file).BinaryInteger.+infix(_:Self,_:Self)*/
    /*Swift.(file).AdditiveArithmetic.+infix(_:Self,_:Self)*/
    UInt16.infix_43 = function ($info, lhs, rhs) {
        return lhs + rhs;
    };
    /*Swift.(file).UInt16.-infix(_:UInt16,_:UInt16)*/
    /*Swift.(file).BinaryInteger.-infix(_:Self,_:Self)*/
    /*Swift.(file).AdditiveArithmetic.-infix(_:Self,_:Self)*/
    UInt16.infix_45 = function ($info, lhs, rhs) {
        return lhs - rhs;
    };
    /*Swift.(file).UInt16.*infix(_:UInt16,_:UInt16)*/
    /*Swift.(file).BinaryInteger.*infix(_:Self,_:Self)*/
    /*Swift.(file).Numeric.*infix(_:Self,_:Self)*/
    UInt16.infix_42 = function ($info, lhs, rhs) {
        return lhs * rhs;
    };
    /*Swift.(file).UInt16.>>infix(_:UInt16,_:UInt16)*/
    /*Swift.(file).UInt16.>>infix(_:UInt16,_:UInt16)*/
    UInt16.infix_62_62 = function ($info, lhs, rhs) {
        return lhs >> rhs;
    };
    /*Swift.(file).UInt16.>>=infix(_:UInt16,_:UInt16)*/
    /*Swift.(file).UInt16.>>=infix(_:UInt16,_:UInt16)*/
    UInt16.infix_62_62_61 = function ($info, lhs$inout, rhs) {
        lhs$inout.set(lhs$inout.get() >> rhs);
    };
    /*Swift.(file).UInt16.<<infix(_:UInt16,_:UInt16)*/
    /*Swift.(file).UInt16.<<infix(_:UInt16,_:UInt16)*/
    UInt16.infix_60_60 = function ($info, lhs, rhs) {
        return lhs << rhs;
    };
    /*Swift.(file).UInt16.<<=infix(_:UInt16,_:UInt16)*/
    /*Swift.(file).UInt16.<<=infix(_:UInt16,_:UInt16)*/
    UInt16.infix_60_60_61 = function ($info, lhs$inout, rhs) {
        lhs$inout.set(lhs$inout.get() << rhs);
    };
    /*Swift.(file).UInt16.<=infix(_:UInt16,_:UInt16)*/
    /*Swift.(file).Comparable.<=infix(_:Self,_:Self)*/
    UInt16.infix_60_61 = function ($info, lhs, rhs) {
        return lhs <= rhs;
    };
    /*Swift.(file).UInt16.>=infix(_:UInt16,_:UInt16)*/
    /*Swift.(file).Comparable.>=infix(_:Self,_:Self)*/
    UInt16.infix_62_61 = function ($info, lhs, rhs) {
        return lhs >= rhs;
    };
    /*Swift.(file).UInt16.>infix(_:UInt16,_:UInt16)*/
    /*Swift.(file).Comparable.>infix(_:Self,_:Self)*/
    UInt16.infix_62 = function ($info, lhs, rhs) {
        return lhs > rhs;
    };
    /*Swift.(file).UInt16.init(from:Decoder)*/
    /*Swift.(file).Decodable.init(from:Decoder)*/
    UInt16.prototype.initFromDecoder = function ($info, decoder) {
        return decoder;
    };
    /*Swift.(file).UInt16.encode(to:Encoder)*/
    /*Swift.(file).Encodable.encode(to:Encoder)*/
    UInt16.prototype.encodeTo = function ($info, encoder) {
    };
    /*Swift.(file).UInt16.hash(into:Hasher)*/
    /*Swift.(file).Hashable.hash(into:Hasher)*/
    UInt16.prototype.hashInto = function ($info, hasher$inout) {
    };
    /*Swift.(file).UInt16.hashValue*/ /*
    hashValue$get() {
    return this.hashValue
    }
    get hashValue() { return this.hashValue$get() }*/ ;
    /*Swift.(file).UInt16.init(truncatingBitPattern:UInt32)*/
    /*Swift.(file).UInt16.init(truncatingBitPattern:UInt32)*/
    UInt16.prototype.initTruncatingBitPatternUInt32 = function ($info, source) {
        return source;
    };
    /*Swift.(file).UInt16.init(truncatingBitPattern:Int32)*/
    /*Swift.(file).UInt16.init(truncatingBitPattern:Int32)*/
    UInt16.prototype.initTruncatingBitPatternInt32 = function ($info, source) {
        return source;
    };
    /*Swift.(file).UInt16.init(truncatingBitPattern:UInt64)*/
    /*Swift.(file).UInt16.init(truncatingBitPattern:UInt64)*/
    UInt16.prototype.initTruncatingBitPatternUInt64 = function ($info, source) {
        return source;
    };
    /*Swift.(file).UInt16.init(truncatingBitPattern:Int64)*/
    /*Swift.(file).UInt16.init(truncatingBitPattern:Int64)*/
    UInt16.prototype.initTruncatingBitPatternInt64 = function ($info, source) {
        return source;
    };
    /*Swift.(file).UInt16.init(truncatingBitPattern:UInt)*/
    /*Swift.(file).UInt16.init(truncatingBitPattern:UInt)*/
    UInt16.prototype.initTruncatingBitPatternUInt = function ($info, source) {
        return source;
    };
    /*Swift.(file).UInt16.init(truncatingBitPattern:Int)*/
    /*Swift.(file).UInt16.init(truncatingBitPattern:Int)*/
    UInt16.prototype.initTruncatingBitPatternInt = function ($info, source) {
        return source;
    };
    /*Swift.(file).UInt16.customMirror*/ /*
    customMirror$get() {
    return this.customMirror
    }
    get customMirror() { return this.customMirror$get() }*/ ;
    /*Swift.(file).UInt16.customPlaygroundQuickLook*/ /*
    customPlaygroundQuickLook$get() {
    return this.customPlaygroundQuickLook
    }
    get customPlaygroundQuickLook() { return this.customPlaygroundQuickLook$get() }*/ ;
    var _97, _98, _99, _100, _101, _102, _103;
    UInt16.$struct = true;
    UInt16.$mixin = true;
    UInt16.$infoAddress = '0x7fb851821c08';
    UInt16.Words = (_97 = /** @class */ (function () {
            function class_121() {
            }
            /*Swift.(file).UInt16.Words.init(_:UInt16)*/
            /*Swift.(file).UInt16.Words.init(_:UInt16)*/
            class_121.prototype.initUInt16 = function ($info, value) {
                return value;
            };
            /*Swift.(file).UInt16.Words.count*/ /*
            count$get() {
            return this.count
            }
            get count() { return this.count$get() }*/ ;
            /*Swift.(file).UInt16.Words.startIndex*/ /*
            startIndex$get() {
            return this.startIndex
            }
            get startIndex() { return this.startIndex$get() }*/ ;
            /*Swift.(file).UInt16.Words.endIndex*/ /*
            endIndex$get() {
            return this.endIndex
            }
            get endIndex() { return this.endIndex$get() }*/ ;
            /*Swift.(file).UInt16.Words.indices*/ /*
            indices$get() {
            return this.indices
            }
            get indices() { return this.indices$get() }*/ ;
            /*Swift.(file).UInt16.Words.index(after:Int)*/
            /*Swift.(file).RandomAccessCollection.index(after:Self.Index)*/
            /*Swift.(file).BidirectionalCollection.index(after:Self.Index)*/
            /*Swift.(file).Collection.index(after:Self.Index)*/
            class_121.prototype.indexAfter = function ($info, i) {
            };
            /*Swift.(file).UInt16.Words.index(before:Int)*/
            /*Swift.(file).RandomAccessCollection.index(before:Self.Index)*/
            /*Swift.(file).BidirectionalCollection.index(before:Self.Index)*/
            class_121.prototype.indexBefore = function ($info, i) {
            };
            /*Swift.(file).UInt16.Words.subscript(_:Int)*/
            /*Swift.(file).RandomAccessCollection.subscript(_:Self.Index)*/
            /*Swift.(file).BidirectionalCollection.subscript(_:Self.Index)*/
            /*Swift.(file).Collection.subscript(_:Self.Index)*/
            class_121.prototype.subscript$get = function ($info, position) {
                return this[position];
            };
            return class_121;
        }()),
        _97.$struct = true,
        _97.$infoAddress = '0x7fb855367a70',
        _97);
    UInt16.SIMD2Storage = (_98 = /** @class */ (function () {
            function class_122() {
            }
            /*Swift.(file).UInt16.SIMD2Storage.init()*/
            /*Swift.(file).SIMDStorage.init()*/
            class_122.prototype.init = function ($info) {
            };
            /*Swift.(file).UInt16.SIMD2Storage.subscript(_:Int)*/
            /*Swift.(file).SIMDStorage.subscript(_:Int)*/
            class_122.prototype.subscript$get = function ($info, index) {
                return this[index];
            }; /*Swift.(file).UInt16.SIMD2Storage.subscript(_:Int)*/
            /*Swift.(file).SIMDStorage.subscript(_:Int)*/
            class_122.prototype.subscript$set = function ($info, newValue, index) {
                this[index] = newValue;
            };
            return class_122;
        }()),
        _98.$struct = true,
        _98.$infoAddress = '0x7fb851bfc078',
        _98);
    UInt16.SIMD4Storage = (_99 = /** @class */ (function () {
            function class_123() {
            }
            /*Swift.(file).UInt16.SIMD4Storage.init()*/
            /*Swift.(file).SIMDStorage.init()*/
            class_123.prototype.init = function ($info) {
            };
            /*Swift.(file).UInt16.SIMD4Storage.subscript(_:Int)*/
            /*Swift.(file).SIMDStorage.subscript(_:Int)*/
            class_123.prototype.subscript$get = function ($info, index) {
                return this[index];
            }; /*Swift.(file).UInt16.SIMD4Storage.subscript(_:Int)*/
            /*Swift.(file).SIMDStorage.subscript(_:Int)*/
            class_123.prototype.subscript$set = function ($info, newValue, index) {
                this[index] = newValue;
            };
            return class_123;
        }()),
        _99.$struct = true,
        _99.$infoAddress = '0x7fb851bfc220',
        _99);
    UInt16.SIMD8Storage = (_100 = /** @class */ (function () {
            function class_124() {
            }
            /*Swift.(file).UInt16.SIMD8Storage.init()*/
            /*Swift.(file).SIMDStorage.init()*/
            class_124.prototype.init = function ($info) {
            };
            /*Swift.(file).UInt16.SIMD8Storage.subscript(_:Int)*/
            /*Swift.(file).SIMDStorage.subscript(_:Int)*/
            class_124.prototype.subscript$get = function ($info, index) {
                return this[index];
            }; /*Swift.(file).UInt16.SIMD8Storage.subscript(_:Int)*/
            /*Swift.(file).SIMDStorage.subscript(_:Int)*/
            class_124.prototype.subscript$set = function ($info, newValue, index) {
                this[index] = newValue;
            };
            return class_124;
        }()),
        _100.$struct = true,
        _100.$infoAddress = '0x7fb851bfc3c8',
        _100);
    UInt16.SIMD16Storage = (_101 = /** @class */ (function () {
            function class_125() {
            }
            /*Swift.(file).UInt16.SIMD16Storage.init()*/
            /*Swift.(file).SIMDStorage.init()*/
            class_125.prototype.init = function ($info) {
            };
            /*Swift.(file).UInt16.SIMD16Storage.subscript(_:Int)*/
            /*Swift.(file).SIMDStorage.subscript(_:Int)*/
            class_125.prototype.subscript$get = function ($info, index) {
                return this[index];
            }; /*Swift.(file).UInt16.SIMD16Storage.subscript(_:Int)*/
            /*Swift.(file).SIMDStorage.subscript(_:Int)*/
            class_125.prototype.subscript$set = function ($info, newValue, index) {
                this[index] = newValue;
            };
            return class_125;
        }()),
        _101.$struct = true,
        _101.$infoAddress = '0x7fb851bfc570',
        _101);
    UInt16.SIMD32Storage = (_102 = /** @class */ (function () {
            function class_126() {
            }
            /*Swift.(file).UInt16.SIMD32Storage.init()*/
            /*Swift.(file).SIMDStorage.init()*/
            class_126.prototype.init = function ($info) {
            };
            /*Swift.(file).UInt16.SIMD32Storage.subscript(_:Int)*/
            /*Swift.(file).SIMDStorage.subscript(_:Int)*/
            class_126.prototype.subscript$get = function ($info, index) {
                return this[index];
            }; /*Swift.(file).UInt16.SIMD32Storage.subscript(_:Int)*/
            /*Swift.(file).SIMDStorage.subscript(_:Int)*/
            class_126.prototype.subscript$set = function ($info, newValue, index) {
                this[index] = newValue;
            };
            return class_126;
        }()),
        _102.$struct = true,
        _102.$infoAddress = '0x7fb851bfc718',
        _102);
    UInt16.SIMD64Storage = (_103 = /** @class */ (function () {
            function class_127() {
            }
            /*Swift.(file).UInt16.SIMD64Storage.init()*/
            /*Swift.(file).SIMDStorage.init()*/
            class_127.prototype.init = function ($info) {
            };
            /*Swift.(file).UInt16.SIMD64Storage.subscript(_:Int)*/
            /*Swift.(file).SIMDStorage.subscript(_:Int)*/
            class_127.prototype.subscript$get = function ($info, index) {
                return this[index];
            }; /*Swift.(file).UInt16.SIMD64Storage.subscript(_:Int)*/
            /*Swift.(file).SIMDStorage.subscript(_:Int)*/
            class_127.prototype.subscript$set = function ($info, newValue, index) {
                this[index] = newValue;
            };
            return class_127;
        }()),
        _103.$struct = true,
        _103.$infoAddress = '0x7fb851bfc8c0',
        _103);
    return UInt16;
}());
if (typeof RandomAccessCollection$implementation != 'undefined')
    _mixin(UInt16.Words, RandomAccessCollection$implementation, false);
if (typeof SIMDStorage$implementation != 'undefined')
    _mixin(UInt16.SIMD2Storage, SIMDStorage$implementation, false);
if (typeof SIMDStorage$implementation != 'undefined')
    _mixin(UInt16.SIMD4Storage, SIMDStorage$implementation, false);
if (typeof SIMDStorage$implementation != 'undefined')
    _mixin(UInt16.SIMD8Storage, SIMDStorage$implementation, false);
if (typeof SIMDStorage$implementation != 'undefined')
    _mixin(UInt16.SIMD16Storage, SIMDStorage$implementation, false);
if (typeof SIMDStorage$implementation != 'undefined')
    _mixin(UInt16.SIMD32Storage, SIMDStorage$implementation, false);
if (typeof SIMDStorage$implementation != 'undefined')
    _mixin(UInt16.SIMD64Storage, SIMDStorage$implementation, false);
if (typeof FixedWidthInteger$implementation != 'undefined')
    _mixin(UInt16, FixedWidthInteger$implementation, false);
if (typeof UnsignedInteger$implementation != 'undefined')
    _mixin(UInt16, UnsignedInteger$implementation, false);
if (typeof _ExpressibleByBuiltinIntegerLiteral$implementation != 'undefined')
    _mixin(UInt16, _ExpressibleByBuiltinIntegerLiteral$implementation, false);
if (typeof Codable$implementation != 'undefined')
    _mixin(UInt16, Codable$implementation, false);
if (typeof Hashable$implementation != 'undefined')
    _mixin(UInt16, Hashable$implementation, false);
if (typeof _HasCustomAnyHashableRepresentation$implementation != 'undefined')
    _mixin(UInt16, _HasCustomAnyHashableRepresentation$implementation, false);
if (typeof CustomReflectable$implementation != 'undefined')
    _mixin(UInt16, CustomReflectable$implementation, false);
if (typeof _CustomPlaygroundQuickLookable$implementation != 'undefined')
    _mixin(UInt16, _CustomPlaygroundQuickLookable$implementation, false);
if (typeof _StringElement$implementation != 'undefined')
    _mixin(UInt16, _StringElement$implementation, false);
if (typeof SIMDScalar$implementation != 'undefined')
    _mixin(UInt16, SIMDScalar$implementation, false);
if (typeof CVarArg$implementation != 'undefined')
    _mixin(UInt16, CVarArg$implementation, false);
var Int16 = /** @class */ (function () {
    function Int16() {
    }
    /*Swift.(file).Int16.init(_builtinIntegerLiteral:IntLiteral)*/
    /*Swift.(file)._ExpressibleByBuiltinIntegerLiteral.init(_builtinIntegerLiteral:IntLiteral)*/
    Int16.prototype.init_builtinIntegerLiteralIntLiteral = function ($info, x) {
        return x;
    };
    /*Swift.(file).Int16.init(bitPattern:UInt16)*/
    /*Swift.(file).Int16.init(bitPattern:UInt16)*/
    Int16.prototype.initBitPatternUInt16 = function ($info, x) {
        return x;
    };
    /*Swift.(file).Int16.init(_:Float)*/
    /*Swift.(file).Int16.init(_:Float)*/
    Int16.prototype.initFloat = function ($info, source) {
        return source;
    };
    /*Swift.(file).Int16.init(exactly:Float)*/
    /*Swift.(file).Int16.init(exactly:Float)*/
    Int16.prototype.initExactlyFloat = function ($info, source) {
        return source;
    };
    /*Swift.(file).Int16.init(_:Double)*/
    /*Swift.(file).Int16.init(_:Double)*/
    Int16.prototype.initDouble = function ($info, source) {
        return source;
    };
    /*Swift.(file).Int16.init(exactly:Double)*/
    /*Swift.(file).Int16.init(exactly:Double)*/
    Int16.prototype.initExactlyDouble = function ($info, source) {
        return source;
    };
    /*Swift.(file).Int16.init(_:Float80)*/
    /*Swift.(file).Int16.init(_:Float80)*/
    Int16.prototype.initFloat80 = function ($info, source) {
        return source;
    };
    /*Swift.(file).Int16.init(exactly:Float80)*/
    /*Swift.(file).Int16.init(exactly:Float80)*/
    Int16.prototype.initExactlyFloat80 = function ($info, source) {
        return source;
    };
    /*Swift.(file).Int16.==infix(_:Int16,_:Int16)*/
    /*Swift.(file).Equatable.==infix(_:Self,_:Self)*/
    Int16.infix_61_61 = function ($info, lhs, rhs) {
        return lhs == rhs;
    };
    /*Swift.(file).Int16.<infix(_:Int16,_:Int16)*/
    /*Swift.(file).Comparable.<infix(_:Self,_:Self)*/
    Int16.infix_60 = function ($info, lhs, rhs) {
        return lhs < rhs;
    };
    /*Swift.(file).Int16.+=infix(_:Int16,_:Int16)*/
    /*Swift.(file).BinaryInteger.+=infix(_:Self,_:Self)*/
    /*Swift.(file).AdditiveArithmetic.+=infix(_:Self,_:Self)*/
    Int16.infix_43_61 = function ($info, lhs$inout, rhs) {
        lhs$inout.set(lhs$inout.get() + rhs);
    };
    /*Swift.(file).Int16.-=infix(_:Int16,_:Int16)*/
    /*Swift.(file).BinaryInteger.-=infix(_:Self,_:Self)*/
    /*Swift.(file).AdditiveArithmetic.-=infix(_:Self,_:Self)*/
    Int16.infix_45_61 = function ($info, lhs$inout, rhs) {
        lhs$inout.set(lhs$inout.get() - rhs);
    };
    /*Swift.(file).Int16.*=infix(_:Int16,_:Int16)*/
    /*Swift.(file).BinaryInteger.*=infix(_:Self,_:Self)*/
    /*Swift.(file).Numeric.*=infix(_:Self,_:Self)*/
    Int16.infix_42_61 = function ($info, lhs$inout, rhs) {
        lhs$inout.set(lhs$inout.get() * rhs);
    };
    /*Swift.(file).Int16./=infix(_:Int16,_:Int16)*/
    /*Swift.(file).BinaryInteger./=infix(_:Self,_:Self)*/
    Int16.infix_47_61 = function ($info, lhs$inout, rhs) {
        lhs$inout.set((lhs$inout.get() / rhs) | 0);
    };
    /*Swift.(file).Int16.dividedReportingOverflow(by:Int16)*/
    /*Swift.(file).FixedWidthInteger.dividedReportingOverflow(by:Self)*/
    Int16.prototype.dividedReportingOverflowBy = function ($info, other) {
    };
    /*Swift.(file).Int16.remainderReportingOverflow(dividingBy:Int16)*/
    /*Swift.(file).FixedWidthInteger.remainderReportingOverflow(dividingBy:Self)*/
    Int16.prototype.remainderReportingOverflowDividingBy = function ($info, other) {
    };
    /*Swift.(file).Int16.addingReportingOverflow(_:Int16)*/
    /*Swift.(file).FixedWidthInteger.addingReportingOverflow(_:Self)*/
    Int16.prototype.addingReportingOverflow = function ($info, other) {
    };
    /*Swift.(file).Int16.subtractingReportingOverflow(_:Int16)*/
    /*Swift.(file).FixedWidthInteger.subtractingReportingOverflow(_:Self)*/
    Int16.prototype.subtractingReportingOverflow = function ($info, other) {
    };
    /*Swift.(file).Int16.multipliedReportingOverflow(by:Int16)*/
    /*Swift.(file).FixedWidthInteger.multipliedReportingOverflow(by:Self)*/
    Int16.prototype.multipliedReportingOverflowBy = function ($info, other) {
    };
    /*Swift.(file).Int16.%=infix(_:Int16,_:Int16)*/
    /*Swift.(file).BinaryInteger.%=infix(_:Self,_:Self)*/
    Int16.infix_37_61 = function ($info, lhs$inout, rhs) {
        lhs$inout.set(lhs$inout.get() % rhs);
    };
    /*Swift.(file).Int16.init(_:Int16)*/
    /*Swift.(file).Int16.init(_:Int16)*/
    Int16.prototype.initInt16 = function ($info, _value) {
        return _value;
    };
    /*Swift.(file).Int16.&=infix(_:Int16,_:Int16)*/
    /*Swift.(file).BinaryInteger.&=infix(_:Self,_:Self)*/
    Int16.infix_38_61 = function ($info, lhs$inout, rhs) {
        /*lhs$inout.set(lhs$inout.get() & rhs)*/
    };
    /*Swift.(file).Int16.|=infix(_:Int16,_:Int16)*/
    /*Swift.(file).BinaryInteger.|=infix(_:Self,_:Self)*/
    Int16.infix_124_61 = function ($info, lhs$inout, rhs) {
        lhs$inout.set(lhs$inout.get() | rhs);
    };
    /*Swift.(file).Int16.^=infix(_:Int16,_:Int16)*/
    /*Swift.(file).BinaryInteger.^=infix(_:Self,_:Self)*/
    Int16.infix_94_61 = function ($info, lhs$inout, rhs) {
        lhs$inout.set(lhs$inout.get() ^ rhs);
    };
    /*Swift.(file).Int16.&>>=infix(_:Int16,_:Int16)*/
    /*Swift.(file).FixedWidthInteger.&>>=infix(_:Self,_:Self)*/
    Int16.infix_38_62_62_61 = function ($info, lhs$inout, rhs) {
        /*lhs$inout.set(lhs$inout.get() &>> rhs)*/
    };
    /*Swift.(file).Int16.&<<=infix(_:Int16,_:Int16)*/
    /*Swift.(file).FixedWidthInteger.&<<=infix(_:Self,_:Self)*/
    Int16.infix_38_60_60_61 = function ($info, lhs$inout, rhs) {
        /*lhs$inout.set(lhs$inout.get() &<< rhs)*/
    };
    /*Swift.(file).Int16.bitWidth*/ /*
    static bitWidth$get() {
    return this.bitWidth
    }
    static get bitWidth() { return this.bitWidth$get() }*/ ;
    /*Swift.(file).Int16.leadingZeroBitCount*/ /*
    leadingZeroBitCount$get() {
    return this.leadingZeroBitCount
    }
    get leadingZeroBitCount() { return this.leadingZeroBitCount$get() }*/ ;
    /*Swift.(file).Int16.trailingZeroBitCount*/ /*
    trailingZeroBitCount$get() {
    return this.trailingZeroBitCount
    }
    get trailingZeroBitCount() { return this.trailingZeroBitCount$get() }*/ ;
    /*Swift.(file).Int16.nonzeroBitCount*/ /*
    nonzeroBitCount$get() {
    return this.nonzeroBitCount
    }
    get nonzeroBitCount() { return this.nonzeroBitCount$get() }*/ ;
    /*Swift.(file).Int16.init(_truncatingBits:UInt)*/
    /*Swift.(file).FixedWidthInteger.init(_truncatingBits:UInt)*/
    Int16.prototype.init_truncatingBitsUInt = function ($info, bits) {
        return bits;
    };
    /*Swift.(file).Int16.magnitude*/ /*
    magnitude$get() {
    return this.magnitude
    }
    get magnitude() { return this.magnitude$get() }*/ ;
    /*Swift.(file).Int16.multipliedFullWidth(by:Int16)*/
    /*Swift.(file).FixedWidthInteger.multipliedFullWidth(by:Self)*/
    Int16.prototype.multipliedFullWidthBy = function ($info, other) {
    };
    /*Swift.(file).Int16.dividingFullWidth(_:(high: Int16, low: Int16.Magnitude))*/
    /*Swift.(file).FixedWidthInteger.dividingFullWidth(_:(high: Self, low: Self.Magnitude))*/
    Int16.prototype.dividingFullWidth = function ($info, dividend) {
    };
    /*Swift.(file).Int16.byteSwapped*/ /*
    byteSwapped$get() {
    return this.byteSwapped
    }
    get byteSwapped() { return this.byteSwapped$get() }*/ ;
    /*Swift.(file).Int16.toUIntMax()*/
    /*Swift.(file).Int16.toUIntMax()*/
    Int16.prototype.toUIntMax = function ($info) {
    };
    /*Swift.(file).Int16.signum()*/
    /*Swift.(file).BinaryInteger.signum()*/
    Int16.prototype.signum = function ($info) {
    };
    /*Swift.(file).Int16.&infix(_:Int16,_:Int16)*/
    /*Swift.(file).BinaryInteger.&infix(_:Self,_:Self)*/
    Int16.infix_38 = function ($info, lhs, rhs) {
        /*return lhs & rhs*/
    };
    /*Swift.(file).Int16.|infix(_:Int16,_:Int16)*/
    /*Swift.(file).BinaryInteger.|infix(_:Self,_:Self)*/
    Int16.infix_124 = function ($info, lhs, rhs) {
        return lhs | rhs;
    };
    /*Swift.(file).Int16.^infix(_:Int16,_:Int16)*/
    /*Swift.(file).BinaryInteger.^infix(_:Self,_:Self)*/
    Int16.infix_94 = function ($info, lhs, rhs) {
        return lhs ^ rhs;
    };
    /*Swift.(file).Int16.&>>infix(_:Int16,_:Int16)*/
    /*Swift.(file).FixedWidthInteger.&>>infix(_:Self,_:Self)*/
    Int16.infix_38_62_62 = function ($info, lhs, rhs) {
        /*return lhs &>> rhs*/
    };
    /*Swift.(file).Int16.&<<infix(_:Int16,_:Int16)*/
    /*Swift.(file).FixedWidthInteger.&<<infix(_:Self,_:Self)*/
    Int16.infix_38_60_60 = function ($info, lhs, rhs) {
        /*return lhs &<< rhs*/
    };
    /*Swift.(file).Int16./infix(_:Int16,_:Int16)*/
    /*Swift.(file).BinaryInteger./infix(_:Self,_:Self)*/
    Int16.infix_47 = function ($info, lhs, rhs) {
        return (lhs / rhs) | 0;
    };
    /*Swift.(file).Int16.%infix(_:Int16,_:Int16)*/
    /*Swift.(file).BinaryInteger.%infix(_:Self,_:Self)*/
    Int16.infix_37 = function ($info, lhs, rhs) {
        return lhs % rhs;
    };
    /*Swift.(file).Int16.+infix(_:Int16,_:Int16)*/
    /*Swift.(file).BinaryInteger.+infix(_:Self,_:Self)*/
    /*Swift.(file).AdditiveArithmetic.+infix(_:Self,_:Self)*/
    Int16.infix_43 = function ($info, lhs, rhs) {
        return lhs + rhs;
    };
    /*Swift.(file).Int16.-infix(_:Int16,_:Int16)*/
    /*Swift.(file).BinaryInteger.-infix(_:Self,_:Self)*/
    /*Swift.(file).AdditiveArithmetic.-infix(_:Self,_:Self)*/
    Int16.infix_45 = function ($info, lhs, rhs) {
        return lhs - rhs;
    };
    /*Swift.(file).Int16.*infix(_:Int16,_:Int16)*/
    /*Swift.(file).BinaryInteger.*infix(_:Self,_:Self)*/
    /*Swift.(file).Numeric.*infix(_:Self,_:Self)*/
    Int16.infix_42 = function ($info, lhs, rhs) {
        return lhs * rhs;
    };
    /*Swift.(file).Int16.>>infix(_:Int16,_:Int16)*/
    /*Swift.(file).Int16.>>infix(_:Int16,_:Int16)*/
    Int16.infix_62_62 = function ($info, lhs, rhs) {
        return lhs >> rhs;
    };
    /*Swift.(file).Int16.>>=infix(_:Int16,_:Int16)*/
    /*Swift.(file).Int16.>>=infix(_:Int16,_:Int16)*/
    Int16.infix_62_62_61 = function ($info, lhs$inout, rhs) {
        lhs$inout.set(lhs$inout.get() >> rhs);
    };
    /*Swift.(file).Int16.<<infix(_:Int16,_:Int16)*/
    /*Swift.(file).Int16.<<infix(_:Int16,_:Int16)*/
    Int16.infix_60_60 = function ($info, lhs, rhs) {
        return lhs << rhs;
    };
    /*Swift.(file).Int16.<<=infix(_:Int16,_:Int16)*/
    /*Swift.(file).Int16.<<=infix(_:Int16,_:Int16)*/
    Int16.infix_60_60_61 = function ($info, lhs$inout, rhs) {
        lhs$inout.set(lhs$inout.get() << rhs);
    };
    /*Swift.(file).Int16.<=infix(_:Int16,_:Int16)*/
    /*Swift.(file).Comparable.<=infix(_:Self,_:Self)*/
    Int16.infix_60_61 = function ($info, lhs, rhs) {
        return lhs <= rhs;
    };
    /*Swift.(file).Int16.>=infix(_:Int16,_:Int16)*/
    /*Swift.(file).Comparable.>=infix(_:Self,_:Self)*/
    Int16.infix_62_61 = function ($info, lhs, rhs) {
        return lhs >= rhs;
    };
    /*Swift.(file).Int16.>infix(_:Int16,_:Int16)*/
    /*Swift.(file).Comparable.>infix(_:Self,_:Self)*/
    Int16.infix_62 = function ($info, lhs, rhs) {
        return lhs > rhs;
    };
    /*Swift.(file).Int16.init(from:Decoder)*/
    /*Swift.(file).Decodable.init(from:Decoder)*/
    Int16.prototype.initFromDecoder = function ($info, decoder) {
        return decoder;
    };
    /*Swift.(file).Int16.encode(to:Encoder)*/
    /*Swift.(file).Encodable.encode(to:Encoder)*/
    Int16.prototype.encodeTo = function ($info, encoder) {
    };
    /*Swift.(file).Int16.hash(into:Hasher)*/
    /*Swift.(file).Hashable.hash(into:Hasher)*/
    Int16.prototype.hashInto = function ($info, hasher$inout) {
    };
    /*Swift.(file).Int16.hashValue*/ /*
    hashValue$get() {
    return this.hashValue
    }
    get hashValue() { return this.hashValue$get() }*/ ;
    /*Swift.(file).Int16.init(truncatingBitPattern:UInt32)*/
    /*Swift.(file).Int16.init(truncatingBitPattern:UInt32)*/
    Int16.prototype.initTruncatingBitPatternUInt32 = function ($info, source) {
        return source;
    };
    /*Swift.(file).Int16.init(truncatingBitPattern:Int32)*/
    /*Swift.(file).Int16.init(truncatingBitPattern:Int32)*/
    Int16.prototype.initTruncatingBitPatternInt32 = function ($info, source) {
        return source;
    };
    /*Swift.(file).Int16.init(truncatingBitPattern:UInt64)*/
    /*Swift.(file).Int16.init(truncatingBitPattern:UInt64)*/
    Int16.prototype.initTruncatingBitPatternUInt64 = function ($info, source) {
        return source;
    };
    /*Swift.(file).Int16.init(truncatingBitPattern:Int64)*/
    /*Swift.(file).Int16.init(truncatingBitPattern:Int64)*/
    Int16.prototype.initTruncatingBitPatternInt64 = function ($info, source) {
        return source;
    };
    /*Swift.(file).Int16.init(truncatingBitPattern:UInt)*/
    /*Swift.(file).Int16.init(truncatingBitPattern:UInt)*/
    Int16.prototype.initTruncatingBitPatternUInt = function ($info, source) {
        return source;
    };
    /*Swift.(file).Int16.init(truncatingBitPattern:Int)*/
    /*Swift.(file).Int16.init(truncatingBitPattern:Int)*/
    Int16.prototype.initTruncatingBitPatternInt = function ($info, source) {
        return source;
    };
    /*Swift.(file).Int16.customMirror*/ /*
    customMirror$get() {
    return this.customMirror
    }
    get customMirror() { return this.customMirror$get() }*/ ;
    /*Swift.(file).Int16.customPlaygroundQuickLook*/ /*
    customPlaygroundQuickLook$get() {
    return this.customPlaygroundQuickLook
    }
    get customPlaygroundQuickLook() { return this.customPlaygroundQuickLook$get() }*/ ;
    var _104, _105, _106, _107, _108, _109, _110;
    Int16.$struct = true;
    Int16.$mixin = true;
    Int16.$infoAddress = '0x7fb8518220b8';
    Int16.Words = (_104 = /** @class */ (function () {
            function class_128() {
            }
            /*Swift.(file).Int16.Words.init(_:Int16)*/
            /*Swift.(file).Int16.Words.init(_:Int16)*/
            class_128.prototype.initInt16 = function ($info, value) {
                return value;
            };
            /*Swift.(file).Int16.Words.count*/ /*
            count$get() {
            return this.count
            }
            get count() { return this.count$get() }*/ ;
            /*Swift.(file).Int16.Words.startIndex*/ /*
            startIndex$get() {
            return this.startIndex
            }
            get startIndex() { return this.startIndex$get() }*/ ;
            /*Swift.(file).Int16.Words.endIndex*/ /*
            endIndex$get() {
            return this.endIndex
            }
            get endIndex() { return this.endIndex$get() }*/ ;
            /*Swift.(file).Int16.Words.indices*/ /*
            indices$get() {
            return this.indices
            }
            get indices() { return this.indices$get() }*/ ;
            /*Swift.(file).Int16.Words.index(after:Int)*/
            /*Swift.(file).RandomAccessCollection.index(after:Self.Index)*/
            /*Swift.(file).BidirectionalCollection.index(after:Self.Index)*/
            /*Swift.(file).Collection.index(after:Self.Index)*/
            class_128.prototype.indexAfter = function ($info, i) {
            };
            /*Swift.(file).Int16.Words.index(before:Int)*/
            /*Swift.(file).RandomAccessCollection.index(before:Self.Index)*/
            /*Swift.(file).BidirectionalCollection.index(before:Self.Index)*/
            class_128.prototype.indexBefore = function ($info, i) {
            };
            /*Swift.(file).Int16.Words.subscript(_:Int)*/
            /*Swift.(file).RandomAccessCollection.subscript(_:Self.Index)*/
            /*Swift.(file).BidirectionalCollection.subscript(_:Self.Index)*/
            /*Swift.(file).Collection.subscript(_:Self.Index)*/
            class_128.prototype.subscript$get = function ($info, position) {
                return this[position];
            };
            return class_128;
        }()),
        _104.$struct = true,
        _104.$infoAddress = '0x7fb851c0f968',
        _104);
    Int16.SIMD2Storage = (_105 = /** @class */ (function () {
            function class_129() {
            }
            /*Swift.(file).Int16.SIMD2Storage.init()*/
            /*Swift.(file).SIMDStorage.init()*/
            class_129.prototype.init = function ($info) {
            };
            /*Swift.(file).Int16.SIMD2Storage.subscript(_:Int)*/
            /*Swift.(file).SIMDStorage.subscript(_:Int)*/
            class_129.prototype.subscript$get = function ($info, index) {
                return this[index];
            }; /*Swift.(file).Int16.SIMD2Storage.subscript(_:Int)*/
            /*Swift.(file).SIMDStorage.subscript(_:Int)*/
            class_129.prototype.subscript$set = function ($info, newValue, index) {
                this[index] = newValue;
            };
            return class_129;
        }()),
        _105.$struct = true,
        _105.$infoAddress = '0x7fb852d56f68',
        _105);
    Int16.SIMD4Storage = (_106 = /** @class */ (function () {
            function class_130() {
            }
            /*Swift.(file).Int16.SIMD4Storage.init()*/
            /*Swift.(file).SIMDStorage.init()*/
            class_130.prototype.init = function ($info) {
            };
            /*Swift.(file).Int16.SIMD4Storage.subscript(_:Int)*/
            /*Swift.(file).SIMDStorage.subscript(_:Int)*/
            class_130.prototype.subscript$get = function ($info, index) {
                return this[index];
            }; /*Swift.(file).Int16.SIMD4Storage.subscript(_:Int)*/
            /*Swift.(file).SIMDStorage.subscript(_:Int)*/
            class_130.prototype.subscript$set = function ($info, newValue, index) {
                this[index] = newValue;
            };
            return class_130;
        }()),
        _106.$struct = true,
        _106.$infoAddress = '0x7fb852d57110',
        _106);
    Int16.SIMD8Storage = (_107 = /** @class */ (function () {
            function class_131() {
            }
            /*Swift.(file).Int16.SIMD8Storage.init()*/
            /*Swift.(file).SIMDStorage.init()*/
            class_131.prototype.init = function ($info) {
            };
            /*Swift.(file).Int16.SIMD8Storage.subscript(_:Int)*/
            /*Swift.(file).SIMDStorage.subscript(_:Int)*/
            class_131.prototype.subscript$get = function ($info, index) {
                return this[index];
            }; /*Swift.(file).Int16.SIMD8Storage.subscript(_:Int)*/
            /*Swift.(file).SIMDStorage.subscript(_:Int)*/
            class_131.prototype.subscript$set = function ($info, newValue, index) {
                this[index] = newValue;
            };
            return class_131;
        }()),
        _107.$struct = true,
        _107.$infoAddress = '0x7fb852d572b8',
        _107);
    Int16.SIMD16Storage = (_108 = /** @class */ (function () {
            function class_132() {
            }
            /*Swift.(file).Int16.SIMD16Storage.init()*/
            /*Swift.(file).SIMDStorage.init()*/
            class_132.prototype.init = function ($info) {
            };
            /*Swift.(file).Int16.SIMD16Storage.subscript(_:Int)*/
            /*Swift.(file).SIMDStorage.subscript(_:Int)*/
            class_132.prototype.subscript$get = function ($info, index) {
                return this[index];
            }; /*Swift.(file).Int16.SIMD16Storage.subscript(_:Int)*/
            /*Swift.(file).SIMDStorage.subscript(_:Int)*/
            class_132.prototype.subscript$set = function ($info, newValue, index) {
                this[index] = newValue;
            };
            return class_132;
        }()),
        _108.$struct = true,
        _108.$infoAddress = '0x7fb852d57460',
        _108);
    Int16.SIMD32Storage = (_109 = /** @class */ (function () {
            function class_133() {
            }
            /*Swift.(file).Int16.SIMD32Storage.init()*/
            /*Swift.(file).SIMDStorage.init()*/
            class_133.prototype.init = function ($info) {
            };
            /*Swift.(file).Int16.SIMD32Storage.subscript(_:Int)*/
            /*Swift.(file).SIMDStorage.subscript(_:Int)*/
            class_133.prototype.subscript$get = function ($info, index) {
                return this[index];
            }; /*Swift.(file).Int16.SIMD32Storage.subscript(_:Int)*/
            /*Swift.(file).SIMDStorage.subscript(_:Int)*/
            class_133.prototype.subscript$set = function ($info, newValue, index) {
                this[index] = newValue;
            };
            return class_133;
        }()),
        _109.$struct = true,
        _109.$infoAddress = '0x7fb852d57608',
        _109);
    Int16.SIMD64Storage = (_110 = /** @class */ (function () {
            function class_134() {
            }
            /*Swift.(file).Int16.SIMD64Storage.init()*/
            /*Swift.(file).SIMDStorage.init()*/
            class_134.prototype.init = function ($info) {
            };
            /*Swift.(file).Int16.SIMD64Storage.subscript(_:Int)*/
            /*Swift.(file).SIMDStorage.subscript(_:Int)*/
            class_134.prototype.subscript$get = function ($info, index) {
                return this[index];
            }; /*Swift.(file).Int16.SIMD64Storage.subscript(_:Int)*/
            /*Swift.(file).SIMDStorage.subscript(_:Int)*/
            class_134.prototype.subscript$set = function ($info, newValue, index) {
                this[index] = newValue;
            };
            return class_134;
        }()),
        _110.$struct = true,
        _110.$infoAddress = '0x7fb852d577b0',
        _110);
    return Int16;
}());
if (typeof RandomAccessCollection$implementation != 'undefined')
    _mixin(Int16.Words, RandomAccessCollection$implementation, false);
if (typeof SIMDStorage$implementation != 'undefined')
    _mixin(Int16.SIMD2Storage, SIMDStorage$implementation, false);
if (typeof SIMDStorage$implementation != 'undefined')
    _mixin(Int16.SIMD4Storage, SIMDStorage$implementation, false);
if (typeof SIMDStorage$implementation != 'undefined')
    _mixin(Int16.SIMD8Storage, SIMDStorage$implementation, false);
if (typeof SIMDStorage$implementation != 'undefined')
    _mixin(Int16.SIMD16Storage, SIMDStorage$implementation, false);
if (typeof SIMDStorage$implementation != 'undefined')
    _mixin(Int16.SIMD32Storage, SIMDStorage$implementation, false);
if (typeof SIMDStorage$implementation != 'undefined')
    _mixin(Int16.SIMD64Storage, SIMDStorage$implementation, false);
if (typeof FixedWidthInteger$implementation != 'undefined')
    _mixin(Int16, FixedWidthInteger$implementation, false);
if (typeof SignedInteger$implementation != 'undefined')
    _mixin(Int16, SignedInteger$implementation, false);
if (typeof _ExpressibleByBuiltinIntegerLiteral$implementation != 'undefined')
    _mixin(Int16, _ExpressibleByBuiltinIntegerLiteral$implementation, false);
if (typeof Codable$implementation != 'undefined')
    _mixin(Int16, Codable$implementation, false);
if (typeof Hashable$implementation != 'undefined')
    _mixin(Int16, Hashable$implementation, false);
if (typeof _HasCustomAnyHashableRepresentation$implementation != 'undefined')
    _mixin(Int16, _HasCustomAnyHashableRepresentation$implementation, false);
if (typeof CustomReflectable$implementation != 'undefined')
    _mixin(Int16, CustomReflectable$implementation, false);
if (typeof _CustomPlaygroundQuickLookable$implementation != 'undefined')
    _mixin(Int16, _CustomPlaygroundQuickLookable$implementation, false);
if (typeof SIMDScalar$implementation != 'undefined')
    _mixin(Int16, SIMDScalar$implementation, false);
if (typeof CVarArg$implementation != 'undefined')
    _mixin(Int16, CVarArg$implementation, false);
var UInt32 = /** @class */ (function () {
    function UInt32() {
    }
    /*Swift.(file).UInt32.init(_builtinIntegerLiteral:IntLiteral)*/
    /*Swift.(file)._ExpressibleByBuiltinIntegerLiteral.init(_builtinIntegerLiteral:IntLiteral)*/
    UInt32.prototype.init_builtinIntegerLiteralIntLiteral = function ($info, x) {
        return x;
    };
    /*Swift.(file).UInt32.init(bitPattern:Int32)*/
    /*Swift.(file).UInt32.init(bitPattern:Int32)*/
    UInt32.prototype.initBitPatternInt32 = function ($info, x) {
        return x;
    };
    /*Swift.(file).UInt32.init(_:Float)*/
    /*Swift.(file).UInt32.init(_:Float)*/
    UInt32.prototype.initFloat = function ($info, source) {
        return source;
    };
    /*Swift.(file).UInt32.init(exactly:Float)*/
    /*Swift.(file).UInt32.init(exactly:Float)*/
    UInt32.prototype.initExactlyFloat = function ($info, source) {
        return source;
    };
    /*Swift.(file).UInt32.init(_:Double)*/
    /*Swift.(file).UInt32.init(_:Double)*/
    UInt32.prototype.initDouble = function ($info, source) {
        return source;
    };
    /*Swift.(file).UInt32.init(exactly:Double)*/
    /*Swift.(file).UInt32.init(exactly:Double)*/
    UInt32.prototype.initExactlyDouble = function ($info, source) {
        return source;
    };
    /*Swift.(file).UInt32.init(_:Float80)*/
    /*Swift.(file).UInt32.init(_:Float80)*/
    UInt32.prototype.initFloat80 = function ($info, source) {
        return source;
    };
    /*Swift.(file).UInt32.init(exactly:Float80)*/
    /*Swift.(file).UInt32.init(exactly:Float80)*/
    UInt32.prototype.initExactlyFloat80 = function ($info, source) {
        return source;
    };
    /*Swift.(file).UInt32.==infix(_:UInt32,_:UInt32)*/
    /*Swift.(file).Equatable.==infix(_:Self,_:Self)*/
    UInt32.infix_61_61 = function ($info, lhs, rhs) {
        return lhs == rhs;
    };
    /*Swift.(file).UInt32.<infix(_:UInt32,_:UInt32)*/
    /*Swift.(file).Comparable.<infix(_:Self,_:Self)*/
    UInt32.infix_60 = function ($info, lhs, rhs) {
        return lhs < rhs;
    };
    /*Swift.(file).UInt32.+=infix(_:UInt32,_:UInt32)*/
    /*Swift.(file).BinaryInteger.+=infix(_:Self,_:Self)*/
    /*Swift.(file).AdditiveArithmetic.+=infix(_:Self,_:Self)*/
    UInt32.infix_43_61 = function ($info, lhs$inout, rhs) {
        lhs$inout.set(lhs$inout.get() + rhs);
    };
    /*Swift.(file).UInt32.-=infix(_:UInt32,_:UInt32)*/
    /*Swift.(file).BinaryInteger.-=infix(_:Self,_:Self)*/
    /*Swift.(file).AdditiveArithmetic.-=infix(_:Self,_:Self)*/
    UInt32.infix_45_61 = function ($info, lhs$inout, rhs) {
        lhs$inout.set(lhs$inout.get() - rhs);
    };
    /*Swift.(file).UInt32.*=infix(_:UInt32,_:UInt32)*/
    /*Swift.(file).BinaryInteger.*=infix(_:Self,_:Self)*/
    /*Swift.(file).Numeric.*=infix(_:Self,_:Self)*/
    UInt32.infix_42_61 = function ($info, lhs$inout, rhs) {
        lhs$inout.set(lhs$inout.get() * rhs);
    };
    /*Swift.(file).UInt32./=infix(_:UInt32,_:UInt32)*/
    /*Swift.(file).BinaryInteger./=infix(_:Self,_:Self)*/
    UInt32.infix_47_61 = function ($info, lhs$inout, rhs) {
        lhs$inout.set((lhs$inout.get() / rhs) | 0);
    };
    /*Swift.(file).UInt32.dividedReportingOverflow(by:UInt32)*/
    /*Swift.(file).FixedWidthInteger.dividedReportingOverflow(by:Self)*/
    UInt32.prototype.dividedReportingOverflowBy = function ($info, other) {
    };
    /*Swift.(file).UInt32.remainderReportingOverflow(dividingBy:UInt32)*/
    /*Swift.(file).FixedWidthInteger.remainderReportingOverflow(dividingBy:Self)*/
    UInt32.prototype.remainderReportingOverflowDividingBy = function ($info, other) {
    };
    /*Swift.(file).UInt32.addingReportingOverflow(_:UInt32)*/
    /*Swift.(file).FixedWidthInteger.addingReportingOverflow(_:Self)*/
    UInt32.prototype.addingReportingOverflow = function ($info, other) {
    };
    /*Swift.(file).UInt32.subtractingReportingOverflow(_:UInt32)*/
    /*Swift.(file).FixedWidthInteger.subtractingReportingOverflow(_:Self)*/
    UInt32.prototype.subtractingReportingOverflow = function ($info, other) {
    };
    /*Swift.(file).UInt32.multipliedReportingOverflow(by:UInt32)*/
    /*Swift.(file).FixedWidthInteger.multipliedReportingOverflow(by:Self)*/
    UInt32.prototype.multipliedReportingOverflowBy = function ($info, other) {
    };
    /*Swift.(file).UInt32.%=infix(_:UInt32,_:UInt32)*/
    /*Swift.(file).BinaryInteger.%=infix(_:Self,_:Self)*/
    UInt32.infix_37_61 = function ($info, lhs$inout, rhs) {
        lhs$inout.set(lhs$inout.get() % rhs);
    };
    /*Swift.(file).UInt32.init(_:Int32)*/
    /*Swift.(file).UInt32.init(_:Int32)*/
    UInt32.prototype.initInt32 = function ($info, _value) {
        return _value;
    };
    /*Swift.(file).UInt32.&=infix(_:UInt32,_:UInt32)*/
    /*Swift.(file).BinaryInteger.&=infix(_:Self,_:Self)*/
    UInt32.infix_38_61 = function ($info, lhs$inout, rhs) {
        /*lhs$inout.set(lhs$inout.get() & rhs)*/
    };
    /*Swift.(file).UInt32.|=infix(_:UInt32,_:UInt32)*/
    /*Swift.(file).BinaryInteger.|=infix(_:Self,_:Self)*/
    UInt32.infix_124_61 = function ($info, lhs$inout, rhs) {
        lhs$inout.set(lhs$inout.get() | rhs);
    };
    /*Swift.(file).UInt32.^=infix(_:UInt32,_:UInt32)*/
    /*Swift.(file).BinaryInteger.^=infix(_:Self,_:Self)*/
    UInt32.infix_94_61 = function ($info, lhs$inout, rhs) {
        lhs$inout.set(lhs$inout.get() ^ rhs);
    };
    /*Swift.(file).UInt32.&>>=infix(_:UInt32,_:UInt32)*/
    /*Swift.(file).FixedWidthInteger.&>>=infix(_:Self,_:Self)*/
    UInt32.infix_38_62_62_61 = function ($info, lhs$inout, rhs) {
        /*lhs$inout.set(lhs$inout.get() &>> rhs)*/
    };
    /*Swift.(file).UInt32.&<<=infix(_:UInt32,_:UInt32)*/
    /*Swift.(file).FixedWidthInteger.&<<=infix(_:Self,_:Self)*/
    UInt32.infix_38_60_60_61 = function ($info, lhs$inout, rhs) {
        /*lhs$inout.set(lhs$inout.get() &<< rhs)*/
    };
    /*Swift.(file).UInt32.bitWidth*/ /*
    static bitWidth$get() {
    return this.bitWidth
    }
    static get bitWidth() { return this.bitWidth$get() }*/ ;
    /*Swift.(file).UInt32.leadingZeroBitCount*/ /*
    leadingZeroBitCount$get() {
    return this.leadingZeroBitCount
    }
    get leadingZeroBitCount() { return this.leadingZeroBitCount$get() }*/ ;
    /*Swift.(file).UInt32.trailingZeroBitCount*/ /*
    trailingZeroBitCount$get() {
    return this.trailingZeroBitCount
    }
    get trailingZeroBitCount() { return this.trailingZeroBitCount$get() }*/ ;
    /*Swift.(file).UInt32.nonzeroBitCount*/ /*
    nonzeroBitCount$get() {
    return this.nonzeroBitCount
    }
    get nonzeroBitCount() { return this.nonzeroBitCount$get() }*/ ;
    /*Swift.(file).UInt32.init(_truncatingBits:UInt)*/
    /*Swift.(file).FixedWidthInteger.init(_truncatingBits:UInt)*/
    UInt32.prototype.init_truncatingBitsUInt = function ($info, bits) {
        return bits;
    };
    /*Swift.(file).UInt32.multipliedFullWidth(by:UInt32)*/
    /*Swift.(file).FixedWidthInteger.multipliedFullWidth(by:Self)*/
    UInt32.prototype.multipliedFullWidthBy = function ($info, other) {
    };
    /*Swift.(file).UInt32.dividingFullWidth(_:(high: UInt32, low: UInt32.Magnitude))*/
    /*Swift.(file).FixedWidthInteger.dividingFullWidth(_:(high: Self, low: Self.Magnitude))*/
    UInt32.prototype.dividingFullWidth = function ($info, dividend) {
    };
    /*Swift.(file).UInt32.byteSwapped*/ /*
    byteSwapped$get() {
    return this.byteSwapped
    }
    get byteSwapped() { return this.byteSwapped$get() }*/ ;
    /*Swift.(file).UInt32.toIntMax()*/
    /*Swift.(file).UInt32.toIntMax()*/
    UInt32.prototype.toIntMax = function ($info) {
    };
    /*Swift.(file).UInt32.signum()*/
    /*Swift.(file).BinaryInteger.signum()*/
    UInt32.prototype.signum = function ($info) {
    };
    /*Swift.(file).UInt32.&infix(_:UInt32,_:UInt32)*/
    /*Swift.(file).BinaryInteger.&infix(_:Self,_:Self)*/
    UInt32.infix_38 = function ($info, lhs, rhs) {
        /*return lhs & rhs*/
    };
    /*Swift.(file).UInt32.|infix(_:UInt32,_:UInt32)*/
    /*Swift.(file).BinaryInteger.|infix(_:Self,_:Self)*/
    UInt32.infix_124 = function ($info, lhs, rhs) {
        return lhs | rhs;
    };
    /*Swift.(file).UInt32.^infix(_:UInt32,_:UInt32)*/
    /*Swift.(file).BinaryInteger.^infix(_:Self,_:Self)*/
    UInt32.infix_94 = function ($info, lhs, rhs) {
        return lhs ^ rhs;
    };
    /*Swift.(file).UInt32.&>>infix(_:UInt32,_:UInt32)*/
    /*Swift.(file).FixedWidthInteger.&>>infix(_:Self,_:Self)*/
    UInt32.infix_38_62_62 = function ($info, lhs, rhs) {
        /*return lhs &>> rhs*/
    };
    /*Swift.(file).UInt32.&<<infix(_:UInt32,_:UInt32)*/
    /*Swift.(file).FixedWidthInteger.&<<infix(_:Self,_:Self)*/
    UInt32.infix_38_60_60 = function ($info, lhs, rhs) {
        /*return lhs &<< rhs*/
    };
    /*Swift.(file).UInt32./infix(_:UInt32,_:UInt32)*/
    /*Swift.(file).BinaryInteger./infix(_:Self,_:Self)*/
    UInt32.infix_47 = function ($info, lhs, rhs) {
        return (lhs / rhs) | 0;
    };
    /*Swift.(file).UInt32.%infix(_:UInt32,_:UInt32)*/
    /*Swift.(file).BinaryInteger.%infix(_:Self,_:Self)*/
    UInt32.infix_37 = function ($info, lhs, rhs) {
        return lhs % rhs;
    };
    /*Swift.(file).UInt32.+infix(_:UInt32,_:UInt32)*/
    /*Swift.(file).BinaryInteger.+infix(_:Self,_:Self)*/
    /*Swift.(file).AdditiveArithmetic.+infix(_:Self,_:Self)*/
    UInt32.infix_43 = function ($info, lhs, rhs) {
        return lhs + rhs;
    };
    /*Swift.(file).UInt32.-infix(_:UInt32,_:UInt32)*/
    /*Swift.(file).BinaryInteger.-infix(_:Self,_:Self)*/
    /*Swift.(file).AdditiveArithmetic.-infix(_:Self,_:Self)*/
    UInt32.infix_45 = function ($info, lhs, rhs) {
        return lhs - rhs;
    };
    /*Swift.(file).UInt32.*infix(_:UInt32,_:UInt32)*/
    /*Swift.(file).BinaryInteger.*infix(_:Self,_:Self)*/
    /*Swift.(file).Numeric.*infix(_:Self,_:Self)*/
    UInt32.infix_42 = function ($info, lhs, rhs) {
        return lhs * rhs;
    };
    /*Swift.(file).UInt32.>>infix(_:UInt32,_:UInt32)*/
    /*Swift.(file).UInt32.>>infix(_:UInt32,_:UInt32)*/
    UInt32.infix_62_62 = function ($info, lhs, rhs) {
        return lhs >> rhs;
    };
    /*Swift.(file).UInt32.>>=infix(_:UInt32,_:UInt32)*/
    /*Swift.(file).UInt32.>>=infix(_:UInt32,_:UInt32)*/
    UInt32.infix_62_62_61 = function ($info, lhs$inout, rhs) {
        lhs$inout.set(lhs$inout.get() >> rhs);
    };
    /*Swift.(file).UInt32.<<infix(_:UInt32,_:UInt32)*/
    /*Swift.(file).UInt32.<<infix(_:UInt32,_:UInt32)*/
    UInt32.infix_60_60 = function ($info, lhs, rhs) {
        return lhs << rhs;
    };
    /*Swift.(file).UInt32.<<=infix(_:UInt32,_:UInt32)*/
    /*Swift.(file).UInt32.<<=infix(_:UInt32,_:UInt32)*/
    UInt32.infix_60_60_61 = function ($info, lhs$inout, rhs) {
        lhs$inout.set(lhs$inout.get() << rhs);
    };
    /*Swift.(file).UInt32.<=infix(_:UInt32,_:UInt32)*/
    /*Swift.(file).Comparable.<=infix(_:Self,_:Self)*/
    UInt32.infix_60_61 = function ($info, lhs, rhs) {
        return lhs <= rhs;
    };
    /*Swift.(file).UInt32.>=infix(_:UInt32,_:UInt32)*/
    /*Swift.(file).Comparable.>=infix(_:Self,_:Self)*/
    UInt32.infix_62_61 = function ($info, lhs, rhs) {
        return lhs >= rhs;
    };
    /*Swift.(file).UInt32.>infix(_:UInt32,_:UInt32)*/
    /*Swift.(file).Comparable.>infix(_:Self,_:Self)*/
    UInt32.infix_62 = function ($info, lhs, rhs) {
        return lhs > rhs;
    };
    /*Swift.(file).UInt32.init(from:Decoder)*/
    /*Swift.(file).Decodable.init(from:Decoder)*/
    UInt32.prototype.initFromDecoder = function ($info, decoder) {
        return decoder;
    };
    /*Swift.(file).UInt32.encode(to:Encoder)*/
    /*Swift.(file).Encodable.encode(to:Encoder)*/
    UInt32.prototype.encodeTo = function ($info, encoder) {
    };
    /*Swift.(file).UInt32.hash(into:Hasher)*/
    /*Swift.(file).Hashable.hash(into:Hasher)*/
    UInt32.prototype.hashInto = function ($info, hasher$inout) {
    };
    /*Swift.(file).UInt32.hashValue*/ /*
    hashValue$get() {
    return this.hashValue
    }
    get hashValue() { return this.hashValue$get() }*/ ;
    /*Swift.(file).UInt32.init(truncatingBitPattern:UInt64)*/
    /*Swift.(file).UInt32.init(truncatingBitPattern:UInt64)*/
    UInt32.prototype.initTruncatingBitPatternUInt64 = function ($info, source) {
        return source;
    };
    /*Swift.(file).UInt32.init(truncatingBitPattern:Int64)*/
    /*Swift.(file).UInt32.init(truncatingBitPattern:Int64)*/
    UInt32.prototype.initTruncatingBitPatternInt64 = function ($info, source) {
        return source;
    };
    /*Swift.(file).UInt32.init(truncatingBitPattern:UInt)*/
    /*Swift.(file).UInt32.init(truncatingBitPattern:UInt)*/
    UInt32.prototype.initTruncatingBitPatternUInt = function ($info, source) {
        return source;
    };
    /*Swift.(file).UInt32.init(truncatingBitPattern:Int)*/
    /*Swift.(file).UInt32.init(truncatingBitPattern:Int)*/
    UInt32.prototype.initTruncatingBitPatternInt = function ($info, source) {
        return source;
    };
    /*Swift.(file).UInt32.init(_:Unicode.Scalar)*/
    /*Swift.(file).UInt32.init(_:Unicode.Scalar)*/
    UInt32.prototype.initUnicodeScalar = function ($info, v) {
        return v;
    };
    /*Swift.(file).UInt32.customMirror*/ /*
    customMirror$get() {
    return this.customMirror
    }
    get customMirror() { return this.customMirror$get() }*/ ;
    /*Swift.(file).UInt32.customPlaygroundQuickLook*/ /*
    customPlaygroundQuickLook$get() {
    return this.customPlaygroundQuickLook
    }
    get customPlaygroundQuickLook() { return this.customPlaygroundQuickLook$get() }*/ ;
    var _111, _112, _113, _114, _115, _116, _117;
    UInt32.$struct = true;
    UInt32.$infoAddress = '0x7fb851822538';
    UInt32.$mixin = true;
    UInt32.Words = (_111 = /** @class */ (function () {
            function class_135() {
            }
            /*Swift.(file).UInt32.Words.init(_:UInt32)*/
            /*Swift.(file).UInt32.Words.init(_:UInt32)*/
            class_135.prototype.initUInt32 = function ($info, value) {
                return value;
            };
            /*Swift.(file).UInt32.Words.count*/ /*
            count$get() {
            return this.count
            }
            get count() { return this.count$get() }*/ ;
            /*Swift.(file).UInt32.Words.startIndex*/ /*
            startIndex$get() {
            return this.startIndex
            }
            get startIndex() { return this.startIndex$get() }*/ ;
            /*Swift.(file).UInt32.Words.endIndex*/ /*
            endIndex$get() {
            return this.endIndex
            }
            get endIndex() { return this.endIndex$get() }*/ ;
            /*Swift.(file).UInt32.Words.indices*/ /*
            indices$get() {
            return this.indices
            }
            get indices() { return this.indices$get() }*/ ;
            /*Swift.(file).UInt32.Words.index(after:Int)*/
            /*Swift.(file).RandomAccessCollection.index(after:Self.Index)*/
            /*Swift.(file).BidirectionalCollection.index(after:Self.Index)*/
            /*Swift.(file).Collection.index(after:Self.Index)*/
            class_135.prototype.indexAfter = function ($info, i) {
            };
            /*Swift.(file).UInt32.Words.index(before:Int)*/
            /*Swift.(file).RandomAccessCollection.index(before:Self.Index)*/
            /*Swift.(file).BidirectionalCollection.index(before:Self.Index)*/
            class_135.prototype.indexBefore = function ($info, i) {
            };
            /*Swift.(file).UInt32.Words.subscript(_:Int)*/
            /*Swift.(file).RandomAccessCollection.subscript(_:Self.Index)*/
            /*Swift.(file).BidirectionalCollection.subscript(_:Self.Index)*/
            /*Swift.(file).Collection.subscript(_:Self.Index)*/
            class_135.prototype.subscript$get = function ($info, position) {
                return this[position];
            };
            return class_135;
        }()),
        _111.$struct = true,
        _111.$infoAddress = '0x7fb851c34158',
        _111);
    UInt32.SIMD2Storage = (_112 = /** @class */ (function () {
            function class_136() {
            }
            /*Swift.(file).UInt32.SIMD2Storage.init()*/
            /*Swift.(file).SIMDStorage.init()*/
            class_136.prototype.init = function ($info) {
            };
            /*Swift.(file).UInt32.SIMD2Storage.subscript(_:Int)*/
            /*Swift.(file).SIMDStorage.subscript(_:Int)*/
            class_136.prototype.subscript$get = function ($info, index) {
                return this[index];
            }; /*Swift.(file).UInt32.SIMD2Storage.subscript(_:Int)*/
            /*Swift.(file).SIMDStorage.subscript(_:Int)*/
            class_136.prototype.subscript$set = function ($info, newValue, index) {
                this[index] = newValue;
            };
            return class_136;
        }()),
        _112.$struct = true,
        _112.$infoAddress = '0x7fb851c4ac48',
        _112);
    UInt32.SIMD4Storage = (_113 = /** @class */ (function () {
            function class_137() {
            }
            /*Swift.(file).UInt32.SIMD4Storage.init()*/
            /*Swift.(file).SIMDStorage.init()*/
            class_137.prototype.init = function ($info) {
            };
            /*Swift.(file).UInt32.SIMD4Storage.subscript(_:Int)*/
            /*Swift.(file).SIMDStorage.subscript(_:Int)*/
            class_137.prototype.subscript$get = function ($info, index) {
                return this[index];
            }; /*Swift.(file).UInt32.SIMD4Storage.subscript(_:Int)*/
            /*Swift.(file).SIMDStorage.subscript(_:Int)*/
            class_137.prototype.subscript$set = function ($info, newValue, index) {
                this[index] = newValue;
            };
            return class_137;
        }()),
        _113.$struct = true,
        _113.$infoAddress = '0x7fb851c4adf0',
        _113);
    UInt32.SIMD8Storage = (_114 = /** @class */ (function () {
            function class_138() {
            }
            /*Swift.(file).UInt32.SIMD8Storage.init()*/
            /*Swift.(file).SIMDStorage.init()*/
            class_138.prototype.init = function ($info) {
            };
            /*Swift.(file).UInt32.SIMD8Storage.subscript(_:Int)*/
            /*Swift.(file).SIMDStorage.subscript(_:Int)*/
            class_138.prototype.subscript$get = function ($info, index) {
                return this[index];
            }; /*Swift.(file).UInt32.SIMD8Storage.subscript(_:Int)*/
            /*Swift.(file).SIMDStorage.subscript(_:Int)*/
            class_138.prototype.subscript$set = function ($info, newValue, index) {
                this[index] = newValue;
            };
            return class_138;
        }()),
        _114.$struct = true,
        _114.$infoAddress = '0x7fb851c4af98',
        _114);
    UInt32.SIMD16Storage = (_115 = /** @class */ (function () {
            function class_139() {
            }
            /*Swift.(file).UInt32.SIMD16Storage.init()*/
            /*Swift.(file).SIMDStorage.init()*/
            class_139.prototype.init = function ($info) {
            };
            /*Swift.(file).UInt32.SIMD16Storage.subscript(_:Int)*/
            /*Swift.(file).SIMDStorage.subscript(_:Int)*/
            class_139.prototype.subscript$get = function ($info, index) {
                return this[index];
            }; /*Swift.(file).UInt32.SIMD16Storage.subscript(_:Int)*/
            /*Swift.(file).SIMDStorage.subscript(_:Int)*/
            class_139.prototype.subscript$set = function ($info, newValue, index) {
                this[index] = newValue;
            };
            return class_139;
        }()),
        _115.$struct = true,
        _115.$infoAddress = '0x7fb851c4b140',
        _115);
    UInt32.SIMD32Storage = (_116 = /** @class */ (function () {
            function class_140() {
            }
            /*Swift.(file).UInt32.SIMD32Storage.init()*/
            /*Swift.(file).SIMDStorage.init()*/
            class_140.prototype.init = function ($info) {
            };
            /*Swift.(file).UInt32.SIMD32Storage.subscript(_:Int)*/
            /*Swift.(file).SIMDStorage.subscript(_:Int)*/
            class_140.prototype.subscript$get = function ($info, index) {
                return this[index];
            }; /*Swift.(file).UInt32.SIMD32Storage.subscript(_:Int)*/
            /*Swift.(file).SIMDStorage.subscript(_:Int)*/
            class_140.prototype.subscript$set = function ($info, newValue, index) {
                this[index] = newValue;
            };
            return class_140;
        }()),
        _116.$struct = true,
        _116.$infoAddress = '0x7fb851c4b2e8',
        _116);
    UInt32.SIMD64Storage = (_117 = /** @class */ (function () {
            function class_141() {
            }
            /*Swift.(file).UInt32.SIMD64Storage.init()*/
            /*Swift.(file).SIMDStorage.init()*/
            class_141.prototype.init = function ($info) {
            };
            /*Swift.(file).UInt32.SIMD64Storage.subscript(_:Int)*/
            /*Swift.(file).SIMDStorage.subscript(_:Int)*/
            class_141.prototype.subscript$get = function ($info, index) {
                return this[index];
            }; /*Swift.(file).UInt32.SIMD64Storage.subscript(_:Int)*/
            /*Swift.(file).SIMDStorage.subscript(_:Int)*/
            class_141.prototype.subscript$set = function ($info, newValue, index) {
                this[index] = newValue;
            };
            return class_141;
        }()),
        _117.$struct = true,
        _117.$infoAddress = '0x7fb851c4b490',
        _117);
    return UInt32;
}());
if (typeof RandomAccessCollection$implementation != 'undefined')
    _mixin(UInt32.Words, RandomAccessCollection$implementation, false);
if (typeof SIMDStorage$implementation != 'undefined')
    _mixin(UInt32.SIMD2Storage, SIMDStorage$implementation, false);
if (typeof SIMDStorage$implementation != 'undefined')
    _mixin(UInt32.SIMD4Storage, SIMDStorage$implementation, false);
if (typeof SIMDStorage$implementation != 'undefined')
    _mixin(UInt32.SIMD8Storage, SIMDStorage$implementation, false);
if (typeof SIMDStorage$implementation != 'undefined')
    _mixin(UInt32.SIMD16Storage, SIMDStorage$implementation, false);
if (typeof SIMDStorage$implementation != 'undefined')
    _mixin(UInt32.SIMD32Storage, SIMDStorage$implementation, false);
if (typeof SIMDStorage$implementation != 'undefined')
    _mixin(UInt32.SIMD64Storage, SIMDStorage$implementation, false);
if (typeof FixedWidthInteger$implementation != 'undefined')
    _mixin(UInt32, FixedWidthInteger$implementation, false);
if (typeof UnsignedInteger$implementation != 'undefined')
    _mixin(UInt32, UnsignedInteger$implementation, false);
if (typeof _ExpressibleByBuiltinIntegerLiteral$implementation != 'undefined')
    _mixin(UInt32, _ExpressibleByBuiltinIntegerLiteral$implementation, false);
if (typeof Codable$implementation != 'undefined')
    _mixin(UInt32, Codable$implementation, false);
if (typeof Hashable$implementation != 'undefined')
    _mixin(UInt32, Hashable$implementation, false);
if (typeof _HasCustomAnyHashableRepresentation$implementation != 'undefined')
    _mixin(UInt32, _HasCustomAnyHashableRepresentation$implementation, false);
if (typeof CustomReflectable$implementation != 'undefined')
    _mixin(UInt32, CustomReflectable$implementation, false);
if (typeof _CustomPlaygroundQuickLookable$implementation != 'undefined')
    _mixin(UInt32, _CustomPlaygroundQuickLookable$implementation, false);
if (typeof SIMDScalar$implementation != 'undefined')
    _mixin(UInt32, SIMDScalar$implementation, false);
if (typeof CVarArg$implementation != 'undefined')
    _mixin(UInt32, CVarArg$implementation, false);
var Int32 = /** @class */ (function () {
    function Int32() {
    }
    /*Swift.(file).Int32.init(_builtinIntegerLiteral:IntLiteral)*/
    /*Swift.(file)._ExpressibleByBuiltinIntegerLiteral.init(_builtinIntegerLiteral:IntLiteral)*/
    Int32.prototype.init_builtinIntegerLiteralIntLiteral = function ($info, x) {
        return x;
    };
    /*Swift.(file).Int32.init(bitPattern:UInt32)*/
    /*Swift.(file).Int32.init(bitPattern:UInt32)*/
    Int32.prototype.initBitPatternUInt32 = function ($info, x) {
        return x;
    };
    /*Swift.(file).Int32.init(bitPattern:Float)*/
    /*Swift.(file).Int32.init(bitPattern:Float)*/
    Int32.prototype.initBitPatternFloat = function ($info, x) {
        return x;
    };
    /*Swift.(file).Int32.init(_:Float)*/
    /*Swift.(file).Int32.init(_:Float)*/
    Int32.prototype.initFloat = function ($info, source) {
        return source;
    };
    /*Swift.(file).Int32.init(exactly:Float)*/
    /*Swift.(file).Int32.init(exactly:Float)*/
    Int32.prototype.initExactlyFloat = function ($info, source) {
        return source;
    };
    /*Swift.(file).Int32.init(_:Double)*/
    /*Swift.(file).Int32.init(_:Double)*/
    Int32.prototype.initDouble = function ($info, source) {
        return source;
    };
    /*Swift.(file).Int32.init(exactly:Double)*/
    /*Swift.(file).Int32.init(exactly:Double)*/
    Int32.prototype.initExactlyDouble = function ($info, source) {
        return source;
    };
    /*Swift.(file).Int32.init(_:Float80)*/
    /*Swift.(file).Int32.init(_:Float80)*/
    Int32.prototype.initFloat80 = function ($info, source) {
        return source;
    };
    /*Swift.(file).Int32.init(exactly:Float80)*/
    /*Swift.(file).Int32.init(exactly:Float80)*/
    Int32.prototype.initExactlyFloat80 = function ($info, source) {
        return source;
    };
    /*Swift.(file).Int32.==infix(_:Int32,_:Int32)*/
    /*Swift.(file).Equatable.==infix(_:Self,_:Self)*/
    Int32.infix_61_61 = function ($info, lhs, rhs) {
        return lhs == rhs;
    };
    /*Swift.(file).Int32.<infix(_:Int32,_:Int32)*/
    /*Swift.(file).Comparable.<infix(_:Self,_:Self)*/
    Int32.infix_60 = function ($info, lhs, rhs) {
        return lhs < rhs;
    };
    /*Swift.(file).Int32.+=infix(_:Int32,_:Int32)*/
    /*Swift.(file).BinaryInteger.+=infix(_:Self,_:Self)*/
    /*Swift.(file).AdditiveArithmetic.+=infix(_:Self,_:Self)*/
    Int32.infix_43_61 = function ($info, lhs$inout, rhs) {
        lhs$inout.set(lhs$inout.get() + rhs);
    };
    /*Swift.(file).Int32.-=infix(_:Int32,_:Int32)*/
    /*Swift.(file).BinaryInteger.-=infix(_:Self,_:Self)*/
    /*Swift.(file).AdditiveArithmetic.-=infix(_:Self,_:Self)*/
    Int32.infix_45_61 = function ($info, lhs$inout, rhs) {
        lhs$inout.set(lhs$inout.get() - rhs);
    };
    /*Swift.(file).Int32.*=infix(_:Int32,_:Int32)*/
    /*Swift.(file).BinaryInteger.*=infix(_:Self,_:Self)*/
    /*Swift.(file).Numeric.*=infix(_:Self,_:Self)*/
    Int32.infix_42_61 = function ($info, lhs$inout, rhs) {
        lhs$inout.set(lhs$inout.get() * rhs);
    };
    /*Swift.(file).Int32./=infix(_:Int32,_:Int32)*/
    /*Swift.(file).BinaryInteger./=infix(_:Self,_:Self)*/
    Int32.infix_47_61 = function ($info, lhs$inout, rhs) {
        lhs$inout.set((lhs$inout.get() / rhs) | 0);
    };
    /*Swift.(file).Int32.dividedReportingOverflow(by:Int32)*/
    /*Swift.(file).FixedWidthInteger.dividedReportingOverflow(by:Self)*/
    Int32.prototype.dividedReportingOverflowBy = function ($info, other) {
    };
    /*Swift.(file).Int32.remainderReportingOverflow(dividingBy:Int32)*/
    /*Swift.(file).FixedWidthInteger.remainderReportingOverflow(dividingBy:Self)*/
    Int32.prototype.remainderReportingOverflowDividingBy = function ($info, other) {
    };
    /*Swift.(file).Int32.addingReportingOverflow(_:Int32)*/
    /*Swift.(file).FixedWidthInteger.addingReportingOverflow(_:Self)*/
    Int32.prototype.addingReportingOverflow = function ($info, other) {
    };
    /*Swift.(file).Int32.subtractingReportingOverflow(_:Int32)*/
    /*Swift.(file).FixedWidthInteger.subtractingReportingOverflow(_:Self)*/
    Int32.prototype.subtractingReportingOverflow = function ($info, other) {
    };
    /*Swift.(file).Int32.multipliedReportingOverflow(by:Int32)*/
    /*Swift.(file).FixedWidthInteger.multipliedReportingOverflow(by:Self)*/
    Int32.prototype.multipliedReportingOverflowBy = function ($info, other) {
    };
    /*Swift.(file).Int32.%=infix(_:Int32,_:Int32)*/
    /*Swift.(file).BinaryInteger.%=infix(_:Self,_:Self)*/
    Int32.infix_37_61 = function ($info, lhs$inout, rhs) {
        lhs$inout.set(lhs$inout.get() % rhs);
    };
    /*Swift.(file).Int32.init(_:Int32)*/
    /*Swift.(file).Int32.init(_:Int32)*/
    Int32.prototype.initInt32 = function ($info, _value) {
        return _value;
    };
    /*Swift.(file).Int32.&=infix(_:Int32,_:Int32)*/
    /*Swift.(file).BinaryInteger.&=infix(_:Self,_:Self)*/
    Int32.infix_38_61 = function ($info, lhs$inout, rhs) {
        /*lhs$inout.set(lhs$inout.get() & rhs)*/
    };
    /*Swift.(file).Int32.|=infix(_:Int32,_:Int32)*/
    /*Swift.(file).BinaryInteger.|=infix(_:Self,_:Self)*/
    Int32.infix_124_61 = function ($info, lhs$inout, rhs) {
        lhs$inout.set(lhs$inout.get() | rhs);
    };
    /*Swift.(file).Int32.^=infix(_:Int32,_:Int32)*/
    /*Swift.(file).BinaryInteger.^=infix(_:Self,_:Self)*/
    Int32.infix_94_61 = function ($info, lhs$inout, rhs) {
        lhs$inout.set(lhs$inout.get() ^ rhs);
    };
    /*Swift.(file).Int32.&>>=infix(_:Int32,_:Int32)*/
    /*Swift.(file).FixedWidthInteger.&>>=infix(_:Self,_:Self)*/
    Int32.infix_38_62_62_61 = function ($info, lhs$inout, rhs) {
        /*lhs$inout.set(lhs$inout.get() &>> rhs)*/
    };
    /*Swift.(file).Int32.&<<=infix(_:Int32,_:Int32)*/
    /*Swift.(file).FixedWidthInteger.&<<=infix(_:Self,_:Self)*/
    Int32.infix_38_60_60_61 = function ($info, lhs$inout, rhs) {
        /*lhs$inout.set(lhs$inout.get() &<< rhs)*/
    };
    /*Swift.(file).Int32.bitWidth*/ /*
    static bitWidth$get() {
    return this.bitWidth
    }
    static get bitWidth() { return this.bitWidth$get() }*/ ;
    /*Swift.(file).Int32.leadingZeroBitCount*/ /*
    leadingZeroBitCount$get() {
    return this.leadingZeroBitCount
    }
    get leadingZeroBitCount() { return this.leadingZeroBitCount$get() }*/ ;
    /*Swift.(file).Int32.trailingZeroBitCount*/ /*
    trailingZeroBitCount$get() {
    return this.trailingZeroBitCount
    }
    get trailingZeroBitCount() { return this.trailingZeroBitCount$get() }*/ ;
    /*Swift.(file).Int32.nonzeroBitCount*/ /*
    nonzeroBitCount$get() {
    return this.nonzeroBitCount
    }
    get nonzeroBitCount() { return this.nonzeroBitCount$get() }*/ ;
    /*Swift.(file).Int32.init(_truncatingBits:UInt)*/
    /*Swift.(file).FixedWidthInteger.init(_truncatingBits:UInt)*/
    Int32.prototype.init_truncatingBitsUInt = function ($info, bits) {
        return bits;
    };
    /*Swift.(file).Int32.magnitude*/ /*
    magnitude$get() {
    return this.magnitude
    }
    get magnitude() { return this.magnitude$get() }*/ ;
    /*Swift.(file).Int32.multipliedFullWidth(by:Int32)*/
    /*Swift.(file).FixedWidthInteger.multipliedFullWidth(by:Self)*/
    Int32.prototype.multipliedFullWidthBy = function ($info, other) {
    };
    /*Swift.(file).Int32.dividingFullWidth(_:(high: Int32, low: Int32.Magnitude))*/
    /*Swift.(file).FixedWidthInteger.dividingFullWidth(_:(high: Self, low: Self.Magnitude))*/
    Int32.prototype.dividingFullWidth = function ($info, dividend) {
    };
    /*Swift.(file).Int32.byteSwapped*/ /*
    byteSwapped$get() {
    return this.byteSwapped
    }
    get byteSwapped() { return this.byteSwapped$get() }*/ ;
    /*Swift.(file).Int32.toUIntMax()*/
    /*Swift.(file).Int32.toUIntMax()*/
    Int32.prototype.toUIntMax = function ($info) {
    };
    /*Swift.(file).Int32.signum()*/
    /*Swift.(file).BinaryInteger.signum()*/
    Int32.prototype.signum = function ($info) {
    };
    /*Swift.(file).Int32.&infix(_:Int32,_:Int32)*/
    /*Swift.(file).BinaryInteger.&infix(_:Self,_:Self)*/
    Int32.infix_38 = function ($info, lhs, rhs) {
        /*return lhs & rhs*/
    };
    /*Swift.(file).Int32.|infix(_:Int32,_:Int32)*/
    /*Swift.(file).BinaryInteger.|infix(_:Self,_:Self)*/
    Int32.infix_124 = function ($info, lhs, rhs) {
        return lhs | rhs;
    };
    /*Swift.(file).Int32.^infix(_:Int32,_:Int32)*/
    /*Swift.(file).BinaryInteger.^infix(_:Self,_:Self)*/
    Int32.infix_94 = function ($info, lhs, rhs) {
        return lhs ^ rhs;
    };
    /*Swift.(file).Int32.&>>infix(_:Int32,_:Int32)*/
    /*Swift.(file).FixedWidthInteger.&>>infix(_:Self,_:Self)*/
    Int32.infix_38_62_62 = function ($info, lhs, rhs) {
        /*return lhs &>> rhs*/
    };
    /*Swift.(file).Int32.&<<infix(_:Int32,_:Int32)*/
    /*Swift.(file).FixedWidthInteger.&<<infix(_:Self,_:Self)*/
    Int32.infix_38_60_60 = function ($info, lhs, rhs) {
        /*return lhs &<< rhs*/
    };
    /*Swift.(file).Int32./infix(_:Int32,_:Int32)*/
    /*Swift.(file).BinaryInteger./infix(_:Self,_:Self)*/
    Int32.infix_47 = function ($info, lhs, rhs) {
        return (lhs / rhs) | 0;
    };
    /*Swift.(file).Int32.%infix(_:Int32,_:Int32)*/
    /*Swift.(file).BinaryInteger.%infix(_:Self,_:Self)*/
    Int32.infix_37 = function ($info, lhs, rhs) {
        return lhs % rhs;
    };
    /*Swift.(file).Int32.+infix(_:Int32,_:Int32)*/
    /*Swift.(file).BinaryInteger.+infix(_:Self,_:Self)*/
    /*Swift.(file).AdditiveArithmetic.+infix(_:Self,_:Self)*/
    Int32.infix_43 = function ($info, lhs, rhs) {
        return lhs + rhs;
    };
    /*Swift.(file).Int32.-infix(_:Int32,_:Int32)*/
    /*Swift.(file).BinaryInteger.-infix(_:Self,_:Self)*/
    /*Swift.(file).AdditiveArithmetic.-infix(_:Self,_:Self)*/
    Int32.infix_45 = function ($info, lhs, rhs) {
        return lhs - rhs;
    };
    /*Swift.(file).Int32.*infix(_:Int32,_:Int32)*/
    /*Swift.(file).BinaryInteger.*infix(_:Self,_:Self)*/
    /*Swift.(file).Numeric.*infix(_:Self,_:Self)*/
    Int32.infix_42 = function ($info, lhs, rhs) {
        return lhs * rhs;
    };
    /*Swift.(file).Int32.>>infix(_:Int32,_:Int32)*/
    /*Swift.(file).Int32.>>infix(_:Int32,_:Int32)*/
    Int32.infix_62_62 = function ($info, lhs, rhs) {
        return lhs >> rhs;
    };
    /*Swift.(file).Int32.>>=infix(_:Int32,_:Int32)*/
    /*Swift.(file).Int32.>>=infix(_:Int32,_:Int32)*/
    Int32.infix_62_62_61 = function ($info, lhs$inout, rhs) {
        lhs$inout.set(lhs$inout.get() >> rhs);
    };
    /*Swift.(file).Int32.<<infix(_:Int32,_:Int32)*/
    /*Swift.(file).Int32.<<infix(_:Int32,_:Int32)*/
    Int32.infix_60_60 = function ($info, lhs, rhs) {
        return lhs << rhs;
    };
    /*Swift.(file).Int32.<<=infix(_:Int32,_:Int32)*/
    /*Swift.(file).Int32.<<=infix(_:Int32,_:Int32)*/
    Int32.infix_60_60_61 = function ($info, lhs$inout, rhs) {
        lhs$inout.set(lhs$inout.get() << rhs);
    };
    /*Swift.(file).Int32.<=infix(_:Int32,_:Int32)*/
    /*Swift.(file).Comparable.<=infix(_:Self,_:Self)*/
    Int32.infix_60_61 = function ($info, lhs, rhs) {
        return lhs <= rhs;
    };
    /*Swift.(file).Int32.>=infix(_:Int32,_:Int32)*/
    /*Swift.(file).Comparable.>=infix(_:Self,_:Self)*/
    Int32.infix_62_61 = function ($info, lhs, rhs) {
        return lhs >= rhs;
    };
    /*Swift.(file).Int32.>infix(_:Int32,_:Int32)*/
    /*Swift.(file).Comparable.>infix(_:Self,_:Self)*/
    Int32.infix_62 = function ($info, lhs, rhs) {
        return lhs > rhs;
    };
    /*Swift.(file).Int32.init(from:Decoder)*/
    /*Swift.(file).Decodable.init(from:Decoder)*/
    Int32.prototype.initFromDecoder = function ($info, decoder) {
        return decoder;
    };
    /*Swift.(file).Int32.encode(to:Encoder)*/
    /*Swift.(file).Encodable.encode(to:Encoder)*/
    Int32.prototype.encodeTo = function ($info, encoder) {
    };
    /*Swift.(file).Int32.hash(into:Hasher)*/
    /*Swift.(file).Hashable.hash(into:Hasher)*/
    Int32.prototype.hashInto = function ($info, hasher$inout) {
    };
    /*Swift.(file).Int32.hashValue*/ /*
    hashValue$get() {
    return this.hashValue
    }
    get hashValue() { return this.hashValue$get() }*/ ;
    /*Swift.(file).Int32.init(truncatingBitPattern:UInt64)*/
    /*Swift.(file).Int32.init(truncatingBitPattern:UInt64)*/
    Int32.prototype.initTruncatingBitPatternUInt64 = function ($info, source) {
        return source;
    };
    /*Swift.(file).Int32.init(truncatingBitPattern:Int64)*/
    /*Swift.(file).Int32.init(truncatingBitPattern:Int64)*/
    Int32.prototype.initTruncatingBitPatternInt64 = function ($info, source) {
        return source;
    };
    /*Swift.(file).Int32.init(truncatingBitPattern:UInt)*/
    /*Swift.(file).Int32.init(truncatingBitPattern:UInt)*/
    Int32.prototype.initTruncatingBitPatternUInt = function ($info, source) {
        return source;
    };
    /*Swift.(file).Int32.init(truncatingBitPattern:Int)*/
    /*Swift.(file).Int32.init(truncatingBitPattern:Int)*/
    Int32.prototype.initTruncatingBitPatternInt = function ($info, source) {
        return source;
    };
    /*Swift.(file).Int32.customMirror*/ /*
    customMirror$get() {
    return this.customMirror
    }
    get customMirror() { return this.customMirror$get() }*/ ;
    /*Swift.(file).Int32.customPlaygroundQuickLook*/ /*
    customPlaygroundQuickLook$get() {
    return this.customPlaygroundQuickLook
    }
    get customPlaygroundQuickLook() { return this.customPlaygroundQuickLook$get() }*/ ;
    var _118, _119, _120, _121, _122, _123, _124;
    Int32.$struct = true;
    Int32.$mixin = true;
    Int32.$infoAddress = '0x7fb8518229b8';
    Int32.Words = (_118 = /** @class */ (function () {
            function class_142() {
            }
            /*Swift.(file).Int32.Words.init(_:Int32)*/
            /*Swift.(file).Int32.Words.init(_:Int32)*/
            class_142.prototype.initInt32 = function ($info, value) {
                return value;
            };
            /*Swift.(file).Int32.Words.count*/ /*
            count$get() {
            return this.count
            }
            get count() { return this.count$get() }*/ ;
            /*Swift.(file).Int32.Words.startIndex*/ /*
            startIndex$get() {
            return this.startIndex
            }
            get startIndex() { return this.startIndex$get() }*/ ;
            /*Swift.(file).Int32.Words.endIndex*/ /*
            endIndex$get() {
            return this.endIndex
            }
            get endIndex() { return this.endIndex$get() }*/ ;
            /*Swift.(file).Int32.Words.indices*/ /*
            indices$get() {
            return this.indices
            }
            get indices() { return this.indices$get() }*/ ;
            /*Swift.(file).Int32.Words.index(after:Int)*/
            /*Swift.(file).RandomAccessCollection.index(after:Self.Index)*/
            /*Swift.(file).BidirectionalCollection.index(after:Self.Index)*/
            /*Swift.(file).Collection.index(after:Self.Index)*/
            class_142.prototype.indexAfter = function ($info, i) {
            };
            /*Swift.(file).Int32.Words.index(before:Int)*/
            /*Swift.(file).RandomAccessCollection.index(before:Self.Index)*/
            /*Swift.(file).BidirectionalCollection.index(before:Self.Index)*/
            class_142.prototype.indexBefore = function ($info, i) {
            };
            /*Swift.(file).Int32.Words.subscript(_:Int)*/
            /*Swift.(file).RandomAccessCollection.subscript(_:Self.Index)*/
            /*Swift.(file).BidirectionalCollection.subscript(_:Self.Index)*/
            /*Swift.(file).Collection.subscript(_:Self.Index)*/
            class_142.prototype.subscript$get = function ($info, position) {
                return this[position];
            };
            return class_142;
        }()),
        _118.$struct = true,
        _118.$infoAddress = '0x7fb851c701f8',
        _118);
    Int32.SIMD2Storage = (_119 = /** @class */ (function () {
            function class_143() {
            }
            /*Swift.(file).Int32.SIMD2Storage.init()*/
            /*Swift.(file).SIMDStorage.init()*/
            class_143.prototype.init = function ($info) {
            };
            /*Swift.(file).Int32.SIMD2Storage.subscript(_:Int)*/
            /*Swift.(file).SIMDStorage.subscript(_:Int)*/
            class_143.prototype.subscript$get = function ($info, index) {
                return this[index];
            }; /*Swift.(file).Int32.SIMD2Storage.subscript(_:Int)*/
            /*Swift.(file).SIMDStorage.subscript(_:Int)*/
            class_143.prototype.subscript$set = function ($info, newValue, index) {
                this[index] = newValue;
            };
            return class_143;
        }()),
        _119.$struct = true,
        _119.$infoAddress = '0x7fb851c76a10',
        _119);
    Int32.SIMD4Storage = (_120 = /** @class */ (function () {
            function class_144() {
            }
            /*Swift.(file).Int32.SIMD4Storage.init()*/
            /*Swift.(file).SIMDStorage.init()*/
            class_144.prototype.init = function ($info) {
            };
            /*Swift.(file).Int32.SIMD4Storage.subscript(_:Int)*/
            /*Swift.(file).SIMDStorage.subscript(_:Int)*/
            class_144.prototype.subscript$get = function ($info, index) {
                return this[index];
            }; /*Swift.(file).Int32.SIMD4Storage.subscript(_:Int)*/
            /*Swift.(file).SIMDStorage.subscript(_:Int)*/
            class_144.prototype.subscript$set = function ($info, newValue, index) {
                this[index] = newValue;
            };
            return class_144;
        }()),
        _120.$struct = true,
        _120.$infoAddress = '0x7fb851c76bb8',
        _120);
    Int32.SIMD8Storage = (_121 = /** @class */ (function () {
            function class_145() {
            }
            /*Swift.(file).Int32.SIMD8Storage.init()*/
            /*Swift.(file).SIMDStorage.init()*/
            class_145.prototype.init = function ($info) {
            };
            /*Swift.(file).Int32.SIMD8Storage.subscript(_:Int)*/
            /*Swift.(file).SIMDStorage.subscript(_:Int)*/
            class_145.prototype.subscript$get = function ($info, index) {
                return this[index];
            }; /*Swift.(file).Int32.SIMD8Storage.subscript(_:Int)*/
            /*Swift.(file).SIMDStorage.subscript(_:Int)*/
            class_145.prototype.subscript$set = function ($info, newValue, index) {
                this[index] = newValue;
            };
            return class_145;
        }()),
        _121.$struct = true,
        _121.$infoAddress = '0x7fb851c76d60',
        _121);
    Int32.SIMD16Storage = (_122 = /** @class */ (function () {
            function class_146() {
            }
            /*Swift.(file).Int32.SIMD16Storage.init()*/
            /*Swift.(file).SIMDStorage.init()*/
            class_146.prototype.init = function ($info) {
            };
            /*Swift.(file).Int32.SIMD16Storage.subscript(_:Int)*/
            /*Swift.(file).SIMDStorage.subscript(_:Int)*/
            class_146.prototype.subscript$get = function ($info, index) {
                return this[index];
            }; /*Swift.(file).Int32.SIMD16Storage.subscript(_:Int)*/
            /*Swift.(file).SIMDStorage.subscript(_:Int)*/
            class_146.prototype.subscript$set = function ($info, newValue, index) {
                this[index] = newValue;
            };
            return class_146;
        }()),
        _122.$struct = true,
        _122.$infoAddress = '0x7fb851c76f08',
        _122);
    Int32.SIMD32Storage = (_123 = /** @class */ (function () {
            function class_147() {
            }
            /*Swift.(file).Int32.SIMD32Storage.init()*/
            /*Swift.(file).SIMDStorage.init()*/
            class_147.prototype.init = function ($info) {
            };
            /*Swift.(file).Int32.SIMD32Storage.subscript(_:Int)*/
            /*Swift.(file).SIMDStorage.subscript(_:Int)*/
            class_147.prototype.subscript$get = function ($info, index) {
                return this[index];
            }; /*Swift.(file).Int32.SIMD32Storage.subscript(_:Int)*/
            /*Swift.(file).SIMDStorage.subscript(_:Int)*/
            class_147.prototype.subscript$set = function ($info, newValue, index) {
                this[index] = newValue;
            };
            return class_147;
        }()),
        _123.$struct = true,
        _123.$infoAddress = '0x7fb851c770b0',
        _123);
    Int32.SIMD64Storage = (_124 = /** @class */ (function () {
            function class_148() {
            }
            /*Swift.(file).Int32.SIMD64Storage.init()*/
            /*Swift.(file).SIMDStorage.init()*/
            class_148.prototype.init = function ($info) {
            };
            /*Swift.(file).Int32.SIMD64Storage.subscript(_:Int)*/
            /*Swift.(file).SIMDStorage.subscript(_:Int)*/
            class_148.prototype.subscript$get = function ($info, index) {
                return this[index];
            }; /*Swift.(file).Int32.SIMD64Storage.subscript(_:Int)*/
            /*Swift.(file).SIMDStorage.subscript(_:Int)*/
            class_148.prototype.subscript$set = function ($info, newValue, index) {
                this[index] = newValue;
            };
            return class_148;
        }()),
        _124.$struct = true,
        _124.$infoAddress = '0x7fb851c77258',
        _124);
    return Int32;
}());
if (typeof RandomAccessCollection$implementation != 'undefined')
    _mixin(Int32.Words, RandomAccessCollection$implementation, false);
if (typeof SIMDStorage$implementation != 'undefined')
    _mixin(Int32.SIMD2Storage, SIMDStorage$implementation, false);
if (typeof SIMDStorage$implementation != 'undefined')
    _mixin(Int32.SIMD4Storage, SIMDStorage$implementation, false);
if (typeof SIMDStorage$implementation != 'undefined')
    _mixin(Int32.SIMD8Storage, SIMDStorage$implementation, false);
if (typeof SIMDStorage$implementation != 'undefined')
    _mixin(Int32.SIMD16Storage, SIMDStorage$implementation, false);
if (typeof SIMDStorage$implementation != 'undefined')
    _mixin(Int32.SIMD32Storage, SIMDStorage$implementation, false);
if (typeof SIMDStorage$implementation != 'undefined')
    _mixin(Int32.SIMD64Storage, SIMDStorage$implementation, false);
if (typeof FixedWidthInteger$implementation != 'undefined')
    _mixin(Int32, FixedWidthInteger$implementation, false);
if (typeof SignedInteger$implementation != 'undefined')
    _mixin(Int32, SignedInteger$implementation, false);
if (typeof _ExpressibleByBuiltinIntegerLiteral$implementation != 'undefined')
    _mixin(Int32, _ExpressibleByBuiltinIntegerLiteral$implementation, false);
if (typeof Codable$implementation != 'undefined')
    _mixin(Int32, Codable$implementation, false);
if (typeof Hashable$implementation != 'undefined')
    _mixin(Int32, Hashable$implementation, false);
if (typeof _HasCustomAnyHashableRepresentation$implementation != 'undefined')
    _mixin(Int32, _HasCustomAnyHashableRepresentation$implementation, false);
if (typeof CustomReflectable$implementation != 'undefined')
    _mixin(Int32, CustomReflectable$implementation, false);
if (typeof _CustomPlaygroundQuickLookable$implementation != 'undefined')
    _mixin(Int32, _CustomPlaygroundQuickLookable$implementation, false);
if (typeof SIMDScalar$implementation != 'undefined')
    _mixin(Int32, SIMDScalar$implementation, false);
if (typeof CVarArg$implementation != 'undefined')
    _mixin(Int32, CVarArg$implementation, false);
var UInt64 = /** @class */ (function () {
    function UInt64() {
    }
    /*Swift.(file).UInt64.init(_builtinIntegerLiteral:IntLiteral)*/
    /*Swift.(file)._ExpressibleByBuiltinIntegerLiteral.init(_builtinIntegerLiteral:IntLiteral)*/
    UInt64.prototype.init_builtinIntegerLiteralIntLiteral = function ($info, x) {
        return x;
    };
    /*Swift.(file).UInt64.init(bitPattern:Int64)*/
    /*Swift.(file).UInt64.init(bitPattern:Int64)*/
    UInt64.prototype.initBitPatternInt64 = function ($info, x) {
        return x;
    };
    /*Swift.(file).UInt64.init(_:Float)*/
    /*Swift.(file).UInt64.init(_:Float)*/
    UInt64.prototype.initFloat = function ($info, source) {
        return source;
    };
    /*Swift.(file).UInt64.init(exactly:Float)*/
    /*Swift.(file).UInt64.init(exactly:Float)*/
    UInt64.prototype.initExactlyFloat = function ($info, source) {
        return source;
    };
    /*Swift.(file).UInt64.init(_:Double)*/
    /*Swift.(file).UInt64.init(_:Double)*/
    UInt64.prototype.initDouble = function ($info, source) {
        return source;
    };
    /*Swift.(file).UInt64.init(exactly:Double)*/
    /*Swift.(file).UInt64.init(exactly:Double)*/
    UInt64.prototype.initExactlyDouble = function ($info, source) {
        return source;
    };
    /*Swift.(file).UInt64.init(_:Float80)*/
    /*Swift.(file).UInt64.init(_:Float80)*/
    UInt64.prototype.initFloat80 = function ($info, source) {
        return source;
    };
    /*Swift.(file).UInt64.init(exactly:Float80)*/
    /*Swift.(file).UInt64.init(exactly:Float80)*/
    UInt64.prototype.initExactlyFloat80 = function ($info, source) {
        return source;
    };
    /*Swift.(file).UInt64.==infix(_:UInt64,_:UInt64)*/
    /*Swift.(file).Equatable.==infix(_:Self,_:Self)*/
    UInt64.infix_61_61 = function ($info, lhs, rhs) {
        return lhs == rhs;
    };
    /*Swift.(file).UInt64.<infix(_:UInt64,_:UInt64)*/
    /*Swift.(file).Comparable.<infix(_:Self,_:Self)*/
    UInt64.infix_60 = function ($info, lhs, rhs) {
        return lhs < rhs;
    };
    /*Swift.(file).UInt64.+=infix(_:UInt64,_:UInt64)*/
    /*Swift.(file).BinaryInteger.+=infix(_:Self,_:Self)*/
    /*Swift.(file).AdditiveArithmetic.+=infix(_:Self,_:Self)*/
    UInt64.infix_43_61 = function ($info, lhs$inout, rhs) {
        lhs$inout.set(lhs$inout.get() + rhs);
    };
    /*Swift.(file).UInt64.-=infix(_:UInt64,_:UInt64)*/
    /*Swift.(file).BinaryInteger.-=infix(_:Self,_:Self)*/
    /*Swift.(file).AdditiveArithmetic.-=infix(_:Self,_:Self)*/
    UInt64.infix_45_61 = function ($info, lhs$inout, rhs) {
        lhs$inout.set(lhs$inout.get() - rhs);
    };
    /*Swift.(file).UInt64.*=infix(_:UInt64,_:UInt64)*/
    /*Swift.(file).BinaryInteger.*=infix(_:Self,_:Self)*/
    /*Swift.(file).Numeric.*=infix(_:Self,_:Self)*/
    UInt64.infix_42_61 = function ($info, lhs$inout, rhs) {
        lhs$inout.set(lhs$inout.get() * rhs);
    };
    /*Swift.(file).UInt64./=infix(_:UInt64,_:UInt64)*/
    /*Swift.(file).BinaryInteger./=infix(_:Self,_:Self)*/
    UInt64.infix_47_61 = function ($info, lhs$inout, rhs) {
        lhs$inout.set((lhs$inout.get() / rhs) | 0);
    };
    /*Swift.(file).UInt64.dividedReportingOverflow(by:UInt64)*/
    /*Swift.(file).FixedWidthInteger.dividedReportingOverflow(by:Self)*/
    UInt64.prototype.dividedReportingOverflowBy = function ($info, other) {
    };
    /*Swift.(file).UInt64.remainderReportingOverflow(dividingBy:UInt64)*/
    /*Swift.(file).FixedWidthInteger.remainderReportingOverflow(dividingBy:Self)*/
    UInt64.prototype.remainderReportingOverflowDividingBy = function ($info, other) {
    };
    /*Swift.(file).UInt64.addingReportingOverflow(_:UInt64)*/
    /*Swift.(file).FixedWidthInteger.addingReportingOverflow(_:Self)*/
    UInt64.prototype.addingReportingOverflow = function ($info, other) {
    };
    /*Swift.(file).UInt64.subtractingReportingOverflow(_:UInt64)*/
    /*Swift.(file).FixedWidthInteger.subtractingReportingOverflow(_:Self)*/
    UInt64.prototype.subtractingReportingOverflow = function ($info, other) {
    };
    /*Swift.(file).UInt64.multipliedReportingOverflow(by:UInt64)*/
    /*Swift.(file).FixedWidthInteger.multipliedReportingOverflow(by:Self)*/
    UInt64.prototype.multipliedReportingOverflowBy = function ($info, other) {
    };
    /*Swift.(file).UInt64.%=infix(_:UInt64,_:UInt64)*/
    /*Swift.(file).BinaryInteger.%=infix(_:Self,_:Self)*/
    UInt64.infix_37_61 = function ($info, lhs$inout, rhs) {
        lhs$inout.set(lhs$inout.get() % rhs);
    };
    /*Swift.(file).UInt64.init(_:Int64)*/
    /*Swift.(file).UInt64.init(_:Int64)*/
    UInt64.prototype.initInt64 = function ($info, _value) {
        return _value;
    };
    /*Swift.(file).UInt64.&=infix(_:UInt64,_:UInt64)*/
    /*Swift.(file).BinaryInteger.&=infix(_:Self,_:Self)*/
    UInt64.infix_38_61 = function ($info, lhs$inout, rhs) {
        /*lhs$inout.set(lhs$inout.get() & rhs)*/
    };
    /*Swift.(file).UInt64.|=infix(_:UInt64,_:UInt64)*/
    /*Swift.(file).BinaryInteger.|=infix(_:Self,_:Self)*/
    UInt64.infix_124_61 = function ($info, lhs$inout, rhs) {
        lhs$inout.set(lhs$inout.get() | rhs);
    };
    /*Swift.(file).UInt64.^=infix(_:UInt64,_:UInt64)*/
    /*Swift.(file).BinaryInteger.^=infix(_:Self,_:Self)*/
    UInt64.infix_94_61 = function ($info, lhs$inout, rhs) {
        lhs$inout.set(lhs$inout.get() ^ rhs);
    };
    /*Swift.(file).UInt64.&>>=infix(_:UInt64,_:UInt64)*/
    /*Swift.(file).FixedWidthInteger.&>>=infix(_:Self,_:Self)*/
    UInt64.infix_38_62_62_61 = function ($info, lhs$inout, rhs) {
        /*lhs$inout.set(lhs$inout.get() &>> rhs)*/
    };
    /*Swift.(file).UInt64.&<<=infix(_:UInt64,_:UInt64)*/
    /*Swift.(file).FixedWidthInteger.&<<=infix(_:Self,_:Self)*/
    UInt64.infix_38_60_60_61 = function ($info, lhs$inout, rhs) {
        /*lhs$inout.set(lhs$inout.get() &<< rhs)*/
    };
    /*Swift.(file).UInt64.bitWidth*/ /*
    static bitWidth$get() {
    return this.bitWidth
    }
    static get bitWidth() { return this.bitWidth$get() }*/ ;
    /*Swift.(file).UInt64.leadingZeroBitCount*/ /*
    leadingZeroBitCount$get() {
    return this.leadingZeroBitCount
    }
    get leadingZeroBitCount() { return this.leadingZeroBitCount$get() }*/ ;
    /*Swift.(file).UInt64.trailingZeroBitCount*/ /*
    trailingZeroBitCount$get() {
    return this.trailingZeroBitCount
    }
    get trailingZeroBitCount() { return this.trailingZeroBitCount$get() }*/ ;
    /*Swift.(file).UInt64.nonzeroBitCount*/ /*
    nonzeroBitCount$get() {
    return this.nonzeroBitCount
    }
    get nonzeroBitCount() { return this.nonzeroBitCount$get() }*/ ;
    /*Swift.(file).UInt64.init(_truncatingBits:UInt)*/
    /*Swift.(file).FixedWidthInteger.init(_truncatingBits:UInt)*/
    UInt64.prototype.init_truncatingBitsUInt = function ($info, bits) {
        return bits;
    };
    /*Swift.(file).UInt64.multipliedFullWidth(by:UInt64)*/
    /*Swift.(file).FixedWidthInteger.multipliedFullWidth(by:Self)*/
    UInt64.prototype.multipliedFullWidthBy = function ($info, other) {
    };
    /*Swift.(file).UInt64.dividingFullWidth(_:(high: UInt64, low: UInt64.Magnitude))*/
    /*Swift.(file).FixedWidthInteger.dividingFullWidth(_:(high: Self, low: Self.Magnitude))*/
    UInt64.prototype.dividingFullWidth = function ($info, dividend) {
    };
    /*Swift.(file).UInt64.byteSwapped*/ /*
    byteSwapped$get() {
    return this.byteSwapped
    }
    get byteSwapped() { return this.byteSwapped$get() }*/ ;
    /*Swift.(file).UInt64.toIntMax()*/
    /*Swift.(file).UInt64.toIntMax()*/
    UInt64.prototype.toIntMax = function ($info) {
    };
    /*Swift.(file).UInt64.signum()*/
    /*Swift.(file).BinaryInteger.signum()*/
    UInt64.prototype.signum = function ($info) {
    };
    /*Swift.(file).UInt64.&infix(_:UInt64,_:UInt64)*/
    /*Swift.(file).BinaryInteger.&infix(_:Self,_:Self)*/
    UInt64.infix_38 = function ($info, lhs, rhs) {
        /*return lhs & rhs*/
    };
    /*Swift.(file).UInt64.|infix(_:UInt64,_:UInt64)*/
    /*Swift.(file).BinaryInteger.|infix(_:Self,_:Self)*/
    UInt64.infix_124 = function ($info, lhs, rhs) {
        return lhs | rhs;
    };
    /*Swift.(file).UInt64.^infix(_:UInt64,_:UInt64)*/
    /*Swift.(file).BinaryInteger.^infix(_:Self,_:Self)*/
    UInt64.infix_94 = function ($info, lhs, rhs) {
        return lhs ^ rhs;
    };
    /*Swift.(file).UInt64.&>>infix(_:UInt64,_:UInt64)*/
    /*Swift.(file).FixedWidthInteger.&>>infix(_:Self,_:Self)*/
    UInt64.infix_38_62_62 = function ($info, lhs, rhs) {
        /*return lhs &>> rhs*/
    };
    /*Swift.(file).UInt64.&<<infix(_:UInt64,_:UInt64)*/
    /*Swift.(file).FixedWidthInteger.&<<infix(_:Self,_:Self)*/
    UInt64.infix_38_60_60 = function ($info, lhs, rhs) {
        /*return lhs &<< rhs*/
    };
    /*Swift.(file).UInt64./infix(_:UInt64,_:UInt64)*/
    /*Swift.(file).BinaryInteger./infix(_:Self,_:Self)*/
    UInt64.infix_47 = function ($info, lhs, rhs) {
        return (lhs / rhs) | 0;
    };
    /*Swift.(file).UInt64.%infix(_:UInt64,_:UInt64)*/
    /*Swift.(file).BinaryInteger.%infix(_:Self,_:Self)*/
    UInt64.infix_37 = function ($info, lhs, rhs) {
        return lhs % rhs;
    };
    /*Swift.(file).UInt64.+infix(_:UInt64,_:UInt64)*/
    /*Swift.(file).BinaryInteger.+infix(_:Self,_:Self)*/
    /*Swift.(file).AdditiveArithmetic.+infix(_:Self,_:Self)*/
    UInt64.infix_43 = function ($info, lhs, rhs) {
        return lhs + rhs;
    };
    /*Swift.(file).UInt64.-infix(_:UInt64,_:UInt64)*/
    /*Swift.(file).BinaryInteger.-infix(_:Self,_:Self)*/
    /*Swift.(file).AdditiveArithmetic.-infix(_:Self,_:Self)*/
    UInt64.infix_45 = function ($info, lhs, rhs) {
        return lhs - rhs;
    };
    /*Swift.(file).UInt64.*infix(_:UInt64,_:UInt64)*/
    /*Swift.(file).BinaryInteger.*infix(_:Self,_:Self)*/
    /*Swift.(file).Numeric.*infix(_:Self,_:Self)*/
    UInt64.infix_42 = function ($info, lhs, rhs) {
        return lhs * rhs;
    };
    /*Swift.(file).UInt64.>>infix(_:UInt64,_:UInt64)*/
    /*Swift.(file).UInt64.>>infix(_:UInt64,_:UInt64)*/
    UInt64.infix_62_62 = function ($info, lhs, rhs) {
        return lhs >> rhs;
    };
    /*Swift.(file).UInt64.>>=infix(_:UInt64,_:UInt64)*/
    /*Swift.(file).UInt64.>>=infix(_:UInt64,_:UInt64)*/
    UInt64.infix_62_62_61 = function ($info, lhs$inout, rhs) {
        lhs$inout.set(lhs$inout.get() >> rhs);
    };
    /*Swift.(file).UInt64.<<infix(_:UInt64,_:UInt64)*/
    /*Swift.(file).UInt64.<<infix(_:UInt64,_:UInt64)*/
    UInt64.infix_60_60 = function ($info, lhs, rhs) {
        return lhs << rhs;
    };
    /*Swift.(file).UInt64.<<=infix(_:UInt64,_:UInt64)*/
    /*Swift.(file).UInt64.<<=infix(_:UInt64,_:UInt64)*/
    UInt64.infix_60_60_61 = function ($info, lhs$inout, rhs) {
        lhs$inout.set(lhs$inout.get() << rhs);
    };
    /*Swift.(file).UInt64.<=infix(_:UInt64,_:UInt64)*/
    /*Swift.(file).Comparable.<=infix(_:Self,_:Self)*/
    UInt64.infix_60_61 = function ($info, lhs, rhs) {
        return lhs <= rhs;
    };
    /*Swift.(file).UInt64.>=infix(_:UInt64,_:UInt64)*/
    /*Swift.(file).Comparable.>=infix(_:Self,_:Self)*/
    UInt64.infix_62_61 = function ($info, lhs, rhs) {
        return lhs >= rhs;
    };
    /*Swift.(file).UInt64.>infix(_:UInt64,_:UInt64)*/
    /*Swift.(file).Comparable.>infix(_:Self,_:Self)*/
    UInt64.infix_62 = function ($info, lhs, rhs) {
        return lhs > rhs;
    };
    /*Swift.(file).UInt64.init(from:Decoder)*/
    /*Swift.(file).Decodable.init(from:Decoder)*/
    UInt64.prototype.initFromDecoder = function ($info, decoder) {
        return decoder;
    };
    /*Swift.(file).UInt64.encode(to:Encoder)*/
    /*Swift.(file).Encodable.encode(to:Encoder)*/
    UInt64.prototype.encodeTo = function ($info, encoder) {
    };
    /*Swift.(file).UInt64.hash(into:Hasher)*/
    /*Swift.(file).Hashable.hash(into:Hasher)*/
    UInt64.prototype.hashInto = function ($info, hasher$inout) {
    };
    /*Swift.(file).UInt64.hashValue*/ /*
    hashValue$get() {
    return this.hashValue
    }
    get hashValue() { return this.hashValue$get() }*/ ;
    /*Swift.(file).UInt64.init(_:Unicode.Scalar)*/
    /*Swift.(file).UInt64.init(_:Unicode.Scalar)*/
    UInt64.prototype.initUnicodeScalar = function ($info, v) {
        return v;
    };
    /*Swift.(file).UInt64.customMirror*/ /*
    customMirror$get() {
    return this.customMirror
    }
    get customMirror() { return this.customMirror$get() }*/ ;
    /*Swift.(file).UInt64.customPlaygroundQuickLook*/ /*
    customPlaygroundQuickLook$get() {
    return this.customPlaygroundQuickLook
    }
    get customPlaygroundQuickLook() { return this.customPlaygroundQuickLook$get() }*/ ;
    var _125, _126, _127, _128, _129, _130, _131;
    UInt64.$struct = true;
    UInt64.$mixin = true;
    UInt64.$infoAddress = '0x7fb851822e38';
    UInt64.Words = (_125 = /** @class */ (function () {
            function class_149() {
            }
            /*Swift.(file).UInt64.Words.init(_:UInt64)*/
            /*Swift.(file).UInt64.Words.init(_:UInt64)*/
            class_149.prototype.initUInt64 = function ($info, value) {
                return value;
            };
            /*Swift.(file).UInt64.Words.count*/ /*
            count$get() {
            return this.count
            }
            get count() { return this.count$get() }*/ ;
            /*Swift.(file).UInt64.Words.startIndex*/ /*
            startIndex$get() {
            return this.startIndex
            }
            get startIndex() { return this.startIndex$get() }*/ ;
            /*Swift.(file).UInt64.Words.endIndex*/ /*
            endIndex$get() {
            return this.endIndex
            }
            get endIndex() { return this.endIndex$get() }*/ ;
            /*Swift.(file).UInt64.Words.indices*/ /*
            indices$get() {
            return this.indices
            }
            get indices() { return this.indices$get() }*/ ;
            /*Swift.(file).UInt64.Words.index(after:Int)*/
            /*Swift.(file).RandomAccessCollection.index(after:Self.Index)*/
            /*Swift.(file).BidirectionalCollection.index(after:Self.Index)*/
            /*Swift.(file).Collection.index(after:Self.Index)*/
            class_149.prototype.indexAfter = function ($info, i) {
            };
            /*Swift.(file).UInt64.Words.index(before:Int)*/
            /*Swift.(file).RandomAccessCollection.index(before:Self.Index)*/
            /*Swift.(file).BidirectionalCollection.index(before:Self.Index)*/
            class_149.prototype.indexBefore = function ($info, i) {
            };
            /*Swift.(file).UInt64.Words.subscript(_:Int)*/
            /*Swift.(file).RandomAccessCollection.subscript(_:Self.Index)*/
            /*Swift.(file).BidirectionalCollection.subscript(_:Self.Index)*/
            /*Swift.(file).Collection.subscript(_:Self.Index)*/
            class_149.prototype.subscript$get = function ($info, position) {
                return this[position];
            };
            return class_149;
        }()),
        _125.$struct = true,
        _125.$infoAddress = '0x7fb8519a21c0',
        _125);
    UInt64.SIMD2Storage = (_126 = /** @class */ (function () {
            function class_150() {
            }
            /*Swift.(file).UInt64.SIMD2Storage.init()*/
            /*Swift.(file).SIMDStorage.init()*/
            class_150.prototype.init = function ($info) {
            };
            /*Swift.(file).UInt64.SIMD2Storage.subscript(_:Int)*/
            /*Swift.(file).SIMDStorage.subscript(_:Int)*/
            class_150.prototype.subscript$get = function ($info, index) {
                return this[index];
            }; /*Swift.(file).UInt64.SIMD2Storage.subscript(_:Int)*/
            /*Swift.(file).SIMDStorage.subscript(_:Int)*/
            class_150.prototype.subscript$set = function ($info, newValue, index) {
                this[index] = newValue;
            };
            return class_150;
        }()),
        _126.$struct = true,
        _126.$infoAddress = '0x7fb852d5b3a8',
        _126);
    UInt64.SIMD4Storage = (_127 = /** @class */ (function () {
            function class_151() {
            }
            /*Swift.(file).UInt64.SIMD4Storage.init()*/
            /*Swift.(file).SIMDStorage.init()*/
            class_151.prototype.init = function ($info) {
            };
            /*Swift.(file).UInt64.SIMD4Storage.subscript(_:Int)*/
            /*Swift.(file).SIMDStorage.subscript(_:Int)*/
            class_151.prototype.subscript$get = function ($info, index) {
                return this[index];
            }; /*Swift.(file).UInt64.SIMD4Storage.subscript(_:Int)*/
            /*Swift.(file).SIMDStorage.subscript(_:Int)*/
            class_151.prototype.subscript$set = function ($info, newValue, index) {
                this[index] = newValue;
            };
            return class_151;
        }()),
        _127.$struct = true,
        _127.$infoAddress = '0x7fb852d5b550',
        _127);
    UInt64.SIMD8Storage = (_128 = /** @class */ (function () {
            function class_152() {
            }
            /*Swift.(file).UInt64.SIMD8Storage.init()*/
            /*Swift.(file).SIMDStorage.init()*/
            class_152.prototype.init = function ($info) {
            };
            /*Swift.(file).UInt64.SIMD8Storage.subscript(_:Int)*/
            /*Swift.(file).SIMDStorage.subscript(_:Int)*/
            class_152.prototype.subscript$get = function ($info, index) {
                return this[index];
            }; /*Swift.(file).UInt64.SIMD8Storage.subscript(_:Int)*/
            /*Swift.(file).SIMDStorage.subscript(_:Int)*/
            class_152.prototype.subscript$set = function ($info, newValue, index) {
                this[index] = newValue;
            };
            return class_152;
        }()),
        _128.$struct = true,
        _128.$infoAddress = '0x7fb852d5b6f8',
        _128);
    UInt64.SIMD16Storage = (_129 = /** @class */ (function () {
            function class_153() {
            }
            /*Swift.(file).UInt64.SIMD16Storage.init()*/
            /*Swift.(file).SIMDStorage.init()*/
            class_153.prototype.init = function ($info) {
            };
            /*Swift.(file).UInt64.SIMD16Storage.subscript(_:Int)*/
            /*Swift.(file).SIMDStorage.subscript(_:Int)*/
            class_153.prototype.subscript$get = function ($info, index) {
                return this[index];
            }; /*Swift.(file).UInt64.SIMD16Storage.subscript(_:Int)*/
            /*Swift.(file).SIMDStorage.subscript(_:Int)*/
            class_153.prototype.subscript$set = function ($info, newValue, index) {
                this[index] = newValue;
            };
            return class_153;
        }()),
        _129.$struct = true,
        _129.$infoAddress = '0x7fb852d5b8a0',
        _129);
    UInt64.SIMD32Storage = (_130 = /** @class */ (function () {
            function class_154() {
            }
            /*Swift.(file).UInt64.SIMD32Storage.init()*/
            /*Swift.(file).SIMDStorage.init()*/
            class_154.prototype.init = function ($info) {
            };
            /*Swift.(file).UInt64.SIMD32Storage.subscript(_:Int)*/
            /*Swift.(file).SIMDStorage.subscript(_:Int)*/
            class_154.prototype.subscript$get = function ($info, index) {
                return this[index];
            }; /*Swift.(file).UInt64.SIMD32Storage.subscript(_:Int)*/
            /*Swift.(file).SIMDStorage.subscript(_:Int)*/
            class_154.prototype.subscript$set = function ($info, newValue, index) {
                this[index] = newValue;
            };
            return class_154;
        }()),
        _130.$struct = true,
        _130.$infoAddress = '0x7fb852d5ba48',
        _130);
    UInt64.SIMD64Storage = (_131 = /** @class */ (function () {
            function class_155() {
            }
            /*Swift.(file).UInt64.SIMD64Storage.init()*/
            /*Swift.(file).SIMDStorage.init()*/
            class_155.prototype.init = function ($info) {
            };
            /*Swift.(file).UInt64.SIMD64Storage.subscript(_:Int)*/
            /*Swift.(file).SIMDStorage.subscript(_:Int)*/
            class_155.prototype.subscript$get = function ($info, index) {
                return this[index];
            }; /*Swift.(file).UInt64.SIMD64Storage.subscript(_:Int)*/
            /*Swift.(file).SIMDStorage.subscript(_:Int)*/
            class_155.prototype.subscript$set = function ($info, newValue, index) {
                this[index] = newValue;
            };
            return class_155;
        }()),
        _131.$struct = true,
        _131.$infoAddress = '0x7fb852d5bbf0',
        _131);
    return UInt64;
}());
if (typeof RandomAccessCollection$implementation != 'undefined')
    _mixin(UInt64.Words, RandomAccessCollection$implementation, false);
if (typeof SIMDStorage$implementation != 'undefined')
    _mixin(UInt64.SIMD2Storage, SIMDStorage$implementation, false);
if (typeof SIMDStorage$implementation != 'undefined')
    _mixin(UInt64.SIMD4Storage, SIMDStorage$implementation, false);
if (typeof SIMDStorage$implementation != 'undefined')
    _mixin(UInt64.SIMD8Storage, SIMDStorage$implementation, false);
if (typeof SIMDStorage$implementation != 'undefined')
    _mixin(UInt64.SIMD16Storage, SIMDStorage$implementation, false);
if (typeof SIMDStorage$implementation != 'undefined')
    _mixin(UInt64.SIMD32Storage, SIMDStorage$implementation, false);
if (typeof SIMDStorage$implementation != 'undefined')
    _mixin(UInt64.SIMD64Storage, SIMDStorage$implementation, false);
if (typeof FixedWidthInteger$implementation != 'undefined')
    _mixin(UInt64, FixedWidthInteger$implementation, false);
if (typeof UnsignedInteger$implementation != 'undefined')
    _mixin(UInt64, UnsignedInteger$implementation, false);
if (typeof _ExpressibleByBuiltinIntegerLiteral$implementation != 'undefined')
    _mixin(UInt64, _ExpressibleByBuiltinIntegerLiteral$implementation, false);
if (typeof Codable$implementation != 'undefined')
    _mixin(UInt64, Codable$implementation, false);
if (typeof Hashable$implementation != 'undefined')
    _mixin(UInt64, Hashable$implementation, false);
if (typeof _HasCustomAnyHashableRepresentation$implementation != 'undefined')
    _mixin(UInt64, _HasCustomAnyHashableRepresentation$implementation, false);
if (typeof CustomReflectable$implementation != 'undefined')
    _mixin(UInt64, CustomReflectable$implementation, false);
if (typeof _CustomPlaygroundQuickLookable$implementation != 'undefined')
    _mixin(UInt64, _CustomPlaygroundQuickLookable$implementation, false);
if (typeof SIMDScalar$implementation != 'undefined')
    _mixin(UInt64, SIMDScalar$implementation, false);
if (typeof CVarArg$implementation != 'undefined')
    _mixin(UInt64, CVarArg$implementation, false);
if (typeof _CVarArgAligned$implementation != 'undefined')
    _mixin(UInt64, _CVarArgAligned$implementation, false);
var Int64 = /** @class */ (function () {
    function Int64() {
    }
    /*Swift.(file).Int64.init(_builtinIntegerLiteral:IntLiteral)*/
    /*Swift.(file)._ExpressibleByBuiltinIntegerLiteral.init(_builtinIntegerLiteral:IntLiteral)*/
    Int64.prototype.init_builtinIntegerLiteralIntLiteral = function ($info, x) {
        return x;
    };
    /*Swift.(file).Int64.init(bitPattern:UInt64)*/
    /*Swift.(file).Int64.init(bitPattern:UInt64)*/
    Int64.prototype.initBitPatternUInt64 = function ($info, x) {
        return x;
    };
    /*Swift.(file).Int64.init(bitPattern:Double)*/
    /*Swift.(file).Int64.init(bitPattern:Double)*/
    Int64.prototype.initBitPatternDouble = function ($info, x) {
        return x;
    };
    /*Swift.(file).Int64.init(_:Float)*/
    /*Swift.(file).Int64.init(_:Float)*/
    Int64.prototype.initFloat = function ($info, source) {
        return source;
    };
    /*Swift.(file).Int64.init(exactly:Float)*/
    /*Swift.(file).Int64.init(exactly:Float)*/
    Int64.prototype.initExactlyFloat = function ($info, source) {
        return source;
    };
    /*Swift.(file).Int64.init(_:Double)*/
    /*Swift.(file).Int64.init(_:Double)*/
    Int64.prototype.initDouble = function ($info, source) {
        return source;
    };
    /*Swift.(file).Int64.init(exactly:Double)*/
    /*Swift.(file).Int64.init(exactly:Double)*/
    Int64.prototype.initExactlyDouble = function ($info, source) {
        return source;
    };
    /*Swift.(file).Int64.init(_:Float80)*/
    /*Swift.(file).Int64.init(_:Float80)*/
    Int64.prototype.initFloat80 = function ($info, source) {
        return source;
    };
    /*Swift.(file).Int64.init(exactly:Float80)*/
    /*Swift.(file).Int64.init(exactly:Float80)*/
    Int64.prototype.initExactlyFloat80 = function ($info, source) {
        return source;
    };
    /*Swift.(file).Int64.==infix(_:Int64,_:Int64)*/
    /*Swift.(file).Equatable.==infix(_:Self,_:Self)*/
    Int64.infix_61_61 = function ($info, lhs, rhs) {
        return lhs == rhs;
    };
    /*Swift.(file).Int64.<infix(_:Int64,_:Int64)*/
    /*Swift.(file).Comparable.<infix(_:Self,_:Self)*/
    Int64.infix_60 = function ($info, lhs, rhs) {
        return lhs < rhs;
    };
    /*Swift.(file).Int64.+=infix(_:Int64,_:Int64)*/
    /*Swift.(file).BinaryInteger.+=infix(_:Self,_:Self)*/
    /*Swift.(file).AdditiveArithmetic.+=infix(_:Self,_:Self)*/
    Int64.infix_43_61 = function ($info, lhs$inout, rhs) {
        lhs$inout.set(lhs$inout.get() + rhs);
    };
    /*Swift.(file).Int64.-=infix(_:Int64,_:Int64)*/
    /*Swift.(file).BinaryInteger.-=infix(_:Self,_:Self)*/
    /*Swift.(file).AdditiveArithmetic.-=infix(_:Self,_:Self)*/
    Int64.infix_45_61 = function ($info, lhs$inout, rhs) {
        lhs$inout.set(lhs$inout.get() - rhs);
    };
    /*Swift.(file).Int64.*=infix(_:Int64,_:Int64)*/
    /*Swift.(file).BinaryInteger.*=infix(_:Self,_:Self)*/
    /*Swift.(file).Numeric.*=infix(_:Self,_:Self)*/
    Int64.infix_42_61 = function ($info, lhs$inout, rhs) {
        lhs$inout.set(lhs$inout.get() * rhs);
    };
    /*Swift.(file).Int64./=infix(_:Int64,_:Int64)*/
    /*Swift.(file).BinaryInteger./=infix(_:Self,_:Self)*/
    Int64.infix_47_61 = function ($info, lhs$inout, rhs) {
        lhs$inout.set((lhs$inout.get() / rhs) | 0);
    };
    /*Swift.(file).Int64.dividedReportingOverflow(by:Int64)*/
    /*Swift.(file).FixedWidthInteger.dividedReportingOverflow(by:Self)*/
    Int64.prototype.dividedReportingOverflowBy = function ($info, other) {
    };
    /*Swift.(file).Int64.remainderReportingOverflow(dividingBy:Int64)*/
    /*Swift.(file).FixedWidthInteger.remainderReportingOverflow(dividingBy:Self)*/
    Int64.prototype.remainderReportingOverflowDividingBy = function ($info, other) {
    };
    /*Swift.(file).Int64.addingReportingOverflow(_:Int64)*/
    /*Swift.(file).FixedWidthInteger.addingReportingOverflow(_:Self)*/
    Int64.prototype.addingReportingOverflow = function ($info, other) {
    };
    /*Swift.(file).Int64.subtractingReportingOverflow(_:Int64)*/
    /*Swift.(file).FixedWidthInteger.subtractingReportingOverflow(_:Self)*/
    Int64.prototype.subtractingReportingOverflow = function ($info, other) {
    };
    /*Swift.(file).Int64.multipliedReportingOverflow(by:Int64)*/
    /*Swift.(file).FixedWidthInteger.multipliedReportingOverflow(by:Self)*/
    Int64.prototype.multipliedReportingOverflowBy = function ($info, other) {
    };
    /*Swift.(file).Int64.%=infix(_:Int64,_:Int64)*/
    /*Swift.(file).BinaryInteger.%=infix(_:Self,_:Self)*/
    Int64.infix_37_61 = function ($info, lhs$inout, rhs) {
        lhs$inout.set(lhs$inout.get() % rhs);
    };
    /*Swift.(file).Int64.init(_:Int64)*/
    /*Swift.(file).Int64.init(_:Int64)*/
    Int64.prototype.initInt64 = function ($info, _value) {
        return _value;
    };
    /*Swift.(file).Int64.&=infix(_:Int64,_:Int64)*/
    /*Swift.(file).BinaryInteger.&=infix(_:Self,_:Self)*/
    Int64.infix_38_61 = function ($info, lhs$inout, rhs) {
        /*lhs$inout.set(lhs$inout.get() & rhs)*/
    };
    /*Swift.(file).Int64.|=infix(_:Int64,_:Int64)*/
    /*Swift.(file).BinaryInteger.|=infix(_:Self,_:Self)*/
    Int64.infix_124_61 = function ($info, lhs$inout, rhs) {
        lhs$inout.set(lhs$inout.get() | rhs);
    };
    /*Swift.(file).Int64.^=infix(_:Int64,_:Int64)*/
    /*Swift.(file).BinaryInteger.^=infix(_:Self,_:Self)*/
    Int64.infix_94_61 = function ($info, lhs$inout, rhs) {
        lhs$inout.set(lhs$inout.get() ^ rhs);
    };
    /*Swift.(file).Int64.&>>=infix(_:Int64,_:Int64)*/
    /*Swift.(file).FixedWidthInteger.&>>=infix(_:Self,_:Self)*/
    Int64.infix_38_62_62_61 = function ($info, lhs$inout, rhs) {
        /*lhs$inout.set(lhs$inout.get() &>> rhs)*/
    };
    /*Swift.(file).Int64.&<<=infix(_:Int64,_:Int64)*/
    /*Swift.(file).FixedWidthInteger.&<<=infix(_:Self,_:Self)*/
    Int64.infix_38_60_60_61 = function ($info, lhs$inout, rhs) {
        /*lhs$inout.set(lhs$inout.get() &<< rhs)*/
    };
    /*Swift.(file).Int64.bitWidth*/ /*
    static bitWidth$get() {
    return this.bitWidth
    }
    static get bitWidth() { return this.bitWidth$get() }*/ ;
    /*Swift.(file).Int64.leadingZeroBitCount*/ /*
    leadingZeroBitCount$get() {
    return this.leadingZeroBitCount
    }
    get leadingZeroBitCount() { return this.leadingZeroBitCount$get() }*/ ;
    /*Swift.(file).Int64.trailingZeroBitCount*/ /*
    trailingZeroBitCount$get() {
    return this.trailingZeroBitCount
    }
    get trailingZeroBitCount() { return this.trailingZeroBitCount$get() }*/ ;
    /*Swift.(file).Int64.nonzeroBitCount*/ /*
    nonzeroBitCount$get() {
    return this.nonzeroBitCount
    }
    get nonzeroBitCount() { return this.nonzeroBitCount$get() }*/ ;
    /*Swift.(file).Int64.init(_truncatingBits:UInt)*/
    /*Swift.(file).FixedWidthInteger.init(_truncatingBits:UInt)*/
    Int64.prototype.init_truncatingBitsUInt = function ($info, bits) {
        return bits;
    };
    /*Swift.(file).Int64.magnitude*/ /*
    magnitude$get() {
    return this.magnitude
    }
    get magnitude() { return this.magnitude$get() }*/ ;
    /*Swift.(file).Int64.multipliedFullWidth(by:Int64)*/
    /*Swift.(file).FixedWidthInteger.multipliedFullWidth(by:Self)*/
    Int64.prototype.multipliedFullWidthBy = function ($info, other) {
    };
    /*Swift.(file).Int64.dividingFullWidth(_:(high: Int64, low: Int64.Magnitude))*/
    /*Swift.(file).FixedWidthInteger.dividingFullWidth(_:(high: Self, low: Self.Magnitude))*/
    Int64.prototype.dividingFullWidth = function ($info, dividend) {
    };
    /*Swift.(file).Int64.byteSwapped*/ /*
    byteSwapped$get() {
    return this.byteSwapped
    }
    get byteSwapped() { return this.byteSwapped$get() }*/ ;
    /*Swift.(file).Int64.toUIntMax()*/
    /*Swift.(file).Int64.toUIntMax()*/
    Int64.prototype.toUIntMax = function ($info) {
    };
    /*Swift.(file).Int64.signum()*/
    /*Swift.(file).BinaryInteger.signum()*/
    Int64.prototype.signum = function ($info) {
    };
    /*Swift.(file).Int64.&infix(_:Int64,_:Int64)*/
    /*Swift.(file).BinaryInteger.&infix(_:Self,_:Self)*/
    Int64.infix_38 = function ($info, lhs, rhs) {
        /*return lhs & rhs*/
    };
    /*Swift.(file).Int64.|infix(_:Int64,_:Int64)*/
    /*Swift.(file).BinaryInteger.|infix(_:Self,_:Self)*/
    Int64.infix_124 = function ($info, lhs, rhs) {
        return lhs | rhs;
    };
    /*Swift.(file).Int64.^infix(_:Int64,_:Int64)*/
    /*Swift.(file).BinaryInteger.^infix(_:Self,_:Self)*/
    Int64.infix_94 = function ($info, lhs, rhs) {
        return lhs ^ rhs;
    };
    /*Swift.(file).Int64.&>>infix(_:Int64,_:Int64)*/
    /*Swift.(file).FixedWidthInteger.&>>infix(_:Self,_:Self)*/
    Int64.infix_38_62_62 = function ($info, lhs, rhs) {
        /*return lhs &>> rhs*/
    };
    /*Swift.(file).Int64.&<<infix(_:Int64,_:Int64)*/
    /*Swift.(file).FixedWidthInteger.&<<infix(_:Self,_:Self)*/
    Int64.infix_38_60_60 = function ($info, lhs, rhs) {
        /*return lhs &<< rhs*/
    };
    /*Swift.(file).Int64./infix(_:Int64,_:Int64)*/
    /*Swift.(file).BinaryInteger./infix(_:Self,_:Self)*/
    Int64.infix_47 = function ($info, lhs, rhs) {
        return (lhs / rhs) | 0;
    };
    /*Swift.(file).Int64.%infix(_:Int64,_:Int64)*/
    /*Swift.(file).BinaryInteger.%infix(_:Self,_:Self)*/
    Int64.infix_37 = function ($info, lhs, rhs) {
        return lhs % rhs;
    };
    /*Swift.(file).Int64.+infix(_:Int64,_:Int64)*/
    /*Swift.(file).BinaryInteger.+infix(_:Self,_:Self)*/
    /*Swift.(file).AdditiveArithmetic.+infix(_:Self,_:Self)*/
    Int64.infix_43 = function ($info, lhs, rhs) {
        return lhs + rhs;
    };
    /*Swift.(file).Int64.-infix(_:Int64,_:Int64)*/
    /*Swift.(file).BinaryInteger.-infix(_:Self,_:Self)*/
    /*Swift.(file).AdditiveArithmetic.-infix(_:Self,_:Self)*/
    Int64.infix_45 = function ($info, lhs, rhs) {
        return lhs - rhs;
    };
    /*Swift.(file).Int64.*infix(_:Int64,_:Int64)*/
    /*Swift.(file).BinaryInteger.*infix(_:Self,_:Self)*/
    /*Swift.(file).Numeric.*infix(_:Self,_:Self)*/
    Int64.infix_42 = function ($info, lhs, rhs) {
        return lhs * rhs;
    };
    /*Swift.(file).Int64.>>infix(_:Int64,_:Int64)*/
    /*Swift.(file).Int64.>>infix(_:Int64,_:Int64)*/
    Int64.infix_62_62 = function ($info, lhs, rhs) {
        return lhs >> rhs;
    };
    /*Swift.(file).Int64.>>=infix(_:Int64,_:Int64)*/
    /*Swift.(file).Int64.>>=infix(_:Int64,_:Int64)*/
    Int64.infix_62_62_61 = function ($info, lhs$inout, rhs) {
        lhs$inout.set(lhs$inout.get() >> rhs);
    };
    /*Swift.(file).Int64.<<infix(_:Int64,_:Int64)*/
    /*Swift.(file).Int64.<<infix(_:Int64,_:Int64)*/
    Int64.infix_60_60 = function ($info, lhs, rhs) {
        return lhs << rhs;
    };
    /*Swift.(file).Int64.<<=infix(_:Int64,_:Int64)*/
    /*Swift.(file).Int64.<<=infix(_:Int64,_:Int64)*/
    Int64.infix_60_60_61 = function ($info, lhs$inout, rhs) {
        lhs$inout.set(lhs$inout.get() << rhs);
    };
    /*Swift.(file).Int64.<=infix(_:Int64,_:Int64)*/
    /*Swift.(file).Comparable.<=infix(_:Self,_:Self)*/
    Int64.infix_60_61 = function ($info, lhs, rhs) {
        return lhs <= rhs;
    };
    /*Swift.(file).Int64.>=infix(_:Int64,_:Int64)*/
    /*Swift.(file).Comparable.>=infix(_:Self,_:Self)*/
    Int64.infix_62_61 = function ($info, lhs, rhs) {
        return lhs >= rhs;
    };
    /*Swift.(file).Int64.>infix(_:Int64,_:Int64)*/
    /*Swift.(file).Comparable.>infix(_:Self,_:Self)*/
    Int64.infix_62 = function ($info, lhs, rhs) {
        return lhs > rhs;
    };
    /*Swift.(file).Int64.init(from:Decoder)*/
    /*Swift.(file).Decodable.init(from:Decoder)*/
    Int64.prototype.initFromDecoder = function ($info, decoder) {
        return decoder;
    };
    /*Swift.(file).Int64.encode(to:Encoder)*/
    /*Swift.(file).Encodable.encode(to:Encoder)*/
    Int64.prototype.encodeTo = function ($info, encoder) {
    };
    /*Swift.(file).Int64.hash(into:Hasher)*/
    /*Swift.(file).Hashable.hash(into:Hasher)*/
    Int64.prototype.hashInto = function ($info, hasher$inout) {
    };
    /*Swift.(file).Int64.hashValue*/ /*
    hashValue$get() {
    return this.hashValue
    }
    get hashValue() { return this.hashValue$get() }*/ ;
    /*Swift.(file).Int64.customMirror*/ /*
    customMirror$get() {
    return this.customMirror
    }
    get customMirror() { return this.customMirror$get() }*/ ;
    /*Swift.(file).Int64.customPlaygroundQuickLook*/ /*
    customPlaygroundQuickLook$get() {
    return this.customPlaygroundQuickLook
    }
    get customPlaygroundQuickLook() { return this.customPlaygroundQuickLook$get() }*/ ;
    var _132, _133, _134, _135, _136, _137, _138;
    Int64.$struct = true;
    Int64.$mixin = true;
    Int64.$infoAddress = '0x7fb851823320';
    Int64.Words = (_132 = /** @class */ (function () {
            function class_156() {
            }
            /*Swift.(file).Int64.Words.init(_:Int64)*/
            /*Swift.(file).Int64.Words.init(_:Int64)*/
            class_156.prototype.initInt64 = function ($info, value) {
                return value;
            };
            /*Swift.(file).Int64.Words.count*/ /*
            count$get() {
            return this.count
            }
            get count() { return this.count$get() }*/ ;
            /*Swift.(file).Int64.Words.startIndex*/ /*
            startIndex$get() {
            return this.startIndex
            }
            get startIndex() { return this.startIndex$get() }*/ ;
            /*Swift.(file).Int64.Words.endIndex*/ /*
            endIndex$get() {
            return this.endIndex
            }
            get endIndex() { return this.endIndex$get() }*/ ;
            /*Swift.(file).Int64.Words.indices*/ /*
            indices$get() {
            return this.indices
            }
            get indices() { return this.indices$get() }*/ ;
            /*Swift.(file).Int64.Words.index(after:Int)*/
            /*Swift.(file).RandomAccessCollection.index(after:Self.Index)*/
            /*Swift.(file).BidirectionalCollection.index(after:Self.Index)*/
            /*Swift.(file).Collection.index(after:Self.Index)*/
            class_156.prototype.indexAfter = function ($info, i) {
            };
            /*Swift.(file).Int64.Words.index(before:Int)*/
            /*Swift.(file).RandomAccessCollection.index(before:Self.Index)*/
            /*Swift.(file).BidirectionalCollection.index(before:Self.Index)*/
            class_156.prototype.indexBefore = function ($info, i) {
            };
            /*Swift.(file).Int64.Words.subscript(_:Int)*/
            /*Swift.(file).RandomAccessCollection.subscript(_:Self.Index)*/
            /*Swift.(file).BidirectionalCollection.subscript(_:Self.Index)*/
            /*Swift.(file).Collection.subscript(_:Self.Index)*/
            class_156.prototype.subscript$get = function ($info, position) {
                return this[position];
            };
            return class_156;
        }()),
        _132.$struct = true,
        _132.$infoAddress = '0x7fb85132d8c0',
        _132);
    Int64.SIMD2Storage = (_133 = /** @class */ (function () {
            function class_157() {
            }
            /*Swift.(file).Int64.SIMD2Storage.init()*/
            /*Swift.(file).SIMDStorage.init()*/
            class_157.prototype.init = function ($info) {
            };
            /*Swift.(file).Int64.SIMD2Storage.subscript(_:Int)*/
            /*Swift.(file).SIMDStorage.subscript(_:Int)*/
            class_157.prototype.subscript$get = function ($info, index) {
                return this[index];
            }; /*Swift.(file).Int64.SIMD2Storage.subscript(_:Int)*/
            /*Swift.(file).SIMDStorage.subscript(_:Int)*/
            class_157.prototype.subscript$set = function ($info, newValue, index) {
                this[index] = newValue;
            };
            return class_157;
        }()),
        _133.$struct = true,
        _133.$infoAddress = '0x7fb851333620',
        _133);
    Int64.SIMD4Storage = (_134 = /** @class */ (function () {
            function class_158() {
            }
            /*Swift.(file).Int64.SIMD4Storage.init()*/
            /*Swift.(file).SIMDStorage.init()*/
            class_158.prototype.init = function ($info) {
            };
            /*Swift.(file).Int64.SIMD4Storage.subscript(_:Int)*/
            /*Swift.(file).SIMDStorage.subscript(_:Int)*/
            class_158.prototype.subscript$get = function ($info, index) {
                return this[index];
            }; /*Swift.(file).Int64.SIMD4Storage.subscript(_:Int)*/
            /*Swift.(file).SIMDStorage.subscript(_:Int)*/
            class_158.prototype.subscript$set = function ($info, newValue, index) {
                this[index] = newValue;
            };
            return class_158;
        }()),
        _134.$struct = true,
        _134.$infoAddress = '0x7fb8513337c8',
        _134);
    Int64.SIMD8Storage = (_135 = /** @class */ (function () {
            function class_159() {
            }
            /*Swift.(file).Int64.SIMD8Storage.init()*/
            /*Swift.(file).SIMDStorage.init()*/
            class_159.prototype.init = function ($info) {
            };
            /*Swift.(file).Int64.SIMD8Storage.subscript(_:Int)*/
            /*Swift.(file).SIMDStorage.subscript(_:Int)*/
            class_159.prototype.subscript$get = function ($info, index) {
                return this[index];
            }; /*Swift.(file).Int64.SIMD8Storage.subscript(_:Int)*/
            /*Swift.(file).SIMDStorage.subscript(_:Int)*/
            class_159.prototype.subscript$set = function ($info, newValue, index) {
                this[index] = newValue;
            };
            return class_159;
        }()),
        _135.$struct = true,
        _135.$infoAddress = '0x7fb851333970',
        _135);
    Int64.SIMD16Storage = (_136 = /** @class */ (function () {
            function class_160() {
            }
            /*Swift.(file).Int64.SIMD16Storage.init()*/
            /*Swift.(file).SIMDStorage.init()*/
            class_160.prototype.init = function ($info) {
            };
            /*Swift.(file).Int64.SIMD16Storage.subscript(_:Int)*/
            /*Swift.(file).SIMDStorage.subscript(_:Int)*/
            class_160.prototype.subscript$get = function ($info, index) {
                return this[index];
            }; /*Swift.(file).Int64.SIMD16Storage.subscript(_:Int)*/
            /*Swift.(file).SIMDStorage.subscript(_:Int)*/
            class_160.prototype.subscript$set = function ($info, newValue, index) {
                this[index] = newValue;
            };
            return class_160;
        }()),
        _136.$struct = true,
        _136.$infoAddress = '0x7fb851333b18',
        _136);
    Int64.SIMD32Storage = (_137 = /** @class */ (function () {
            function class_161() {
            }
            /*Swift.(file).Int64.SIMD32Storage.init()*/
            /*Swift.(file).SIMDStorage.init()*/
            class_161.prototype.init = function ($info) {
            };
            /*Swift.(file).Int64.SIMD32Storage.subscript(_:Int)*/
            /*Swift.(file).SIMDStorage.subscript(_:Int)*/
            class_161.prototype.subscript$get = function ($info, index) {
                return this[index];
            }; /*Swift.(file).Int64.SIMD32Storage.subscript(_:Int)*/
            /*Swift.(file).SIMDStorage.subscript(_:Int)*/
            class_161.prototype.subscript$set = function ($info, newValue, index) {
                this[index] = newValue;
            };
            return class_161;
        }()),
        _137.$struct = true,
        _137.$infoAddress = '0x7fb851333cc0',
        _137);
    Int64.SIMD64Storage = (_138 = /** @class */ (function () {
            function class_162() {
            }
            /*Swift.(file).Int64.SIMD64Storage.init()*/
            /*Swift.(file).SIMDStorage.init()*/
            class_162.prototype.init = function ($info) {
            };
            /*Swift.(file).Int64.SIMD64Storage.subscript(_:Int)*/
            /*Swift.(file).SIMDStorage.subscript(_:Int)*/
            class_162.prototype.subscript$get = function ($info, index) {
                return this[index];
            }; /*Swift.(file).Int64.SIMD64Storage.subscript(_:Int)*/
            /*Swift.(file).SIMDStorage.subscript(_:Int)*/
            class_162.prototype.subscript$set = function ($info, newValue, index) {
                this[index] = newValue;
            };
            return class_162;
        }()),
        _138.$struct = true,
        _138.$infoAddress = '0x7fb851333e68',
        _138);
    return Int64;
}());
if (typeof RandomAccessCollection$implementation != 'undefined')
    _mixin(Int64.Words, RandomAccessCollection$implementation, false);
if (typeof SIMDStorage$implementation != 'undefined')
    _mixin(Int64.SIMD2Storage, SIMDStorage$implementation, false);
if (typeof SIMDStorage$implementation != 'undefined')
    _mixin(Int64.SIMD4Storage, SIMDStorage$implementation, false);
if (typeof SIMDStorage$implementation != 'undefined')
    _mixin(Int64.SIMD8Storage, SIMDStorage$implementation, false);
if (typeof SIMDStorage$implementation != 'undefined')
    _mixin(Int64.SIMD16Storage, SIMDStorage$implementation, false);
if (typeof SIMDStorage$implementation != 'undefined')
    _mixin(Int64.SIMD32Storage, SIMDStorage$implementation, false);
if (typeof SIMDStorage$implementation != 'undefined')
    _mixin(Int64.SIMD64Storage, SIMDStorage$implementation, false);
if (typeof FixedWidthInteger$implementation != 'undefined')
    _mixin(Int64, FixedWidthInteger$implementation, false);
if (typeof SignedInteger$implementation != 'undefined')
    _mixin(Int64, SignedInteger$implementation, false);
if (typeof _ExpressibleByBuiltinIntegerLiteral$implementation != 'undefined')
    _mixin(Int64, _ExpressibleByBuiltinIntegerLiteral$implementation, false);
if (typeof Codable$implementation != 'undefined')
    _mixin(Int64, Codable$implementation, false);
if (typeof Hashable$implementation != 'undefined')
    _mixin(Int64, Hashable$implementation, false);
if (typeof _HasCustomAnyHashableRepresentation$implementation != 'undefined')
    _mixin(Int64, _HasCustomAnyHashableRepresentation$implementation, false);
if (typeof CustomReflectable$implementation != 'undefined')
    _mixin(Int64, CustomReflectable$implementation, false);
if (typeof _CustomPlaygroundQuickLookable$implementation != 'undefined')
    _mixin(Int64, _CustomPlaygroundQuickLookable$implementation, false);
if (typeof SIMDScalar$implementation != 'undefined')
    _mixin(Int64, SIMDScalar$implementation, false);
if (typeof CVarArg$implementation != 'undefined')
    _mixin(Int64, CVarArg$implementation, false);
if (typeof _CVarArgAligned$implementation != 'undefined')
    _mixin(Int64, _CVarArgAligned$implementation, false);
var UInt = /** @class */ (function () {
    function UInt() {
    }
    /*Swift.(file).UInt.init(_builtinIntegerLiteral:IntLiteral)*/
    /*Swift.(file)._ExpressibleByBuiltinIntegerLiteral.init(_builtinIntegerLiteral:IntLiteral)*/
    UInt.prototype.init_builtinIntegerLiteralIntLiteral = function ($info, x) {
        return x;
    };
    /*Swift.(file).UInt.init(bitPattern:Int)*/
    /*Swift.(file).UInt.init(bitPattern:Int)*/
    UInt.prototype.initBitPatternInt = function ($info, x) {
        return x;
    };
    /*Swift.(file).UInt.init(_:Float)*/
    /*Swift.(file).UInt.init(_:Float)*/
    UInt.prototype.initFloat = function ($info, source) {
        return source;
    };
    /*Swift.(file).UInt.init(exactly:Float)*/
    /*Swift.(file).UInt.init(exactly:Float)*/
    UInt.prototype.initExactlyFloat = function ($info, source) {
        return source;
    };
    /*Swift.(file).UInt.init(_:Double)*/
    /*Swift.(file).UInt.init(_:Double)*/
    UInt.prototype.initDouble = function ($info, source) {
        return source;
    };
    /*Swift.(file).UInt.init(exactly:Double)*/
    /*Swift.(file).UInt.init(exactly:Double)*/
    UInt.prototype.initExactlyDouble = function ($info, source) {
        return source;
    };
    /*Swift.(file).UInt.init(_:Float80)*/
    /*Swift.(file).UInt.init(_:Float80)*/
    UInt.prototype.initFloat80 = function ($info, source) {
        return source;
    };
    /*Swift.(file).UInt.init(exactly:Float80)*/
    /*Swift.(file).UInt.init(exactly:Float80)*/
    UInt.prototype.initExactlyFloat80 = function ($info, source) {
        return source;
    };
    /*Swift.(file).UInt.==infix(_:UInt,_:UInt)*/
    /*Swift.(file).Equatable.==infix(_:Self,_:Self)*/
    UInt.infix_61_61 = function ($info, lhs, rhs) {
        return lhs == rhs;
    };
    /*Swift.(file).UInt.<infix(_:UInt,_:UInt)*/
    /*Swift.(file).Comparable.<infix(_:Self,_:Self)*/
    UInt.infix_60 = function ($info, lhs, rhs) {
        return lhs < rhs;
    };
    /*Swift.(file).UInt.+=infix(_:UInt,_:UInt)*/
    /*Swift.(file).BinaryInteger.+=infix(_:Self,_:Self)*/
    /*Swift.(file).AdditiveArithmetic.+=infix(_:Self,_:Self)*/
    UInt.infix_43_61 = function ($info, lhs$inout, rhs) {
        lhs$inout.set(lhs$inout.get() + rhs);
    };
    /*Swift.(file).UInt.-=infix(_:UInt,_:UInt)*/
    /*Swift.(file).BinaryInteger.-=infix(_:Self,_:Self)*/
    /*Swift.(file).AdditiveArithmetic.-=infix(_:Self,_:Self)*/
    UInt.infix_45_61 = function ($info, lhs$inout, rhs) {
        lhs$inout.set(lhs$inout.get() - rhs);
    };
    /*Swift.(file).UInt.*=infix(_:UInt,_:UInt)*/
    /*Swift.(file).Numeric.*=infix(_:Self,_:Self)*/
    /*Swift.(file).BinaryInteger.*=infix(_:Self,_:Self)*/
    UInt.infix_42_61 = function ($info, lhs$inout, rhs) {
        lhs$inout.set(lhs$inout.get() * rhs);
    };
    /*Swift.(file).UInt./=infix(_:UInt,_:UInt)*/
    /*Swift.(file).BinaryInteger./=infix(_:Self,_:Self)*/
    UInt.infix_47_61 = function ($info, lhs$inout, rhs) {
        lhs$inout.set((lhs$inout.get() / rhs) | 0);
    };
    /*Swift.(file).UInt.dividedReportingOverflow(by:UInt)*/
    /*Swift.(file).FixedWidthInteger.dividedReportingOverflow(by:Self)*/
    UInt.prototype.dividedReportingOverflowBy = function ($info, other) {
    };
    /*Swift.(file).UInt.remainderReportingOverflow(dividingBy:UInt)*/
    /*Swift.(file).FixedWidthInteger.remainderReportingOverflow(dividingBy:Self)*/
    UInt.prototype.remainderReportingOverflowDividingBy = function ($info, other) {
    };
    /*Swift.(file).UInt.addingReportingOverflow(_:UInt)*/
    /*Swift.(file).FixedWidthInteger.addingReportingOverflow(_:Self)*/
    UInt.prototype.addingReportingOverflow = function ($info, other) {
    };
    /*Swift.(file).UInt.subtractingReportingOverflow(_:UInt)*/
    /*Swift.(file).FixedWidthInteger.subtractingReportingOverflow(_:Self)*/
    UInt.prototype.subtractingReportingOverflow = function ($info, other) {
    };
    /*Swift.(file).UInt.multipliedReportingOverflow(by:UInt)*/
    /*Swift.(file).FixedWidthInteger.multipliedReportingOverflow(by:Self)*/
    UInt.prototype.multipliedReportingOverflowBy = function ($info, other) {
    };
    /*Swift.(file).UInt.%=infix(_:UInt,_:UInt)*/
    /*Swift.(file).BinaryInteger.%=infix(_:Self,_:Self)*/
    UInt.infix_37_61 = function ($info, lhs$inout, rhs) {
        lhs$inout.set(lhs$inout.get() % rhs);
    };
    /*Swift.(file).UInt.init(_:Int64)*/
    /*Swift.(file).UInt.init(_:Int64)*/
    UInt.prototype.initInt64 = function ($info, _value) {
        return _value;
    };
    /*Swift.(file).UInt.&=infix(_:UInt,_:UInt)*/
    /*Swift.(file).BinaryInteger.&=infix(_:Self,_:Self)*/
    UInt.infix_38_61 = function ($info, lhs$inout, rhs) {
        /*lhs$inout.set(lhs$inout.get() & rhs)*/
    };
    /*Swift.(file).UInt.|=infix(_:UInt,_:UInt)*/
    /*Swift.(file).BinaryInteger.|=infix(_:Self,_:Self)*/
    UInt.infix_124_61 = function ($info, lhs$inout, rhs) {
        lhs$inout.set(lhs$inout.get() | rhs);
    };
    /*Swift.(file).UInt.^=infix(_:UInt,_:UInt)*/
    /*Swift.(file).BinaryInteger.^=infix(_:Self,_:Self)*/
    UInt.infix_94_61 = function ($info, lhs$inout, rhs) {
        lhs$inout.set(lhs$inout.get() ^ rhs);
    };
    /*Swift.(file).UInt.&>>=infix(_:UInt,_:UInt)*/
    /*Swift.(file).FixedWidthInteger.&>>=infix(_:Self,_:Self)*/
    UInt.infix_38_62_62_61 = function ($info, lhs$inout, rhs) {
        /*lhs$inout.set(lhs$inout.get() &>> rhs)*/
    };
    /*Swift.(file).UInt.&<<=infix(_:UInt,_:UInt)*/
    /*Swift.(file).FixedWidthInteger.&<<=infix(_:Self,_:Self)*/
    UInt.infix_38_60_60_61 = function ($info, lhs$inout, rhs) {
        /*lhs$inout.set(lhs$inout.get() &<< rhs)*/
    };
    /*Swift.(file).UInt.bitWidth*/ /*
    static bitWidth$get() {
    return this.bitWidth
    }
    static get bitWidth() { return this.bitWidth$get() }*/ ;
    /*Swift.(file).UInt.leadingZeroBitCount*/ /*
    leadingZeroBitCount$get() {
    return this.leadingZeroBitCount
    }
    get leadingZeroBitCount() { return this.leadingZeroBitCount$get() }*/ ;
    /*Swift.(file).UInt.trailingZeroBitCount*/ /*
    trailingZeroBitCount$get() {
    return this.trailingZeroBitCount
    }
    get trailingZeroBitCount() { return this.trailingZeroBitCount$get() }*/ ;
    /*Swift.(file).UInt.nonzeroBitCount*/ /*
    nonzeroBitCount$get() {
    return this.nonzeroBitCount
    }
    get nonzeroBitCount() { return this.nonzeroBitCount$get() }*/ ;
    /*Swift.(file).UInt.init(_truncatingBits:UInt)*/
    /*Swift.(file).FixedWidthInteger.init(_truncatingBits:UInt)*/
    UInt.prototype.init_truncatingBitsUInt = function ($info, bits) {
        return bits;
    };
    /*Swift.(file).UInt.multipliedFullWidth(by:UInt)*/
    /*Swift.(file).FixedWidthInteger.multipliedFullWidth(by:Self)*/
    UInt.prototype.multipliedFullWidthBy = function ($info, other) {
    };
    /*Swift.(file).UInt.dividingFullWidth(_:(high: UInt, low: UInt.Magnitude))*/
    /*Swift.(file).FixedWidthInteger.dividingFullWidth(_:(high: Self, low: Self.Magnitude))*/
    UInt.prototype.dividingFullWidth = function ($info, dividend) {
    };
    /*Swift.(file).UInt.byteSwapped*/ /*
    byteSwapped$get() {
    return this.byteSwapped
    }
    get byteSwapped() { return this.byteSwapped$get() }*/ ;
    /*Swift.(file).UInt.init(_:Word)*/
    /*Swift.(file).UInt.init(_:Word)*/
    UInt.prototype.initWord = function ($info, _v) {
        return _v;
    };
    /*Swift.(file).UInt.toIntMax()*/
    /*Swift.(file).UInt.toIntMax()*/
    UInt.prototype.toIntMax = function ($info) {
    };
    /*Swift.(file).UInt.signum()*/
    /*Swift.(file).BinaryInteger.signum()*/
    UInt.prototype.signum = function ($info) {
    };
    /*Swift.(file).UInt.&infix(_:UInt,_:UInt)*/
    /*Swift.(file).BinaryInteger.&infix(_:Self,_:Self)*/
    UInt.infix_38 = function ($info, lhs, rhs) {
        /*return lhs & rhs*/
    };
    /*Swift.(file).UInt.|infix(_:UInt,_:UInt)*/
    /*Swift.(file).BinaryInteger.|infix(_:Self,_:Self)*/
    UInt.infix_124 = function ($info, lhs, rhs) {
        return lhs | rhs;
    };
    /*Swift.(file).UInt.^infix(_:UInt,_:UInt)*/
    /*Swift.(file).BinaryInteger.^infix(_:Self,_:Self)*/
    UInt.infix_94 = function ($info, lhs, rhs) {
        return lhs ^ rhs;
    };
    /*Swift.(file).UInt.&>>infix(_:UInt,_:UInt)*/
    /*Swift.(file).FixedWidthInteger.&>>infix(_:Self,_:Self)*/
    UInt.infix_38_62_62 = function ($info, lhs, rhs) {
        /*return lhs &>> rhs*/
    };
    /*Swift.(file).UInt.&<<infix(_:UInt,_:UInt)*/
    /*Swift.(file).FixedWidthInteger.&<<infix(_:Self,_:Self)*/
    UInt.infix_38_60_60 = function ($info, lhs, rhs) {
        /*return lhs &<< rhs*/
    };
    /*Swift.(file).UInt./infix(_:UInt,_:UInt)*/
    /*Swift.(file).BinaryInteger./infix(_:Self,_:Self)*/
    UInt.infix_47 = function ($info, lhs, rhs) {
        return (lhs / rhs) | 0;
    };
    /*Swift.(file).UInt.%infix(_:UInt,_:UInt)*/
    /*Swift.(file).BinaryInteger.%infix(_:Self,_:Self)*/
    UInt.infix_37 = function ($info, lhs, rhs) {
        return lhs % rhs;
    };
    /*Swift.(file).UInt.+infix(_:UInt,_:UInt)*/
    /*Swift.(file).BinaryInteger.+infix(_:Self,_:Self)*/
    /*Swift.(file).AdditiveArithmetic.+infix(_:Self,_:Self)*/
    UInt.infix_43 = function ($info, lhs, rhs) {
        return lhs + rhs;
    };
    /*Swift.(file).UInt.-infix(_:UInt,_:UInt)*/
    /*Swift.(file).BinaryInteger.-infix(_:Self,_:Self)*/
    /*Swift.(file).AdditiveArithmetic.-infix(_:Self,_:Self)*/
    UInt.infix_45 = function ($info, lhs, rhs) {
        return lhs - rhs;
    };
    /*Swift.(file).UInt.*infix(_:UInt,_:UInt)*/
    /*Swift.(file).Numeric.*infix(_:Self,_:Self)*/
    /*Swift.(file).BinaryInteger.*infix(_:Self,_:Self)*/
    UInt.infix_42 = function ($info, lhs, rhs) {
        return lhs * rhs;
    };
    /*Swift.(file).UInt.>>infix(_:UInt,_:UInt)*/
    /*Swift.(file).UInt.>>infix(_:UInt,_:UInt)*/
    UInt.infix_62_62 = function ($info, lhs, rhs) {
        return lhs >> rhs;
    };
    /*Swift.(file).UInt.>>=infix(_:UInt,_:UInt)*/
    /*Swift.(file).UInt.>>=infix(_:UInt,_:UInt)*/
    UInt.infix_62_62_61 = function ($info, lhs$inout, rhs) {
        lhs$inout.set(lhs$inout.get() >> rhs);
    };
    /*Swift.(file).UInt.<<infix(_:UInt,_:UInt)*/
    /*Swift.(file).UInt.<<infix(_:UInt,_:UInt)*/
    UInt.infix_60_60 = function ($info, lhs, rhs) {
        return lhs << rhs;
    };
    /*Swift.(file).UInt.<<=infix(_:UInt,_:UInt)*/
    /*Swift.(file).UInt.<<=infix(_:UInt,_:UInt)*/
    UInt.infix_60_60_61 = function ($info, lhs$inout, rhs) {
        lhs$inout.set(lhs$inout.get() << rhs);
    };
    /*Swift.(file).UInt.<=infix(_:UInt,_:UInt)*/
    /*Swift.(file).Comparable.<=infix(_:Self,_:Self)*/
    UInt.infix_60_61 = function ($info, lhs, rhs) {
        return lhs <= rhs;
    };
    /*Swift.(file).UInt.>=infix(_:UInt,_:UInt)*/
    /*Swift.(file).Comparable.>=infix(_:Self,_:Self)*/
    UInt.infix_62_61 = function ($info, lhs, rhs) {
        return lhs >= rhs;
    };
    /*Swift.(file).UInt.>infix(_:UInt,_:UInt)*/
    /*Swift.(file).Comparable.>infix(_:Self,_:Self)*/
    UInt.infix_62 = function ($info, lhs, rhs) {
        return lhs > rhs;
    };
    /*Swift.(file).UInt.init(from:Decoder)*/
    /*Swift.(file).Decodable.init(from:Decoder)*/
    UInt.prototype.initFromDecoder = function ($info, decoder) {
        return decoder;
    };
    /*Swift.(file).UInt.encode(to:Encoder)*/
    /*Swift.(file).Encodable.encode(to:Encoder)*/
    UInt.prototype.encodeTo = function ($info, encoder) {
    };
    /*Swift.(file).UInt.init(bitPattern:OpaquePointer?)*/
    /*Swift.(file).UInt.init(bitPattern:OpaquePointer?)*/
    UInt.prototype.initBitPatternOptional = function ($info, pointer) {
        return pointer;
    };
    /*Swift.(file).UInt.hash(into:Hasher)*/
    /*Swift.(file).Hashable.hash(into:Hasher)*/
    UInt.prototype.hashInto = function ($info, hasher$inout) {
    };
    /*Swift.(file).UInt.hashValue*/ /*
    hashValue$get() {
    return this.hashValue
    }
    get hashValue() { return this.hashValue$get() }*/ ;
    /*Swift.(file).UInt.init(truncatingBitPattern:UInt64)*/
    /*Swift.(file).UInt.init(truncatingBitPattern:UInt64)*/
    UInt.prototype.initTruncatingBitPatternUInt64 = function ($info, source) {
        return source;
    };
    /*Swift.(file).UInt.init(truncatingBitPattern:Int64)*/
    /*Swift.(file).UInt.init(truncatingBitPattern:Int64)*/
    UInt.prototype.initTruncatingBitPatternInt64 = function ($info, source) {
        return source;
    };
    /*Swift.(file).UInt.customMirror*/ /*
    customMirror$get() {
    return this.customMirror
    }
    get customMirror() { return this.customMirror$get() }*/ ;
    /*Swift.(file).UInt.customPlaygroundQuickLook*/ /*
    customPlaygroundQuickLook$get() {
    return this.customPlaygroundQuickLook
    }
    get customPlaygroundQuickLook() { return this.customPlaygroundQuickLook$get() }*/ ;
    /*Swift.(file).UInt.init(bitPattern:ObjectIdentifier)*/
    /*Swift.(file).UInt.init(bitPattern:ObjectIdentifier)*/
    UInt.prototype.initBitPatternObjectIdentifier = function ($info, objectID) {
        return objectID;
    };
    /*Swift.(file).UInt.init(bitPattern:P?)*/
    /*Swift.(file).UInt.init(bitPattern:P?)*/
    UInt.prototype.initBitPatternOptional = function ($info, pointer) {
        return pointer;
    };
    var _139, _140, _141, _142, _143, _144, _145;
    UInt.$struct = true;
    UInt.$mixin = true;
    UInt.$infoAddress = '0x7fb851811910';
    UInt.Words = (_139 = /** @class */ (function () {
            function class_163() {
            }
            /*Swift.(file).UInt.Words.init(_:UInt)*/
            /*Swift.(file).UInt.Words.init(_:UInt)*/
            class_163.prototype.initUInt = function ($info, value) {
                return value;
            };
            /*Swift.(file).UInt.Words.count*/ /*
            count$get() {
            return this.count
            }
            get count() { return this.count$get() }*/ ;
            /*Swift.(file).UInt.Words.startIndex*/ /*
            startIndex$get() {
            return this.startIndex
            }
            get startIndex() { return this.startIndex$get() }*/ ;
            /*Swift.(file).UInt.Words.endIndex*/ /*
            endIndex$get() {
            return this.endIndex
            }
            get endIndex() { return this.endIndex$get() }*/ ;
            /*Swift.(file).UInt.Words.indices*/ /*
            indices$get() {
            return this.indices
            }
            get indices() { return this.indices$get() }*/ ;
            /*Swift.(file).UInt.Words.index(after:Int)*/
            /*Swift.(file).RandomAccessCollection.index(after:Self.Index)*/
            /*Swift.(file).BidirectionalCollection.index(after:Self.Index)*/
            /*Swift.(file).Collection.index(after:Self.Index)*/
            /*Swift.(file).RandomAccessCollection.index(after:Self.Index)*/
            class_163.prototype.indexAfter = function ($info, i) {
            };
            /*Swift.(file).UInt.Words.index(before:Int)*/
            /*Swift.(file).RandomAccessCollection.index(before:Self.Index)*/
            /*Swift.(file).BidirectionalCollection.index(before:Self.Index)*/
            /*Swift.(file).RandomAccessCollection.index(before:Self.Index)*/
            class_163.prototype.indexBefore = function ($info, i) {
            };
            /*Swift.(file).UInt.Words.subscript(_:Int)*/
            /*Swift.(file).RandomAccessCollection.subscript(_:Self.Index)*/
            /*Swift.(file).BidirectionalCollection.subscript(_:Self.Index)*/
            /*Swift.(file).Collection.subscript(_:Self.Index)*/
            /*Swift.(file).RandomAccessCollection.subscript(_:Self.Index)*/
            class_163.prototype.subscript$get = function ($info, position) {
                return this[position];
            };
            return class_163;
        }()),
        _139.$struct = true,
        _139.$infoAddress = '0x7fb851ab3ab0',
        _139);
    UInt.SIMD2Storage = (_140 = /** @class */ (function () {
            function class_164() {
            }
            /*Swift.(file).UInt.SIMD2Storage.init()*/
            /*Swift.(file).SIMDStorage.init()*/
            class_164.prototype.init = function ($info) {
            };
            /*Swift.(file).UInt.SIMD2Storage.subscript(_:Int)*/
            /*Swift.(file).SIMDStorage.subscript(_:Int)*/
            class_164.prototype.subscript$get = function ($info, index) {
                return this[index];
            }; /*Swift.(file).UInt.SIMD2Storage.subscript(_:Int)*/
            /*Swift.(file).SIMDStorage.subscript(_:Int)*/
            class_164.prototype.subscript$set = function ($info, newValue, index) {
                this[index] = newValue;
            };
            return class_164;
        }()),
        _140.$struct = true,
        _140.$infoAddress = '0x7fb851ca21e0',
        _140);
    UInt.SIMD4Storage = (_141 = /** @class */ (function () {
            function class_165() {
            }
            /*Swift.(file).UInt.SIMD4Storage.init()*/
            /*Swift.(file).SIMDStorage.init()*/
            class_165.prototype.init = function ($info) {
            };
            /*Swift.(file).UInt.SIMD4Storage.subscript(_:Int)*/
            /*Swift.(file).SIMDStorage.subscript(_:Int)*/
            class_165.prototype.subscript$get = function ($info, index) {
                return this[index];
            }; /*Swift.(file).UInt.SIMD4Storage.subscript(_:Int)*/
            /*Swift.(file).SIMDStorage.subscript(_:Int)*/
            class_165.prototype.subscript$set = function ($info, newValue, index) {
                this[index] = newValue;
            };
            return class_165;
        }()),
        _141.$struct = true,
        _141.$infoAddress = '0x7fb851ca2388',
        _141);
    UInt.SIMD8Storage = (_142 = /** @class */ (function () {
            function class_166() {
            }
            /*Swift.(file).UInt.SIMD8Storage.init()*/
            /*Swift.(file).SIMDStorage.init()*/
            class_166.prototype.init = function ($info) {
            };
            /*Swift.(file).UInt.SIMD8Storage.subscript(_:Int)*/
            /*Swift.(file).SIMDStorage.subscript(_:Int)*/
            class_166.prototype.subscript$get = function ($info, index) {
                return this[index];
            }; /*Swift.(file).UInt.SIMD8Storage.subscript(_:Int)*/
            /*Swift.(file).SIMDStorage.subscript(_:Int)*/
            class_166.prototype.subscript$set = function ($info, newValue, index) {
                this[index] = newValue;
            };
            return class_166;
        }()),
        _142.$struct = true,
        _142.$infoAddress = '0x7fb851ca2530',
        _142);
    UInt.SIMD16Storage = (_143 = /** @class */ (function () {
            function class_167() {
            }
            /*Swift.(file).UInt.SIMD16Storage.init()*/
            /*Swift.(file).SIMDStorage.init()*/
            class_167.prototype.init = function ($info) {
            };
            /*Swift.(file).UInt.SIMD16Storage.subscript(_:Int)*/
            /*Swift.(file).SIMDStorage.subscript(_:Int)*/
            class_167.prototype.subscript$get = function ($info, index) {
                return this[index];
            }; /*Swift.(file).UInt.SIMD16Storage.subscript(_:Int)*/
            /*Swift.(file).SIMDStorage.subscript(_:Int)*/
            class_167.prototype.subscript$set = function ($info, newValue, index) {
                this[index] = newValue;
            };
            return class_167;
        }()),
        _143.$struct = true,
        _143.$infoAddress = '0x7fb851ca26d8',
        _143);
    UInt.SIMD32Storage = (_144 = /** @class */ (function () {
            function class_168() {
            }
            /*Swift.(file).UInt.SIMD32Storage.init()*/
            /*Swift.(file).SIMDStorage.init()*/
            class_168.prototype.init = function ($info) {
            };
            /*Swift.(file).UInt.SIMD32Storage.subscript(_:Int)*/
            /*Swift.(file).SIMDStorage.subscript(_:Int)*/
            class_168.prototype.subscript$get = function ($info, index) {
                return this[index];
            }; /*Swift.(file).UInt.SIMD32Storage.subscript(_:Int)*/
            /*Swift.(file).SIMDStorage.subscript(_:Int)*/
            class_168.prototype.subscript$set = function ($info, newValue, index) {
                this[index] = newValue;
            };
            return class_168;
        }()),
        _144.$struct = true,
        _144.$infoAddress = '0x7fb851ca2880',
        _144);
    UInt.SIMD64Storage = (_145 = /** @class */ (function () {
            function class_169() {
            }
            /*Swift.(file).UInt.SIMD64Storage.init()*/
            /*Swift.(file).SIMDStorage.init()*/
            class_169.prototype.init = function ($info) {
            };
            /*Swift.(file).UInt.SIMD64Storage.subscript(_:Int)*/
            /*Swift.(file).SIMDStorage.subscript(_:Int)*/
            class_169.prototype.subscript$get = function ($info, index) {
                return this[index];
            }; /*Swift.(file).UInt.SIMD64Storage.subscript(_:Int)*/
            /*Swift.(file).SIMDStorage.subscript(_:Int)*/
            class_169.prototype.subscript$set = function ($info, newValue, index) {
                this[index] = newValue;
            };
            return class_169;
        }()),
        _145.$struct = true,
        _145.$infoAddress = '0x7fb851ca2a28',
        _145);
    return UInt;
}());
if (typeof RandomAccessCollection$implementation != 'undefined')
    _mixin(UInt.Words, RandomAccessCollection$implementation, false);
if (typeof SIMDStorage$implementation != 'undefined')
    _mixin(UInt.SIMD2Storage, SIMDStorage$implementation, false);
if (typeof SIMDStorage$implementation != 'undefined')
    _mixin(UInt.SIMD4Storage, SIMDStorage$implementation, false);
if (typeof SIMDStorage$implementation != 'undefined')
    _mixin(UInt.SIMD8Storage, SIMDStorage$implementation, false);
if (typeof SIMDStorage$implementation != 'undefined')
    _mixin(UInt.SIMD16Storage, SIMDStorage$implementation, false);
if (typeof SIMDStorage$implementation != 'undefined')
    _mixin(UInt.SIMD32Storage, SIMDStorage$implementation, false);
if (typeof SIMDStorage$implementation != 'undefined')
    _mixin(UInt.SIMD64Storage, SIMDStorage$implementation, false);
if (typeof FixedWidthInteger$implementation != 'undefined')
    _mixin(UInt, FixedWidthInteger$implementation, false);
if (typeof UnsignedInteger$implementation != 'undefined')
    _mixin(UInt, UnsignedInteger$implementation, false);
if (typeof _ExpressibleByBuiltinIntegerLiteral$implementation != 'undefined')
    _mixin(UInt, _ExpressibleByBuiltinIntegerLiteral$implementation, false);
if (typeof Codable$implementation != 'undefined')
    _mixin(UInt, Codable$implementation, false);
if (typeof Hashable$implementation != 'undefined')
    _mixin(UInt, Hashable$implementation, false);
if (typeof _HasCustomAnyHashableRepresentation$implementation != 'undefined')
    _mixin(UInt, _HasCustomAnyHashableRepresentation$implementation, false);
if (typeof CustomReflectable$implementation != 'undefined')
    _mixin(UInt, CustomReflectable$implementation, false);
if (typeof _CustomPlaygroundQuickLookable$implementation != 'undefined')
    _mixin(UInt, _CustomPlaygroundQuickLookable$implementation, false);
if (typeof SIMDScalar$implementation != 'undefined')
    _mixin(UInt, SIMDScalar$implementation, false);
if (typeof CVarArg$implementation != 'undefined')
    _mixin(UInt, CVarArg$implementation, false);
var MIO_Mixin_Int = /** @class */ (function () {
    function MIO_Mixin_Int() {
    }
    /*Swift.(file).Int.init(_builtinIntegerLiteral:IntLiteral)*/
    /*Swift.(file)._ExpressibleByBuiltinIntegerLiteral.init(_builtinIntegerLiteral:IntLiteral)*/
    MIO_Mixin_Int.prototype.init_builtinIntegerLiteralIntLiteral = function ($info, x) {
        return x;
    };
    /*Swift.(file).Int.init(bitPattern:UInt)*/
    /*Swift.(file).Int.init(bitPattern:UInt)*/
    MIO_Mixin_Int.prototype.initBitPatternUInt = function ($info, x) {
        return x;
    };
    /*Swift.(file).Int.init(_:Float)*/
    /*Swift.(file).Int.init(_:Float)*/
    MIO_Mixin_Int.prototype.initFloat = function ($info, source) {
        return source;
    };
    /*Swift.(file).Int.init(exactly:Float)*/
    /*Swift.(file).Int.init(exactly:Float)*/
    MIO_Mixin_Int.prototype.initExactlyFloat = function ($info, source) {
        return source;
    };
    /*Swift.(file).Int.init(_:Double)*/
    /*Swift.(file).Int.init(_:Double)*/
    MIO_Mixin_Int.prototype.initDouble = function ($info, source) {
        return source;
    };
    /*Swift.(file).Int.init(exactly:Double)*/
    /*Swift.(file).Int.init(exactly:Double)*/
    MIO_Mixin_Int.prototype.initExactlyDouble = function ($info, source) {
        return source;
    };
    /*Swift.(file).Int.init(_:Float80)*/
    /*Swift.(file).Int.init(_:Float80)*/
    MIO_Mixin_Int.prototype.initFloat80 = function ($info, source) {
        return source;
    };
    /*Swift.(file).Int.init(exactly:Float80)*/
    /*Swift.(file).Int.init(exactly:Float80)*/
    MIO_Mixin_Int.prototype.initExactlyFloat80 = function ($info, source) {
        return source;
    };
    /*Swift.(file).Int.==infix(_:Int,_:Int)*/
    /*Swift.(file).Equatable.==infix(_:Self,_:Self)*/
    MIO_Mixin_Int.infix_61_61 = function ($info, lhs, rhs) {
        return lhs == rhs;
    };
    /*Swift.(file).Int.<infix(_:Int,_:Int)*/
    /*Swift.(file).Comparable.<infix(_:Self,_:Self)*/
    MIO_Mixin_Int.infix_60 = function ($info, lhs, rhs) {
        return lhs < rhs;
    };
    /*Swift.(file).Int.+=infix(_:Int,_:Int)*/
    /*Swift.(file).BinaryInteger.+=infix(_:Self,_:Self)*/
    /*Swift.(file).AdditiveArithmetic.+=infix(_:Self,_:Self)*/
    MIO_Mixin_Int.infix_43_61 = function ($info, lhs$inout, rhs) {
        lhs$inout.set(lhs$inout.get() + rhs);
    };
    /*Swift.(file).Int.-=infix(_:Int,_:Int)*/
    /*Swift.(file).BinaryInteger.-=infix(_:Self,_:Self)*/
    /*Swift.(file).AdditiveArithmetic.-=infix(_:Self,_:Self)*/
    MIO_Mixin_Int.infix_45_61 = function ($info, lhs$inout, rhs) {
        lhs$inout.set(lhs$inout.get() - rhs);
    };
    /*Swift.(file).Int.*=infix(_:Int,_:Int)*/
    /*Swift.(file).BinaryInteger.*=infix(_:Self,_:Self)*/
    /*Swift.(file).Numeric.*=infix(_:Self,_:Self)*/
    MIO_Mixin_Int.infix_42_61 = function ($info, lhs$inout, rhs) {
        lhs$inout.set(lhs$inout.get() * rhs);
    };
    /*Swift.(file).Int./=infix(_:Int,_:Int)*/
    /*Swift.(file).BinaryInteger./=infix(_:Self,_:Self)*/
    MIO_Mixin_Int.infix_47_61 = function ($info, lhs$inout, rhs) {
        lhs$inout.set((lhs$inout.get() / rhs) | 0);
    };
    /*Swift.(file).Int.dividedReportingOverflow(by:Int)*/
    /*Swift.(file).FixedWidthInteger.dividedReportingOverflow(by:Self)*/
    MIO_Mixin_Int.prototype.dividedReportingOverflowBy = function ($info, other) {
    };
    /*Swift.(file).Int.remainderReportingOverflow(dividingBy:Int)*/
    /*Swift.(file).FixedWidthInteger.remainderReportingOverflow(dividingBy:Self)*/
    MIO_Mixin_Int.prototype.remainderReportingOverflowDividingBy = function ($info, other) {
    };
    /*Swift.(file).Int.addingReportingOverflow(_:Int)*/
    /*Swift.(file).FixedWidthInteger.addingReportingOverflow(_:Self)*/
    MIO_Mixin_Int.prototype.addingReportingOverflow = function ($info, other) {
    };
    /*Swift.(file).Int.subtractingReportingOverflow(_:Int)*/
    /*Swift.(file).FixedWidthInteger.subtractingReportingOverflow(_:Self)*/
    MIO_Mixin_Int.prototype.subtractingReportingOverflow = function ($info, other) {
    };
    /*Swift.(file).Int.multipliedReportingOverflow(by:Int)*/
    /*Swift.(file).FixedWidthInteger.multipliedReportingOverflow(by:Self)*/
    MIO_Mixin_Int.prototype.multipliedReportingOverflowBy = function ($info, other) {
    };
    /*Swift.(file).Int.%=infix(_:Int,_:Int)*/
    /*Swift.(file).BinaryInteger.%=infix(_:Self,_:Self)*/
    MIO_Mixin_Int.infix_37_61 = function ($info, lhs$inout, rhs) {
        lhs$inout.set(lhs$inout.get() % rhs);
    };
    /*Swift.(file).Int.init(_:Int64)*/
    /*Swift.(file).Int.init(_:Int64)*/
    MIO_Mixin_Int.prototype.initInt64 = function ($info, _value) {
        return _value;
    };
    /*Swift.(file).Int.&=infix(_:Int,_:Int)*/
    /*Swift.(file).BinaryInteger.&=infix(_:Self,_:Self)*/
    MIO_Mixin_Int.infix_38_61 = function ($info, lhs$inout, rhs) {
        /*lhs$inout.set(lhs$inout.get() & rhs)*/
    };
    /*Swift.(file).Int.|=infix(_:Int,_:Int)*/
    /*Swift.(file).BinaryInteger.|=infix(_:Self,_:Self)*/
    MIO_Mixin_Int.infix_124_61 = function ($info, lhs$inout, rhs) {
        lhs$inout.set(lhs$inout.get() | rhs);
    };
    /*Swift.(file).Int.^=infix(_:Int,_:Int)*/
    /*Swift.(file).BinaryInteger.^=infix(_:Self,_:Self)*/
    MIO_Mixin_Int.infix_94_61 = function ($info, lhs$inout, rhs) {
        lhs$inout.set(lhs$inout.get() ^ rhs);
    };
    /*Swift.(file).Int.&>>=infix(_:Int,_:Int)*/
    /*Swift.(file).FixedWidthInteger.&>>=infix(_:Self,_:Self)*/
    MIO_Mixin_Int.infix_38_62_62_61 = function ($info, lhs$inout, rhs) {
        /*lhs$inout.set(lhs$inout.get() &>> rhs)*/
    };
    /*Swift.(file).Int.&<<=infix(_:Int,_:Int)*/
    /*Swift.(file).FixedWidthInteger.&<<=infix(_:Self,_:Self)*/
    MIO_Mixin_Int.infix_38_60_60_61 = function ($info, lhs$inout, rhs) {
        /*lhs$inout.set(lhs$inout.get() &<< rhs)*/
    };
    /*Swift.(file).Int.bitWidth*/ /*
    static bitWidth$get() {
    return this.bitWidth
    }
    static get bitWidth() { return this.bitWidth$get() }*/ ;
    /*Swift.(file).Int.leadingZeroBitCount*/ /*
    leadingZeroBitCount$get() {
    return this.leadingZeroBitCount
    }
    get leadingZeroBitCount() { return this.leadingZeroBitCount$get() }*/ ;
    /*Swift.(file).Int.trailingZeroBitCount*/ /*
    trailingZeroBitCount$get() {
    return this.trailingZeroBitCount
    }
    get trailingZeroBitCount() { return this.trailingZeroBitCount$get() }*/ ;
    /*Swift.(file).Int.nonzeroBitCount*/ /*
    nonzeroBitCount$get() {
    return this.nonzeroBitCount
    }
    get nonzeroBitCount() { return this.nonzeroBitCount$get() }*/ ;
    /*Swift.(file).Int.init(_truncatingBits:UInt)*/
    /*Swift.(file).FixedWidthInteger.init(_truncatingBits:UInt)*/
    MIO_Mixin_Int.prototype.init_truncatingBitsUInt = function ($info, bits) {
        return bits;
    };
    /*Swift.(file).Int.magnitude*/ /*
    magnitude$get() {
    return this.magnitude
    }
    get magnitude() { return this.magnitude$get() }*/ ;
    /*Swift.(file).Int.multipliedFullWidth(by:Int)*/
    /*Swift.(file).FixedWidthInteger.multipliedFullWidth(by:Self)*/
    MIO_Mixin_Int.prototype.multipliedFullWidthBy = function ($info, other) {
    };
    /*Swift.(file).Int.dividingFullWidth(_:(high: Int, low: Int.Magnitude))*/
    /*Swift.(file).FixedWidthInteger.dividingFullWidth(_:(high: Self, low: Self.Magnitude))*/
    MIO_Mixin_Int.prototype.dividingFullWidth = function ($info, dividend) {
    };
    /*Swift.(file).Int.byteSwapped*/ /*
    byteSwapped$get() {
    return this.byteSwapped
    }
    get byteSwapped() { return this.byteSwapped$get() }*/ ;
    /*Swift.(file).Int.init(_:Word)*/
    /*Swift.(file).Int.init(_:Word)*/
    MIO_Mixin_Int.prototype.initWord = function ($info, _v) {
        return _v;
    };
    /*Swift.(file).Int.toUIntMax()*/
    /*Swift.(file).Int.toUIntMax()*/
    MIO_Mixin_Int.prototype.toUIntMax = function ($info) {
    };
    /*Swift.(file).Int.signum()*/
    /*Swift.(file).BinaryInteger.signum()*/
    MIO_Mixin_Int.prototype.signum = function ($info) {
    };
    /*Swift.(file).Int.init(from:Decoder)*/
    /*Swift.(file).Decodable.init(from:Decoder)*/
    MIO_Mixin_Int.prototype.initFromDecoder = function ($info, decoder) {
        return decoder;
    };
    /*Swift.(file).Int.encode(to:Encoder)*/
    /*Swift.(file).Encodable.encode(to:Encoder)*/
    MIO_Mixin_Int.prototype.encodeTo = function ($info, encoder) {
    };
    /*Swift.(file).Int.init(bitPattern:OpaquePointer?)*/
    /*Swift.(file).Int.init(bitPattern:OpaquePointer?)*/
    MIO_Mixin_Int.prototype.initBitPatternOptional = function ($info, pointer) {
        return pointer;
    };
    /*Swift.(file).Int.hash(into:Hasher)*/
    /*Swift.(file).Hashable.hash(into:Hasher)*/
    MIO_Mixin_Int.prototype.hashInto = function ($info, hasher$inout) {
    };
    /*Swift.(file).Int.hashValue*/ /*
    hashValue$get() {
    return this.hashValue
    }
    get hashValue() { return this.hashValue$get() }*/ ;
    /*Swift.(file).Int.init(truncatingBitPattern:UInt64)*/
    /*Swift.(file).Int.init(truncatingBitPattern:UInt64)*/
    MIO_Mixin_Int.prototype.initTruncatingBitPatternUInt64 = function ($info, source) {
        return source;
    };
    /*Swift.(file).Int.init(truncatingBitPattern:Int64)*/
    /*Swift.(file).Int.init(truncatingBitPattern:Int64)*/
    MIO_Mixin_Int.prototype.initTruncatingBitPatternInt64 = function ($info, source) {
        return source;
    };
    /*Swift.(file).Int.&infix(_:Int,_:Int)*/
    /*Swift.(file).BinaryInteger.&infix(_:Self,_:Self)*/
    MIO_Mixin_Int.infix_38 = function ($info, lhs, rhs) {
        /*return lhs & rhs*/
    };
    /*Swift.(file).Int.|infix(_:Int,_:Int)*/
    /*Swift.(file).BinaryInteger.|infix(_:Self,_:Self)*/
    MIO_Mixin_Int.infix_124 = function ($info, lhs, rhs) {
        return lhs | rhs;
    };
    /*Swift.(file).Int.^infix(_:Int,_:Int)*/
    /*Swift.(file).BinaryInteger.^infix(_:Self,_:Self)*/
    MIO_Mixin_Int.infix_94 = function ($info, lhs, rhs) {
        return lhs ^ rhs;
    };
    /*Swift.(file).Int.&>>infix(_:Int,_:Int)*/
    /*Swift.(file).FixedWidthInteger.&>>infix(_:Self,_:Self)*/
    MIO_Mixin_Int.infix_38_62_62 = function ($info, lhs, rhs) {
        /*return lhs &>> rhs*/
    };
    /*Swift.(file).Int.&<<infix(_:Int,_:Int)*/
    /*Swift.(file).FixedWidthInteger.&<<infix(_:Self,_:Self)*/
    MIO_Mixin_Int.infix_38_60_60 = function ($info, lhs, rhs) {
        /*return lhs &<< rhs*/
    };
    /*Swift.(file).Int./infix(_:Int,_:Int)*/
    /*Swift.(file).BinaryInteger./infix(_:Self,_:Self)*/
    MIO_Mixin_Int.infix_47 = function ($info, lhs, rhs) {
        return (lhs / rhs) | 0;
    };
    /*Swift.(file).Int.%infix(_:Int,_:Int)*/
    /*Swift.(file).BinaryInteger.%infix(_:Self,_:Self)*/
    MIO_Mixin_Int.infix_37 = function ($info, lhs, rhs) {
        return lhs % rhs;
    };
    /*Swift.(file).Int.+infix(_:Int,_:Int)*/
    /*Swift.(file).BinaryInteger.+infix(_:Self,_:Self)*/
    /*Swift.(file).AdditiveArithmetic.+infix(_:Self,_:Self)*/
    MIO_Mixin_Int.infix_43 = function ($info, lhs, rhs) {
        return lhs + rhs;
    };
    /*Swift.(file).Int.-infix(_:Int,_:Int)*/
    /*Swift.(file).BinaryInteger.-infix(_:Self,_:Self)*/
    /*Swift.(file).AdditiveArithmetic.-infix(_:Self,_:Self)*/
    MIO_Mixin_Int.infix_45 = function ($info, lhs, rhs) {
        return lhs - rhs;
    };
    /*Swift.(file).Int.*infix(_:Int,_:Int)*/
    /*Swift.(file).BinaryInteger.*infix(_:Self,_:Self)*/
    /*Swift.(file).Numeric.*infix(_:Self,_:Self)*/
    MIO_Mixin_Int.infix_42 = function ($info, lhs, rhs) {
        return lhs * rhs;
    };
    /*Swift.(file).Int.>>infix(_:Int,_:Int)*/
    /*Swift.(file).Int.>>infix(_:Int,_:Int)*/
    MIO_Mixin_Int.infix_62_62 = function ($info, lhs, rhs) {
        return lhs >> rhs;
    };
    /*Swift.(file).Int.>>=infix(_:Int,_:Int)*/
    /*Swift.(file).Int.>>=infix(_:Int,_:Int)*/
    MIO_Mixin_Int.infix_62_62_61 = function ($info, lhs$inout, rhs) {
        lhs$inout.set(lhs$inout.get() >> rhs);
    };
    /*Swift.(file).Int.<<infix(_:Int,_:Int)*/
    /*Swift.(file).Int.<<infix(_:Int,_:Int)*/
    MIO_Mixin_Int.infix_60_60 = function ($info, lhs, rhs) {
        return lhs << rhs;
    };
    /*Swift.(file).Int.<<=infix(_:Int,_:Int)*/
    /*Swift.(file).Int.<<=infix(_:Int,_:Int)*/
    MIO_Mixin_Int.infix_60_60_61 = function ($info, lhs$inout, rhs) {
        lhs$inout.set(lhs$inout.get() << rhs);
    };
    /*Swift.(file).Int.<=infix(_:Int,_:Int)*/
    /*Swift.(file).Comparable.<=infix(_:Self,_:Self)*/
    MIO_Mixin_Int.infix_60_61 = function ($info, lhs, rhs) {
        return lhs <= rhs;
    };
    /*Swift.(file).Int.>=infix(_:Int,_:Int)*/
    /*Swift.(file).Comparable.>=infix(_:Self,_:Self)*/
    MIO_Mixin_Int.infix_62_61 = function ($info, lhs, rhs) {
        return lhs >= rhs;
    };
    /*Swift.(file).Int.>infix(_:Int,_:Int)*/
    /*Swift.(file).Comparable.>infix(_:Self,_:Self)*/
    MIO_Mixin_Int.infix_62 = function ($info, lhs, rhs) {
        return lhs > rhs;
    };
    /*Swift.(file).Int.distance(to:Int)*/
    /*Swift.(file).Strideable.distance(to:Self)*/
    MIO_Mixin_Int.prototype.distanceTo = function ($info, other) {
    };
    /*Swift.(file).Int.advanced(by:Int)*/
    /*Swift.(file).Strideable.advanced(by:Self.Stride)*/
    MIO_Mixin_Int.prototype.advancedBy = function ($info, n) {
    };
    /*Swift.(file).Int.customMirror*/ /*
    customMirror$get() {
    return this.customMirror
    }
    get customMirror() { return this.customMirror$get() }*/ ;
    /*Swift.(file).Int.customPlaygroundQuickLook*/ /*
    customPlaygroundQuickLook$get() {
    return this.customPlaygroundQuickLook
    }
    get customPlaygroundQuickLook() { return this.customPlaygroundQuickLook$get() }*/ ;
    /*Swift.(file).Int.init(bitPattern:ObjectIdentifier)*/
    /*Swift.(file).Int.init(bitPattern:ObjectIdentifier)*/
    MIO_Mixin_Int.prototype.initBitPatternObjectIdentifier = function ($info, objectID) {
        return objectID;
    };
    /*Swift.(file).Int.init(bitPattern:P?)*/
    /*Swift.(file).Int.init(bitPattern:P?)*/
    MIO_Mixin_Int.prototype.initBitPatternOptional = function ($info, pointer) {
        return pointer;
    };
    var _146, _147, _148, _149, _150, _151, _152;
    MIO_Mixin_Int.$struct = true;
    MIO_Mixin_Int.$mixin = true;
    MIO_Mixin_Int.$infoAddress = '0x7fb8518123a8';
    MIO_Mixin_Int.Words = (_146 = /** @class */ (function () {
            function class_170() {
            }
            /*Swift.(file).Int.Words.init(_:Int)*/
            /*Swift.(file).Int.Words.init(_:Int)*/
            class_170.prototype.initInt = function ($info, value) {
                return value;
            };
            /*Swift.(file).Int.Words.count*/ /*
            count$get() {
            return this.count
            }
            get count() { return this.count$get() }*/ ;
            /*Swift.(file).Int.Words.startIndex*/ /*
            startIndex$get() {
            return this.startIndex
            }
            get startIndex() { return this.startIndex$get() }*/ ;
            /*Swift.(file).Int.Words.endIndex*/ /*
            endIndex$get() {
            return this.endIndex
            }
            get endIndex() { return this.endIndex$get() }*/ ;
            /*Swift.(file).Int.Words.indices*/ /*
            indices$get() {
            return this.indices
            }
            get indices() { return this.indices$get() }*/ ;
            /*Swift.(file).Int.Words.index(after:Int)*/
            /*Swift.(file).RandomAccessCollection.index(after:Self.Index)*/
            /*Swift.(file).BidirectionalCollection.index(after:Self.Index)*/
            /*Swift.(file).Collection.index(after:Self.Index)*/
            /*Swift.(file).RandomAccessCollection.index(after:Self.Index)*/
            class_170.prototype.indexAfter = function ($info, i) {
            };
            /*Swift.(file).Int.Words.index(before:Int)*/
            /*Swift.(file).RandomAccessCollection.index(before:Self.Index)*/
            /*Swift.(file).BidirectionalCollection.index(before:Self.Index)*/
            /*Swift.(file).RandomAccessCollection.index(before:Self.Index)*/
            class_170.prototype.indexBefore = function ($info, i) {
            };
            /*Swift.(file).Int.Words.subscript(_:Int)*/
            /*Swift.(file).RandomAccessCollection.subscript(_:Self.Index)*/
            /*Swift.(file).BidirectionalCollection.subscript(_:Self.Index)*/
            /*Swift.(file).Collection.subscript(_:Self.Index)*/
            /*Swift.(file).RandomAccessCollection.subscript(_:Self.Index)*/
            class_170.prototype.subscript$get = function ($info, position) {
                return this[position];
            };
            return class_170;
        }()),
        _146.$struct = true,
        _146.$infoAddress = '0x7fb8519a8948',
        _146);
    MIO_Mixin_Int.SIMD2Storage = (_147 = /** @class */ (function () {
            function class_171() {
            }
            /*Swift.(file).Int.SIMD2Storage.init()*/
            /*Swift.(file).SIMDStorage.init()*/
            class_171.prototype.init = function ($info) {
            };
            /*Swift.(file).Int.SIMD2Storage.subscript(_:Int)*/
            /*Swift.(file).SIMDStorage.subscript(_:Int)*/
            class_171.prototype.subscript$get = function ($info, index) {
                return this[index];
            }; /*Swift.(file).Int.SIMD2Storage.subscript(_:Int)*/
            /*Swift.(file).SIMDStorage.subscript(_:Int)*/
            class_171.prototype.subscript$set = function ($info, newValue, index) {
                this[index] = newValue;
            };
            return class_171;
        }()),
        _147.$struct = true,
        _147.$infoAddress = '0x7fb851cb8070',
        _147);
    MIO_Mixin_Int.SIMD4Storage = (_148 = /** @class */ (function () {
            function class_172() {
            }
            /*Swift.(file).Int.SIMD4Storage.init()*/
            /*Swift.(file).SIMDStorage.init()*/
            class_172.prototype.init = function ($info) {
            };
            /*Swift.(file).Int.SIMD4Storage.subscript(_:Int)*/
            /*Swift.(file).SIMDStorage.subscript(_:Int)*/
            class_172.prototype.subscript$get = function ($info, index) {
                return this[index];
            }; /*Swift.(file).Int.SIMD4Storage.subscript(_:Int)*/
            /*Swift.(file).SIMDStorage.subscript(_:Int)*/
            class_172.prototype.subscript$set = function ($info, newValue, index) {
                this[index] = newValue;
            };
            return class_172;
        }()),
        _148.$struct = true,
        _148.$infoAddress = '0x7fb851cb8218',
        _148);
    MIO_Mixin_Int.SIMD8Storage = (_149 = /** @class */ (function () {
            function class_173() {
            }
            /*Swift.(file).Int.SIMD8Storage.init()*/
            /*Swift.(file).SIMDStorage.init()*/
            class_173.prototype.init = function ($info) {
            };
            /*Swift.(file).Int.SIMD8Storage.subscript(_:Int)*/
            /*Swift.(file).SIMDStorage.subscript(_:Int)*/
            class_173.prototype.subscript$get = function ($info, index) {
                return this[index];
            }; /*Swift.(file).Int.SIMD8Storage.subscript(_:Int)*/
            /*Swift.(file).SIMDStorage.subscript(_:Int)*/
            class_173.prototype.subscript$set = function ($info, newValue, index) {
                this[index] = newValue;
            };
            return class_173;
        }()),
        _149.$struct = true,
        _149.$infoAddress = '0x7fb851cb83c0',
        _149);
    MIO_Mixin_Int.SIMD16Storage = (_150 = /** @class */ (function () {
            function class_174() {
            }
            /*Swift.(file).Int.SIMD16Storage.init()*/
            /*Swift.(file).SIMDStorage.init()*/
            class_174.prototype.init = function ($info) {
            };
            /*Swift.(file).Int.SIMD16Storage.subscript(_:Int)*/
            /*Swift.(file).SIMDStorage.subscript(_:Int)*/
            class_174.prototype.subscript$get = function ($info, index) {
                return this[index];
            }; /*Swift.(file).Int.SIMD16Storage.subscript(_:Int)*/
            /*Swift.(file).SIMDStorage.subscript(_:Int)*/
            class_174.prototype.subscript$set = function ($info, newValue, index) {
                this[index] = newValue;
            };
            return class_174;
        }()),
        _150.$struct = true,
        _150.$infoAddress = '0x7fb851cb8568',
        _150);
    MIO_Mixin_Int.SIMD32Storage = (_151 = /** @class */ (function () {
            function class_175() {
            }
            /*Swift.(file).Int.SIMD32Storage.init()*/
            /*Swift.(file).SIMDStorage.init()*/
            class_175.prototype.init = function ($info) {
            };
            /*Swift.(file).Int.SIMD32Storage.subscript(_:Int)*/
            /*Swift.(file).SIMDStorage.subscript(_:Int)*/
            class_175.prototype.subscript$get = function ($info, index) {
                return this[index];
            }; /*Swift.(file).Int.SIMD32Storage.subscript(_:Int)*/
            /*Swift.(file).SIMDStorage.subscript(_:Int)*/
            class_175.prototype.subscript$set = function ($info, newValue, index) {
                this[index] = newValue;
            };
            return class_175;
        }()),
        _151.$struct = true,
        _151.$infoAddress = '0x7fb851cb8710',
        _151);
    MIO_Mixin_Int.SIMD64Storage = (_152 = /** @class */ (function () {
            function class_176() {
            }
            /*Swift.(file).Int.SIMD64Storage.init()*/
            /*Swift.(file).SIMDStorage.init()*/
            class_176.prototype.init = function ($info) {
            };
            /*Swift.(file).Int.SIMD64Storage.subscript(_:Int)*/
            /*Swift.(file).SIMDStorage.subscript(_:Int)*/
            class_176.prototype.subscript$get = function ($info, index) {
                return this[index];
            }; /*Swift.(file).Int.SIMD64Storage.subscript(_:Int)*/
            /*Swift.(file).SIMDStorage.subscript(_:Int)*/
            class_176.prototype.subscript$set = function ($info, newValue, index) {
                this[index] = newValue;
            };
            return class_176;
        }()),
        _152.$struct = true,
        _152.$infoAddress = '0x7fb851cb88b8',
        _152);
    return MIO_Mixin_Int;
}());
if (typeof RandomAccessCollection$implementation != 'undefined')
    _mixin(MIO_Mixin_Int.Words, RandomAccessCollection$implementation, false);
if (typeof SIMDStorage$implementation != 'undefined')
    _mixin(MIO_Mixin_Int.SIMD2Storage, SIMDStorage$implementation, false);
if (typeof SIMDStorage$implementation != 'undefined')
    _mixin(MIO_Mixin_Int.SIMD4Storage, SIMDStorage$implementation, false);
if (typeof SIMDStorage$implementation != 'undefined')
    _mixin(MIO_Mixin_Int.SIMD8Storage, SIMDStorage$implementation, false);
if (typeof SIMDStorage$implementation != 'undefined')
    _mixin(MIO_Mixin_Int.SIMD16Storage, SIMDStorage$implementation, false);
if (typeof SIMDStorage$implementation != 'undefined')
    _mixin(MIO_Mixin_Int.SIMD32Storage, SIMDStorage$implementation, false);
if (typeof SIMDStorage$implementation != 'undefined')
    _mixin(MIO_Mixin_Int.SIMD64Storage, SIMDStorage$implementation, false);
if (typeof FixedWidthInteger$implementation != 'undefined')
    _mixin(MIO_Mixin_Int, FixedWidthInteger$implementation, false);
if (typeof SignedInteger$implementation != 'undefined')
    _mixin(MIO_Mixin_Int, SignedInteger$implementation, false);
if (typeof _ExpressibleByBuiltinIntegerLiteral$implementation != 'undefined')
    _mixin(MIO_Mixin_Int, _ExpressibleByBuiltinIntegerLiteral$implementation, false);
if (typeof Codable$implementation != 'undefined')
    _mixin(MIO_Mixin_Int, Codable$implementation, false);
if (typeof Hashable$implementation != 'undefined')
    _mixin(MIO_Mixin_Int, Hashable$implementation, false);
if (typeof _HasCustomAnyHashableRepresentation$implementation != 'undefined')
    _mixin(MIO_Mixin_Int, _HasCustomAnyHashableRepresentation$implementation, false);
if (typeof CustomReflectable$implementation != 'undefined')
    _mixin(MIO_Mixin_Int, CustomReflectable$implementation, false);
if (typeof _CustomPlaygroundQuickLookable$implementation != 'undefined')
    _mixin(MIO_Mixin_Int, _CustomPlaygroundQuickLookable$implementation, false);
if (typeof MirrorPath$implementation != 'undefined')
    _mixin(MIO_Mixin_Int, MirrorPath$implementation, false);
if (typeof SIMDScalar$implementation != 'undefined')
    _mixin(MIO_Mixin_Int, SIMDScalar$implementation, false);
if (typeof CVarArg$implementation != 'undefined')
    _mixin(MIO_Mixin_Int, CVarArg$implementation, false);
_mixin(Number, MIO_Mixin_Int, true);
var Int = /** @class */ (function () {
    function Int() {
    }
    return Int;
}());
_mixin(Int, MIO_Mixin_Int, true);
var KeyValuePairs = /** @class */ (function () {
    function KeyValuePairs() {
    }
    /*Swift.(file).KeyValuePairs.init(dictionaryLiteral:[(Key, Value)])*/
    /*Swift.(file).ExpressibleByDictionaryLiteral.init(dictionaryLiteral:[(Self.Key, Self.Value)])*/
    KeyValuePairs.prototype.initDictionaryLiteralArray = function ($info, _elements) {
        return _elements;
    };
    /*Swift.(file).KeyValuePairs.startIndex*/ /*
    startIndex$get() {
    return this.startIndex
    }
    get startIndex() { return this.startIndex$get() }*/ ;
    /*Swift.(file).KeyValuePairs.endIndex*/ /*
    endIndex$get() {
    return this.endIndex
    }
    get endIndex() { return this.endIndex$get() }*/ ;
    /*Swift.(file).KeyValuePairs.subscript(_:KeyValuePairs<Key, Value>.Index)*/
    /*Swift.(file).RandomAccessCollection.subscript(_:Self.Index)*/
    /*Swift.(file).BidirectionalCollection.subscript(_:Self.Index)*/
    /*Swift.(file).Collection.subscript(_:Self.Index)*/
    KeyValuePairs.prototype.subscript$get = function ($info, position) {
        return this[position];
    };
    /*Swift.(file).KeyValuePairs.description*/ /*
    description$get() {
    return this.description
    }
    get description() { return this.description$get() }*/ ;
    /*Swift.(file).KeyValuePairs.debugDescription*/ /*
    debugDescription$get() {
    return this.debugDescription
    }
    get debugDescription() { return this.debugDescription$get() }*/ ;
    KeyValuePairs.$struct = true;
    KeyValuePairs.$infoAddress = '0x7fb8552a15e0';
    return KeyValuePairs;
}());
if (typeof ExpressibleByDictionaryLiteral$implementation != 'undefined')
    _mixin(KeyValuePairs, ExpressibleByDictionaryLiteral$implementation, false);
if (typeof RandomAccessCollection$implementation != 'undefined')
    _mixin(KeyValuePairs, RandomAccessCollection$implementation, false);
if (typeof CustomStringConvertible$implementation != 'undefined')
    _mixin(KeyValuePairs, CustomStringConvertible$implementation, false);
if (typeof CustomDebugStringConvertible$implementation != 'undefined')
    _mixin(KeyValuePairs, CustomDebugStringConvertible$implementation, false);
var LazySequence = /** @class */ (function () {
    function LazySequence() {
    }
    /*Swift.(file).LazySequence.init(_base:Base)*/
    /*Swift.(file).LazySequence.init(_base:Base)*/
    LazySequence.prototype.init_base = function ($info, _base) {
        return _base;
    };
    /*Swift.(file).LazySequence.startIndex*/ /*
    startIndex$get() {
    return this.startIndex
    }
    get startIndex() { return this.startIndex$get() }*/ ;
    /*Swift.(file).LazySequence.endIndex*/ /*
    endIndex$get() {
    return this.endIndex
    }
    get endIndex() { return this.endIndex$get() }*/ ;
    /*Swift.(file).LazySequence.indices*/ /*
    indices$get() {
    return this.indices
    }
    get indices() { return this.indices$get() }*/ ;
    /*Swift.(file).LazySequence.index(after:LazySequence<Base>.Index)*/
    /*Swift.(file).Collection.index(after:Self.Index)*/
    /*Swift.(file).BidirectionalCollection.index(after:Self.Index)*/
    /*Swift.(file).RandomAccessCollection.index(after:Self.Index)*/
    LazySequence.prototype.indexAfter = function ($info, i) {
    };
    /*Swift.(file).LazySequence.subscript(_:LazySequence<Base>.Index)*/
    /*Swift.(file).Collection.subscript(_:Self.Index)*/
    /*Swift.(file).BidirectionalCollection.subscript(_:Self.Index)*/
    /*Swift.(file).RandomAccessCollection.subscript(_:Self.Index)*/
    LazySequence.prototype.subscript$get = function ($info, position) {
        return this[position];
    };
    /*Swift.(file).LazySequence.isEmpty*/ /*
    isEmpty$get() {
    return this.isEmpty
    }
    get isEmpty() { return this.isEmpty$get() }*/ ;
    /*Swift.(file).LazySequence.count*/ /*
    count$get() {
    return this.count
    }
    get count() { return this.count$get() }*/ ;
    /*Swift.(file).LazySequence.index(_:LazySequence<Base>.Index,offsetBy:Int)*/
    /*Swift.(file).Collection.index(_:Self.Index,offsetBy:Int)*/
    /*Swift.(file).BidirectionalCollection.index(_:Self.Index,offsetBy:Int)*/
    /*Swift.(file).RandomAccessCollection.index(_:Self.Index,offsetBy:Int)*/
    LazySequence.prototype.indexOffsetBy = function ($info, i, n) {
    };
    /*Swift.(file).LazySequence.index(_:LazySequence<Base>.Index,offsetBy:Int,limitedBy:LazySequence<Base>.Index)*/
    /*Swift.(file).Collection.index(_:Self.Index,offsetBy:Int,limitedBy:Self.Index)*/
    /*Swift.(file).BidirectionalCollection.index(_:Self.Index,offsetBy:Int,limitedBy:Self.Index)*/
    /*Swift.(file).RandomAccessCollection.index(_:Self.Index,offsetBy:Int,limitedBy:Self.Index)*/
    LazySequence.prototype.indexOffsetByLimitedBy = function ($info, i, n, limit) {
    };
    /*Swift.(file).LazySequence.distance(from:LazySequence<Base>.Index,to:LazySequence<Base>.Index)*/
    /*Swift.(file).Collection.distance(from:Self.Index,to:Self.Index)*/
    /*Swift.(file).BidirectionalCollection.distance(from:Self.Index,to:Self.Index)*/
    /*Swift.(file).RandomAccessCollection.distance(from:Self.Index,to:Self.Index)*/
    LazySequence.prototype.distanceFromTo = function ($info, start, end) {
    };
    /*Swift.(file).LazySequence.index(before:LazySequence<Base>.Index)*/
    /*Swift.(file).BidirectionalCollection.index(before:Self.Index)*/
    /*Swift.(file).RandomAccessCollection.index(before:Self.Index)*/
    LazySequence.prototype.indexBefore = function ($info, i) {
    };
    /*Swift.(file).LazySequence.makeIterator()*/
    /*Swift.(file).Collection.makeIterator()*/
    /*Swift.(file).Sequence.makeIterator()*/
    LazySequence.prototype.makeIterator = function ($info) {
        var _this = this;
        return new SwiftIterator(function (current) { return _this[current]; });
    };
    /*Swift.(file).LazySequence.underestimatedCount*/ /*
    underestimatedCount$get() {
    return this.underestimatedCount
    }
    get underestimatedCount() { return this.underestimatedCount$get() }*/ ;
    LazySequence.$struct = true;
    LazySequence.$infoAddress = '0x7fb8552a2348';
    return LazySequence;
}());
if (typeof Collection$implementation != 'undefined')
    _mixin(LazySequence, Collection$implementation, false);
if (typeof LazyCollectionProtocol$implementation != 'undefined')
    _mixin(LazySequence, LazyCollectionProtocol$implementation, false);
if (typeof BidirectionalCollection$implementation != 'undefined')
    _mixin(LazySequence, BidirectionalCollection$implementation, false);
if (typeof RandomAccessCollection$implementation != 'undefined')
    _mixin(LazySequence, RandomAccessCollection$implementation, false);
if (typeof Sequence$implementation != 'undefined')
    _mixin(LazySequence, Sequence$implementation, false);
if (typeof LazySequenceProtocol$implementation != 'undefined')
    _mixin(LazySequence, LazySequenceProtocol$implementation, false);
var LazyMapSequence = /** @class */ (function () {
    function LazyMapSequence() {
    }
    /*Swift.(file).LazyMapSequence.init(_base:Base,transform:(Base.Element) -> Element)*/
    /*Swift.(file).LazyMapSequence.init(_base:Base,transform:(Base.Element) -> Element)*/
    LazyMapSequence.prototype.init_baseTransformfunction_type = function ($info, _base, transform) {
    };
    /*Swift.(file).LazyMapSequence.makeIterator()*/
    /*Swift.(file).Sequence.makeIterator()*/
    /*Swift.(file).Collection.makeIterator()*/
    LazyMapSequence.prototype.makeIterator = function ($info) {
        var _this = this;
        return new SwiftIterator(function (current) { return _this.contains(null, current + _this.lowerBound) ? current + _this.lowerBound : null; });
    };
    /*Swift.(file).LazyMapSequence.underestimatedCount*/ /*
    underestimatedCount$get() {
    return this.underestimatedCount
    }
    get underestimatedCount() { return this.underestimatedCount$get() }*/ ;
    /*Swift.(file).LazyMapSequence.startIndex*/ /*
    startIndex$get() {
    return this.startIndex
    }
    get startIndex() { return this.startIndex$get() }*/ ;
    /*Swift.(file).LazyMapSequence.endIndex*/ /*
    endIndex$get() {
    return this.endIndex
    }
    get endIndex() { return this.endIndex$get() }*/ ;
    /*Swift.(file).LazyMapSequence.index(after:LazyMapSequence<Base, Element>.Index)*/
    /*Swift.(file).Collection.index(after:Self.Index)*/
    /*Swift.(file).BidirectionalCollection.index(after:Self.Index)*/
    /*Swift.(file).RandomAccessCollection.index(after:Self.Index)*/
    LazyMapSequence.prototype.indexAfter = function ($info, i) {
    };
    /*Swift.(file).LazyMapSequence.formIndex(after:LazyMapSequence<Base, Element>.Index)*/
    /*Swift.(file).Collection.formIndex(after:Self.Index)*/
    /*Swift.(file).BidirectionalCollection.formIndex(after:Self.Index)*/
    /*Swift.(file).RandomAccessCollection.formIndex(after:Self.Index)*/
    LazyMapSequence.prototype.formIndexAfter = function ($info, i$inout) {
    };
    /*Swift.(file).LazyMapSequence.subscript(_:Base.Index)*/
    /*Swift.(file).Collection.subscript(_:Self.Index)*/
    /*Swift.(file).BidirectionalCollection.subscript(_:Self.Index)*/
    /*Swift.(file).RandomAccessCollection.subscript(_:Self.Index)*/
    LazyMapSequence.prototype.subscript$get = function ($info, position) {
        return this[position];
    };
    /*Swift.(file).LazyMapSequence.subscript(_:Range<Base.Index>)*/
    /*Swift.(file).Collection.subscript(_:Range<Self.Index>)*/
    /*Swift.(file).BidirectionalCollection.subscript(_:Range<Self.Index>)*/
    /*Swift.(file).RandomAccessCollection.subscript(_:Range<Self.Index>)*/
    LazyMapSequence.prototype.subcriptRange$get = function ($info, bounds) {
        return this[bounds];
    };
    /*Swift.(file).LazyMapSequence.indices*/ /*
    indices$get() {
    return this.indices
    }
    get indices() { return this.indices$get() }*/ ;
    /*Swift.(file).LazyMapSequence.isEmpty*/ /*
    isEmpty$get() {
    return this.isEmpty
    }
    get isEmpty() { return this.isEmpty$get() }*/ ;
    /*Swift.(file).LazyMapSequence.count*/ /*
    count$get() {
    return this.count
    }
    get count() { return this.count$get() }*/ ;
    /*Swift.(file).LazyMapSequence.index(_:LazyMapSequence<Base, Element>.Index,offsetBy:Int)*/
    /*Swift.(file).Collection.index(_:Self.Index,offsetBy:Int)*/
    /*Swift.(file).BidirectionalCollection.index(_:Self.Index,offsetBy:Int)*/
    /*Swift.(file).RandomAccessCollection.index(_:Self.Index,offsetBy:Int)*/
    LazyMapSequence.prototype.indexOffsetBy = function ($info, i, n) {
    };
    /*Swift.(file).LazyMapSequence.index(_:LazyMapSequence<Base, Element>.Index,offsetBy:Int,limitedBy:LazyMapSequence<Base, Element>.Index)*/
    /*Swift.(file).Collection.index(_:Self.Index,offsetBy:Int,limitedBy:Self.Index)*/
    /*Swift.(file).BidirectionalCollection.index(_:Self.Index,offsetBy:Int,limitedBy:Self.Index)*/
    /*Swift.(file).RandomAccessCollection.index(_:Self.Index,offsetBy:Int,limitedBy:Self.Index)*/
    LazyMapSequence.prototype.indexOffsetByLimitedBy = function ($info, i, n, limit) {
    };
    /*Swift.(file).LazyMapSequence.distance(from:LazyMapSequence<Base, Element>.Index,to:LazyMapSequence<Base, Element>.Index)*/
    /*Swift.(file).Collection.distance(from:Self.Index,to:Self.Index)*/
    /*Swift.(file).BidirectionalCollection.distance(from:Self.Index,to:Self.Index)*/
    /*Swift.(file).RandomAccessCollection.distance(from:Self.Index,to:Self.Index)*/
    LazyMapSequence.prototype.distanceFromTo = function ($info, start, end) {
    };
    /*Swift.(file).LazyMapSequence.index(before:LazyMapSequence<Base, Element>.Index)*/
    /*Swift.(file).BidirectionalCollection.index(before:Self.Index)*/
    /*Swift.(file).RandomAccessCollection.index(before:Self.Index)*/
    LazyMapSequence.prototype.indexBefore = function ($info, i) {
    };
    /*Swift.(file).LazyMapSequence.formIndex(before:LazyMapSequence<Base, Element>.Index)*/
    /*Swift.(file).BidirectionalCollection.formIndex(before:Self.Index)*/
    /*Swift.(file).RandomAccessCollection.formIndex(before:Self.Index)*/
    LazyMapSequence.prototype.formIndexBefore = function ($info, i$inout) {
    };
    /*Swift.(file).LazyMapSequence.map(_:(Element) -> ElementOfResult)*/
    /*Swift.(file).LazyMapSequence.map(_:(Element) -> ElementOfResult)*/
    LazyMapSequence.prototype.mapSwift = function ($info, transform) {
    };
    /*Swift.(file).LazyMapSequence.map(_:(Element) -> ElementOfResult)*/
    /*Swift.(file).LazyMapSequence.map(_:(Element) -> ElementOfResult)*/
    LazyMapSequence.prototype.mapSwift = function ($info, transform) {
    };
    var _153;
    LazyMapSequence.$struct = true;
    LazyMapSequence.$infoAddress = '0x7fb852b5b1e0';
    LazyMapSequence.Iterator = (_153 = /** @class */ (function () {
            function class_177() {
            }
            /*Swift.(file).LazyMapSequence.Iterator.init(_base:Base.Iterator,_transform:(Base.Element) -> LazyMapSequence<Base, Element>.Iterator.Element)*/
            /*Swift.(file).LazyMapSequence.Iterator.init(_base:Base.Iterator,_transform:(Base.Element) -> LazyMapSequence<Base, Element>.Iterator.Element)*/
            class_177.prototype.init_base_transformfunction_type = function ($info, _base, _transform) {
            };
            /*Swift.(file).Iterator.next()*/
            /*Swift.(file).IteratorProtocol.next()*/
            class_177.prototype.next = function ($info) {
            };
            return class_177;
        }()),
        _153.$struct = true,
        _153.$infoAddress = '0x7fb852b5b600',
        _153);
    return LazyMapSequence;
}());
if (typeof IteratorProtocol$implementation != 'undefined')
    _mixin(LazyMapSequence.Iterator, IteratorProtocol$implementation, false);
if (typeof Sequence$implementation != 'undefined')
    _mixin(LazyMapSequence.Iterator, Sequence$implementation, false);
if (typeof LazySequenceProtocol$implementation != 'undefined')
    _mixin(LazyMapSequence, LazySequenceProtocol$implementation, false);
if (typeof Collection$implementation != 'undefined')
    _mixin(LazyMapSequence, Collection$implementation, false);
if (typeof BidirectionalCollection$implementation != 'undefined')
    _mixin(LazyMapSequence, BidirectionalCollection$implementation, false);
if (typeof LazyCollectionProtocol$implementation != 'undefined')
    _mixin(LazyMapSequence, LazyCollectionProtocol$implementation, false);
if (typeof RandomAccessCollection$implementation != 'undefined')
    _mixin(LazyMapSequence, RandomAccessCollection$implementation, false);
var MIO_Mixin_String = /** @class */ (function () {
    function MIO_Mixin_String() {
    }
    /*Swift.(file).String.init(_:_StringGuts)*/
    /*Swift.(file).String.init(_:_StringGuts)*/
    MIO_Mixin_String.prototype.init_StringGuts = function ($info, _guts) {
        return _guts;
    };
    /*Swift.(file).String.init()*/
    /*Swift.(file).RangeReplaceableCollection.init()*/
    MIO_Mixin_String.prototype.init = function ($info) {
    };
    /*Swift.(file).String.==infix(_:String,_:String)*/
    /*Swift.(file).Equatable.==infix(_:Self,_:Self)*/
    MIO_Mixin_String.infix_61_61 = function ($info, lhs, rhs) {
        return lhs == rhs;
    };
    /*Swift.(file).String.init(_builtinStringLiteral:RawPointer,utf8CodeUnitCount:Word,isASCII:Int1)*/
    /*Swift.(file)._ExpressibleByBuiltinStringLiteral.init(_builtinStringLiteral:RawPointer,utf8CodeUnitCount:Word,isASCII:Int1)*/
    MIO_Mixin_String.prototype.init_builtinStringLiteralRawPointerUtf8CodeUnitCountWordIsASCIIInt1 = function ($info, start, utf8CodeUnitCount, isASCII) {
    };
    /*Swift.(file).String.init(_:Character)*/
    /*Swift.(file).String.init(_:Character)*/
    MIO_Mixin_String.prototype.initCharacter = function ($info, c) {
        return c;
    };
    /*Swift.(file).String.init(from:Decoder)*/
    /*Swift.(file).Decodable.init(from:Decoder)*/
    MIO_Mixin_String.prototype.initFromDecoder = function ($info, decoder) {
        return decoder;
    };
    /*Swift.(file).String.encode(to:Encoder)*/
    /*Swift.(file).Encodable.encode(to:Encoder)*/
    MIO_Mixin_String.prototype.encodeTo = function ($info, encoder) {
    };
    /*Swift.(file).String.withUnsafeBytes(_:(UnsafeRawBufferPointer) throws -> R)*/
    /*Swift.(file)._HasContiguousBytes.withUnsafeBytes(_:(UnsafeRawBufferPointer) throws -> R)*/
    MIO_Mixin_String.prototype.withUnsafeBytes = function ($info, body) {
    };
    /*Swift.(file).String.init(cString:UnsafePointer<CChar>)*/
    /*Swift.(file).StringProtocol.init(cString:UnsafePointer<CChar>)*/
    MIO_Mixin_String.prototype.initCStringUnsafePointer = function ($info, cString) {
        return cString;
    };
    /*Swift.(file).String.init(cString:UnsafePointer<UInt8>)*/
    /*Swift.(file).String.init(cString:UnsafePointer<UInt8>)*/
    MIO_Mixin_String.prototype.initCStringUnsafePointer = function ($info, cString) {
        return cString;
    };
    /*Swift.(file).String.init(validatingUTF8:UnsafePointer<CChar>)*/
    /*Swift.(file).String.init(validatingUTF8:UnsafePointer<CChar>)*/
    MIO_Mixin_String.prototype.initValidatingUTF8UnsafePointer = function ($info, cString) {
        return cString;
    };
    /*Swift.(file).String.decodeCString(_:UnsafePointer<Encoding.CodeUnit>?,as:Encoding.Type,repairingInvalidCodeUnits:Bool)*/
    /*Swift.(file).String.decodeCString(_:UnsafePointer<Encoding.CodeUnit>?,as:Encoding.Type,repairingInvalidCodeUnits:Bool)*/
    MIO_Mixin_String.decodeCStringAsRepairingInvalidCodeUnits = function ($info, cString, encoding, isRepairing) {
    };
    /*Swift.(file).String.init(decodingCString:UnsafePointer<Encoding.CodeUnit>,as:Encoding.Type)*/
    /*Swift.(file).StringProtocol.init(decodingCString:UnsafePointer<Encoding.CodeUnit>,as:Encoding.Type)*/
    MIO_Mixin_String.prototype.initDecodingCStringUnsafePointerAs = function ($info, ptr, sourceEncoding) {
    };
    /*Swift.(file).String.withCString(_:(UnsafePointer<Int8>) throws -> Result)*/
    /*Swift.(file).StringProtocol.withCString(_:(UnsafePointer<CChar>) throws -> Result)*/
    MIO_Mixin_String.prototype.withCString = function ($info, body) {
    };
    /*Swift.(file).String.customMirror*/ /*
    customMirror$get() {
    return this.customMirror
    }
    get customMirror() { return this.customMirror$get() }*/ ;
    /*Swift.(file).String.customPlaygroundQuickLook*/ /*
    customPlaygroundQuickLook$get() {
    return this.customPlaygroundQuickLook
    }
    get customPlaygroundQuickLook() { return this.customPlaygroundQuickLook$get() }*/ ;
    /*Swift.(file).String.write(_:String)*/
    /*Swift.(file).TextOutputStream.write(_:String)*/
    MIO_Mixin_String.prototype.write = function ($info, other) {
    };
    /*Swift.(file).String.write(to:Target)*/
    /*Swift.(file).TextOutputStreamable.write(to:Target)*/
    MIO_Mixin_String.prototype.writeTo = function ($info, target$inout) {
    };
    /*Swift.(file).String.hash(into:Hasher)*/
    /*Swift.(file).Hashable.hash(into:Hasher)*/
    MIO_Mixin_String.prototype.hashInto = function ($info, hasher$inout) {
    };
    /*Swift.(file).String.hashValue*/ /*
    hashValue$get() {
    return this.hashValue
    }
    get hashValue() { return this.hashValue$get() }*/ ;
    /*Swift.(file).String.init(decoding:C,as:Encoding.Type)*/
    /*Swift.(file).StringProtocol.init(decoding:C,as:Encoding.Type)*/
    MIO_Mixin_String.prototype.initDecodingAs = function ($info, codeUnits, sourceEncoding) {
    };
    /*Swift.(file).String.withCString(encodedAs:TargetEncoding.Type,_:(UnsafePointer<TargetEncoding.CodeUnit>) throws -> Result)*/
    /*Swift.(file).StringProtocol.withCString(encodedAs:Encoding.Type,_:(UnsafePointer<Encoding.CodeUnit>) throws -> Result)*/
    MIO_Mixin_String.prototype.withCStringEncodedAs = function ($info, targetEncoding, body) {
    };
    /*Swift.(file).String.init(_builtinUnicodeScalarLiteral:Int32)*/
    /*Swift.(file)._ExpressibleByBuiltinUnicodeScalarLiteral.init(_builtinUnicodeScalarLiteral:Int32)*/
    MIO_Mixin_String.prototype.init_builtinUnicodeScalarLiteralInt32 = function ($info, value) {
        return value;
    };
    /*Swift.(file).String.init(_:Unicode.Scalar)*/
    /*Swift.(file).String.init(_:Unicode.Scalar)*/
    MIO_Mixin_String.prototype.initUnicodeScalar = function ($info, scalar) {
        return scalar;
    };
    /*Swift.(file).String.init(_builtinExtendedGraphemeClusterLiteral:RawPointer,utf8CodeUnitCount:Word,isASCII:Int1)*/
    /*Swift.(file)._ExpressibleByBuiltinExtendedGraphemeClusterLiteral.init(_builtinExtendedGraphemeClusterLiteral:RawPointer,utf8CodeUnitCount:Word,isASCII:Int1)*/
    MIO_Mixin_String.prototype.init_builtinExtendedGraphemeClusterLiteralRawPointerUtf8CodeUnitCountWordIsASCIIInt1 = function ($info, start, utf8CodeUnitCount, isASCII) {
    };
    /*Swift.(file).String.init(stringLiteral:String)*/
    /*Swift.(file).ExpressibleByStringLiteral.init(stringLiteral:Self.StringLiteralType)*/
    MIO_Mixin_String.prototype.initStringLiteral = function ($info, value) {
        return value;
    };
    /*Swift.(file).String.debugDescription*/ /*
    debugDescription$get() {
    return this.debugDescription
    }
    get debugDescription() { return this.debugDescription$get() }*/ ;
    /*Swift.(file).String.+infix(_:String,_:String)*/
    /*Swift.(file).String.+infix(_:String,_:String)*/
    MIO_Mixin_String.infix_43 = function ($info, lhs, rhs) {
        return lhs + rhs;
    };
    /*Swift.(file).String.+=infix(_:String,_:String)*/
    /*Swift.(file).String.+=infix(_:String,_:String)*/
    MIO_Mixin_String.infix_43_61 = function ($info, lhs$inout, rhs) {
        lhs$inout.set(lhs$inout.get() + rhs);
    };
    /*Swift.(file).String.lowercased()*/
    /*Swift.(file).StringProtocol.lowercased()*/
    MIO_Mixin_String.prototype.lowercased = function ($info) {
    };
    /*Swift.(file).String.uppercased()*/
    /*Swift.(file).StringProtocol.uppercased()*/
    MIO_Mixin_String.prototype.uppercased = function ($info) {
    };
    /*Swift.(file).String.init(_:T)*/
    /*Swift.(file).String.init(_:T)*/
    MIO_Mixin_String.prototype.init = function ($info, value) {
        return value;
    };
    /*Swift.(file).String.description*/ /*
    description$get() {
    return this.description
    }
    get description() { return this.description$get() }*/ ;
    /*Swift.(file).String.init(_cocoaString:AnyObject)*/
    /*Swift.(file).String.init(_cocoaString:AnyObject)*/
    MIO_Mixin_String.prototype.init_cocoaStringAnyObject = function ($info, _cocoaString) {
        return _cocoaString;
    };
    /*Swift.(file).String.startIndex*/ /*
    startIndex$get() {
    return this.startIndex
    }
    get startIndex() { return this.startIndex$get() }*/ ;
    /*Swift.(file).String.endIndex*/ /*
    endIndex$get() {
    return this.endIndex
    }
    get endIndex() { return this.endIndex$get() }*/ ;
    /*Swift.(file).String.count*/
    MIO_Mixin_String.prototype.count$get = function () {
        return this.length;
    };
    Object.defineProperty(MIO_Mixin_String.prototype, "count", {
        get: function () { return this.count$get(); },
        enumerable: true,
        configurable: true
    });
    ;
    /*Swift.(file).String.index(after:String.Index)*/
    /*Swift.(file).BidirectionalCollection.index(after:Self.Index)*/
    /*Swift.(file).Collection.index(after:Self.Index)*/
    MIO_Mixin_String.prototype.indexAfter = function ($info, i) {
    };
    /*Swift.(file).String.index(before:String.Index)*/
    /*Swift.(file).BidirectionalCollection.index(before:Self.Index)*/
    MIO_Mixin_String.prototype.indexBefore = function ($info, i) {
    };
    /*Swift.(file).String.index(_:String.Index,offsetBy:String.IndexDistance)*/
    /*Swift.(file).BidirectionalCollection.index(_:Self.Index,offsetBy:Int)*/
    /*Swift.(file).Collection.index(_:Self.Index,offsetBy:Int)*/
    MIO_Mixin_String.prototype.indexOffsetBy = function ($info, i, n) {
    };
    /*Swift.(file).String.index(_:String.Index,offsetBy:String.IndexDistance,limitedBy:String.Index)*/
    /*Swift.(file).BidirectionalCollection.index(_:Self.Index,offsetBy:Int,limitedBy:Self.Index)*/
    /*Swift.(file).Collection.index(_:Self.Index,offsetBy:Int,limitedBy:Self.Index)*/
    MIO_Mixin_String.prototype.indexOffsetByLimitedBy = function ($info, i, n, limit) {
    };
    /*Swift.(file).String.distance(from:String.Index,to:String.Index)*/
    /*Swift.(file).BidirectionalCollection.distance(from:Self.Index,to:Self.Index)*/
    /*Swift.(file).Collection.distance(from:Self.Index,to:Self.Index)*/
    MIO_Mixin_String.prototype.distanceFromTo = function ($info, start, end) {
    };
    /*Swift.(file).String.subscript(_:String.Index)*/
    /*Swift.(file).BidirectionalCollection.subscript(_:Self.Index)*/
    /*Swift.(file).Collection.subscript(_:Self.Index)*/
    /*Swift.(file).RangeReplaceableCollection.subscript(_:Self.Index)*/
    MIO_Mixin_String.prototype.subscript$get = function ($info, i) {
        return this[i];
    };
    /*Swift.(file).String.makeIterator()*/
    /*Swift.(file).Collection.makeIterator()*/
    /*Swift.(file).Sequence.makeIterator()*/
    MIO_Mixin_String.prototype.makeIterator = function ($info) {
        var _this = this;
        return new SwiftIterator(function (current) { return _this[current]; });
    };
    /*Swift.(file).String.<infix(_:String,_:String)*/
    /*Swift.(file).Comparable.<infix(_:Self,_:Self)*/
    MIO_Mixin_String.infix_60 = function ($info, lhs, rhs) {
        return lhs < rhs;
    };
    /*Swift.(file).String.init(stringInterpolation:DefaultStringInterpolation)*/
    /*Swift.(file).ExpressibleByStringInterpolation.init(stringInterpolation:Self.StringInterpolation)*/
    MIO_Mixin_String.prototype.initStringInterpolation = function ($info, stringInterpolation) {
        return stringInterpolation;
    };
    /*Swift.(file).String.init(repeating:String,count:Int)*/
    /*Swift.(file).String.init(repeating:String,count:Int)*/
    MIO_Mixin_String.prototype.initRepeatingStringCountInt = function ($info, repeatedValue, count) {
    };
    /*Swift.(file).String.isEmpty*/ /*
    isEmpty$get() {
    return this.isEmpty
    }
    get isEmpty() { return this.isEmpty$get() }*/ ;
    /*Swift.(file).String.hasPrefix(_:String)*/
    /*Swift.(file).StringProtocol.hasPrefix(_:String)*/
    MIO_Mixin_String.prototype.hasPrefix = function ($info, prefix) {
    };
    /*Swift.(file).String.hasSuffix(_:String)*/
    /*Swift.(file).StringProtocol.hasSuffix(_:String)*/
    MIO_Mixin_String.prototype.hasSuffix = function ($info, suffix) {
    };
    /*Swift.(file).String.init(_:T,radix:Int,uppercase:Bool)*/
    /*Swift.(file).String.init(_:T,radix:Int,uppercase:Bool)*/
    MIO_Mixin_String.prototype.initRadixIntUppercaseBool = function ($info, value, radix, uppercase) {
    };
    /*Swift.(file).String.init(repeating:Character,count:Int)*/
    /*Swift.(file).RangeReplaceableCollection.init(repeating:Self.Element,count:Int)*/
    MIO_Mixin_String.prototype.initRepeatingCountInt = function ($info, repeatedValue, count) {
    };
    /*Swift.(file).String.init(_:S)*/
    /*Swift.(file).LosslessStringConvertible.init(_:String)*/
    MIO_Mixin_String.prototype.initString = function ($info, other) {
        return other;
    };
    /*Swift.(file).String.init(_:S)*/
    /*Swift.(file).RangeReplaceableCollection.init(_:S)*/
    MIO_Mixin_String.prototype.initBuffer = function ($info, characters) {
        return characters;
    };
    /*Swift.(file).String.reserveCapacity(_:Int)*/
    /*Swift.(file).RangeReplaceableCollection.reserveCapacity(_:Int)*/
    MIO_Mixin_String.prototype.reserveCapacity = function ($info, n) {
    };
    /*Swift.(file).String.append(_:String)*/
    /*Swift.(file).String.append(_:String)*/
    MIO_Mixin_String.prototype.append = function ($info, other) {
    };
    /*Swift.(file).String.append(_:Character)*/
    /*Swift.(file).RangeReplaceableCollection.append(_:Self.Element)*/
    MIO_Mixin_String.prototype.append = function ($info, c) {
    };
    /*Swift.(file).String.append(contentsOf:String)*/
    /*Swift.(file).String.append(contentsOf:String)*/
    MIO_Mixin_String.prototype.appendContentsOf = function ($info, newElements) {
    };
    /*Swift.(file).String.append(contentsOf:Substring)*/
    /*Swift.(file).String.append(contentsOf:Substring)*/
    MIO_Mixin_String.prototype.appendContentsOf = function ($info, newElements) {
    };
    /*Swift.(file).String.append(contentsOf:S)*/
    /*Swift.(file).RangeReplaceableCollection.append(contentsOf:S)*/
    MIO_Mixin_String.prototype.appendContentsOf = function ($info, newElements) {
    };
    /*Swift.(file).String.replaceSubrange(_:Range<String.Index>,with:C)*/
    /*Swift.(file).RangeReplaceableCollection.replaceSubrange(_:Range<Self.Index>,with:C)*/
    MIO_Mixin_String.prototype.replaceSubrangeWith = function ($info, bounds, newElements) {
    };
    /*Swift.(file).String.insert(_:Character,at:String.Index)*/
    /*Swift.(file).RangeReplaceableCollection.insert(_:Self.Element,at:Self.Index)*/
    MIO_Mixin_String.prototype.insertAt = function ($info, newElement, i) {
    };
    /*Swift.(file).String.insert(contentsOf:S,at:String.Index)*/
    /*Swift.(file).RangeReplaceableCollection.insert(contentsOf:S,at:Self.Index)*/
    MIO_Mixin_String.prototype.insertContentsOfAt = function ($info, newElements, i) {
    };
    /*Swift.(file).String.remove(at:String.Index)*/
    /*Swift.(file).RangeReplaceableCollection.remove(at:Self.Index)*/
    MIO_Mixin_String.prototype.removeAt = function ($info, i) {
    };
    /*Swift.(file).String.removeSubrange(_:Range<String.Index>)*/
    /*Swift.(file).RangeReplaceableCollection.removeSubrange(_:Range<Self.Index>)*/
    MIO_Mixin_String.prototype.removeSubrange = function ($info, bounds) {
    };
    /*Swift.(file).String.removeAll(keepingCapacity:Bool)*/
    /*Swift.(file).RangeReplaceableCollection.removeAll(keepingCapacity:Bool)*/
    MIO_Mixin_String.prototype.removeAllKeepingCapacity = function ($info, keepCapacity) {
    };
    /*Swift.(file).String.max(_:T,_:T)*/
    /*Swift.(file).String.max(_:T,_:T)*/
    MIO_Mixin_String.prototype.max = function ($info, x, y) {
    };
    /*Swift.(file).String.min(_:T,_:T)*/
    /*Swift.(file).String.min(_:T,_:T)*/
    MIO_Mixin_String.prototype.min = function ($info, x, y) {
    };
    /*Swift.(file).String.init(_:String.UnicodeScalarView)*/
    /*Swift.(file).String.init(_:String.UnicodeScalarView)*/
    MIO_Mixin_String.prototype.initStringUnicodeScalarView = function ($info, unicodeScalars) {
        return unicodeScalars;
    };
    /*Swift.(file).String.unicodeScalars*/ /*
    unicodeScalars$get() {
    return this.unicodeScalars
    }
    get unicodeScalars() { return this.unicodeScalars$get() }*/ ;
    /*Swift.(file).String.init(_:String.UTF16View)*/
    /*Swift.(file).String.init(_:String.UTF16View)*/
    MIO_Mixin_String.prototype.initStringUTF16View = function ($info, utf16) {
        return utf16;
    };
    /*Swift.(file).String.utf8CString*/ /*
    utf8CString$get() {
    return this.utf8CString
    }
    get utf8CString() { return this.utf8CString$get() }*/ ;
    /*Swift.(file).String.init(_:String.UTF8View)*/
    /*Swift.(file).String.init(_:String.UTF8View)*/
    MIO_Mixin_String.prototype.initStringUTF8View = function ($info, utf8) {
        return utf8;
    };
    /*Swift.(file).String.init(_:Substring)*/
    /*Swift.(file).String.init(_:Substring)*/
    MIO_Mixin_String.prototype.initSubstring = function ($info, substring) {
        return substring;
    };
    /*Swift.(file).String.init(_:Substring.UTF8View)*/
    /*Swift.(file).String.init(_:Substring.UTF8View)*/
    MIO_Mixin_String.prototype.initSubstringUTF8View = function ($info, codeUnits) {
        return codeUnits;
    };
    /*Swift.(file).String.init(_:Substring.UTF16View)*/
    /*Swift.(file).String.init(_:Substring.UTF16View)*/
    MIO_Mixin_String.prototype.initSubstringUTF16View = function ($info, codeUnits) {
        return codeUnits;
    };
    /*Swift.(file).String.init(_:Substring.UnicodeScalarView)*/
    /*Swift.(file).String.init(_:Substring.UnicodeScalarView)*/
    MIO_Mixin_String.prototype.initSubstringUnicodeScalarView = function ($info, content) {
        return content;
    };
    /*Swift.(file).String.subscript(_:Range<String.Index>)*/
    /*Swift.(file).BidirectionalCollection.subscript(_:Range<Self.Index>)*/
    /*Swift.(file).Collection.subscript(_:Range<Self.Index>)*/
    /*Swift.(file).RangeReplaceableCollection.subscript(_:Range<Self.Index>)*/
    MIO_Mixin_String.prototype.subcriptRange$get = function ($info, r) {
        return this[r];
    };
    /*Swift.(file).String.subscript(_:Int)*/
    /*Swift.(file).String.subscript(_:Int)*/
    MIO_Mixin_String.prototype.subscript$get = function ($info, i) {
        return this[i];
    };
    /*Swift.(file).String.subscript(_:R)*/
    /*Swift.(file).String.subscript(_:R)*/
    MIO_Mixin_String.prototype.subscript$get = function ($info, bounds) {
        return this[bounds];
    };
    /*Swift.(file).String.characters*/ /*
    characters$get() {
    return this.characters
    }
    get characters() { return this.characters$get() }*/ ;
    /*Swift.(file).String.withMutableCharacters(_:(inout String) -> R)*/
    /*Swift.(file).String.withMutableCharacters(_:(inout String) -> R)*/
    MIO_Mixin_String.prototype.withMutableCharacters = function ($info, body) {
    };
    /*Swift.(file).String.init(describing:Subject)*/
    /*Swift.(file).String.init(describing:Subject)*/
    MIO_Mixin_String.prototype.initDescribing = function ($info, instance) {
        return instance;
    };
    /*Swift.(file).String.init(describing:Subject)*/
    /*Swift.(file).String.init(describing:Subject)*/
    MIO_Mixin_String.prototype.initDescribing = function ($info, instance) {
        return instance;
    };
    /*Swift.(file).String.init(describing:Subject)*/
    /*Swift.(file).String.init(describing:Subject)*/
    MIO_Mixin_String.prototype.initDescribing = function ($info, instance) {
        return instance;
    };
    /*Swift.(file).String.init(describing:Subject)*/
    /*Swift.(file).String.init(describing:Subject)*/
    MIO_Mixin_String.prototype.initDescribing = function ($info, instance) {
        return instance;
    };
    /*Swift.(file).String.init(reflecting:Subject)*/
    /*Swift.(file).String.init(reflecting:Subject)*/
    MIO_Mixin_String.prototype.initReflecting = function ($info, subject) {
        return subject;
    };
    var _154, _155, _156, _157, _158, _159, _160;
    MIO_Mixin_String.$struct = true;
    MIO_Mixin_String.$mixin = true;
    MIO_Mixin_String.$infoAddress = '0x7fb8528eaf40';
    MIO_Mixin_String.Index = (_154 = /** @class */ (function () {
            function class_178() {
            }
            /*Swift.(file).String.Index.init(_:UInt64)*/
            /*Swift.(file).String.Index.init(_:UInt64)*/
            class_178.prototype.initUInt64 = function ($info, raw) {
                return raw;
            };
            /*Swift.(file).Index.==infix(_:String.Index,_:String.Index)*/
            /*Swift.(file).Equatable.==infix(_:Self,_:Self)*/
            class_178.infix_61_61 = function ($info, lhs, rhs) {
                return lhs == rhs;
            };
            /*Swift.(file).Index.orderingValue*/ /*
            orderingValue$get() {
            return this.orderingValue
            }
            get orderingValue() { return this.orderingValue$get() }*/ ;
            /*Swift.(file).Index.isZeroPosition*/ /*
            isZeroPosition$get() {
            return this.isZeroPosition
            }
            get isZeroPosition() { return this.isZeroPosition$get() }*/ ;
            /*Swift.(file).Index.encodedOffset*/ /*
            encodedOffset$get() {
            return this.encodedOffset
            }
            get encodedOffset() { return this.encodedOffset$get() }*/ ;
            /*Swift.(file).Index.transcodedOffset*/ /*
            transcodedOffset$get() {
            return this.transcodedOffset
            }
            get transcodedOffset() { return this.transcodedOffset$get() }*/ ;
            /*Swift.(file).Index.characterStride*/ /*
            characterStride$get() {
            return this.characterStride
            }
            get characterStride() { return this.characterStride$get() }*/ ;
            /*Swift.(file).Index.init(encodedOffset:Int,transcodedOffset:Int)*/
            /*Swift.(file).Index.init(encodedOffset:Int,transcodedOffset:Int)*/
            class_178.prototype.initEncodedOffsetIntTranscodedOffsetInt = function ($info, encodedOffset, transcodedOffset) {
            };
            /*Swift.(file).Index.init(encodedOffset:Int)*/
            /*Swift.(file).Index.init(encodedOffset:Int)*/
            class_178.prototype.initEncodedOffsetInt = function ($info, encodedOffset) {
                return encodedOffset;
            };
            /*Swift.(file).Index.init(encodedOffset:Int,transcodedOffset:Int,characterStride:Int)*/
            /*Swift.(file).Index.init(encodedOffset:Int,transcodedOffset:Int,characterStride:Int)*/
            class_178.prototype.initEncodedOffsetIntTranscodedOffsetIntCharacterStrideInt = function ($info, encodedOffset, transcodedOffset, characterStride) {
            };
            /*Swift.(file).Index.init(encodedOffset:Int,characterStride:Int)*/
            /*Swift.(file).Index.init(encodedOffset:Int,characterStride:Int)*/
            class_178.prototype.initEncodedOffsetIntCharacterStrideInt = function ($info, pos, char) {
            };
            /*Swift.(file).Index.strippingTranscoding*/ /*
            strippingTranscoding$get() {
            return this.strippingTranscoding
            }
            get strippingTranscoding() { return this.strippingTranscoding$get() }*/ ;
            /*Swift.(file).Index.nextEncoded*/ /*
            nextEncoded$get() {
            return this.nextEncoded
            }
            get nextEncoded() { return this.nextEncoded$get() }*/ ;
            /*Swift.(file).Index.priorEncoded*/ /*
            priorEncoded$get() {
            return this.priorEncoded
            }
            get priorEncoded() { return this.priorEncoded$get() }*/ ;
            /*Swift.(file).Index.nextTranscoded*/ /*
            nextTranscoded$get() {
            return this.nextTranscoded
            }
            get nextTranscoded() { return this.nextTranscoded$get() }*/ ;
            /*Swift.(file).Index.priorTranscoded*/ /*
            priorTranscoded$get() {
            return this.priorTranscoded
            }
            get priorTranscoded() { return this.priorTranscoded$get() }*/ ;
            /*Swift.(file).Index.encoded(offsetBy:Int)*/
            /*Swift.(file).Index.encoded(offsetBy:Int)*/
            class_178.prototype.encodedOffsetBy = function ($info, n) {
            };
            /*Swift.(file).Index.transcoded(withOffset:Int)*/
            /*Swift.(file).Index.transcoded(withOffset:Int)*/
            class_178.prototype.transcodedWithOffset = function ($info, n) {
            };
            /*Swift.(file).Index.<infix(_:String.Index,_:String.Index)*/
            /*Swift.(file).Comparable.<infix(_:Self,_:Self)*/
            class_178.infix_60 = function ($info, lhs, rhs) {
                return lhs < rhs;
            };
            /*Swift.(file).Index.hash(into:Hasher)*/
            /*Swift.(file).Hashable.hash(into:Hasher)*/
            class_178.prototype.hashInto = function ($info, hasher$inout) {
            };
            /*Swift.(file).Index.hashValue*/ /*
            hashValue$get() {
            return this.hashValue
            }
            get hashValue() { return this.hashValue$get() }*/ ;
            /*Swift.(file).Index.init(_:String.Index,within:String)*/
            /*Swift.(file).Index.init(_:String.Index,within:String)*/
            class_178.prototype.initStringIndexWithinString = function ($info, sourcePosition, target) {
            };
            /*Swift.(file).Index.samePosition(in:String.UTF8View)*/
            /*Swift.(file).Index.samePosition(in:String.UTF8View)*/
            class_178.prototype.samePositionIn = function ($info, utf8) {
            };
            /*Swift.(file).Index.samePosition(in:String.UTF16View)*/
            /*Swift.(file).Index.samePosition(in:String.UTF16View)*/
            class_178.prototype.samePositionIn = function ($info, utf16) {
            };
            /*Swift.(file).Index.init(_:String.Index,within:String.UnicodeScalarView)*/
            /*Swift.(file).Index.init(_:String.Index,within:String.UnicodeScalarView)*/
            class_178.prototype.initStringIndexWithinStringUnicodeScalarView = function ($info, sourcePosition, unicodeScalars) {
            };
            /*Swift.(file).Index.samePosition(in:String)*/
            /*Swift.(file).Index.samePosition(in:String)*/
            class_178.prototype.samePositionIn = function ($info, characters) {
            };
            /*Swift.(file).Index.init(_:String.Index,within:String.UTF16View)*/
            /*Swift.(file).Index.init(_:String.Index,within:String.UTF16View)*/
            class_178.prototype.initStringIndexWithinStringUTF16View = function ($info, idx, target) {
            };
            /*Swift.(file).Index.samePosition(in:String.UnicodeScalarView)*/
            /*Swift.(file).Index.samePosition(in:String.UnicodeScalarView)*/
            class_178.prototype.samePositionIn = function ($info, unicodeScalars) {
            };
            /*Swift.(file).Index.init(_:String.Index,within:String.UTF8View)*/
            /*Swift.(file).Index.init(_:String.Index,within:String.UTF8View)*/
            class_178.prototype.initStringIndexWithinStringUTF8View = function ($info, idx, target) {
            };
            return class_178;
        }()),
        _154.$struct = true,
        _154.$infoAddress = '0x7fb85182e6c0',
        _154);
    MIO_Mixin_String.Iterator = (_155 = /** @class */ (function () {
            function class_179() {
            }
            /*Swift.(file).String.Iterator.init(_:_StringGuts)*/
            /*Swift.(file).String.Iterator.init(_:_StringGuts)*/
            class_179.prototype.init_StringGuts = function ($info, guts) {
                return guts;
            };
            /*Swift.(file).String.Iterator.next()*/
            /*Swift.(file).IteratorProtocol.next()*/
            class_179.prototype.next = function ($info) {
            };
            return class_179;
        }()),
        _155.$struct = true,
        _155.$infoAddress = '0x7fb852eb6558',
        _155);
    MIO_Mixin_String.UnicodeScalarView = (_156 = /** @class */ (function () {
            function class_180() {
            }
            /*Swift.(file).String.UnicodeScalarView.init(_:_StringGuts)*/
            /*Swift.(file).String.UnicodeScalarView.init(_:_StringGuts)*/
            class_180.prototype.init_StringGuts = function ($info, _guts) {
                return _guts;
            };
            /*Swift.(file).UnicodeScalarView.startIndex*/ /*
            startIndex$get() {
            return this.startIndex
            }
            get startIndex() { return this.startIndex$get() }*/ ;
            /*Swift.(file).UnicodeScalarView.endIndex*/ /*
            endIndex$get() {
            return this.endIndex
            }
            get endIndex() { return this.endIndex$get() }*/ ;
            /*Swift.(file).UnicodeScalarView.index(after:String.UnicodeScalarView.Index)*/
            /*Swift.(file).BidirectionalCollection.index(after:Self.Index)*/
            /*Swift.(file).Collection.index(after:Self.Index)*/
            class_180.prototype.indexAfter = function ($info, i) {
            };
            /*Swift.(file).UnicodeScalarView.index(before:String.UnicodeScalarView.Index)*/
            /*Swift.(file).BidirectionalCollection.index(before:Self.Index)*/
            class_180.prototype.indexBefore = function ($info, i) {
            };
            /*Swift.(file).UnicodeScalarView.subscript(_:String.UnicodeScalarView.Index)*/
            /*Swift.(file).BidirectionalCollection.subscript(_:Self.Index)*/
            /*Swift.(file).Collection.subscript(_:Self.Index)*/
            /*Swift.(file).RangeReplaceableCollection.subscript(_:Self.Index)*/
            class_180.prototype.subscript$get = function ($info, position) {
                return this[position];
            };
            /*Swift.(file).UnicodeScalarView.makeIterator()*/
            /*Swift.(file).Collection.makeIterator()*/
            /*Swift.(file).Sequence.makeIterator()*/
            class_180.prototype.makeIterator = function ($info) {
                var _this = this;
                return new SwiftIterator(function (current) { return _this[current]; });
            };
            /*Swift.(file).UnicodeScalarView.description*/ /*
            description$get() {
            return this.description
            }
            get description() { return this.description$get() }*/ ;
            /*Swift.(file).UnicodeScalarView.debugDescription*/ /*
            debugDescription$get() {
            return this.debugDescription
            }
            get debugDescription() { return this.debugDescription$get() }*/ ;
            /*Swift.(file).UnicodeScalarView.init()*/
            /*Swift.(file).RangeReplaceableCollection.init()*/
            class_180.prototype.init = function ($info) {
            };
            /*Swift.(file).UnicodeScalarView.reserveCapacity(_:Int)*/
            /*Swift.(file).RangeReplaceableCollection.reserveCapacity(_:Int)*/
            class_180.prototype.reserveCapacity = function ($info, n) {
            };
            /*Swift.(file).UnicodeScalarView.append(_:Unicode.Scalar)*/
            /*Swift.(file).RangeReplaceableCollection.append(_:Self.Element)*/
            class_180.prototype.append = function ($info, c) {
            };
            /*Swift.(file).UnicodeScalarView.append(contentsOf:S)*/
            /*Swift.(file).RangeReplaceableCollection.append(contentsOf:S)*/
            class_180.prototype.appendContentsOf = function ($info, newElements) {
            };
            /*Swift.(file).UnicodeScalarView.replaceSubrange(_:Range<String.UnicodeScalarView.Index>,with:C)*/
            /*Swift.(file).RangeReplaceableCollection.replaceSubrange(_:Range<Self.Index>,with:C)*/
            class_180.prototype.replaceSubrangeWith = function ($info, bounds, newElements) {
            };
            /*Swift.(file).UnicodeScalarView.customMirror*/ /*
            customMirror$get() {
            return this.customMirror
            }
            get customMirror() { return this.customMirror$get() }*/ ;
            /*Swift.(file).UnicodeScalarView.subscript(_:Range<String.UnicodeScalarView.Index>)*/
            /*Swift.(file).BidirectionalCollection.subscript(_:Range<Self.Index>)*/
            /*Swift.(file).Collection.subscript(_:Range<Self.Index>)*/
            /*Swift.(file).RangeReplaceableCollection.subscript(_:Range<Self.Index>)*/
            class_180.prototype.subcriptRange$get = function ($info, r) {
                return this[r];
            };
            /*Swift.(file).UnicodeScalarView.customPlaygroundQuickLook*/ /*
            customPlaygroundQuickLook$get() {
            return this.customPlaygroundQuickLook
            }
            get customPlaygroundQuickLook() { return this.customPlaygroundQuickLook$get() }*/ ;
            /*Swift.(file).UnicodeScalarView.subscript(_:Range<String.UnicodeScalarView.Index>)*/
            /*Swift.(file).UnicodeScalarView.subscript(_:Range<String.UnicodeScalarView.Index>)*/
            class_180.prototype.subscript$get = function ($info, bounds) {
                return this[bounds];
            };
            /*Swift.(file).UnicodeScalarView.subscript(_:ClosedRange<String.UnicodeScalarView.Index>)*/
            /*Swift.(file).UnicodeScalarView.subscript(_:ClosedRange<String.UnicodeScalarView.Index>)*/
            class_180.prototype.subscript$get = function ($info, bounds) {
                return this[bounds];
            };
            return class_180;
        }()),
        _156.$struct = true,
        _156.$infoAddress = '0x7fb85129ffa0',
        _156.Iterator = (_157 = /** @class */ (function () {
                function class_181() {
                }
                /*Swift.(file).UnicodeScalarView.Iterator.init(_:_StringGuts)*/
                /*Swift.(file).UnicodeScalarView.Iterator.init(_:_StringGuts)*/
                class_181.prototype.init_StringGuts = function ($info, guts) {
                    return guts;
                };
                /*Swift.(file).UnicodeScalarView.Iterator.next()*/
                /*Swift.(file).IteratorProtocol.next()*/
                class_181.prototype.next = function ($info) {
                };
                return class_181;
            }()),
            _157.$struct = true,
            _157.$infoAddress = '0x7fb852ecbdb0',
            _157),
        _156);
    MIO_Mixin_String.UTF16View = (_158 = /** @class */ (function () {
            function class_182() {
            }
            /*Swift.(file).String.UTF16View.init(_:_StringGuts)*/
            /*Swift.(file).String.UTF16View.init(_:_StringGuts)*/
            class_182.prototype.init_StringGuts = function ($info, guts) {
                return guts;
            };
            /*Swift.(file).UTF16View.startIndex*/ /*
            startIndex$get() {
            return this.startIndex
            }
            get startIndex() { return this.startIndex$get() }*/ ;
            /*Swift.(file).UTF16View.endIndex*/ /*
            endIndex$get() {
            return this.endIndex
            }
            get endIndex() { return this.endIndex$get() }*/ ;
            /*Swift.(file).UTF16View.index(after:String.UTF16View.Index)*/
            /*Swift.(file).BidirectionalCollection.index(after:Self.Index)*/
            /*Swift.(file).Collection.index(after:Self.Index)*/
            class_182.prototype.indexAfter = function ($info, i) {
            };
            /*Swift.(file).UTF16View.index(before:String.UTF16View.Index)*/
            /*Swift.(file).BidirectionalCollection.index(before:Self.Index)*/
            class_182.prototype.indexBefore = function ($info, i) {
            };
            /*Swift.(file).UTF16View.index(_:String.UTF16View.Index,offsetBy:Int)*/
            /*Swift.(file).BidirectionalCollection.index(_:Self.Index,offsetBy:Int)*/
            /*Swift.(file).Collection.index(_:Self.Index,offsetBy:Int)*/
            class_182.prototype.indexOffsetBy = function ($info, i, n) {
            };
            /*Swift.(file).UTF16View.index(_:String.UTF16View.Index,offsetBy:Int,limitedBy:String.UTF16View.Index)*/
            /*Swift.(file).BidirectionalCollection.index(_:Self.Index,offsetBy:Int,limitedBy:Self.Index)*/
            /*Swift.(file).Collection.index(_:Self.Index,offsetBy:Int,limitedBy:Self.Index)*/
            class_182.prototype.indexOffsetByLimitedBy = function ($info, i, n, limit) {
            };
            /*Swift.(file).UTF16View.distance(from:String.UTF16View.Index,to:String.UTF16View.Index)*/
            /*Swift.(file).BidirectionalCollection.distance(from:Self.Index,to:Self.Index)*/
            /*Swift.(file).Collection.distance(from:Self.Index,to:Self.Index)*/
            class_182.prototype.distanceFromTo = function ($info, start, end) {
            };
            /*Swift.(file).UTF16View.count*/ /*
            count$get() {
            return this.count
            }
            get count() { return this.count$get() }*/ ;
            /*Swift.(file).UTF16View.subscript(_:String.UTF16View.Index)*/
            /*Swift.(file).BidirectionalCollection.subscript(_:Self.Index)*/
            /*Swift.(file).Collection.subscript(_:Self.Index)*/
            class_182.prototype.subscript$get = function ($info, i) {
                return this[i];
            };
            /*Swift.(file).UTF16View.makeIterator()*/
            /*Swift.(file).Collection.makeIterator()*/
            /*Swift.(file).Sequence.makeIterator()*/
            class_182.prototype.makeIterator = function ($info) {
                var _this = this;
                return new SwiftIterator(function (current) { return _this[current]; });
            };
            /*Swift.(file).UTF16View.description*/ /*
            description$get() {
            return this.description
            }
            get description() { return this.description$get() }*/ ;
            /*Swift.(file).UTF16View.debugDescription*/ /*
            debugDescription$get() {
            return this.debugDescription
            }
            get debugDescription() { return this.debugDescription$get() }*/ ;
            /*Swift.(file).UTF16View.customMirror*/ /*
            customMirror$get() {
            return this.customMirror
            }
            get customMirror() { return this.customMirror$get() }*/ ;
            /*Swift.(file).UTF16View.subscript(_:Range<String.UTF16View.Index>)*/
            /*Swift.(file).BidirectionalCollection.subscript(_:Range<Self.Index>)*/
            /*Swift.(file).Collection.subscript(_:Range<Self.Index>)*/
            class_182.prototype.subcriptRange$get = function ($info, r) {
                return this[r];
            };
            /*Swift.(file).UTF16View.customPlaygroundQuickLook*/ /*
            customPlaygroundQuickLook$get() {
            return this.customPlaygroundQuickLook
            }
            get customPlaygroundQuickLook() { return this.customPlaygroundQuickLook$get() }*/ ;
            return class_182;
        }()),
        _158.$struct = true,
        _158.$infoAddress = '0x7fb8512a0868',
        _158.Iterator = (_159 = /** @class */ (function () {
                function class_183() {
                }
                /*Swift.(file).UTF16View.Iterator.init(_:_StringGuts)*/
                /*Swift.(file).UTF16View.Iterator.init(_:_StringGuts)*/
                class_183.prototype.init_StringGuts = function ($info, guts) {
                    return guts;
                };
                /*Swift.(file).UTF16View.Iterator.next()*/
                /*Swift.(file).IteratorProtocol.next()*/
                class_183.prototype.next = function ($info) {
                };
                return class_183;
            }()),
            _159.$struct = true,
            _159.$infoAddress = '0x7fb852ed5090',
            _159),
        _158);
    MIO_Mixin_String.UTF8View = (_160 = /** @class */ (function () {
            function class_184() {
            }
            /*Swift.(file).String.UTF8View.init(_:_StringGuts)*/
            /*Swift.(file).String.UTF8View.init(_:_StringGuts)*/
            class_184.prototype.init_StringGuts = function ($info, guts) {
                return guts;
            };
            /*Swift.(file).UTF8View.startIndex*/ /*
            startIndex$get() {
            return this.startIndex
            }
            get startIndex() { return this.startIndex$get() }*/ ;
            /*Swift.(file).UTF8View.endIndex*/ /*
            endIndex$get() {
            return this.endIndex
            }
            get endIndex() { return this.endIndex$get() }*/ ;
            /*Swift.(file).UTF8View.index(after:String.UTF8View.Index)*/
            /*Swift.(file).Collection.index(after:Self.Index)*/
            /*Swift.(file).BidirectionalCollection.index(after:Self.Index)*/
            class_184.prototype.indexAfter = function ($info, i) {
            };
            /*Swift.(file).UTF8View.index(before:String.UTF8View.Index)*/
            /*Swift.(file).BidirectionalCollection.index(before:Self.Index)*/
            class_184.prototype.indexBefore = function ($info, i) {
            };
            /*Swift.(file).UTF8View.index(_:String.UTF8View.Index,offsetBy:Int)*/
            /*Swift.(file).Collection.index(_:Self.Index,offsetBy:Int)*/
            /*Swift.(file).BidirectionalCollection.index(_:Self.Index,offsetBy:Int)*/
            class_184.prototype.indexOffsetBy = function ($info, i, n) {
            };
            /*Swift.(file).UTF8View.index(_:String.UTF8View.Index,offsetBy:Int,limitedBy:String.UTF8View.Index)*/
            /*Swift.(file).Collection.index(_:Self.Index,offsetBy:Int,limitedBy:Self.Index)*/
            /*Swift.(file).BidirectionalCollection.index(_:Self.Index,offsetBy:Int,limitedBy:Self.Index)*/
            class_184.prototype.indexOffsetByLimitedBy = function ($info, i, n, limit) {
            };
            /*Swift.(file).UTF8View.distance(from:String.UTF8View.Index,to:String.UTF8View.Index)*/
            /*Swift.(file).Collection.distance(from:Self.Index,to:Self.Index)*/
            /*Swift.(file).BidirectionalCollection.distance(from:Self.Index,to:Self.Index)*/
            class_184.prototype.distanceFromTo = function ($info, i, j) {
            };
            /*Swift.(file).UTF8View.subscript(_:String.UTF8View.Index)*/
            /*Swift.(file).Collection.subscript(_:Self.Index)*/
            /*Swift.(file).BidirectionalCollection.subscript(_:Self.Index)*/
            class_184.prototype.subscript$get = function ($info, i) {
                return this[i];
            };
            /*Swift.(file).UTF8View.description*/ /*
            description$get() {
            return this.description
            }
            get description() { return this.description$get() }*/ ;
            /*Swift.(file).UTF8View.debugDescription*/ /*
            debugDescription$get() {
            return this.debugDescription
            }
            get debugDescription() { return this.debugDescription$get() }*/ ;
            /*Swift.(file).UTF8View.count*/ /*
            count$get() {
            return this.count
            }
            get count() { return this.count$get() }*/ ;
            /*Swift.(file).UTF8View.customMirror*/ /*
            customMirror$get() {
            return this.customMirror
            }
            get customMirror() { return this.customMirror$get() }*/ ;
            /*Swift.(file).UTF8View.subscript(_:Range<String.UTF8View.Index>)*/
            /*Swift.(file).Collection.subscript(_:Range<Self.Index>)*/
            /*Swift.(file).BidirectionalCollection.subscript(_:Range<Self.Index>)*/
            class_184.prototype.subcriptRange$get = function ($info, r) {
                return this[r];
            };
            /*Swift.(file).UTF8View.withContiguousStorageIfAvailable(_:(UnsafeBufferPointer<String.UTF8View.Element>) throws -> R)*/
            /*Swift.(file).Sequence.withContiguousStorageIfAvailable(_:(UnsafeBufferPointer<Self.Element>) throws -> R)*/
            class_184.prototype.withContiguousStorageIfAvailable = function ($info, body) {
            };
            /*Swift.(file).UTF8View.customPlaygroundQuickLook*/ /*
            customPlaygroundQuickLook$get() {
            return this.customPlaygroundQuickLook
            }
            get customPlaygroundQuickLook() { return this.customPlaygroundQuickLook$get() }*/ ;
            return class_184;
        }()),
        _160.$struct = true,
        _160.$infoAddress = '0x7fb8512a1120',
        _160);
    return MIO_Mixin_String;
}());
if (typeof Equatable$implementation != 'undefined')
    _mixin(MIO_Mixin_String.Index, Equatable$implementation, false);
if (typeof Comparable$implementation != 'undefined')
    _mixin(MIO_Mixin_String.Index, Comparable$implementation, false);
if (typeof Hashable$implementation != 'undefined')
    _mixin(MIO_Mixin_String.Index, Hashable$implementation, false);
if (typeof IteratorProtocol$implementation != 'undefined')
    _mixin(MIO_Mixin_String.Iterator, IteratorProtocol$implementation, false);
if (typeof IteratorProtocol$implementation != 'undefined')
    _mixin(MIO_Mixin_String.UnicodeScalarView.Iterator, IteratorProtocol$implementation, false);
if (typeof BidirectionalCollection$implementation != 'undefined')
    _mixin(MIO_Mixin_String.UnicodeScalarView, BidirectionalCollection$implementation, false);
if (typeof CustomStringConvertible$implementation != 'undefined')
    _mixin(MIO_Mixin_String.UnicodeScalarView, CustomStringConvertible$implementation, false);
if (typeof CustomDebugStringConvertible$implementation != 'undefined')
    _mixin(MIO_Mixin_String.UnicodeScalarView, CustomDebugStringConvertible$implementation, false);
if (typeof RangeReplaceableCollection$implementation != 'undefined')
    _mixin(MIO_Mixin_String.UnicodeScalarView, RangeReplaceableCollection$implementation, false);
if (typeof CustomReflectable$implementation != 'undefined')
    _mixin(MIO_Mixin_String.UnicodeScalarView, CustomReflectable$implementation, false);
if (typeof _CustomPlaygroundQuickLookable$implementation != 'undefined')
    _mixin(MIO_Mixin_String.UnicodeScalarView, _CustomPlaygroundQuickLookable$implementation, false);
if (typeof IteratorProtocol$implementation != 'undefined')
    _mixin(MIO_Mixin_String.UTF16View.Iterator, IteratorProtocol$implementation, false);
if (typeof BidirectionalCollection$implementation != 'undefined')
    _mixin(MIO_Mixin_String.UTF16View, BidirectionalCollection$implementation, false);
if (typeof CustomStringConvertible$implementation != 'undefined')
    _mixin(MIO_Mixin_String.UTF16View, CustomStringConvertible$implementation, false);
if (typeof CustomDebugStringConvertible$implementation != 'undefined')
    _mixin(MIO_Mixin_String.UTF16View, CustomDebugStringConvertible$implementation, false);
if (typeof CustomReflectable$implementation != 'undefined')
    _mixin(MIO_Mixin_String.UTF16View, CustomReflectable$implementation, false);
if (typeof _CustomPlaygroundQuickLookable$implementation != 'undefined')
    _mixin(MIO_Mixin_String.UTF16View, _CustomPlaygroundQuickLookable$implementation, false);
if (typeof BidirectionalCollection$implementation != 'undefined')
    _mixin(MIO_Mixin_String.UTF8View, BidirectionalCollection$implementation, false);
if (typeof CustomStringConvertible$implementation != 'undefined')
    _mixin(MIO_Mixin_String.UTF8View, CustomStringConvertible$implementation, false);
if (typeof CustomDebugStringConvertible$implementation != 'undefined')
    _mixin(MIO_Mixin_String.UTF8View, CustomDebugStringConvertible$implementation, false);
if (typeof CustomReflectable$implementation != 'undefined')
    _mixin(MIO_Mixin_String.UTF8View, CustomReflectable$implementation, false);
if (typeof _CustomPlaygroundQuickLookable$implementation != 'undefined')
    _mixin(MIO_Mixin_String.UTF8View, _CustomPlaygroundQuickLookable$implementation, false);
if (typeof Equatable$implementation != 'undefined')
    _mixin(MIO_Mixin_String, Equatable$implementation, false);
if (typeof _ExpressibleByBuiltinStringLiteral$implementation != 'undefined')
    _mixin(MIO_Mixin_String, _ExpressibleByBuiltinStringLiteral$implementation, false);
if (typeof Codable$implementation != 'undefined')
    _mixin(MIO_Mixin_String, Codable$implementation, false);
if (typeof _HasContiguousBytes$implementation != 'undefined')
    _mixin(MIO_Mixin_String, _HasContiguousBytes$implementation, false);
if (typeof CustomReflectable$implementation != 'undefined')
    _mixin(MIO_Mixin_String, CustomReflectable$implementation, false);
if (typeof _CustomPlaygroundQuickLookable$implementation != 'undefined')
    _mixin(MIO_Mixin_String, _CustomPlaygroundQuickLookable$implementation, false);
if (typeof TextOutputStream$implementation != 'undefined')
    _mixin(MIO_Mixin_String, TextOutputStream$implementation, false);
if (typeof TextOutputStreamable$implementation != 'undefined')
    _mixin(MIO_Mixin_String, TextOutputStreamable$implementation, false);
if (typeof Hashable$implementation != 'undefined')
    _mixin(MIO_Mixin_String, Hashable$implementation, false);
if (typeof _ExpressibleByBuiltinUnicodeScalarLiteral$implementation != 'undefined')
    _mixin(MIO_Mixin_String, _ExpressibleByBuiltinUnicodeScalarLiteral$implementation, false);
if (typeof _ExpressibleByBuiltinExtendedGraphemeClusterLiteral$implementation != 'undefined')
    _mixin(MIO_Mixin_String, _ExpressibleByBuiltinExtendedGraphemeClusterLiteral$implementation, false);
if (typeof ExpressibleByStringLiteral$implementation != 'undefined')
    _mixin(MIO_Mixin_String, ExpressibleByStringLiteral$implementation, false);
if (typeof CustomDebugStringConvertible$implementation != 'undefined')
    _mixin(MIO_Mixin_String, CustomDebugStringConvertible$implementation, false);
if (typeof CustomStringConvertible$implementation != 'undefined')
    _mixin(MIO_Mixin_String, CustomStringConvertible$implementation, false);
if (typeof BidirectionalCollection$implementation != 'undefined')
    _mixin(MIO_Mixin_String, BidirectionalCollection$implementation, false);
if (typeof Comparable$implementation != 'undefined')
    _mixin(MIO_Mixin_String, Comparable$implementation, false);
if (typeof StringProtocol$implementation != 'undefined')
    _mixin(MIO_Mixin_String, StringProtocol$implementation, false);
if (typeof RangeReplaceableCollection$implementation != 'undefined')
    _mixin(MIO_Mixin_String, RangeReplaceableCollection$implementation, false);
if (typeof MirrorPath$implementation != 'undefined')
    _mixin(MIO_Mixin_String, MirrorPath$implementation, false);
_mixin(String, MIO_Mixin_String, true);
var _SliceBuffer = /** @class */ (function () {
    function _SliceBuffer() {
    }
    /*Swift.(file)._SliceBuffer.subscriptBaseAddress*/ /*
    readonly subscriptBaseAddress$get() {
    return this.subscriptBaseAddress
    }
    readonly get subscriptBaseAddress() { return this.subscriptBaseAddress$get() }*/ ;
    /*Swift.(file)._SliceBuffer.startIndex*/ /*
    startIndex$get() {
    return this.startIndex
    }
    get startIndex() { return this.startIndex$get() }*/ ;
    /*Swift.(file)._SliceBuffer.endIndexAndFlags*/ /*
    endIndexAndFlags$get() {
    return this.endIndexAndFlags
    }
    get endIndexAndFlags() { return this.endIndexAndFlags$get() }*/ ;
    /*Swift.(file)._SliceBuffer.init(owner:AnyObject,subscriptBaseAddress:UnsafeMutablePointer<Element>,startIndex:Int,endIndexAndFlags:UInt)*/
    /*Swift.(file)._SliceBuffer.init(owner:AnyObject,subscriptBaseAddress:UnsafeMutablePointer<Element>,startIndex:Int,endIndexAndFlags:UInt)*/
    _SliceBuffer.prototype.initOwnerAnyObjectSubscriptBaseAddressUnsafeMutablePointerStartIndexIntEndIndexAndFlagsUInt = function ($info, owner, subscriptBaseAddress, startIndex, endIndexAndFlags) {
    };
    /*Swift.(file)._SliceBuffer.init(owner:AnyObject,subscriptBaseAddress:UnsafeMutablePointer<Element>,indices:Range<Int>,hasNativeBuffer:Bool)*/
    /*Swift.(file)._SliceBuffer.init(owner:AnyObject,subscriptBaseAddress:UnsafeMutablePointer<Element>,indices:Range<Int>,hasNativeBuffer:Bool)*/
    _SliceBuffer.prototype.initOwnerAnyObjectSubscriptBaseAddressUnsafeMutablePointerIndicesRangeHasNativeBufferBool = function ($info, owner, subscriptBaseAddress, indices, hasNativeBuffer) {
    };
    /*Swift.(file)._SliceBuffer.init()*/
    /*Swift.(file)._ArrayBufferProtocol.init()*/
    _SliceBuffer.prototype.init = function ($info) {
    };
    /*Swift.(file)._SliceBuffer.init(_buffer:_SliceBuffer<Element>.NativeBuffer,shiftedToStartIndex:Int)*/
    /*Swift.(file)._ArrayBufferProtocol.init(_buffer:_ContiguousArrayBuffer<Self.Element>,shiftedToStartIndex:Int)*/
    _SliceBuffer.prototype.init_buffer_ContiguousArrayBufferShiftedToStartIndexInt = function ($info, buffer, shiftedToStartIndex) {
    };
    /*Swift.(file)._SliceBuffer.nativeBuffer*/ /*
    nativeBuffer$get() {
    return this.nativeBuffer
    }
    get nativeBuffer() { return this.nativeBuffer$get() }*/ ;
    /*Swift.(file)._SliceBuffer.nativeOwner*/ /*
    nativeOwner$get() {
    return this.nativeOwner
    }
    get nativeOwner() { return this.nativeOwner$get() }*/ ;
    /*Swift.(file)._SliceBuffer.replaceSubrange(_:Range<Int>,with:Int,elementsOf:C)*/
    /*Swift.(file)._ArrayBufferProtocol.replaceSubrange(_:Range<Int>,with:Int,elementsOf:C)*/
    _SliceBuffer.prototype.replaceSubrangeWithElementsOf = function ($info, subrange, insertCount, newValues) {
    };
    /*Swift.(file)._SliceBuffer.identity*/ /*
    identity$get() {
    return this.identity
    }
    get identity() { return this.identity$get() }*/ ;
    /*Swift.(file)._SliceBuffer.firstElementAddress*/ /*
    firstElementAddress$get() {
    return this.firstElementAddress
    }
    get firstElementAddress() { return this.firstElementAddress$get() }*/ ;
    /*Swift.(file)._SliceBuffer.firstElementAddressIfContiguous*/ /*
    firstElementAddressIfContiguous$get() {
    return this.firstElementAddressIfContiguous
    }
    get firstElementAddressIfContiguous() { return this.firstElementAddressIfContiguous$get() }*/ ;
    /*Swift.(file)._SliceBuffer.requestUniqueMutableBackingBuffer(minimumCapacity:Int)*/
    /*Swift.(file)._ArrayBufferProtocol.requestUniqueMutableBackingBuffer(minimumCapacity:Int)*/
    _SliceBuffer.prototype.requestUniqueMutableBackingBufferMinimumCapacity = function ($info, minimumCapacity) {
    };
    /*Swift.(file)._SliceBuffer.isMutableAndUniquelyReferenced()*/
    /*Swift.(file)._ArrayBufferProtocol.isMutableAndUniquelyReferenced()*/
    _SliceBuffer.prototype.isMutableAndUniquelyReferenced = function ($info) {
    };
    /*Swift.(file)._SliceBuffer.requestNativeBuffer()*/
    /*Swift.(file)._ArrayBufferProtocol.requestNativeBuffer()*/
    _SliceBuffer.prototype.requestNativeBuffer = function ($info) {
    };
    /*Swift.(file)._SliceBuffer.arrayPropertyIsNativeTypeChecked*/ /*
    arrayPropertyIsNativeTypeChecked$get() {
    return this.arrayPropertyIsNativeTypeChecked
    }
    get arrayPropertyIsNativeTypeChecked() { return this.arrayPropertyIsNativeTypeChecked$get() }*/ ;
    /*Swift.(file)._SliceBuffer.count*/ /*
    count$get() {
    return this.count
    }
    get count() { return this.count$get() }*/ ;
    /*Swift.(file)._SliceBuffer.capacity*/ /*
    capacity$get() {
    return this.capacity
    }
    get capacity() { return this.capacity$get() }*/ ;
    /*Swift.(file)._SliceBuffer.isUniquelyReferenced()*/
    /*Swift.(file)._SliceBuffer.isUniquelyReferenced()*/
    _SliceBuffer.prototype.isUniquelyReferenced = function ($info) {
    };
    /*Swift.(file)._SliceBuffer.getElement(_:Int)*/
    /*Swift.(file)._SliceBuffer.getElement(_:Int)*/
    _SliceBuffer.prototype.getElement = function ($info, i) {
    };
    /*Swift.(file)._SliceBuffer.subscript(_:Int)*/
    /*Swift.(file).MutableCollection.subscript(_:Self.Index)*/
    /*Swift.(file).RandomAccessCollection.subscript(_:Self.Index)*/
    /*Swift.(file).Collection.subscript(_:Self.Index)*/
    /*Swift.(file).BidirectionalCollection.subscript(_:Self.Index)*/
    _SliceBuffer.prototype.subscript$get = function ($info, position) {
        return this[position];
    }; /*Swift.(file)._SliceBuffer.subscript(_:Int)*/
    /*Swift.(file).MutableCollection.subscript(_:Self.Index)*/
    /*Swift.(file).RandomAccessCollection.subscript(_:Self.Index)*/
    /*Swift.(file).Collection.subscript(_:Self.Index)*/
    /*Swift.(file).BidirectionalCollection.subscript(_:Self.Index)*/
    _SliceBuffer.prototype.subscript$set = function ($info, newValue, position) {
        this[position] = newValue;
    };
    /*Swift.(file)._SliceBuffer.subscript(_:Range<Int>)*/
    /*Swift.(file).MutableCollection.subscript(_:Range<Self.Index>)*/
    /*Swift.(file).RandomAccessCollection.subscript(_:Range<Self.Index>)*/
    /*Swift.(file).Collection.subscript(_:Range<Self.Index>)*/
    /*Swift.(file).BidirectionalCollection.subscript(_:Range<Self.Index>)*/
    /*Swift.(file)._ArrayBufferProtocol.subscript(_:Range<Int>)*/
    _SliceBuffer.prototype.subcriptRange$get = function ($info, bounds) {
        return this[bounds];
    };
    _SliceBuffer.prototype.subscript$get = function ($info, bounds) {
        this.subcriptRange$get.apply(this, arguments);
    }; /*Swift.(file)._SliceBuffer.subscript(_:Range<Int>)*/
    /*Swift.(file).MutableCollection.subscript(_:Range<Self.Index>)*/
    /*Swift.(file).RandomAccessCollection.subscript(_:Range<Self.Index>)*/
    /*Swift.(file).Collection.subscript(_:Range<Self.Index>)*/
    /*Swift.(file).BidirectionalCollection.subscript(_:Range<Self.Index>)*/
    /*Swift.(file)._ArrayBufferProtocol.subscript(_:Range<Int>)*/
    _SliceBuffer.prototype.subcriptRange$set = function ($info, newValue, bounds) {
        this[bounds] = newValue;
    };
    _SliceBuffer.prototype.subscript$set = function ($info, newValue, bounds) {
        this.subcriptRange$set.apply(this, arguments);
    };
    /*Swift.(file)._SliceBuffer.endIndex*/ /*
    endIndex$get() {
    return this.endIndex
    }
    get endIndex() { return this.endIndex$get() }*/ ;
    /*Swift.(file)._SliceBuffer.withUnsafeBufferPointer(_:(UnsafeBufferPointer<Element>) throws -> R)*/
    /*Swift.(file)._ArrayBufferProtocol.withUnsafeBufferPointer(_:(UnsafeBufferPointer<Self.Element>) throws -> R)*/
    _SliceBuffer.prototype.withUnsafeBufferPointer = function ($info, body) {
    };
    /*Swift.(file)._SliceBuffer.withUnsafeMutableBufferPointer(_:(UnsafeMutableBufferPointer<Element>) throws -> R)*/
    /*Swift.(file)._ArrayBufferProtocol.withUnsafeMutableBufferPointer(_:(UnsafeMutableBufferPointer<Self.Element>) throws -> R)*/
    _SliceBuffer.prototype.withUnsafeMutableBufferPointer = function ($info, body) {
    };
    /*Swift.(file)._SliceBuffer.unsafeCastElements(to:T.Type)*/
    /*Swift.(file)._SliceBuffer.unsafeCastElements(to:T.Type)*/
    _SliceBuffer.prototype.unsafeCastElementsTo = function ($info, type) {
    };
    _SliceBuffer.$struct = true;
    _SliceBuffer.$infoAddress = '0x7fb851304750';
    return _SliceBuffer;
}());
if (typeof _ArrayBufferProtocol$implementation != 'undefined')
    _mixin(_SliceBuffer, _ArrayBufferProtocol$implementation, false);
if (typeof RandomAccessCollection$implementation != 'undefined')
    _mixin(_SliceBuffer, RandomAccessCollection$implementation, false);
var _ArrayBuffer = /** @class */ (function () {
    function _ArrayBuffer() {
    }
    /*Swift.(file)._ArrayBuffer.init()*/
    /*Swift.(file)._ArrayBufferProtocol.init()*/
    _ArrayBuffer.prototype.init = function ($info) {
    };
    /*Swift.(file)._ArrayBuffer.init(nsArray:AnyObject)*/
    /*Swift.(file)._ArrayBuffer.init(nsArray:AnyObject)*/
    _ArrayBuffer.prototype.initNsArrayAnyObject = function ($info, nsArray) {
        return nsArray;
    };
    /*Swift.(file)._ArrayBuffer.cast(toBufferOf:U.Type)*/
    /*Swift.(file)._ArrayBuffer.cast(toBufferOf:U.Type)*/
    _ArrayBuffer.prototype.castToBufferOf = function ($info, _) {
    };
    /*Swift.(file)._ArrayBuffer.downcast(toBufferWithDeferredTypeCheckOf:U.Type)*/
    /*Swift.(file)._ArrayBuffer.downcast(toBufferWithDeferredTypeCheckOf:U.Type)*/
    _ArrayBuffer.prototype.downcastToBufferWithDeferredTypeCheckOf = function ($info, _) {
    };
    /*Swift.(file)._ArrayBuffer.needsElementTypeCheck*/ /*
    needsElementTypeCheck$get() {
    return this.needsElementTypeCheck
    }
    get needsElementTypeCheck() { return this.needsElementTypeCheck$get() }*/ ;
    /*Swift.(file)._ArrayBuffer.init(storage:_ArrayBridgeStorage)*/
    /*Swift.(file)._ArrayBuffer.init(storage:_ArrayBridgeStorage)*/
    _ArrayBuffer.prototype.initStorage_ArrayBridgeStorage = function ($info, storage) {
        return storage;
    };
    /*Swift.(file)._ArrayBuffer.init(_buffer:_ArrayBuffer<Element>.NativeBuffer,shiftedToStartIndex:Int)*/
    /*Swift.(file)._ArrayBufferProtocol.init(_buffer:_ContiguousArrayBuffer<Self.Element>,shiftedToStartIndex:Int)*/
    _ArrayBuffer.prototype.init_buffer_ContiguousArrayBufferShiftedToStartIndexInt = function ($info, source, shiftedToStartIndex) {
    };
    /*Swift.(file)._ArrayBuffer.arrayPropertyIsNativeTypeChecked*/ /*
    arrayPropertyIsNativeTypeChecked$get() {
    return this.arrayPropertyIsNativeTypeChecked
    }
    get arrayPropertyIsNativeTypeChecked() { return this.arrayPropertyIsNativeTypeChecked$get() }*/ ;
    /*Swift.(file)._ArrayBuffer.isUniquelyReferenced()*/
    /*Swift.(file)._ArrayBuffer.isUniquelyReferenced()*/
    _ArrayBuffer.prototype.isUniquelyReferenced = function ($info) {
    };
    /*Swift.(file)._ArrayBuffer.requestUniqueMutableBackingBuffer(minimumCapacity:Int)*/
    /*Swift.(file)._ArrayBufferProtocol.requestUniqueMutableBackingBuffer(minimumCapacity:Int)*/
    _ArrayBuffer.prototype.requestUniqueMutableBackingBufferMinimumCapacity = function ($info, minimumCapacity) {
    };
    /*Swift.(file)._ArrayBuffer.isMutableAndUniquelyReferenced()*/
    /*Swift.(file)._ArrayBufferProtocol.isMutableAndUniquelyReferenced()*/
    _ArrayBuffer.prototype.isMutableAndUniquelyReferenced = function ($info) {
    };
    /*Swift.(file)._ArrayBuffer.requestNativeBuffer()*/
    /*Swift.(file)._ArrayBufferProtocol.requestNativeBuffer()*/
    _ArrayBuffer.prototype.requestNativeBuffer = function ($info) {
    };
    /*Swift.(file)._ArrayBuffer.subscript(_:Range<Int>)*/
    /*Swift.(file)._ArrayBufferProtocol.subscript(_:Range<Int>)*/
    /*Swift.(file).MutableCollection.subscript(_:Range<Self.Index>)*/
    /*Swift.(file).RandomAccessCollection.subscript(_:Range<Self.Index>)*/
    /*Swift.(file).Collection.subscript(_:Range<Self.Index>)*/
    /*Swift.(file).BidirectionalCollection.subscript(_:Range<Self.Index>)*/
    _ArrayBuffer.prototype.subscript$get = function ($info, bounds) {
        return this[bounds];
    };
    _ArrayBuffer.prototype.subcriptRange$get = function ($info, bounds) {
        this.subscript$get.apply(this, arguments);
    }; /*Swift.(file)._ArrayBuffer.subscript(_:Range<Int>)*/
    /*Swift.(file)._ArrayBufferProtocol.subscript(_:Range<Int>)*/
    /*Swift.(file).MutableCollection.subscript(_:Range<Self.Index>)*/
    /*Swift.(file).RandomAccessCollection.subscript(_:Range<Self.Index>)*/
    /*Swift.(file).Collection.subscript(_:Range<Self.Index>)*/
    /*Swift.(file).BidirectionalCollection.subscript(_:Range<Self.Index>)*/
    _ArrayBuffer.prototype.subscript$set = function ($info, newValue, bounds) {
        this[bounds] = newValue;
    };
    _ArrayBuffer.prototype.subcriptRange$set = function ($info, newValue, bounds) {
        this.subscript$set.apply(this, arguments);
    };
    /*Swift.(file)._ArrayBuffer.firstElementAddress*/ /*
    firstElementAddress$get() {
    return this.firstElementAddress
    }
    get firstElementAddress() { return this.firstElementAddress$get() }*/ ;
    /*Swift.(file)._ArrayBuffer.firstElementAddressIfContiguous*/ /*
    firstElementAddressIfContiguous$get() {
    return this.firstElementAddressIfContiguous
    }
    get firstElementAddressIfContiguous() { return this.firstElementAddressIfContiguous$get() }*/ ;
    /*Swift.(file)._ArrayBuffer.count*/ /*
    count$get() {
    return this.count
    }
    get count() { return this.count$get() }*/ ;
    /*Swift.(file)._ArrayBuffer.capacity*/ /*
    capacity$get() {
    return this.capacity
    }
    get capacity() { return this.capacity$get() }*/ ;
    /*Swift.(file)._ArrayBuffer.getElement(_:Int,wasNativeTypeChecked:Bool)*/
    /*Swift.(file)._ArrayBuffer.getElement(_:Int,wasNativeTypeChecked:Bool)*/
    _ArrayBuffer.prototype.getElementWasNativeTypeChecked = function ($info, i, wasNativeTypeChecked) {
    };
    /*Swift.(file)._ArrayBuffer.subscript(_:Int)*/
    /*Swift.(file).MutableCollection.subscript(_:Self.Index)*/
    /*Swift.(file).RandomAccessCollection.subscript(_:Self.Index)*/
    /*Swift.(file).Collection.subscript(_:Self.Index)*/
    /*Swift.(file).BidirectionalCollection.subscript(_:Self.Index)*/
    _ArrayBuffer.prototype.subscript$get = function ($info, i) {
        return this[i];
    }; /*Swift.(file)._ArrayBuffer.subscript(_:Int)*/
    /*Swift.(file).MutableCollection.subscript(_:Self.Index)*/
    /*Swift.(file).RandomAccessCollection.subscript(_:Self.Index)*/
    /*Swift.(file).Collection.subscript(_:Self.Index)*/
    /*Swift.(file).BidirectionalCollection.subscript(_:Self.Index)*/
    _ArrayBuffer.prototype.subscript$set = function ($info, newValue, i) {
        this[i] = newValue;
    };
    /*Swift.(file)._ArrayBuffer.withUnsafeBufferPointer(_:(UnsafeBufferPointer<Element>) throws -> R)*/
    /*Swift.(file)._ArrayBufferProtocol.withUnsafeBufferPointer(_:(UnsafeBufferPointer<Self.Element>) throws -> R)*/
    _ArrayBuffer.prototype.withUnsafeBufferPointer = function ($info, body) {
    };
    /*Swift.(file)._ArrayBuffer.withUnsafeMutableBufferPointer(_:(UnsafeMutableBufferPointer<Element>) throws -> R)*/
    /*Swift.(file)._ArrayBufferProtocol.withUnsafeMutableBufferPointer(_:(UnsafeMutableBufferPointer<Self.Element>) throws -> R)*/
    _ArrayBuffer.prototype.withUnsafeMutableBufferPointer = function ($info, body) {
    };
    /*Swift.(file)._ArrayBuffer.owner*/ /*
    owner$get() {
    return this.owner
    }
    get owner() { return this.owner$get() }*/ ;
    /*Swift.(file)._ArrayBuffer.nativeOwner*/ /*
    nativeOwner$get() {
    return this.nativeOwner
    }
    get nativeOwner() { return this.nativeOwner$get() }*/ ;
    /*Swift.(file)._ArrayBuffer.identity*/ /*
    identity$get() {
    return this.identity
    }
    get identity() { return this.identity$get() }*/ ;
    /*Swift.(file)._ArrayBuffer.startIndex*/ /*
    startIndex$get() {
    return this.startIndex
    }
    get startIndex() { return this.startIndex$get() }*/ ;
    /*Swift.(file)._ArrayBuffer.endIndex*/ /*
    endIndex$get() {
    return this.endIndex
    }
    get endIndex() { return this.endIndex$get() }*/ ;
    _ArrayBuffer.$struct = true;
    _ArrayBuffer.$infoAddress = '0x7fb8511e84a8';
    return _ArrayBuffer;
}());
if (typeof _ArrayBufferProtocol$implementation != 'undefined')
    _mixin(_ArrayBuffer, _ArrayBufferProtocol$implementation, false);
var FloatingPointSign = /** @class */ (function () {
    function FloatingPointSign() {
    }
    Object.defineProperty(FloatingPointSign, "plus", {
        get: function () { return Object.assign(new FloatingPointSign(), __assign({ rawValue: "plus" }, Array.from(arguments).slice(1))); },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(FloatingPointSign, "minus", {
        get: function () { return Object.assign(new FloatingPointSign(), __assign({ rawValue: "minus" }, Array.from(arguments).slice(1))); },
        enumerable: true,
        configurable: true
    });
    /*Swift.(file).FloatingPointSign.init(rawValue:Int)*/
    /*Swift.(file).RawRepresentable.init(rawValue:Self.RawValue)*/
    FloatingPointSign.prototype.initRawValue = function ($info, rawValue) {
        return rawValue;
    };
    /*Swift.(file).FloatingPointSign.rawValue*/ /*
    rawValue$get() {
    return this.rawValue
    }
    get rawValue() { return this.rawValue$get() }*/ ;
    /*Swift.(file).FloatingPointSign.==infix(_:FloatingPointSign,_:FloatingPointSign)*/
    /*Swift.(file).Equatable.==infix(_:Self,_:Self)*/
    FloatingPointSign.infix_61_61 = function ($info, a, b) {
        return a == b;
    };
    /*Swift.(file).FloatingPointSign.hashValue*/ /*
    hashValue$get() {
    return this.hashValue
    }
    get hashValue() { return this.hashValue$get() }*/ ;
    /*Swift.(file).FloatingPointSign.hash(into:Hasher)*/
    /*Swift.(file).Hashable.hash(into:Hasher)*/
    FloatingPointSign.prototype.hashInto = function ($info, hasher$inout) {
    };
    FloatingPointSign.$infoAddress = '0x7fb85181f2e8';
    return FloatingPointSign;
}());
var NSObject = /** @class */ (function () {
    function NSObject() {
    }
    /*ObjectiveC.(file).NSObject.load()*/
    /*ObjectiveC.(file).NSObject.load()*/
    NSObject.load = function ($info) {
    };
    /*ObjectiveC.(file).NSObject.initialize()*/
    /*ObjectiveC.(file).NSObject.initialize()*/
    NSObject.initialize = function ($info) {
    };
    /*ObjectiveC.(file).NSObject.init()*/
    /*ObjectiveC.(file).NSObject.init()*/
    NSObject.prototype.init = function ($info) {
    };
    /*ObjectiveC.(file).NSObject.alloc(with:NSZone?)*/
    /*ObjectiveC.(file).NSObject.alloc(with:NSZone?)*/
    NSObject.allocWith = function ($info, zone) {
    };
    /*ObjectiveC.(file).NSObject.allocWithZone(_:NSZone?)*/
    /*ObjectiveC.(file).NSObject.allocWithZone(_:NSZone?)*/
    NSObject.allocWithZone = function ($info, zone) {
    };
    /*ObjectiveC.(file).NSObject.alloc()*/
    /*ObjectiveC.(file).NSObject.alloc()*/
    NSObject.alloc = function ($info) {
    };
    /*ObjectiveC.(file).NSObject.finalize()*/
    /*ObjectiveC.(file).NSObject.finalize()*/
    NSObject.finalize = function ($info) {
    };
    /*ObjectiveC.(file).NSObject.finalize()*/
    /*ObjectiveC.(file).NSObject.finalize()*/
    NSObject.prototype.finalize = function ($info) {
    };
    /*ObjectiveC.(file).NSObject.copy()*/
    /*ObjectiveC.(file).NSObject.copy()*/
    NSObject.copy = function ($info) {
    };
    /*ObjectiveC.(file).NSObject.copy()*/
    /*ObjectiveC.(file).NSObject.copy()*/
    NSObject.prototype.copy = function ($info) {
    };
    /*ObjectiveC.(file).NSObject.mutableCopy()*/
    /*ObjectiveC.(file).NSObject.mutableCopy()*/
    NSObject.mutableCopy = function ($info) {
    };
    /*ObjectiveC.(file).NSObject.mutableCopy()*/
    /*ObjectiveC.(file).NSObject.mutableCopy()*/
    NSObject.prototype.mutableCopy = function ($info) {
    };
    /*ObjectiveC.(file).NSObject.copy(with:NSZone?)*/
    /*ObjectiveC.(file).NSObject.copy(with:NSZone?)*/
    NSObject.copyWith = function ($info, zone) {
    };
    /*ObjectiveC.(file).NSObject.copyWithZone(_:NSZone?)*/
    /*ObjectiveC.(file).NSObject.copyWithZone(_:NSZone?)*/
    NSObject.copyWithZone = function ($info, zone) {
    };
    /*ObjectiveC.(file).NSObject.mutableCopy(with:NSZone?)*/
    /*ObjectiveC.(file).NSObject.mutableCopy(with:NSZone?)*/
    NSObject.mutableCopyWith = function ($info, zone) {
    };
    /*ObjectiveC.(file).NSObject.mutableCopyWithZone(_:NSZone?)*/
    /*ObjectiveC.(file).NSObject.mutableCopyWithZone(_:NSZone?)*/
    NSObject.mutableCopyWithZone = function ($info, zone) {
    };
    /*ObjectiveC.(file).NSObject.instancesRespond(to:Selector?)*/
    /*ObjectiveC.(file).NSObject.instancesRespond(to:Selector?)*/
    NSObject.instancesRespondTo = function ($info, aSelector) {
    };
    /*ObjectiveC.(file).NSObject.instancesRespondToSelector(_:Selector?)*/
    /*ObjectiveC.(file).NSObject.instancesRespondToSelector(_:Selector?)*/
    NSObject.instancesRespondToSelector = function ($info, aSelector) {
    };
    /*ObjectiveC.(file).NSObject.conforms(to:Protocol)*/
    /*ObjectiveC.(file).NSObject.conforms(to:Protocol)*/
    NSObject.conformsTo = function ($info, protocol) {
    };
    /*ObjectiveC.(file).NSObject.conformsToProtocol(_:Protocol)*/
    /*ObjectiveC.(file).NSObject.conformsToProtocol(_:Protocol)*/
    NSObject.conformsToProtocol = function ($info, protocol) {
    };
    /*ObjectiveC.(file).NSObject.method(for:Selector?)*/
    /*ObjectiveC.(file).NSObject.method(for:Selector?)*/
    NSObject.methodFor = function ($info, aSelector) {
    };
    /*ObjectiveC.(file).NSObject.method(for:Selector?)*/
    /*ObjectiveC.(file).NSObject.method(for:Selector?)*/
    NSObject.prototype.methodFor = function ($info, aSelector) {
    };
    /*ObjectiveC.(file).NSObject.methodForSelector(_:Selector?)*/
    /*ObjectiveC.(file).NSObject.methodForSelector(_:Selector?)*/
    NSObject.methodForSelector = function ($info, aSelector) {
    };
    /*ObjectiveC.(file).NSObject.methodForSelector(_:Selector?)*/
    /*ObjectiveC.(file).NSObject.methodForSelector(_:Selector?)*/
    NSObject.prototype.methodForSelector = function ($info, aSelector) {
    };
    /*ObjectiveC.(file).NSObject.instanceMethod(for:Selector?)*/
    /*ObjectiveC.(file).NSObject.instanceMethod(for:Selector?)*/
    NSObject.instanceMethodFor = function ($info, aSelector) {
    };
    /*ObjectiveC.(file).NSObject.instanceMethodForSelector(_:Selector?)*/
    /*ObjectiveC.(file).NSObject.instanceMethodForSelector(_:Selector?)*/
    NSObject.instanceMethodForSelector = function ($info, aSelector) {
    };
    /*ObjectiveC.(file).NSObject.doesNotRecognizeSelector(_:Selector?)*/
    /*ObjectiveC.(file).NSObject.doesNotRecognizeSelector(_:Selector?)*/
    NSObject.doesNotRecognizeSelector = function ($info, aSelector) {
    };
    /*ObjectiveC.(file).NSObject.doesNotRecognizeSelector(_:Selector?)*/
    /*ObjectiveC.(file).NSObject.doesNotRecognizeSelector(_:Selector?)*/
    NSObject.prototype.doesNotRecognizeSelector = function ($info, aSelector) {
    };
    /*ObjectiveC.(file).NSObject.forwardingTarget(for:Selector?)*/
    /*ObjectiveC.(file).NSObject.forwardingTarget(for:Selector?)*/
    NSObject.forwardingTargetFor = function ($info, aSelector) {
    };
    /*ObjectiveC.(file).NSObject.forwardingTarget(for:Selector?)*/
    /*ObjectiveC.(file).NSObject.forwardingTarget(for:Selector?)*/
    NSObject.prototype.forwardingTargetFor = function ($info, aSelector) {
    };
    /*ObjectiveC.(file).NSObject.forwardingTargetForSelector(_:Selector?)*/
    /*ObjectiveC.(file).NSObject.forwardingTargetForSelector(_:Selector?)*/
    NSObject.forwardingTargetForSelector = function ($info, aSelector) {
    };
    /*ObjectiveC.(file).NSObject.forwardingTargetForSelector(_:Selector?)*/
    /*ObjectiveC.(file).NSObject.forwardingTargetForSelector(_:Selector?)*/
    NSObject.prototype.forwardingTargetForSelector = function ($info, aSelector) {
    };
    /*ObjectiveC.(file).NSObject.forwardInvocation(_:NSInvocation?)*/
    /*ObjectiveC.(file).NSObject.forwardInvocation(_:NSInvocation?)*/
    NSObject.forwardInvocation = function ($info, anInvocation) {
    };
    /*ObjectiveC.(file).NSObject.forwardInvocation(_:NSInvocation?)*/
    /*ObjectiveC.(file).NSObject.forwardInvocation(_:NSInvocation?)*/
    NSObject.prototype.forwardInvocation = function ($info, anInvocation) {
    };
    /*ObjectiveC.(file).NSObject.methodSignature(for:Selector?)*/
    /*ObjectiveC.(file).NSObject.methodSignature(for:Selector?)*/
    NSObject.methodSignatureFor = function ($info, aSelector) {
    };
    /*ObjectiveC.(file).NSObject.methodSignature(for:Selector?)*/
    /*ObjectiveC.(file).NSObject.methodSignature(for:Selector?)*/
    NSObject.prototype.methodSignatureFor = function ($info, aSelector) {
    };
    /*ObjectiveC.(file).NSObject.methodSignatureForSelector(_:Selector?)*/
    /*ObjectiveC.(file).NSObject.methodSignatureForSelector(_:Selector?)*/
    NSObject.methodSignatureForSelector = function ($info, aSelector) {
    };
    /*ObjectiveC.(file).NSObject.methodSignatureForSelector(_:Selector?)*/
    /*ObjectiveC.(file).NSObject.methodSignatureForSelector(_:Selector?)*/
    NSObject.prototype.methodSignatureForSelector = function ($info, aSelector) {
    };
    /*ObjectiveC.(file).NSObject.instanceMethodSignature(for:Selector?)*/
    /*ObjectiveC.(file).NSObject.instanceMethodSignature(for:Selector?)*/
    NSObject.instanceMethodSignatureFor = function ($info, aSelector) {
    };
    /*ObjectiveC.(file).NSObject.instanceMethodSignatureForSelector(_:Selector?)*/
    /*ObjectiveC.(file).NSObject.instanceMethodSignatureForSelector(_:Selector?)*/
    NSObject.instanceMethodSignatureForSelector = function ($info, aSelector) {
    };
    /*ObjectiveC.(file).NSObject.allowsWeakReference()*/
    /*ObjectiveC.(file).NSObject.allowsWeakReference()*/
    NSObject.allowsWeakReference = function ($info) {
    };
    /*ObjectiveC.(file).NSObject.allowsWeakReference()*/
    /*ObjectiveC.(file).NSObject.allowsWeakReference()*/
    NSObject.prototype.allowsWeakReference = function ($info) {
    };
    /*ObjectiveC.(file).NSObject.retainWeakReference()*/
    /*ObjectiveC.(file).NSObject.retainWeakReference()*/
    NSObject.retainWeakReference = function ($info) {
    };
    /*ObjectiveC.(file).NSObject.retainWeakReference()*/
    /*ObjectiveC.(file).NSObject.retainWeakReference()*/
    NSObject.prototype.retainWeakReference = function ($info) {
    };
    /*ObjectiveC.(file).NSObject.isSubclass(of:AnyClass)*/
    /*ObjectiveC.(file).NSObject.isSubclass(of:AnyClass)*/
    NSObject.isSubclassOf = function ($info, aClass) {
    };
    /*ObjectiveC.(file).NSObject.isSubclassOfClass(_:AnyClass)*/
    /*ObjectiveC.(file).NSObject.isSubclassOfClass(_:AnyClass)*/
    NSObject.isSubclassOfClass = function ($info, aClass) {
    };
    /*ObjectiveC.(file).NSObject.resolveClassMethod(_:Selector?)*/
    /*ObjectiveC.(file).NSObject.resolveClassMethod(_:Selector?)*/
    NSObject.resolveClassMethod = function ($info, sel) {
    };
    /*ObjectiveC.(file).NSObject.resolveInstanceMethod(_:Selector?)*/
    /*ObjectiveC.(file).NSObject.resolveInstanceMethod(_:Selector?)*/
    NSObject.resolveInstanceMethod = function ($info, sel) {
    };
    /*ObjectiveC.(file).NSObject.hash()*/
    /*ObjectiveC.(file).NSObject.hash()*/
    NSObject.hash = function ($info) {
    };
    /*ObjectiveC.(file).NSObject.superclass()*/
    /*ObjectiveC.(file).NSObject.superclass()*/
    NSObject.superclass = function ($info) {
    };
    /*ObjectiveC.(file).NSObject.description()*/
    /*ObjectiveC.(file).NSObject.description()*/
    NSObject.description = function ($info) {
    };
    /*ObjectiveC.(file).NSObject.debugDescription()*/
    /*ObjectiveC.(file).NSObject.debugDescription()*/
    NSObject.debugDescription = function ($info) {
    };
    /*ObjectiveC.(file).NSObject.isEqual(_:Any?)*/
    /*ObjectiveC.(file).NSObject.isEqual(_:Any?)*/
    NSObject.prototype.isEqual = function ($info, object) {
    };
    /*ObjectiveC.(file).NSObject.isEqual(_:Any?)*/
    /*ObjectiveC.(file).NSObject.isEqual(_:Any?)*/
    NSObject.isEqual = function ($info, object) {
    };
    /*ObjectiveC.(file).NSObject.perform(_:Selector?)*/
    /*ObjectiveC.(file).NSObject.perform(_:Selector?)*/
    NSObject.prototype.perform = function ($info, aSelector) {
    };
    /*ObjectiveC.(file).NSObject.perform(_:Selector?)*/
    /*ObjectiveC.(file).NSObject.perform(_:Selector?)*/
    NSObject.perform = function ($info, aSelector) {
    };
    /*ObjectiveC.(file).NSObject.perform(_:Selector?,with:Any?)*/
    /*ObjectiveC.(file).NSObject.perform(_:Selector?,with:Any?)*/
    NSObject.prototype.performWith = function ($info, aSelector, object) {
    };
    /*ObjectiveC.(file).NSObject.perform(_:Selector?,with:Any?)*/
    /*ObjectiveC.(file).NSObject.perform(_:Selector?,with:Any?)*/
    NSObject.performWith = function ($info, aSelector, object) {
    };
    /*ObjectiveC.(file).NSObject.perform(_:Selector?,with:Any?,with:Any?)*/
    /*ObjectiveC.(file).NSObject.perform(_:Selector?,with:Any?,with:Any?)*/
    NSObject.prototype.performWithWith = function ($info, aSelector, object1, object2) {
    };
    /*ObjectiveC.(file).NSObject.perform(_:Selector?,with:Any?,with:Any?)*/
    /*ObjectiveC.(file).NSObject.perform(_:Selector?,with:Any?,with:Any?)*/
    NSObject.performWithWith = function ($info, aSelector, object1, object2) {
    };
    /*ObjectiveC.(file).NSObject.isProxy()*/
    /*ObjectiveC.(file).NSObject.isProxy()*/
    NSObject.prototype.isProxy = function ($info) {
    };
    /*ObjectiveC.(file).NSObject.isProxy()*/
    /*ObjectiveC.(file).NSObject.isProxy()*/
    NSObject.isProxy = function ($info) {
    };
    /*ObjectiveC.(file).NSObject.isKind(of:AnyClass)*/
    /*ObjectiveC.(file).NSObject.isKind(of:AnyClass)*/
    NSObject.prototype.isKindOf = function ($info, aClass) {
    };
    /*ObjectiveC.(file).NSObject.isKind(of:AnyClass)*/
    /*ObjectiveC.(file).NSObject.isKind(of:AnyClass)*/
    NSObject.isKindOf = function ($info, aClass) {
    };
    /*ObjectiveC.(file).NSObject.isMember(of:AnyClass)*/
    /*ObjectiveC.(file).NSObject.isMember(of:AnyClass)*/
    NSObject.prototype.isMemberOf = function ($info, aClass) {
    };
    /*ObjectiveC.(file).NSObject.isMember(of:AnyClass)*/
    /*ObjectiveC.(file).NSObject.isMember(of:AnyClass)*/
    NSObject.isMemberOf = function ($info, aClass) {
    };
    /*ObjectiveC.(file).NSObject.conforms(to:Protocol)*/
    /*ObjectiveC.(file).NSObject.conforms(to:Protocol)*/
    NSObject.prototype.conformsTo = function ($info, aProtocol) {
    };
    /*ObjectiveC.(file).NSObject.responds(to:Selector?)*/
    /*ObjectiveC.(file).NSObject.responds(to:Selector?)*/
    NSObject.prototype.respondsTo = function ($info, aSelector) {
    };
    /*ObjectiveC.(file).NSObject.responds(to:Selector?)*/
    /*ObjectiveC.(file).NSObject.responds(to:Selector?)*/
    NSObject.respondsTo = function ($info, aSelector) {
    };
    /*ObjectiveC.(file).NSObject.retain()*/
    /*ObjectiveC.(file).NSObject.retain()*/
    NSObject.prototype.retain = function ($info) {
    };
    /*ObjectiveC.(file).NSObject.release()*/
    /*ObjectiveC.(file).NSObject.release()*/
    NSObject.prototype.release = function ($info) {
    };
    /*ObjectiveC.(file).NSObject.release()*/
    /*ObjectiveC.(file).NSObject.release()*/
    NSObject.release = function ($info) {
    };
    /*ObjectiveC.(file).NSObject.autorelease()*/
    /*ObjectiveC.(file).NSObject.autorelease()*/
    NSObject.prototype.autorelease = function ($info) {
    };
    /*ObjectiveC.(file).NSObject.retainCount()*/
    /*ObjectiveC.(file).NSObject.retainCount()*/
    NSObject.prototype.retainCount = function ($info) {
    };
    /*ObjectiveC.(file).NSObject.retainCount()*/
    /*ObjectiveC.(file).NSObject.retainCount()*/
    NSObject.retainCount = function ($info) {
    };
    /*ObjectiveC.(file).NSObject.zone()*/
    /*ObjectiveC.(file).NSObject.zone()*/
    NSObject.prototype.zone = function ($info) {
    };
    /*ObjectiveC.(file).NSObject.zone()*/
    /*ObjectiveC.(file).NSObject.zone()*/
    NSObject.zone = function ($info) {
    };
    /*Foundation.(file).NSObject.version()*/
    /*Foundation.(file).NSObject.version()*/
    NSObject.version = function ($info) {
    };
    /*Foundation.(file).NSObject.setVersion(_:Int)*/
    /*Foundation.(file).NSObject.setVersion(_:Int)*/
    NSObject.setVersion = function ($info, aVersion) {
    };
    /*Foundation.(file).NSObject.replacementObject(for:NSCoder)*/
    /*Foundation.(file).NSObject.replacementObject(for:NSCoder)*/
    NSObject.replacementObjectFor = function ($info, aCoder) {
    };
    /*Foundation.(file).NSObject.replacementObject(for:NSCoder)*/
    /*Foundation.(file).NSObject.replacementObject(for:NSCoder)*/
    NSObject.prototype.replacementObjectFor = function ($info, aCoder) {
    };
    /*Foundation.(file).NSObject.replacementObjectForCoder(_:NSCoder)*/
    /*Foundation.(file).NSObject.replacementObjectForCoder(_:NSCoder)*/
    NSObject.replacementObjectForCoder = function ($info, aCoder) {
    };
    /*Foundation.(file).NSObject.replacementObjectForCoder(_:NSCoder)*/
    /*Foundation.(file).NSObject.replacementObjectForCoder(_:NSCoder)*/
    NSObject.prototype.replacementObjectForCoder = function ($info, aCoder) {
    };
    /*Foundation.(file).NSObject.awakeAfter(using:NSCoder)*/
    /*Foundation.(file).NSObject.awakeAfter(using:NSCoder)*/
    NSObject.awakeAfterUsing = function ($info, aDecoder) {
    };
    /*Foundation.(file).NSObject.awakeAfter(using:NSCoder)*/
    /*Foundation.(file).NSObject.awakeAfter(using:NSCoder)*/
    NSObject.prototype.awakeAfterUsing = function ($info, aDecoder) {
    };
    /*Foundation.(file).NSObject.awakeAfterUsingCoder(_:NSCoder)*/
    /*Foundation.(file).NSObject.awakeAfterUsingCoder(_:NSCoder)*/
    NSObject.awakeAfterUsingCoder = function ($info, aDecoder) {
    };
    /*Foundation.(file).NSObject.awakeAfterUsingCoder(_:NSCoder)*/
    /*Foundation.(file).NSObject.awakeAfterUsingCoder(_:NSCoder)*/
    NSObject.prototype.awakeAfterUsingCoder = function ($info, aDecoder) {
    };
    /*Foundation.(file).NSObject.classForCoder()*/
    /*Foundation.(file).NSObject.classForCoder()*/
    NSObject.classForCoder = function ($info) {
    };
    /*Foundation.(file).NSObject.pose(as:AnyClass)*/
    /*Foundation.(file).NSObject.pose(as:AnyClass)*/
    NSObject.poseAs = function ($info, aClass) {
    };
    /*Foundation.(file).NSObject.poseAsClass(_:AnyClass)*/
    /*Foundation.(file).NSObject.poseAsClass(_:AnyClass)*/
    NSObject.poseAsClass = function ($info, aClass) {
    };
    /*Foundation.(file).NSObject.autoContentAccessingProxy()*/
    /*Foundation.(file).NSObject.autoContentAccessingProxy()*/
    NSObject.autoContentAccessingProxy = function ($info) {
    };
    /*Foundation.(file).NSObject.attemptRecovery(fromError:Error,optionIndex:Int,delegate:Any?,didRecoverSelector:Selector?,contextInfo:UnsafeMutableRawPointer?)*/
    /*Foundation.(file).NSObject.attemptRecovery(fromError:Error,optionIndex:Int,delegate:Any?,didRecoverSelector:Selector?,contextInfo:UnsafeMutableRawPointer?)*/
    NSObject.attemptRecoveryFromErrorOptionIndexDelegateDidRecoverSelectorContextInfo = function ($info, error, recoveryOptionIndex, delegate, didRecoverSelector, contextInfo) {
    };
    /*Foundation.(file).NSObject.attemptRecovery(fromError:Error,optionIndex:Int,delegate:Any?,didRecoverSelector:Selector?,contextInfo:UnsafeMutableRawPointer?)*/
    /*Foundation.(file).NSObject.attemptRecovery(fromError:Error,optionIndex:Int,delegate:Any?,didRecoverSelector:Selector?,contextInfo:UnsafeMutableRawPointer?)*/
    NSObject.prototype.attemptRecoveryFromErrorOptionIndexDelegateDidRecoverSelectorContextInfo = function ($info, error, recoveryOptionIndex, delegate, didRecoverSelector, contextInfo) {
    };
    /*Foundation.(file).NSObject.attemptRecoveryFromError(_:Error,optionIndex:Int,delegate:Any?,didRecoverSelector:Selector?,contextInfo:UnsafeMutableRawPointer?)*/
    /*Foundation.(file).NSObject.attemptRecoveryFromError(_:Error,optionIndex:Int,delegate:Any?,didRecoverSelector:Selector?,contextInfo:UnsafeMutableRawPointer?)*/
    NSObject.attemptRecoveryFromErrorOptionIndexDelegateDidRecoverSelectorContextInfo = function ($info, error, recoveryOptionIndex, delegate, didRecoverSelector, contextInfo) {
    };
    /*Foundation.(file).NSObject.attemptRecoveryFromError(_:Error,optionIndex:Int,delegate:Any?,didRecoverSelector:Selector?,contextInfo:UnsafeMutableRawPointer?)*/
    /*Foundation.(file).NSObject.attemptRecoveryFromError(_:Error,optionIndex:Int,delegate:Any?,didRecoverSelector:Selector?,contextInfo:UnsafeMutableRawPointer?)*/
    NSObject.prototype.attemptRecoveryFromErrorOptionIndexDelegateDidRecoverSelectorContextInfo = function ($info, error, recoveryOptionIndex, delegate, didRecoverSelector, contextInfo) {
    };
    /*Foundation.(file).NSObject.attemptRecovery(fromError:Error,optionIndex:Int)*/
    /*Foundation.(file).NSObject.attemptRecovery(fromError:Error,optionIndex:Int)*/
    NSObject.attemptRecoveryFromErrorOptionIndex = function ($info, error, recoveryOptionIndex) {
    };
    /*Foundation.(file).NSObject.attemptRecovery(fromError:Error,optionIndex:Int)*/
    /*Foundation.(file).NSObject.attemptRecovery(fromError:Error,optionIndex:Int)*/
    NSObject.prototype.attemptRecoveryFromErrorOptionIndex = function ($info, error, recoveryOptionIndex) {
    };
    /*Foundation.(file).NSObject.attemptRecoveryFromError(_:Error,optionIndex:Int)*/
    /*Foundation.(file).NSObject.attemptRecoveryFromError(_:Error,optionIndex:Int)*/
    NSObject.attemptRecoveryFromErrorOptionIndex = function ($info, error, recoveryOptionIndex) {
    };
    /*Foundation.(file).NSObject.attemptRecoveryFromError(_:Error,optionIndex:Int)*/
    /*Foundation.(file).NSObject.attemptRecoveryFromError(_:Error,optionIndex:Int)*/
    NSObject.prototype.attemptRecoveryFromErrorOptionIndex = function ($info, error, recoveryOptionIndex) {
    };
    /*Foundation.(file).NSObject.perform(_:Selector,with:Any?,afterDelay:TimeInterval,inModes:[RunLoop.Mode])*/
    /*Foundation.(file).NSObject.perform(_:Selector,with:Any?,afterDelay:TimeInterval,inModes:[RunLoop.Mode])*/
    NSObject.performWithAfterDelayInModes = function ($info, aSelector, anArgument, delay, modes) {
    };
    /*Foundation.(file).NSObject.perform(_:Selector,with:Any?,afterDelay:TimeInterval,inModes:[RunLoop.Mode])*/
    /*Foundation.(file).NSObject.perform(_:Selector,with:Any?,afterDelay:TimeInterval,inModes:[RunLoop.Mode])*/
    NSObject.prototype.performWithAfterDelayInModes = function ($info, aSelector, anArgument, delay, modes) {
    };
    /*Foundation.(file).NSObject.performSelector(_:Selector,withObject:Any?,afterDelay:TimeInterval,inModes:[RunLoop.Mode])*/
    /*Foundation.(file).NSObject.performSelector(_:Selector,withObject:Any?,afterDelay:TimeInterval,inModes:[RunLoop.Mode])*/
    NSObject.performSelectorWithObjectAfterDelayInModes = function ($info, aSelector, anArgument, delay, modes) {
    };
    /*Foundation.(file).NSObject.performSelector(_:Selector,withObject:Any?,afterDelay:TimeInterval,inModes:[RunLoop.Mode])*/
    /*Foundation.(file).NSObject.performSelector(_:Selector,withObject:Any?,afterDelay:TimeInterval,inModes:[RunLoop.Mode])*/
    NSObject.prototype.performSelectorWithObjectAfterDelayInModes = function ($info, aSelector, anArgument, delay, modes) {
    };
    /*Foundation.(file).NSObject.perform(_:Selector,with:Any?,afterDelay:TimeInterval)*/
    /*Foundation.(file).NSObject.perform(_:Selector,with:Any?,afterDelay:TimeInterval)*/
    NSObject.performWithAfterDelay = function ($info, aSelector, anArgument, delay) {
    };
    /*Foundation.(file).NSObject.perform(_:Selector,with:Any?,afterDelay:TimeInterval)*/
    /*Foundation.(file).NSObject.perform(_:Selector,with:Any?,afterDelay:TimeInterval)*/
    NSObject.prototype.performWithAfterDelay = function ($info, aSelector, anArgument, delay) {
    };
    /*Foundation.(file).NSObject.performSelector(_:Selector,withObject:Any?,afterDelay:TimeInterval)*/
    /*Foundation.(file).NSObject.performSelector(_:Selector,withObject:Any?,afterDelay:TimeInterval)*/
    NSObject.performSelectorWithObjectAfterDelay = function ($info, aSelector, anArgument, delay) {
    };
    /*Foundation.(file).NSObject.performSelector(_:Selector,withObject:Any?,afterDelay:TimeInterval)*/
    /*Foundation.(file).NSObject.performSelector(_:Selector,withObject:Any?,afterDelay:TimeInterval)*/
    NSObject.prototype.performSelectorWithObjectAfterDelay = function ($info, aSelector, anArgument, delay) {
    };
    /*Foundation.(file).NSObject.cancelPreviousPerformRequests(withTarget:Any,selector:Selector,object:Any?)*/
    /*Foundation.(file).NSObject.cancelPreviousPerformRequests(withTarget:Any,selector:Selector,object:Any?)*/
    NSObject.cancelPreviousPerformRequestsWithTargetSelectorObject = function ($info, aTarget, aSelector, anArgument) {
    };
    /*Foundation.(file).NSObject.cancelPreviousPerformRequestsWithTarget(_:Any,selector:Selector,object:Any?)*/
    /*Foundation.(file).NSObject.cancelPreviousPerformRequestsWithTarget(_:Any,selector:Selector,object:Any?)*/
    NSObject.cancelPreviousPerformRequestsWithTargetSelectorObject = function ($info, aTarget, aSelector, anArgument) {
    };
    /*Foundation.(file).NSObject.cancelPreviousPerformRequests(withTarget:Any)*/
    /*Foundation.(file).NSObject.cancelPreviousPerformRequests(withTarget:Any)*/
    NSObject.cancelPreviousPerformRequestsWithTarget = function ($info, aTarget) {
    };
    /*Foundation.(file).NSObject.cancelPreviousPerformRequestsWithTarget(_:Any)*/
    /*Foundation.(file).NSObject.cancelPreviousPerformRequestsWithTarget(_:Any)*/
    NSObject.cancelPreviousPerformRequestsWithTarget = function ($info, aTarget) {
    };
    /*Foundation.(file).NSObject.fileManager(_:FileManager,shouldProceedAfterError:[AnyHashable : Any])*/
    /*Foundation.(file).NSObject.fileManager(_:FileManager,shouldProceedAfterError:[AnyHashable : Any])*/
    NSObject.fileManagerShouldProceedAfterError = function ($info, fm, errorInfo) {
    };
    /*Foundation.(file).NSObject.fileManager(_:FileManager,shouldProceedAfterError:[AnyHashable : Any])*/
    /*Foundation.(file).NSObject.fileManager(_:FileManager,shouldProceedAfterError:[AnyHashable : Any])*/
    NSObject.prototype.fileManagerShouldProceedAfterError = function ($info, fm, errorInfo) {
    };
    /*Foundation.(file).NSObject.fileManager(_:FileManager,willProcessPath:String)*/
    /*Foundation.(file).NSObject.fileManager(_:FileManager,willProcessPath:String)*/
    NSObject.fileManagerWillProcessPath = function ($info, fm, path) {
    };
    /*Foundation.(file).NSObject.fileManager(_:FileManager,willProcessPath:String)*/
    /*Foundation.(file).NSObject.fileManager(_:FileManager,willProcessPath:String)*/
    NSObject.prototype.fileManagerWillProcessPath = function ($info, fm, path) {
    };
    /*Foundation.(file).NSObject.value(forKey:String)*/
    /*Foundation.(file).NSObject.value(forKey:String)*/
    NSObject.valueForKey = function ($info, key) {
    };
    /*Foundation.(file).NSObject.value(forKey:String)*/
    /*Foundation.(file).NSObject.value(forKey:String)*/
    NSObject.prototype.valueForKey = function ($info, key) {
    };
    /*Foundation.(file).NSObject.valueForKey(_:String)*/
    /*Foundation.(file).NSObject.valueForKey(_:String)*/
    NSObject.valueForKey = function ($info, key) {
    };
    /*Foundation.(file).NSObject.valueForKey(_:String)*/
    /*Foundation.(file).NSObject.valueForKey(_:String)*/
    NSObject.prototype.valueForKey = function ($info, key) {
    };
    /*Foundation.(file).NSObject.setValue(_:Any?,forKey:String)*/
    /*Foundation.(file).NSObject.setValue(_:Any?,forKey:String)*/
    NSObject.setValueForKey = function ($info, value, key) {
    };
    /*Foundation.(file).NSObject.setValue(_:Any?,forKey:String)*/
    /*Foundation.(file).NSObject.setValue(_:Any?,forKey:String)*/
    NSObject.prototype.setValueForKey = function ($info, value, key) {
    };
    /*Foundation.(file).NSObject.validateValue(_:AutoreleasingUnsafeMutablePointer<AnyObject?>,forKey:String)*/
    /*Foundation.(file).NSObject.validateValue(_:AutoreleasingUnsafeMutablePointer<AnyObject?>,forKey:String)*/
    NSObject.validateValueForKey = function ($info, ioValue, inKey) {
    };
    /*Foundation.(file).NSObject.validateValue(_:AutoreleasingUnsafeMutablePointer<AnyObject?>,forKey:String)*/
    /*Foundation.(file).NSObject.validateValue(_:AutoreleasingUnsafeMutablePointer<AnyObject?>,forKey:String)*/
    NSObject.prototype.validateValueForKey = function ($info, ioValue, inKey) {
    };
    /*Foundation.(file).NSObject.mutableArrayValue(forKey:String)*/
    /*Foundation.(file).NSObject.mutableArrayValue(forKey:String)*/
    NSObject.mutableArrayValueForKey = function ($info, key) {
    };
    /*Foundation.(file).NSObject.mutableArrayValue(forKey:String)*/
    /*Foundation.(file).NSObject.mutableArrayValue(forKey:String)*/
    NSObject.prototype.mutableArrayValueForKey = function ($info, key) {
    };
    /*Foundation.(file).NSObject.mutableArrayValueForKey(_:String)*/
    /*Foundation.(file).NSObject.mutableArrayValueForKey(_:String)*/
    NSObject.mutableArrayValueForKey = function ($info, key) {
    };
    /*Foundation.(file).NSObject.mutableArrayValueForKey(_:String)*/
    /*Foundation.(file).NSObject.mutableArrayValueForKey(_:String)*/
    NSObject.prototype.mutableArrayValueForKey = function ($info, key) {
    };
    /*Foundation.(file).NSObject.mutableOrderedSetValue(forKey:String)*/
    /*Foundation.(file).NSObject.mutableOrderedSetValue(forKey:String)*/
    NSObject.mutableOrderedSetValueForKey = function ($info, key) {
    };
    /*Foundation.(file).NSObject.mutableOrderedSetValue(forKey:String)*/
    /*Foundation.(file).NSObject.mutableOrderedSetValue(forKey:String)*/
    NSObject.prototype.mutableOrderedSetValueForKey = function ($info, key) {
    };
    /*Foundation.(file).NSObject.mutableOrderedSetValueForKey(_:String)*/
    /*Foundation.(file).NSObject.mutableOrderedSetValueForKey(_:String)*/
    NSObject.mutableOrderedSetValueForKey = function ($info, key) {
    };
    /*Foundation.(file).NSObject.mutableOrderedSetValueForKey(_:String)*/
    /*Foundation.(file).NSObject.mutableOrderedSetValueForKey(_:String)*/
    NSObject.prototype.mutableOrderedSetValueForKey = function ($info, key) {
    };
    /*Foundation.(file).NSObject.mutableSetValue(forKey:String)*/
    /*Foundation.(file).NSObject.mutableSetValue(forKey:String)*/
    NSObject.mutableSetValueForKey = function ($info, key) {
    };
    /*Foundation.(file).NSObject.mutableSetValue(forKey:String)*/
    /*Foundation.(file).NSObject.mutableSetValue(forKey:String)*/
    NSObject.prototype.mutableSetValueForKey = function ($info, key) {
    };
    /*Foundation.(file).NSObject.mutableSetValueForKey(_:String)*/
    /*Foundation.(file).NSObject.mutableSetValueForKey(_:String)*/
    NSObject.mutableSetValueForKey = function ($info, key) {
    };
    /*Foundation.(file).NSObject.mutableSetValueForKey(_:String)*/
    /*Foundation.(file).NSObject.mutableSetValueForKey(_:String)*/
    NSObject.prototype.mutableSetValueForKey = function ($info, key) {
    };
    /*Foundation.(file).NSObject.value(forKeyPath:String)*/
    /*Foundation.(file).NSObject.value(forKeyPath:String)*/
    NSObject.valueForKeyPath = function ($info, keyPath) {
    };
    /*Foundation.(file).NSObject.value(forKeyPath:String)*/
    /*Foundation.(file).NSObject.value(forKeyPath:String)*/
    NSObject.prototype.valueForKeyPath = function ($info, keyPath) {
    };
    /*Foundation.(file).NSObject.valueForKeyPath(_:String)*/
    /*Foundation.(file).NSObject.valueForKeyPath(_:String)*/
    NSObject.valueForKeyPath = function ($info, keyPath) {
    };
    /*Foundation.(file).NSObject.valueForKeyPath(_:String)*/
    /*Foundation.(file).NSObject.valueForKeyPath(_:String)*/
    NSObject.prototype.valueForKeyPath = function ($info, keyPath) {
    };
    /*Foundation.(file).NSObject.setValue(_:Any?,forKeyPath:String)*/
    /*Foundation.(file).NSObject.setValue(_:Any?,forKeyPath:String)*/
    NSObject.setValueForKeyPath = function ($info, value, keyPath) {
    };
    /*Foundation.(file).NSObject.setValue(_:Any?,forKeyPath:String)*/
    /*Foundation.(file).NSObject.setValue(_:Any?,forKeyPath:String)*/
    NSObject.prototype.setValueForKeyPath = function ($info, value, keyPath) {
    };
    /*Foundation.(file).NSObject.validateValue(_:AutoreleasingUnsafeMutablePointer<AnyObject?>,forKeyPath:String)*/
    /*Foundation.(file).NSObject.validateValue(_:AutoreleasingUnsafeMutablePointer<AnyObject?>,forKeyPath:String)*/
    NSObject.validateValueForKeyPath = function ($info, ioValue, inKeyPath) {
    };
    /*Foundation.(file).NSObject.validateValue(_:AutoreleasingUnsafeMutablePointer<AnyObject?>,forKeyPath:String)*/
    /*Foundation.(file).NSObject.validateValue(_:AutoreleasingUnsafeMutablePointer<AnyObject?>,forKeyPath:String)*/
    NSObject.prototype.validateValueForKeyPath = function ($info, ioValue, inKeyPath) {
    };
    /*Foundation.(file).NSObject.mutableArrayValue(forKeyPath:String)*/
    /*Foundation.(file).NSObject.mutableArrayValue(forKeyPath:String)*/
    NSObject.mutableArrayValueForKeyPath = function ($info, keyPath) {
    };
    /*Foundation.(file).NSObject.mutableArrayValue(forKeyPath:String)*/
    /*Foundation.(file).NSObject.mutableArrayValue(forKeyPath:String)*/
    NSObject.prototype.mutableArrayValueForKeyPath = function ($info, keyPath) {
    };
    /*Foundation.(file).NSObject.mutableArrayValueForKeyPath(_:String)*/
    /*Foundation.(file).NSObject.mutableArrayValueForKeyPath(_:String)*/
    NSObject.mutableArrayValueForKeyPath = function ($info, keyPath) {
    };
    /*Foundation.(file).NSObject.mutableArrayValueForKeyPath(_:String)*/
    /*Foundation.(file).NSObject.mutableArrayValueForKeyPath(_:String)*/
    NSObject.prototype.mutableArrayValueForKeyPath = function ($info, keyPath) {
    };
    /*Foundation.(file).NSObject.mutableOrderedSetValue(forKeyPath:String)*/
    /*Foundation.(file).NSObject.mutableOrderedSetValue(forKeyPath:String)*/
    NSObject.mutableOrderedSetValueForKeyPath = function ($info, keyPath) {
    };
    /*Foundation.(file).NSObject.mutableOrderedSetValue(forKeyPath:String)*/
    /*Foundation.(file).NSObject.mutableOrderedSetValue(forKeyPath:String)*/
    NSObject.prototype.mutableOrderedSetValueForKeyPath = function ($info, keyPath) {
    };
    /*Foundation.(file).NSObject.mutableOrderedSetValueForKeyPath(_:String)*/
    /*Foundation.(file).NSObject.mutableOrderedSetValueForKeyPath(_:String)*/
    NSObject.mutableOrderedSetValueForKeyPath = function ($info, keyPath) {
    };
    /*Foundation.(file).NSObject.mutableOrderedSetValueForKeyPath(_:String)*/
    /*Foundation.(file).NSObject.mutableOrderedSetValueForKeyPath(_:String)*/
    NSObject.prototype.mutableOrderedSetValueForKeyPath = function ($info, keyPath) {
    };
    /*Foundation.(file).NSObject.mutableSetValue(forKeyPath:String)*/
    /*Foundation.(file).NSObject.mutableSetValue(forKeyPath:String)*/
    NSObject.mutableSetValueForKeyPath = function ($info, keyPath) {
    };
    /*Foundation.(file).NSObject.mutableSetValue(forKeyPath:String)*/
    /*Foundation.(file).NSObject.mutableSetValue(forKeyPath:String)*/
    NSObject.prototype.mutableSetValueForKeyPath = function ($info, keyPath) {
    };
    /*Foundation.(file).NSObject.mutableSetValueForKeyPath(_:String)*/
    /*Foundation.(file).NSObject.mutableSetValueForKeyPath(_:String)*/
    NSObject.mutableSetValueForKeyPath = function ($info, keyPath) {
    };
    /*Foundation.(file).NSObject.mutableSetValueForKeyPath(_:String)*/
    /*Foundation.(file).NSObject.mutableSetValueForKeyPath(_:String)*/
    NSObject.prototype.mutableSetValueForKeyPath = function ($info, keyPath) {
    };
    /*Foundation.(file).NSObject.value(forUndefinedKey:String)*/
    /*Foundation.(file).NSObject.value(forUndefinedKey:String)*/
    NSObject.valueForUndefinedKey = function ($info, key) {
    };
    /*Foundation.(file).NSObject.value(forUndefinedKey:String)*/
    /*Foundation.(file).NSObject.value(forUndefinedKey:String)*/
    NSObject.prototype.valueForUndefinedKey = function ($info, key) {
    };
    /*Foundation.(file).NSObject.valueForUndefinedKey(_:String)*/
    /*Foundation.(file).NSObject.valueForUndefinedKey(_:String)*/
    NSObject.valueForUndefinedKey = function ($info, key) {
    };
    /*Foundation.(file).NSObject.valueForUndefinedKey(_:String)*/
    /*Foundation.(file).NSObject.valueForUndefinedKey(_:String)*/
    NSObject.prototype.valueForUndefinedKey = function ($info, key) {
    };
    /*Foundation.(file).NSObject.setValue(_:Any?,forUndefinedKey:String)*/
    /*Foundation.(file).NSObject.setValue(_:Any?,forUndefinedKey:String)*/
    NSObject.setValueForUndefinedKey = function ($info, value, key) {
    };
    /*Foundation.(file).NSObject.setValue(_:Any?,forUndefinedKey:String)*/
    /*Foundation.(file).NSObject.setValue(_:Any?,forUndefinedKey:String)*/
    NSObject.prototype.setValueForUndefinedKey = function ($info, value, key) {
    };
    /*Foundation.(file).NSObject.setNilValueForKey(_:String)*/
    /*Foundation.(file).NSObject.setNilValueForKey(_:String)*/
    NSObject.setNilValueForKey = function ($info, key) {
    };
    /*Foundation.(file).NSObject.setNilValueForKey(_:String)*/
    /*Foundation.(file).NSObject.setNilValueForKey(_:String)*/
    NSObject.prototype.setNilValueForKey = function ($info, key) {
    };
    /*Foundation.(file).NSObject.dictionaryWithValues(forKeys:[String])*/
    /*Foundation.(file).NSObject.dictionaryWithValues(forKeys:[String])*/
    NSObject.dictionaryWithValuesForKeys = function ($info, keys) {
    };
    /*Foundation.(file).NSObject.dictionaryWithValues(forKeys:[String])*/
    /*Foundation.(file).NSObject.dictionaryWithValues(forKeys:[String])*/
    NSObject.prototype.dictionaryWithValuesForKeys = function ($info, keys) {
    };
    /*Foundation.(file).NSObject.dictionaryWithValuesForKeys(_:[String])*/
    /*Foundation.(file).NSObject.dictionaryWithValuesForKeys(_:[String])*/
    NSObject.dictionaryWithValuesForKeys = function ($info, keys) {
    };
    /*Foundation.(file).NSObject.dictionaryWithValuesForKeys(_:[String])*/
    /*Foundation.(file).NSObject.dictionaryWithValuesForKeys(_:[String])*/
    NSObject.prototype.dictionaryWithValuesForKeys = function ($info, keys) {
    };
    /*Foundation.(file).NSObject.setValuesForKeys(_:[String : Any])*/
    /*Foundation.(file).NSObject.setValuesForKeys(_:[String : Any])*/
    NSObject.setValuesForKeys = function ($info, keyedValues) {
    };
    /*Foundation.(file).NSObject.setValuesForKeys(_:[String : Any])*/
    /*Foundation.(file).NSObject.setValuesForKeys(_:[String : Any])*/
    NSObject.prototype.setValuesForKeys = function ($info, keyedValues) {
    };
    /*Foundation.(file).NSObject.setValuesForKeysWithDictionary(_:[String : Any])*/
    /*Foundation.(file).NSObject.setValuesForKeysWithDictionary(_:[String : Any])*/
    NSObject.setValuesForKeysWithDictionary = function ($info, keyedValues) {
    };
    /*Foundation.(file).NSObject.setValuesForKeysWithDictionary(_:[String : Any])*/
    /*Foundation.(file).NSObject.setValuesForKeysWithDictionary(_:[String : Any])*/
    NSObject.prototype.setValuesForKeysWithDictionary = function ($info, keyedValues) {
    };
    /*Foundation.(file).NSObject.useStoredAccessor()*/
    /*Foundation.(file).NSObject.useStoredAccessor()*/
    NSObject.useStoredAccessor = function ($info) {
    };
    /*Foundation.(file).NSObject.storedValue(forKey:String)*/
    /*Foundation.(file).NSObject.storedValue(forKey:String)*/
    NSObject.storedValueForKey = function ($info, key) {
    };
    /*Foundation.(file).NSObject.storedValue(forKey:String)*/
    /*Foundation.(file).NSObject.storedValue(forKey:String)*/
    NSObject.prototype.storedValueForKey = function ($info, key) {
    };
    /*Foundation.(file).NSObject.storedValueForKey(_:String)*/
    /*Foundation.(file).NSObject.storedValueForKey(_:String)*/
    NSObject.storedValueForKey = function ($info, key) {
    };
    /*Foundation.(file).NSObject.storedValueForKey(_:String)*/
    /*Foundation.(file).NSObject.storedValueForKey(_:String)*/
    NSObject.prototype.storedValueForKey = function ($info, key) {
    };
    /*Foundation.(file).NSObject.takeStoredValue(_:Any?,forKey:String)*/
    /*Foundation.(file).NSObject.takeStoredValue(_:Any?,forKey:String)*/
    NSObject.takeStoredValueForKey = function ($info, value, key) {
    };
    /*Foundation.(file).NSObject.takeStoredValue(_:Any?,forKey:String)*/
    /*Foundation.(file).NSObject.takeStoredValue(_:Any?,forKey:String)*/
    NSObject.prototype.takeStoredValueForKey = function ($info, value, key) {
    };
    /*Foundation.(file).NSObject.takeValue(_:Any?,forKey:String)*/
    /*Foundation.(file).NSObject.takeValue(_:Any?,forKey:String)*/
    NSObject.takeValueForKey = function ($info, value, key) {
    };
    /*Foundation.(file).NSObject.takeValue(_:Any?,forKey:String)*/
    /*Foundation.(file).NSObject.takeValue(_:Any?,forKey:String)*/
    NSObject.prototype.takeValueForKey = function ($info, value, key) {
    };
    /*Foundation.(file).NSObject.takeValue(_:Any?,forKeyPath:String)*/
    /*Foundation.(file).NSObject.takeValue(_:Any?,forKeyPath:String)*/
    NSObject.takeValueForKeyPath = function ($info, value, keyPath) {
    };
    /*Foundation.(file).NSObject.takeValue(_:Any?,forKeyPath:String)*/
    /*Foundation.(file).NSObject.takeValue(_:Any?,forKeyPath:String)*/
    NSObject.prototype.takeValueForKeyPath = function ($info, value, keyPath) {
    };
    /*Foundation.(file).NSObject.handleQuery(withUnboundKey:String)*/
    /*Foundation.(file).NSObject.handleQuery(withUnboundKey:String)*/
    NSObject.handleQueryWithUnboundKey = function ($info, key) {
    };
    /*Foundation.(file).NSObject.handleQuery(withUnboundKey:String)*/
    /*Foundation.(file).NSObject.handleQuery(withUnboundKey:String)*/
    NSObject.prototype.handleQueryWithUnboundKey = function ($info, key) {
    };
    /*Foundation.(file).NSObject.handleQueryWithUnboundKey(_:String)*/
    /*Foundation.(file).NSObject.handleQueryWithUnboundKey(_:String)*/
    NSObject.handleQueryWithUnboundKey = function ($info, key) {
    };
    /*Foundation.(file).NSObject.handleQueryWithUnboundKey(_:String)*/
    /*Foundation.(file).NSObject.handleQueryWithUnboundKey(_:String)*/
    NSObject.prototype.handleQueryWithUnboundKey = function ($info, key) {
    };
    /*Foundation.(file).NSObject.handleTakeValue(_:Any?,forUnboundKey:String)*/
    /*Foundation.(file).NSObject.handleTakeValue(_:Any?,forUnboundKey:String)*/
    NSObject.handleTakeValueForUnboundKey = function ($info, value, key) {
    };
    /*Foundation.(file).NSObject.handleTakeValue(_:Any?,forUnboundKey:String)*/
    /*Foundation.(file).NSObject.handleTakeValue(_:Any?,forUnboundKey:String)*/
    NSObject.prototype.handleTakeValueForUnboundKey = function ($info, value, key) {
    };
    /*Foundation.(file).NSObject.unableToSetNil(forKey:String)*/
    /*Foundation.(file).NSObject.unableToSetNil(forKey:String)*/
    NSObject.unableToSetNilForKey = function ($info, key) {
    };
    /*Foundation.(file).NSObject.unableToSetNil(forKey:String)*/
    /*Foundation.(file).NSObject.unableToSetNil(forKey:String)*/
    NSObject.prototype.unableToSetNilForKey = function ($info, key) {
    };
    /*Foundation.(file).NSObject.unableToSetNilForKey(_:String)*/
    /*Foundation.(file).NSObject.unableToSetNilForKey(_:String)*/
    NSObject.unableToSetNilForKey = function ($info, key) {
    };
    /*Foundation.(file).NSObject.unableToSetNilForKey(_:String)*/
    /*Foundation.(file).NSObject.unableToSetNilForKey(_:String)*/
    NSObject.prototype.unableToSetNilForKey = function ($info, key) {
    };
    /*Foundation.(file).NSObject.values(forKeys:[Any])*/
    /*Foundation.(file).NSObject.values(forKeys:[Any])*/
    NSObject.valuesForKeys = function ($info, keys) {
    };
    /*Foundation.(file).NSObject.values(forKeys:[Any])*/
    /*Foundation.(file).NSObject.values(forKeys:[Any])*/
    NSObject.prototype.valuesForKeys = function ($info, keys) {
    };
    /*Foundation.(file).NSObject.valuesForKeys(_:[Any])*/
    /*Foundation.(file).NSObject.valuesForKeys(_:[Any])*/
    NSObject.valuesForKeys = function ($info, keys) {
    };
    /*Foundation.(file).NSObject.valuesForKeys(_:[Any])*/
    /*Foundation.(file).NSObject.valuesForKeys(_:[Any])*/
    NSObject.prototype.valuesForKeys = function ($info, keys) {
    };
    /*Foundation.(file).NSObject.takeValues(from:[AnyHashable : Any])*/
    /*Foundation.(file).NSObject.takeValues(from:[AnyHashable : Any])*/
    NSObject.takeValuesFrom = function ($info, properties) {
    };
    /*Foundation.(file).NSObject.takeValues(from:[AnyHashable : Any])*/
    /*Foundation.(file).NSObject.takeValues(from:[AnyHashable : Any])*/
    NSObject.prototype.takeValuesFrom = function ($info, properties) {
    };
    /*Foundation.(file).NSObject.takeValuesFromDictionary(_:[AnyHashable : Any])*/
    /*Foundation.(file).NSObject.takeValuesFromDictionary(_:[AnyHashable : Any])*/
    NSObject.takeValuesFromDictionary = function ($info, properties) {
    };
    /*Foundation.(file).NSObject.takeValuesFromDictionary(_:[AnyHashable : Any])*/
    /*Foundation.(file).NSObject.takeValuesFromDictionary(_:[AnyHashable : Any])*/
    NSObject.prototype.takeValuesFromDictionary = function ($info, properties) {
    };
    /*Foundation.(file).NSObject.observeValue(forKeyPath:String?,of:Any?,change:[NSKeyValueChangeKey : Any]?,context:UnsafeMutableRawPointer?)*/
    /*Foundation.(file).NSObject.observeValue(forKeyPath:String?,of:Any?,change:[NSKeyValueChangeKey : Any]?,context:UnsafeMutableRawPointer?)*/
    NSObject.observeValueForKeyPathOfChangeContext = function ($info, keyPath, object, change, context) {
    };
    /*Foundation.(file).NSObject.observeValue(forKeyPath:String?,of:Any?,change:[NSKeyValueChangeKey : Any]?,context:UnsafeMutableRawPointer?)*/
    /*Foundation.(file).NSObject.observeValue(forKeyPath:String?,of:Any?,change:[NSKeyValueChangeKey : Any]?,context:UnsafeMutableRawPointer?)*/
    NSObject.prototype.observeValueForKeyPathOfChangeContext = function ($info, keyPath, object, change, context) {
    };
    /*Foundation.(file).NSObject.observeValueForKeyPath(_:String?,ofObject:Any?,change:[NSKeyValueChangeKey : Any]?,context:UnsafeMutableRawPointer?)*/
    /*Foundation.(file).NSObject.observeValueForKeyPath(_:String?,ofObject:Any?,change:[NSKeyValueChangeKey : Any]?,context:UnsafeMutableRawPointer?)*/
    NSObject.observeValueForKeyPathOfObjectChangeContext = function ($info, keyPath, object, change, context) {
    };
    /*Foundation.(file).NSObject.observeValueForKeyPath(_:String?,ofObject:Any?,change:[NSKeyValueChangeKey : Any]?,context:UnsafeMutableRawPointer?)*/
    /*Foundation.(file).NSObject.observeValueForKeyPath(_:String?,ofObject:Any?,change:[NSKeyValueChangeKey : Any]?,context:UnsafeMutableRawPointer?)*/
    NSObject.prototype.observeValueForKeyPathOfObjectChangeContext = function ($info, keyPath, object, change, context) {
    };
    /*Foundation.(file).NSObject.addObserver(_:NSObject,forKeyPath:String,options:NSKeyValueObservingOptions,context:UnsafeMutableRawPointer?)*/
    /*Foundation.(file).NSObject.addObserver(_:NSObject,forKeyPath:String,options:NSKeyValueObservingOptions,context:UnsafeMutableRawPointer?)*/
    NSObject.addObserverForKeyPathOptionsContext = function ($info, observer, keyPath, options, context) {
    };
    /*Foundation.(file).NSObject.addObserver(_:NSObject,forKeyPath:String,options:NSKeyValueObservingOptions,context:UnsafeMutableRawPointer?)*/
    /*Foundation.(file).NSObject.addObserver(_:NSObject,forKeyPath:String,options:NSKeyValueObservingOptions,context:UnsafeMutableRawPointer?)*/
    NSObject.prototype.addObserverForKeyPathOptionsContext = function ($info, observer, keyPath, options, context) {
    };
    /*Foundation.(file).NSObject.removeObserver(_:NSObject,forKeyPath:String,context:UnsafeMutableRawPointer?)*/
    /*Foundation.(file).NSObject.removeObserver(_:NSObject,forKeyPath:String,context:UnsafeMutableRawPointer?)*/
    NSObject.removeObserverForKeyPathContext = function ($info, observer, keyPath, context) {
    };
    /*Foundation.(file).NSObject.removeObserver(_:NSObject,forKeyPath:String,context:UnsafeMutableRawPointer?)*/
    /*Foundation.(file).NSObject.removeObserver(_:NSObject,forKeyPath:String,context:UnsafeMutableRawPointer?)*/
    NSObject.prototype.removeObserverForKeyPathContext = function ($info, observer, keyPath, context) {
    };
    /*Foundation.(file).NSObject.removeObserver(_:NSObject,forKeyPath:String)*/
    /*Foundation.(file).NSObject.removeObserver(_:NSObject,forKeyPath:String)*/
    NSObject.removeObserverForKeyPath = function ($info, observer, keyPath) {
    };
    /*Foundation.(file).NSObject.removeObserver(_:NSObject,forKeyPath:String)*/
    /*Foundation.(file).NSObject.removeObserver(_:NSObject,forKeyPath:String)*/
    NSObject.prototype.removeObserverForKeyPath = function ($info, observer, keyPath) {
    };
    /*Foundation.(file).NSObject.willChangeValue(forKey:String)*/
    /*Foundation.(file).NSObject.willChangeValue(forKey:String)*/
    NSObject.willChangeValueForKey = function ($info, key) {
    };
    /*Foundation.(file).NSObject.willChangeValue(forKey:String)*/
    /*Foundation.(file).NSObject.willChangeValue(forKey:String)*/
    NSObject.prototype.willChangeValueForKey = function ($info, key) {
    };
    /*Foundation.(file).NSObject.willChangeValueForKey(_:String)*/
    /*Foundation.(file).NSObject.willChangeValueForKey(_:String)*/
    NSObject.willChangeValueForKey = function ($info, key) {
    };
    /*Foundation.(file).NSObject.willChangeValueForKey(_:String)*/
    /*Foundation.(file).NSObject.willChangeValueForKey(_:String)*/
    NSObject.prototype.willChangeValueForKey = function ($info, key) {
    };
    /*Foundation.(file).NSObject.didChangeValue(forKey:String)*/
    /*Foundation.(file).NSObject.didChangeValue(forKey:String)*/
    NSObject.didChangeValueForKey = function ($info, key) {
    };
    /*Foundation.(file).NSObject.didChangeValue(forKey:String)*/
    /*Foundation.(file).NSObject.didChangeValue(forKey:String)*/
    NSObject.prototype.didChangeValueForKey = function ($info, key) {
    };
    /*Foundation.(file).NSObject.didChangeValueForKey(_:String)*/
    /*Foundation.(file).NSObject.didChangeValueForKey(_:String)*/
    NSObject.didChangeValueForKey = function ($info, key) {
    };
    /*Foundation.(file).NSObject.didChangeValueForKey(_:String)*/
    /*Foundation.(file).NSObject.didChangeValueForKey(_:String)*/
    NSObject.prototype.didChangeValueForKey = function ($info, key) {
    };
    /*Foundation.(file).NSObject.willChange(_:NSKeyValueChange,valuesAt:IndexSet,forKey:String)*/
    /*Foundation.(file).NSObject.willChange(_:NSKeyValueChange,valuesAt:IndexSet,forKey:String)*/
    NSObject.willChangeValuesAtForKey = function ($info, changeKind, indexes, key) {
    };
    /*Foundation.(file).NSObject.willChange(_:NSKeyValueChange,valuesAt:IndexSet,forKey:String)*/
    /*Foundation.(file).NSObject.willChange(_:NSKeyValueChange,valuesAt:IndexSet,forKey:String)*/
    NSObject.prototype.willChangeValuesAtForKey = function ($info, changeKind, indexes, key) {
    };
    /*Foundation.(file).NSObject.willChange(_:NSKeyValueChange,valuesAtIndexes:IndexSet,forKey:String)*/
    /*Foundation.(file).NSObject.willChange(_:NSKeyValueChange,valuesAtIndexes:IndexSet,forKey:String)*/
    NSObject.willChangeValuesAtIndexesForKey = function ($info, changeKind, indexes, key) {
    };
    /*Foundation.(file).NSObject.willChange(_:NSKeyValueChange,valuesAtIndexes:IndexSet,forKey:String)*/
    /*Foundation.(file).NSObject.willChange(_:NSKeyValueChange,valuesAtIndexes:IndexSet,forKey:String)*/
    NSObject.prototype.willChangeValuesAtIndexesForKey = function ($info, changeKind, indexes, key) {
    };
    /*Foundation.(file).NSObject.didChange(_:NSKeyValueChange,valuesAt:IndexSet,forKey:String)*/
    /*Foundation.(file).NSObject.didChange(_:NSKeyValueChange,valuesAt:IndexSet,forKey:String)*/
    NSObject.didChangeValuesAtForKey = function ($info, changeKind, indexes, key) {
    };
    /*Foundation.(file).NSObject.didChange(_:NSKeyValueChange,valuesAt:IndexSet,forKey:String)*/
    /*Foundation.(file).NSObject.didChange(_:NSKeyValueChange,valuesAt:IndexSet,forKey:String)*/
    NSObject.prototype.didChangeValuesAtForKey = function ($info, changeKind, indexes, key) {
    };
    /*Foundation.(file).NSObject.didChange(_:NSKeyValueChange,valuesAtIndexes:IndexSet,forKey:String)*/
    /*Foundation.(file).NSObject.didChange(_:NSKeyValueChange,valuesAtIndexes:IndexSet,forKey:String)*/
    NSObject.didChangeValuesAtIndexesForKey = function ($info, changeKind, indexes, key) {
    };
    /*Foundation.(file).NSObject.didChange(_:NSKeyValueChange,valuesAtIndexes:IndexSet,forKey:String)*/
    /*Foundation.(file).NSObject.didChange(_:NSKeyValueChange,valuesAtIndexes:IndexSet,forKey:String)*/
    NSObject.prototype.didChangeValuesAtIndexesForKey = function ($info, changeKind, indexes, key) {
    };
    /*Foundation.(file).NSObject.willChangeValue(forKey:String,withSetMutation:NSKeyValueSetMutationKind,using:Set<AnyHashable>)*/
    /*Foundation.(file).NSObject.willChangeValue(forKey:String,withSetMutation:NSKeyValueSetMutationKind,using:Set<AnyHashable>)*/
    NSObject.willChangeValueForKeyWithSetMutationUsing = function ($info, key, mutationKind, objects) {
    };
    /*Foundation.(file).NSObject.willChangeValue(forKey:String,withSetMutation:NSKeyValueSetMutationKind,using:Set<AnyHashable>)*/
    /*Foundation.(file).NSObject.willChangeValue(forKey:String,withSetMutation:NSKeyValueSetMutationKind,using:Set<AnyHashable>)*/
    NSObject.prototype.willChangeValueForKeyWithSetMutationUsing = function ($info, key, mutationKind, objects) {
    };
    /*Foundation.(file).NSObject.willChangeValueForKey(_:String,withSetMutation:NSKeyValueSetMutationKind,usingObjects:Set<AnyHashable>)*/
    /*Foundation.(file).NSObject.willChangeValueForKey(_:String,withSetMutation:NSKeyValueSetMutationKind,usingObjects:Set<AnyHashable>)*/
    NSObject.willChangeValueForKeyWithSetMutationUsingObjects = function ($info, key, mutationKind, objects) {
    };
    /*Foundation.(file).NSObject.willChangeValueForKey(_:String,withSetMutation:NSKeyValueSetMutationKind,usingObjects:Set<AnyHashable>)*/
    /*Foundation.(file).NSObject.willChangeValueForKey(_:String,withSetMutation:NSKeyValueSetMutationKind,usingObjects:Set<AnyHashable>)*/
    NSObject.prototype.willChangeValueForKeyWithSetMutationUsingObjects = function ($info, key, mutationKind, objects) {
    };
    /*Foundation.(file).NSObject.didChangeValue(forKey:String,withSetMutation:NSKeyValueSetMutationKind,using:Set<AnyHashable>)*/
    /*Foundation.(file).NSObject.didChangeValue(forKey:String,withSetMutation:NSKeyValueSetMutationKind,using:Set<AnyHashable>)*/
    NSObject.didChangeValueForKeyWithSetMutationUsing = function ($info, key, mutationKind, objects) {
    };
    /*Foundation.(file).NSObject.didChangeValue(forKey:String,withSetMutation:NSKeyValueSetMutationKind,using:Set<AnyHashable>)*/
    /*Foundation.(file).NSObject.didChangeValue(forKey:String,withSetMutation:NSKeyValueSetMutationKind,using:Set<AnyHashable>)*/
    NSObject.prototype.didChangeValueForKeyWithSetMutationUsing = function ($info, key, mutationKind, objects) {
    };
    /*Foundation.(file).NSObject.didChangeValueForKey(_:String,withSetMutation:NSKeyValueSetMutationKind,usingObjects:Set<AnyHashable>)*/
    /*Foundation.(file).NSObject.didChangeValueForKey(_:String,withSetMutation:NSKeyValueSetMutationKind,usingObjects:Set<AnyHashable>)*/
    NSObject.didChangeValueForKeyWithSetMutationUsingObjects = function ($info, key, mutationKind, objects) {
    };
    /*Foundation.(file).NSObject.didChangeValueForKey(_:String,withSetMutation:NSKeyValueSetMutationKind,usingObjects:Set<AnyHashable>)*/
    /*Foundation.(file).NSObject.didChangeValueForKey(_:String,withSetMutation:NSKeyValueSetMutationKind,usingObjects:Set<AnyHashable>)*/
    NSObject.prototype.didChangeValueForKeyWithSetMutationUsingObjects = function ($info, key, mutationKind, objects) {
    };
    /*Foundation.(file).NSObject.keyPathsForValuesAffectingValue(forKey:String)*/
    /*Foundation.(file).NSObject.keyPathsForValuesAffectingValue(forKey:String)*/
    NSObject.keyPathsForValuesAffectingValueForKey = function ($info, key) {
    };
    /*Foundation.(file).NSObject.keyPathsForValuesAffectingValueForKey(_:String)*/
    /*Foundation.(file).NSObject.keyPathsForValuesAffectingValueForKey(_:String)*/
    NSObject.keyPathsForValuesAffectingValueForKey = function ($info, key) {
    };
    /*Foundation.(file).NSObject.automaticallyNotifiesObservers(forKey:String)*/
    /*Foundation.(file).NSObject.automaticallyNotifiesObservers(forKey:String)*/
    NSObject.automaticallyNotifiesObserversForKey = function ($info, key) {
    };
    /*Foundation.(file).NSObject.automaticallyNotifiesObserversForKey(_:String)*/
    /*Foundation.(file).NSObject.automaticallyNotifiesObserversForKey(_:String)*/
    NSObject.automaticallyNotifiesObserversForKey = function ($info, key) {
    };
    /*Foundation.(file).NSObject.observationInfo()*/
    /*Foundation.(file).NSObject.observationInfo()*/
    NSObject.observationInfo = function ($info) {
    };
    /*Foundation.(file).NSObject.setObservationInfo(_:UnsafeMutableRawPointer?)*/
    /*Foundation.(file).NSObject.setObservationInfo(_:UnsafeMutableRawPointer?)*/
    NSObject.setObservationInfo = function ($info, observationInfo) {
    };
    /*Foundation.(file).NSObject.setKeys(_:[Any],triggerChangeNotificationsForDependentKey:String)*/
    /*Foundation.(file).NSObject.setKeys(_:[Any],triggerChangeNotificationsForDependentKey:String)*/
    NSObject.setKeysTriggerChangeNotificationsForDependentKey = function ($info, keys, dependentKey) {
    };
    /*Foundation.(file).NSObject.replacementObject(for:NSKeyedArchiver)*/
    /*Foundation.(file).NSObject.replacementObject(for:NSKeyedArchiver)*/
    NSObject.replacementObjectFor = function ($info, archiver) {
    };
    /*Foundation.(file).NSObject.replacementObject(for:NSKeyedArchiver)*/
    /*Foundation.(file).NSObject.replacementObject(for:NSKeyedArchiver)*/
    NSObject.prototype.replacementObjectFor = function ($info, archiver) {
    };
    /*Foundation.(file).NSObject.replacementObjectForKeyedArchiver(_:NSKeyedArchiver)*/
    /*Foundation.(file).NSObject.replacementObjectForKeyedArchiver(_:NSKeyedArchiver)*/
    NSObject.replacementObjectForKeyedArchiver = function ($info, archiver) {
    };
    /*Foundation.(file).NSObject.replacementObjectForKeyedArchiver(_:NSKeyedArchiver)*/
    /*Foundation.(file).NSObject.replacementObjectForKeyedArchiver(_:NSKeyedArchiver)*/
    NSObject.prototype.replacementObjectForKeyedArchiver = function ($info, archiver) {
    };
    /*Foundation.(file).NSObject.classFallbacksForKeyedArchiver()*/
    /*Foundation.(file).NSObject.classFallbacksForKeyedArchiver()*/
    NSObject.classFallbacksForKeyedArchiver = function ($info) {
    };
    /*Foundation.(file).NSObject.classForKeyedArchiver()*/
    /*Foundation.(file).NSObject.classForKeyedArchiver()*/
    NSObject.classForKeyedArchiver = function ($info) {
    };
    /*Foundation.(file).NSObject.classForKeyedUnarchiver()*/
    /*Foundation.(file).NSObject.classForKeyedUnarchiver()*/
    NSObject.classForKeyedUnarchiver = function ($info) {
    };
    /*Foundation.(file).NSObject.performSelector(onMainThread:Selector,with:Any?,waitUntilDone:Bool,modes:[String]?)*/
    /*Foundation.(file).NSObject.performSelector(onMainThread:Selector,with:Any?,waitUntilDone:Bool,modes:[String]?)*/
    NSObject.performSelectorOnMainThreadWithWaitUntilDoneModes = function ($info, aSelector, arg, wait, array) {
    };
    /*Foundation.(file).NSObject.performSelector(onMainThread:Selector,with:Any?,waitUntilDone:Bool,modes:[String]?)*/
    /*Foundation.(file).NSObject.performSelector(onMainThread:Selector,with:Any?,waitUntilDone:Bool,modes:[String]?)*/
    NSObject.prototype.performSelectorOnMainThreadWithWaitUntilDoneModes = function ($info, aSelector, arg, wait, array) {
    };
    /*Foundation.(file).NSObject.performSelectorOnMainThread(_:Selector,withObject:Any?,waitUntilDone:Bool,modes:[String]?)*/
    /*Foundation.(file).NSObject.performSelectorOnMainThread(_:Selector,withObject:Any?,waitUntilDone:Bool,modes:[String]?)*/
    NSObject.performSelectorOnMainThreadWithObjectWaitUntilDoneModes = function ($info, aSelector, arg, wait, array) {
    };
    /*Foundation.(file).NSObject.performSelectorOnMainThread(_:Selector,withObject:Any?,waitUntilDone:Bool,modes:[String]?)*/
    /*Foundation.(file).NSObject.performSelectorOnMainThread(_:Selector,withObject:Any?,waitUntilDone:Bool,modes:[String]?)*/
    NSObject.prototype.performSelectorOnMainThreadWithObjectWaitUntilDoneModes = function ($info, aSelector, arg, wait, array) {
    };
    /*Foundation.(file).NSObject.performSelector(onMainThread:Selector,with:Any?,waitUntilDone:Bool)*/
    /*Foundation.(file).NSObject.performSelector(onMainThread:Selector,with:Any?,waitUntilDone:Bool)*/
    NSObject.performSelectorOnMainThreadWithWaitUntilDone = function ($info, aSelector, arg, wait) {
    };
    /*Foundation.(file).NSObject.performSelector(onMainThread:Selector,with:Any?,waitUntilDone:Bool)*/
    /*Foundation.(file).NSObject.performSelector(onMainThread:Selector,with:Any?,waitUntilDone:Bool)*/
    NSObject.prototype.performSelectorOnMainThreadWithWaitUntilDone = function ($info, aSelector, arg, wait) {
    };
    /*Foundation.(file).NSObject.performSelectorOnMainThread(_:Selector,withObject:Any?,waitUntilDone:Bool)*/
    /*Foundation.(file).NSObject.performSelectorOnMainThread(_:Selector,withObject:Any?,waitUntilDone:Bool)*/
    NSObject.performSelectorOnMainThreadWithObjectWaitUntilDone = function ($info, aSelector, arg, wait) {
    };
    /*Foundation.(file).NSObject.performSelectorOnMainThread(_:Selector,withObject:Any?,waitUntilDone:Bool)*/
    /*Foundation.(file).NSObject.performSelectorOnMainThread(_:Selector,withObject:Any?,waitUntilDone:Bool)*/
    NSObject.prototype.performSelectorOnMainThreadWithObjectWaitUntilDone = function ($info, aSelector, arg, wait) {
    };
    /*Foundation.(file).NSObject.perform(_:Selector,on:Thread,with:Any?,waitUntilDone:Bool,modes:[String]?)*/
    /*Foundation.(file).NSObject.perform(_:Selector,on:Thread,with:Any?,waitUntilDone:Bool,modes:[String]?)*/
    NSObject.performOnWithWaitUntilDoneModes = function ($info, aSelector, thr, arg, wait, array) {
    };
    /*Foundation.(file).NSObject.perform(_:Selector,on:Thread,with:Any?,waitUntilDone:Bool,modes:[String]?)*/
    /*Foundation.(file).NSObject.perform(_:Selector,on:Thread,with:Any?,waitUntilDone:Bool,modes:[String]?)*/
    NSObject.prototype.performOnWithWaitUntilDoneModes = function ($info, aSelector, thr, arg, wait, array) {
    };
    /*Foundation.(file).NSObject.performSelector(_:Selector,onThread:Thread,withObject:Any?,waitUntilDone:Bool,modes:[String]?)*/
    /*Foundation.(file).NSObject.performSelector(_:Selector,onThread:Thread,withObject:Any?,waitUntilDone:Bool,modes:[String]?)*/
    NSObject.performSelectorOnThreadWithObjectWaitUntilDoneModes = function ($info, aSelector, thr, arg, wait, array) {
    };
    /*Foundation.(file).NSObject.performSelector(_:Selector,onThread:Thread,withObject:Any?,waitUntilDone:Bool,modes:[String]?)*/
    /*Foundation.(file).NSObject.performSelector(_:Selector,onThread:Thread,withObject:Any?,waitUntilDone:Bool,modes:[String]?)*/
    NSObject.prototype.performSelectorOnThreadWithObjectWaitUntilDoneModes = function ($info, aSelector, thr, arg, wait, array) {
    };
    /*Foundation.(file).NSObject.perform(_:Selector,on:Thread,with:Any?,waitUntilDone:Bool)*/
    /*Foundation.(file).NSObject.perform(_:Selector,on:Thread,with:Any?,waitUntilDone:Bool)*/
    NSObject.performOnWithWaitUntilDone = function ($info, aSelector, thr, arg, wait) {
    };
    /*Foundation.(file).NSObject.perform(_:Selector,on:Thread,with:Any?,waitUntilDone:Bool)*/
    /*Foundation.(file).NSObject.perform(_:Selector,on:Thread,with:Any?,waitUntilDone:Bool)*/
    NSObject.prototype.performOnWithWaitUntilDone = function ($info, aSelector, thr, arg, wait) {
    };
    /*Foundation.(file).NSObject.performSelector(_:Selector,onThread:Thread,withObject:Any?,waitUntilDone:Bool)*/
    /*Foundation.(file).NSObject.performSelector(_:Selector,onThread:Thread,withObject:Any?,waitUntilDone:Bool)*/
    NSObject.performSelectorOnThreadWithObjectWaitUntilDone = function ($info, aSelector, thr, arg, wait) {
    };
    /*Foundation.(file).NSObject.performSelector(_:Selector,onThread:Thread,withObject:Any?,waitUntilDone:Bool)*/
    /*Foundation.(file).NSObject.performSelector(_:Selector,onThread:Thread,withObject:Any?,waitUntilDone:Bool)*/
    NSObject.prototype.performSelectorOnThreadWithObjectWaitUntilDone = function ($info, aSelector, thr, arg, wait) {
    };
    /*Foundation.(file).NSObject.performSelector(inBackground:Selector,with:Any?)*/
    /*Foundation.(file).NSObject.performSelector(inBackground:Selector,with:Any?)*/
    NSObject.performSelectorInBackgroundWith = function ($info, aSelector, arg) {
    };
    /*Foundation.(file).NSObject.performSelector(inBackground:Selector,with:Any?)*/
    /*Foundation.(file).NSObject.performSelector(inBackground:Selector,with:Any?)*/
    NSObject.prototype.performSelectorInBackgroundWith = function ($info, aSelector, arg) {
    };
    /*Foundation.(file).NSObject.performSelectorInBackground(_:Selector,withObject:Any?)*/
    /*Foundation.(file).NSObject.performSelectorInBackground(_:Selector,withObject:Any?)*/
    NSObject.performSelectorInBackgroundWithObject = function ($info, aSelector, arg) {
    };
    /*Foundation.(file).NSObject.performSelectorInBackground(_:Selector,withObject:Any?)*/
    /*Foundation.(file).NSObject.performSelectorInBackground(_:Selector,withObject:Any?)*/
    NSObject.prototype.performSelectorInBackgroundWithObject = function ($info, aSelector, arg) {
    };
    /*Foundation.(file).NSObject.replacementObject(for:NSArchiver)*/
    /*Foundation.(file).NSObject.replacementObject(for:NSArchiver)*/
    NSObject.replacementObjectFor = function ($info, archiver) {
    };
    /*Foundation.(file).NSObject.replacementObject(for:NSArchiver)*/
    /*Foundation.(file).NSObject.replacementObject(for:NSArchiver)*/
    NSObject.prototype.replacementObjectFor = function ($info, archiver) {
    };
    /*Foundation.(file).NSObject.replacementObjectForArchiver(_:NSArchiver)*/
    /*Foundation.(file).NSObject.replacementObjectForArchiver(_:NSArchiver)*/
    NSObject.replacementObjectForArchiver = function ($info, archiver) {
    };
    /*Foundation.(file).NSObject.replacementObjectForArchiver(_:NSArchiver)*/
    /*Foundation.(file).NSObject.replacementObjectForArchiver(_:NSArchiver)*/
    NSObject.prototype.replacementObjectForArchiver = function ($info, archiver) {
    };
    /*Foundation.(file).NSObject.classForArchiver()*/
    /*Foundation.(file).NSObject.classForArchiver()*/
    NSObject.classForArchiver = function ($info) {
    };
    /*Foundation.(file).NSObject.replacementObject(for:NSPortCoder)*/
    /*Foundation.(file).NSObject.replacementObject(for:NSPortCoder)*/
    NSObject.replacementObjectFor = function ($info, coder) {
    };
    /*Foundation.(file).NSObject.replacementObject(for:NSPortCoder)*/
    /*Foundation.(file).NSObject.replacementObject(for:NSPortCoder)*/
    NSObject.prototype.replacementObjectFor = function ($info, coder) {
    };
    /*Foundation.(file).NSObject.replacementObjectForPortCoder(_:NSPortCoder)*/
    /*Foundation.(file).NSObject.replacementObjectForPortCoder(_:NSPortCoder)*/
    NSObject.replacementObjectForPortCoder = function ($info, coder) {
    };
    /*Foundation.(file).NSObject.replacementObjectForPortCoder(_:NSPortCoder)*/
    /*Foundation.(file).NSObject.replacementObjectForPortCoder(_:NSPortCoder)*/
    NSObject.prototype.replacementObjectForPortCoder = function ($info, coder) {
    };
    /*Foundation.(file).NSObject.classForPortCoder()*/
    /*Foundation.(file).NSObject.classForPortCoder()*/
    NSObject.classForPortCoder = function ($info) {
    };
    /*Foundation.(file).NSObject.inverse(forRelationshipKey:String)*/
    /*Foundation.(file).NSObject.inverse(forRelationshipKey:String)*/
    NSObject.inverseForRelationshipKey = function ($info, relationshipKey) {
    };
    /*Foundation.(file).NSObject.inverse(forRelationshipKey:String)*/
    /*Foundation.(file).NSObject.inverse(forRelationshipKey:String)*/
    NSObject.prototype.inverseForRelationshipKey = function ($info, relationshipKey) {
    };
    /*Foundation.(file).NSObject.inverseForRelationshipKey(_:String)*/
    /*Foundation.(file).NSObject.inverseForRelationshipKey(_:String)*/
    NSObject.inverseForRelationshipKey = function ($info, relationshipKey) {
    };
    /*Foundation.(file).NSObject.inverseForRelationshipKey(_:String)*/
    /*Foundation.(file).NSObject.inverseForRelationshipKey(_:String)*/
    NSObject.prototype.inverseForRelationshipKey = function ($info, relationshipKey) {
    };
    /*Foundation.(file).NSObject.classDescription()*/
    /*Foundation.(file).NSObject.classDescription()*/
    NSObject.classDescription = function ($info) {
    };
    /*Foundation.(file).NSObject.attributeKeys()*/
    /*Foundation.(file).NSObject.attributeKeys()*/
    NSObject.attributeKeys = function ($info) {
    };
    /*Foundation.(file).NSObject.toOneRelationshipKeys()*/
    /*Foundation.(file).NSObject.toOneRelationshipKeys()*/
    NSObject.toOneRelationshipKeys = function ($info) {
    };
    /*Foundation.(file).NSObject.toManyRelationshipKeys()*/
    /*Foundation.(file).NSObject.toManyRelationshipKeys()*/
    NSObject.toManyRelationshipKeys = function ($info) {
    };
    /*Foundation.(file).NSObject.scriptingValue(for:NSScriptObjectSpecifier)*/
    /*Foundation.(file).NSObject.scriptingValue(for:NSScriptObjectSpecifier)*/
    NSObject.scriptingValueFor = function ($info, objectSpecifier) {
    };
    /*Foundation.(file).NSObject.scriptingValue(for:NSScriptObjectSpecifier)*/
    /*Foundation.(file).NSObject.scriptingValue(for:NSScriptObjectSpecifier)*/
    NSObject.prototype.scriptingValueFor = function ($info, objectSpecifier) {
    };
    /*Foundation.(file).NSObject.scriptingValueForSpecifier(_:NSScriptObjectSpecifier)*/
    /*Foundation.(file).NSObject.scriptingValueForSpecifier(_:NSScriptObjectSpecifier)*/
    NSObject.scriptingValueForSpecifier = function ($info, objectSpecifier) {
    };
    /*Foundation.(file).NSObject.scriptingValueForSpecifier(_:NSScriptObjectSpecifier)*/
    /*Foundation.(file).NSObject.scriptingValueForSpecifier(_:NSScriptObjectSpecifier)*/
    NSObject.prototype.scriptingValueForSpecifier = function ($info, objectSpecifier) {
    };
    /*Foundation.(file).NSObject.copyScriptingValue(_:Any,forKey:String,withProperties:[String : Any])*/
    /*Foundation.(file).NSObject.copyScriptingValue(_:Any,forKey:String,withProperties:[String : Any])*/
    NSObject.copyScriptingValueForKeyWithProperties = function ($info, value, key, properties) {
    };
    /*Foundation.(file).NSObject.copyScriptingValue(_:Any,forKey:String,withProperties:[String : Any])*/
    /*Foundation.(file).NSObject.copyScriptingValue(_:Any,forKey:String,withProperties:[String : Any])*/
    NSObject.prototype.copyScriptingValueForKeyWithProperties = function ($info, value, key, properties) {
    };
    /*Foundation.(file).NSObject.newScriptingObject(of:AnyClass,forValueForKey:String,withContentsValue:Any?,properties:[String : Any])*/
    /*Foundation.(file).NSObject.newScriptingObject(of:AnyClass,forValueForKey:String,withContentsValue:Any?,properties:[String : Any])*/
    NSObject.newScriptingObjectOfForValueForKeyWithContentsValueProperties = function ($info, objectClass, key, contentsValue, properties) {
    };
    /*Foundation.(file).NSObject.newScriptingObject(of:AnyClass,forValueForKey:String,withContentsValue:Any?,properties:[String : Any])*/
    /*Foundation.(file).NSObject.newScriptingObject(of:AnyClass,forValueForKey:String,withContentsValue:Any?,properties:[String : Any])*/
    NSObject.prototype.newScriptingObjectOfForValueForKeyWithContentsValueProperties = function ($info, objectClass, key, contentsValue, properties) {
    };
    /*Foundation.(file).NSObject.newScriptingObjectOfClass(_:AnyClass,forValueForKey:String,withContentsValue:Any?,properties:[String : Any])*/
    /*Foundation.(file).NSObject.newScriptingObjectOfClass(_:AnyClass,forValueForKey:String,withContentsValue:Any?,properties:[String : Any])*/
    NSObject.newScriptingObjectOfClassForValueForKeyWithContentsValueProperties = function ($info, objectClass, key, contentsValue, properties) {
    };
    /*Foundation.(file).NSObject.newScriptingObjectOfClass(_:AnyClass,forValueForKey:String,withContentsValue:Any?,properties:[String : Any])*/
    /*Foundation.(file).NSObject.newScriptingObjectOfClass(_:AnyClass,forValueForKey:String,withContentsValue:Any?,properties:[String : Any])*/
    NSObject.prototype.newScriptingObjectOfClassForValueForKeyWithContentsValueProperties = function ($info, objectClass, key, contentsValue, properties) {
    };
    /*Foundation.(file).NSObject.scriptingProperties()*/
    /*Foundation.(file).NSObject.scriptingProperties()*/
    NSObject.scriptingProperties = function ($info) {
    };
    /*Foundation.(file).NSObject.setScriptingProperties(_:[String : Any]?)*/
    /*Foundation.(file).NSObject.setScriptingProperties(_:[String : Any]?)*/
    NSObject.setScriptingProperties = function ($info, scriptingProperties) {
    };
    /*Foundation.(file).NSObject.classCode()*/
    /*Foundation.(file).NSObject.classCode()*/
    NSObject.classCode = function ($info) {
    };
    /*Foundation.(file).NSObject.className()*/
    /*Foundation.(file).NSObject.className()*/
    NSObject.className = function ($info) {
    };
    /*Foundation.(file).NSObject.value(at:Int,inPropertyWithKey:String)*/
    /*Foundation.(file).NSObject.value(at:Int,inPropertyWithKey:String)*/
    NSObject.valueAtInPropertyWithKey = function ($info, index, key) {
    };
    /*Foundation.(file).NSObject.value(at:Int,inPropertyWithKey:String)*/
    /*Foundation.(file).NSObject.value(at:Int,inPropertyWithKey:String)*/
    NSObject.prototype.valueAtInPropertyWithKey = function ($info, index, key) {
    };
    /*Foundation.(file).NSObject.valueAtIndex(_:Int,inPropertyWithKey:String)*/
    /*Foundation.(file).NSObject.valueAtIndex(_:Int,inPropertyWithKey:String)*/
    NSObject.valueAtIndexInPropertyWithKey = function ($info, index, key) {
    };
    /*Foundation.(file).NSObject.valueAtIndex(_:Int,inPropertyWithKey:String)*/
    /*Foundation.(file).NSObject.valueAtIndex(_:Int,inPropertyWithKey:String)*/
    NSObject.prototype.valueAtIndexInPropertyWithKey = function ($info, index, key) {
    };
    /*Foundation.(file).NSObject.value(withName:String,inPropertyWithKey:String)*/
    /*Foundation.(file).NSObject.value(withName:String,inPropertyWithKey:String)*/
    NSObject.valueWithNameInPropertyWithKey = function ($info, _name, key) {
    };
    /*Foundation.(file).NSObject.value(withName:String,inPropertyWithKey:String)*/
    /*Foundation.(file).NSObject.value(withName:String,inPropertyWithKey:String)*/
    NSObject.prototype.valueWithNameInPropertyWithKey = function ($info, _name, key) {
    };
    /*Foundation.(file).NSObject.valueWithName(_:String,inPropertyWithKey:String)*/
    /*Foundation.(file).NSObject.valueWithName(_:String,inPropertyWithKey:String)*/
    NSObject.valueWithNameInPropertyWithKey = function ($info, _name, key) {
    };
    /*Foundation.(file).NSObject.valueWithName(_:String,inPropertyWithKey:String)*/
    /*Foundation.(file).NSObject.valueWithName(_:String,inPropertyWithKey:String)*/
    NSObject.prototype.valueWithNameInPropertyWithKey = function ($info, _name, key) {
    };
    /*Foundation.(file).NSObject.value(withUniqueID:Any,inPropertyWithKey:String)*/
    /*Foundation.(file).NSObject.value(withUniqueID:Any,inPropertyWithKey:String)*/
    NSObject.valueWithUniqueIDInPropertyWithKey = function ($info, uniqueID, key) {
    };
    /*Foundation.(file).NSObject.value(withUniqueID:Any,inPropertyWithKey:String)*/
    /*Foundation.(file).NSObject.value(withUniqueID:Any,inPropertyWithKey:String)*/
    NSObject.prototype.valueWithUniqueIDInPropertyWithKey = function ($info, uniqueID, key) {
    };
    /*Foundation.(file).NSObject.valueWithUniqueID(_:Any,inPropertyWithKey:String)*/
    /*Foundation.(file).NSObject.valueWithUniqueID(_:Any,inPropertyWithKey:String)*/
    NSObject.valueWithUniqueIDInPropertyWithKey = function ($info, uniqueID, key) {
    };
    /*Foundation.(file).NSObject.valueWithUniqueID(_:Any,inPropertyWithKey:String)*/
    /*Foundation.(file).NSObject.valueWithUniqueID(_:Any,inPropertyWithKey:String)*/
    NSObject.prototype.valueWithUniqueIDInPropertyWithKey = function ($info, uniqueID, key) {
    };
    /*Foundation.(file).NSObject.insertValue(_:Any,at:Int,inPropertyWithKey:String)*/
    /*Foundation.(file).NSObject.insertValue(_:Any,at:Int,inPropertyWithKey:String)*/
    NSObject.insertValueAtInPropertyWithKey = function ($info, value, index, key) {
    };
    /*Foundation.(file).NSObject.insertValue(_:Any,at:Int,inPropertyWithKey:String)*/
    /*Foundation.(file).NSObject.insertValue(_:Any,at:Int,inPropertyWithKey:String)*/
    NSObject.prototype.insertValueAtInPropertyWithKey = function ($info, value, index, key) {
    };
    /*Foundation.(file).NSObject.insertValue(_:Any,atIndex:Int,inPropertyWithKey:String)*/
    /*Foundation.(file).NSObject.insertValue(_:Any,atIndex:Int,inPropertyWithKey:String)*/
    NSObject.insertValueAtIndexInPropertyWithKey = function ($info, value, index, key) {
    };
    /*Foundation.(file).NSObject.insertValue(_:Any,atIndex:Int,inPropertyWithKey:String)*/
    /*Foundation.(file).NSObject.insertValue(_:Any,atIndex:Int,inPropertyWithKey:String)*/
    NSObject.prototype.insertValueAtIndexInPropertyWithKey = function ($info, value, index, key) {
    };
    /*Foundation.(file).NSObject.removeValue(at:Int,fromPropertyWithKey:String)*/
    /*Foundation.(file).NSObject.removeValue(at:Int,fromPropertyWithKey:String)*/
    NSObject.removeValueAtFromPropertyWithKey = function ($info, index, key) {
    };
    /*Foundation.(file).NSObject.removeValue(at:Int,fromPropertyWithKey:String)*/
    /*Foundation.(file).NSObject.removeValue(at:Int,fromPropertyWithKey:String)*/
    NSObject.prototype.removeValueAtFromPropertyWithKey = function ($info, index, key) {
    };
    /*Foundation.(file).NSObject.removeValueAtIndex(_:Int,fromPropertyWithKey:String)*/
    /*Foundation.(file).NSObject.removeValueAtIndex(_:Int,fromPropertyWithKey:String)*/
    NSObject.removeValueAtIndexFromPropertyWithKey = function ($info, index, key) {
    };
    /*Foundation.(file).NSObject.removeValueAtIndex(_:Int,fromPropertyWithKey:String)*/
    /*Foundation.(file).NSObject.removeValueAtIndex(_:Int,fromPropertyWithKey:String)*/
    NSObject.prototype.removeValueAtIndexFromPropertyWithKey = function ($info, index, key) {
    };
    /*Foundation.(file).NSObject.replaceValue(at:Int,inPropertyWithKey:String,withValue:Any)*/
    /*Foundation.(file).NSObject.replaceValue(at:Int,inPropertyWithKey:String,withValue:Any)*/
    NSObject.replaceValueAtInPropertyWithKeyWithValue = function ($info, index, key, value) {
    };
    /*Foundation.(file).NSObject.replaceValue(at:Int,inPropertyWithKey:String,withValue:Any)*/
    /*Foundation.(file).NSObject.replaceValue(at:Int,inPropertyWithKey:String,withValue:Any)*/
    NSObject.prototype.replaceValueAtInPropertyWithKeyWithValue = function ($info, index, key, value) {
    };
    /*Foundation.(file).NSObject.replaceValueAtIndex(_:Int,inPropertyWithKey:String,withValue:Any)*/
    /*Foundation.(file).NSObject.replaceValueAtIndex(_:Int,inPropertyWithKey:String,withValue:Any)*/
    NSObject.replaceValueAtIndexInPropertyWithKeyWithValue = function ($info, index, key, value) {
    };
    /*Foundation.(file).NSObject.replaceValueAtIndex(_:Int,inPropertyWithKey:String,withValue:Any)*/
    /*Foundation.(file).NSObject.replaceValueAtIndex(_:Int,inPropertyWithKey:String,withValue:Any)*/
    NSObject.prototype.replaceValueAtIndexInPropertyWithKeyWithValue = function ($info, index, key, value) {
    };
    /*Foundation.(file).NSObject.insertValue(_:Any,inPropertyWithKey:String)*/
    /*Foundation.(file).NSObject.insertValue(_:Any,inPropertyWithKey:String)*/
    NSObject.insertValueInPropertyWithKey = function ($info, value, key) {
    };
    /*Foundation.(file).NSObject.insertValue(_:Any,inPropertyWithKey:String)*/
    /*Foundation.(file).NSObject.insertValue(_:Any,inPropertyWithKey:String)*/
    NSObject.prototype.insertValueInPropertyWithKey = function ($info, value, key) {
    };
    /*Foundation.(file).NSObject.coerceValue(_:Any?,forKey:String)*/
    /*Foundation.(file).NSObject.coerceValue(_:Any?,forKey:String)*/
    NSObject.coerceValueForKey = function ($info, value, key) {
    };
    /*Foundation.(file).NSObject.coerceValue(_:Any?,forKey:String)*/
    /*Foundation.(file).NSObject.coerceValue(_:Any?,forKey:String)*/
    NSObject.prototype.coerceValueForKey = function ($info, value, key) {
    };
    /*Foundation.(file).NSObject.indicesOfObjects(byEvaluatingObjectSpecifier:NSScriptObjectSpecifier)*/
    /*Foundation.(file).NSObject.indicesOfObjects(byEvaluatingObjectSpecifier:NSScriptObjectSpecifier)*/
    NSObject.indicesOfObjectsByEvaluatingObjectSpecifier = function ($info, specifier) {
    };
    /*Foundation.(file).NSObject.indicesOfObjects(byEvaluatingObjectSpecifier:NSScriptObjectSpecifier)*/
    /*Foundation.(file).NSObject.indicesOfObjects(byEvaluatingObjectSpecifier:NSScriptObjectSpecifier)*/
    NSObject.prototype.indicesOfObjectsByEvaluatingObjectSpecifier = function ($info, specifier) {
    };
    /*Foundation.(file).NSObject.indicesOfObjectsByEvaluatingObjectSpecifier(_:NSScriptObjectSpecifier)*/
    /*Foundation.(file).NSObject.indicesOfObjectsByEvaluatingObjectSpecifier(_:NSScriptObjectSpecifier)*/
    NSObject.indicesOfObjectsByEvaluatingObjectSpecifier = function ($info, specifier) {
    };
    /*Foundation.(file).NSObject.indicesOfObjectsByEvaluatingObjectSpecifier(_:NSScriptObjectSpecifier)*/
    /*Foundation.(file).NSObject.indicesOfObjectsByEvaluatingObjectSpecifier(_:NSScriptObjectSpecifier)*/
    NSObject.prototype.indicesOfObjectsByEvaluatingObjectSpecifier = function ($info, specifier) {
    };
    /*Foundation.(file).NSObject.objectSpecifier()*/
    /*Foundation.(file).NSObject.objectSpecifier()*/
    NSObject.objectSpecifier = function ($info) {
    };
    /*Foundation.(file).NSObject.isEqual(to:Any?)*/
    /*Foundation.(file).NSObject.isEqual(to:Any?)*/
    NSObject.isEqualTo = function ($info, object) {
    };
    /*Foundation.(file).NSObject.isEqual(to:Any?)*/
    /*Foundation.(file).NSObject.isEqual(to:Any?)*/
    NSObject.prototype.isEqualTo = function ($info, object) {
    };
    /*Foundation.(file).NSObject.isEqualTo(_:Any?)*/
    /*Foundation.(file).NSObject.isEqualTo(_:Any?)*/
    NSObject.isEqualTo = function ($info, object) {
    };
    /*Foundation.(file).NSObject.isEqualTo(_:Any?)*/
    /*Foundation.(file).NSObject.isEqualTo(_:Any?)*/
    NSObject.prototype.isEqualTo = function ($info, object) {
    };
    /*Foundation.(file).NSObject.isLessThanOrEqual(to:Any?)*/
    /*Foundation.(file).NSObject.isLessThanOrEqual(to:Any?)*/
    NSObject.isLessThanOrEqualTo = function ($info, object) {
    };
    /*Foundation.(file).NSObject.isLessThanOrEqual(to:Any?)*/
    /*Foundation.(file).NSObject.isLessThanOrEqual(to:Any?)*/
    NSObject.prototype.isLessThanOrEqualTo = function ($info, object) {
    };
    /*Foundation.(file).NSObject.isLessThanOrEqualTo(_:Any?)*/
    /*Foundation.(file).NSObject.isLessThanOrEqualTo(_:Any?)*/
    NSObject.isLessThanOrEqualTo = function ($info, object) {
    };
    /*Foundation.(file).NSObject.isLessThanOrEqualTo(_:Any?)*/
    /*Foundation.(file).NSObject.isLessThanOrEqualTo(_:Any?)*/
    NSObject.prototype.isLessThanOrEqualTo = function ($info, object) {
    };
    /*Foundation.(file).NSObject.isLessThan(_:Any?)*/
    /*Foundation.(file).NSObject.isLessThan(_:Any?)*/
    NSObject.isLessThan = function ($info, object) {
    };
    /*Foundation.(file).NSObject.isLessThan(_:Any?)*/
    /*Foundation.(file).NSObject.isLessThan(_:Any?)*/
    NSObject.prototype.isLessThan = function ($info, object) {
    };
    /*Foundation.(file).NSObject.isGreaterThanOrEqual(to:Any?)*/
    /*Foundation.(file).NSObject.isGreaterThanOrEqual(to:Any?)*/
    NSObject.isGreaterThanOrEqualTo = function ($info, object) {
    };
    /*Foundation.(file).NSObject.isGreaterThanOrEqual(to:Any?)*/
    /*Foundation.(file).NSObject.isGreaterThanOrEqual(to:Any?)*/
    NSObject.prototype.isGreaterThanOrEqualTo = function ($info, object) {
    };
    /*Foundation.(file).NSObject.isGreaterThanOrEqualTo(_:Any?)*/
    /*Foundation.(file).NSObject.isGreaterThanOrEqualTo(_:Any?)*/
    NSObject.isGreaterThanOrEqualTo = function ($info, object) {
    };
    /*Foundation.(file).NSObject.isGreaterThanOrEqualTo(_:Any?)*/
    /*Foundation.(file).NSObject.isGreaterThanOrEqualTo(_:Any?)*/
    NSObject.prototype.isGreaterThanOrEqualTo = function ($info, object) {
    };
    /*Foundation.(file).NSObject.isGreaterThan(_:Any?)*/
    /*Foundation.(file).NSObject.isGreaterThan(_:Any?)*/
    NSObject.isGreaterThan = function ($info, object) {
    };
    /*Foundation.(file).NSObject.isGreaterThan(_:Any?)*/
    /*Foundation.(file).NSObject.isGreaterThan(_:Any?)*/
    NSObject.prototype.isGreaterThan = function ($info, object) {
    };
    /*Foundation.(file).NSObject.isNotEqual(to:Any?)*/
    /*Foundation.(file).NSObject.isNotEqual(to:Any?)*/
    NSObject.isNotEqualTo = function ($info, object) {
    };
    /*Foundation.(file).NSObject.isNotEqual(to:Any?)*/
    /*Foundation.(file).NSObject.isNotEqual(to:Any?)*/
    NSObject.prototype.isNotEqualTo = function ($info, object) {
    };
    /*Foundation.(file).NSObject.isNotEqualTo(_:Any?)*/
    /*Foundation.(file).NSObject.isNotEqualTo(_:Any?)*/
    NSObject.isNotEqualTo = function ($info, object) {
    };
    /*Foundation.(file).NSObject.isNotEqualTo(_:Any?)*/
    /*Foundation.(file).NSObject.isNotEqualTo(_:Any?)*/
    NSObject.prototype.isNotEqualTo = function ($info, object) {
    };
    /*Foundation.(file).NSObject.doesContain(_:Any)*/
    /*Foundation.(file).NSObject.doesContain(_:Any)*/
    NSObject.doesContain = function ($info, object) {
    };
    /*Foundation.(file).NSObject.doesContain(_:Any)*/
    /*Foundation.(file).NSObject.doesContain(_:Any)*/
    NSObject.prototype.doesContain = function ($info, object) {
    };
    /*Foundation.(file).NSObject.isLike(_:String)*/
    /*Foundation.(file).NSObject.isLike(_:String)*/
    NSObject.isLike = function ($info, object) {
    };
    /*Foundation.(file).NSObject.isLike(_:String)*/
    /*Foundation.(file).NSObject.isLike(_:String)*/
    NSObject.prototype.isLike = function ($info, object) {
    };
    /*Foundation.(file).NSObject.isCaseInsensitiveLike(_:String)*/
    /*Foundation.(file).NSObject.isCaseInsensitiveLike(_:String)*/
    NSObject.isCaseInsensitiveLike = function ($info, object) {
    };
    /*Foundation.(file).NSObject.isCaseInsensitiveLike(_:String)*/
    /*Foundation.(file).NSObject.isCaseInsensitiveLike(_:String)*/
    NSObject.prototype.isCaseInsensitiveLike = function ($info, object) {
    };
    /*Foundation.(file).NSObject.scriptingIsEqual(to:Any)*/
    /*Foundation.(file).NSObject.scriptingIsEqual(to:Any)*/
    NSObject.scriptingIsEqualTo = function ($info, object) {
    };
    /*Foundation.(file).NSObject.scriptingIsEqual(to:Any)*/
    /*Foundation.(file).NSObject.scriptingIsEqual(to:Any)*/
    NSObject.prototype.scriptingIsEqualTo = function ($info, object) {
    };
    /*Foundation.(file).NSObject.scriptingIsEqualTo(_:Any)*/
    /*Foundation.(file).NSObject.scriptingIsEqualTo(_:Any)*/
    NSObject.scriptingIsEqualTo = function ($info, object) {
    };
    /*Foundation.(file).NSObject.scriptingIsEqualTo(_:Any)*/
    /*Foundation.(file).NSObject.scriptingIsEqualTo(_:Any)*/
    NSObject.prototype.scriptingIsEqualTo = function ($info, object) {
    };
    /*Foundation.(file).NSObject.scriptingIsLessThanOrEqual(to:Any)*/
    /*Foundation.(file).NSObject.scriptingIsLessThanOrEqual(to:Any)*/
    NSObject.scriptingIsLessThanOrEqualTo = function ($info, object) {
    };
    /*Foundation.(file).NSObject.scriptingIsLessThanOrEqual(to:Any)*/
    /*Foundation.(file).NSObject.scriptingIsLessThanOrEqual(to:Any)*/
    NSObject.prototype.scriptingIsLessThanOrEqualTo = function ($info, object) {
    };
    /*Foundation.(file).NSObject.scriptingIsLessThanOrEqualTo(_:Any)*/
    /*Foundation.(file).NSObject.scriptingIsLessThanOrEqualTo(_:Any)*/
    NSObject.scriptingIsLessThanOrEqualTo = function ($info, object) {
    };
    /*Foundation.(file).NSObject.scriptingIsLessThanOrEqualTo(_:Any)*/
    /*Foundation.(file).NSObject.scriptingIsLessThanOrEqualTo(_:Any)*/
    NSObject.prototype.scriptingIsLessThanOrEqualTo = function ($info, object) {
    };
    /*Foundation.(file).NSObject.scriptingIsLessThan(_:Any)*/
    /*Foundation.(file).NSObject.scriptingIsLessThan(_:Any)*/
    NSObject.scriptingIsLessThan = function ($info, object) {
    };
    /*Foundation.(file).NSObject.scriptingIsLessThan(_:Any)*/
    /*Foundation.(file).NSObject.scriptingIsLessThan(_:Any)*/
    NSObject.prototype.scriptingIsLessThan = function ($info, object) {
    };
    /*Foundation.(file).NSObject.scriptingIsGreaterThanOrEqual(to:Any)*/
    /*Foundation.(file).NSObject.scriptingIsGreaterThanOrEqual(to:Any)*/
    NSObject.scriptingIsGreaterThanOrEqualTo = function ($info, object) {
    };
    /*Foundation.(file).NSObject.scriptingIsGreaterThanOrEqual(to:Any)*/
    /*Foundation.(file).NSObject.scriptingIsGreaterThanOrEqual(to:Any)*/
    NSObject.prototype.scriptingIsGreaterThanOrEqualTo = function ($info, object) {
    };
    /*Foundation.(file).NSObject.scriptingIsGreaterThanOrEqualTo(_:Any)*/
    /*Foundation.(file).NSObject.scriptingIsGreaterThanOrEqualTo(_:Any)*/
    NSObject.scriptingIsGreaterThanOrEqualTo = function ($info, object) {
    };
    /*Foundation.(file).NSObject.scriptingIsGreaterThanOrEqualTo(_:Any)*/
    /*Foundation.(file).NSObject.scriptingIsGreaterThanOrEqualTo(_:Any)*/
    NSObject.prototype.scriptingIsGreaterThanOrEqualTo = function ($info, object) {
    };
    /*Foundation.(file).NSObject.scriptingIsGreaterThan(_:Any)*/
    /*Foundation.(file).NSObject.scriptingIsGreaterThan(_:Any)*/
    NSObject.scriptingIsGreaterThan = function ($info, object) {
    };
    /*Foundation.(file).NSObject.scriptingIsGreaterThan(_:Any)*/
    /*Foundation.(file).NSObject.scriptingIsGreaterThan(_:Any)*/
    NSObject.prototype.scriptingIsGreaterThan = function ($info, object) {
    };
    /*Foundation.(file).NSObject.scriptingBegins(with:Any)*/
    /*Foundation.(file).NSObject.scriptingBegins(with:Any)*/
    NSObject.scriptingBeginsWith = function ($info, object) {
    };
    /*Foundation.(file).NSObject.scriptingBegins(with:Any)*/
    /*Foundation.(file).NSObject.scriptingBegins(with:Any)*/
    NSObject.prototype.scriptingBeginsWith = function ($info, object) {
    };
    /*Foundation.(file).NSObject.scriptingBeginsWith(_:Any)*/
    /*Foundation.(file).NSObject.scriptingBeginsWith(_:Any)*/
    NSObject.scriptingBeginsWith = function ($info, object) {
    };
    /*Foundation.(file).NSObject.scriptingBeginsWith(_:Any)*/
    /*Foundation.(file).NSObject.scriptingBeginsWith(_:Any)*/
    NSObject.prototype.scriptingBeginsWith = function ($info, object) {
    };
    /*Foundation.(file).NSObject.scriptingEnds(with:Any)*/
    /*Foundation.(file).NSObject.scriptingEnds(with:Any)*/
    NSObject.scriptingEndsWith = function ($info, object) {
    };
    /*Foundation.(file).NSObject.scriptingEnds(with:Any)*/
    /*Foundation.(file).NSObject.scriptingEnds(with:Any)*/
    NSObject.prototype.scriptingEndsWith = function ($info, object) {
    };
    /*Foundation.(file).NSObject.scriptingEndsWith(_:Any)*/
    /*Foundation.(file).NSObject.scriptingEndsWith(_:Any)*/
    NSObject.scriptingEndsWith = function ($info, object) {
    };
    /*Foundation.(file).NSObject.scriptingEndsWith(_:Any)*/
    /*Foundation.(file).NSObject.scriptingEndsWith(_:Any)*/
    NSObject.prototype.scriptingEndsWith = function ($info, object) {
    };
    /*Foundation.(file).NSObject.scriptingContains(_:Any)*/
    /*Foundation.(file).NSObject.scriptingContains(_:Any)*/
    NSObject.scriptingContains = function ($info, object) {
    };
    /*Foundation.(file).NSObject.scriptingContains(_:Any)*/
    /*Foundation.(file).NSObject.scriptingContains(_:Any)*/
    NSObject.prototype.scriptingContains = function ($info, object) {
    };
    /*ObjectiveC.(file).NSObject.==infix(_:NSObject,_:NSObject)*/
    /*Swift.(file).Equatable.==infix(_:Self,_:Self)*/
    NSObject.infix_61_61 = function ($info, lhs, rhs) {
        return lhs == rhs;
    };
    /*ObjectiveC.(file).NSObject.hashValue*/ /*
    hashValue$get() {
    return this.hashValue
    }
    get hashValue() { return this.hashValue$get() }*/ ;
    /*ObjectiveC.(file).NSObject.hash(into:Hasher)*/
    /*Swift.(file).Hashable.hash(into:Hasher)*/
    NSObject.prototype.hashInto = function ($info, hasher$inout) {
    };
    /*AppKit.(file).NSObject.tableView(_:NSTableView,writeRows:[Any],to:NSPasteboard)*/
    /*AppKit.(file).NSObject.tableView(_:NSTableView,writeRows:[Any],to:NSPasteboard)*/
    NSObject.tableView = function ($info, tableView, rows, pboard) {
    };
    /*AppKit.(file).NSObject.tableView(_:NSTableView,writeRows:[Any],to:NSPasteboard)*/
    /*AppKit.(file).NSObject.tableView(_:NSTableView,writeRows:[Any],to:NSPasteboard)*/
    NSObject.prototype.tableView = function ($info, tableView, rows, pboard) {
    };
    /*AppKit.(file).NSObject.tableView(_:NSTableView,writeRows:[Any],toPasteboard:NSPasteboard)*/
    /*AppKit.(file).NSObject.tableView(_:NSTableView,writeRows:[Any],toPasteboard:NSPasteboard)*/
    NSObject.tableView1 = function ($info, tableView, rows, pboard) {
    };
    /*AppKit.(file).NSObject.tableView(_:NSTableView,writeRows:[Any],toPasteboard:NSPasteboard)*/
    /*AppKit.(file).NSObject.tableView(_:NSTableView,writeRows:[Any],toPasteboard:NSPasteboard)*/
    NSObject.prototype.tableView1 = function ($info, tableView, rows, pboard) {
    };
    /*AppKit.(file).NSObject.textStorageWillProcessEditing(_:Notification)*/
    /*AppKit.(file).NSObject.textStorageWillProcessEditing(_:Notification)*/
    NSObject.textStorageWillProcessEditing = function ($info, notification) {
    };
    /*AppKit.(file).NSObject.textStorageWillProcessEditing(_:Notification)*/
    /*AppKit.(file).NSObject.textStorageWillProcessEditing(_:Notification)*/
    NSObject.prototype.textStorageWillProcessEditing = function ($info, notification) {
    };
    /*AppKit.(file).NSObject.textStorageDidProcessEditing(_:Notification)*/
    /*AppKit.(file).NSObject.textStorageDidProcessEditing(_:Notification)*/
    NSObject.textStorageDidProcessEditing = function ($info, notification) {
    };
    /*AppKit.(file).NSObject.textStorageDidProcessEditing(_:Notification)*/
    /*AppKit.(file).NSObject.textStorageDidProcessEditing(_:Notification)*/
    NSObject.prototype.textStorageDidProcessEditing = function ($info, notification) {
    };
    /*AppKit.(file).NSObject.panel(_:Any,isValidFilename:String)*/
    /*AppKit.(file).NSObject.panel(_:Any,isValidFilename:String)*/
    NSObject.panel = function ($info, sender, filename) {
    };
    /*AppKit.(file).NSObject.panel(_:Any,isValidFilename:String)*/
    /*AppKit.(file).NSObject.panel(_:Any,isValidFilename:String)*/
    NSObject.prototype.panel = function ($info, sender, filename) {
    };
    /*AppKit.(file).NSObject.panel(_:Any,directoryDidChange:String)*/
    /*AppKit.(file).NSObject.panel(_:Any,directoryDidChange:String)*/
    NSObject.panel1 = function ($info, sender, path) {
    };
    /*AppKit.(file).NSObject.panel(_:Any,directoryDidChange:String)*/
    /*AppKit.(file).NSObject.panel(_:Any,directoryDidChange:String)*/
    NSObject.prototype.panel1 = function ($info, sender, path) {
    };
    /*AppKit.(file).NSObject.panel(_:Any,compareFilename:String,with:String,caseSensitive:Bool)*/
    /*AppKit.(file).NSObject.panel(_:Any,compareFilename:String,with:String,caseSensitive:Bool)*/
    NSObject.panel2 = function ($info, sender, name1, name2, caseSensitive) {
    };
    /*AppKit.(file).NSObject.panel(_:Any,compareFilename:String,with:String,caseSensitive:Bool)*/
    /*AppKit.(file).NSObject.panel(_:Any,compareFilename:String,with:String,caseSensitive:Bool)*/
    NSObject.prototype.panel2 = function ($info, sender, name1, name2, caseSensitive) {
    };
    /*AppKit.(file).NSObject.panel(_:Any,shouldShowFilename:String)*/
    /*AppKit.(file).NSObject.panel(_:Any,shouldShowFilename:String)*/
    NSObject.panel3 = function ($info, sender, filename) {
    };
    /*AppKit.(file).NSObject.panel(_:Any,shouldShowFilename:String)*/
    /*AppKit.(file).NSObject.panel(_:Any,shouldShowFilename:String)*/
    NSObject.prototype.panel3 = function ($info, sender, filename) {
    };
    /*AppKit.(file).NSObject.awakeFromNib()*/
    /*AppKit.(file).NSObject.awakeFromNib()*/
    NSObject.awakeFromNib = function ($info) {
    };
    /*AppKit.(file).NSObject.awakeFromNib()*/
    /*AppKit.(file).NSObject.awakeFromNib()*/
    NSObject.prototype.awakeFromNib = function ($info) {
    };
    /*AppKit.(file).NSObject.prepareForInterfaceBuilder()*/
    /*AppKit.(file).NSObject.prepareForInterfaceBuilder()*/
    NSObject.prepareForInterfaceBuilder = function ($info) {
    };
    /*AppKit.(file).NSObject.prepareForInterfaceBuilder()*/
    /*AppKit.(file).NSObject.prepareForInterfaceBuilder()*/
    NSObject.prototype.prepareForInterfaceBuilder = function ($info) {
    };
    /*AppKit.(file).NSObject.fontManager(_:Any,willIncludeFont:String)*/
    /*AppKit.(file).NSObject.fontManager(_:Any,willIncludeFont:String)*/
    NSObject.fontManager = function ($info, sender, fontName) {
    };
    /*AppKit.(file).NSObject.fontManager(_:Any,willIncludeFont:String)*/
    /*AppKit.(file).NSObject.fontManager(_:Any,willIncludeFont:String)*/
    NSObject.prototype.fontManager = function ($info, sender, fontName) {
    };
    /*AppKit.(file).NSObject.setDefaultPlaceholder(_:Any?,for:NSBindingSelectionMarker?,with:NSBindingName)*/
    /*AppKit.(file).NSObject.setDefaultPlaceholder(_:Any?,for:NSBindingSelectionMarker?,with:NSBindingName)*/
    NSObject.setDefaultPlaceholder = function ($info, placeholder, marker, binding) {
    };
    /*AppKit.(file).NSObject.setDefaultPlaceholder(_:Any?,forMarker:NSBindingSelectionMarker?,withBinding:NSBindingName)*/
    /*AppKit.(file).NSObject.setDefaultPlaceholder(_:Any?,forMarker:NSBindingSelectionMarker?,withBinding:NSBindingName)*/
    NSObject.setDefaultPlaceholder1 = function ($info, placeholder, marker, binding) {
    };
    /*AppKit.(file).NSObject.defaultPlaceholder(for:NSBindingSelectionMarker?,with:NSBindingName)*/
    /*AppKit.(file).NSObject.defaultPlaceholder(for:NSBindingSelectionMarker?,with:NSBindingName)*/
    NSObject.defaultPlaceholder = function ($info, marker, binding) {
    };
    /*AppKit.(file).NSObject.defaultPlaceholder(forMarker:NSBindingSelectionMarker?,withBinding:NSBindingName)*/
    /*AppKit.(file).NSObject.defaultPlaceholder(forMarker:NSBindingSelectionMarker?,withBinding:NSBindingName)*/
    NSObject.defaultPlaceholder1 = function ($info, marker, binding) {
    };
    /*AppKit.(file).NSObject.defaultPlaceholderForMarker(_:NSBindingSelectionMarker?,withBinding:NSBindingName)*/
    /*AppKit.(file).NSObject.defaultPlaceholderForMarker(_:NSBindingSelectionMarker?,withBinding:NSBindingName)*/
    NSObject.defaultPlaceholderForMarker = function ($info, marker, binding) {
    };
    /*AppKit.(file).NSObject.exposeBinding(_:NSBindingName)*/
    /*AppKit.(file).NSObject.exposeBinding(_:NSBindingName)*/
    NSObject.exposeBinding = function ($info, binding) {
    };
    /*AppKit.(file).NSObject.valueClassForBinding(_:NSBindingName)*/
    /*AppKit.(file).NSObject.valueClassForBinding(_:NSBindingName)*/
    NSObject.valueClassForBinding = function ($info, binding) {
    };
    /*AppKit.(file).NSObject.valueClassForBinding(_:NSBindingName)*/
    /*AppKit.(file).NSObject.valueClassForBinding(_:NSBindingName)*/
    NSObject.prototype.valueClassForBinding = function ($info, binding) {
    };
    /*AppKit.(file).NSObject.bind(_:NSBindingName,to:Any,withKeyPath:String,options:[NSBindingOption : Any]?)*/
    /*AppKit.(file).NSObject.bind(_:NSBindingName,to:Any,withKeyPath:String,options:[NSBindingOption : Any]?)*/
    NSObject.bind = function ($info, binding, observable, keyPath, options) {
    };
    /*AppKit.(file).NSObject.bind(_:NSBindingName,to:Any,withKeyPath:String,options:[NSBindingOption : Any]?)*/
    /*AppKit.(file).NSObject.bind(_:NSBindingName,to:Any,withKeyPath:String,options:[NSBindingOption : Any]?)*/
    NSObject.prototype.bind = function ($info, binding, observable, keyPath, options) {
    };
    /*AppKit.(file).NSObject.bind(_:NSBindingName,toObject:Any,withKeyPath:String,options:[NSBindingOption : Any]?)*/
    /*AppKit.(file).NSObject.bind(_:NSBindingName,toObject:Any,withKeyPath:String,options:[NSBindingOption : Any]?)*/
    NSObject.bind1 = function ($info, binding, observable, keyPath, options) {
    };
    /*AppKit.(file).NSObject.bind(_:NSBindingName,toObject:Any,withKeyPath:String,options:[NSBindingOption : Any]?)*/
    /*AppKit.(file).NSObject.bind(_:NSBindingName,toObject:Any,withKeyPath:String,options:[NSBindingOption : Any]?)*/
    NSObject.prototype.bind1 = function ($info, binding, observable, keyPath, options) {
    };
    /*AppKit.(file).NSObject.unbind(_:NSBindingName)*/
    /*AppKit.(file).NSObject.unbind(_:NSBindingName)*/
    NSObject.unbind = function ($info, binding) {
    };
    /*AppKit.(file).NSObject.unbind(_:NSBindingName)*/
    /*AppKit.(file).NSObject.unbind(_:NSBindingName)*/
    NSObject.prototype.unbind = function ($info, binding) {
    };
    /*AppKit.(file).NSObject.infoForBinding(_:NSBindingName)*/
    /*AppKit.(file).NSObject.infoForBinding(_:NSBindingName)*/
    NSObject.infoForBinding = function ($info, binding) {
    };
    /*AppKit.(file).NSObject.infoForBinding(_:NSBindingName)*/
    /*AppKit.(file).NSObject.infoForBinding(_:NSBindingName)*/
    NSObject.prototype.infoForBinding = function ($info, binding) {
    };
    /*AppKit.(file).NSObject.optionDescriptionsForBinding(_:NSBindingName)*/
    /*AppKit.(file).NSObject.optionDescriptionsForBinding(_:NSBindingName)*/
    NSObject.optionDescriptionsForBinding = function ($info, binding) {
    };
    /*AppKit.(file).NSObject.optionDescriptionsForBinding(_:NSBindingName)*/
    /*AppKit.(file).NSObject.optionDescriptionsForBinding(_:NSBindingName)*/
    NSObject.prototype.optionDescriptionsForBinding = function ($info, binding) {
    };
    /*AppKit.(file).NSObject.exposedBindings()*/
    /*AppKit.(file).NSObject.exposedBindings()*/
    NSObject.exposedBindings = function ($info) {
    };
    /*AppKit.(file).NSObject.namesOfPromisedFilesDropped(atDestination:URL)*/
    /*AppKit.(file).NSObject.namesOfPromisedFilesDropped(atDestination:URL)*/
    NSObject.namesOfPromisedFilesDropped = function ($info, dropDestination) {
    };
    /*AppKit.(file).NSObject.namesOfPromisedFilesDropped(atDestination:URL)*/
    /*AppKit.(file).NSObject.namesOfPromisedFilesDropped(atDestination:URL)*/
    NSObject.prototype.namesOfPromisedFilesDropped = function ($info, dropDestination) {
    };
    /*AppKit.(file).NSObject.namesOfPromisedFilesDroppedAtDestination(_:URL)*/
    /*AppKit.(file).NSObject.namesOfPromisedFilesDroppedAtDestination(_:URL)*/
    NSObject.namesOfPromisedFilesDroppedAtDestination = function ($info, dropDestination) {
    };
    /*AppKit.(file).NSObject.namesOfPromisedFilesDroppedAtDestination(_:URL)*/
    /*AppKit.(file).NSObject.namesOfPromisedFilesDroppedAtDestination(_:URL)*/
    NSObject.prototype.namesOfPromisedFilesDroppedAtDestination = function ($info, dropDestination) {
    };
    /*AppKit.(file).NSObject.draggingSourceOperationMask(forLocal:Bool)*/
    /*AppKit.(file).NSObject.draggingSourceOperationMask(forLocal:Bool)*/
    NSObject.draggingSourceOperationMask = function ($info, flag) {
    };
    /*AppKit.(file).NSObject.draggingSourceOperationMask(forLocal:Bool)*/
    /*AppKit.(file).NSObject.draggingSourceOperationMask(forLocal:Bool)*/
    NSObject.prototype.draggingSourceOperationMask = function ($info, flag) {
    };
    /*AppKit.(file).NSObject.draggingSourceOperationMaskForLocal(_:Bool)*/
    /*AppKit.(file).NSObject.draggingSourceOperationMaskForLocal(_:Bool)*/
    NSObject.draggingSourceOperationMaskForLocal = function ($info, flag) {
    };
    /*AppKit.(file).NSObject.draggingSourceOperationMaskForLocal(_:Bool)*/
    /*AppKit.(file).NSObject.draggingSourceOperationMaskForLocal(_:Bool)*/
    NSObject.prototype.draggingSourceOperationMaskForLocal = function ($info, flag) {
    };
    /*AppKit.(file).NSObject.draggedImage(_:NSImage?,beganAt:NSPoint)*/
    /*AppKit.(file).NSObject.draggedImage(_:NSImage?,beganAt:NSPoint)*/
    NSObject.draggedImage = function ($info, _image, screenPoint) {
    };
    /*AppKit.(file).NSObject.draggedImage(_:NSImage?,beganAt:NSPoint)*/
    /*AppKit.(file).NSObject.draggedImage(_:NSImage?,beganAt:NSPoint)*/
    NSObject.prototype.draggedImage = function ($info, _image, screenPoint) {
    };
    /*AppKit.(file).NSObject.draggedImage(_:NSImage?,endedAt:NSPoint,operation:NSDragOperation)*/
    /*AppKit.(file).NSObject.draggedImage(_:NSImage?,endedAt:NSPoint,operation:NSDragOperation)*/
    NSObject.draggedImage1 = function ($info, _image, screenPoint, operation) {
    };
    /*AppKit.(file).NSObject.draggedImage(_:NSImage?,endedAt:NSPoint,operation:NSDragOperation)*/
    /*AppKit.(file).NSObject.draggedImage(_:NSImage?,endedAt:NSPoint,operation:NSDragOperation)*/
    NSObject.prototype.draggedImage1 = function ($info, _image, screenPoint, operation) {
    };
    /*AppKit.(file).NSObject.draggedImage(_:NSImage?,movedTo:NSPoint)*/
    /*AppKit.(file).NSObject.draggedImage(_:NSImage?,movedTo:NSPoint)*/
    NSObject.draggedImage2 = function ($info, _image, screenPoint) {
    };
    /*AppKit.(file).NSObject.draggedImage(_:NSImage?,movedTo:NSPoint)*/
    /*AppKit.(file).NSObject.draggedImage(_:NSImage?,movedTo:NSPoint)*/
    NSObject.prototype.draggedImage2 = function ($info, _image, screenPoint) {
    };
    /*AppKit.(file).NSObject.ignoreModifierKeysWhileDragging()*/
    /*AppKit.(file).NSObject.ignoreModifierKeysWhileDragging()*/
    NSObject.ignoreModifierKeysWhileDragging = function ($info) {
    };
    /*AppKit.(file).NSObject.ignoreModifierKeysWhileDragging()*/
    /*AppKit.(file).NSObject.ignoreModifierKeysWhileDragging()*/
    NSObject.prototype.ignoreModifierKeysWhileDragging = function ($info) {
    };
    /*AppKit.(file).NSObject.draggedImage(_:NSImage?,endedAt:NSPoint,deposited:Bool)*/
    /*AppKit.(file).NSObject.draggedImage(_:NSImage?,endedAt:NSPoint,deposited:Bool)*/
    NSObject.draggedImage3 = function ($info, _image, screenPoint, flag) {
    };
    /*AppKit.(file).NSObject.draggedImage(_:NSImage?,endedAt:NSPoint,deposited:Bool)*/
    /*AppKit.(file).NSObject.draggedImage(_:NSImage?,endedAt:NSPoint,deposited:Bool)*/
    NSObject.prototype.draggedImage3 = function ($info, _image, screenPoint, flag) {
    };
    /*AppKit.(file).NSObject.accessibilitySetOverrideValue(_:Any?,forAttribute:NSAccessibility.Attribute)*/
    /*AppKit.(file).NSObject.accessibilitySetOverrideValue(_:Any?,forAttribute:NSAccessibility.Attribute)*/
    NSObject.accessibilitySetOverrideValue = function ($info, value, attribute) {
    };
    /*AppKit.(file).NSObject.accessibilitySetOverrideValue(_:Any?,forAttribute:NSAccessibility.Attribute)*/
    /*AppKit.(file).NSObject.accessibilitySetOverrideValue(_:Any?,forAttribute:NSAccessibility.Attribute)*/
    NSObject.prototype.accessibilitySetOverrideValue = function ($info, value, attribute) {
    };
    /*AppKit.(file).NSObject.accessibilityAttributeNames()*/
    /*AppKit.(file).NSObject.accessibilityAttributeNames()*/
    NSObject.accessibilityAttributeNames = function ($info) {
    };
    /*AppKit.(file).NSObject.accessibilityAttributeNames()*/
    /*AppKit.(file).NSObject.accessibilityAttributeNames()*/
    NSObject.prototype.accessibilityAttributeNames = function ($info) {
    };
    /*AppKit.(file).NSObject.accessibilityAttributeValue(_:NSAccessibility.Attribute)*/
    /*AppKit.(file).NSObject.accessibilityAttributeValue(_:NSAccessibility.Attribute)*/
    NSObject.accessibilityAttributeValue = function ($info, attribute) {
    };
    /*AppKit.(file).NSObject.accessibilityAttributeValue(_:NSAccessibility.Attribute)*/
    /*AppKit.(file).NSObject.accessibilityAttributeValue(_:NSAccessibility.Attribute)*/
    NSObject.prototype.accessibilityAttributeValue = function ($info, attribute) {
    };
    /*AppKit.(file).NSObject.accessibilityIsAttributeSettable(_:NSAccessibility.Attribute)*/
    /*AppKit.(file).NSObject.accessibilityIsAttributeSettable(_:NSAccessibility.Attribute)*/
    NSObject.accessibilityIsAttributeSettable = function ($info, attribute) {
    };
    /*AppKit.(file).NSObject.accessibilityIsAttributeSettable(_:NSAccessibility.Attribute)*/
    /*AppKit.(file).NSObject.accessibilityIsAttributeSettable(_:NSAccessibility.Attribute)*/
    NSObject.prototype.accessibilityIsAttributeSettable = function ($info, attribute) {
    };
    /*AppKit.(file).NSObject.accessibilitySetValue(_:Any?,forAttribute:NSAccessibility.Attribute)*/
    /*AppKit.(file).NSObject.accessibilitySetValue(_:Any?,forAttribute:NSAccessibility.Attribute)*/
    NSObject.accessibilitySetValue = function ($info, value, attribute) {
    };
    /*AppKit.(file).NSObject.accessibilitySetValue(_:Any?,forAttribute:NSAccessibility.Attribute)*/
    /*AppKit.(file).NSObject.accessibilitySetValue(_:Any?,forAttribute:NSAccessibility.Attribute)*/
    NSObject.prototype.accessibilitySetValue = function ($info, value, attribute) {
    };
    /*AppKit.(file).NSObject.accessibilityParameterizedAttributeNames()*/
    /*AppKit.(file).NSObject.accessibilityParameterizedAttributeNames()*/
    NSObject.accessibilityParameterizedAttributeNames = function ($info) {
    };
    /*AppKit.(file).NSObject.accessibilityParameterizedAttributeNames()*/
    /*AppKit.(file).NSObject.accessibilityParameterizedAttributeNames()*/
    NSObject.prototype.accessibilityParameterizedAttributeNames = function ($info) {
    };
    /*AppKit.(file).NSObject.accessibilityAttributeValue(_:NSAccessibility.ParameterizedAttribute,forParameter:Any?)*/
    /*AppKit.(file).NSObject.accessibilityAttributeValue(_:NSAccessibility.ParameterizedAttribute,forParameter:Any?)*/
    NSObject.accessibilityAttributeValue1 = function ($info, attribute, parameter) {
    };
    /*AppKit.(file).NSObject.accessibilityAttributeValue(_:NSAccessibility.ParameterizedAttribute,forParameter:Any?)*/
    /*AppKit.(file).NSObject.accessibilityAttributeValue(_:NSAccessibility.ParameterizedAttribute,forParameter:Any?)*/
    NSObject.prototype.accessibilityAttributeValue1 = function ($info, attribute, parameter) {
    };
    /*AppKit.(file).NSObject.accessibilityActionNames()*/
    /*AppKit.(file).NSObject.accessibilityActionNames()*/
    NSObject.accessibilityActionNames = function ($info) {
    };
    /*AppKit.(file).NSObject.accessibilityActionNames()*/
    /*AppKit.(file).NSObject.accessibilityActionNames()*/
    NSObject.prototype.accessibilityActionNames = function ($info) {
    };
    /*AppKit.(file).NSObject.accessibilityActionDescription(_:NSAccessibility.Action)*/
    /*AppKit.(file).NSObject.accessibilityActionDescription(_:NSAccessibility.Action)*/
    NSObject.accessibilityActionDescription = function ($info, action) {
    };
    /*AppKit.(file).NSObject.accessibilityActionDescription(_:NSAccessibility.Action)*/
    /*AppKit.(file).NSObject.accessibilityActionDescription(_:NSAccessibility.Action)*/
    NSObject.prototype.accessibilityActionDescription = function ($info, action) {
    };
    /*AppKit.(file).NSObject.accessibilityPerformAction(_:NSAccessibility.Action)*/
    /*AppKit.(file).NSObject.accessibilityPerformAction(_:NSAccessibility.Action)*/
    NSObject.accessibilityPerformAction = function ($info, action) {
    };
    /*AppKit.(file).NSObject.accessibilityPerformAction(_:NSAccessibility.Action)*/
    /*AppKit.(file).NSObject.accessibilityPerformAction(_:NSAccessibility.Action)*/
    NSObject.prototype.accessibilityPerformAction = function ($info, action) {
    };
    /*AppKit.(file).NSObject.accessibilityIsIgnored()*/
    /*AppKit.(file).NSObject.accessibilityIsIgnored()*/
    NSObject.accessibilityIsIgnored = function ($info) {
    };
    /*AppKit.(file).NSObject.accessibilityIsIgnored()*/
    /*AppKit.(file).NSObject.accessibilityIsIgnored()*/
    NSObject.prototype.accessibilityIsIgnored = function ($info) {
    };
    /*AppKit.(file).NSObject.accessibilityHitTest(_:NSPoint)*/
    /*AppKit.(file).NSObject.accessibilityHitTest(_:NSPoint)*/
    NSObject.accessibilityHitTest = function ($info, point) {
    };
    /*AppKit.(file).NSObject.accessibilityHitTest(_:NSPoint)*/
    /*AppKit.(file).NSObject.accessibilityHitTest(_:NSPoint)*/
    NSObject.prototype.accessibilityHitTest = function ($info, point) {
    };
    /*AppKit.(file).NSObject.accessibilityIndex(ofChild:Any)*/
    /*AppKit.(file).NSObject.accessibilityIndex(ofChild:Any)*/
    NSObject.accessibilityIndex = function ($info, child) {
    };
    /*AppKit.(file).NSObject.accessibilityIndex(ofChild:Any)*/
    /*AppKit.(file).NSObject.accessibilityIndex(ofChild:Any)*/
    NSObject.prototype.accessibilityIndex = function ($info, child) {
    };
    /*AppKit.(file).NSObject.accessibilityIndexOfChild(_:Any)*/
    /*AppKit.(file).NSObject.accessibilityIndexOfChild(_:Any)*/
    NSObject.accessibilityIndexOfChild = function ($info, child) {
    };
    /*AppKit.(file).NSObject.accessibilityIndexOfChild(_:Any)*/
    /*AppKit.(file).NSObject.accessibilityIndexOfChild(_:Any)*/
    NSObject.prototype.accessibilityIndexOfChild = function ($info, child) {
    };
    /*AppKit.(file).NSObject.accessibilityArrayAttributeCount(_:NSAccessibility.Attribute)*/
    /*AppKit.(file).NSObject.accessibilityArrayAttributeCount(_:NSAccessibility.Attribute)*/
    NSObject.accessibilityArrayAttributeCount = function ($info, attribute) {
    };
    /*AppKit.(file).NSObject.accessibilityArrayAttributeCount(_:NSAccessibility.Attribute)*/
    /*AppKit.(file).NSObject.accessibilityArrayAttributeCount(_:NSAccessibility.Attribute)*/
    NSObject.prototype.accessibilityArrayAttributeCount = function ($info, attribute) {
    };
    /*AppKit.(file).NSObject.accessibilityArrayAttributeValues(_:NSAccessibility.Attribute,index:Int,maxCount:Int)*/
    /*AppKit.(file).NSObject.accessibilityArrayAttributeValues(_:NSAccessibility.Attribute,index:Int,maxCount:Int)*/
    NSObject.accessibilityArrayAttributeValues = function ($info, attribute, index, maxCount) {
    };
    /*AppKit.(file).NSObject.accessibilityArrayAttributeValues(_:NSAccessibility.Attribute,index:Int,maxCount:Int)*/
    /*AppKit.(file).NSObject.accessibilityArrayAttributeValues(_:NSAccessibility.Attribute,index:Int,maxCount:Int)*/
    NSObject.prototype.accessibilityArrayAttributeValues = function ($info, attribute, index, maxCount) {
    };
    /*AppKit.(file).NSObject.accessibilityFocusedUIElement()*/
    /*AppKit.(file).NSObject.accessibilityFocusedUIElement()*/
    NSObject.accessibilityFocusedUIElement = function ($info) {
    };
    /*AppKit.(file).NSObject.accessibilityNotifiesWhenDestroyed()*/
    /*AppKit.(file).NSObject.accessibilityNotifiesWhenDestroyed()*/
    NSObject.accessibilityNotifiesWhenDestroyed = function ($info) {
    };
    /*CoreImage.(file).NSObject.provideImageData(_:UnsafeMutableRawPointer,bytesPerRow:Int,origin:Int,_:Int,size:Int,_:Int,userInfo:Any?)*/
    /*CoreImage.(file).NSObject.provideImageData(_:UnsafeMutableRawPointer,bytesPerRow:Int,origin:Int,_:Int,size:Int,_:Int,userInfo:Any?)*/
    NSObject.provideImageData = function ($info, data, rowbytes, x, y, width, height, info) {
    };
    /*CoreImage.(file).NSObject.provideImageData(_:UnsafeMutableRawPointer,bytesPerRow:Int,origin:Int,_:Int,size:Int,_:Int,userInfo:Any?)*/
    /*CoreImage.(file).NSObject.provideImageData(_:UnsafeMutableRawPointer,bytesPerRow:Int,origin:Int,_:Int,size:Int,_:Int,userInfo:Any?)*/
    NSObject.prototype.provideImageData = function ($info, data, rowbytes, x, y, width, height, info) {
    };
    NSObject.$infoAddress = '0x7fca2aa86f60';
    return NSObject;
}());
if (typeof NSObjectProtocol$implementation != 'undefined')
    _mixin(NSObject, NSObjectProtocol$implementation, false);
if (typeof CustomStringConvertible$implementation != 'undefined')
    _mixin(NSObject, CustomStringConvertible$implementation, false);
if (typeof CustomDebugStringConvertible$implementation != 'undefined')
    _mixin(NSObject, CustomDebugStringConvertible$implementation, false);
if (typeof _KeyValueCodingAndObserving$implementation != 'undefined')
    _mixin(NSObject, _KeyValueCodingAndObserving$implementation, false);
if (typeof Equatable$implementation != 'undefined')
    _mixin(NSObject, Equatable$implementation, false);
if (typeof Hashable$implementation != 'undefined')
    _mixin(NSObject, Hashable$implementation, false);
if (typeof CVarArg$implementation != 'undefined')
    _mixin(NSObject, CVarArg$implementation, false);
/*Darwin.(file).arc4random()*/
/*Darwin.(file).arc4random()*/
function arc4random($info) {
    return arc4random_uniform(null, 4294967296);
}
/*Darwin.(file).arc4random_uniform(_:UInt32)*/
/*Darwin.(file).arc4random_uniform(_:UInt32)*/
function arc4random_uniform($info, __upper_bound) {
    return (Math.random() * __upper_bound) | 0;
}
var NSException = /** @class */ (function (_super) {
    __extends(NSException, _super);
    function NSException() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    /*Foundation.(file).NSException.init(name:NSExceptionName,reason:String?,userInfo:[AnyHashable : Any]?)*/
    /*Foundation.(file).NSException.init(name:NSExceptionName,reason:String?,userInfo:[AnyHashable : Any]?)*/
    NSException.prototype.initNameNSExceptionNameReasonOptionalUserInfoOptional = function ($info, _name, reason, userInfo) {
    };
    /*Foundation.(file).NSException.exceptionWithName(_:NSExceptionName,reason:String?,userInfo:[AnyHashable : Any]?)*/
    /*Foundation.(file).NSException.exceptionWithName(_:NSExceptionName,reason:String?,userInfo:[AnyHashable : Any]?)*/
    NSException.exceptionWithNameReasonUserInfo = function ($info, _name, reason, userInfo) {
    };
    /*Foundation.(file).NSException.init(name:NSExceptionName,reason:String?,userInfo:[AnyHashable : Any]?)*/
    /*Foundation.(file).NSException.init(name:NSExceptionName,reason:String?,userInfo:[AnyHashable : Any]?)*/
    NSException.prototype.initNameNSExceptionNameReasonOptionalUserInfoOptional = function ($info, aName, aReason, aUserInfo) {
    };
    /*Foundation.(file).NSException.raise()*/
    /*Foundation.(file).NSException.raise()*/
    NSException.prototype.raise = function ($info) {
    };
    /*Foundation.(file).NSException.init()*/
    /*ObjectiveC.(file).NSObject.init()*/
    NSException.prototype.init = function ($info) {
    };
    /*Foundation.(file).NSException.copy(with:NSZone?)*/
    /*Foundation.(file).NSException.copy(with:NSZone?)*/
    NSException.prototype.copyWith = function ($info, zone) {
    };
    /*Foundation.(file).NSException.encode(with:NSCoder)*/
    /*Foundation.(file).NSException.encode(with:NSCoder)*/
    NSException.prototype.encodeWith = function ($info, aCoder) {
    };
    /*Foundation.(file).NSException.init(coder:NSCoder)*/
    /*Foundation.(file).NSException.init(coder:NSCoder)*/
    NSException.prototype.initCoderNSCoder = function ($info, aDecoder) {
        return aDecoder;
    };
    /*Foundation.(file).NSException.raise(_:NSExceptionName,format:String,arguments:CVaListPointer)*/
    /*Foundation.(file).NSException.raise(_:NSExceptionName,format:String,arguments:CVaListPointer)*/
    NSException.raiseFormatArguments = function ($info, _name, format, argList) {
    };
    NSException.$infoAddress = '0x7fca299d2d80';
    return NSException;
}(NSObject));
if (typeof NSCopying$implementation != 'undefined')
    _mixin(NSException, NSCopying$implementation, false);
if (typeof NSCoding$implementation != 'undefined')
    _mixin(NSException, NSCoding$implementation, false);
/*XCTest.(file).XCTSelfTestMain()*/
/*XCTest.(file).XCTSelfTestMain()*/
function XCTSelfTestMain($info) {
}
/*XCTest.(file).XCTFail(_:String,file:StaticString,line:UInt)*/
/*XCTest.(file).XCTFail(_:String,file:StaticString,line:UInt)*/
function XCTFailFileLine($info, message, file, line) {
}
/*XCTest.(file).XCTAssertNil(_:() throws -> Any?,_:() -> String,file:StaticString,line:UInt)*/
/*XCTest.(file).XCTAssertNil(_:() throws -> Any?,_:() -> String,file:StaticString,line:UInt)*/
function XCTAssertNilFileLine($info, expression, message, file, line) {
    if (expression() != undefined)
        throw message ? message() : 'assert fail :' + expression;
}
/*XCTest.(file).XCTAssertNotNil(_:() throws -> Any?,_:() -> String,file:StaticString,line:UInt)*/
/*XCTest.(file).XCTAssertNotNil(_:() throws -> Any?,_:() -> String,file:StaticString,line:UInt)*/
function XCTAssertNotNilFileLine($info, expression, message, file, line) {
    if (expression() == undefined)
        throw message ? message() : 'assert fail :' + expression;
}
/*XCTest.(file).XCTAssert(_:() throws -> Bool,_:() -> String,file:StaticString,line:UInt)*/
/*XCTest.(file).XCTAssert(_:() throws -> Bool,_:() -> String,file:StaticString,line:UInt)*/
function XCTAssertFileLine($info, expression, message, file, line) {
    if (!expression())
        throw message ? message() : 'assert fail :' + expression;
}
/*XCTest.(file).XCTAssertTrue(_:() throws -> Bool,_:() -> String,file:StaticString,line:UInt)*/
/*XCTest.(file).XCTAssertTrue(_:() throws -> Bool,_:() -> String,file:StaticString,line:UInt)*/
function XCTAssertTrueFileLine($info, expression, message, file, line) {
    if (expression() != true)
        throw message ? message() : 'assert fail :' + expression;
}
/*XCTest.(file).XCTAssertFalse(_:() throws -> Bool,_:() -> String,file:StaticString,line:UInt)*/
/*XCTest.(file).XCTAssertFalse(_:() throws -> Bool,_:() -> String,file:StaticString,line:UInt)*/
function XCTAssertFalseFileLine($info, expression, message, file, line) {
    if (expression())
        throw message ? message() : 'assert fail :' + expression;
}
/*XCTest.(file).XCTAssertEqual(_:() throws -> T,_:() throws -> T,_:() -> String,file:StaticString,line:UInt)*/
/*XCTest.(file).XCTAssertEqual(_:() throws -> T,_:() throws -> T,_:() -> String,file:StaticString,line:UInt)*/
function XCTAssertEqualFileLine($info, expression1, expression2, message, file, line) {
    if (!$info.T.infix_61_61($info, expression1(), expression2()))
        throw message ? message() : 'assert fail :' + expression1;
}
/*XCTest.(file).XCTAssertNotEqual(_:() throws -> T,_:() throws -> T,_:() -> String,file:StaticString,line:UInt)*/
/*XCTest.(file).XCTAssertNotEqual(_:() throws -> T,_:() throws -> T,_:() -> String,file:StaticString,line:UInt)*/
function XCTAssertNotEqualFileLine($info, expression1, expression2, message, file, line) {
}
/*XCTest.(file).XCTAssertEqual(_:() throws -> T,_:() throws -> T,accuracy:T,_:() -> String,file:StaticString,line:UInt)*/
/*XCTest.(file).XCTAssertEqual(_:() throws -> T,_:() throws -> T,accuracy:T,_:() -> String,file:StaticString,line:UInt)*/
function XCTAssertEqualAccuracyFileLine($info, expression1, expression2, accuracy, message, file, line) {
}
/*XCTest.(file).XCTAssertEqualWithAccuracy(_:() throws -> T,_:() throws -> T,accuracy:T,_:() -> String,file:StaticString,line:UInt)*/
/*XCTest.(file).XCTAssertEqualWithAccuracy(_:() throws -> T,_:() throws -> T,accuracy:T,_:() -> String,file:StaticString,line:UInt)*/
function XCTAssertEqualWithAccuracyAccuracyFileLine($info, expression1, expression2, accuracy, message, file, line) {
}
/*XCTest.(file).XCTAssertNotEqual(_:() throws -> T,_:() throws -> T,accuracy:T,_:() -> String,file:StaticString,line:UInt)*/
/*XCTest.(file).XCTAssertNotEqual(_:() throws -> T,_:() throws -> T,accuracy:T,_:() -> String,file:StaticString,line:UInt)*/
function XCTAssertNotEqualAccuracyFileLine($info, expression1, expression2, accuracy, message, file, line) {
}
/*XCTest.(file).XCTAssertNotEqualWithAccuracy(_:() throws -> T,_:() throws -> T,_:T,_:() -> String,file:StaticString,line:UInt)*/
/*XCTest.(file).XCTAssertNotEqualWithAccuracy(_:() throws -> T,_:() throws -> T,_:T,_:() -> String,file:StaticString,line:UInt)*/
function XCTAssertNotEqualWithAccuracyFileLine($info, expression1, expression2, accuracy, message, file, line) {
}
/*XCTest.(file).XCTAssertGreaterThan(_:() throws -> T,_:() throws -> T,_:() -> String,file:StaticString,line:UInt)*/
/*XCTest.(file).XCTAssertGreaterThan(_:() throws -> T,_:() throws -> T,_:() -> String,file:StaticString,line:UInt)*/
function XCTAssertGreaterThanFileLine($info, expression1, expression2, message, file, line) {
    if (!(expression1() > expression2()))
        throw message ? message() : 'assert fail :' + expression1;
}
/*XCTest.(file).XCTAssertGreaterThanOrEqual(_:() throws -> T,_:() throws -> T,_:() -> String,file:StaticString,line:UInt)*/
/*XCTest.(file).XCTAssertGreaterThanOrEqual(_:() throws -> T,_:() throws -> T,_:() -> String,file:StaticString,line:UInt)*/
function XCTAssertGreaterThanOrEqualFileLine($info, expression1, expression2, message, file, line) {
    if (!(expression1() >= expression2()))
        throw message ? message() : 'assert fail :' + expression1;
}
/*XCTest.(file).XCTAssertLessThan(_:() throws -> T,_:() throws -> T,_:() -> String,file:StaticString,line:UInt)*/
/*XCTest.(file).XCTAssertLessThan(_:() throws -> T,_:() throws -> T,_:() -> String,file:StaticString,line:UInt)*/
function XCTAssertLessThanFileLine($info, expression1, expression2, message, file, line) {
    if (!(expression1() < expression2()))
        throw message ? message() : 'assert fail :' + expression1;
}
/*XCTest.(file).XCTAssertLessThanOrEqual(_:() throws -> T,_:() throws -> T,_:() -> String,file:StaticString,line:UInt)*/
/*XCTest.(file).XCTAssertLessThanOrEqual(_:() throws -> T,_:() throws -> T,_:() -> String,file:StaticString,line:UInt)*/
function XCTAssertLessThanOrEqualFileLine($info, expression1, expression2, message, file, line) {
    if (!(expression1() <= expression2()))
        throw message ? message() : 'assert fail :' + expression1;
}
/*XCTest.(file).XCTAssertThrowsError(_:() throws -> T,_:() -> String,file:StaticString,line:UInt,_:(Error) -> Void)*/
/*XCTest.(file).XCTAssertThrowsError(_:() throws -> T,_:() -> String,file:StaticString,line:UInt,_:(Error) -> Void)*/
function XCTAssertThrowsErrorFileLine($info, expression, message, file, line, errorHandler) {
    try {
        expression();
    }
    catch (e) {
        return;
    }
    throw message ? message() : 'assert fail :' + expression;
}
/*XCTest.(file).XCTAssertNoThrow(_:() throws -> T,_:() -> String,file:StaticString,line:UInt)*/
/*XCTest.(file).XCTAssertNoThrow(_:() throws -> T,_:() -> String,file:StaticString,line:UInt)*/
function XCTAssertNoThrowFileLine($info, expression, message, file, line) {
    try {
        expression();
    }
    catch (e) {
        throw message ? message() : 'assert fail :' + expression;
    }
}
var XCTActivity$implementation = /** @class */ (function () {
    function XCTActivity$implementation() {
    }
    return XCTActivity$implementation;
}());
if (typeof NSObjectProtocol$implementation != 'undefined')
    _mixin(XCTActivity$implementation, NSObjectProtocol$implementation, false);
var XCTAttachment = /** @class */ (function (_super) {
    __extends(XCTAttachment, _super);
    function XCTAttachment() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    /*XCTest.(file).XCTAttachment.init()*/
    /*ObjectiveC.(file).NSObject.init()*/
    XCTAttachment.prototype.init = function ($info) {
    };
    /*XCTest.(file).XCTAttachment.init(uniformTypeIdentifier:String?,name:String?,payload:Data?,userInfo:[AnyHashable : Any]?)*/
    /*XCTest.(file).XCTAttachment.init(uniformTypeIdentifier:String?,name:String?,payload:Data?,userInfo:[AnyHashable : Any]?)*/
    XCTAttachment.prototype.initUniformTypeIdentifierOptionalNameOptionalPayloadOptionalUserInfoOptional = function ($info, identifier, _name, payload, userInfo) {
    };
    /*XCTest.(file).XCTAttachment.attachmentWithUniformTypeIdentifier(_:String?,name:String?,payload:Data?,userInfo:[AnyHashable : Any]?)*/
    /*XCTest.(file).XCTAttachment.attachmentWithUniformTypeIdentifier(_:String?,name:String?,payload:Data?,userInfo:[AnyHashable : Any]?)*/
    XCTAttachment.attachmentWithUniformTypeIdentifierNamePayloadUserInfo = function ($info, identifier, _name, payload, userInfo) {
    };
    /*XCTest.(file).XCTAttachment.encode(with:NSCoder)*/
    /*XCTest.(file).XCTAttachment.encode(with:NSCoder)*/
    XCTAttachment.prototype.encodeWith = function ($info, aCoder) {
    };
    /*XCTest.(file).XCTAttachment.init(coder:NSCoder)*/
    /*XCTest.(file).XCTAttachment.init(coder:NSCoder)*/
    XCTAttachment.prototype.initCoderNSCoder = function ($info, aDecoder) {
        return aDecoder;
    };
    /*XCTest.(file).XCTAttachment.init(data:Data)*/
    /*XCTest.(file).XCTAttachment.init(data:Data)*/
    XCTAttachment.prototype.initDataData = function ($info, payload) {
        return payload;
    };
    /*XCTest.(file).XCTAttachment.attachmentWithData(_:Data)*/
    /*XCTest.(file).XCTAttachment.attachmentWithData(_:Data)*/
    XCTAttachment.attachmentWithData = function ($info, payload) {
    };
    /*XCTest.(file).XCTAttachment.init(data:Data,uniformTypeIdentifier:String)*/
    /*XCTest.(file).XCTAttachment.init(data:Data,uniformTypeIdentifier:String)*/
    XCTAttachment.prototype.initDataDataUniformTypeIdentifierString = function ($info, payload, identifier) {
    };
    /*XCTest.(file).XCTAttachment.attachmentWithData(_:Data,uniformTypeIdentifier:String)*/
    /*XCTest.(file).XCTAttachment.attachmentWithData(_:Data,uniformTypeIdentifier:String)*/
    XCTAttachment.attachmentWithDataUniformTypeIdentifier = function ($info, payload, identifier) {
    };
    /*XCTest.(file).XCTAttachment.init(string:String)*/
    /*XCTest.(file).XCTAttachment.init(string:String)*/
    XCTAttachment.prototype.initStringString = function ($info, string) {
        return string;
    };
    /*XCTest.(file).XCTAttachment.attachmentWithString(_:String)*/
    /*XCTest.(file).XCTAttachment.attachmentWithString(_:String)*/
    XCTAttachment.attachmentWithString = function ($info, string) {
    };
    /*XCTest.(file).XCTAttachment.init(archivableObject:NSSecureCoding)*/
    /*XCTest.(file).XCTAttachment.init(archivableObject:NSSecureCoding)*/
    XCTAttachment.prototype.initArchivableObjectNSSecureCoding = function ($info, object) {
        return object;
    };
    /*XCTest.(file).XCTAttachment.attachmentWithArchivableObject(_:NSSecureCoding)*/
    /*XCTest.(file).XCTAttachment.attachmentWithArchivableObject(_:NSSecureCoding)*/
    XCTAttachment.attachmentWithArchivableObject = function ($info, object) {
    };
    /*XCTest.(file).XCTAttachment.init(archivableObject:NSSecureCoding,uniformTypeIdentifier:String)*/
    /*XCTest.(file).XCTAttachment.init(archivableObject:NSSecureCoding,uniformTypeIdentifier:String)*/
    XCTAttachment.prototype.initArchivableObjectNSSecureCodingUniformTypeIdentifierString = function ($info, object, identifier) {
    };
    /*XCTest.(file).XCTAttachment.attachmentWithArchivableObject(_:NSSecureCoding,uniformTypeIdentifier:String)*/
    /*XCTest.(file).XCTAttachment.attachmentWithArchivableObject(_:NSSecureCoding,uniformTypeIdentifier:String)*/
    XCTAttachment.attachmentWithArchivableObjectUniformTypeIdentifier = function ($info, object, identifier) {
    };
    /*XCTest.(file).XCTAttachment.init(plistObject:Any)*/
    /*XCTest.(file).XCTAttachment.init(plistObject:Any)*/
    XCTAttachment.prototype.initPlistObjectprotocol_composition_type = function ($info, object) {
        return object;
    };
    /*XCTest.(file).XCTAttachment.attachmentWithPlistObject(_:Any)*/
    /*XCTest.(file).XCTAttachment.attachmentWithPlistObject(_:Any)*/
    XCTAttachment.attachmentWithPlistObject = function ($info, object) {
    };
    /*XCTest.(file).XCTAttachment.init(contentsOfFile:URL)*/
    /*XCTest.(file).XCTAttachment.init(contentsOfFile:URL)*/
    XCTAttachment.prototype.initContentsOfFileURL = function ($info, url) {
        return url;
    };
    /*XCTest.(file).XCTAttachment.init(contentsOfFileAtURL:URL)*/
    /*XCTest.(file).XCTAttachment.init(contentsOfFileAtURL:URL)*/
    XCTAttachment.prototype.initContentsOfFileAtURLURL = function ($info, url) {
        return url;
    };
    /*XCTest.(file).XCTAttachment.attachmentWithContentsOfFileAtURL(_:URL)*/
    /*XCTest.(file).XCTAttachment.attachmentWithContentsOfFileAtURL(_:URL)*/
    XCTAttachment.attachmentWithContentsOfFileAtURL = function ($info, url) {
    };
    /*XCTest.(file).XCTAttachment.init(contentsOfFile:URL,uniformTypeIdentifier:String)*/
    /*XCTest.(file).XCTAttachment.init(contentsOfFile:URL,uniformTypeIdentifier:String)*/
    XCTAttachment.prototype.initContentsOfFileURLUniformTypeIdentifierString = function ($info, url, identifier) {
    };
    /*XCTest.(file).XCTAttachment.init(contentsOfFileAtURL:URL,uniformTypeIdentifier:String)*/
    /*XCTest.(file).XCTAttachment.init(contentsOfFileAtURL:URL,uniformTypeIdentifier:String)*/
    XCTAttachment.prototype.initContentsOfFileAtURLURLUniformTypeIdentifierString = function ($info, url, identifier) {
    };
    /*XCTest.(file).XCTAttachment.attachmentWithContentsOfFileAtURL(_:URL,uniformTypeIdentifier:String)*/
    /*XCTest.(file).XCTAttachment.attachmentWithContentsOfFileAtURL(_:URL,uniformTypeIdentifier:String)*/
    XCTAttachment.attachmentWithContentsOfFileAtURLUniformTypeIdentifier = function ($info, url, identifier) {
    };
    /*XCTest.(file).XCTAttachment.init(compressedContentsOfDirectory:URL)*/
    /*XCTest.(file).XCTAttachment.init(compressedContentsOfDirectory:URL)*/
    XCTAttachment.prototype.initCompressedContentsOfDirectoryURL = function ($info, url) {
        return url;
    };
    /*XCTest.(file).XCTAttachment.init(compressedContentsOfDirectoryAtURL:URL)*/
    /*XCTest.(file).XCTAttachment.init(compressedContentsOfDirectoryAtURL:URL)*/
    XCTAttachment.prototype.initCompressedContentsOfDirectoryAtURLURL = function ($info, url) {
        return url;
    };
    /*XCTest.(file).XCTAttachment.attachmentWithCompressedContentsOfDirectoryAtURL(_:URL)*/
    /*XCTest.(file).XCTAttachment.attachmentWithCompressedContentsOfDirectoryAtURL(_:URL)*/
    XCTAttachment.attachmentWithCompressedContentsOfDirectoryAtURL = function ($info, url) {
    };
    /*XCTest.(file).XCTAttachment.init(image:NSImage)*/
    /*XCTest.(file).XCTAttachment.init(image:NSImage)*/
    XCTAttachment.prototype.initImageNSImage = function ($info, _image) {
        return _image;
    };
    /*XCTest.(file).XCTAttachment.attachmentWithImage(_:NSImage)*/
    /*XCTest.(file).XCTAttachment.attachmentWithImage(_:NSImage)*/
    XCTAttachment.attachmentWithImage = function ($info, _image) {
    };
    /*XCTest.(file).XCTAttachment.init(image:NSImage,quality:XCTAttachment.ImageQuality)*/
    /*XCTest.(file).XCTAttachment.init(image:NSImage,quality:XCTAttachment.ImageQuality)*/
    XCTAttachment.prototype.initImageNSImageQualityXCTAttachmentImageQuality = function ($info, _image, quality) {
    };
    /*XCTest.(file).XCTAttachment.attachmentWithImage(_:NSImage,quality:XCTAttachment.ImageQuality)*/
    /*XCTest.(file).XCTAttachment.attachmentWithImage(_:NSImage,quality:XCTAttachment.ImageQuality)*/
    XCTAttachment.attachmentWithImageQuality = function ($info, _image, quality) {
    };
    /*XCTest.(file).XCTAttachment.init(screenshot:XCUIScreenshot)*/
    /*XCTest.(file).XCTAttachment.init(screenshot:XCUIScreenshot)*/
    XCTAttachment.prototype.initScreenshotXCUIScreenshot = function ($info, screenshot) {
        return screenshot;
    };
    /*XCTest.(file).XCTAttachment.attachmentWithScreenshot(_:XCUIScreenshot)*/
    /*XCTest.(file).XCTAttachment.attachmentWithScreenshot(_:XCUIScreenshot)*/
    XCTAttachment.attachmentWithScreenshot = function ($info, screenshot) {
    };
    /*XCTest.(file).XCTAttachment.init(screenshot:XCUIScreenshot,quality:XCTAttachment.ImageQuality)*/
    /*XCTest.(file).XCTAttachment.init(screenshot:XCUIScreenshot,quality:XCTAttachment.ImageQuality)*/
    XCTAttachment.prototype.initScreenshotXCUIScreenshotQualityXCTAttachmentImageQuality = function ($info, screenshot, quality) {
    };
    /*XCTest.(file).XCTAttachment.attachmentWithScreenshot(_:XCUIScreenshot,quality:XCTAttachment.ImageQuality)*/
    /*XCTest.(file).XCTAttachment.attachmentWithScreenshot(_:XCUIScreenshot,quality:XCTAttachment.ImageQuality)*/
    XCTAttachment.attachmentWithScreenshotQuality = function ($info, screenshot, quality) {
    };
    var _161, _162;
    XCTAttachment.$infoAddress = '0x1184aadd8';
    XCTAttachment.ImageQuality = (_161 = /** @class */ (function () {
            function class_185() {
            }
            /*XCTest.(file).XCTAttachment.ImageQuality.init(rawValue:Int)*/
            /*XCTest.(file).XCTAttachment.ImageQuality.init(rawValue:Int)*/
            class_185.prototype.initRawValueInt = function ($info, rawValue) {
                return rawValue;
            };
            /*XCTest.(file).XCTAttachment.ImageQuality.rawValue*/ /*
            rawValue$get() {
            return this.rawValue
            }
            get rawValue() { return this.rawValue$get() }*/ ;
            Object.defineProperty(class_185, "original", {
                get: function () { return Object.assign(new XCTAttachment.ImageQuality(), __assign({ rawValue: 0 }, Array.from(arguments).slice(1))); },
                enumerable: true,
                configurable: true
            });
            Object.defineProperty(class_185, "medium", {
                get: function () { return Object.assign(new XCTAttachment.ImageQuality(), __assign({ rawValue: 1 }, Array.from(arguments).slice(1))); },
                enumerable: true,
                configurable: true
            });
            Object.defineProperty(class_185, "low", {
                get: function () { return Object.assign(new XCTAttachment.ImageQuality(), __assign({ rawValue: 2 }, Array.from(arguments).slice(1))); },
                enumerable: true,
                configurable: true
            });
            return class_185;
        }()),
        _161.$infoAddress = '0x1184adf78',
        _161);
    XCTAttachment.Lifetime = (_162 = /** @class */ (function () {
            function class_186() {
            }
            /*XCTest.(file).XCTAttachment.Lifetime.init(rawValue:Int)*/
            /*XCTest.(file).XCTAttachment.Lifetime.init(rawValue:Int)*/
            class_186.prototype.initRawValueInt = function ($info, rawValue) {
                return rawValue;
            };
            /*XCTest.(file).XCTAttachment.Lifetime.rawValue*/ /*
            rawValue$get() {
            return this.rawValue
            }
            get rawValue() { return this.rawValue$get() }*/ ;
            Object.defineProperty(class_186, "keepAlways", {
                get: function () { return Object.assign(new XCTAttachment.Lifetime(), __assign({ rawValue: 0 }, Array.from(arguments).slice(1))); },
                enumerable: true,
                configurable: true
            });
            Object.defineProperty(class_186, "deleteOnSuccess", {
                get: function () { return Object.assign(new XCTAttachment.Lifetime(), __assign({ rawValue: 1 }, Array.from(arguments).slice(1))); },
                enumerable: true,
                configurable: true
            });
            return class_186;
        }()),
        _162.$infoAddress = '0x1184ab460',
        _162);
    return XCTAttachment;
}(NSObject));
if (typeof NSSecureCoding$implementation != 'undefined')
    _mixin(XCTAttachment, NSSecureCoding$implementation, false);
var XCTContext = /** @class */ (function (_super) {
    __extends(XCTContext, _super);
    function XCTContext() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    /*XCTest.(file).XCTContext.init()*/
    /*ObjectiveC.(file).NSObject.init()*/
    XCTContext.prototype.init = function ($info) {
    };
    /*XCTest.(file).XCTContext.runActivity(named:String,block:(XCTActivity) throws -> Result)*/
    /*XCTest.(file).XCTContext.runActivity(named:String,block:(XCTActivity) throws -> Result)*/
    XCTContext.runActivityNamedBlock = function ($info, _name, block) {
    };
    XCTContext.$infoAddress = '0x1184ad318';
    return XCTContext;
}(NSObject));
var XCTPerformanceMetric = /** @class */ (function () {
    function XCTPerformanceMetric() {
    }
    /*XCTest.(file).XCTPerformanceMetric.init(_:String)*/
    /*XCTest.(file).XCTPerformanceMetric.init(_:String)*/
    XCTPerformanceMetric.prototype.initString = function ($info, rawValue) {
        return rawValue;
    };
    /*XCTest.(file).XCTPerformanceMetric.init(rawValue:String)*/
    /*XCTest.(file).XCTPerformanceMetric.init(rawValue:String)*/
    XCTPerformanceMetric.prototype.initRawValueString = function ($info, rawValue) {
        return rawValue;
    };
    /*XCTest.(file).XCTPerformanceMetric.rawValue*/ /*
    rawValue$get() {
    return this.rawValue
    }
    get rawValue() { return this.rawValue$get() }*/ ;
    XCTPerformanceMetric.$struct = true;
    XCTPerformanceMetric.$infoAddress = '0x1184b0230';
    return XCTPerformanceMetric;
}());
var XCTWaiter = /** @class */ (function (_super) {
    __extends(XCTWaiter, _super);
    function XCTWaiter() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    /*XCTest.(file).XCTWaiter.init(delegate:XCTWaiterDelegate?)*/
    /*XCTest.(file).XCTWaiter.init(delegate:XCTWaiterDelegate?)*/
    XCTWaiter.prototype.initDelegateOptional = function ($info, delegate) {
        return delegate;
    };
    /*XCTest.(file).XCTWaiter.wait(for:[XCTestExpectation],timeout:TimeInterval)*/
    /*XCTest.(file).XCTWaiter.wait(for:[XCTestExpectation],timeout:TimeInterval)*/
    XCTWaiter.prototype.waitForTimeout = function ($info, expectations, seconds) {
    };
    /*XCTest.(file).XCTWaiter.waitForExpectations(_:[XCTestExpectation],timeout:TimeInterval)*/
    /*XCTest.(file).XCTWaiter.waitForExpectations(_:[XCTestExpectation],timeout:TimeInterval)*/
    XCTWaiter.prototype.waitForExpectationsTimeout = function ($info, expectations, seconds) {
    };
    /*XCTest.(file).XCTWaiter.wait(for:[XCTestExpectation],timeout:TimeInterval,enforceOrder:Bool)*/
    /*XCTest.(file).XCTWaiter.wait(for:[XCTestExpectation],timeout:TimeInterval,enforceOrder:Bool)*/
    XCTWaiter.prototype.waitForTimeoutEnforceOrder = function ($info, expectations, seconds, enforceOrderOfFulfillment) {
    };
    /*XCTest.(file).XCTWaiter.waitForExpectations(_:[XCTestExpectation],timeout:TimeInterval,enforceOrder:Bool)*/
    /*XCTest.(file).XCTWaiter.waitForExpectations(_:[XCTestExpectation],timeout:TimeInterval,enforceOrder:Bool)*/
    XCTWaiter.prototype.waitForExpectationsTimeoutEnforceOrder = function ($info, expectations, seconds, enforceOrderOfFulfillment) {
    };
    /*XCTest.(file).XCTWaiter.wait(for:[XCTestExpectation],timeout:TimeInterval)*/
    /*XCTest.(file).XCTWaiter.wait(for:[XCTestExpectation],timeout:TimeInterval)*/
    XCTWaiter.waitForTimeout = function ($info, expectations, seconds) {
    };
    /*XCTest.(file).XCTWaiter.waitForExpectations(_:[XCTestExpectation],timeout:TimeInterval)*/
    /*XCTest.(file).XCTWaiter.waitForExpectations(_:[XCTestExpectation],timeout:TimeInterval)*/
    XCTWaiter.waitForExpectationsTimeout = function ($info, expectations, seconds) {
    };
    /*XCTest.(file).XCTWaiter.wait(for:[XCTestExpectation],timeout:TimeInterval,enforceOrder:Bool)*/
    /*XCTest.(file).XCTWaiter.wait(for:[XCTestExpectation],timeout:TimeInterval,enforceOrder:Bool)*/
    XCTWaiter.waitForTimeoutEnforceOrder = function ($info, expectations, seconds, enforceOrderOfFulfillment) {
    };
    /*XCTest.(file).XCTWaiter.waitForExpectations(_:[XCTestExpectation],timeout:TimeInterval,enforceOrder:Bool)*/
    /*XCTest.(file).XCTWaiter.waitForExpectations(_:[XCTestExpectation],timeout:TimeInterval,enforceOrder:Bool)*/
    XCTWaiter.waitForExpectationsTimeoutEnforceOrder = function ($info, expectations, seconds, enforceOrderOfFulfillment) {
    };
    /*XCTest.(file).XCTWaiter.init()*/
    /*ObjectiveC.(file).NSObject.init()*/
    XCTWaiter.prototype.init = function ($info) {
    };
    var _163;
    XCTWaiter.$infoAddress = '0x1184b1958';
    XCTWaiter.Result = (_163 = /** @class */ (function () {
            function class_187() {
            }
            /*XCTest.(file).XCTWaiter.Result.init(rawValue:Int)*/
            /*XCTest.(file).XCTWaiter.Result.init(rawValue:Int)*/
            class_187.prototype.initRawValueInt = function ($info, rawValue) {
                return rawValue;
            };
            /*XCTest.(file).XCTWaiter.Result.rawValue*/ /*
            rawValue$get() {
            return this.rawValue
            }
            get rawValue() { return this.rawValue$get() }*/ ;
            Object.defineProperty(class_187, "completed", {
                get: function () { return Object.assign(new XCTWaiter.Result(), __assign({ rawValue: 1 }, Array.from(arguments).slice(1))); },
                enumerable: true,
                configurable: true
            });
            Object.defineProperty(class_187, "timedOut", {
                get: function () { return Object.assign(new XCTWaiter.Result(), __assign({ rawValue: 2 }, Array.from(arguments).slice(1))); },
                enumerable: true,
                configurable: true
            });
            Object.defineProperty(class_187, "incorrectOrder", {
                get: function () { return Object.assign(new XCTWaiter.Result(), __assign({ rawValue: 3 }, Array.from(arguments).slice(1))); },
                enumerable: true,
                configurable: true
            });
            Object.defineProperty(class_187, "invertedFulfillment", {
                get: function () { return Object.assign(new XCTWaiter.Result(), __assign({ rawValue: 4 }, Array.from(arguments).slice(1))); },
                enumerable: true,
                configurable: true
            });
            Object.defineProperty(class_187, "interrupted", {
                get: function () { return Object.assign(new XCTWaiter.Result(), __assign({ rawValue: 5 }, Array.from(arguments).slice(1))); },
                enumerable: true,
                configurable: true
            });
            return class_187;
        }()),
        _163.$infoAddress = '0x1184b2368',
        _163);
    return XCTWaiter;
}(NSObject));
var XCTWaiterDelegate$implementation = /** @class */ (function () {
    function XCTWaiterDelegate$implementation() {
    }
    return XCTWaiterDelegate$implementation;
}());
if (typeof NSObjectProtocol$implementation != 'undefined')
    _mixin(XCTWaiterDelegate$implementation, NSObjectProtocol$implementation, false);
var XCTest = /** @class */ (function (_super) {
    __extends(XCTest, _super);
    function XCTest() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    /*XCTest.(file).XCTest.perform(_:XCTestRun)*/
    /*XCTest.(file).XCTest.perform(_:XCTestRun)*/
    XCTest.prototype.perform = function ($info, run) {
    };
    /*XCTest.(file).XCTest.performTest(_:XCTestRun)*/
    /*XCTest.(file).XCTest.performTest(_:XCTestRun)*/
    XCTest.prototype.performTest = function ($info, run) {
    };
    /*XCTest.(file).XCTest.run()*/
    /*XCTest.(file).XCTest.run()*/
    XCTest.prototype.run = function ($info) {
    };
    /*XCTest.(file).XCTest.runTest()*/
    /*XCTest.(file).XCTest.runTest()*/
    XCTest.prototype.runTest = function ($info) {
    };
    /*XCTest.(file).XCTest.setUp()*/
    /*XCTest.(file).XCTest.setUp()*/
    XCTest.prototype.setUp = function ($info) {
    };
    /*XCTest.(file).XCTest.tearDown()*/
    /*XCTest.(file).XCTest.tearDown()*/
    XCTest.prototype.tearDown = function ($info) {
    };
    /*XCTest.(file).XCTest.init()*/
    /*ObjectiveC.(file).NSObject.init()*/
    XCTest.prototype.init = function ($info) {
    };
    XCTest.$infoAddress = '0x1184db230';
    return XCTest;
}(NSObject));
var XCTestCase = /** @class */ (function (_super) {
    __extends(XCTestCase, _super);
    function XCTestCase() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    /*XCTest.(file).XCTestCase.init(invocation:NSInvocation?)*/
    /*XCTest.(file).XCTestCase.init(invocation:NSInvocation?)*/
    XCTestCase.prototype.initInvocationOptional = function ($info, invocation) {
        return invocation;
    };
    /*XCTest.(file).XCTestCase.testCaseWithInvocation(_:NSInvocation?)*/
    /*XCTest.(file).XCTestCase.testCaseWithInvocation(_:NSInvocation?)*/
    XCTestCase.testCaseWithInvocation = function ($info, invocation) {
    };
    /*XCTest.(file).XCTestCase.init(invocation:NSInvocation?)*/
    /*XCTest.(file).XCTestCase.init(invocation:NSInvocation?)*/
    XCTestCase.prototype.initInvocationOptional = function ($info, invocation) {
        return invocation;
    };
    /*XCTest.(file).XCTestCase.init(selector:Selector)*/
    /*XCTest.(file).XCTestCase.init(selector:Selector)*/
    XCTestCase.prototype.initSelectorSelector = function ($info, selector) {
        return selector;
    };
    /*XCTest.(file).XCTestCase.testCaseWithSelector(_:Selector)*/
    /*XCTest.(file).XCTestCase.testCaseWithSelector(_:Selector)*/
    XCTestCase.testCaseWithSelector = function ($info, selector) {
    };
    /*XCTest.(file).XCTestCase.init(selector:Selector)*/
    /*XCTest.(file).XCTestCase.init(selector:Selector)*/
    XCTestCase.prototype.initSelectorSelector = function ($info, selector) {
        return selector;
    };
    /*XCTest.(file).XCTestCase.invokeTest()*/
    /*XCTest.(file).XCTestCase.invokeTest()*/
    XCTestCase.prototype.invokeTest = function ($info) {
    };
    /*XCTest.(file).XCTestCase.recordFailure(withDescription:String,inFile:String,atLine:Int,expected:Bool)*/
    /*XCTest.(file).XCTestCase.recordFailure(withDescription:String,inFile:String,atLine:Int,expected:Bool)*/
    XCTestCase.prototype.recordFailureWithDescriptionInFileAtLineExpected = function ($info, description, filePath, lineNumber, expected) {
    };
    /*XCTest.(file).XCTestCase.recordFailureWithDescription(_:String,inFile:String,atLine:Int,expected:Bool)*/
    /*XCTest.(file).XCTestCase.recordFailureWithDescription(_:String,inFile:String,atLine:Int,expected:Bool)*/
    XCTestCase.prototype.recordFailureWithDescriptionInFileAtLineExpected = function ($info, description, filePath, lineNumber, expected) {
    };
    /*XCTest.(file).XCTestCase.addTeardownBlock(_:() -> Void)*/
    /*XCTest.(file).XCTestCase.addTeardownBlock(_:() -> Void)*/
    XCTestCase.prototype.addTeardownBlock = function ($info, block) {
    };
    /*XCTest.(file).XCTestCase.measure(_:() -> Void)*/
    /*XCTest.(file).XCTestCase.measure(_:() -> Void)*/
    XCTestCase.prototype.measure = function ($info, block) {
    };
    /*XCTest.(file).XCTestCase.measureBlock(_:() -> Void)*/
    /*XCTest.(file).XCTestCase.measureBlock(_:() -> Void)*/
    XCTestCase.prototype.measureBlock = function ($info, block) {
    };
    /*XCTest.(file).XCTestCase.measureMetrics(_:[XCTPerformanceMetric],automaticallyStartMeasuring:Bool,for:() -> Void)*/
    /*XCTest.(file).XCTestCase.measureMetrics(_:[XCTPerformanceMetric],automaticallyStartMeasuring:Bool,for:() -> Void)*/
    XCTestCase.prototype.measureMetricsAutomaticallyStartMeasuringFor = function ($info, metrics, automaticallyStartMeasuring, block) {
    };
    /*XCTest.(file).XCTestCase.measureMetrics(_:[XCTPerformanceMetric],automaticallyStartMeasuring:Bool,forBlock:() -> Void)*/
    /*XCTest.(file).XCTestCase.measureMetrics(_:[XCTPerformanceMetric],automaticallyStartMeasuring:Bool,forBlock:() -> Void)*/
    XCTestCase.prototype.measureMetricsAutomaticallyStartMeasuringForBlock = function ($info, metrics, automaticallyStartMeasuring, block) {
    };
    /*XCTest.(file).XCTestCase.startMeasuring()*/
    /*XCTest.(file).XCTestCase.startMeasuring()*/
    XCTestCase.prototype.startMeasuring = function ($info) {
    };
    /*XCTest.(file).XCTestCase.stopMeasuring()*/
    /*XCTest.(file).XCTestCase.stopMeasuring()*/
    XCTestCase.prototype.stopMeasuring = function ($info) {
    };
    /*XCTest.(file).XCTestCase.addUIInterruptionMonitor(withDescription:String,handler:(XCUIElement) -> Bool)*/
    /*XCTest.(file).XCTestCase.addUIInterruptionMonitor(withDescription:String,handler:(XCUIElement) -> Bool)*/
    XCTestCase.prototype.addUIInterruptionMonitorWithDescriptionHandler = function ($info, handlerDescription, handler) {
    };
    /*XCTest.(file).XCTestCase.addUIInterruptionMonitorWithDescription(_:String,handler:(XCUIElement) -> Bool)*/
    /*XCTest.(file).XCTestCase.addUIInterruptionMonitorWithDescription(_:String,handler:(XCUIElement) -> Bool)*/
    XCTestCase.prototype.addUIInterruptionMonitorWithDescriptionHandler = function ($info, handlerDescription, handler) {
    };
    /*XCTest.(file).XCTestCase.removeUIInterruptionMonitor(_:NSObjectProtocol)*/
    /*XCTest.(file).XCTestCase.removeUIInterruptionMonitor(_:NSObjectProtocol)*/
    XCTestCase.prototype.removeUIInterruptionMonitor = function ($info, monitor) {
    };
    /*XCTest.(file).XCTestCase.init()*/
    /*ObjectiveC.(file).NSObject.init()*/
    XCTestCase.prototype.init = function ($info) {
        if (this.setUp)
            this.setUp();
        for (var testFunction in this) {
            if (typeof this[testFunction] !== 'function' || testFunction === 'setUp' || XCTestCase.prototype[testFunction] /*is inherited*/ || testFunction.endsWith('$get') || testFunction.endsWith('$set'))
                continue;
            this[testFunction]();
        }
    };
    /*XCTest.(file).XCTestCase.setUp()*/
    /*XCTest.(file).XCTestCase.setUp()*/
    XCTestCase.setUp = function ($info) {
    };
    /*XCTest.(file).XCTestCase.tearDown()*/
    /*XCTest.(file).XCTestCase.tearDown()*/
    XCTestCase.tearDown = function ($info) {
    };
    /*XCTest.(file).XCTestCase.add(_:XCTAttachment)*/
    /*XCTest.(file).XCTestCase.add(_:XCTAttachment)*/
    XCTestCase.prototype.add = function ($info, attachment) {
    };
    /*XCTest.(file).XCTestCase.expectation(description:String)*/
    /*XCTest.(file).XCTestCase.expectation(description:String)*/
    XCTestCase.prototype.expectationDescription = function ($info, description) {
    };
    /*XCTest.(file).XCTestCase.expectationWithDescription(_:String)*/
    /*XCTest.(file).XCTestCase.expectationWithDescription(_:String)*/
    XCTestCase.prototype.expectationWithDescription = function ($info, description) {
    };
    /*XCTest.(file).XCTestCase.waitForExpectations(timeout:TimeInterval,handler:XCWaitCompletionHandler?)*/
    /*XCTest.(file).XCTestCase.waitForExpectations(timeout:TimeInterval,handler:XCWaitCompletionHandler?)*/
    XCTestCase.prototype.waitForExpectationsTimeoutHandler = function ($info, timeout, handler) {
    };
    /*XCTest.(file).XCTestCase.waitForExpectationsWithTimeout(_:TimeInterval,handler:XCWaitCompletionHandler?)*/
    /*XCTest.(file).XCTestCase.waitForExpectationsWithTimeout(_:TimeInterval,handler:XCWaitCompletionHandler?)*/
    XCTestCase.prototype.waitForExpectationsWithTimeoutHandler = function ($info, timeout, handler) {
    };
    /*XCTest.(file).XCTestCase.wait(for:[XCTestExpectation],timeout:TimeInterval)*/
    /*XCTest.(file).XCTestCase.wait(for:[XCTestExpectation],timeout:TimeInterval)*/
    XCTestCase.prototype.waitForTimeout = function ($info, expectations, seconds) {
    };
    /*XCTest.(file).XCTestCase.waitForExpectations(_:[XCTestExpectation],timeout:TimeInterval)*/
    /*XCTest.(file).XCTestCase.waitForExpectations(_:[XCTestExpectation],timeout:TimeInterval)*/
    XCTestCase.prototype.waitForExpectationsTimeout = function ($info, expectations, seconds) {
    };
    /*XCTest.(file).XCTestCase.wait(for:[XCTestExpectation],timeout:TimeInterval,enforceOrder:Bool)*/
    /*XCTest.(file).XCTestCase.wait(for:[XCTestExpectation],timeout:TimeInterval,enforceOrder:Bool)*/
    XCTestCase.prototype.waitForTimeoutEnforceOrder = function ($info, expectations, seconds, enforceOrderOfFulfillment) {
    };
    /*XCTest.(file).XCTestCase.waitForExpectations(_:[XCTestExpectation],timeout:TimeInterval,enforceOrder:Bool)*/
    /*XCTest.(file).XCTestCase.waitForExpectations(_:[XCTestExpectation],timeout:TimeInterval,enforceOrder:Bool)*/
    XCTestCase.prototype.waitForExpectationsTimeoutEnforceOrder = function ($info, expectations, seconds, enforceOrderOfFulfillment) {
    };
    /*XCTest.(file).XCTestCase.keyValueObservingExpectation(for:Any,keyPath:String,expectedValue:Any?)*/
    /*XCTest.(file).XCTestCase.keyValueObservingExpectation(for:Any,keyPath:String,expectedValue:Any?)*/
    XCTestCase.prototype.keyValueObservingExpectationForKeyPathExpectedValue = function ($info, objectToObserve, keyPath, expectedValue) {
    };
    /*XCTest.(file).XCTestCase.keyValueObservingExpectationForObject(_:Any,keyPath:String,expectedValue:Any?)*/
    /*XCTest.(file).XCTestCase.keyValueObservingExpectationForObject(_:Any,keyPath:String,expectedValue:Any?)*/
    XCTestCase.prototype.keyValueObservingExpectationForObjectKeyPathExpectedValue = function ($info, objectToObserve, keyPath, expectedValue) {
    };
    /*XCTest.(file).XCTestCase.keyValueObservingExpectation(for:Any,keyPath:String,handler:XCTKVOExpectation.Handler?)*/
    /*XCTest.(file).XCTestCase.keyValueObservingExpectation(for:Any,keyPath:String,handler:XCTKVOExpectation.Handler?)*/
    XCTestCase.prototype.keyValueObservingExpectationForKeyPathHandler = function ($info, objectToObserve, keyPath, handler) {
    };
    /*XCTest.(file).XCTestCase.keyValueObservingExpectationForObject(_:Any,keyPath:String,handler:XCTKVOExpectation.Handler?)*/
    /*XCTest.(file).XCTestCase.keyValueObservingExpectationForObject(_:Any,keyPath:String,handler:XCTKVOExpectation.Handler?)*/
    XCTestCase.prototype.keyValueObservingExpectationForObjectKeyPathHandler = function ($info, objectToObserve, keyPath, handler) {
    };
    /*XCTest.(file).XCTestCase.expectation(forNotification:NSNotification.Name,object:Any?,handler:XCTNSNotificationExpectation.Handler?)*/
    /*XCTest.(file).XCTestCase.expectation(forNotification:NSNotification.Name,object:Any?,handler:XCTNSNotificationExpectation.Handler?)*/
    XCTestCase.prototype.expectationForNotificationObjectHandler = function ($info, notificationName, objectToObserve, handler) {
    };
    /*XCTest.(file).XCTestCase.expectationForNotification(_:NSNotification.Name,object:Any?,handler:XCTNSNotificationExpectation.Handler?)*/
    /*XCTest.(file).XCTestCase.expectationForNotification(_:NSNotification.Name,object:Any?,handler:XCTNSNotificationExpectation.Handler?)*/
    XCTestCase.prototype.expectationForNotificationObjectHandler = function ($info, notificationName, objectToObserve, handler) {
    };
    /*XCTest.(file).XCTestCase.expectation(for:NSPredicate,evaluatedWith:Any,handler:XCTNSPredicateExpectation.Handler?)*/
    /*XCTest.(file).XCTestCase.expectation(for:NSPredicate,evaluatedWith:Any,handler:XCTNSPredicateExpectation.Handler?)*/
    XCTestCase.prototype.expectationForEvaluatedWithHandler = function ($info, predicate, object, handler) {
    };
    /*XCTest.(file).XCTestCase.expectationForPredicate(_:NSPredicate,evaluatedWithObject:Any,handler:XCTNSPredicateExpectation.Handler?)*/
    /*XCTest.(file).XCTestCase.expectationForPredicate(_:NSPredicate,evaluatedWithObject:Any,handler:XCTNSPredicateExpectation.Handler?)*/
    XCTestCase.prototype.expectationForPredicateEvaluatedWithObjectHandler = function ($info, predicate, object, handler) {
    };
    /*XCTest.(file).XCTestCase.waiter(_:XCTWaiter,didTimeoutWithUnfulfilledExpectations:[XCTestExpectation])*/
    /*XCTest.(file).XCTestCase.waiter(_:XCTWaiter,didTimeoutWithUnfulfilledExpectations:[XCTestExpectation])*/
    XCTestCase.prototype.waiterDidTimeoutWithUnfulfilledExpectations = function ($info, waiter, unfulfilledExpectations) {
    };
    /*XCTest.(file).XCTestCase.waiter(_:XCTWaiter,fulfillmentDidViolateOrderingConstraintsFor:XCTestExpectation,requiredExpectation:XCTestExpectation)*/
    /*XCTest.(file).XCTestCase.waiter(_:XCTWaiter,fulfillmentDidViolateOrderingConstraintsFor:XCTestExpectation,requiredExpectation:XCTestExpectation)*/
    XCTestCase.prototype.waiterFulfillmentDidViolateOrderingConstraintsForRequiredExpectation = function ($info, waiter, expectation, requiredExpectation) {
    };
    /*XCTest.(file).XCTestCase.waiter(_:XCTWaiter,didFulfillInvertedExpectation:XCTestExpectation)*/
    /*XCTest.(file).XCTestCase.waiter(_:XCTWaiter,didFulfillInvertedExpectation:XCTestExpectation)*/
    XCTestCase.prototype.waiterDidFulfillInvertedExpectation = function ($info, waiter, expectation) {
    };
    /*XCTest.(file).XCTestCase.nestedWaiter(_:XCTWaiter,wasInterruptedByTimedOutWaiter:XCTWaiter)*/
    /*XCTest.(file).XCTestCase.nestedWaiter(_:XCTWaiter,wasInterruptedByTimedOutWaiter:XCTWaiter)*/
    XCTestCase.prototype.nestedWaiterWasInterruptedByTimedOutWaiter = function ($info, waiter, outerWaiter) {
    };
    XCTestCase.$infoAddress = '0x1184db678';
    return XCTestCase;
}(XCTest));
if (typeof XCTActivity$implementation != 'undefined')
    _mixin(XCTestCase, XCTActivity$implementation, false);
if (typeof XCTWaiterDelegate$implementation != 'undefined')
    _mixin(XCTestCase, XCTWaiterDelegate$implementation, false);
var XCTestError = /** @class */ (function () {
    function XCTestError() {
    }
    /*XCTest.(file).XCTestError.init(_nsError:NSError)*/
    /*XCTest.(file).XCTestError.init(_nsError:NSError)*/
    XCTestError.prototype.init_nsErrorNSError = function ($info, _nsError) {
        return _nsError;
    };
    var _164;
    XCTestError.$struct = true;
    XCTestError.$infoAddress = '0x1184dc370';
    XCTestError.Code = (_164 = /** @class */ (function () {
            function class_188() {
            }
            /*XCTest.(file).XCTestError.Code.init(rawValue:Int)*/
            /*XCTest.(file).XCTestError.Code.init(rawValue:Int)*/
            class_188.prototype.initRawValueInt = function ($info, rawValue) {
                return rawValue;
            };
            /*XCTest.(file).XCTestError.Code.rawValue*/ /*
            rawValue$get() {
            return this.rawValue
            }
            get rawValue() { return this.rawValue$get() }*/ ;
            Object.defineProperty(class_188, "timeoutWhileWaiting", {
                get: function () { return Object.assign(new XCTestError.Code(), __assign({ rawValue: 0 }, Array.from(arguments).slice(1))); },
                enumerable: true,
                configurable: true
            });
            Object.defineProperty(class_188, "failureWhileWaiting", {
                get: function () { return Object.assign(new XCTestError.Code(), __assign({ rawValue: 1 }, Array.from(arguments).slice(1))); },
                enumerable: true,
                configurable: true
            });
            return class_188;
        }()),
        _164.$infoAddress = '0x1184dcd78',
        _164);
    return XCTestError;
}());
var XCTestExpectation = /** @class */ (function (_super) {
    __extends(XCTestExpectation, _super);
    function XCTestExpectation() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    /*XCTest.(file).XCTestExpectation.init(description:String)*/
    /*XCTest.(file).XCTestExpectation.init(description:String)*/
    XCTestExpectation.prototype.initDescriptionString = function ($info, expectationDescription) {
        return expectationDescription;
    };
    /*XCTest.(file).XCTestExpectation.fulfill()*/
    /*XCTest.(file).XCTestExpectation.fulfill()*/
    XCTestExpectation.prototype.fulfill = function ($info) {
    };
    /*XCTest.(file).XCTestExpectation.init()*/
    /*ObjectiveC.(file).NSObject.init()*/
    XCTestExpectation.prototype.init = function ($info) {
    };
    XCTestExpectation.$infoAddress = '0x1184a8c88';
    return XCTestExpectation;
}(NSObject));
var XCTestObservation$implementation = /** @class */ (function () {
    function XCTestObservation$implementation() {
    }
    return XCTestObservation$implementation;
}());
if (typeof NSObjectProtocol$implementation != 'undefined')
    _mixin(XCTestObservation$implementation, NSObjectProtocol$implementation, false);
var XCTestObservationCenter = /** @class */ (function (_super) {
    __extends(XCTestObservationCenter, _super);
    function XCTestObservationCenter() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    /*XCTest.(file).XCTestObservationCenter.addTestObserver(_:XCTestObservation)*/
    /*XCTest.(file).XCTestObservationCenter.addTestObserver(_:XCTestObservation)*/
    XCTestObservationCenter.prototype.addTestObserver = function ($info, testObserver) {
    };
    /*XCTest.(file).XCTestObservationCenter.removeTestObserver(_:XCTestObservation)*/
    /*XCTest.(file).XCTestObservationCenter.removeTestObserver(_:XCTestObservation)*/
    XCTestObservationCenter.prototype.removeTestObserver = function ($info, testObserver) {
    };
    /*XCTest.(file).XCTestObservationCenter.init()*/
    /*ObjectiveC.(file).NSObject.init()*/
    XCTestObservationCenter.prototype.init = function ($info) {
    };
    XCTestObservationCenter.$infoAddress = '0x1184e0088';
    return XCTestObservationCenter;
}(NSObject));
var XCTestObserver = /** @class */ (function (_super) {
    __extends(XCTestObserver, _super);
    function XCTestObserver() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    /*XCTest.(file).XCTestObserver.startObserving()*/
    /*XCTest.(file).XCTestObserver.startObserving()*/
    XCTestObserver.prototype.startObserving = function ($info) {
    };
    /*XCTest.(file).XCTestObserver.stopObserving()*/
    /*XCTest.(file).XCTestObserver.stopObserving()*/
    XCTestObserver.prototype.stopObserving = function ($info) {
    };
    /*XCTest.(file).XCTestObserver.testSuiteDidStart(_:XCTestRun?)*/
    /*XCTest.(file).XCTestObserver.testSuiteDidStart(_:XCTestRun?)*/
    XCTestObserver.prototype.testSuiteDidStart = function ($info, testRun) {
    };
    /*XCTest.(file).XCTestObserver.testSuiteDidStop(_:XCTestRun?)*/
    /*XCTest.(file).XCTestObserver.testSuiteDidStop(_:XCTestRun?)*/
    XCTestObserver.prototype.testSuiteDidStop = function ($info, testRun) {
    };
    /*XCTest.(file).XCTestObserver.testCaseDidStart(_:XCTestRun?)*/
    /*XCTest.(file).XCTestObserver.testCaseDidStart(_:XCTestRun?)*/
    XCTestObserver.prototype.testCaseDidStart = function ($info, testRun) {
    };
    /*XCTest.(file).XCTestObserver.testCaseDidStop(_:XCTestRun?)*/
    /*XCTest.(file).XCTestObserver.testCaseDidStop(_:XCTestRun?)*/
    XCTestObserver.prototype.testCaseDidStop = function ($info, testRun) {
    };
    /*XCTest.(file).XCTestObserver.testCaseDidFail(_:XCTestRun?,withDescription:String?,inFile:String?,atLine:Int)*/
    /*XCTest.(file).XCTestObserver.testCaseDidFail(_:XCTestRun?,withDescription:String?,inFile:String?,atLine:Int)*/
    XCTestObserver.prototype.testCaseDidFailWithDescriptionInFileAtLine = function ($info, testRun, description, filePath, lineNumber) {
    };
    /*XCTest.(file).XCTestObserver.init()*/
    /*ObjectiveC.(file).NSObject.init()*/
    XCTestObserver.prototype.init = function ($info) {
    };
    XCTestObserver.$infoAddress = '0x1184df2f0';
    return XCTestObserver;
}(NSObject));
var XCTestProbe = /** @class */ (function (_super) {
    __extends(XCTestProbe, _super);
    function XCTestProbe() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    /*XCTest.(file).XCTestProbe.isTesting()*/
    /*XCTest.(file).XCTestProbe.isTesting()*/
    XCTestProbe.isTesting = function ($info) {
    };
    /*XCTest.(file).XCTestProbe.init()*/
    /*ObjectiveC.(file).NSObject.init()*/
    XCTestProbe.prototype.init = function ($info) {
    };
    XCTestProbe.$infoAddress = '0x1184e0638';
    return XCTestProbe;
}(NSObject));
var XCTestRun = /** @class */ (function (_super) {
    __extends(XCTestRun, _super);
    function XCTestRun() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    /*XCTest.(file).XCTestRun.init()*/
    /*ObjectiveC.(file).NSObject.init()*/
    XCTestRun.prototype.init = function ($info) {
    };
    /*XCTest.(file).XCTestRun.init(test:XCTest)*/
    /*XCTest.(file).XCTestRun.init(test:XCTest)*/
    XCTestRun.prototype.initTestXCTest = function ($info, test) {
        return test;
    };
    /*XCTest.(file).XCTestRun.testRunWithTest(_:XCTest)*/
    /*XCTest.(file).XCTestRun.testRunWithTest(_:XCTest)*/
    XCTestRun.testRunWithTest = function ($info, test) {
    };
    /*XCTest.(file).XCTestRun.init(test:XCTest)*/
    /*XCTest.(file).XCTestRun.init(test:XCTest)*/
    XCTestRun.prototype.initTestXCTest = function ($info, test) {
        return test;
    };
    /*XCTest.(file).XCTestRun.start()*/
    /*XCTest.(file).XCTestRun.start()*/
    XCTestRun.prototype.start = function ($info) {
    };
    /*XCTest.(file).XCTestRun.stop()*/
    /*XCTest.(file).XCTestRun.stop()*/
    XCTestRun.prototype.stop = function ($info) {
    };
    /*XCTest.(file).XCTestRun.recordFailure(withDescription:String,inFile:String?,atLine:Int,expected:Bool)*/
    /*XCTest.(file).XCTestRun.recordFailure(withDescription:String,inFile:String?,atLine:Int,expected:Bool)*/
    XCTestRun.prototype.recordFailureWithDescriptionInFileAtLineExpected = function ($info, description, filePath, lineNumber, expected) {
    };
    /*XCTest.(file).XCTestRun.recordFailureWithDescription(_:String,inFile:String?,atLine:Int,expected:Bool)*/
    /*XCTest.(file).XCTestRun.recordFailureWithDescription(_:String,inFile:String?,atLine:Int,expected:Bool)*/
    XCTestRun.prototype.recordFailureWithDescriptionInFileAtLineExpected = function ($info, description, filePath, lineNumber, expected) {
    };
    XCTestRun.$infoAddress = '0x1184dbc78';
    return XCTestRun;
}(NSObject));
var XCTestSuite = /** @class */ (function (_super) {
    __extends(XCTestSuite, _super);
    function XCTestSuite() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    /*XCTest.(file).XCTestSuite.init(forBundlePath:String)*/
    /*XCTest.(file).XCTestSuite.init(forBundlePath:String)*/
    XCTestSuite.prototype.initForBundlePathString = function ($info, bundlePath) {
        return bundlePath;
    };
    /*XCTest.(file).XCTestSuite.testSuiteForBundlePath(_:String)*/
    /*XCTest.(file).XCTestSuite.testSuiteForBundlePath(_:String)*/
    XCTestSuite.testSuiteForBundlePath = function ($info, bundlePath) {
    };
    /*XCTest.(file).XCTestSuite.init(forTestCaseWithName:String)*/
    /*XCTest.(file).XCTestSuite.init(forTestCaseWithName:String)*/
    XCTestSuite.prototype.initForTestCaseWithNameString = function ($info, _name) {
        return _name;
    };
    /*XCTest.(file).XCTestSuite.testSuiteForTestCaseWithName(_:String)*/
    /*XCTest.(file).XCTestSuite.testSuiteForTestCaseWithName(_:String)*/
    XCTestSuite.testSuiteForTestCaseWithName = function ($info, _name) {
    };
    /*XCTest.(file).XCTestSuite.init(forTestCaseClass:AnyClass)*/
    /*XCTest.(file).XCTestSuite.init(forTestCaseClass:AnyClass)*/
    XCTestSuite.prototype.initForTestCaseClassAnyClass = function ($info, testCaseClass) {
        return testCaseClass;
    };
    /*XCTest.(file).XCTestSuite.testSuiteForTestCaseClass(_:AnyClass)*/
    /*XCTest.(file).XCTestSuite.testSuiteForTestCaseClass(_:AnyClass)*/
    XCTestSuite.testSuiteForTestCaseClass = function ($info, testCaseClass) {
    };
    /*XCTest.(file).XCTestSuite.init(name:String)*/
    /*XCTest.(file).XCTestSuite.init(name:String)*/
    XCTestSuite.prototype.initNameString = function ($info, _name) {
        return _name;
    };
    /*XCTest.(file).XCTestSuite.testSuiteWithName(_:String)*/
    /*XCTest.(file).XCTestSuite.testSuiteWithName(_:String)*/
    XCTestSuite.testSuiteWithName = function ($info, _name) {
    };
    /*XCTest.(file).XCTestSuite.init(name:String)*/
    /*XCTest.(file).XCTestSuite.init(name:String)*/
    XCTestSuite.prototype.initNameString = function ($info, _name) {
        return _name;
    };
    /*XCTest.(file).XCTestSuite.init()*/
    /*ObjectiveC.(file).NSObject.init()*/
    XCTestSuite.prototype.init = function ($info) {
    };
    /*XCTest.(file).XCTestSuite.addTest(_:XCTest)*/
    /*XCTest.(file).XCTestSuite.addTest(_:XCTest)*/
    XCTestSuite.prototype.addTest = function ($info, test) {
    };
    XCTestSuite.$infoAddress = '0x1184e10c8';
    return XCTestSuite;
}(XCTest));
var XCTestSuiteRun = /** @class */ (function (_super) {
    __extends(XCTestSuiteRun, _super);
    function XCTestSuiteRun() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    /*XCTest.(file).XCTestSuiteRun.addTestRun(_:XCTestRun)*/
    /*XCTest.(file).XCTestSuiteRun.addTestRun(_:XCTestRun)*/
    XCTestSuiteRun.prototype.addTestRun = function ($info, testRun) {
    };
    /*XCTest.(file).XCTestSuiteRun.init()*/
    /*ObjectiveC.(file).NSObject.init()*/
    XCTestSuiteRun.prototype.init = function ($info) {
    };
    /*XCTest.(file).XCTestSuiteRun.init(test:XCTest)*/
    /*XCTest.(file).XCTestSuiteRun.init(test:XCTest)*/
    XCTestSuiteRun.prototype.initTestXCTest = function ($info, test) {
        return test;
    };
    /*XCTest.(file).XCTestSuiteRun.init(test:XCTest)*/
    /*XCTest.(file).XCTestRun.init(test:XCTest)*/
    XCTestSuiteRun.prototype.initTestXCTest = function ($info, test) {
        return test;
    };
    XCTestSuiteRun.$infoAddress = '0x1184e1510';
    return XCTestSuiteRun;
}(XCTestRun));
var XCUICoordinate = /** @class */ (function (_super) {
    __extends(XCUICoordinate, _super);
    function XCUICoordinate() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    /*XCTest.(file).XCUICoordinate.init()*/
    /*ObjectiveC.(file).NSObject.init()*/
    XCUICoordinate.prototype.init = function ($info) {
    };
    /*XCTest.(file).XCUICoordinate.withOffset(_:CGVector)*/
    /*XCTest.(file).XCUICoordinate.withOffset(_:CGVector)*/
    XCUICoordinate.prototype.withOffset = function ($info, offsetVector) {
    };
    /*XCTest.(file).XCUICoordinate.coordinateWithOffset(_:CGVector)*/
    /*XCTest.(file).XCUICoordinate.coordinateWithOffset(_:CGVector)*/
    XCUICoordinate.prototype.coordinateWithOffset = function ($info, offsetVector) {
    };
    /*XCTest.(file).XCUICoordinate.copy(with:NSZone?)*/
    /*XCTest.(file).XCUICoordinate.copy(with:NSZone?)*/
    XCUICoordinate.prototype.copyWith = function ($info, zone) {
    };
    /*XCTest.(file).XCUICoordinate.hover()*/
    /*XCTest.(file).XCUICoordinate.hover()*/
    XCUICoordinate.prototype.hover = function ($info) {
    };
    /*XCTest.(file).XCUICoordinate.click()*/
    /*XCTest.(file).XCUICoordinate.click()*/
    XCUICoordinate.prototype.click = function ($info) {
    };
    /*XCTest.(file).XCUICoordinate.doubleClick()*/
    /*XCTest.(file).XCUICoordinate.doubleClick()*/
    XCUICoordinate.prototype.doubleClick = function ($info) {
    };
    /*XCTest.(file).XCUICoordinate.rightClick()*/
    /*XCTest.(file).XCUICoordinate.rightClick()*/
    XCUICoordinate.prototype.rightClick = function ($info) {
    };
    /*XCTest.(file).XCUICoordinate.click(forDuration:TimeInterval,thenDragTo:XCUICoordinate)*/
    /*XCTest.(file).XCUICoordinate.click(forDuration:TimeInterval,thenDragTo:XCUICoordinate)*/
    XCUICoordinate.prototype.clickForDurationThenDragTo = function ($info, duration, otherCoordinate) {
    };
    /*XCTest.(file).XCUICoordinate.clickForDuration(_:TimeInterval,thenDragToCoordinate:XCUICoordinate)*/
    /*XCTest.(file).XCUICoordinate.clickForDuration(_:TimeInterval,thenDragToCoordinate:XCUICoordinate)*/
    XCUICoordinate.prototype.clickForDurationThenDragToCoordinate = function ($info, duration, otherCoordinate) {
    };
    /*XCTest.(file).XCUICoordinate.scroll(byDeltaX:CGFloat,deltaY:CGFloat)*/
    /*XCTest.(file).XCUICoordinate.scroll(byDeltaX:CGFloat,deltaY:CGFloat)*/
    XCUICoordinate.prototype.scrollByDeltaXDeltaY = function ($info, deltaX, deltaY) {
    };
    /*XCTest.(file).XCUICoordinate.scrollByDeltaX(_:CGFloat,deltaY:CGFloat)*/
    /*XCTest.(file).XCUICoordinate.scrollByDeltaX(_:CGFloat,deltaY:CGFloat)*/
    XCUICoordinate.prototype.scrollByDeltaXDeltaY = function ($info, deltaX, deltaY) {
    };
    /*XCTest.(file).XCUICoordinate.tap()*/
    /*XCTest.(file).XCUICoordinate.tap()*/
    XCUICoordinate.prototype.tap = function ($info) {
    };
    /*XCTest.(file).XCUICoordinate.doubleTap()*/
    /*XCTest.(file).XCUICoordinate.doubleTap()*/
    XCUICoordinate.prototype.doubleTap = function ($info) {
    };
    /*XCTest.(file).XCUICoordinate.press(forDuration:TimeInterval)*/
    /*XCTest.(file).XCUICoordinate.press(forDuration:TimeInterval)*/
    XCUICoordinate.prototype.pressForDuration = function ($info, duration) {
    };
    /*XCTest.(file).XCUICoordinate.pressForDuration(_:TimeInterval)*/
    /*XCTest.(file).XCUICoordinate.pressForDuration(_:TimeInterval)*/
    XCUICoordinate.prototype.pressForDuration = function ($info, duration) {
    };
    /*XCTest.(file).XCUICoordinate.press(forDuration:TimeInterval,thenDragTo:XCUICoordinate)*/
    /*XCTest.(file).XCUICoordinate.press(forDuration:TimeInterval,thenDragTo:XCUICoordinate)*/
    XCUICoordinate.prototype.pressForDurationThenDragTo = function ($info, duration, otherCoordinate) {
    };
    /*XCTest.(file).XCUICoordinate.pressForDuration(_:TimeInterval,thenDragToCoordinate:XCUICoordinate)*/
    /*XCTest.(file).XCUICoordinate.pressForDuration(_:TimeInterval,thenDragToCoordinate:XCUICoordinate)*/
    XCUICoordinate.prototype.pressForDurationThenDragToCoordinate = function ($info, duration, otherCoordinate) {
    };
    XCUICoordinate.$infoAddress = '0x1184e5a88';
    return XCUICoordinate;
}(NSObject));
if (typeof NSCopying$implementation != 'undefined')
    _mixin(XCUICoordinate, NSCopying$implementation, false);
var XCUIElementAttributeName = /** @class */ (function () {
    function XCUIElementAttributeName() {
    }
    /*XCTest.(file).XCUIElementAttributeName.init(rawValue:String)*/
    /*XCTest.(file).XCUIElementAttributeName.init(rawValue:String)*/
    XCUIElementAttributeName.prototype.initRawValueString = function ($info, rawValue) {
        return rawValue;
    };
    /*XCTest.(file).XCUIElementAttributeName.rawValue*/ /*
    rawValue$get() {
    return this.rawValue
    }
    get rawValue() { return this.rawValue$get() }*/ ;
    XCUIElementAttributeName.$struct = true;
    XCUIElementAttributeName.$infoAddress = '0x1184e6068';
    return XCUIElementAttributeName;
}());
var XCUIElementAttributes$implementation = /** @class */ (function () {
    function XCUIElementAttributes$implementation() {
    }
    return XCUIElementAttributes$implementation;
}());
var XCUIElementSnapshot$implementation = /** @class */ (function () {
    function XCUIElementSnapshot$implementation() {
    }
    return XCUIElementSnapshot$implementation;
}());
if (typeof XCUIElementAttributes$implementation != 'undefined')
    _mixin(XCUIElementSnapshot$implementation, XCUIElementAttributes$implementation, false);
var XCUIElementSnapshotProviding$implementation = /** @class */ (function () {
    function XCUIElementSnapshotProviding$implementation() {
    }
    return XCUIElementSnapshotProviding$implementation;
}());
if (typeof NSObjectProtocol$implementation != 'undefined')
    _mixin(XCUIElementSnapshotProviding$implementation, NSObjectProtocol$implementation, false);
var XCUIElementTypeQueryProvider$implementation = /** @class */ (function () {
    function XCUIElementTypeQueryProvider$implementation() {
    }
    return XCUIElementTypeQueryProvider$implementation;
}());
var XCUIKeyboardKey = /** @class */ (function () {
    function XCUIKeyboardKey() {
    }
    /*XCTest.(file).XCUIKeyboardKey.init(_:String)*/
    /*XCTest.(file).XCUIKeyboardKey.init(_:String)*/
    XCUIKeyboardKey.prototype.initString = function ($info, rawValue) {
        return rawValue;
    };
    /*XCTest.(file).XCUIKeyboardKey.init(rawValue:String)*/
    /*XCTest.(file).XCUIKeyboardKey.init(rawValue:String)*/
    XCUIKeyboardKey.prototype.initRawValueString = function ($info, rawValue) {
        return rawValue;
    };
    /*XCTest.(file).XCUIKeyboardKey.rawValue*/ /*
    rawValue$get() {
    return this.rawValue
    }
    get rawValue() { return this.rawValue$get() }*/ ;
    XCUIKeyboardKey.$struct = true;
    XCUIKeyboardKey.$infoAddress = '0x118506e28';
    return XCUIKeyboardKey;
}());
var XCUIRemoteButton = /** @class */ (function () {
    function XCUIRemoteButton() {
    }
    /*XCTest.(file).XCUIRemoteButton.init(rawValue:UInt)*/
    /*XCTest.(file).XCUIRemoteButton.init(rawValue:UInt)*/
    XCUIRemoteButton.prototype.initRawValueUInt = function ($info, rawValue) {
        return rawValue;
    };
    /*XCTest.(file).XCUIRemoteButton.rawValue*/ /*
    rawValue$get() {
    return this.rawValue
    }
    get rawValue() { return this.rawValue$get() }*/ ;
    Object.defineProperty(XCUIRemoteButton, "up", {
        get: function () { return Object.assign(new XCUIRemoteButton(), __assign({ rawValue: 0 }, Array.from(arguments).slice(1))); },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(XCUIRemoteButton, "down", {
        get: function () { return Object.assign(new XCUIRemoteButton(), __assign({ rawValue: 1 }, Array.from(arguments).slice(1))); },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(XCUIRemoteButton, "left", {
        get: function () { return Object.assign(new XCUIRemoteButton(), __assign({ rawValue: 2 }, Array.from(arguments).slice(1))); },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(XCUIRemoteButton, "right", {
        get: function () { return Object.assign(new XCUIRemoteButton(), __assign({ rawValue: 3 }, Array.from(arguments).slice(1))); },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(XCUIRemoteButton, "_select", {
        get: function () { return Object.assign(new XCUIRemoteButton(), __assign({ rawValue: 4 }, Array.from(arguments).slice(1))); },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(XCUIRemoteButton, "menu", {
        get: function () { return Object.assign(new XCUIRemoteButton(), __assign({ rawValue: 5 }, Array.from(arguments).slice(1))); },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(XCUIRemoteButton, "playPause", {
        get: function () { return Object.assign(new XCUIRemoteButton(), __assign({ rawValue: 6 }, Array.from(arguments).slice(1))); },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(XCUIRemoteButton, "home", {
        get: function () { return Object.assign(new XCUIRemoteButton(), __assign({ rawValue: 7 }, Array.from(arguments).slice(1))); },
        enumerable: true,
        configurable: true
    });
    XCUIRemoteButton.$infoAddress = '0x11850de30';
    return XCUIRemoteButton;
}());
var XCUIScreenshot = /** @class */ (function (_super) {
    __extends(XCUIScreenshot, _super);
    function XCUIScreenshot() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    /*XCTest.(file).XCUIScreenshot.init()*/
    /*ObjectiveC.(file).NSObject.init()*/
    XCUIScreenshot.prototype.init = function ($info) {
    };
    XCUIScreenshot.$infoAddress = '0x118512050';
    return XCUIScreenshot;
}(NSObject));
var XCUIScreenshotProviding$implementation = /** @class */ (function () {
    function XCUIScreenshotProviding$implementation() {
    }
    return XCUIScreenshotProviding$implementation;
}());
if (typeof NSObjectProtocol$implementation != 'undefined')
    _mixin(XCUIScreenshotProviding$implementation, NSObjectProtocol$implementation, false);
var _XCTAssertionType = /** @class */ (function () {
    function _XCTAssertionType() {
    }
    /*XCTest.(file)._XCTAssertionType.init(rawValue:UInt)*/
    /*XCTest.(file)._XCTAssertionType.init(rawValue:UInt)*/
    _XCTAssertionType.prototype.initRawValueUInt = function ($info, rawValue) {
        return rawValue;
    };
    /*XCTest.(file)._XCTAssertionType.rawValue*/ /*
    rawValue$get() {
    return this.rawValue
    }
    get rawValue() { return this.rawValue$get() }*/ ;
    Object.defineProperty(_XCTAssertionType, "fail", {
        get: function () { return Object.assign(new _XCTAssertionType(), __assign({ rawValue: 0 }, Array.from(arguments).slice(1))); },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(_XCTAssertionType, "nil", {
        get: function () { return Object.assign(new _XCTAssertionType(), __assign({ rawValue: 1 }, Array.from(arguments).slice(1))); },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(_XCTAssertionType, "notNil", {
        get: function () { return Object.assign(new _XCTAssertionType(), __assign({ rawValue: 2 }, Array.from(arguments).slice(1))); },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(_XCTAssertionType, "equalObjects", {
        get: function () { return Object.assign(new _XCTAssertionType(), __assign({ rawValue: 3 }, Array.from(arguments).slice(1))); },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(_XCTAssertionType, "notEqualObjects", {
        get: function () { return Object.assign(new _XCTAssertionType(), __assign({ rawValue: 4 }, Array.from(arguments).slice(1))); },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(_XCTAssertionType, "equal", {
        get: function () { return Object.assign(new _XCTAssertionType(), __assign({ rawValue: 5 }, Array.from(arguments).slice(1))); },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(_XCTAssertionType, "notEqual", {
        get: function () { return Object.assign(new _XCTAssertionType(), __assign({ rawValue: 6 }, Array.from(arguments).slice(1))); },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(_XCTAssertionType, "equalWithAccuracy", {
        get: function () { return Object.assign(new _XCTAssertionType(), __assign({ rawValue: 7 }, Array.from(arguments).slice(1))); },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(_XCTAssertionType, "notEqualWithAccuracy", {
        get: function () { return Object.assign(new _XCTAssertionType(), __assign({ rawValue: 8 }, Array.from(arguments).slice(1))); },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(_XCTAssertionType, "greaterThan", {
        get: function () { return Object.assign(new _XCTAssertionType(), __assign({ rawValue: 9 }, Array.from(arguments).slice(1))); },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(_XCTAssertionType, "greaterThanOrEqual", {
        get: function () { return Object.assign(new _XCTAssertionType(), __assign({ rawValue: 10 }, Array.from(arguments).slice(1))); },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(_XCTAssertionType, "lessThan", {
        get: function () { return Object.assign(new _XCTAssertionType(), __assign({ rawValue: 11 }, Array.from(arguments).slice(1))); },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(_XCTAssertionType, "lessThanOrEqual", {
        get: function () { return Object.assign(new _XCTAssertionType(), __assign({ rawValue: 12 }, Array.from(arguments).slice(1))); },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(_XCTAssertionType, "_true", {
        get: function () { return Object.assign(new _XCTAssertionType(), __assign({ rawValue: 13 }, Array.from(arguments).slice(1))); },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(_XCTAssertionType, "_false", {
        get: function () { return Object.assign(new _XCTAssertionType(), __assign({ rawValue: 14 }, Array.from(arguments).slice(1))); },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(_XCTAssertionType, "_throws", {
        get: function () { return Object.assign(new _XCTAssertionType(), __assign({ rawValue: 15 }, Array.from(arguments).slice(1))); },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(_XCTAssertionType, "throwsSpecific", {
        get: function () { return Object.assign(new _XCTAssertionType(), __assign({ rawValue: 16 }, Array.from(arguments).slice(1))); },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(_XCTAssertionType, "throwsSpecificNamed", {
        get: function () { return Object.assign(new _XCTAssertionType(), __assign({ rawValue: 17 }, Array.from(arguments).slice(1))); },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(_XCTAssertionType, "noThrow", {
        get: function () { return Object.assign(new _XCTAssertionType(), __assign({ rawValue: 18 }, Array.from(arguments).slice(1))); },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(_XCTAssertionType, "noThrowSpecific", {
        get: function () { return Object.assign(new _XCTAssertionType(), __assign({ rawValue: 19 }, Array.from(arguments).slice(1))); },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(_XCTAssertionType, "noThrowSpecificNamed", {
        get: function () { return Object.assign(new _XCTAssertionType(), __assign({ rawValue: 20 }, Array.from(arguments).slice(1))); },
        enumerable: true,
        configurable: true
    });
    _XCTAssertionType.$infoAddress = '0x118513fe8';
    return _XCTAssertionType;
}());
var _XCTestCaseInterruptionException = /** @class */ (function (_super) {
    __extends(_XCTestCaseInterruptionException, _super);
    function _XCTestCaseInterruptionException() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    /*XCTest.(file)._XCTestCaseInterruptionException.init(name:NSExceptionName,reason:String?,userInfo:[AnyHashable : Any]?)*/
    /*Foundation.(file).NSException.init(name:NSExceptionName,reason:String?,userInfo:[AnyHashable : Any]?)*/
    _XCTestCaseInterruptionException.prototype.initNameNSExceptionNameReasonOptionalUserInfoOptional = function ($info, aName, aReason, aUserInfo) {
    };
    /*XCTest.(file)._XCTestCaseInterruptionException.init()*/
    /*ObjectiveC.(file).NSObject.init()*/
    _XCTestCaseInterruptionException.prototype.init = function ($info) {
    };
    /*XCTest.(file)._XCTestCaseInterruptionException.init(coder:NSCoder)*/
    /*Foundation.(file).NSException.init(coder:NSCoder)*/
    _XCTestCaseInterruptionException.prototype.initCoderNSCoder = function ($info, aDecoder) {
        return aDecoder;
    };
    _XCTestCaseInterruptionException.$infoAddress = '0x118542430';
    return _XCTestCaseInterruptionException;
}(NSException));
var _XCTThrowableBlockResult = /** @class */ (function () {
    function _XCTThrowableBlockResult() {
    }
    Object.defineProperty(_XCTThrowableBlockResult, "success", {
        get: function () { return Object.assign(new _XCTThrowableBlockResult(), __assign({ rawValue: "success" }, Array.from(arguments).slice(1))); },
        enumerable: true,
        configurable: true
    });
    _XCTThrowableBlockResult.failedWithError = function () { return Object.assign(new _XCTThrowableBlockResult(), __assign({ rawValue: "failedWithError" }, Array.from(arguments).slice(1))); };
    _XCTThrowableBlockResult.failedWithException = function () { return Object.assign(new _XCTThrowableBlockResult(), __assign({ rawValue: "failedWithException" }, Array.from(arguments).slice(1))); };
    Object.defineProperty(_XCTThrowableBlockResult, "failedWithUnknownException", {
        get: function () { return Object.assign(new _XCTThrowableBlockResult(), __assign({ rawValue: "failedWithUnknownException" }, Array.from(arguments).slice(1))); },
        enumerable: true,
        configurable: true
    });
    _XCTThrowableBlockResult.$infoAddress = '0x118546378';
    return _XCTThrowableBlockResult;
}());
var XCTDarwinNotificationExpectation = /** @class */ (function (_super) {
    __extends(XCTDarwinNotificationExpectation, _super);
    function XCTDarwinNotificationExpectation() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    /*XCTest.(file).XCTDarwinNotificationExpectation.init()*/
    /*ObjectiveC.(file).NSObject.init()*/
    XCTDarwinNotificationExpectation.prototype.init = function ($info) {
    };
    /*XCTest.(file).XCTDarwinNotificationExpectation.init(description:String)*/
    /*XCTest.(file).XCTestExpectation.init(description:String)*/
    XCTDarwinNotificationExpectation.prototype.initDescriptionString = function ($info, expectationDescription) {
        return expectationDescription;
    };
    /*XCTest.(file).XCTDarwinNotificationExpectation.init(notificationName:String)*/
    /*XCTest.(file).XCTDarwinNotificationExpectation.init(notificationName:String)*/
    XCTDarwinNotificationExpectation.prototype.initNotificationNameString = function ($info, notificationName) {
        return notificationName;
    };
    XCTDarwinNotificationExpectation.$infoAddress = '0x1184ad778';
    return XCTDarwinNotificationExpectation;
}(XCTestExpectation));
var XCTKVOExpectation = /** @class */ (function (_super) {
    __extends(XCTKVOExpectation, _super);
    function XCTKVOExpectation() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    /*XCTest.(file).XCTKVOExpectation.init()*/
    /*ObjectiveC.(file).NSObject.init()*/
    XCTKVOExpectation.prototype.init = function ($info) {
    };
    /*XCTest.(file).XCTKVOExpectation.init(description:String)*/
    /*XCTest.(file).XCTestExpectation.init(description:String)*/
    XCTKVOExpectation.prototype.initDescriptionString = function ($info, expectationDescription) {
        return expectationDescription;
    };
    /*XCTest.(file).XCTKVOExpectation.init(keyPath:String,object:Any,expectedValue:Any?,options:NSKeyValueObservingOptions)*/
    /*XCTest.(file).XCTKVOExpectation.init(keyPath:String,object:Any,expectedValue:Any?,options:NSKeyValueObservingOptions)*/
    XCTKVOExpectation.prototype.initKeyPathStringObjectprotocol_composition_typeExpectedValueOptionalOptionsNSKeyValueObservingOptions = function ($info, keyPath, object, expectedValue, options) {
    };
    /*XCTest.(file).XCTKVOExpectation.init(keyPath:String,object:Any,expectedValue:Any?)*/
    /*XCTest.(file).XCTKVOExpectation.init(keyPath:String,object:Any,expectedValue:Any?)*/
    XCTKVOExpectation.prototype.initKeyPathStringObjectprotocol_composition_typeExpectedValueOptional = function ($info, keyPath, object, expectedValue) {
    };
    /*XCTest.(file).XCTKVOExpectation.init(keyPath:String,object:Any)*/
    /*XCTest.(file).XCTKVOExpectation.init(keyPath:String,object:Any)*/
    XCTKVOExpectation.prototype.initKeyPathStringObjectprotocol_composition_type = function ($info, keyPath, object) {
    };
    XCTKVOExpectation.$infoAddress = '0x1184a8af0';
    return XCTKVOExpectation;
}(XCTestExpectation));
var XCTNSNotificationExpectation = /** @class */ (function (_super) {
    __extends(XCTNSNotificationExpectation, _super);
    function XCTNSNotificationExpectation() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    /*XCTest.(file).XCTNSNotificationExpectation.init()*/
    /*ObjectiveC.(file).NSObject.init()*/
    XCTNSNotificationExpectation.prototype.init = function ($info) {
    };
    /*XCTest.(file).XCTNSNotificationExpectation.init(description:String)*/
    /*XCTest.(file).XCTestExpectation.init(description:String)*/
    XCTNSNotificationExpectation.prototype.initDescriptionString = function ($info, expectationDescription) {
        return expectationDescription;
    };
    /*XCTest.(file).XCTNSNotificationExpectation.init(name:NSNotification.Name,object:Any?,notificationCenter:NotificationCenter)*/
    /*XCTest.(file).XCTNSNotificationExpectation.init(name:NSNotification.Name,object:Any?,notificationCenter:NotificationCenter)*/
    XCTNSNotificationExpectation.prototype.initNameNSNotificationNameObjectOptionalNotificationCenterNotificationCenter = function ($info, notificationName, object, notificationCenter) {
    };
    /*XCTest.(file).XCTNSNotificationExpectation.init(name:NSNotification.Name,object:Any)*/
    /*XCTest.(file).XCTNSNotificationExpectation.init(name:NSNotification.Name,object:Any)*/
    XCTNSNotificationExpectation.prototype.initNameNSNotificationNameObjectprotocol_composition_type = function ($info, notificationName, object) {
    };
    /*XCTest.(file).XCTNSNotificationExpectation.init(name:NSNotification.Name)*/
    /*XCTest.(file).XCTNSNotificationExpectation.init(name:NSNotification.Name)*/
    XCTNSNotificationExpectation.prototype.initNameNSNotificationName = function ($info, notificationName) {
        return notificationName;
    };
    XCTNSNotificationExpectation.$infoAddress = '0x1184a9850';
    return XCTNSNotificationExpectation;
}(XCTestExpectation));
var XCTNSPredicateExpectation = /** @class */ (function (_super) {
    __extends(XCTNSPredicateExpectation, _super);
    function XCTNSPredicateExpectation() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    /*XCTest.(file).XCTNSPredicateExpectation.init()*/
    /*ObjectiveC.(file).NSObject.init()*/
    XCTNSPredicateExpectation.prototype.init = function ($info) {
    };
    /*XCTest.(file).XCTNSPredicateExpectation.init(description:String)*/
    /*XCTest.(file).XCTestExpectation.init(description:String)*/
    XCTNSPredicateExpectation.prototype.initDescriptionString = function ($info, expectationDescription) {
        return expectationDescription;
    };
    /*XCTest.(file).XCTNSPredicateExpectation.init(predicate:NSPredicate,object:Any?)*/
    /*XCTest.(file).XCTNSPredicateExpectation.init(predicate:NSPredicate,object:Any?)*/
    XCTNSPredicateExpectation.prototype.initPredicateNSPredicateObjectOptional = function ($info, predicate, object) {
    };
    XCTNSPredicateExpectation.$infoAddress = '0x1184aa0e0';
    return XCTNSPredicateExpectation;
}(XCTestExpectation));
var XCTestCaseRun = /** @class */ (function (_super) {
    __extends(XCTestCaseRun, _super);
    function XCTestCaseRun() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    /*XCTest.(file).XCTestCaseRun.recordFailure(inTest:XCTestCase,withDescription:String,inFile:String,atLine:Int,expected:Bool)*/
    /*XCTest.(file).XCTestCaseRun.recordFailure(inTest:XCTestCase,withDescription:String,inFile:String,atLine:Int,expected:Bool)*/
    XCTestCaseRun.prototype.recordFailureInTestWithDescriptionInFileAtLineExpected = function ($info, testCase, description, filePath, lineNumber, expected) {
    };
    /*XCTest.(file).XCTestCaseRun.recordFailureInTest(_:XCTestCase,withDescription:String,inFile:String,atLine:Int,expected:Bool)*/
    /*XCTest.(file).XCTestCaseRun.recordFailureInTest(_:XCTestCase,withDescription:String,inFile:String,atLine:Int,expected:Bool)*/
    XCTestCaseRun.prototype.recordFailureInTestWithDescriptionInFileAtLineExpected = function ($info, testCase, description, filePath, lineNumber, expected) {
    };
    /*XCTest.(file).XCTestCaseRun.init()*/
    /*ObjectiveC.(file).NSObject.init()*/
    XCTestCaseRun.prototype.init = function ($info) {
    };
    /*XCTest.(file).XCTestCaseRun.init(test:XCTest)*/
    /*XCTest.(file).XCTestCaseRun.init(test:XCTest)*/
    XCTestCaseRun.prototype.initTestXCTest = function ($info, test) {
        return test;
    };
    /*XCTest.(file).XCTestCaseRun.init(test:XCTest)*/
    /*XCTest.(file).XCTestRun.init(test:XCTest)*/
    XCTestCaseRun.prototype.initTestXCTest = function ($info, test) {
        return test;
    };
    XCTestCaseRun.$infoAddress = '0x1184dbae8';
    return XCTestCaseRun;
}(XCTestRun));
var XCTestLog = /** @class */ (function (_super) {
    __extends(XCTestLog, _super);
    function XCTestLog() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    /*XCTest.(file).XCTestLog.testLog(withFormat:String?,arguments:CVaListPointer)*/
    /*XCTest.(file).XCTestLog.testLog(withFormat:String?,arguments:CVaListPointer)*/
    XCTestLog.prototype.testLogWithFormatArguments = function ($info, format, arguments) {
    };
    /*XCTest.(file).XCTestLog.testLogWithFormat(_:String?,arguments:CVaListPointer)*/
    /*XCTest.(file).XCTestLog.testLogWithFormat(_:String?,arguments:CVaListPointer)*/
    XCTestLog.prototype.testLogWithFormatArguments = function ($info, format, arguments) {
    };
    /*XCTest.(file).XCTestLog.init()*/
    /*ObjectiveC.(file).NSObject.init()*/
    XCTestLog.prototype.init = function ($info) {
    };
    XCTestLog.$infoAddress = '0x1184df160';
    return XCTestLog;
}(XCTestObserver));
var XCUIElement = /** @class */ (function (_super) {
    __extends(XCUIElement, _super);
    function XCUIElement() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    /*XCTest.(file).XCUIElement.init()*/
    /*ObjectiveC.(file).NSObject.init()*/
    XCUIElement.prototype.init = function ($info) {
    };
    /*XCTest.(file).XCUIElement.waitForExistence(timeout:TimeInterval)*/
    /*XCTest.(file).XCUIElement.waitForExistence(timeout:TimeInterval)*/
    XCUIElement.prototype.waitForExistenceTimeout = function ($info, timeout) {
    };
    /*XCTest.(file).XCUIElement.waitForExistenceWithTimeout(_:TimeInterval)*/
    /*XCTest.(file).XCUIElement.waitForExistenceWithTimeout(_:TimeInterval)*/
    XCUIElement.prototype.waitForExistenceWithTimeout = function ($info, timeout) {
    };
    /*XCTest.(file).XCUIElement.descendants(matching:XCUIElement.ElementType)*/
    /*XCTest.(file).XCUIElement.descendants(matching:XCUIElement.ElementType)*/
    XCUIElement.prototype.descendantsMatching = function ($info, type) {
    };
    /*XCTest.(file).XCUIElement.descendantsMatchingType(_:XCUIElement.ElementType)*/
    /*XCTest.(file).XCUIElement.descendantsMatchingType(_:XCUIElement.ElementType)*/
    XCUIElement.prototype.descendantsMatchingType = function ($info, type) {
    };
    /*XCTest.(file).XCUIElement.children(matching:XCUIElement.ElementType)*/
    /*XCTest.(file).XCUIElement.children(matching:XCUIElement.ElementType)*/
    XCUIElement.prototype.childrenMatching = function ($info, type) {
    };
    /*XCTest.(file).XCUIElement.childrenMatchingType(_:XCUIElement.ElementType)*/
    /*XCTest.(file).XCUIElement.childrenMatchingType(_:XCUIElement.ElementType)*/
    XCUIElement.prototype.childrenMatchingType = function ($info, type) {
    };
    /*XCTest.(file).XCUIElement.coordinate(withNormalizedOffset:CGVector)*/
    /*XCTest.(file).XCUIElement.coordinate(withNormalizedOffset:CGVector)*/
    XCUIElement.prototype.coordinateWithNormalizedOffset = function ($info, normalizedOffset) {
    };
    /*XCTest.(file).XCUIElement.coordinateWithNormalizedOffset(_:CGVector)*/
    /*XCTest.(file).XCUIElement.coordinateWithNormalizedOffset(_:CGVector)*/
    XCUIElement.prototype.coordinateWithNormalizedOffset = function ($info, normalizedOffset) {
    };
    /*XCTest.(file).XCUIElement.screenshot()*/
    /*XCTest.(file).XCUIElement.screenshot()*/
    XCUIElement.prototype.screenshot = function ($info) {
    };
    /*XCTest.(file).XCUIElement.typeText(_:String)*/
    /*XCTest.(file).XCUIElement.typeText(_:String)*/
    XCUIElement.prototype.typeText = function ($info, _text) {
    };
    /*XCTest.(file).XCUIElement.perform(withKeyModifiers:XCUIElement.KeyModifierFlags,block:() -> Void)*/
    /*XCTest.(file).XCUIElement.perform(withKeyModifiers:XCUIElement.KeyModifierFlags,block:() -> Void)*/
    XCUIElement.performWithKeyModifiersBlock = function ($info, flags, block) {
    };
    /*XCTest.(file).XCUIElement.performWithKeyModifiers(_:XCUIElement.KeyModifierFlags,block:() -> Void)*/
    /*XCTest.(file).XCUIElement.performWithKeyModifiers(_:XCUIElement.KeyModifierFlags,block:() -> Void)*/
    XCUIElement.performWithKeyModifiersBlock = function ($info, flags, block) {
    };
    /*XCTest.(file).XCUIElement.typeKey(_:String,modifierFlags:XCUIElement.KeyModifierFlags)*/
    /*XCTest.(file).XCUIElement.typeKey(_:String,modifierFlags:XCUIElement.KeyModifierFlags)*/
    XCUIElement.prototype.typeKeyModifierFlags = function ($info, key, flags) {
    };
    /*XCTest.(file).XCUIElement.hover()*/
    /*XCTest.(file).XCUIElement.hover()*/
    XCUIElement.prototype.hover = function ($info) {
    };
    /*XCTest.(file).XCUIElement.click()*/
    /*XCTest.(file).XCUIElement.click()*/
    XCUIElement.prototype.click = function ($info) {
    };
    /*XCTest.(file).XCUIElement.doubleClick()*/
    /*XCTest.(file).XCUIElement.doubleClick()*/
    XCUIElement.prototype.doubleClick = function ($info) {
    };
    /*XCTest.(file).XCUIElement.rightClick()*/
    /*XCTest.(file).XCUIElement.rightClick()*/
    XCUIElement.prototype.rightClick = function ($info) {
    };
    /*XCTest.(file).XCUIElement.click(forDuration:TimeInterval,thenDragTo:XCUIElement)*/
    /*XCTest.(file).XCUIElement.click(forDuration:TimeInterval,thenDragTo:XCUIElement)*/
    XCUIElement.prototype.clickForDurationThenDragTo = function ($info, duration, otherElement) {
    };
    /*XCTest.(file).XCUIElement.clickForDuration(_:TimeInterval,thenDragToElement:XCUIElement)*/
    /*XCTest.(file).XCUIElement.clickForDuration(_:TimeInterval,thenDragToElement:XCUIElement)*/
    XCUIElement.prototype.clickForDurationThenDragToElement = function ($info, duration, otherElement) {
    };
    /*XCTest.(file).XCUIElement.scroll(byDeltaX:CGFloat,deltaY:CGFloat)*/
    /*XCTest.(file).XCUIElement.scroll(byDeltaX:CGFloat,deltaY:CGFloat)*/
    XCUIElement.prototype.scrollByDeltaXDeltaY = function ($info, deltaX, deltaY) {
    };
    /*XCTest.(file).XCUIElement.scrollByDeltaX(_:CGFloat,deltaY:CGFloat)*/
    /*XCTest.(file).XCUIElement.scrollByDeltaX(_:CGFloat,deltaY:CGFloat)*/
    XCUIElement.prototype.scrollByDeltaXDeltaY = function ($info, deltaX, deltaY) {
    };
    /*XCTest.(file).XCUIElement.tap()*/
    /*XCTest.(file).XCUIElement.tap()*/
    XCUIElement.prototype.tap = function ($info) {
    };
    /*XCTest.(file).XCUIElement.doubleTap()*/
    /*XCTest.(file).XCUIElement.doubleTap()*/
    XCUIElement.prototype.doubleTap = function ($info) {
    };
    /*XCTest.(file).XCUIElement.press(forDuration:TimeInterval)*/
    /*XCTest.(file).XCUIElement.press(forDuration:TimeInterval)*/
    XCUIElement.prototype.pressForDuration = function ($info, duration) {
    };
    /*XCTest.(file).XCUIElement.pressForDuration(_:TimeInterval)*/
    /*XCTest.(file).XCUIElement.pressForDuration(_:TimeInterval)*/
    XCUIElement.prototype.pressForDuration = function ($info, duration) {
    };
    /*XCTest.(file).XCUIElement.press(forDuration:TimeInterval,thenDragTo:XCUIElement)*/
    /*XCTest.(file).XCUIElement.press(forDuration:TimeInterval,thenDragTo:XCUIElement)*/
    XCUIElement.prototype.pressForDurationThenDragTo = function ($info, duration, otherElement) {
    };
    /*XCTest.(file).XCUIElement.pressForDuration(_:TimeInterval,thenDragToElement:XCUIElement)*/
    /*XCTest.(file).XCUIElement.pressForDuration(_:TimeInterval,thenDragToElement:XCUIElement)*/
    XCUIElement.prototype.pressForDurationThenDragToElement = function ($info, duration, otherElement) {
    };
    /*XCTest.(file).XCUIElement.adjust(toNormalizedSliderPosition:CGFloat)*/
    /*XCTest.(file).XCUIElement.adjust(toNormalizedSliderPosition:CGFloat)*/
    XCUIElement.prototype.adjustToNormalizedSliderPosition = function ($info, normalizedSliderPosition) {
    };
    /*XCTest.(file).XCUIElement.adjustToNormalizedSliderPosition(_:CGFloat)*/
    /*XCTest.(file).XCUIElement.adjustToNormalizedSliderPosition(_:CGFloat)*/
    XCUIElement.prototype.adjustToNormalizedSliderPosition = function ($info, normalizedSliderPosition) {
    };
    /*XCTest.(file).XCUIElement.snapshot()*/
    /*XCTest.(file).XCUIElement.snapshot()*/
    XCUIElement.prototype.snapshot = function ($info) {
    };
    /*XCTest.(file).XCUIElement.typeKey(_:XCUIKeyboardKey,modifierFlags:XCUIElement.KeyModifierFlags)*/
    /*XCTest.(file).XCUIElement.typeKey(_:XCUIKeyboardKey,modifierFlags:XCUIElement.KeyModifierFlags)*/
    XCUIElement.prototype.typeKeyModifierFlags = function ($info, key, modifierFlags) {
    };
    var _165, _166, _167;
    XCUIElement.$infoAddress = '0x1184e1db0';
    XCUIElement.ElementType = (_165 = /** @class */ (function () {
            function class_189() {
            }
            /*XCTest.(file).XCUIElement.ElementType.init(rawValue:UInt)*/
            /*XCTest.(file).XCUIElement.ElementType.init(rawValue:UInt)*/
            class_189.prototype.initRawValueUInt = function ($info, rawValue) {
                return rawValue;
            };
            /*XCTest.(file).XCUIElement.ElementType.rawValue*/ /*
            rawValue$get() {
            return this.rawValue
            }
            get rawValue() { return this.rawValue$get() }*/ ;
            Object.defineProperty(class_189, "any", {
                get: function () { return Object.assign(new XCUIElement.ElementType(), __assign({ rawValue: 0 }, Array.from(arguments).slice(1))); },
                enumerable: true,
                configurable: true
            });
            Object.defineProperty(class_189, "other", {
                get: function () { return Object.assign(new XCUIElement.ElementType(), __assign({ rawValue: 1 }, Array.from(arguments).slice(1))); },
                enumerable: true,
                configurable: true
            });
            Object.defineProperty(class_189, "application", {
                get: function () { return Object.assign(new XCUIElement.ElementType(), __assign({ rawValue: 2 }, Array.from(arguments).slice(1))); },
                enumerable: true,
                configurable: true
            });
            Object.defineProperty(class_189, "group", {
                get: function () { return Object.assign(new XCUIElement.ElementType(), __assign({ rawValue: 3 }, Array.from(arguments).slice(1))); },
                enumerable: true,
                configurable: true
            });
            Object.defineProperty(class_189, "_window", {
                get: function () { return Object.assign(new XCUIElement.ElementType(), __assign({ rawValue: 4 }, Array.from(arguments).slice(1))); },
                enumerable: true,
                configurable: true
            });
            Object.defineProperty(class_189, "sheet", {
                get: function () { return Object.assign(new XCUIElement.ElementType(), __assign({ rawValue: 5 }, Array.from(arguments).slice(1))); },
                enumerable: true,
                configurable: true
            });
            Object.defineProperty(class_189, "drawer", {
                get: function () { return Object.assign(new XCUIElement.ElementType(), __assign({ rawValue: 6 }, Array.from(arguments).slice(1))); },
                enumerable: true,
                configurable: true
            });
            Object.defineProperty(class_189, "_alert", {
                get: function () { return Object.assign(new XCUIElement.ElementType(), __assign({ rawValue: 7 }, Array.from(arguments).slice(1))); },
                enumerable: true,
                configurable: true
            });
            Object.defineProperty(class_189, "dialog", {
                get: function () { return Object.assign(new XCUIElement.ElementType(), __assign({ rawValue: 8 }, Array.from(arguments).slice(1))); },
                enumerable: true,
                configurable: true
            });
            Object.defineProperty(class_189, "_button", {
                get: function () { return Object.assign(new XCUIElement.ElementType(), __assign({ rawValue: 9 }, Array.from(arguments).slice(1))); },
                enumerable: true,
                configurable: true
            });
            Object.defineProperty(class_189, "radioButton", {
                get: function () { return Object.assign(new XCUIElement.ElementType(), __assign({ rawValue: 10 }, Array.from(arguments).slice(1))); },
                enumerable: true,
                configurable: true
            });
            Object.defineProperty(class_189, "radioGroup", {
                get: function () { return Object.assign(new XCUIElement.ElementType(), __assign({ rawValue: 11 }, Array.from(arguments).slice(1))); },
                enumerable: true,
                configurable: true
            });
            Object.defineProperty(class_189, "checkBox", {
                get: function () { return Object.assign(new XCUIElement.ElementType(), __assign({ rawValue: 12 }, Array.from(arguments).slice(1))); },
                enumerable: true,
                configurable: true
            });
            Object.defineProperty(class_189, "disclosureTriangle", {
                get: function () { return Object.assign(new XCUIElement.ElementType(), __assign({ rawValue: 13 }, Array.from(arguments).slice(1))); },
                enumerable: true,
                configurable: true
            });
            Object.defineProperty(class_189, "popUpButton", {
                get: function () { return Object.assign(new XCUIElement.ElementType(), __assign({ rawValue: 14 }, Array.from(arguments).slice(1))); },
                enumerable: true,
                configurable: true
            });
            Object.defineProperty(class_189, "comboBox", {
                get: function () { return Object.assign(new XCUIElement.ElementType(), __assign({ rawValue: 15 }, Array.from(arguments).slice(1))); },
                enumerable: true,
                configurable: true
            });
            Object.defineProperty(class_189, "menuButton", {
                get: function () { return Object.assign(new XCUIElement.ElementType(), __assign({ rawValue: 16 }, Array.from(arguments).slice(1))); },
                enumerable: true,
                configurable: true
            });
            Object.defineProperty(class_189, "toolbarButton", {
                get: function () { return Object.assign(new XCUIElement.ElementType(), __assign({ rawValue: 17 }, Array.from(arguments).slice(1))); },
                enumerable: true,
                configurable: true
            });
            Object.defineProperty(class_189, "popover", {
                get: function () { return Object.assign(new XCUIElement.ElementType(), __assign({ rawValue: 18 }, Array.from(arguments).slice(1))); },
                enumerable: true,
                configurable: true
            });
            Object.defineProperty(class_189, "keyboard", {
                get: function () { return Object.assign(new XCUIElement.ElementType(), __assign({ rawValue: 19 }, Array.from(arguments).slice(1))); },
                enumerable: true,
                configurable: true
            });
            Object.defineProperty(class_189, "key", {
                get: function () { return Object.assign(new XCUIElement.ElementType(), __assign({ rawValue: 20 }, Array.from(arguments).slice(1))); },
                enumerable: true,
                configurable: true
            });
            Object.defineProperty(class_189, "navigationBar", {
                get: function () { return Object.assign(new XCUIElement.ElementType(), __assign({ rawValue: 21 }, Array.from(arguments).slice(1))); },
                enumerable: true,
                configurable: true
            });
            Object.defineProperty(class_189, "tabBar", {
                get: function () { return Object.assign(new XCUIElement.ElementType(), __assign({ rawValue: 22 }, Array.from(arguments).slice(1))); },
                enumerable: true,
                configurable: true
            });
            Object.defineProperty(class_189, "tabGroup", {
                get: function () { return Object.assign(new XCUIElement.ElementType(), __assign({ rawValue: 23 }, Array.from(arguments).slice(1))); },
                enumerable: true,
                configurable: true
            });
            Object.defineProperty(class_189, "toolbar", {
                get: function () { return Object.assign(new XCUIElement.ElementType(), __assign({ rawValue: 24 }, Array.from(arguments).slice(1))); },
                enumerable: true,
                configurable: true
            });
            Object.defineProperty(class_189, "statusBar", {
                get: function () { return Object.assign(new XCUIElement.ElementType(), __assign({ rawValue: 25 }, Array.from(arguments).slice(1))); },
                enumerable: true,
                configurable: true
            });
            Object.defineProperty(class_189, "table", {
                get: function () { return Object.assign(new XCUIElement.ElementType(), __assign({ rawValue: 26 }, Array.from(arguments).slice(1))); },
                enumerable: true,
                configurable: true
            });
            Object.defineProperty(class_189, "tableRow", {
                get: function () { return Object.assign(new XCUIElement.ElementType(), __assign({ rawValue: 27 }, Array.from(arguments).slice(1))); },
                enumerable: true,
                configurable: true
            });
            Object.defineProperty(class_189, "tableColumn", {
                get: function () { return Object.assign(new XCUIElement.ElementType(), __assign({ rawValue: 28 }, Array.from(arguments).slice(1))); },
                enumerable: true,
                configurable: true
            });
            Object.defineProperty(class_189, "outline", {
                get: function () { return Object.assign(new XCUIElement.ElementType(), __assign({ rawValue: 29 }, Array.from(arguments).slice(1))); },
                enumerable: true,
                configurable: true
            });
            Object.defineProperty(class_189, "outlineRow", {
                get: function () { return Object.assign(new XCUIElement.ElementType(), __assign({ rawValue: 30 }, Array.from(arguments).slice(1))); },
                enumerable: true,
                configurable: true
            });
            Object.defineProperty(class_189, "browser", {
                get: function () { return Object.assign(new XCUIElement.ElementType(), __assign({ rawValue: 31 }, Array.from(arguments).slice(1))); },
                enumerable: true,
                configurable: true
            });
            Object.defineProperty(class_189, "collectionView", {
                get: function () { return Object.assign(new XCUIElement.ElementType(), __assign({ rawValue: 32 }, Array.from(arguments).slice(1))); },
                enumerable: true,
                configurable: true
            });
            Object.defineProperty(class_189, "slider", {
                get: function () { return Object.assign(new XCUIElement.ElementType(), __assign({ rawValue: 33 }, Array.from(arguments).slice(1))); },
                enumerable: true,
                configurable: true
            });
            Object.defineProperty(class_189, "pageIndicator", {
                get: function () { return Object.assign(new XCUIElement.ElementType(), __assign({ rawValue: 34 }, Array.from(arguments).slice(1))); },
                enumerable: true,
                configurable: true
            });
            Object.defineProperty(class_189, "progressIndicator", {
                get: function () { return Object.assign(new XCUIElement.ElementType(), __assign({ rawValue: 35 }, Array.from(arguments).slice(1))); },
                enumerable: true,
                configurable: true
            });
            Object.defineProperty(class_189, "activityIndicator", {
                get: function () { return Object.assign(new XCUIElement.ElementType(), __assign({ rawValue: 36 }, Array.from(arguments).slice(1))); },
                enumerable: true,
                configurable: true
            });
            Object.defineProperty(class_189, "segmentedControl", {
                get: function () { return Object.assign(new XCUIElement.ElementType(), __assign({ rawValue: 37 }, Array.from(arguments).slice(1))); },
                enumerable: true,
                configurable: true
            });
            Object.defineProperty(class_189, "picker", {
                get: function () { return Object.assign(new XCUIElement.ElementType(), __assign({ rawValue: 38 }, Array.from(arguments).slice(1))); },
                enumerable: true,
                configurable: true
            });
            Object.defineProperty(class_189, "pickerWheel", {
                get: function () { return Object.assign(new XCUIElement.ElementType(), __assign({ rawValue: 39 }, Array.from(arguments).slice(1))); },
                enumerable: true,
                configurable: true
            });
            Object.defineProperty(class_189, "_switch", {
                get: function () { return Object.assign(new XCUIElement.ElementType(), __assign({ rawValue: 40 }, Array.from(arguments).slice(1))); },
                enumerable: true,
                configurable: true
            });
            Object.defineProperty(class_189, "toggle", {
                get: function () { return Object.assign(new XCUIElement.ElementType(), __assign({ rawValue: 41 }, Array.from(arguments).slice(1))); },
                enumerable: true,
                configurable: true
            });
            Object.defineProperty(class_189, "_link", {
                get: function () { return Object.assign(new XCUIElement.ElementType(), __assign({ rawValue: 42 }, Array.from(arguments).slice(1))); },
                enumerable: true,
                configurable: true
            });
            Object.defineProperty(class_189, "_image", {
                get: function () { return Object.assign(new XCUIElement.ElementType(), __assign({ rawValue: 43 }, Array.from(arguments).slice(1))); },
                enumerable: true,
                configurable: true
            });
            Object.defineProperty(class_189, "icon", {
                get: function () { return Object.assign(new XCUIElement.ElementType(), __assign({ rawValue: 44 }, Array.from(arguments).slice(1))); },
                enumerable: true,
                configurable: true
            });
            Object.defineProperty(class_189, "searchField", {
                get: function () { return Object.assign(new XCUIElement.ElementType(), __assign({ rawValue: 45 }, Array.from(arguments).slice(1))); },
                enumerable: true,
                configurable: true
            });
            Object.defineProperty(class_189, "scrollView", {
                get: function () { return Object.assign(new XCUIElement.ElementType(), __assign({ rawValue: 46 }, Array.from(arguments).slice(1))); },
                enumerable: true,
                configurable: true
            });
            Object.defineProperty(class_189, "scrollBar", {
                get: function () { return Object.assign(new XCUIElement.ElementType(), __assign({ rawValue: 47 }, Array.from(arguments).slice(1))); },
                enumerable: true,
                configurable: true
            });
            Object.defineProperty(class_189, "staticText", {
                get: function () { return Object.assign(new XCUIElement.ElementType(), __assign({ rawValue: 48 }, Array.from(arguments).slice(1))); },
                enumerable: true,
                configurable: true
            });
            Object.defineProperty(class_189, "textField", {
                get: function () { return Object.assign(new XCUIElement.ElementType(), __assign({ rawValue: 49 }, Array.from(arguments).slice(1))); },
                enumerable: true,
                configurable: true
            });
            Object.defineProperty(class_189, "secureTextField", {
                get: function () { return Object.assign(new XCUIElement.ElementType(), __assign({ rawValue: 50 }, Array.from(arguments).slice(1))); },
                enumerable: true,
                configurable: true
            });
            Object.defineProperty(class_189, "datePicker", {
                get: function () { return Object.assign(new XCUIElement.ElementType(), __assign({ rawValue: 51 }, Array.from(arguments).slice(1))); },
                enumerable: true,
                configurable: true
            });
            Object.defineProperty(class_189, "textView", {
                get: function () { return Object.assign(new XCUIElement.ElementType(), __assign({ rawValue: 52 }, Array.from(arguments).slice(1))); },
                enumerable: true,
                configurable: true
            });
            Object.defineProperty(class_189, "menu", {
                get: function () { return Object.assign(new XCUIElement.ElementType(), __assign({ rawValue: 53 }, Array.from(arguments).slice(1))); },
                enumerable: true,
                configurable: true
            });
            Object.defineProperty(class_189, "menuItem", {
                get: function () { return Object.assign(new XCUIElement.ElementType(), __assign({ rawValue: 54 }, Array.from(arguments).slice(1))); },
                enumerable: true,
                configurable: true
            });
            Object.defineProperty(class_189, "menuBar", {
                get: function () { return Object.assign(new XCUIElement.ElementType(), __assign({ rawValue: 55 }, Array.from(arguments).slice(1))); },
                enumerable: true,
                configurable: true
            });
            Object.defineProperty(class_189, "menuBarItem", {
                get: function () { return Object.assign(new XCUIElement.ElementType(), __assign({ rawValue: 56 }, Array.from(arguments).slice(1))); },
                enumerable: true,
                configurable: true
            });
            Object.defineProperty(class_189, "map", {
                get: function () { return Object.assign(new XCUIElement.ElementType(), __assign({ rawValue: 57 }, Array.from(arguments).slice(1))); },
                enumerable: true,
                configurable: true
            });
            Object.defineProperty(class_189, "webView", {
                get: function () { return Object.assign(new XCUIElement.ElementType(), __assign({ rawValue: 58 }, Array.from(arguments).slice(1))); },
                enumerable: true,
                configurable: true
            });
            Object.defineProperty(class_189, "incrementArrow", {
                get: function () { return Object.assign(new XCUIElement.ElementType(), __assign({ rawValue: 59 }, Array.from(arguments).slice(1))); },
                enumerable: true,
                configurable: true
            });
            Object.defineProperty(class_189, "decrementArrow", {
                get: function () { return Object.assign(new XCUIElement.ElementType(), __assign({ rawValue: 60 }, Array.from(arguments).slice(1))); },
                enumerable: true,
                configurable: true
            });
            Object.defineProperty(class_189, "timeline", {
                get: function () { return Object.assign(new XCUIElement.ElementType(), __assign({ rawValue: 61 }, Array.from(arguments).slice(1))); },
                enumerable: true,
                configurable: true
            });
            Object.defineProperty(class_189, "ratingIndicator", {
                get: function () { return Object.assign(new XCUIElement.ElementType(), __assign({ rawValue: 62 }, Array.from(arguments).slice(1))); },
                enumerable: true,
                configurable: true
            });
            Object.defineProperty(class_189, "valueIndicator", {
                get: function () { return Object.assign(new XCUIElement.ElementType(), __assign({ rawValue: 63 }, Array.from(arguments).slice(1))); },
                enumerable: true,
                configurable: true
            });
            Object.defineProperty(class_189, "splitGroup", {
                get: function () { return Object.assign(new XCUIElement.ElementType(), __assign({ rawValue: 64 }, Array.from(arguments).slice(1))); },
                enumerable: true,
                configurable: true
            });
            Object.defineProperty(class_189, "splitter", {
                get: function () { return Object.assign(new XCUIElement.ElementType(), __assign({ rawValue: 65 }, Array.from(arguments).slice(1))); },
                enumerable: true,
                configurable: true
            });
            Object.defineProperty(class_189, "relevanceIndicator", {
                get: function () { return Object.assign(new XCUIElement.ElementType(), __assign({ rawValue: 66 }, Array.from(arguments).slice(1))); },
                enumerable: true,
                configurable: true
            });
            Object.defineProperty(class_189, "colorWell", {
                get: function () { return Object.assign(new XCUIElement.ElementType(), __assign({ rawValue: 67 }, Array.from(arguments).slice(1))); },
                enumerable: true,
                configurable: true
            });
            Object.defineProperty(class_189, "helpTag", {
                get: function () { return Object.assign(new XCUIElement.ElementType(), __assign({ rawValue: 68 }, Array.from(arguments).slice(1))); },
                enumerable: true,
                configurable: true
            });
            Object.defineProperty(class_189, "matte", {
                get: function () { return Object.assign(new XCUIElement.ElementType(), __assign({ rawValue: 69 }, Array.from(arguments).slice(1))); },
                enumerable: true,
                configurable: true
            });
            Object.defineProperty(class_189, "dockItem", {
                get: function () { return Object.assign(new XCUIElement.ElementType(), __assign({ rawValue: 70 }, Array.from(arguments).slice(1))); },
                enumerable: true,
                configurable: true
            });
            Object.defineProperty(class_189, "ruler", {
                get: function () { return Object.assign(new XCUIElement.ElementType(), __assign({ rawValue: 71 }, Array.from(arguments).slice(1))); },
                enumerable: true,
                configurable: true
            });
            Object.defineProperty(class_189, "rulerMarker", {
                get: function () { return Object.assign(new XCUIElement.ElementType(), __assign({ rawValue: 72 }, Array.from(arguments).slice(1))); },
                enumerable: true,
                configurable: true
            });
            Object.defineProperty(class_189, "grid", {
                get: function () { return Object.assign(new XCUIElement.ElementType(), __assign({ rawValue: 73 }, Array.from(arguments).slice(1))); },
                enumerable: true,
                configurable: true
            });
            Object.defineProperty(class_189, "levelIndicator", {
                get: function () { return Object.assign(new XCUIElement.ElementType(), __assign({ rawValue: 74 }, Array.from(arguments).slice(1))); },
                enumerable: true,
                configurable: true
            });
            Object.defineProperty(class_189, "cell", {
                get: function () { return Object.assign(new XCUIElement.ElementType(), __assign({ rawValue: 75 }, Array.from(arguments).slice(1))); },
                enumerable: true,
                configurable: true
            });
            Object.defineProperty(class_189, "layoutArea", {
                get: function () { return Object.assign(new XCUIElement.ElementType(), __assign({ rawValue: 76 }, Array.from(arguments).slice(1))); },
                enumerable: true,
                configurable: true
            });
            Object.defineProperty(class_189, "layoutItem", {
                get: function () { return Object.assign(new XCUIElement.ElementType(), __assign({ rawValue: 77 }, Array.from(arguments).slice(1))); },
                enumerable: true,
                configurable: true
            });
            Object.defineProperty(class_189, "handle", {
                get: function () { return Object.assign(new XCUIElement.ElementType(), __assign({ rawValue: 78 }, Array.from(arguments).slice(1))); },
                enumerable: true,
                configurable: true
            });
            Object.defineProperty(class_189, "stepper", {
                get: function () { return Object.assign(new XCUIElement.ElementType(), __assign({ rawValue: 79 }, Array.from(arguments).slice(1))); },
                enumerable: true,
                configurable: true
            });
            Object.defineProperty(class_189, "tab", {
                get: function () { return Object.assign(new XCUIElement.ElementType(), __assign({ rawValue: 80 }, Array.from(arguments).slice(1))); },
                enumerable: true,
                configurable: true
            });
            Object.defineProperty(class_189, "touchBar", {
                get: function () { return Object.assign(new XCUIElement.ElementType(), __assign({ rawValue: 81 }, Array.from(arguments).slice(1))); },
                enumerable: true,
                configurable: true
            });
            Object.defineProperty(class_189, "statusItem", {
                get: function () { return Object.assign(new XCUIElement.ElementType(), __assign({ rawValue: 82 }, Array.from(arguments).slice(1))); },
                enumerable: true,
                configurable: true
            });
            return class_189;
        }()),
        _165.$infoAddress = '0x1184e9bb0',
        _165);
    XCUIElement.SizeClass = (_166 = /** @class */ (function () {
            function class_190() {
            }
            /*XCTest.(file).XCUIElement.SizeClass.init(rawValue:Int)*/
            /*XCTest.(file).XCUIElement.SizeClass.init(rawValue:Int)*/
            class_190.prototype.initRawValueInt = function ($info, rawValue) {
                return rawValue;
            };
            /*XCTest.(file).XCUIElement.SizeClass.rawValue*/ /*
            rawValue$get() {
            return this.rawValue
            }
            get rawValue() { return this.rawValue$get() }*/ ;
            Object.defineProperty(class_190, "unspecified", {
                get: function () { return Object.assign(new XCUIElement.SizeClass(), __assign({ rawValue: 0 }, Array.from(arguments).slice(1))); },
                enumerable: true,
                configurable: true
            });
            return class_190;
        }()),
        _166.$infoAddress = '0x1185124a8',
        _166);
    XCUIElement.KeyModifierFlags = (_167 = /** @class */ (function () {
            function class_191() {
            }
            /*XCTest.(file).XCUIElement.KeyModifierFlags.init(rawValue:UInt)*/
            /*XCTest.(file).XCUIElement.KeyModifierFlags.init(rawValue:UInt)*/
            class_191.prototype.initRawValueUInt = function ($info, rawValue) {
                return rawValue;
            };
            /*XCTest.(file).XCUIElement.KeyModifierFlags.rawValue*/ /*
            readonly rawValue$get() {
            return this.rawValue
            }
            readonly get rawValue() { return this.rawValue$get() }*/ ;
            return class_191;
        }()),
        _167.$struct = true,
        _167.$infoAddress = '0x1185027a8',
        _167);
    return XCUIElement;
}(NSObject));
if (typeof XCUIElementAttributes$implementation != 'undefined')
    _mixin(XCUIElement, XCUIElementAttributes$implementation, false);
if (typeof XCUIElementTypeQueryProvider$implementation != 'undefined')
    _mixin(XCUIElement, XCUIElementTypeQueryProvider$implementation, false);
if (typeof XCUIScreenshotProviding$implementation != 'undefined')
    _mixin(XCUIElement, XCUIScreenshotProviding$implementation, false);
if (typeof XCUIElementSnapshotProviding$implementation != 'undefined')
    _mixin(XCUIElement, XCUIElementSnapshotProviding$implementation, false);
var XCUIElementQuery = /** @class */ (function (_super) {
    __extends(XCUIElementQuery, _super);
    function XCUIElementQuery() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    /*XCTest.(file).XCUIElementQuery.init()*/
    /*ObjectiveC.(file).NSObject.init()*/
    XCUIElementQuery.prototype.init = function ($info) {
    };
    /*XCTest.(file).XCUIElementQuery.element(at:Int)*/
    /*XCTest.(file).XCUIElementQuery.element(at:Int)*/
    XCUIElementQuery.prototype.elementAt = function ($info, index) {
    };
    /*XCTest.(file).XCUIElementQuery.elementAtIndex(_:Int)*/
    /*XCTest.(file).XCUIElementQuery.elementAtIndex(_:Int)*/
    XCUIElementQuery.prototype.elementAtIndex = function ($info, index) {
    };
    /*XCTest.(file).XCUIElementQuery.element(boundBy:Int)*/
    /*XCTest.(file).XCUIElementQuery.element(boundBy:Int)*/
    XCUIElementQuery.prototype.elementBoundBy = function ($info, index) {
    };
    /*XCTest.(file).XCUIElementQuery.elementBoundByIndex(_:Int)*/
    /*XCTest.(file).XCUIElementQuery.elementBoundByIndex(_:Int)*/
    XCUIElementQuery.prototype.elementBoundByIndex = function ($info, index) {
    };
    /*XCTest.(file).XCUIElementQuery.element(matching:NSPredicate)*/
    /*XCTest.(file).XCUIElementQuery.element(matching:NSPredicate)*/
    XCUIElementQuery.prototype.elementMatching = function ($info, predicate) {
    };
    /*XCTest.(file).XCUIElementQuery.elementMatchingPredicate(_:NSPredicate)*/
    /*XCTest.(file).XCUIElementQuery.elementMatchingPredicate(_:NSPredicate)*/
    XCUIElementQuery.prototype.elementMatchingPredicate = function ($info, predicate) {
    };
    /*XCTest.(file).XCUIElementQuery.element(matching:XCUIElement.ElementType,identifier:String?)*/
    /*XCTest.(file).XCUIElementQuery.element(matching:XCUIElement.ElementType,identifier:String?)*/
    XCUIElementQuery.prototype.elementMatchingIdentifier = function ($info, elementType, identifier) {
    };
    /*XCTest.(file).XCUIElementQuery.elementMatchingType(_:XCUIElement.ElementType,identifier:String?)*/
    /*XCTest.(file).XCUIElementQuery.elementMatchingType(_:XCUIElement.ElementType,identifier:String?)*/
    XCUIElementQuery.prototype.elementMatchingTypeIdentifier = function ($info, elementType, identifier) {
    };
    /*XCTest.(file).XCUIElementQuery.subscript(_:String)*/
    /*XCTest.(file).XCUIElementQuery.subscript(_:String)*/
    XCUIElementQuery.prototype.subscript$get = function ($info, key) {
        return this[key];
    };
    /*XCTest.(file).XCUIElementQuery.objectForKeyedSubscript(_:String)*/
    /*XCTest.(file).XCUIElementQuery.objectForKeyedSubscript(_:String)*/
    XCUIElementQuery.prototype.objectForKeyedSubscript = function ($info, key) {
    };
    /*XCTest.(file).XCUIElementQuery.descendants(matching:XCUIElement.ElementType)*/
    /*XCTest.(file).XCUIElementQuery.descendants(matching:XCUIElement.ElementType)*/
    XCUIElementQuery.prototype.descendantsMatching = function ($info, type) {
    };
    /*XCTest.(file).XCUIElementQuery.descendantsMatchingType(_:XCUIElement.ElementType)*/
    /*XCTest.(file).XCUIElementQuery.descendantsMatchingType(_:XCUIElement.ElementType)*/
    XCUIElementQuery.prototype.descendantsMatchingType = function ($info, type) {
    };
    /*XCTest.(file).XCUIElementQuery.children(matching:XCUIElement.ElementType)*/
    /*XCTest.(file).XCUIElementQuery.children(matching:XCUIElement.ElementType)*/
    XCUIElementQuery.prototype.childrenMatching = function ($info, type) {
    };
    /*XCTest.(file).XCUIElementQuery.childrenMatchingType(_:XCUIElement.ElementType)*/
    /*XCTest.(file).XCUIElementQuery.childrenMatchingType(_:XCUIElement.ElementType)*/
    XCUIElementQuery.prototype.childrenMatchingType = function ($info, type) {
    };
    /*XCTest.(file).XCUIElementQuery.matching(_:NSPredicate)*/
    /*XCTest.(file).XCUIElementQuery.matching(_:NSPredicate)*/
    XCUIElementQuery.prototype.matching = function ($info, predicate) {
    };
    /*XCTest.(file).XCUIElementQuery.matchingPredicate(_:NSPredicate)*/
    /*XCTest.(file).XCUIElementQuery.matchingPredicate(_:NSPredicate)*/
    XCUIElementQuery.prototype.matchingPredicate = function ($info, predicate) {
    };
    /*XCTest.(file).XCUIElementQuery.matching(_:XCUIElement.ElementType,identifier:String?)*/
    /*XCTest.(file).XCUIElementQuery.matching(_:XCUIElement.ElementType,identifier:String?)*/
    XCUIElementQuery.prototype.matchingIdentifier = function ($info, elementType, identifier) {
    };
    /*XCTest.(file).XCUIElementQuery.matchingType(_:XCUIElement.ElementType,identifier:String?)*/
    /*XCTest.(file).XCUIElementQuery.matchingType(_:XCUIElement.ElementType,identifier:String?)*/
    XCUIElementQuery.prototype.matchingTypeIdentifier = function ($info, elementType, identifier) {
    };
    /*XCTest.(file).XCUIElementQuery.matching(identifier:String)*/
    /*XCTest.(file).XCUIElementQuery.matching(identifier:String)*/
    XCUIElementQuery.prototype.matchingIdentifier = function ($info, identifier) {
    };
    /*XCTest.(file).XCUIElementQuery.matchingIdentifier(_:String)*/
    /*XCTest.(file).XCUIElementQuery.matchingIdentifier(_:String)*/
    XCUIElementQuery.prototype.matchingIdentifier = function ($info, identifier) {
    };
    /*XCTest.(file).XCUIElementQuery.containing(_:NSPredicate)*/
    /*XCTest.(file).XCUIElementQuery.containing(_:NSPredicate)*/
    XCUIElementQuery.prototype.containing = function ($info, predicate) {
    };
    /*XCTest.(file).XCUIElementQuery.containingPredicate(_:NSPredicate)*/
    /*XCTest.(file).XCUIElementQuery.containingPredicate(_:NSPredicate)*/
    XCUIElementQuery.prototype.containingPredicate = function ($info, predicate) {
    };
    /*XCTest.(file).XCUIElementQuery.containing(_:XCUIElement.ElementType,identifier:String?)*/
    /*XCTest.(file).XCUIElementQuery.containing(_:XCUIElement.ElementType,identifier:String?)*/
    XCUIElementQuery.prototype.containingIdentifier = function ($info, elementType, identifier) {
    };
    /*XCTest.(file).XCUIElementQuery.containingType(_:XCUIElement.ElementType,identifier:String?)*/
    /*XCTest.(file).XCUIElementQuery.containingType(_:XCUIElement.ElementType,identifier:String?)*/
    XCUIElementQuery.prototype.containingTypeIdentifier = function ($info, elementType, identifier) {
    };
    XCUIElementQuery.$infoAddress = '0x1184e8b10';
    return XCUIElementQuery;
}(NSObject));
if (typeof XCUIElementTypeQueryProvider$implementation != 'undefined')
    _mixin(XCUIElementQuery, XCUIElementTypeQueryProvider$implementation, false);
var XCUIScreen = /** @class */ (function (_super) {
    __extends(XCUIScreen, _super);
    function XCUIScreen() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    /*XCTest.(file).XCUIScreen.init()*/
    /*ObjectiveC.(file).NSObject.init()*/
    XCUIScreen.prototype.init = function ($info) {
    };
    /*XCTest.(file).XCUIScreen.screenshot()*/
    /*XCTest.(file).XCUIScreen.screenshot()*/
    XCUIScreen.prototype.screenshot = function ($info) {
    };
    XCUIScreen.$infoAddress = '0x1185114d0';
    return XCUIScreen;
}(NSObject));
if (typeof XCUIScreenshotProviding$implementation != 'undefined')
    _mixin(XCUIScreen, XCUIScreenshotProviding$implementation, false);
var XCUIApplication = /** @class */ (function (_super) {
    __extends(XCUIApplication, _super);
    function XCUIApplication() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    /*XCTest.(file).XCUIApplication.init()*/
    /*ObjectiveC.(file).NSObject.init()*/
    XCUIApplication.prototype.init = function ($info) {
    };
    /*XCTest.(file).XCUIApplication.init(bundleIdentifier:String)*/
    /*XCTest.(file).XCUIApplication.init(bundleIdentifier:String)*/
    XCUIApplication.prototype.initBundleIdentifierString = function ($info, bundleIdentifier) {
        return bundleIdentifier;
    };
    /*XCTest.(file).XCUIApplication.init(url:URL)*/
    /*XCTest.(file).XCUIApplication.init(url:URL)*/
    XCUIApplication.prototype.initUrlURL = function ($info, url) {
        return url;
    };
    /*XCTest.(file).XCUIApplication.init(URL:URL)*/
    /*XCTest.(file).XCUIApplication.init(URL:URL)*/
    XCUIApplication.prototype.initURLURL = function ($info, url) {
        return url;
    };
    /*XCTest.(file).XCUIApplication.launch()*/
    /*XCTest.(file).XCUIApplication.launch()*/
    XCUIApplication.prototype.launch = function ($info) {
    };
    /*XCTest.(file).XCUIApplication.activate()*/
    /*XCTest.(file).XCUIApplication.activate()*/
    XCUIApplication.prototype.activate = function ($info) {
    };
    /*XCTest.(file).XCUIApplication.terminate()*/
    /*XCTest.(file).XCUIApplication.terminate()*/
    XCUIApplication.prototype.terminate = function ($info) {
    };
    /*XCTest.(file).XCUIApplication.wait(for:XCUIApplication.State,timeout:TimeInterval)*/
    /*XCTest.(file).XCUIApplication.wait(for:XCUIApplication.State,timeout:TimeInterval)*/
    XCUIApplication.prototype.waitForTimeout = function ($info, state, timeout) {
    };
    /*XCTest.(file).XCUIApplication.waitForState(_:XCUIApplication.State,timeout:TimeInterval)*/
    /*XCTest.(file).XCUIApplication.waitForState(_:XCUIApplication.State,timeout:TimeInterval)*/
    XCUIApplication.prototype.waitForStateTimeout = function ($info, state, timeout) {
    };
    var _168;
    XCUIApplication.$infoAddress = '0x1184e1c20';
    XCUIApplication.State = (_168 = /** @class */ (function () {
            function class_192() {
            }
            /*XCTest.(file).XCUIApplication.State.init(rawValue:UInt)*/
            /*XCTest.(file).XCUIApplication.State.init(rawValue:UInt)*/
            class_192.prototype.initRawValueUInt = function ($info, rawValue) {
                return rawValue;
            };
            /*XCTest.(file).XCUIApplication.State.rawValue*/ /*
            rawValue$get() {
            return this.rawValue
            }
            get rawValue() { return this.rawValue$get() }*/ ;
            Object.defineProperty(class_192, "unknown", {
                get: function () { return Object.assign(new XCUIApplication.State(), __assign({ rawValue: 0 }, Array.from(arguments).slice(1))); },
                enumerable: true,
                configurable: true
            });
            Object.defineProperty(class_192, "notRunning", {
                get: function () { return Object.assign(new XCUIApplication.State(), __assign({ rawValue: 1 }, Array.from(arguments).slice(1))); },
                enumerable: true,
                configurable: true
            });
            Object.defineProperty(class_192, "runningBackground", {
                get: function () { return Object.assign(new XCUIApplication.State(), __assign({ rawValue: 3 }, Array.from(arguments).slice(1))); },
                enumerable: true,
                configurable: true
            });
            Object.defineProperty(class_192, "runningForeground", {
                get: function () { return Object.assign(new XCUIApplication.State(), __assign({ rawValue: 4 }, Array.from(arguments).slice(1))); },
                enumerable: true,
                configurable: true
            });
            return class_192;
        }()),
        _168.$infoAddress = '0x1184e32d0',
        _168);
    return XCUIApplication;
}(XCUIElement));
var SwiftIterator = /** @class */ (function () {
    function SwiftIterator(_currentToNext) {
        this._current = 0;
        this._currentToNext = _currentToNext;
    }
    SwiftIterator.prototype.next = function () { return this._currentToNext(this._current++); };
    return SwiftIterator;
}());
//{Self:SNA2, T: {Self:SNA1, T: String}}
function _clarifyGenerics(Class) {
    var _a;
    if (!Class.Self)
        return Class;
    var result = Class.Self;
    for (var genericKey in Class) {
        if (genericKey === 'Self')
            continue;
        var genericType = _clarifyGenerics(Class[genericKey]);
        for (var key in result) {
            if (!(result[key] instanceof Object) || result[key].$genericType !== genericKey)
                continue;
            var resultType = genericType;
            if (result[key].$subchain) {
                var subchain = result[key].$subchain.split('.');
                for (var _i = 0, subchain_1 = subchain; _i < subchain_1.length; _i++) {
                    var elem = subchain_1[_i];
                    resultType = resultType[elem];
                }
            }
            result = __assign({}, result, (_a = {}, _a[key] = resultType, _a));
        }
    }
    return result;
}
function _cloneStruct(obj) {
    if (!(obj instanceof Object) || !obj.constructor.$struct)
        return obj;
    var cloned = new obj.constructor();
    if (obj.cloneStructFill) {
        cloned.cloneStructFill(null, obj);
    }
    else {
        for (var prop in obj) {
            if (!obj.hasOwnProperty(prop))
                continue;
            cloned[prop] = _cloneStruct(obj[prop]);
        }
    }
    return cloned;
}
function _create(Class, signature, $info) {
    var params = [];
    for (var _i = 3; _i < arguments.length; _i++) {
        params[_i - 3] = arguments[_i];
    }
    params.unshift($info);
    var obj;
    if (Class.$mixin) {
        if (!Class.prototype[signature])
            throw "unsupported signature " + signature + " for " + Class;
        obj = Class.prototype[signature].apply(null, params);
        if (obj == null)
            throw "unsupported signature " + signature + " for " + Class;
        obj['$info' + Class.$infoAddress] = $info;
    }
    else {
        obj = new Class();
        obj['$info' + Class.$infoAddress] = $info;
        obj[signature].apply(obj, params);
    }
    if (obj.$failed)
        return null;
    obj.$initialized = true;
    return obj;
}
function _findStringSwitchCaseCasesString($info, cases, string) { return cases.indexOf(string); }
function _mixin(dest, source, shouldOverride) {
    var properties = Object.getOwnPropertyNames(source.prototype);
    for (var _i = 0, properties_1 = properties; _i < properties_1.length; _i++) {
        var name = properties_1[_i];
        if (name == 'constructor')
            continue;
        if (shouldOverride || !(name in dest.prototype)) {
            Object.defineProperty(dest.prototype, name, Object.getOwnPropertyDescriptor(source.prototype, name));
        }
    }
    _mixinStatic(dest, source, shouldOverride);
}
function _mixinStatic(dest, source, shouldOverride) {
    var staticProperties = Object.getOwnPropertyNames(source);
    var commonProperties = Object.getOwnPropertyNames(function () { });
    for (var _i = 0, staticProperties_1 = staticProperties; _i < staticProperties_1.length; _i++) {
        var name = staticProperties_1[_i];
        if (commonProperties.includes(name))
            continue;
        if (shouldOverride || !(name in dest)) {
            Object.defineProperty(dest, name, Object.getOwnPropertyDescriptor(source, name));
        }
    }
}
function _optionalTry(expr) { try {
    return expr();
}
catch (e) {
    return null;
} }
//legacy for _.tmp = ...
var _ = {};
